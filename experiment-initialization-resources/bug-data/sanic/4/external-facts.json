{
    "sanic:4": {
        "github_issue_title": [
            "Improve documentation in *Accessing values using get and getlist*\n",
            "Using request.url_for throws KeyError: 'SERVER_NAME' in 19.9.0\n"
        ],
        "github_issue_description": [
            "Is your feature request related to a problem? Please describe.\nDocumentation here should be improved:\nhttps://sanic.readthedocs.io/en/latest/sanic/request_data.html#accessing-values-using-get-and-getlist\nIt isn't clear how to use get and getlist\n\nDescribe the solution you'd like\nChange\n\nThe request properties which return a dictionary actually return a subclass of dict called RequestParameters.\n\nTo\n\nrequest.args which return a dictionary actually return a subclass of dict called RequestParameters.\n",
            "Describe the bug\nRunning Sanic behind a proxy and trying to generate an url using request.url_for throws a KeyError. This used to work but now Sanic suddenly requires a SERVER_NAME in order to do this. I get the following trace:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.7/site-packages/sanic/app.py\", line 942, in handle_request\n    response = await response\n  File \"/app/tsauth/views/activate.py\", line 41, in init_activate\n    request=request)\n  File \"/usr/local/lib/python3.7/site-packages/mako/template.py\", line 476, in render\n    return runtime._render(self, self.callable_, args, data)\n  File \"/usr/local/lib/python3.7/site-packages/mako/runtime.py\", line 883, in _render\n    **_kwargs_for_callable(callable_, data)\n  File \"/usr/local/lib/python3.7/site-packages/mako/runtime.py\", line 920, in _render_context\n    _exec_template(inherit, lclcontext, args=args, kwargs=kwargs)\n  File \"/usr/local/lib/python3.7/site-packages/mako/runtime.py\", line 947, in _exec_template\n    callable_(context, *args, **kwargs)\n  File \"transaction_mako\", line 60, in render_body\n  File \"/usr/local/lib/python3.7/site-packages/sanic/request.py\", line 522, in url_for\n    if \"//\" in self.app.config.SERVER_NAME:\n  File \"/usr/local/lib/python3.7/site-packages/sanic/config.py\", line 54, in __getattr__\n    raise AttributeError(\"Config has no '{}'\".format(ke.args[0]))\nAttributeError: Config has no 'SERVER_NAME'\n[2019-10-23 12:38:09 +0000] - (sanic.access)[INFO][<redacted>:33328]: GET <redacted>  500 144\n10/23/2019 12:38:09 PM ERROR Exception occurred while handling uri: '<redacted>'\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.7/site-packages/sanic/config.py\", line 52, in __getattr__\n    return self[attr]\nKeyError: 'SERVER_NAME'\nCode snippet\nrequest.url_for(\"static\",  name='static', filename=\"badge.png\")\n\nExpected behavior\nrequest.url_for should generate a full url with the given path, e.g. https://hostname:port/static/badge.png. As I am running my server behind a proxy, I do not want to hardcode the hostname in the SERVER_NAME. This used to work with Sanic version 19.6.3.\n\nEnvironment (please complete the following information):\n\nPython 3.7 Docker container, Kubernetes v1.16.2 with nginx-ingress 0.26.1\nSanic version 19.9.0\nAdditional context\nThe calling code to request.url_for has not changed since the Sanic version update.\nThe documentation also does not speak a word about why the SERVER_NAME variable needs to be configured...\n"
        ]
    }
}