{
    "sanic:1": {
        "github_issue_title": [
            "\"Named Response Middleware\" executed in wrong order\n"
        ],
        "github_issue_description": [
            "Describe the bug\nPR #1690 Introduced \"named response middlware\" that is, middleware which is only executed in a given request context. For example a blueprint middleware is only executed on a route which is defined in that blueprint.\nThere was a copy+paste error in the register_named_middleware function, here: https://github.com/huge-success/sanic/blob/e7001b00747b659f7042b0534802b936ee8a53e0/sanic/app.py#L656\nWhen registering a \"response\" middleware, they are supposed to be added to the left in reverse. So appendleft() should be used instead of append(). The correct behavior is seen in the normal register_middleware function.\n\nCode snippet\nSee these two examples, the first using normal middleware, and the second using named middleware:\n\nfrom sanic import Sanic\nfrom sanic.response import text\napp = Sanic(__name__)\n\n@app.middleware('request')\ndef request_middleware_1(request):\n    print('1')\n\n@app.middleware('request')\ndef request_middleware_2(request):\n    print('2')\n\n@app.middleware('request')\ndef request_middleware_3(request):\n    print('3')\n\n@app.middleware('response')\ndef resp_middleware_4(request, response):\n    print('4')\n\n@app.middleware('response')\ndef resp_middleware_5(request, response):\n    print('5')\n\n@app.middleware('response')\ndef resp_middleware_6(request, response):\n    print('6')\n\n@app.route('/')\ndef pop_handler(request):\n    return text('hello world')\n\napp.run(host=\"0.0.0.0\", port=8000, debug=True, auto_reload=False)\nvs:\n\nfrom sanic import Sanic, Blueprint\nfrom sanic.response import text\n\napp = Sanic(__name__)\nbp = Blueprint(\"bp_\"+__name__)\n\n@bp.middleware('request')\ndef request_middleware_1(request):\n    print('1')\n\n@bp.middleware('request')\ndef request_middleware_2(request):\n    print('2')\n\n@bp.middleware('request')\ndef request_middleware_3(request):\n    print('3')\n\n@bp.middleware('response')\ndef resp_middleware_4(request, response):\n    print('4')\n\n@bp.middleware('response')\ndef resp_middleware_5(request, response):\n    print('5')\n\n@bp.middleware('response')\ndef resp_middleware_6(request, response):\n    print('6')\n\n@bp.route('/')\ndef pop_handler(request):\n    return text('hello world')\n\napp.blueprint(bp, url_prefix='/bp')\n\napp.run(host=\"0.0.0.0\", port=8000, debug=True, auto_reload=False)\nExpected behavior\nSee the first snippet prints \"1 2 3 6 5 4\" (correct) but the second snippet prints \"1 2 3 4 5 6\". This should match the first.\n"
        ]
    }
}