{
    "thefuck:4": {
        "github_issue_title": [
            "Not Running in Fish Shell\n"
        ],
        "github_issue_description": [
            "The output of thefuck --version (something like The Fuck 3.1 using Python 3.5.0):\n\nThe Fuck 3.26 using Python 3.6.5\n\nYour shell and its version (bash, zsh, Windows PowerShell, etc.):\n\nFish v2.7.1 (works fine in Bash)\n\nYour system (Debian 7, ArchLinux, Windows, etc.):\n\nmacOS 10.13.5 Beta (17F45c)\n\nHow to reproduce the bug:\n\nRun 'fuck' command after entering any incorrect command in Fish shell.\n\nThe output of The Fuck with THEFUCK_DEBUG=true exported (typically execute export THEFUCK_DEBUG=true in your shell before The Fuck):\n\nDEBUG: Run with settings: {'alter_history': True,\n 'debug': True,\n 'env': {'GIT_TRACE': '1', 'LANG': 'C', 'LC_ALL': 'C'},\n 'exclude_rules': [],\n 'history_limit': None,\n 'instant_mode': False,\n 'no_colors': False,\n 'priority': {},\n 'repeat': False,\n 'require_confirmation': True,\n 'rules': [<const: All rules enabled>],\n 'slow_commands': ['lein', 'react-native', 'gradle', './gradlew', 'vagrant'],\n 'user_dir': PosixPath('/Users/user/.config/thefuck'),\n 'wait_command': 3,\n 'wait_slow_command': 15}\nDEBUG: Total took: 0:00:00.296931\nTraceback (most recent call last):\n  File \"/usr/local/bin/thefuck\", line 12, in <module>\n    sys.exit(main())\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/entrypoints/main.py\", line 25, in main\n    fix_command(known_args)\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/entrypoints/fix_command.py\", line 36, in fix_command\n    command = types.Command.from_raw_script(raw_command)\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/types.py\", line 81, in from_raw_script\n    expanded = shell.from_shell(script)\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/shells/generic.py\", line 30, in from_shell\n    return self._expand_aliases(command_script)\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/shells/fish.py\", line 65, in _expand_aliases\n    aliases = self.get_aliases()\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/shells/fish.py\", line 60, in get_aliases\n    raw_aliases = _get_aliases(overridden)\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/utils.py\", line 33, in wrapper\n    memo[key] = fn(*args, **kwargs)\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/utils.py\", line 267, in wrapper\n    return _cache.get_value(fn, depends_on, args, kwargs)\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/utils.py\", line 243, in get_value\n    value = fn(*args, **kwargs)\n  File \"/usr/local/Cellar/thefuck/3.26/libexec/lib/python3.6/site-packages/thefuck/shells/fish.py\", line 25, in _get_aliases\n    name, value = alias.replace('alias ', '', 1).split(' ', 1)\nValueError: not enough values to unpack (expected 2, got 1)\nIf the bug only appears with a specific application, the output of that application and its version:\n\nN/A\n\nAnything else you think is relevant:\n\nN/A\n"
        ]
    }
}