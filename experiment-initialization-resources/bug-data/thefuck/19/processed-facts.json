{
    "1.1.1": "@git_support\ndef get_new_command(command):\n    return replace_argument(command.script, 'push', 'push --force')\n",
    "1.1.2": null,
    "1.2.1": "thefuck/rules/git_push_force.py",
    "1.2.2": "from thefuck.utils import replace_argument\nfrom thefuck.specific.git import git_support",
    "1.3.1": null,
    "1.3.2": null,
    "1.4.1": null,
    "1.4.2": null,
    "1.5.1": [
        "@pytest.mark.parametrize('command, output', [\n    (Command(script='git push', stderr=git_err), 'git push --force-with-lease'),\n    (Command(script='git push nvbn', stderr=git_err), 'git push --force-with-lease nvbn'),\n    (Command(script='git push nvbn master', stderr=git_err), 'git push --force-with-lease nvbn master')])\ndef test_get_new_command(command, output):\n    assert get_new_command(command) == output",
        "@pytest.mark.parametrize('command, output', [\n    (Command(script='git push', stderr=git_err), 'git push --force-with-lease'),\n    (Command(script='git push nvbn', stderr=git_err), 'git push --force-with-lease nvbn'),\n    (Command(script='git push nvbn master', stderr=git_err), 'git push --force-with-lease nvbn master')])\ndef test_get_new_command(command, output):\n    assert get_new_command(command) == output",
        "@pytest.mark.parametrize('command, output', [\n    (Command(script='git push', stderr=git_err), 'git push --force-with-lease'),\n    (Command(script='git push nvbn', stderr=git_err), 'git push --force-with-lease nvbn'),\n    (Command(script='git push nvbn master', stderr=git_err), 'git push --force-with-lease nvbn master')])\ndef test_get_new_command(command, output):\n    assert get_new_command(command) == output"
    ],
    "1.5.2": [
        "tests/rules/test_git_push_force.py",
        "tests/rules/test_git_push_force.py",
        "tests/rules/test_git_push_force.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: assert 'git push --force' == 'git push --force-with-lease'\nE         - git push --force\nE         + git push --force-with-lease"
        ],
        [
            "E       AssertionError: assert 'git push --force nvbn' == 'git push --force-with-lease nvbn'\nE         - git push --force nvbn\nE         + git push --force-with-lease nvbn\nE         ?                 +++++++++++"
        ],
        [
            "E       AssertionError: assert 'git push --force nvbn master' == 'git push --fo...e nvbn master'\nE         - git push --force nvbn master\nE         + git push --force-with-lease nvbn master\nE         ?                 +++++++++++"
        ]
    ],
    "2.1.2": [
        [
            "command = Command(script=git push, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forward)\n error:...nt: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)\noutput = 'git push --force-with-lease'\n\n    @pytest.mark.parametrize('command, output', [\n        (Command(script='git push', stderr=git_err), 'git push --force-with-lease'),\n        (Command(script='git push nvbn', stderr=git_err), 'git push --force-with-lease nvbn'),\n        (Command(script='git push nvbn master', stderr=git_err), 'git push --force-with-lease nvbn master')])\n    def test_get_new_command(command, output):\n>       assert get_new_command(command) == output",
            "\ntests/rules/test_git_push_force.py:52: AssertionError"
        ],
        [
            "command = Command(script=git push nvbn, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forward)\n e...nt: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)\noutput = 'git push --force-with-lease nvbn'\n\n    @pytest.mark.parametrize('command, output', [\n        (Command(script='git push', stderr=git_err), 'git push --force-with-lease'),\n        (Command(script='git push nvbn', stderr=git_err), 'git push --force-with-lease nvbn'),\n        (Command(script='git push nvbn master', stderr=git_err), 'git push --force-with-lease nvbn master')])\n    def test_get_new_command(command, output):\n>       assert get_new_command(command) == output",
            "\ntests/rules/test_git_push_force.py:52: AssertionError"
        ],
        [
            "command = Command(script=git push nvbn master, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forw...nt: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)\noutput = 'git push --force-with-lease nvbn master'\n\n    @pytest.mark.parametrize('command, output', [\n        (Command(script='git push', stderr=git_err), 'git push --force-with-lease'),\n        (Command(script='git push nvbn', stderr=git_err), 'git push --force-with-lease nvbn'),\n        (Command(script='git push nvbn master', stderr=git_err), 'git push --force-with-lease nvbn master')])\n    def test_get_new_command(command, output):\n>       assert get_new_command(command) == output",
            "\ntests/rules/test_git_push_force.py:52: AssertionError"
        ]
    ],
    "2.2.1": [
        [
            {
                "command.script": {
                    "value": "'git push'",
                    "shape": "8",
                    "omitted": false
                },
                "command": {
                    "value": "Command(script=git push, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forward)\n error: failed to push some refs to '/tmp/bar'\n hint: Updates were rejected because the tip of your current branch is behind\n hint: its remote counterpart. Integrate the remote changes (e.g.\n hint: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)",
                    "shape": null,
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "command.script": {
                    "value": "'git push nvbn'",
                    "shape": "13",
                    "omitted": false
                },
                "command": {
                    "value": "Command(script=git push nvbn, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forward)\n error: failed to push some refs to '/tmp/bar'\n hint: Updates were rejected because the tip of your current branch is behind\n hint: its remote counterpart. Integrate the remote changes (e.g.\n hint: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)",
                    "shape": null,
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "command.script": {
                    "value": "'git push nvbn master'",
                    "shape": "20",
                    "omitted": false
                },
                "command": {
                    "value": "Command(script=git push nvbn master, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forward)\n error: failed to push some refs to '/tmp/bar'\n hint: Updates were rejected because the tip of your current branch is behind\n hint: its remote counterpart. Integrate the remote changes (e.g.\n hint: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)",
                    "shape": null,
                    "omitted": false
                }
            },
            {}
        ]
    ],
    "2.2.2": [
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ]
    ],
    "2.3.1": [
        [
            {
                "command.script": {
                    "value": "'git push'",
                    "shape": "8",
                    "omitted": false
                },
                "command": {
                    "value": "Command(script=git push, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forward)\n error: failed to push some refs to '/tmp/bar'\n hint: Updates were rejected because the tip of your current branch is behind\n hint: its remote counterpart. Integrate the remote changes (e.g.\n hint: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)",
                    "shape": null,
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "command.script": {
                    "value": "'git push nvbn'",
                    "shape": "13",
                    "omitted": false
                },
                "command": {
                    "value": "Command(script=git push nvbn, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forward)\n error: failed to push some refs to '/tmp/bar'\n hint: Updates were rejected because the tip of your current branch is behind\n hint: its remote counterpart. Integrate the remote changes (e.g.\n hint: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)",
                    "shape": null,
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "command.script": {
                    "value": "'git push nvbn master'",
                    "shape": "20",
                    "omitted": false
                },
                "command": {
                    "value": "Command(script=git push nvbn master, stdout=, stderr=\nTo /tmp/foo\n ! [rejected]        master -> master (non-fast-forward)\n error: failed to push some refs to '/tmp/bar'\n hint: Updates were rejected because the tip of your current branch is behind\n hint: its remote counterpart. Integrate the remote changes (e.g.\n hint: 'git pull ...') before pushing again.\n hint: See the 'Note about fast-forwards' in 'git push --help' for details.\n)",
                    "shape": null,
                    "omitted": false
                }
            },
            {}
        ]
    ],
    "2.3.2": [
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}