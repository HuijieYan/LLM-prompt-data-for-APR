{
    "thefuck:27": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_27/thefuck/rules/open.py": {
            "buggy_functions": [
                {
                    "function_name": "get_new_command",
                    "function_code": "def get_new_command(command, settings):\n    return 'open http://' + command.script[5:]\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 25,
                    "end_line": 26,
                    "variables": {
                        "command.script": [
                            26
                        ],
                        "command": [
                            26
                        ]
                    },
                    "filtered_variables": {
                        "command.script": [
                            26
                        ],
                        "command": [
                            26
                        ]
                    },
                    "diff_line_number": 26,
                    "class_data": null,
                    "used_imports": [],
                    "variable_values": [
                        [
                            {
                                "command.script": {
                                    "variable_value": "'open foo.com'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.com', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'open foo.com'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.com', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script": {
                                    "variable_value": "'open foo.ly'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.ly', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'open foo.ly'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.ly', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script": {
                                    "variable_value": "'open foo.org'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.org', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'open foo.org'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.org', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script": {
                                    "variable_value": "'open foo.net'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.net', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'open foo.net'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.net', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script": {
                                    "variable_value": "'open foo.se'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.se', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'open foo.se'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.se', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script": {
                                    "variable_value": "'open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script": {
                                    "variable_value": "'xdg-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "command": {
                                    "variable_value": "Command(script='xdg-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'xdg-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "command": {
                                    "variable_value": "Command(script='xdg-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script": {
                                    "variable_value": "'gnome-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "command": {
                                    "variable_value": "Command(script='gnome-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'gnome-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "command": {
                                    "variable_value": "Command(script='gnome-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script": {
                                    "variable_value": "'kde-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "command": {
                                    "variable_value": "Command(script='kde-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script": {
                                    "variable_value": "'kde-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "command": {
                                    "variable_value": "Command(script='kde-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.com'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.com', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.com'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.com', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.ly'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.ly', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.ly'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.ly', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.org'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.org', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.org'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.org', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.net'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.net', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.net'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.net', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.se'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.se', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.se'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.se', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'xdg-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "command": {
                                    "variable_value": "Command(script='xdg-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'xdg-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "command": {
                                    "variable_value": "Command(script='xdg-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'gnome-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "command": {
                                    "variable_value": "Command(script='gnome-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'gnome-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "command": {
                                    "variable_value": "Command(script='gnome-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'kde-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "command": {
                                    "variable_value": "Command(script='kde-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'kde-open foo.io'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "command": {
                                    "variable_value": "Command(script='kde-open foo.io', stdout='', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": {
                "file_scope_functions": [
                    {
                        "code": "def match(command, settings):\n    return (command.script.startswith(('open', 'xdg-open', 'gnome-open', 'kde-open'))\n            and (\n                '.com' in command.script\n                or '.net' in command.script\n                or '.org' in command.script\n                or '.ly' in command.script\n                or '.io' in command.script\n                or '.se' in command.script\n                or '.edu' in command.script\n                or '.info' in command.script\n                or '.me' in command.script\n                or 'www.' in command.script))",
                        "signature": "match(command, settings)"
                    },
                    {
                        "code": "def get_new_command(command, settings):\n    return 'open http://' + command.script[5:]",
                        "signature": "get_new_command(command, settings)"
                    }
                ],
                "file_scope_classes": []
            },
            "variables_in_file": {
                "command.script.startswith": [
                    11
                ],
                "command.script": [
                    11,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    26
                ],
                "command": [
                    11,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    26
                ]
            },
            "filtered_variables_in_file": {
                "command.script.startswith": [
                    11
                ],
                "command.script": [
                    11,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    26
                ],
                "command": [
                    11,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    26
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_27/tests/rules/test_open.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command('open foo.com'), 'open http://foo.com'),\n    (Command('open foo.ly'), 'open http://foo.ly'),\n    (Command('open foo.org'), 'open http://foo.org'),\n    (Command('open foo.net'), 'open http://foo.net'),\n    (Command('open foo.se'), 'open http://foo.se'),\n    (Command('open foo.io'), 'open http://foo.io'),\n    (Command('xdg-open foo.io'), 'xdg-open http://foo.io'),\n    (Command('gnome-open foo.io'), 'gnome-open http://foo.io'),\n    (Command('kde-open foo.io'), 'kde-open http://foo.io')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command",
                "test_error": "AssertionError: assert 'open http://pen foo.io' == 'xdg-open http://foo.io'   - open http://pen foo.io   ?             ----   + xdg-open http://foo.io   ? ++++",
                "full_test_error": "command = Command(script='xdg-open foo.io', stdout='', stderr='')\nnew_command = 'xdg-open http://foo.io'\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('open foo.com'), 'open http://foo.com'),\n        (Command('open foo.ly'), 'open http://foo.ly'),\n        (Command('open foo.org'), 'open http://foo.org'),\n        (Command('open foo.net'), 'open http://foo.net'),\n        (Command('open foo.se'), 'open http://foo.se'),\n        (Command('open foo.io'), 'open http://foo.io'),\n        (Command('xdg-open foo.io'), 'xdg-open http://foo.io'),\n        (Command('gnome-open foo.io'), 'gnome-open http://foo.io'),\n        (Command('kde-open foo.io'), 'kde-open http://foo.io')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command\nE       AssertionError: assert 'open http://pen foo.io' == 'xdg-open http://foo.io'\nE         - open http://pen foo.io\nE         ?             ----\nE         + xdg-open http://foo.io\nE         ? ++++\n\ntests/rules/test_open.py:31: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command('open foo.com'), 'open http://foo.com'), (Command('open foo.ly'), 'open http://foo.ly'), (Command('open foo.org'), 'open http://foo.org'), (Command('open foo.net'), 'open http://foo.net'), (Command('open foo.se'), 'open http://foo.se'), (Command('open foo.io'), 'open http://foo.io'), (Command('xdg-open foo.io'), 'xdg-open http://foo.io'), (Command('gnome-open foo.io'), 'gnome-open http://foo.io'), (Command('kde-open foo.io'), 'kde-open http://foo.io')])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_27/tests/rules/test_open.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command('open foo.com'), 'open http://foo.com'),\n    (Command('open foo.ly'), 'open http://foo.ly'),\n    (Command('open foo.org'), 'open http://foo.org'),\n    (Command('open foo.net'), 'open http://foo.net'),\n    (Command('open foo.se'), 'open http://foo.se'),\n    (Command('open foo.io'), 'open http://foo.io'),\n    (Command('xdg-open foo.io'), 'xdg-open http://foo.io'),\n    (Command('gnome-open foo.io'), 'gnome-open http://foo.io'),\n    (Command('kde-open foo.io'), 'kde-open http://foo.io')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command",
                "test_error": "AssertionError: assert 'open http://-open foo.io' == 'gnome-open http://foo.io'   - open http://-open foo.io   ?             ------   + gnome-open http://foo.io   ? ++++++",
                "full_test_error": "command = Command(script='gnome-open foo.io', stdout='', stderr='')\nnew_command = 'gnome-open http://foo.io'\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('open foo.com'), 'open http://foo.com'),\n        (Command('open foo.ly'), 'open http://foo.ly'),\n        (Command('open foo.org'), 'open http://foo.org'),\n        (Command('open foo.net'), 'open http://foo.net'),\n        (Command('open foo.se'), 'open http://foo.se'),\n        (Command('open foo.io'), 'open http://foo.io'),\n        (Command('xdg-open foo.io'), 'xdg-open http://foo.io'),\n        (Command('gnome-open foo.io'), 'gnome-open http://foo.io'),\n        (Command('kde-open foo.io'), 'kde-open http://foo.io')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command\nE       AssertionError: assert 'open http://-open foo.io' == 'gnome-open http://foo.io'\nE         - open http://-open foo.io\nE         ?             ------\nE         + gnome-open http://foo.io\nE         ? ++++++\n\ntests/rules/test_open.py:31: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command('open foo.com'), 'open http://foo.com'), (Command('open foo.ly'), 'open http://foo.ly'), (Command('open foo.org'), 'open http://foo.org'), (Command('open foo.net'), 'open http://foo.net'), (Command('open foo.se'), 'open http://foo.se'), (Command('open foo.io'), 'open http://foo.io'), (Command('xdg-open foo.io'), 'xdg-open http://foo.io'), (Command('gnome-open foo.io'), 'gnome-open http://foo.io'), (Command('kde-open foo.io'), 'kde-open http://foo.io')])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_27/tests/rules/test_open.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command('open foo.com'), 'open http://foo.com'),\n    (Command('open foo.ly'), 'open http://foo.ly'),\n    (Command('open foo.org'), 'open http://foo.org'),\n    (Command('open foo.net'), 'open http://foo.net'),\n    (Command('open foo.se'), 'open http://foo.se'),\n    (Command('open foo.io'), 'open http://foo.io'),\n    (Command('xdg-open foo.io'), 'xdg-open http://foo.io'),\n    (Command('gnome-open foo.io'), 'gnome-open http://foo.io'),\n    (Command('kde-open foo.io'), 'kde-open http://foo.io')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command",
                "test_error": "AssertionError: assert 'open http://pen foo.io' == 'kde-open http://foo.io'   - open http://pen foo.io   ?             ----   + kde-open http://foo.io   ? ++++",
                "full_test_error": "command = Command(script='kde-open foo.io', stdout='', stderr='')\nnew_command = 'kde-open http://foo.io'\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('open foo.com'), 'open http://foo.com'),\n        (Command('open foo.ly'), 'open http://foo.ly'),\n        (Command('open foo.org'), 'open http://foo.org'),\n        (Command('open foo.net'), 'open http://foo.net'),\n        (Command('open foo.se'), 'open http://foo.se'),\n        (Command('open foo.io'), 'open http://foo.io'),\n        (Command('xdg-open foo.io'), 'xdg-open http://foo.io'),\n        (Command('gnome-open foo.io'), 'gnome-open http://foo.io'),\n        (Command('kde-open foo.io'), 'kde-open http://foo.io')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command\nE       AssertionError: assert 'open http://pen foo.io' == 'kde-open http://foo.io'\nE         - open http://pen foo.io\nE         ?             ----\nE         + kde-open http://foo.io\nE         ? ++++\n\ntests/rules/test_open.py:31: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command('open foo.com'), 'open http://foo.com'), (Command('open foo.ly'), 'open http://foo.ly'), (Command('open foo.org'), 'open http://foo.org'), (Command('open foo.net'), 'open http://foo.net'), (Command('open foo.se'), 'open http://foo.se'), (Command('open foo.io'), 'open http://foo.io'), (Command('xdg-open foo.io'), 'xdg-open http://foo.io'), (Command('gnome-open foo.io'), 'gnome-open http://foo.io'), (Command('kde-open foo.io'), 'kde-open http://foo.io')])"
                ]
            }
        ]
    }
}