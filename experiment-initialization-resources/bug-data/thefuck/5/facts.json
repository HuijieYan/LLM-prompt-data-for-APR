{
    "1.1.1": "@git_support\ndef match(command):\n    return ('push' in command.script_parts\n            and 'set-upstream' in command.output)\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "thefuck/rules/git_push.py",
    "1.3.2": null,
    "1.4.1": [
        "def test_match_bitbucket(output_bitbucket):\n    assert not match(Command('git push origin', output_bitbucket))"
    ],
    "1.4.2": [
        "tests/rules/test_git_push.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: assert not True\nE        +  where True = match(Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for f...m -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n))\nE        +    where Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for f...m -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n) = Command('git push origin', 'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   http...-> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n')"
        ]
    ],
    "2.1.2": [
        [
            "output_bitbucket = 'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   http...-> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n'\n\n    def test_match_bitbucket(output_bitbucket):\n>       assert not match(Command('git push origin', output_bitbucket))",
            "\ntests/rules/test_git_push.py:39: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "command.script_parts": {
                    "value": "['git', 'push', 'origin']",
                    "shape": "3",
                    "omitted": false
                },
                "command": {
                    "value": "Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\nremote:\nremote: Create pull request for feature/set-upstream:\nremote:   https://bitbucket.org/set-upstream\nremote:\nTo git@bitbucket.org:test.git\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\n)",
                    "shape": null,
                    "omitted": false
                },
                "command.output": {
                    "value": "'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   https://bitbucket.org/set-upstream\\nremote:\\nTo git@bitbucket.org:test.git\\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n'",
                    "shape": "341",
                    "omitted": false
                }
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "command.script_parts": "list",
                "command": "Command",
                "command.output": "str"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "command.script_parts": {
                    "value": "['git', 'push', 'origin']",
                    "shape": "3",
                    "omitted": false
                },
                "command": {
                    "value": "Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\nremote:\nremote: Create pull request for feature/set-upstream:\nremote:   https://bitbucket.org/set-upstream\nremote:\nTo git@bitbucket.org:test.git\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\n)",
                    "shape": null,
                    "omitted": false
                },
                "command.output": {
                    "value": "'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   https://bitbucket.org/set-upstream\\nremote:\\nTo git@bitbucket.org:test.git\\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n'",
                    "shape": "341",
                    "omitted": false
                }
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "command.script_parts": "list",
                "command": "Command",
                "command.output": "str"
            },
            {}
        ]
    ],
    "3.1.1": [
        "Crash in git module\n"
    ],
    "3.1.2": [
        "I was pushing a branch, and executed fuck afterwards. Here is the stacktrace:\n\n  File \"/usr/local/bin/thefuck\", line 11, in <module>\n    sys.exit(main())\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/entrypoints/main.py\", line 26, in main\n    fix_command(known_args)\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/entrypoints/fix_command.py\", line 42, in fix_command\n    selected_command = select_command(corrected_commands)\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/ui.py\", line 71, in select_command\n    selector = CommandSelector(corrected_commands)\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/ui.py\", line 34, in __init__\n    self._commands = [next(self._commands_gen)]\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/corrector.py\", line 43, in organize_commands\n    first_command = next(corrected_commands)\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/corrector.py\", line 74, in <genexpr>\n    for corrected in rule.get_corrected_commands(command))\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/types.py\", line 189, in get_corrected_commands\n    new_commands = self.get_new_command(command)\n  File \"<decorator-gen-104>\", line 2, in get_new_command\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/specific/git.py\", line 32, in git_support\n    return fn(command)\n  File \"/usr/local/lib/python3.5/dist-packages/thefuck/rules/git_push.py\", line 36, in get_new_command\n    arguments = re.findall(r'git push (.*)', command.output)[0].strip()\nIndexError: list index out of range\nThis is the output from the command before (which was only git push):\n\nTotal 0 (delta 0), reused 0 (delta 0)\nremote: \nremote: Create pull request for feature/[...]:\nremote:   https://bitbucket.org/[...]\nremote: \nTo git@bitbucket.org:[...].git\n   e5e7fbb..700d998  feature/[...] -> feature/[...]\nBranch feature/[...] set up to track remote branch feature/[...] from origin.\n"
    ],
    "used_imports": "from thefuck.specific.git import git_support"
}