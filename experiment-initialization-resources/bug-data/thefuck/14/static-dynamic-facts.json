{
    "thefuck:14": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_14/thefuck/shells/fish.py": {
            "buggy_functions": [
                {
                    "function_name": "_get_overridden_aliases",
                    "function_code": "def _get_overridden_aliases(self):\n    overridden_aliases = os.environ.get('TF_OVERRIDDEN_ALIASES', '').strip()\n    if overridden_aliases:\n        return [alias.strip() for alias in overridden_aliases.split(',')]\n    else:\n        return ['cd', 'grep', 'ls', 'man', 'open']\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 9,
                    "end_line": 14,
                    "variables": {
                        "overridden_aliases": [
                            10,
                            11,
                            12
                        ],
                        "strip": [
                            10
                        ],
                        "os.environ.get": [
                            10
                        ],
                        "os.environ": [
                            10
                        ],
                        "os": [
                            10
                        ],
                        "alias.strip": [
                            12
                        ],
                        "alias": [
                            12
                        ],
                        "overridden_aliases.split": [
                            12
                        ]
                    },
                    "filtered_variables": {
                        "overridden_aliases": [
                            10,
                            11,
                            12
                        ],
                        "strip": [
                            10
                        ],
                        "os.environ.get": [
                            10
                        ],
                        "os.environ": [
                            10
                        ],
                        "os": [
                            10
                        ],
                        "alias.strip": [
                            12
                        ],
                        "alias": [
                            12
                        ],
                        "overridden_aliases.split": [
                            12
                        ]
                    },
                    "diff_line_number": 10,
                    "class_data": {
                        "signature": "class Fish(Generic)",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def _get_overridden_aliases(self):\n    overridden_aliases = os.environ.get('TF_OVERRIDDEN_ALIASES', '').strip()\n    if overridden_aliases:\n        return [alias.strip() for alias in overridden_aliases.split(',')]\n    else:\n        return ['cd', 'grep', 'ls', 'man', 'open']",
                            "def app_alias(self, fuck):\n    return 'function {0} -d \"Correct your previous console command\"\\n  set -l fucked_up_command $history[1]\\n  env TF_ALIAS={0} PYTHONIOENCODING=utf-8 thefuck $fucked_up_command | read -l unfucked_command\\n  if [ \"$unfucked_command\" != \"\" ]\\n    eval $unfucked_command\\n    history --delete $fucked_up_command\\n    history --merge ^ /dev/null\\n  end\\nend'.format(fuck)",
                            "@memoize\n@cache('.config/fish/config.fish', '.config/fish/functions')\ndef get_aliases(self):\n    overridden = self._get_overridden_aliases()\n    proc = Popen(['fish', '-ic', 'functions'], stdout=PIPE, stderr=DEVNULL)\n    functions = proc.stdout.read().decode('utf-8').strip().split('\\n')\n    return {func: func for func in functions if func not in overridden}",
                            "def _expand_aliases(self, command_script):\n    aliases = self.get_aliases()\n    binary = command_script.split(' ')[0]\n    if binary in aliases:\n        return u'fish -ic \"{}\"'.format(command_script.replace('\"', '\\\\\"'))\n    else:\n        return command_script",
                            "def from_shell(self, command_script):\n    \"\"\"Prepares command before running in app.\"\"\"\n    return self._expand_aliases(command_script)",
                            "def _get_history_file_name(self):\n    return os.path.expanduser('~/.config/fish/fish_history')",
                            "def _get_history_line(self, command_script):\n    return u'- cmd: {}\\n   when: {}\\n'.format(command_script, int(time()))",
                            "def _script_from_history(self, line):\n    if '- cmd: ' in line:\n        return line.split('- cmd: ', 1)[1]\n    else:\n        return ''",
                            "def and_(self, *commands):\n    return u'; and '.join(commands)",
                            "def how_to_configure(self):\n    return (\"eval (thefuck --alias | tr '\\\\n' ';')\", '~/.config/fish/config.fish')"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "_get_overridden_aliases(self)",
                            "app_alias(self, fuck)",
                            "get_aliases(self)",
                            "_expand_aliases(self, command_script)",
                            "from_shell(self, command_script)",
                            "_get_history_file_name(self)",
                            "_get_history_line(self, command_script)",
                            "_script_from_history(self, line)",
                            "and_(self, *commands)",
                            "how_to_configure(self)"
                        ],
                        "class_level_variable_names": [],
                        "constructor_variable_names": []
                    },
                    "used_imports": [
                        "import os"
                    ],
                    "variable_values": [
                        [
                            {
                                "overridden_aliases": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "overridden_aliases.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "overridden_aliases": {
                                    "variable_value": "'cut,git,sed'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "overridden_aliases.split": {
                                    "variable_value": "<built-in method split of str object at 0x7fea042b82f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "overridden_aliases": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "overridden_aliases.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "overridden_aliases": {
                                    "variable_value": "'cut, git, sed'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "overridden_aliases.split": {
                                    "variable_value": "<built-in method split of str object at 0x7fea042b8330>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "overridden_aliases": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "overridden_aliases.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "overridden_aliases": {
                                    "variable_value": "'cut,\\tgit,sed'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "overridden_aliases.split": {
                                    "variable_value": "<built-in method split of str object at 0x7fea031d9d70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "overridden_aliases": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "overridden_aliases.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "overridden_aliases": {
                                    "variable_value": "'cut,\\n\\ngit,\\tsed'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "overridden_aliases.split": {
                                    "variable_value": "<built-in method split of str object at 0x7fea031f8c30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default.add": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "default": {
                                    "variable_value": "{'open', 'man', 'ls', 'sed', 'cd', 'grep', 'cut', 'git'}",
                                    "variable_type": "set",
                                    "variable_shape": "8"
                                },
                                "alias": {
                                    "variable_value": "'sed'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default.add": {
                                    "variable_value": "<built-in method add of set object at 0x7f89f6fa1e60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x7f89f5cb6bb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default.add": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "default": {
                                    "variable_value": "{'open', 'man', 'ls', 'sed', 'cd', 'grep', 'cut', 'git'}",
                                    "variable_type": "set",
                                    "variable_shape": "8"
                                },
                                "alias": {
                                    "variable_value": "' sed'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default.add": {
                                    "variable_value": "<built-in method add of set object at 0x7f89f6fa1e60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x7f89f5c562b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default.add": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "default": {
                                    "variable_value": "{'open', 'man', 'ls', 'sed', 'cd', 'grep', 'cut', 'git'}",
                                    "variable_type": "set",
                                    "variable_shape": "8"
                                },
                                "alias": {
                                    "variable_value": "'sed\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default.add": {
                                    "variable_value": "<built-in method add of set object at 0x7f89f5f48500>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x7f89f5c6bf30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default.add": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "default": {
                                    "variable_value": "{'open', 'man', 'ls', 'sed', 'cd', 'grep', 'cut', 'git'}",
                                    "variable_type": "set",
                                    "variable_shape": "8"
                                },
                                "alias": {
                                    "variable_value": "'\\tsed\\r'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default.add": {
                                    "variable_value": "<built-in method add of set object at 0x7f89f6fa1e60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "alias.strip": {
                                    "variable_value": "<built-in method strip of str object at 0x7f89f5c7c2b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _get_overridden_aliases(self):\n    overridden_aliases = os.environ.get('TF_OVERRIDDEN_ALIASES', '').strip()\n    if overridden_aliases:\n        return [alias.strip() for alias in overridden_aliases.split(',')]\n    else:\n        return ['cd', 'grep', 'ls', 'man', 'open']",
                "def app_alias(self, fuck):\n    # It is VERY important to have the variables declared WITHIN the alias\n    return ('function {0} -d \"Correct your previous console command\"\\n'\n            '  set -l fucked_up_command $history[1]\\n'\n            '  env TF_ALIAS={0} PYTHONIOENCODING=utf-8'\n            ' thefuck $fucked_up_command | read -l unfucked_command\\n'\n            '  if [ \"$unfucked_command\" != \"\" ]\\n'\n            '    eval $unfucked_command\\n'\n            '    history --delete $fucked_up_command\\n'\n            '    history --merge ^ /dev/null\\n'\n            '  end\\n'\n            'end').format(fuck)",
                "@memoize\n@cache('.config/fish/config.fish', '.config/fish/functions')\ndef get_aliases(self):\n    overridden = self._get_overridden_aliases()\n    proc = Popen(['fish', '-ic', 'functions'], stdout=PIPE, stderr=DEVNULL)\n    functions = proc.stdout.read().decode('utf-8').strip().split('\\n')\n    return {func: func for func in functions if func not in overridden}",
                "def _expand_aliases(self, command_script):\n    aliases = self.get_aliases()\n    binary = command_script.split(' ')[0]\n    if binary in aliases:\n        return u'fish -ic \"{}\"'.format(command_script.replace('\"', r'\\\"'))\n    else:\n        return command_script",
                "def from_shell(self, command_script):\n    \"\"\"Prepares command before running in app.\"\"\"\n    return self._expand_aliases(command_script)",
                "def _get_history_file_name(self):\n    return os.path.expanduser('~/.config/fish/fish_history')",
                "def _get_history_line(self, command_script):\n    return u'- cmd: {}\\n   when: {}\\n'.format(command_script, int(time()))",
                "def _script_from_history(self, line):\n    if '- cmd: ' in line:\n        return line.split('- cmd: ', 1)[1]\n    else:\n        return ''",
                "def and_(self, *commands):\n    return u'; and '.join(commands)",
                "def how_to_configure(self):\n    return (r\"eval (thefuck --alias | tr '\\n' ';')\",\n            '~/.config/fish/config.fish')"
            ],
            "inscope_function_signatures": [
                "_get_overridden_aliases(self)",
                "app_alias(self, fuck)",
                "get_aliases(self)",
                "_expand_aliases(self, command_script)",
                "from_shell(self, command_script)",
                "_get_history_file_name(self)",
                "_get_history_line(self, command_script)",
                "_script_from_history(self, line)",
                "and_(self, *commands)",
                "how_to_configure(self)"
            ],
            "variables_in_file": {
                "Generic": [
                    8
                ],
                "overridden_aliases": [
                    10,
                    11,
                    12
                ],
                "strip": [
                    10,
                    34
                ],
                "os.environ.get": [
                    10
                ],
                "os.environ": [
                    10
                ],
                "os": [
                    10,
                    50
                ],
                "alias.strip": [
                    12
                ],
                "alias": [
                    12
                ],
                "overridden_aliases.split": [
                    12
                ],
                "format": [
                    41,
                    18,
                    53
                ],
                "fuck": [
                    27
                ],
                "overridden": [
                    32,
                    35
                ],
                "self._get_overridden_aliases": [
                    32
                ],
                "self": [
                    32,
                    38,
                    47
                ],
                "proc": [
                    33,
                    34
                ],
                "Popen": [
                    33
                ],
                "PIPE": [
                    33
                ],
                "DEVNULL": [
                    33
                ],
                "functions": [
                    34,
                    35
                ],
                "split": [
                    34
                ],
                "decode": [
                    34
                ],
                "proc.stdout.read": [
                    34
                ],
                "proc.stdout": [
                    34
                ],
                "func": [
                    35
                ],
                "memoize": [
                    29
                ],
                "cache": [
                    30
                ],
                "aliases": [
                    40,
                    38
                ],
                "self.get_aliases": [
                    38
                ],
                "binary": [
                    40,
                    39
                ],
                "command_script.split": [
                    39
                ],
                "command_script": [
                    39,
                    41,
                    43,
                    47,
                    53
                ],
                "command_script.replace": [
                    41
                ],
                "self._expand_aliases": [
                    47
                ],
                "os.path.expanduser": [
                    50
                ],
                "os.path": [
                    50
                ],
                "int": [
                    53
                ],
                "time": [
                    53
                ],
                "line": [
                    56,
                    57
                ],
                "line.split": [
                    57
                ],
                "join": [
                    62
                ],
                "commands": [
                    62
                ]
            },
            "filtered_variables_in_file": {
                "Generic": [
                    8
                ],
                "overridden_aliases": [
                    10,
                    11,
                    12
                ],
                "strip": [
                    10,
                    34
                ],
                "os.environ.get": [
                    10
                ],
                "os.environ": [
                    10
                ],
                "os": [
                    10,
                    50
                ],
                "alias.strip": [
                    12
                ],
                "alias": [
                    12
                ],
                "overridden_aliases.split": [
                    12
                ],
                "fuck": [
                    27
                ],
                "overridden": [
                    32,
                    35
                ],
                "self._get_overridden_aliases": [
                    32
                ],
                "self": [
                    32,
                    38,
                    47
                ],
                "proc": [
                    33,
                    34
                ],
                "Popen": [
                    33
                ],
                "PIPE": [
                    33
                ],
                "DEVNULL": [
                    33
                ],
                "functions": [
                    34,
                    35
                ],
                "split": [
                    34
                ],
                "decode": [
                    34
                ],
                "proc.stdout.read": [
                    34
                ],
                "proc.stdout": [
                    34
                ],
                "func": [
                    35
                ],
                "memoize": [
                    29
                ],
                "cache": [
                    30
                ],
                "aliases": [
                    40,
                    38
                ],
                "self.get_aliases": [
                    38
                ],
                "binary": [
                    40,
                    39
                ],
                "command_script.split": [
                    39
                ],
                "command_script": [
                    39,
                    41,
                    43,
                    47,
                    53
                ],
                "command_script.replace": [
                    41
                ],
                "self._expand_aliases": [
                    47
                ],
                "os.path.expanduser": [
                    50
                ],
                "os.path": [
                    50
                ],
                "time": [
                    53
                ],
                "line": [
                    56,
                    57
                ],
                "line.split": [
                    57
                ],
                "join": [
                    62
                ],
                "commands": [
                    62
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_14/tests/shells/test_fish.py",
                "test_function": "test_get_overridden_aliases",
                "test_function_code": "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
                "test_error": "AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}   Full diff:   - ['cut', 'git', 'sed']   + {'grep', 'ls', 'cd', 'sed', 'git', 'man', 'open', 'cut'}",
                "full_test_error": "self = <tests.shells.test_fish.TestFish object at 0x7f9edd83d610>\nshell = <thefuck.shells.fish.Fish object at 0x7f9edd7713d0>\ntf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}\nE       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'grep', 'ls', 'cd', 'sed', 'git', 'man', 'open', 'cut'}\n\ntests/shells/test_fish.py:31: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('aliases', ['cut,git,sed', 'cut, git, sed', ' cut,\\tgit,sed\\n', '\\ncut,\\n\\ngit,\\tsed\\r'])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_14/tests/shells/test_fish.py",
                "test_function": "test_get_overridden_aliases",
                "test_function_code": "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
                "test_error": "AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}   Full diff:   - ['cut', 'git', 'sed']   + {'grep', 'ls', 'cd', 'sed', 'git', 'man', 'open', 'cut'}",
                "full_test_error": "self = <tests.shells.test_fish.TestFish object at 0x7f9edd78c050>\nshell = <thefuck.shells.fish.Fish object at 0x7f9edd738dd0>\ntf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}\nE       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'grep', 'ls', 'cd', 'sed', 'git', 'man', 'open', 'cut'}\n\ntests/shells/test_fish.py:31: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('aliases', ['cut,git,sed', 'cut, git, sed', ' cut,\\tgit,sed\\n', '\\ncut,\\n\\ngit,\\tsed\\r'])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_14/tests/shells/test_fish.py",
                "test_function": "test_get_overridden_aliases",
                "test_function_code": "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
                "test_error": "AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}   Full diff:   - ['cut', 'git', 'sed']   + {'grep', 'ls', 'cd', 'sed', 'git', 'man', 'open', 'cut'}",
                "full_test_error": "self = <tests.shells.test_fish.TestFish object at 0x7f9edd73c450>\nshell = <thefuck.shells.fish.Fish object at 0x7f9edd6d3890>\ntf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}\nE       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'grep', 'ls', 'cd', 'sed', 'git', 'man', 'open', 'cut'}\n\ntests/shells/test_fish.py:31: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('aliases', ['cut,git,sed', 'cut, git, sed', ' cut,\\tgit,sed\\n', '\\ncut,\\n\\ngit,\\tsed\\r'])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_14/tests/shells/test_fish.py",
                "test_function": "test_get_overridden_aliases",
                "test_function_code": "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
                "test_error": "AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}   Full diff:   - ['cut', 'git', 'sed']   + {'grep', 'ls', 'cd', 'sed', 'git', 'man', 'open', 'cut'}",
                "full_test_error": "self = <tests.shells.test_fish.TestFish object at 0x7f9edd6d54d0>\nshell = <thefuck.shells.fish.Fish object at 0x7f9edd6e83d0>\ntf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}\nE       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'grep', 'ls', 'cd', 'sed', 'git', 'man', 'open', 'cut'}\n\ntests/shells/test_fish.py:31: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('aliases', ['cut,git,sed', 'cut, git, sed', ' cut,\\tgit,sed\\n', '\\ncut,\\n\\ngit,\\tsed\\r'])"
                ]
            }
        ]
    }
}