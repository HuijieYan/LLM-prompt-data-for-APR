{
    "1.1.1": "def _get_overridden_aliases(self):\n    overridden_aliases = os.environ.get('TF_OVERRIDDEN_ALIASES', '').strip()\n    if overridden_aliases:\n        return [alias.strip() for alias in overridden_aliases.split(',')]\n    else:\n        return ['cd', 'grep', 'ls', 'man', 'open']\n",
    "1.1.2": null,
    "1.2.1": "thefuck/shells/fish.py",
    "1.2.2": "import os",
    "1.3.1": "class Fish(Generic)",
    "1.3.2": null,
    "1.4.1": null,
    "1.4.2": null,
    "1.5.1": [
        "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
        "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
        "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
        "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}"
    ],
    "1.5.2": [
        "tests/shells/test_fish.py",
        "tests/shells/test_fish.py",
        "tests/shells/test_fish.py",
        "tests/shells/test_fish.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'cut', 'man', 'sed', 'cd', 'grep', 'ls', 'open', 'git'}"
        ],
        [
            "E       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'cut', 'man', 'sed', 'cd', 'grep', 'ls', 'open', 'git'}"
        ],
        [
            "E       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'cut', 'man', 'sed', 'cd', 'grep', 'ls', 'open', 'git'}"
        ],
        [
            "E       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'cut', 'man', 'sed', 'cd', 'grep', 'ls', 'open', 'git'}"
        ]
    ],
    "2.1.2": [
        [
            "self = <tests.shells.test_fish.TestFish object at 0x7f515fb5cb90>\nshell = <thefuck.shells.fish.Fish object at 0x7f515faa2e10>\ntf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
            "\ntests/shells/test_fish.py:31: AssertionError"
        ],
        [
            "self = <tests.shells.test_fish.TestFish object at 0x7f515fa5b650>\nshell = <thefuck.shells.fish.Fish object at 0x7f515fa46e90>\ntf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
            "\ntests/shells/test_fish.py:31: AssertionError"
        ],
        [
            "self = <tests.shells.test_fish.TestFish object at 0x7f515fa54410>\nshell = <thefuck.shells.fish.Fish object at 0x7f515fa739d0>\ntf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
            "\ntests/shells/test_fish.py:31: AssertionError"
        ],
        [
            "self = <tests.shells.test_fish.TestFish object at 0x7f515fa71150>\nshell = <thefuck.shells.fish.Fish object at 0x7f515fa09510>\ntf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
            "\ntests/shells/test_fish.py:31: AssertionError"
        ]
    ],
    "2.2.1": [
        [
            {},
            {
                "overridden_aliases": {
                    "value": "'cut,git,sed'",
                    "shape": "11",
                    "omitted": false
                }
            }
        ]
    ],
    "2.2.2": [
        [
            {},
            {
                "overridden_aliases": "str"
            }
        ]
    ],
    "2.3.1": [
        [
            {},
            {
                "default": {
                    "value": "{'grep', 'ls', 'git', 'cut', 'open', 'man', 'cd', 'sed'}",
                    "shape": "8",
                    "omitted": false
                },
                "alias": {
                    "value": "'sed'",
                    "shape": "3",
                    "omitted": false
                }
            }
        ]
    ],
    "2.3.2": [
        [
            {},
            {
                "default": "set",
                "alias": "str"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}