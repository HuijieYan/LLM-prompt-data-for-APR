{
    "thefuck:30": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/thefuck/rules/fix_file.py": {
            "buggy_functions": [
                {
                    "function_name": "match",
                    "function_code": "def match(command, settings):\n    return 'EDITOR' in os.environ and _search(command.stderr)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 52,
                    "end_line": 53,
                    "variables": {
                        "os.environ": [
                            53
                        ],
                        "os": [
                            53
                        ],
                        "_search": [
                            53
                        ],
                        "command.stderr": [
                            53
                        ],
                        "command": [
                            53
                        ]
                    },
                    "filtered_variables": {
                        "os.environ": [
                            53
                        ],
                        "os": [
                            53
                        ],
                        "_search": [
                            53
                        ],
                        "command.stderr": [
                            53
                        ],
                        "command": [
                            53
                        ]
                    },
                    "diff_line_number": 53,
                    "class_data": null,
                    "used_imports": [
                        "import os"
                    ],
                    "variable_values": [
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "86"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "86"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.c:3:1: error: expected expression\\n}\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "41"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.c:3:1: error: expected expression\\n}\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "41"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "90"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "90"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nSearch pattern not terminated at a.pl line 2.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nSearch pattern not terminated at a.pl line 2.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh:2: command not found: foo\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh:2: command not found: foo\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh:2: command not found: foo\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh:2: command not found: foo\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "70"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "70"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "231"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "231"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "71"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "71"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "450"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "450"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rb:3: syntax error, unexpected keyword_end\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rb:3: syntax error, unexpected keyword_end\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "42"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "42"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "95"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "95"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "106"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "106"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "53"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "53"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "61"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "61"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "115"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "115"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "583"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "583"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "86"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(26, 32), match='a.c:3:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "86"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a70d20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.c:3:1: error: expected expression\\n}\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "41"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 7), match='a.c:3:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.c:3:1: error: expected expression\\n}\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "41"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24b0c6f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "90"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(14, 28), match='at a.pl line 3'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "90"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a11540>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nSearch pattern not terminated at a.pl line 2.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(31, 45), match='at a.pl line 2'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nSearch pattern not terminated at a.pl line 2.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a70db0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='a.sh: line 2: '>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a11c90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh:2: command not found: foo\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh:2: command not found: foo\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.sh:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh:2: command not found: foo\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh:2: command not found: foo\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a2d540>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='a.sh: line 2: '>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a11c90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "70"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.rs:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "70"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a2d5d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "231"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(55, 72), match='   src/lib.rs:3:5'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "231"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a39530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "71"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 22), match='  File \"a.py\", line 2'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "71"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a11270>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "450"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(36, 57), match='  File \"a.py\", line 8'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "450"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a40390>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rb:3: syntax error, unexpected keyword_end\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.rb:3:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rb:3: syntax error, unexpected keyword_end\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a118a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "42"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 14), match='lua: a.lua:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "42"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a406f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "95"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(29, 58), match='/tmp/fix-error/a.sh (line 2):'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "95"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a401e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "106"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 12), match='awk: ./a:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "106"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a40270>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "53"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='llc: a.ll:1:1:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "53"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a393f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "61"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(21, 28), match='a.go:1:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "61"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a11780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "115"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(40, 51), match='Makefile:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "115"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a40d20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 65), match='fatal: bad config file line 1 in /home/martin/.co>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a40540>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "583"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m": {
                                    "variable_value": "<re.Match object; span=(140, 191), match='    at /Users/pablo/Workspace/barebones/fuck.js:2>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "583"
                                },
                                "command": {
                                    "variable_value": "Command(script='', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "os.path.isfile": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x7fcc24a39850>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _make_pattern(pattern):\n    pattern = pattern.replace('{file}', '(?P<file>[^:\\n]+)')\n    pattern = pattern.replace('{line}', '(?P<line>[0-9]+)')\n    pattern = pattern.replace('{col}',  '(?P<col>[0-9]+)')\n    return re.compile(pattern, re.MULTILINE)",
                "@memoize\ndef _search(stderr):\n    for pattern in patterns:\n        m = re.search(pattern, stderr)\n        if m:\n            return m",
                "def match(command, settings):\n    return 'EDITOR' in os.environ and _search(command.stderr)",
                "def get_new_command(command, settings):\n    m = _search(command.stderr)\n\n    # Note: there does not seem to be a standard for columns, so they are just\n    # ignored for now\n    return shells.and_('{} {} +{}'.format(os.environ['EDITOR'], m.group('file'), m.group('line')),\n                       command.script)"
            ],
            "inscope_function_signatures": [
                "_make_pattern(pattern)",
                "_search(stderr)",
                "match(command, settings)",
                "get_new_command(command, settings)"
            ],
            "variables_in_file": {
                "patterns": [
                    41,
                    46,
                    7
                ],
                "pattern": [
                    37,
                    38,
                    39,
                    40,
                    46,
                    47
                ],
                "pattern.replace": [
                    37,
                    38,
                    39
                ],
                "re.compile": [
                    40
                ],
                "re": [
                    40,
                    47
                ],
                "re.MULTILINE": [
                    40
                ],
                "_make_pattern": [
                    41
                ],
                "p": [
                    41
                ],
                "m": [
                    47,
                    48,
                    49,
                    57,
                    61
                ],
                "re.search": [
                    47
                ],
                "stderr": [
                    47
                ],
                "memoize": [
                    44
                ],
                "os.environ": [
                    61,
                    53
                ],
                "os": [
                    61,
                    53
                ],
                "_search": [
                    57,
                    53
                ],
                "command.stderr": [
                    57,
                    53
                ],
                "command": [
                    57,
                    53,
                    62
                ],
                "shells.and_": [
                    61
                ],
                "shells": [
                    61
                ],
                "format": [
                    61
                ],
                "m.group": [
                    61
                ],
                "command.script": [
                    62
                ]
            },
            "filtered_variables_in_file": {
                "patterns": [
                    41,
                    46,
                    7
                ],
                "pattern": [
                    37,
                    38,
                    39,
                    40,
                    46,
                    47
                ],
                "pattern.replace": [
                    37,
                    38,
                    39
                ],
                "re.compile": [
                    40
                ],
                "re": [
                    40,
                    47
                ],
                "re.MULTILINE": [
                    40
                ],
                "_make_pattern": [
                    41
                ],
                "p": [
                    41
                ],
                "m": [
                    47,
                    48,
                    49,
                    57,
                    61
                ],
                "re.search": [
                    47
                ],
                "stderr": [
                    47
                ],
                "memoize": [
                    44
                ],
                "os.environ": [
                    61,
                    53
                ],
                "os": [
                    61,
                    53
                ],
                "_search": [
                    57,
                    53
                ],
                "command.stderr": [
                    57,
                    53
                ],
                "command": [
                    57,
                    53,
                    62
                ],
                "shells.and_": [
                    61
                ],
                "shells": [
                    61
                ],
                "m.group": [
                    61
                ],
                "command.script": [
                    62
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "assert not <re.Match object; span=(26, 32), match='a.c:3:'>  +  where <re.Match object; span=(26, 32), match='a.c:3:'> = match(Command(script='', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"), None)  +    where Command(script='', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\") = Command(stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226318190>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226318050>\ntest = ('gcc a.c', 'a.c', 3, 1, \"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       assert not <re.Match object; span=(26, 32), match='a.c:3:'>\nE        +  where <re.Match object; span=(26, 32), match='a.c:3:'> = match(Command(script='', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"), None)\nE        +    where Command(script='', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\") = Command(stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(1, 7), match='a.c:3:'>  +  where <re.Match object; span=(1, 7), match='a.c:3:'> = match(Command(script='', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n'), None)  +    where Command(script='', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n') = Command(stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226225f10>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226225f50>\ntest = ('clang a.c', 'a.c', 3, 1, '\\na.c:3:1: error: expected expression\\n}\\n^\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(1, 7), match='a.c:3:'>\nE        +  where <re.Match object; span=(1, 7), match='a.c:3:'> = match(Command(script='', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n') = Command(stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(14, 28), match='at a.pl line 3'>  +  where <re.Match object; span=(14, 28), match='at a.pl line 3'> = match(Command(script='', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'), None)  +    where Command(script='', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n') = Command(stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226238b10>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12262383d0>\ntest = ('perl a.pl', 'a.pl', 3, None, '\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(14, 28), match='at a.pl line 3'>\nE        +  where <re.Match object; span=(14, 28), match='at a.pl line 3'> = match(Command(script='', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n') = Command(stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(31, 45), match='at a.pl line 2'>  +  where <re.Match object; span=(31, 45), match='at a.pl line 2'> = match(Command(script='', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n'), None)  +    where Command(script='', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n') = Command(stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226215e50>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12262154d0>\ntest = ('perl a.pl', 'a.pl', 2, None, '\\nSearch pattern not terminated at a.pl line 2.\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(31, 45), match='at a.pl line 2'>\nE        +  where <re.Match object; span=(31, 45), match='at a.pl line 2'> = match(Command(script='', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n') = Command(stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(1, 15), match='a.sh: line 2: '>  +  where <re.Match object; span=(1, 15), match='a.sh: line 2: '> = match(Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n'), None)  +    where Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n') = Command(stderr='\\na.sh: line 2: foo: command not found\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f12261e9f90>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12261e9e10>\ntest = ('sh a.sh', 'a.sh', 2, None, '\\na.sh: line 2: foo: command not found\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(1, 15), match='a.sh: line 2: '>\nE        +  where <re.Match object; span=(1, 15), match='a.sh: line 2: '> = match(Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n') = Command(stderr='\\na.sh: line 2: foo: command not found\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(1, 8), match='a.sh:2:'>  +  where <re.Match object; span=(1, 8), match='a.sh:2:'> = match(Command(script='', stdout='', stderr='\\na.sh:2: command not found: foo\\n'), None)  +    where Command(script='', stdout='', stderr='\\na.sh:2: command not found: foo\\n') = Command(stderr='\\na.sh:2: command not found: foo\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f122621ad50>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f122621ac90>\ntest = ('zsh a.sh', 'a.sh', 2, None, '\\na.sh:2: command not found: foo\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(1, 8), match='a.sh:2:'>\nE        +  where <re.Match object; span=(1, 8), match='a.sh:2:'> = match(Command(script='', stdout='', stderr='\\na.sh:2: command not found: foo\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\na.sh:2: command not found: foo\\n') = Command(stderr='\\na.sh:2: command not found: foo\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(1, 15), match='a.sh: line 2: '>  +  where <re.Match object; span=(1, 15), match='a.sh: line 2: '> = match(Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n'), None)  +    where Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n') = Command(stderr='\\na.sh: line 2: foo: command not found\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f12261f0b90>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12261f08d0>\ntest = ('bash a.sh', 'a.sh', 2, None, '\\na.sh: line 2: foo: command not found\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(1, 15), match='a.sh: line 2: '>\nE        +  where <re.Match object; span=(1, 15), match='a.sh: line 2: '> = match(Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n') = Command(stderr='\\na.sh: line 2: foo: command not found\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(1, 8), match='a.rs:2:'>  +  where <re.Match object; span=(1, 8), match='a.rs:2:'> = match(Command(script='', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'), None)  +    where Command(script='', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n') = Command(stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226207e10>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226207c10>\ntest = ('rustc a.rs', 'a.rs', 2, 5, '\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(1, 8), match='a.rs:2:'>\nE        +  where <re.Match object; span=(1, 8), match='a.rs:2:'> = match(Command(script='', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n') = Command(stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(55, 72), match='   src/lib.rs:3:5'>  +  where <re.Match object; span=(55, 72), match='   src/lib.rs:3:5'> = match(Command(script='', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 ...s:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'), None)  +    where Command(script='', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 ...s:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n') = Command(stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/...rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226214e90>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226214cd0>\ntest = ('cargo build', 'src/lib.rs', 3, 5, '\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 e...s:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(55, 72), match='   src/lib.rs:3:5'>\nE        +  where <re.Match object; span=(55, 72), match='   src/lib.rs:3:5'> = match(Command(script='', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 ...s:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 ...s:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n') = Command(stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/...rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "assert not <re.Match object; span=(1, 22), match='  File \"a.py\", line 2'>  +  where <re.Match object; span=(1, 22), match='  File \"a.py\", line 2'> = match(Command(script='', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'), None)  +    where Command(script='', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n') = Command(stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f12261ccd90>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12261ccc50>\ntest = ('python a.py', 'a.py', 2, None, '\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       assert not <re.Match object; span=(1, 22), match='  File \"a.py\", line 2'>\nE        +  where <re.Match object; span=(1, 22), match='  File \"a.py\", line 2'> = match(Command(script='', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n') = Command(stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "assert not <re.Match object; span=(36, 57), match='  File \"a.py\", line 8'>  +  where <re.Match object; span=(36, 57), match='  File \"a.py\", line 8'> = match(Command(script='', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    ma...(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'), None)  +    where Command(script='', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    ma...(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n') = Command(stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in...r(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226212cd0>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226212850>\ntest = ('python a.py', 'a.py', 8, None, '\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(...(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       assert not <re.Match object; span=(36, 57), match='  File \"a.py\", line 8'>\nE        +  where <re.Match object; span=(36, 57), match='  File \"a.py\", line 8'> = match(Command(script='', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    ma...(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    ma...(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n') = Command(stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in...r(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(1, 8), match='a.rb:3:'>  +  where <re.Match object; span=(1, 8), match='a.rb:3:'> = match(Command(script='', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n'), None)  +    where Command(script='', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n') = Command(stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f122621a090>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f122621a1d0>\ntest = ('ruby a.rb', 'a.rb', 3, None, '\\na.rb:3: syntax error, unexpected keyword_end\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(1, 8), match='a.rb:3:'>\nE        +  where <re.Match object; span=(1, 8), match='a.rb:3:'> = match(Command(script='', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n') = Command(stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "assert not <re.Match object; span=(1, 14), match='lua: a.lua:2:'>  +  where <re.Match object; span=(1, 14), match='lua: a.lua:2:'> = match(Command(script='', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"), None)  +    where Command(script='', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\") = Command(stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226214150>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226214210>\ntest = ('lua a.lua', 'a.lua', 2, None, \"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       assert not <re.Match object; span=(1, 14), match='lua: a.lua:2:'>\nE        +  where <re.Match object; span=(1, 14), match='lua: a.lua:2:'> = match(Command(script='', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"), None)\nE        +    where Command(script='', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\") = Command(stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "assert not <re.Match object; span=(29, 58), match='/tmp/fix-error/a.sh (line 2):'>  +  where <re.Match object; span=(29, 58), match='/tmp/fix-error/a.sh (line 2):'> = match(Command(script='', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"), None)  +    where Command(script='', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\") = Command(stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226230f10>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226230850>\ntest = ('fish a.sh', '/tmp/fix-error/a.sh', 2, None, \"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       assert not <re.Match object; span=(29, 58), match='/tmp/fix-error/a.sh (line 2):'>\nE        +  where <re.Match object; span=(29, 58), match='/tmp/fix-error/a.sh (line 2):'> = match(Command(script='', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"), None)\nE        +    where Command(script='', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\") = Command(stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "assert not <re.Match object; span=(1, 12), match='awk: ./a:2:'>  +  where <re.Match object; span=(1, 12), match='awk: ./a:2:'> = match(Command(script='', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'), None)  +    where Command(script='', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n') = Command(stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226215f50>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226215150>\ntest = ('./a', './a', 2, None, '\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       assert not <re.Match object; span=(1, 12), match='awk: ./a:2:'>\nE        +  where <re.Match object; span=(1, 12), match='awk: ./a:2:'> = match(Command(script='', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n') = Command(stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(1, 15), match='llc: a.ll:1:1:'>  +  where <re.Match object; span=(1, 15), match='llc: a.ll:1:1:'> = match(Command(script='', stdout='', stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n'), None)  +    where Command(script='', stdout='', stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n') = Command(stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f1226238150>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f1226238250>\ntest = ('llc a.ll', 'a.ll', 1, None, '\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(1, 15), match='llc: a.ll:1:1:'>\nE        +  where <re.Match object; span=(1, 15), match='llc: a.ll:1:1:'> = match(Command(script='', stdout='', stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n') = Command(stderr='\\nllc: a.ll:1:1: error: expected top-level entity\\n+\\n^\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "assert not <re.Match object; span=(21, 28), match='a.go:1:'>  +  where <re.Match object; span=(21, 28), match='a.go:1:'> = match(Command(script='', stdout='', stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\"), None)  +    where Command(script='', stdout='', stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\") = Command(stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\")",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f12261d7d10>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12261d7bd0>\ntest = ('go build a.go', 'a.go', 1, None, \"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\")\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       assert not <re.Match object; span=(21, 28), match='a.go:1:'>\nE        +  where <re.Match object; span=(21, 28), match='a.go:1:'> = match(Command(script='', stdout='', stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\"), None)\nE        +    where Command(script='', stdout='', stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\") = Command(stderr=\"\\ncan't load package:\\na.go:1:1: expected 'package', found '+'\\n\")\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "assert not <re.Match object; span=(40, 51), match='Makefile:2:'>  +  where <re.Match object; span=(40, 51), match='Makefile:2:'> = match(Command(script='', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"), None)  +    where Command(script='', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\") = Command(stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f12261c4e50>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12261c4b90>\ntest = ('make', 'Makefile', 2, None, \"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       assert not <re.Match object; span=(40, 51), match='Makefile:2:'>\nE        +  where <re.Match object; span=(40, 51), match='Makefile:2:'> = match(Command(script='', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"), None)\nE        +    where Command(script='', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\") = Command(stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(1, 65), match='fatal: bad config file line 1 in /home/martin/.co>  +  where <re.Match object; span=(1, 65), match='fatal: bad config file line 1 in /home/martin/.co> = match(Command(script='', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'), None)  +    where Command(script='', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n') = Command(stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f12261cda50>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12261cdb90>\ntest = ('git st', '/home/martin/.config/git/config', 1, None, '\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(1, 65), match='fatal: bad config file line 1 in /home/martin/.co>\nE        +  where <re.Match object; span=(1, 65), match='fatal: bad config file line 1 in /home/martin/.co> = match(Command(script='', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n') = Command(stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/thefuck_30/tests/rules/test_fix_file.py",
                "test_function": "test_not_file",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\ndef test_not_file(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=False)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    assert not match(Command(stderr=test[4]), None)",
                "test_error": "AssertionError: assert not <re.Match object; span=(140, 191), match='    at /Users/pablo/Workspace/barebones/fuck.js:2>  +  where <re.Match object; span=(140, 191), match='    at /Users/pablo/Workspace/barebones/fuck.js:2> = match(Command(script='', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should r...s:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'), None)  +    where Command(script='', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should r...s:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n') = Command(stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceEr...js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x7f12261ae550>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f12261ae610>\ntest = ('node fuck.js asdf qwer', '/Users/pablo/Workspace/barebones/fuck.js', '2', 5, '\\n/Users/pablo/Workspace/barebones/fuc...s:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    def test_not_file(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=False)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n>       assert not match(Command(stderr=test[4]), None)\nE       AssertionError: assert not <re.Match object; span=(140, 191), match='    at /Users/pablo/Workspace/barebones/fuck.js:2>\nE        +  where <re.Match object; span=(140, 191), match='    at /Users/pablo/Workspace/barebones/fuck.js:2> = match(Command(script='', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should r...s:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'), None)\nE        +    where Command(script='', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should r...s:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n') = Command(stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceEr...js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')\n\ntests/rules/test_fix_file.py:181: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)"
                ]
            }
        ]
    }
}