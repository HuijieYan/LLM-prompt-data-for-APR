{
    "thefuck:28": {
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/thefuck/rules/fix_file.py": {
            "buggy_functions": [
                {
                    "function_name": "get_new_command",
                    "function_code": "def get_new_command(command, settings):\n    m = _search(command.stderr) or _search(command.stdout)\n\n    # Note: there does not seem to be a standard for columns, so they are just\n    # ignored for now\n    editor_call = '{} {} +{}'.format(os.environ['EDITOR'],\n                                     m.group('file'),\n                                     m.group('line'))\n    return shells.and_(editor_call, command.script)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 59,
                    "end_line": 67,
                    "variables": {
                        "m": [
                            65,
                            66,
                            60
                        ],
                        "_search": [
                            60
                        ],
                        "command.stderr": [
                            60
                        ],
                        "command": [
                            67,
                            60
                        ],
                        "command.stdout": [
                            60
                        ],
                        "editor_call": [
                            64,
                            67
                        ],
                        "format": [
                            64
                        ],
                        "os.environ": [
                            64
                        ],
                        "os": [
                            64
                        ],
                        "m.group": [
                            65,
                            66
                        ],
                        "shells.and_": [
                            67
                        ],
                        "shells": [
                            67
                        ],
                        "command.script": [
                            67
                        ]
                    },
                    "filtered_variables": {
                        "m": [
                            65,
                            66,
                            60
                        ],
                        "_search": [
                            60
                        ],
                        "command.stderr": [
                            60
                        ],
                        "command": [
                            67,
                            60
                        ],
                        "command.stdout": [
                            60
                        ],
                        "editor_call": [
                            64,
                            67
                        ],
                        "os.environ": [
                            64
                        ],
                        "os": [
                            64
                        ],
                        "m.group": [
                            65,
                            66
                        ],
                        "shells.and_": [
                            67
                        ],
                        "shells": [
                            67
                        ],
                        "command.script": [
                            67
                        ]
                    },
                    "diff_line_number": 59,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "86"
                                },
                                "command": {
                                    "variable_value": "Command(script='gcc a.c', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'gcc a.c'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(26, 32), match='a.c:3:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "86"
                                },
                                "command": {
                                    "variable_value": "Command(script='gcc a.c', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.c +3'",
                                    "variable_type": "str",
                                    "variable_shape": "19"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10c9ef390>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'gcc a.c'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.c:3:1: error: expected expression\\n}\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "41"
                                },
                                "command": {
                                    "variable_value": "Command(script='clang a.c', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'clang a.c'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 7), match='a.c:3:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.c:3:1: error: expected expression\\n}\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "41"
                                },
                                "command": {
                                    "variable_value": "Command(script='clang a.c', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.c +3'",
                                    "variable_type": "str",
                                    "variable_shape": "19"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10c9ef1e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'clang a.c'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "90"
                                },
                                "command": {
                                    "variable_value": "Command(script='perl a.pl', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'perl a.pl'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(14, 28), match='at a.pl line 3'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "90"
                                },
                                "command": {
                                    "variable_value": "Command(script='perl a.pl', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.pl +3'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10c9ef660>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'perl a.pl'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nSearch pattern not terminated at a.pl line 2.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "command": {
                                    "variable_value": "Command(script='perl a.pl', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'perl a.pl'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(31, 45), match='at a.pl line 2'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nSearch pattern not terminated at a.pl line 2.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "command": {
                                    "variable_value": "Command(script='perl a.pl', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.pl +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca3d390>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'perl a.pl'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='sh a.sh', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'sh a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='a.sh: line 2: '>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='sh a.sh', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.sh +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10c9efdb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'sh a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh:2: command not found: foo\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "command": {
                                    "variable_value": "Command(script='zsh a.sh', stdout='', stderr='\\na.sh:2: command not found: foo\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'zsh a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.sh:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh:2: command not found: foo\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "command": {
                                    "variable_value": "Command(script='zsh a.sh', stdout='', stderr='\\na.sh:2: command not found: foo\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.sh +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca3d150>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'zsh a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='bash a.sh', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'bash a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='a.sh: line 2: '>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='bash a.sh', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.sh +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca4d030>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'bash a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "70"
                                },
                                "command": {
                                    "variable_value": "Command(script='rustc a.rs', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'rustc a.rs'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.rs:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "70"
                                },
                                "command": {
                                    "variable_value": "Command(script='rustc a.rs', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.rs +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca3d6f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'rustc a.rs'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "231"
                                },
                                "command": {
                                    "variable_value": "Command(script='cargo build', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'cargo build'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(55, 72), match='   src/lib.rs:3:5'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "231"
                                },
                                "command": {
                                    "variable_value": "Command(script='cargo build', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor src/lib.rs +3'",
                                    "variable_type": "str",
                                    "variable_shape": "26"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10c9b8850>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'cargo build'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "71"
                                },
                                "command": {
                                    "variable_value": "Command(script='python a.py', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'python a.py'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 22), match='  File \"a.py\", line 2'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "71"
                                },
                                "command": {
                                    "variable_value": "Command(script='python a.py', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.py +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10c9ef780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'python a.py'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "450"
                                },
                                "command": {
                                    "variable_value": "Command(script='python a.py', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'python a.py'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(36, 57), match='  File \"a.py\", line 8'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "450"
                                },
                                "command": {
                                    "variable_value": "Command(script='python a.py', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.py +8'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca4d810>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'python a.py'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rb:3: syntax error, unexpected keyword_end\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "command": {
                                    "variable_value": "Command(script='ruby a.rb', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'ruby a.rb'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.rb:3:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rb:3: syntax error, unexpected keyword_end\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "command": {
                                    "variable_value": "Command(script='ruby a.rb', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.rb +3'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca3ded0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'ruby a.rb'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "42"
                                },
                                "command": {
                                    "variable_value": "Command(script='lua a.lua', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'lua a.lua'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 14), match='lua: a.lua:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "42"
                                },
                                "command": {
                                    "variable_value": "Command(script='lua a.lua', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.lua +2'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca4d0c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'lua a.lua'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "95"
                                },
                                "command": {
                                    "variable_value": "Command(script='fish a.sh', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'fish a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(29, 58), match='/tmp/fix-error/a.sh (line 2):'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "95"
                                },
                                "command": {
                                    "variable_value": "Command(script='fish a.sh', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor /tmp/fix-error/a.sh +2'",
                                    "variable_type": "str",
                                    "variable_shape": "35"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca73390>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'fish a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "106"
                                },
                                "command": {
                                    "variable_value": "Command(script='./a', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'./a'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 12), match='awk: ./a:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "106"
                                },
                                "command": {
                                    "variable_value": "Command(script='./a', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor ./a +2'",
                                    "variable_type": "str",
                                    "variable_shape": "19"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca3dae0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'./a'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "53"
                                },
                                "command": {
                                    "variable_value": "Command(script='llc a.ll', stdout='', stderr='\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'llc a.ll'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='llc: a.ll:1:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "53"
                                },
                                "command": {
                                    "variable_value": "Command(script='llc a.ll', stdout='', stderr='\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.ll +1'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca64350>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'llc a.ll'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "61"
                                },
                                "command": {
                                    "variable_value": "Command(script='go build a.go', stdout='', stderr=\"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'go build a.go'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(21, 28), match='a.go:1:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "61"
                                },
                                "command": {
                                    "variable_value": "Command(script='go build a.go', stdout='', stderr=\"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.go +1'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca3d270>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'go build a.go'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "115"
                                },
                                "command": {
                                    "variable_value": "Command(script='make', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'make'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(40, 51), match='Makefile:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "115"
                                },
                                "command": {
                                    "variable_value": "Command(script='make', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor Makefile +2'",
                                    "variable_type": "str",
                                    "variable_shape": "24"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca730c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'make'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "command": {
                                    "variable_value": "Command(script='git st', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'git st'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 65), match='fatal: bad config file line 1 in /home/martin/.co>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "command": {
                                    "variable_value": "Command(script='git st', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor /home/martin/.config/git/config +1'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca73c90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'git st'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "583"
                                },
                                "command": {
                                    "variable_value": "Command(script='node fuck.js asdf qwer', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'node fuck.js asdf qwer'",
                                    "variable_type": "str",
                                    "variable_shape": "22"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(140, 191), match='    at /Users/pablo/Workspace/barebones/fuck.js:2>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "583"
                                },
                                "command": {
                                    "variable_value": "Command(script='node fuck.js asdf qwer', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor /Users/pablo/Workspace/barebones/fuck.js +2'",
                                    "variable_type": "str",
                                    "variable_shape": "56"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca64c10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'node fuck.js asdf qwer'",
                                    "variable_type": "str",
                                    "variable_shape": "22"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "command": {
                                    "variable_value": "Command(script='pep8', stdout='\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 > 79 characters)\\n./tests/rules/test_systemctl.py:18:80: E501 line too long (103 > 79 characters)\\n./tests/rules/test_whois.py:20:80: E501 line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "'\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 > 79 characters)\\n./tests/rules/test_systemctl.py:18:80: E501 line too long (103 > 79 characters)\\n./tests/rules/test_whois.py:20:80: E501 line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "310"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'pep8'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 36), match='./tests/rules/test_systemctl.py:17:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "command": {
                                    "variable_value": "Command(script='pep8', stdout='\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 > 79 characters)\\n./tests/rules/test_systemctl.py:18:80: E501 line too long (103 > 79 characters)\\n./tests/rules/test_whois.py:20:80: E501 line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "'\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 > 79 characters)\\n./tests/rules/test_systemctl.py:18:80: E501 line too long (103 > 79 characters)\\n./tests/rules/test_whois.py:20:80: E501 line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "310"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor ./tests/rules/test_systemctl.py +17'",
                                    "variable_type": "str",
                                    "variable_shape": "48"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca735d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'pep8'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "command": {
                                    "variable_value": "Command(script='py.test', stdout='\\nmonkeypatch = <_pytest.monkeypatch.monkeypatch object at 0x7fdb76a25b38>\\ntest = (\\'fish a.sh\\', \\'/tmp/fix-error/a.sh\\', 2, None, \\'\\', \"\\\\nfish: Unknown command \\'foo\\'\\\\n/tmp/fix-error/a.sh (line 2): foo\\\\n                              ^\\\\n\")\\n\\n    @pytest.mark.parametrize(\\'test\\', tests)\\n    @pytest.mark.usefixtures(\\'no_memoize\\')\\n    def test_get_new_command(monkeypatch, test):\\n>       mocker.patch(\\'os.path.isfile\\', return_value=True)\\nE       NameError: name \\'mocker\\' is not defined\\n\\n/home/thefuck/tests/rules/test_fix_file.py:218: NameError\\n', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "'\\nmonkeypatch = <_pytest.monkeypatch.monkeypatch object at 0x7fdb76a25b38>\\ntest = (\\'fish a.sh\\', \\'/tmp/fix-error/a.sh\\', 2, None, \\'\\', \"\\\\nfish: Unknown command \\'foo\\'\\\\n/tmp/fix-error/a.sh (line 2): foo\\\\n                              ^\\\\n\")\\n\\n    @pytest.mark.parametrize(\\'test\\', tests)\\n    @pytest.mark.usefixtures(\\'no_memoize\\')\\n    def test_get_new_command(monkeypatch, test):\\n>       mocker.patch(\\'os.path.isfile\\', return_value=True)\\nE       NameError: name \\'mocker\\' is not defined\\n\\n/home/thefuck/tests/rules/test_fix_file.py:218: NameError\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "536"
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'py.test'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(478, 525), match='/home/thefuck/tests/rules/test_fix_file.py:218:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "command": {
                                    "variable_value": "Command(script='py.test', stdout='\\nmonkeypatch = <_pytest.monkeypatch.monkeypatch object at 0x7fdb76a25b38>\\ntest = (\\'fish a.sh\\', \\'/tmp/fix-error/a.sh\\', 2, None, \\'\\', \"\\\\nfish: Unknown command \\'foo\\'\\\\n/tmp/fix-error/a.sh (line 2): foo\\\\n                              ^\\\\n\")\\n\\n    @pytest.mark.parametrize(\\'test\\', tests)\\n    @pytest.mark.usefixtures(\\'no_memoize\\')\\n    def test_get_new_command(monkeypatch, test):\\n>       mocker.patch(\\'os.path.isfile\\', return_value=True)\\nE       NameError: name \\'mocker\\' is not defined\\n\\n/home/thefuck/tests/rules/test_fix_file.py:218: NameError\\n', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "'\\nmonkeypatch = <_pytest.monkeypatch.monkeypatch object at 0x7fdb76a25b38>\\ntest = (\\'fish a.sh\\', \\'/tmp/fix-error/a.sh\\', 2, None, \\'\\', \"\\\\nfish: Unknown command \\'foo\\'\\\\n/tmp/fix-error/a.sh (line 2): foo\\\\n                              ^\\\\n\")\\n\\n    @pytest.mark.parametrize(\\'test\\', tests)\\n    @pytest.mark.usefixtures(\\'no_memoize\\')\\n    def test_get_new_command(monkeypatch, test):\\n>       mocker.patch(\\'os.path.isfile\\', return_value=True)\\nE       NameError: name \\'mocker\\' is not defined\\n\\n/home/thefuck/tests/rules/test_fix_file.py:218: NameError\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "536"
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor /home/thefuck/tests/rules/test_fix_file.py +218'",
                                    "variable_type": "str",
                                    "variable_shape": "60"
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x10ca73db0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'py.test'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "86"
                                },
                                "command": {
                                    "variable_value": "Command(script='gcc a.c', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'gcc a.c'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(26, 33), match='a.c:3:1'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "86"
                                },
                                "command": {
                                    "variable_value": "Command(script='gcc a.c', stdout='', stderr=\"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034523f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.c +3:1'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034523f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'gcc a.c'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.c:3:1: error: expected expression\\n}\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "41"
                                },
                                "command": {
                                    "variable_value": "Command(script='clang a.c', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'clang a.c'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.c:3:1'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.c:3:1: error: expected expression\\n}\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "41"
                                },
                                "command": {
                                    "variable_value": "Command(script='clang a.c', stdout='', stderr='\\na.c:3:1: error: expected expression\\n}\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x103452530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.c +3:1'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x103452530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'clang a.c'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "90"
                                },
                                "command": {
                                    "variable_value": "Command(script='perl a.pl', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'perl a.pl'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(14, 28), match='at a.pl line 3'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "90"
                                },
                                "command": {
                                    "variable_value": "Command(script='perl a.pl', stdout='', stderr='\\nsyntax error at a.pl line 3, at EOF\\nExecution of a.pl aborted due to compilation errors.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x103473ae0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.pl +3'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x103473ae0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'perl a.pl'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nSearch pattern not terminated at a.pl line 2.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "command": {
                                    "variable_value": "Command(script='perl a.pl', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'perl a.pl'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(31, 45), match='at a.pl line 2'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nSearch pattern not terminated at a.pl line 2.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "command": {
                                    "variable_value": "Command(script='perl a.pl', stdout='', stderr='\\nSearch pattern not terminated at a.pl line 2.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034a1270>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.pl +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034a1270>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'perl a.pl'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='sh a.sh', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'sh a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='a.sh: line 2: '>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='sh a.sh', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034a1b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.sh +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034a1b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'sh a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh:2: command not found: foo\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "command": {
                                    "variable_value": "Command(script='zsh a.sh', stdout='', stderr='\\na.sh:2: command not found: foo\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'zsh a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.sh:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh:2: command not found: foo\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "command": {
                                    "variable_value": "Command(script='zsh a.sh', stdout='', stderr='\\na.sh:2: command not found: foo\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x103473660>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.sh +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x103473660>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'zsh a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='bash a.sh', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'bash a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='a.sh: line 2: '>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.sh: line 2: foo: command not found\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "38"
                                },
                                "command": {
                                    "variable_value": "Command(script='bash a.sh', stdout='', stderr='\\na.sh: line 2: foo: command not found\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034a1030>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.sh +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034a1030>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'bash a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "70"
                                },
                                "command": {
                                    "variable_value": "Command(script='rustc a.rs', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'rustc a.rs'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 9), match='a.rs:2:5'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "70"
                                },
                                "command": {
                                    "variable_value": "Command(script='rustc a.rs', stdout='', stderr='\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x103452e90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.rs +2:5'",
                                    "variable_type": "str",
                                    "variable_shape": "22"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x103452e90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'rustc a.rs'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "231"
                                },
                                "command": {
                                    "variable_value": "Command(script='cargo build', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'cargo build'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(55, 72), match='   src/lib.rs:3:5'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "231"
                                },
                                "command": {
                                    "variable_value": "Command(script='cargo build', stdout='', stderr='\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3:6 error: unexpected token: `+`\\n   src/lib.rs:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034528f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor src/lib.rs +3:5'",
                                    "variable_type": "str",
                                    "variable_shape": "28"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034528f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'cargo build'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "71"
                                },
                                "command": {
                                    "variable_value": "Command(script='python a.py', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'python a.py'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 22), match='  File \"a.py\", line 2'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "71"
                                },
                                "command": {
                                    "variable_value": "Command(script='python a.py', stdout='', stderr='\\n  File \"a.py\", line 2\\n      +\\n          ^\\nSyntaxError: invalid syntax\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034b54b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.py +2'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034b54b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'python a.py'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "450"
                                },
                                "command": {
                                    "variable_value": "Command(script='python a.py', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'python a.py'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(36, 57), match='  File \"a.py\", line 8'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "450"
                                },
                                "command": {
                                    "variable_value": "Command(script='python a.py', stdout='', stderr='\\nTraceback (most recent call last):\\n  File \"a.py\", line 8, in <module>\\n    match(\"foo\")\\n  File \"a.py\", line 5, in match\\n    m = re.search(None, command)\\n  File \"/usr/lib/python3.4/re.py\", line 170, in search\\n    return _compile(pattern, flags).search(string)\\n  File \"/usr/lib/python3.4/re.py\", line 293, in _compile\\n    raise TypeError(\"first argument must be string or compiled pattern\")\\nTypeError: first argument must be string or compiled pattern\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034b5150>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.py +8'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034b5150>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'python a.py'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rb:3: syntax error, unexpected keyword_end\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "command": {
                                    "variable_value": "Command(script='ruby a.rb', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'ruby a.rb'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 8), match='a.rb:3:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\na.rb:3: syntax error, unexpected keyword_end\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "46"
                                },
                                "command": {
                                    "variable_value": "Command(script='ruby a.rb', stdout='', stderr='\\na.rb:3: syntax error, unexpected keyword_end\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034a1420>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.rb +3'",
                                    "variable_type": "str",
                                    "variable_shape": "20"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034a1420>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'ruby a.rb'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "42"
                                },
                                "command": {
                                    "variable_value": "Command(script='lua a.lua', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'lua a.lua'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 14), match='lua: a.lua:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "42"
                                },
                                "command": {
                                    "variable_value": "Command(script='lua a.lua', stdout='', stderr=\"\\nlua: a.lua:2: unexpected symbol near '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034b9ae0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.lua +2'",
                                    "variable_type": "str",
                                    "variable_shape": "21"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034b9ae0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'lua a.lua'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "95"
                                },
                                "command": {
                                    "variable_value": "Command(script='fish a.sh', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'fish a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(29, 58), match='/tmp/fix-error/a.sh (line 2):'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "95"
                                },
                                "command": {
                                    "variable_value": "Command(script='fish a.sh', stdout='', stderr=\"\\nfish: Unknown command 'foo'\\n/tmp/fix-error/a.sh (line 2): foo\\n                              ^\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034b58a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor /tmp/fix-error/a.sh +2'",
                                    "variable_type": "str",
                                    "variable_shape": "35"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034b58a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'fish a.sh'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "106"
                                },
                                "command": {
                                    "variable_value": "Command(script='./a', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'./a'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 12), match='awk: ./a:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "106"
                                },
                                "command": {
                                    "variable_value": "Command(script='./a', stdout='', stderr='\\nawk: ./a:2: BEGIN { print \"Hello, world!\" + }\\nawk: ./a:2:                                 ^ syntax error\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034a10c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor ./a +2'",
                                    "variable_type": "str",
                                    "variable_shape": "19"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034a10c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'./a'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "53"
                                },
                                "command": {
                                    "variable_value": "Command(script='llc a.ll', stdout='', stderr='\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'llc a.ll'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 15), match='llc: a.ll:1:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "53"
                                },
                                "command": {
                                    "variable_value": "Command(script='llc a.ll', stdout='', stderr='\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x103452df0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.ll +1:2'",
                                    "variable_type": "str",
                                    "variable_shape": "22"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x103452df0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'llc a.ll'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "61"
                                },
                                "command": {
                                    "variable_value": "Command(script='go build a.go', stdout='', stderr=\"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'go build a.go'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(21, 29), match='a.go:1:2'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "61"
                                },
                                "command": {
                                    "variable_value": "Command(script='go build a.go', stdout='', stderr=\"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x103452d50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor a.go +1:2'",
                                    "variable_type": "str",
                                    "variable_shape": "22"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x103452d50>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'go build a.go'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "115"
                                },
                                "command": {
                                    "variable_value": "Command(script='make', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'make'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(40, 51), match='Makefile:2:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\"",
                                    "variable_type": "str",
                                    "variable_shape": "115"
                                },
                                "command": {
                                    "variable_value": "Command(script='make', stdout='', stderr=\"\\nbidule\\nmake: bidule: Command not found\\nMakefile:2: recipe for target 'target' failed\\nmake: *** [target] Error 127\\n\")",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034b9780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor Makefile +2'",
                                    "variable_type": "str",
                                    "variable_shape": "24"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034b9780>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'make'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "command": {
                                    "variable_value": "Command(script='git st', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'git st'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 65), match='fatal: bad config file line 1 in /home/martin/.co>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "66"
                                },
                                "command": {
                                    "variable_value": "Command(script='git st', stdout='', stderr='\\nfatal: bad config file line 1 in /home/martin/.config/git/config\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034a15d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor /home/martin/.config/git/config +1'",
                                    "variable_type": "str",
                                    "variable_shape": "47"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034a15d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'git st'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "583"
                                },
                                "command": {
                                    "variable_value": "Command(script='node fuck.js asdf qwer', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'node fuck.js asdf qwer'",
                                    "variable_type": "str",
                                    "variable_shape": "22"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(140, 191), match='    at /Users/pablo/Workspace/barebones/fuck.js:2>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "'\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "583"
                                },
                                "command": {
                                    "variable_value": "Command(script='node fuck.js asdf qwer', stdout='', stderr='\\n/Users/pablo/Workspace/barebones/fuck.js:2\\nconole.log(arg);  // this should read console.log(arg);\\n^\\nReferenceError: conole is not defined\\n    at /Users/pablo/Workspace/barebones/fuck.js:2:5\\n    at Array.forEach (native)\\n    at Object.<anonymous> (/Users/pablo/Workspace/barebones/fuck.js:1:85)\\n    at Module._compile (module.js:460:26)\\n    at Object.Module._extensions..js (module.js:478:10)\\n    at Module.load (module.js:355:32)\\n    at Function.Module._load (module.js:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x103452990>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor /Users/pablo/Workspace/barebones/fuck.js +2:5'",
                                    "variable_type": "str",
                                    "variable_shape": "58"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x103452990>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'node fuck.js asdf qwer'",
                                    "variable_type": "str",
                                    "variable_shape": "22"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "command": {
                                    "variable_value": "Command(script='pep8', stdout='\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 > 79 characters)\\n./tests/rules/test_systemctl.py:18:80: E501 line too long (103 > 79 characters)\\n./tests/rules/test_whois.py:20:80: E501 line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "'\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 > 79 characters)\\n./tests/rules/test_systemctl.py:18:80: E501 line too long (103 > 79 characters)\\n./tests/rules/test_whois.py:20:80: E501 line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "310"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'pep8'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(1, 38), match='./tests/rules/test_systemctl.py:17:80'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "command": {
                                    "variable_value": "Command(script='pep8', stdout='\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 > 79 characters)\\n./tests/rules/test_systemctl.py:18:80: E501 line too long (103 > 79 characters)\\n./tests/rules/test_whois.py:20:80: E501 line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "'\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 > 79 characters)\\n./tests/rules/test_systemctl.py:18:80: E501 line too long (103 > 79 characters)\\n./tests/rules/test_whois.py:20:80: E501 line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "310"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x103452350>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor ./tests/rules/test_systemctl.py +17:80'",
                                    "variable_type": "str",
                                    "variable_shape": "51"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x103452350>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'pep8'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "m": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "command": {
                                    "variable_value": "Command(script='py.test', stdout='\\nmonkeypatch = <_pytest.monkeypatch.monkeypatch object at 0x7fdb76a25b38>\\ntest = (\\'fish a.sh\\', \\'/tmp/fix-error/a.sh\\', 2, None, \\'\\', \"\\\\nfish: Unknown command \\'foo\\'\\\\n/tmp/fix-error/a.sh (line 2): foo\\\\n                              ^\\\\n\")\\n\\n    @pytest.mark.parametrize(\\'test\\', tests)\\n    @pytest.mark.usefixtures(\\'no_memoize\\')\\n    def test_get_new_command(monkeypatch, test):\\n>       mocker.patch(\\'os.path.isfile\\', return_value=True)\\nE       NameError: name \\'mocker\\' is not defined\\n\\n/home/thefuck/tests/rules/test_fix_file.py:218: NameError\\n', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "'\\nmonkeypatch = <_pytest.monkeypatch.monkeypatch object at 0x7fdb76a25b38>\\ntest = (\\'fish a.sh\\', \\'/tmp/fix-error/a.sh\\', 2, None, \\'\\', \"\\\\nfish: Unknown command \\'foo\\'\\\\n/tmp/fix-error/a.sh (line 2): foo\\\\n                              ^\\\\n\")\\n\\n    @pytest.mark.parametrize(\\'test\\', tests)\\n    @pytest.mark.usefixtures(\\'no_memoize\\')\\n    def test_get_new_command(monkeypatch, test):\\n>       mocker.patch(\\'os.path.isfile\\', return_value=True)\\nE       NameError: name \\'mocker\\' is not defined\\n\\n/home/thefuck/tests/rules/test_fix_file.py:218: NameError\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "536"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'py.test'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "m": {
                                    "variable_value": "<re.Match object; span=(478, 525), match='/home/thefuck/tests/rules/test_fix_file.py:218:'>",
                                    "variable_type": "Match",
                                    "variable_shape": null
                                },
                                "_search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "command": {
                                    "variable_value": "Command(script='py.test', stdout='\\nmonkeypatch = <_pytest.monkeypatch.monkeypatch object at 0x7fdb76a25b38>\\ntest = (\\'fish a.sh\\', \\'/tmp/fix-error/a.sh\\', 2, None, \\'\\', \"\\\\nfish: Unknown command \\'foo\\'\\\\n/tmp/fix-error/a.sh (line 2): foo\\\\n                              ^\\\\n\")\\n\\n    @pytest.mark.parametrize(\\'test\\', tests)\\n    @pytest.mark.usefixtures(\\'no_memoize\\')\\n    def test_get_new_command(monkeypatch, test):\\n>       mocker.patch(\\'os.path.isfile\\', return_value=True)\\nE       NameError: name \\'mocker\\' is not defined\\n\\n/home/thefuck/tests/rules/test_fix_file.py:218: NameError\\n', stderr='')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "command.stdout": {
                                    "variable_value": "'\\nmonkeypatch = <_pytest.monkeypatch.monkeypatch object at 0x7fdb76a25b38>\\ntest = (\\'fish a.sh\\', \\'/tmp/fix-error/a.sh\\', 2, None, \\'\\', \"\\\\nfish: Unknown command \\'foo\\'\\\\n/tmp/fix-error/a.sh (line 2): foo\\\\n                              ^\\\\n\")\\n\\n    @pytest.mark.parametrize(\\'test\\', tests)\\n    @pytest.mark.usefixtures(\\'no_memoize\\')\\n    def test_get_new_command(monkeypatch, test):\\n>       mocker.patch(\\'os.path.isfile\\', return_value=True)\\nE       NameError: name \\'mocker\\' is not defined\\n\\n/home/thefuck/tests/rules/test_fix_file.py:218: NameError\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "536"
                                },
                                "settings.fixcolcmd": {
                                    "variable_value": "'{editor} {file} +{line}:{col}'",
                                    "variable_type": "str",
                                    "variable_shape": "29"
                                },
                                "settings": {
                                    "variable_value": "{'fixlinecmd': '{editor} {file} +{line}', 'fixcolcmd': '{editor} {file} +{line}:{col}'}",
                                    "variable_type": "Settings",
                                    "variable_shape": "2"
                                },
                                "m.groupdict": {
                                    "variable_value": "<built-in method groupdict of re.Match object at 0x1034a1b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "editor_call": {
                                    "variable_value": "'dummy_editor /home/thefuck/tests/rules/test_fix_file.py +218'",
                                    "variable_type": "str",
                                    "variable_shape": "60"
                                },
                                "settings.fixcolcmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "os.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "m.group": {
                                    "variable_value": "<built-in method group of re.Match object at 0x1034a1b70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd.format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "settings.fixlinecmd": {
                                    "variable_value": "'{editor} {file} +{line}'",
                                    "variable_type": "str",
                                    "variable_shape": "23"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'py.test'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "wrap_settings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "from thefuck.utils import memoize\nfrom thefuck import shells\n\n\npatterns = (\n        # js, node:\n        '^    at {file}:{line}:{col}',\n        # cargo:\n        '^   {file}:{line}:{col}',\n        # python, thefuck:\n        '^  File \"{file}\", line {line}',\n        # awk:\n        '^awk: {file}:{line}:',\n        # git\n        '^fatal: bad config file line {line} in {file}',\n        # llc:\n        '^llc: {file}:{line}:{col}:',\n        # lua:\n        '^lua: {file}:{line}:',\n        # fish:\n        '^{file} \\(line {line}\\):',\n        # bash, sh, ssh:\n        '^{file}: line {line}: ',\n        # ghc, make, ruby, zsh:\n        '^{file}:{line}:',\n        # cargo, clang, gcc, go, pep8, rustc:\n        '^{file}:{line}:{col}',\n        # perl:\n        'at {file} line {line}',\n    )",
                    "start_line": 3,
                    "end_line": 32
                }
            ],
            "inscope_functions": [
                "def _make_pattern(pattern):\n    pattern = pattern.replace('{file}', '(?P<file>[^:\\n]+)')\n    pattern = pattern.replace('{line}', '(?P<line>[0-9]+)')\n    pattern = pattern.replace('{col}',  '(?P<col>[0-9]+)')\n    return re.compile(pattern, re.MULTILINE)",
                "@memoize\ndef _search(stderr):\n    for pattern in patterns:\n        m = re.search(pattern, stderr)\n        if m and os.path.isfile(m.group('file')):\n            return m",
                "def match(command, settings):\n    if 'EDITOR' not in os.environ:\n        return False\n\n    return _search(command.stderr) or _search(command.stdout)",
                "def get_new_command(command, settings):\n    m = _search(command.stderr) or _search(command.stdout)\n\n    # Note: there does not seem to be a standard for columns, so they are just\n    # ignored for now\n    editor_call = '{} {} +{}'.format(os.environ['EDITOR'],\n                                     m.group('file'),\n                                     m.group('line'))\n    return shells.and_(editor_call, command.script)"
            ],
            "inscope_function_signatures": [
                "_make_pattern(pattern)",
                "_search(stderr)",
                "match(command, settings)",
                "get_new_command(command, settings)"
            ],
            "variables_in_file": {
                "patterns": [
                    41,
                    46,
                    7
                ],
                "pattern": [
                    37,
                    38,
                    39,
                    40,
                    46,
                    47
                ],
                "pattern.replace": [
                    37,
                    38,
                    39
                ],
                "re.compile": [
                    40
                ],
                "re": [
                    40,
                    47
                ],
                "re.MULTILINE": [
                    40
                ],
                "_make_pattern": [
                    41
                ],
                "p": [
                    41
                ],
                "m": [
                    65,
                    66,
                    47,
                    48,
                    49,
                    60
                ],
                "re.search": [
                    47
                ],
                "stderr": [
                    47
                ],
                "os.path.isfile": [
                    48
                ],
                "os.path": [
                    48
                ],
                "os": [
                    48,
                    64,
                    53
                ],
                "m.group": [
                    48,
                    65,
                    66
                ],
                "memoize": [
                    44
                ],
                "os.environ": [
                    64,
                    53
                ],
                "_search": [
                    56,
                    60
                ],
                "command.stderr": [
                    56,
                    60
                ],
                "command": [
                    56,
                    67,
                    60
                ],
                "command.stdout": [
                    56,
                    60
                ],
                "editor_call": [
                    64,
                    67
                ],
                "format": [
                    64
                ],
                "shells.and_": [
                    67
                ],
                "shells": [
                    67
                ],
                "command.script": [
                    67
                ]
            },
            "filtered_variables_in_file": {
                "patterns": [
                    41,
                    46,
                    7
                ],
                "pattern": [
                    37,
                    38,
                    39,
                    40,
                    46,
                    47
                ],
                "pattern.replace": [
                    37,
                    38,
                    39
                ],
                "re.compile": [
                    40
                ],
                "re": [
                    40,
                    47
                ],
                "re.MULTILINE": [
                    40
                ],
                "_make_pattern": [
                    41
                ],
                "p": [
                    41
                ],
                "m": [
                    65,
                    66,
                    47,
                    48,
                    49,
                    60
                ],
                "re.search": [
                    47
                ],
                "stderr": [
                    47
                ],
                "os.path.isfile": [
                    48
                ],
                "os.path": [
                    48
                ],
                "os": [
                    48,
                    64,
                    53
                ],
                "m.group": [
                    48,
                    65,
                    66
                ],
                "memoize": [
                    44
                ],
                "os.environ": [
                    64,
                    53
                ],
                "_search": [
                    56,
                    60
                ],
                "command.stderr": [
                    56,
                    60
                ],
                "command": [
                    56,
                    67,
                    60
                ],
                "command.stdout": [
                    56,
                    60
                ],
                "editor_call": [
                    64,
                    67
                ],
                "shells.and_": [
                    67
                ],
                "shells": [
                    67
                ],
                "command.script": [
                    67
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/tests/rules/test_fix_file.py",
                "test_function": "test_get_new_command_with_settings",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_new_command_with_settings(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=True)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n    settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n\n    if test[3]:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\n    else:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{} && {}'.format(test[1], test[2], test[0]))",
                "test_error": "AssertionError: assert 'dummy_editor...+3 && gcc a.c' == 'dummy_editor ...:1 && gcc a.c'   - dummy_editor a.c +3 && gcc a.c   + dummy_editor a.c +3:1 && gcc a.c   ?                    ++",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x10a6ff8d0>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10a6ff890>\ntest = ('gcc a.c', 'a.c', 3, 1, '', \"\\na.c: In function 'main':\\na.c:3:1: error: expected expression before '}' token\\n }\\n  ^\\n\")\n\n    @pytest.mark.parametrize('test', tests)\n    @pytest.mark.usefixtures('no_memoize')\n    def test_get_new_command_with_settings(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=True)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n        cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n        settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n    \n        if test[3]:\n>           assert (get_new_command(cmd, settings) ==\n                'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\nE           AssertionError: assert 'dummy_editor...+3 && gcc a.c' == 'dummy_editor ...:1 && gcc a.c'\nE             - dummy_editor a.c +3 && gcc a.c\nE             + dummy_editor a.c +3:1 && gcc a.c\nE             ?                    ++\n\ntests/rules/test_fix_file.py:230: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)",
                    "pytest.mark.usefixtures('no_memoize')"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/tests/rules/test_fix_file.py",
                "test_function": "test_get_new_command_with_settings",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_new_command_with_settings(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=True)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n    settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n\n    if test[3]:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\n    else:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{} && {}'.format(test[1], test[2], test[0]))",
                "test_error": "AssertionError: assert 'dummy_editor... && clang a.c' == 'dummy_editor ... && clang a.c'   - dummy_editor a.c +3 && clang a.c   + dummy_editor a.c +3:1 && clang a.c   ?                    ++",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x10a7cf4d0>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10a7cf750>\ntest = ('clang a.c', 'a.c', 3, 1, '', '\\na.c:3:1: error: expected expression\\n}\\n^\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    @pytest.mark.usefixtures('no_memoize')\n    def test_get_new_command_with_settings(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=True)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n        cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n        settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n    \n        if test[3]:\n>           assert (get_new_command(cmd, settings) ==\n                'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\nE           AssertionError: assert 'dummy_editor... && clang a.c' == 'dummy_editor ... && clang a.c'\nE             - dummy_editor a.c +3 && clang a.c\nE             + dummy_editor a.c +3:1 && clang a.c\nE             ?                    ++\n\ntests/rules/test_fix_file.py:230: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)",
                    "pytest.mark.usefixtures('no_memoize')"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/tests/rules/test_fix_file.py",
                "test_function": "test_get_new_command_with_settings",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_new_command_with_settings(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=True)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n    settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n\n    if test[3]:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\n    else:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{} && {}'.format(test[1], test[2], test[0]))",
                "test_error": "AssertionError: assert 'dummy_editor...&& rustc a.rs' == 'dummy_editor ...&& rustc a.rs'   - dummy_editor a.rs +2 && rustc a.rs   + dummy_editor a.rs +2:5 && rustc a.rs   ?                     ++",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x10a7fa090>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10a7fa050>\ntest = ('rustc a.rs', 'a.rs', 2, 5, '', '\\na.rs:2:5: 2:6 error: unexpected token: `+`\\na.rs:2     +\\n           ^\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    @pytest.mark.usefixtures('no_memoize')\n    def test_get_new_command_with_settings(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=True)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n        cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n        settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n    \n        if test[3]:\n>           assert (get_new_command(cmd, settings) ==\n                'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\nE           AssertionError: assert 'dummy_editor...&& rustc a.rs' == 'dummy_editor ...&& rustc a.rs'\nE             - dummy_editor a.rs +2 && rustc a.rs\nE             + dummy_editor a.rs +2:5 && rustc a.rs\nE             ?                     ++\n\ntests/rules/test_fix_file.py:230: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)",
                    "pytest.mark.usefixtures('no_memoize')"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/tests/rules/test_fix_file.py",
                "test_function": "test_get_new_command_with_settings",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_new_command_with_settings(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=True)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n    settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n\n    if test[3]:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\n    else:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{} && {}'.format(test[1], test[2], test[0]))",
                "test_error": "AssertionError: assert 'dummy_editor...& cargo build' == 'dummy_editor ...& cargo build'   - dummy_editor src/lib.rs +3 && cargo build   + dummy_editor src/lib.rs +3:5 && cargo build   ?                           ++",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x10a800910>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10a8009d0>\ntest = ('cargo build', 'src/lib.rs', 3, 5, '', '\\n   Compiling test v0.1.0 (file:///tmp/fix-error/test)\\n   src/lib.rs:3:5: 3...s:3     +\\n                    ^\\nCould not compile `test`.\\n\\nTo learn more, run the command again with --verbose.\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    @pytest.mark.usefixtures('no_memoize')\n    def test_get_new_command_with_settings(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=True)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n        cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n        settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n    \n        if test[3]:\n>           assert (get_new_command(cmd, settings) ==\n                'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\nE           AssertionError: assert 'dummy_editor...& cargo build' == 'dummy_editor ...& cargo build'\nE             - dummy_editor src/lib.rs +3 && cargo build\nE             + dummy_editor src/lib.rs +3:5 && cargo build\nE             ?                           ++\n\ntests/rules/test_fix_file.py:230: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)",
                    "pytest.mark.usefixtures('no_memoize')"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/tests/rules/test_fix_file.py",
                "test_function": "test_get_new_command_with_settings",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_new_command_with_settings(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=True)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n    settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n\n    if test[3]:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\n    else:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{} && {}'.format(test[1], test[2], test[0]))",
                "test_error": "AssertionError: assert 'dummy_editor...1 && llc a.ll' == 'dummy_editor ...2 && llc a.ll'   - dummy_editor a.ll +1 && llc a.ll   + dummy_editor a.ll +1:2 && llc a.ll   ?                     ++",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x10a7b7d90>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10a7b7f50>\ntest = ('llc a.ll', 'a.ll', 1, 2, '', '\\nllc: a.ll:1:2: error: expected top-level entity\\n+\\n^\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    @pytest.mark.usefixtures('no_memoize')\n    def test_get_new_command_with_settings(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=True)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n        cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n        settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n    \n        if test[3]:\n>           assert (get_new_command(cmd, settings) ==\n                'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\nE           AssertionError: assert 'dummy_editor...1 && llc a.ll' == 'dummy_editor ...2 && llc a.ll'\nE             - dummy_editor a.ll +1 && llc a.ll\nE             + dummy_editor a.ll +1:2 && llc a.ll\nE             ?                     ++\n\ntests/rules/test_fix_file.py:230: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)",
                    "pytest.mark.usefixtures('no_memoize')"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/tests/rules/test_fix_file.py",
                "test_function": "test_get_new_command_with_settings",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_new_command_with_settings(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=True)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n    settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n\n    if test[3]:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\n    else:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{} && {}'.format(test[1], test[2], test[0]))",
                "test_error": "AssertionError: assert 'dummy_editor...go build a.go' == 'dummy_editor ...go build a.go'   - dummy_editor a.go +1 && go build a.go   + dummy_editor a.go +1:2 && go build a.go   ?                     ++",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x10a40cf50>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10a6ff950>\ntest = ('go build a.go', 'a.go', 1, 2, '', \"\\ncan't load package:\\na.go:1:2: expected 'package', found '+'\\n\")\n\n    @pytest.mark.parametrize('test', tests)\n    @pytest.mark.usefixtures('no_memoize')\n    def test_get_new_command_with_settings(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=True)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n        cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n        settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n    \n        if test[3]:\n>           assert (get_new_command(cmd, settings) ==\n                'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\nE           AssertionError: assert 'dummy_editor...go build a.go' == 'dummy_editor ...go build a.go'\nE             - dummy_editor a.go +1 && go build a.go\nE             + dummy_editor a.go +1:2 && go build a.go\nE             ?                     ++\n\ntests/rules/test_fix_file.py:230: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)",
                    "pytest.mark.usefixtures('no_memoize')"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/tests/rules/test_fix_file.py",
                "test_function": "test_get_new_command_with_settings",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_new_command_with_settings(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=True)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n    settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n\n    if test[3]:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\n    else:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{} && {}'.format(test[1], test[2], test[0]))",
                "test_error": "AssertionError: assert 'dummy_editor....js asdf qwer' == 'dummy_editor ....js asdf qwer'   - dummy_editor /Users/pablo/Workspace/barebones/fuck.js +2 && node fuck.js asdf qwer   + dummy_editor /Users/pablo/Workspace/barebones/fuck.js +2:5 && node fuck.js asdf qwer   ?                                                         ++",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x10a808490>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10a808850>\ntest = ('node fuck.js asdf qwer', '/Users/pablo/Workspace/barebones/fuck.js', '2', 5, '', '\\n/Users/pablo/Workspace/barebones...s:310:12)\\n    at Function.Module.runMain (module.js:501:10)\\n    at startup (node.js:129:16)\\n    at node.js:814:3\\n')\n\n    @pytest.mark.parametrize('test', tests)\n    @pytest.mark.usefixtures('no_memoize')\n    def test_get_new_command_with_settings(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=True)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n        cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n        settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n    \n        if test[3]:\n>           assert (get_new_command(cmd, settings) ==\n                'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\nE           AssertionError: assert 'dummy_editor....js asdf qwer' == 'dummy_editor ....js asdf qwer'\nE             - dummy_editor /Users/pablo/Workspace/barebones/fuck.js +2 && node fuck.js asdf qwer\nE             + dummy_editor /Users/pablo/Workspace/barebones/fuck.js +2:5 && node fuck.js asdf qwer\nE             ?                                                         ++\n\ntests/rules/test_fix_file.py:230: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)",
                    "pytest.mark.usefixtures('no_memoize')"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_28/tests/rules/test_fix_file.py",
                "test_function": "test_get_new_command_with_settings",
                "test_function_code": "@pytest.mark.parametrize('test', tests)\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_new_command_with_settings(mocker, monkeypatch, test):\n    mocker.patch('os.path.isfile', return_value=True)\n    monkeypatch.setenv('EDITOR', 'dummy_editor')\n\n    cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n    settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n\n    if test[3]:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\n    else:\n        assert (get_new_command(cmd, settings) ==\n            'dummy_editor {} +{} && {}'.format(test[1], test[2], test[0]))",
                "test_error": "AssertionError: assert 'dummy_editor...y +17 && pep8' == 'dummy_editor ...17:80 && pep8'   - dummy_editor ./tests/rules/test_systemctl.py +17 && pep8   + dummy_editor ./tests/rules/test_systemctl.py +17:80 && pep8   ?                                                 +++",
                "full_test_error": "mocker = <pytest_mock.plugin.MockFixture object at 0x10a7f0ed0>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10a797fd0>\ntest = ('pep8', './tests/rules/test_systemctl.py', 17, 80, '\\n./tests/rules/test_systemctl.py:17:80: E501 line too long (93 >... line too long (89 > 79 characters)\\n./tests/rules/test_whois.py:22:80: E501 line too long (83 > 79 characters)\\n', '')\n\n    @pytest.mark.parametrize('test', tests)\n    @pytest.mark.usefixtures('no_memoize')\n    def test_get_new_command_with_settings(mocker, monkeypatch, test):\n        mocker.patch('os.path.isfile', return_value=True)\n        monkeypatch.setenv('EDITOR', 'dummy_editor')\n    \n        cmd = Command(script=test[0], stdout=test[4], stderr=test[5])\n        settings = Settings({'fixcolcmd': '{editor} {file} +{line}:{col}'})\n    \n        if test[3]:\n>           assert (get_new_command(cmd, settings) ==\n                'dummy_editor {} +{}:{} && {}'.format(test[1], test[2], test[3], test[0]))\nE           AssertionError: assert 'dummy_editor...y +17 && pep8' == 'dummy_editor ...17:80 && pep8'\nE             - dummy_editor ./tests/rules/test_systemctl.py +17 && pep8\nE             + dummy_editor ./tests/rules/test_systemctl.py +17:80 && pep8\nE             ?                                                 +++\n\ntests/rules/test_fix_file.py:230: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('test', tests)",
                    "pytest.mark.usefixtures('no_memoize')"
                ]
            }
        ]
    }
}