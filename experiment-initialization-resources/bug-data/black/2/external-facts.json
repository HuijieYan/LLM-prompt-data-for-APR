{
    "black:2": {
        "github_issue_title": [
            "\"fmt: on\" does not work when crossing block boundaries and decorators\n"
        ],
        "github_issue_description": [
            "Operating system: Linux Mint 19.0\nPython version: 3.6.6\nBlack version: 18.9b0\nDoes also happen on master: yes\n\nSimplest reproducer: the following is left unchanged. In fact, it behaves as if # fmt: off is true until end of file.\n\n# fmt: off\nif (x and y):\n# fmt: on\n    pass\n\nif (x and y):\n    pass\nThe soonest # fmt: on takes effect is at end of the indented if block.\n\nRan into this with a series of decorators:\n\n# fmt: off\n@click.command()\n@click.option(\"-a\", \"--align\",      help=\"aligned help texts\")\n@click.option(\"-b\", \"--big-option\", help=\"should stay aligned\")\n# fmt: on\ndef foo(align,    big_option):\n    pass\nSimple workaround for me is keep the formatter commands within a \"block\" - the following works perfectly fine:\n\n@click.command()\n# fmt: off\n@click.option(\"-a\", \"--align\",      help=\"aligned help texts\")\n@click.option(\"-b\", \"--big-option\", help=\"should stay aligned\")\n# fmt: on\ndef foo(align, big_option):\n    pass\n"
        ]
    }
}