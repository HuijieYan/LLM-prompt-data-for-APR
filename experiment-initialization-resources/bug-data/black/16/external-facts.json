{
    "black:16": {
        "github_issue_title": [
            "Crash if there is a symlink to a resource outside of the root directory\n"
        ],
        "github_issue_description": [
            "Hello there, thank you for this great tool!\n\nBlack crashes when it finds a symbolic link pointing to a file or a directory outside of the root directory.\n\nSteps to reproduce\n\nCreate the following structure:\nbase\n  |-- repo\n  |     |-- dummy.py\n  |     `-- resource -> ../resource\n  `-- resource\nInitiate base/repo as a Git repository (so as to set the root directory);\nCall black . within base/repo;\nExpected behavior: Black ends as expected;\nCurrent behavior: throws an exception:\nTraceback (most recent call last):\n  File \"/home/neraste/.virtualenvs/test_black/bin/black\", line 11, in <module>\n    sys.exit(main())\n  File \"/home/neraste/.virtualenvs/test_black/lib/python3.6/site-packages/click/core.py\", line 722, in __call__\n    return self.main(*args, **kwargs)\n  File \"/home/neraste/.virtualenvs/test_black/lib/python3.6/site-packages/click/core.py\", line 697, in main\n    rv = self.invoke(ctx)\n  File \"/home/neraste/.virtualenvs/test_black/lib/python3.6/site-packages/click/core.py\", line 895, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/home/neraste/.virtualenvs/test_black/lib/python3.6/site-packages/click/core.py\", line 535, in invoke\n    return callback(*args, **kwargs)\n  File \"/home/neraste/.virtualenvs/test_black/lib/python3.6/site-packages/click/decorators.py\", line 17, in new_func\n    return f(get_current_context(), *args, **kwargs)\n  File \"/home/neraste/.virtualenvs/test_black/lib/python3.6/site-packages/black.py\", line 347, in main\n    gen_python_files_in_dir(p, root, include_regex, exclude_regex, report)\n  File \"/home/neraste/.virtualenvs/test_black/lib/python3.6/site-packages/black.py\", line 2942, in gen_python_files_in_dir\n    normalized_path = \"/\" + child.resolve().relative_to(root).as_posix()\n  File \"/usr/lib64/python3.6/pathlib.py\", line 872, in relative_to\n    .format(str(self), str(formatted)))\nValueError: '/data/test_black/base/resource' does not start with '/data/test_black/base/repo'\nAs pointed out in the backtrace, this is due to the line 2942, where the resolved path of the files is made relative to the root directory. This is indeed impossible if the file is outside of the root directory. One can wonder if it makes sense to have an external link within a repository, but, well I am in this case.\n\nAdding the conflicting file/folder to the exclude list does not work.\n\nPossible workaround\n\nA possible workaround could be to simply ignore this case and do not handle this simlinked resource:\n\n        try:\n            normalized_path = \"/\" + child.resolve().relative_to(root).as_posix()\n\n        except ValueError:\n            if child.is_symlink():\n                continue                                                        \n\n            raise\nAdditional information\n\nOperating system: GNU/Linux OpenSUSE Tumbleweed\nPython version: 3.6\nBlack version: 18.6b2\nDoes also happen on master: yes\n"
        ]
    }
}