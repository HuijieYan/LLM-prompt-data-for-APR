{
    "ansible:12": {
        "/Volumes/SSD2T/bgp_envs/repos/ansible_12/lib/ansible/plugins/lookup/env.py": {
            "buggy_functions": [
                {
                    "function_name": "run",
                    "function_code": "def run(self, terms, variables, **kwargs):\n\n    ret = []\n    for term in terms:\n        var = term.split()[0]\n        ret.append(os.getenv(var, ''))\n\n    return ret\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 37,
                    "end_line": 44,
                    "variables": {
                        "ret": [
                            42,
                            44,
                            39
                        ],
                        "term": [
                            40,
                            41
                        ],
                        "terms": [
                            40
                        ],
                        "var": [
                            41,
                            42
                        ],
                        "term.split": [
                            41
                        ],
                        "ret.append": [
                            42
                        ],
                        "os.getenv": [
                            42
                        ],
                        "os": [
                            42
                        ]
                    },
                    "filtered_variables": {
                        "ret": [
                            42,
                            44,
                            39
                        ],
                        "term": [
                            40,
                            41
                        ],
                        "terms": [
                            40
                        ],
                        "var": [
                            41,
                            42
                        ],
                        "term.split": [
                            41
                        ],
                        "ret.append": [
                            42
                        ],
                        "os.getenv": [
                            42
                        ],
                        "os": [
                            42
                        ]
                    },
                    "diff_line_number": 42,
                    "class_data": {
                        "signature": "class LookupModule(LookupBase)",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def run(self, terms, variables, **kwargs):\n    ret = []\n    for term in terms:\n        var = term.split()[0]\n        ret.append(os.getenv(var, ''))\n    return ret"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "run(self, terms, variables, **kwargs)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "ret": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "terms": {
                                    "variable_value": "['foo']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.getenv": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "ret": {
                                    "variable_value": "['']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "term": {
                                    "variable_value": "'foo'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "terms": {
                                    "variable_value": "['foo']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": "'foo'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "term.split": {
                                    "variable_value": "<built-in method split of str object at 0x105ac0970>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": "<built-in method append of list object at 0x106bc5b90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.getenv": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "ret": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "terms": {
                                    "variable_value": "['equation']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.getenv": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "ret": {
                                    "variable_value": "['']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "term": {
                                    "variable_value": "'equation'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "terms": {
                                    "variable_value": "['equation']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": "'equation'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "term.split": {
                                    "variable_value": "<built-in method split of str object at 0x1064a1530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": "<built-in method append of list object at 0x106c949b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.getenv": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "ret": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "terms": {
                                    "variable_value": "['simple_var']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.getenv": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "ret": {
                                    "variable_value": "['']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "term": {
                                    "variable_value": "'simple_var'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "terms": {
                                    "variable_value": "['simple_var']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": "'simple_var'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "term.split": {
                                    "variable_value": "<built-in method split of str object at 0x1064a15f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": "<built-in method append of list object at 0x106bf61e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.getenv": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "ret": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "terms": {
                                    "variable_value": "['the_var']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.getenv": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "ret": {
                                    "variable_value": "['']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "term": {
                                    "variable_value": "'the_var'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "terms": {
                                    "variable_value": "['the_var']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": "'the_var'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "term.split": {
                                    "variable_value": "<built-in method split of str object at 0x1064a1630>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": "<built-in method append of list object at 0x106c01960>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "os.getenv": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "ret": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "terms": {
                                    "variable_value": "['foo']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "ret": {
                                    "variable_value": "['bar']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "term": {
                                    "variable_value": "'foo'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "terms": {
                                    "variable_value": "['foo']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": "'foo'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "term.split": {
                                    "variable_value": "<built-in method split of str object at 0x10f60b8b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": "<built-in method append of list object at 0x110717be0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "py3compat.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "ret": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "terms": {
                                    "variable_value": "['equation']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "ret": {
                                    "variable_value": "['a=b*100']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "term": {
                                    "variable_value": "'equation'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "terms": {
                                    "variable_value": "['equation']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": "'equation'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "term.split": {
                                    "variable_value": "<built-in method split of str object at 0x10ffec470>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": "<built-in method append of list object at 0x1107286e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "py3compat.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "ret": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "terms": {
                                    "variable_value": "['simple_var']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "ret": {
                                    "variable_value": "['alpha-\u03b2-gamma']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "term": {
                                    "variable_value": "'simple_var'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "terms": {
                                    "variable_value": "['simple_var']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": "'simple_var'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "term.split": {
                                    "variable_value": "<built-in method split of str object at 0x10ffec570>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": "<built-in method append of list object at 0x10ffd7640>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "py3compat.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "ret": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "terms": {
                                    "variable_value": "['the_var']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "term.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "ret": {
                                    "variable_value": "['\u00e3n\u02c8si\u03b2le']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "term": {
                                    "variable_value": "'the_var'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "terms": {
                                    "variable_value": "['the_var']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "var": {
                                    "variable_value": "'the_var'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "term.split": {
                                    "variable_value": "<built-in method split of str object at 0x10ffec5b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "ret.append": {
                                    "variable_value": "<built-in method append of list object at 0x1107179b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "py3compat.environ.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat.environ": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "py3compat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "import os\n\nfrom ansible.plugins.lookup import LookupBase",
                    "start_line": 30,
                    "end_line": 33
                }
            ],
            "inscope_functions": [
                "def run(self, terms, variables, **kwargs):\n\n    ret = []\n    for term in terms:\n        var = term.split()[0]\n        ret.append(os.getenv(var, ''))\n\n    return ret"
            ],
            "inscope_function_signatures": [
                "run(self, terms, variables, **kwargs)"
            ],
            "variables_in_file": {
                "__metaclass__": [
                    5
                ],
                "type": [
                    5
                ],
                "DOCUMENTATION": [
                    7
                ],
                "EXAMPLES": [
                    20
                ],
                "RETURN": [
                    24
                ],
                "LookupBase": [
                    35
                ],
                "ret": [
                    42,
                    44,
                    39
                ],
                "term": [
                    40,
                    41
                ],
                "terms": [
                    40
                ],
                "var": [
                    41,
                    42
                ],
                "term.split": [
                    41
                ],
                "ret.append": [
                    42
                ],
                "os.getenv": [
                    42
                ],
                "os": [
                    42
                ]
            },
            "filtered_variables_in_file": {
                "__metaclass__": [
                    5
                ],
                "DOCUMENTATION": [
                    7
                ],
                "EXAMPLES": [
                    20
                ],
                "RETURN": [
                    24
                ],
                "LookupBase": [
                    35
                ],
                "ret": [
                    42,
                    44,
                    39
                ],
                "term": [
                    40,
                    41
                ],
                "terms": [
                    40
                ],
                "var": [
                    41,
                    42
                ],
                "term.split": [
                    41
                ],
                "ret.append": [
                    42
                ],
                "os.getenv": [
                    42
                ],
                "os": [
                    42
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/ansible_12/test/units/plugins/lookup/test_env.py",
                "test_function": "test_env_var_value",
                "test_function_code": "@pytest.mark.parametrize('env_var,exp_value', [\n    ('foo', 'bar'),\n    ('equation', 'a=b*100')\n])\ndef test_env_var_value(monkeypatch, env_var, exp_value):\n    monkeypatch.setattr('ansible.utils.py3compat.environ.get', lambda x, y: exp_value)\n\n    env_lookup = lookup_loader.get('env')\n    retval = env_lookup.run([env_var], None)\n    assert retval == [exp_value]",
                "test_error": "AssertionError: assert [''] == ['bar']\n  At index 0 diff: '' != 'bar'\n  Full diff:\n  - ['bar']\n  + ['']",
                "full_test_error": "monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10e912790>\nenv_var = 'foo', exp_value = 'bar'\n\n    @pytest.mark.parametrize('env_var,exp_value', [\n        ('foo', 'bar'),\n        ('equation', 'a=b*100')\n    ])\n    def test_env_var_value(monkeypatch, env_var, exp_value):\n        monkeypatch.setattr('ansible.utils.py3compat.environ.get', lambda x, y: exp_value)\n    \n        env_lookup = lookup_loader.get('env')\n        retval = env_lookup.run([env_var], None)\n>       assert retval == [exp_value]\nE       AssertionError: assert [''] == ['bar']\nE         At index 0 diff: '' != 'bar'\nE         Full diff:\nE         - ['bar']\nE         + ['']\n\ntest/units/plugins/lookup/test_env.py:23: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('env_var,exp_value', [('foo', 'bar'), ('equation', 'a=b*100')])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/ansible_12/test/units/plugins/lookup/test_env.py",
                "test_function": "test_env_var_value",
                "test_function_code": "@pytest.mark.parametrize('env_var,exp_value', [\n    ('foo', 'bar'),\n    ('equation', 'a=b*100')\n])\ndef test_env_var_value(monkeypatch, env_var, exp_value):\n    monkeypatch.setattr('ansible.utils.py3compat.environ.get', lambda x, y: exp_value)\n\n    env_lookup = lookup_loader.get('env')\n    retval = env_lookup.run([env_var], None)\n    assert retval == [exp_value]",
                "test_error": "AssertionError: assert [''] == ['a=b*100']\n  At index 0 diff: '' != 'a=b*100'\n  Full diff:\n  - ['a=b*100']\n  + ['']",
                "full_test_error": "monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10f05e110>\nenv_var = 'equation', exp_value = 'a=b*100'\n\n    @pytest.mark.parametrize('env_var,exp_value', [\n        ('foo', 'bar'),\n        ('equation', 'a=b*100')\n    ])\n    def test_env_var_value(monkeypatch, env_var, exp_value):\n        monkeypatch.setattr('ansible.utils.py3compat.environ.get', lambda x, y: exp_value)\n    \n        env_lookup = lookup_loader.get('env')\n        retval = env_lookup.run([env_var], None)\n>       assert retval == [exp_value]\nE       AssertionError: assert [''] == ['a=b*100']\nE         At index 0 diff: '' != 'a=b*100'\nE         Full diff:\nE         - ['a=b*100']\nE         + ['']\n\ntest/units/plugins/lookup/test_env.py:23: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('env_var,exp_value', [('foo', 'bar'), ('equation', 'a=b*100')])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/ansible_12/test/units/plugins/lookup/test_env.py",
                "test_function": "test_utf8_env_var_value",
                "test_function_code": "@pytest.mark.parametrize('env_var,exp_value', [\n    ('simple_var', 'alpha-\u03b2-gamma'),\n    ('the_var', '\u00e3n\u02c8si\u03b2le')\n])\ndef test_utf8_env_var_value(monkeypatch, env_var, exp_value):\n    monkeypatch.setattr('ansible.utils.py3compat.environ.get', lambda x, y: exp_value)\n\n    env_lookup = lookup_loader.get('env')\n    retval = env_lookup.run([env_var], None)\n    assert retval == [exp_value]",
                "test_error": "AssertionError: assert [''] == ['alpha-\u03b2-gamma']\n  At index 0 diff: '' != 'alpha-\u03b2-gamma'\n  Full diff:\n  - ['alpha-\u03b2-gamma']\n  + ['']",
                "full_test_error": "monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10f07b7d0>\nenv_var = 'simple_var', exp_value = 'alpha-\u03b2-gamma'\n\n    @pytest.mark.parametrize('env_var,exp_value', [\n        ('simple_var', 'alpha-\u03b2-gamma'),\n        ('the_var', '\u00e3n\u02c8si\u03b2le')\n    ])\n    def test_utf8_env_var_value(monkeypatch, env_var, exp_value):\n        monkeypatch.setattr('ansible.utils.py3compat.environ.get', lambda x, y: exp_value)\n    \n        env_lookup = lookup_loader.get('env')\n        retval = env_lookup.run([env_var], None)\n>       assert retval == [exp_value]\nE       AssertionError: assert [''] == ['alpha-\u03b2-gamma']\nE         At index 0 diff: '' != 'alpha-\u03b2-gamma'\nE         Full diff:\nE         - ['alpha-\u03b2-gamma']\nE         + ['']\n\ntest/units/plugins/lookup/test_env.py:35: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('env_var,exp_value', [('simple_var', 'alpha-\u03b2-gamma'), ('the_var', '\u00e3n\u02c8si\u03b2le')])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/ansible_12/test/units/plugins/lookup/test_env.py",
                "test_function": "test_utf8_env_var_value",
                "test_function_code": "@pytest.mark.parametrize('env_var,exp_value', [\n    ('simple_var', 'alpha-\u03b2-gamma'),\n    ('the_var', '\u00e3n\u02c8si\u03b2le')\n])\ndef test_utf8_env_var_value(monkeypatch, env_var, exp_value):\n    monkeypatch.setattr('ansible.utils.py3compat.environ.get', lambda x, y: exp_value)\n\n    env_lookup = lookup_loader.get('env')\n    retval = env_lookup.run([env_var], None)\n    assert retval == [exp_value]",
                "test_error": "AssertionError: assert [''] == ['\u00e3n\u02c8si\u03b2le']\n  At index 0 diff: '' != '\u00e3n\u02c8si\u03b2le'\n  Full diff:\n  - ['\u00e3n\u02c8si\u03b2le']\n  + ['']",
                "full_test_error": "monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x10f08a810>\nenv_var = 'the_var', exp_value = '\u00e3n\u02c8si\u03b2le'\n\n    @pytest.mark.parametrize('env_var,exp_value', [\n        ('simple_var', 'alpha-\u03b2-gamma'),\n        ('the_var', '\u00e3n\u02c8si\u03b2le')\n    ])\n    def test_utf8_env_var_value(monkeypatch, env_var, exp_value):\n        monkeypatch.setattr('ansible.utils.py3compat.environ.get', lambda x, y: exp_value)\n    \n        env_lookup = lookup_loader.get('env')\n        retval = env_lookup.run([env_var], None)\n>       assert retval == [exp_value]\nE       AssertionError: assert [''] == ['\u00e3n\u02c8si\u03b2le']\nE         At index 0 diff: '' != '\u00e3n\u02c8si\u03b2le'\nE         Full diff:\nE         - ['\u00e3n\u02c8si\u03b2le']\nE         + ['']\n\ntest/units/plugins/lookup/test_env.py:35: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('env_var,exp_value', [('simple_var', 'alpha-\u03b2-gamma'), ('the_var', '\u00e3n\u02c8si\u03b2le')])"
                ]
            }
        ]
    }
}