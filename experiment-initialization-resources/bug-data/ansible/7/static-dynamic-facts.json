{
    "ansible:7": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/ansible_7/lib/ansible/module_utils/network/eos/config/vlans/vlans.py": {
            "buggy_functions": [
                {
                    "function_name": "generate_commands",
                    "function_code": "def generate_commands(vlan_id, to_set, to_remove):\n    commands = []\n    if \"vlan_id\" in to_remove:\n        return [\"no vlan {0}\".format(vlan_id)]\n\n    for key, value in to_set.items():\n        if key == \"vlan_id\" or value is None:\n            continue\n\n        commands.append(\"{0} {1}\".format(key, value))\n\n    for key in to_remove:\n        commands.append(\"no {0}\".format(key))\n\n    if commands:\n        commands.insert(0, \"vlan {0}\".format(vlan_id))\n\n    return commands\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 206,
                    "end_line": 223,
                    "variables": {
                        "commands": [
                            207,
                            215,
                            218,
                            220,
                            221,
                            223
                        ],
                        "to_remove": [
                            208,
                            217
                        ],
                        "format": [
                            209,
                            218,
                            221,
                            215
                        ],
                        "vlan_id": [
                            209,
                            221
                        ],
                        "key": [
                            211,
                            212,
                            215,
                            217,
                            218
                        ],
                        "value": [
                            211,
                            212,
                            215
                        ],
                        "to_set.items": [
                            211
                        ],
                        "to_set": [
                            211
                        ],
                        "commands.append": [
                            218,
                            215
                        ],
                        "commands.insert": [
                            221
                        ]
                    },
                    "filtered_variables": {
                        "commands": [
                            207,
                            215,
                            218,
                            220,
                            221,
                            223
                        ],
                        "to_remove": [
                            208,
                            217
                        ],
                        "vlan_id": [
                            209,
                            221
                        ],
                        "key": [
                            211,
                            212,
                            215,
                            217,
                            218
                        ],
                        "value": [
                            211,
                            212,
                            215
                        ],
                        "to_set.items": [
                            211
                        ],
                        "to_set": [
                            211
                        ],
                        "commands.append": [
                            218,
                            215
                        ],
                        "commands.insert": [
                            221
                        ]
                    },
                    "diff_line_number": 210,
                    "class_data": null,
                    "used_imports": [],
                    "variable_values": [
                        [
                            {
                                "commands": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_remove": {
                                    "variable_value": "{'name': 'ten'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "vlan_id": {
                                    "variable_value": "10",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_set.items": {
                                    "variable_value": "<built-in method items of dict object at 0x7f30a4c0d5f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "to_set": {
                                    "variable_value": "{'name': 'tenreplaced', 'state': 'suspend'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "commands.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "commands.insert": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "commands": {
                                    "variable_value": "['vlan 10', 'name tenreplaced', 'state suspend', 'no name']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "to_remove": {
                                    "variable_value": "{'name': 'ten'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "vlan_id": {
                                    "variable_value": "10",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'name'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "value": {
                                    "variable_value": "'suspend'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "to_set.items": {
                                    "variable_value": "<built-in method items of dict object at 0x7f30a4c0d5f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "to_set": {
                                    "variable_value": "{'name': 'tenreplaced', 'state': 'suspend'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "commands.append": {
                                    "variable_value": "<built-in method append of list object at 0x7f30a4c035f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "commands.insert": {
                                    "variable_value": "<built-in method insert of list object at 0x7f30a4c035f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "commands": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_remove": {
                                    "variable_value": "{'name': 'ten'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "vlan_id": {
                                    "variable_value": "10",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_set.keys": {
                                    "variable_value": "<built-in method keys of dict object at 0x7fe27a5465f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "to_set": {
                                    "variable_value": "{'name': 'tenreplaced', 'state': 'suspend'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "commands.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_set.items": {
                                    "variable_value": "<built-in method items of dict object at 0x7fe27a5465f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "commands.insert": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "commands": {
                                    "variable_value": "['vlan 10', 'name tenreplaced', 'state suspend']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "to_remove": {
                                    "variable_value": "{'name': 'ten'}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "vlan_id": {
                                    "variable_value": "10",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "'state'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "to_set.keys": {
                                    "variable_value": "<built-in method keys of dict object at 0x7fe27a5465f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "to_set": {
                                    "variable_value": "{'name': 'tenreplaced', 'state': 'suspend'}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "commands.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe27a53b5f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": "'suspend'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "to_set.items": {
                                    "variable_value": "<built-in method items of dict object at 0x7fe27a5465f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "commands.insert": {
                                    "variable_value": "<built-in method insert of list object at 0x7fe27a53b5f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": {
                "file_scope_functions": [
                    {
                        "code": "def generate_commands(vlan_id, to_set, to_remove):\n    commands = []\n    if \"vlan_id\" in to_remove:\n        return [\"no vlan {0}\".format(vlan_id)]\n\n    for key, value in to_set.items():\n        if key == \"vlan_id\" or value is None:\n            continue\n\n        commands.append(\"{0} {1}\".format(key, value))\n\n    for key in to_remove:\n        commands.append(\"no {0}\".format(key))\n\n    if commands:\n        commands.insert(0, \"vlan {0}\".format(vlan_id))\n\n    return commands",
                        "signature": "generate_commands(vlan_id, to_set, to_remove)"
                    }
                ],
                "file_scope_classes": [
                    {
                        "class_declaration": "class Vlans:",
                        "functions": [
                            {
                                "code": "def get_vlans_facts(self):\n    \"\"\" Get the 'facts' (the current configuration)\n\n    :rtype: A dictionary\n    :returns: The current configuration as a dictionary\n    \"\"\"\n    facts, _warnings = Facts(self._module).get_facts(self.gather_subset, self.gather_network_resources)\n    vlans_facts = facts['ansible_network_resources'].get('vlans')\n    if not vlans_facts:\n        return []\n    return vlans_facts",
                                "signature": "get_vlans_facts(self)"
                            },
                            {
                                "code": "def execute_module(self):\n    \"\"\" Execute the module\n\n    :rtype: A dictionary\n    :returns: The result from module execution\n    \"\"\"\n    result = {'changed': False}\n    warnings = list()\n    commands = list()\n\n    existing_vlans_facts = self.get_vlans_facts()\n    commands.extend(self.set_config(existing_vlans_facts))\n    if commands:\n        if not self._module.check_mode:\n            self._connection.edit_config(commands)\n        result['changed'] = True\n    result['commands'] = commands\n\n    changed_vlans_facts = self.get_vlans_facts()\n\n    result['before'] = existing_vlans_facts\n    if result['changed']:\n        result['after'] = changed_vlans_facts\n\n    result['warnings'] = warnings\n    return result",
                                "signature": "execute_module(self)"
                            },
                            {
                                "code": "def set_config(self, existing_vlans_facts):\n    \"\"\" Collect the configuration from the args passed to the module,\n        collect the current configuration (as a dict from facts)\n\n    :rtype: A list\n    :returns: the commands necessary to migrate the current configuration\n              to the desired configuration\n    \"\"\"\n    want = self._module.params['config']\n    have = existing_vlans_facts\n    resp = self.set_state(want, have)\n    return to_list(resp)",
                                "signature": "set_config(self, existing_vlans_facts)"
                            },
                            {
                                "code": "def set_state(self, want, have):\n    \"\"\" Select the appropriate function based on the state provided\n\n    :param want: the desired configuration as a dictionary\n    :param have: the current configuration as a dictionary\n    :rtype: A list\n    :returns: the commands necessary to migrate the current configuration\n              to the desired configuration\n    \"\"\"\n    state = self._module.params['state']\n    want = param_list_to_dict(want, \"vlan_id\", remove_key=False)\n    have = param_list_to_dict(have, \"vlan_id\", remove_key=False)\n    if state == 'overridden':\n        commands = self._state_overridden(want, have)\n    elif state == 'deleted':\n        commands = self._state_deleted(want, have)\n    elif state == 'merged':\n        commands = self._state_merged(want, have)\n    elif state == 'replaced':\n        commands = self._state_replaced(want, have)\n    return commands",
                                "signature": "set_state(self, want, have)"
                            },
                            {
                                "code": "@staticmethod\ndef _state_replaced(want, have):\n    \"\"\" The command generator when state is replaced\n\n    :rtype: A list\n    :returns: the commands necessary to migrate the current configuration\n              to the desired configuration\n    \"\"\"\n    commands = []\n    for vlan_id, desired in want.items():\n        if vlan_id in have:\n            extant = have[vlan_id]\n        else:\n            extant = dict()\n\n        add_config = dict_diff(extant, desired)\n        del_config = dict_diff(desired, extant)\n\n        commands.extend(generate_commands(vlan_id, add_config, del_config))\n\n    return commands",
                                "signature": "_state_replaced(want, have)"
                            },
                            {
                                "code": "@staticmethod\ndef _state_overridden(want, have):\n    \"\"\" The command generator when state is overridden\n\n    :rtype: A list\n    :returns: the commands necessary to migrate the current configuration\n              to the desired configuration\n    \"\"\"\n    commands = []\n    for vlan_id, extant in have.items():\n        if vlan_id in want:\n            desired = want[vlan_id]\n        else:\n            desired = dict()\n\n        add_config = dict_diff(extant, desired)\n        del_config = dict_diff(desired, extant)\n\n        commands.extend(generate_commands(vlan_id, add_config, del_config))\n\n    # Handle vlans not already in config\n    new_vlans = [vlan_id for vlan_id in want if vlan_id not in have]\n    for vlan_id in new_vlans:\n        desired = want[vlan_id]\n        extant = dict(vlan_id=vlan_id)\n        add_config = dict_diff(extant, desired)\n\n        commands.extend(generate_commands(vlan_id, add_config, {}))\n\n    return commands",
                                "signature": "_state_overridden(want, have)"
                            },
                            {
                                "code": "@staticmethod\ndef _state_merged(want, have):\n    \"\"\" The command generator when state is merged\n\n    :rtype: A list\n    :returns: the commands necessary to merge the provided into\n              the current configuration\n    \"\"\"\n    commands = []\n    for vlan_id, desired in want.items():\n        if vlan_id in have:\n            extant = have[vlan_id]\n        else:\n            extant = dict()\n\n        add_config = dict_diff(extant, desired)\n\n        commands.extend(generate_commands(vlan_id, add_config, {}))\n\n    return commands",
                                "signature": "_state_merged(want, have)"
                            },
                            {
                                "code": "@staticmethod\ndef _state_deleted(want, have):\n    \"\"\" The command generator when state is deleted\n\n    :rtype: A list\n    :returns: the commands necessary to remove the current configuration\n              of the provided objects\n    \"\"\"\n    commands = []\n    for vlan_id in want:\n        desired = dict()\n        if vlan_id in have:\n            extant = have[vlan_id]\n        else:\n            continue\n\n        del_config = dict_diff(desired, extant)\n\n        commands.extend(generate_commands(vlan_id, {}, del_config))\n\n    return commands",
                                "signature": "_state_deleted(want, have)"
                            }
                        ]
                    }
                ]
            },
            "variables_in_file": {
                "__metaclass__": [
                    14
                ],
                "type": [
                    14
                ],
                "ConfigBase": [
                    21
                ],
                "gather_subset": [
                    26
                ],
                "gather_network_resources": [
                    31
                ],
                "facts": [
                    41,
                    42
                ],
                "_warnings": [
                    41
                ],
                "get_facts": [
                    41
                ],
                "Facts": [
                    41
                ],
                "self._module": [
                    96,
                    41,
                    82,
                    60
                ],
                "self": [
                    96,
                    65,
                    100,
                    102,
                    104,
                    41,
                    106,
                    82,
                    84,
                    57,
                    58,
                    60,
                    61
                ],
                "self.gather_subset": [
                    41
                ],
                "self.gather_network_resources": [
                    41
                ],
                "vlans_facts": [
                    42,
                    43,
                    45
                ],
                "get": [
                    42
                ],
                "result": [
                    67,
                    68,
                    69,
                    71,
                    72,
                    53,
                    62,
                    63
                ],
                "warnings": [
                    54,
                    71
                ],
                "list": [
                    54,
                    55
                ],
                "commands": [
                    129,
                    139,
                    149,
                    158,
                    160,
                    170,
                    179,
                    181,
                    55,
                    58,
                    59,
                    61,
                    63,
                    191,
                    201,
                    203,
                    207,
                    215,
                    218,
                    220,
                    221,
                    223,
                    100,
                    102,
                    104,
                    106,
                    107,
                    117,
                    127
                ],
                "existing_vlans_facts": [
                    83,
                    57,
                    58,
                    67
                ],
                "self.get_vlans_facts": [
                    65,
                    57
                ],
                "commands.extend": [
                    201,
                    179,
                    149,
                    58,
                    158,
                    127
                ],
                "self.set_config": [
                    58
                ],
                "self._module.check_mode": [
                    60
                ],
                "self._connection.edit_config": [
                    61
                ],
                "self._connection": [
                    61
                ],
                "changed_vlans_facts": [
                    65,
                    69
                ],
                "want": [
                    192,
                    97,
                    100,
                    102,
                    104,
                    106,
                    171,
                    141,
                    142,
                    82,
                    84,
                    118,
                    152,
                    154
                ],
                "self._module.params": [
                    96,
                    82
                ],
                "have": [
                    98,
                    194,
                    100,
                    195,
                    102,
                    104,
                    106,
                    140,
                    172,
                    173,
                    83,
                    84,
                    119,
                    120,
                    152
                ],
                "resp": [
                    84,
                    85
                ],
                "self.set_state": [
                    84
                ],
                "to_list": [
                    85
                ],
                "state": [
                    96,
                    99,
                    101,
                    103,
                    105
                ],
                "param_list_to_dict": [
                    97,
                    98
                ],
                "self._state_overridden": [
                    100
                ],
                "self._state_deleted": [
                    102
                ],
                "self._state_merged": [
                    104
                ],
                "self._state_replaced": [
                    106
                ],
                "vlan_id": [
                    140,
                    141,
                    142,
                    149,
                    152,
                    153,
                    154,
                    155,
                    158,
                    171,
                    172,
                    173,
                    179,
                    192,
                    194,
                    195,
                    201,
                    209,
                    221,
                    118,
                    119,
                    120,
                    127
                ],
                "desired": [
                    193,
                    199,
                    171,
                    142,
                    144,
                    156,
                    146,
                    147,
                    177,
                    118,
                    154,
                    124,
                    125
                ],
                "want.items": [
                    171,
                    118
                ],
                "extant": [
                    195,
                    199,
                    140,
                    173,
                    175,
                    156,
                    146,
                    147,
                    177,
                    120,
                    122,
                    155,
                    124,
                    125
                ],
                "dict": [
                    193,
                    175,
                    144,
                    122,
                    155
                ],
                "add_config": [
                    124,
                    177,
                    146,
                    179,
                    149,
                    156,
                    158,
                    127
                ],
                "dict_diff": [
                    199,
                    124,
                    177,
                    146,
                    147,
                    156,
                    125
                ],
                "del_config": [
                    199,
                    201,
                    147,
                    149,
                    125,
                    127
                ],
                "generate_commands": [
                    201,
                    179,
                    149,
                    158,
                    127
                ],
                "staticmethod": [
                    162,
                    131,
                    109,
                    183
                ],
                "have.items": [
                    140
                ],
                "new_vlans": [
                    152,
                    153
                ],
                "to_remove": [
                    208,
                    217
                ],
                "format": [
                    209,
                    218,
                    221,
                    215
                ],
                "key": [
                    211,
                    212,
                    215,
                    217,
                    218
                ],
                "value": [
                    211,
                    212,
                    215
                ],
                "to_set.items": [
                    211
                ],
                "to_set": [
                    211
                ],
                "commands.append": [
                    218,
                    215
                ],
                "commands.insert": [
                    221
                ]
            },
            "filtered_variables_in_file": {
                "__metaclass__": [
                    14
                ],
                "ConfigBase": [
                    21
                ],
                "gather_subset": [
                    26
                ],
                "gather_network_resources": [
                    31
                ],
                "facts": [
                    41,
                    42
                ],
                "_warnings": [
                    41
                ],
                "get_facts": [
                    41
                ],
                "Facts": [
                    41
                ],
                "self._module": [
                    96,
                    41,
                    82,
                    60
                ],
                "self": [
                    96,
                    65,
                    100,
                    102,
                    104,
                    41,
                    106,
                    82,
                    84,
                    57,
                    58,
                    60,
                    61
                ],
                "self.gather_subset": [
                    41
                ],
                "self.gather_network_resources": [
                    41
                ],
                "vlans_facts": [
                    42,
                    43,
                    45
                ],
                "get": [
                    42
                ],
                "result": [
                    67,
                    68,
                    69,
                    71,
                    72,
                    53,
                    62,
                    63
                ],
                "warnings": [
                    54,
                    71
                ],
                "commands": [
                    129,
                    139,
                    149,
                    158,
                    160,
                    170,
                    179,
                    181,
                    55,
                    58,
                    59,
                    61,
                    63,
                    191,
                    201,
                    203,
                    207,
                    215,
                    218,
                    220,
                    221,
                    223,
                    100,
                    102,
                    104,
                    106,
                    107,
                    117,
                    127
                ],
                "existing_vlans_facts": [
                    83,
                    57,
                    58,
                    67
                ],
                "self.get_vlans_facts": [
                    65,
                    57
                ],
                "commands.extend": [
                    201,
                    179,
                    149,
                    58,
                    158,
                    127
                ],
                "self.set_config": [
                    58
                ],
                "self._module.check_mode": [
                    60
                ],
                "self._connection.edit_config": [
                    61
                ],
                "self._connection": [
                    61
                ],
                "changed_vlans_facts": [
                    65,
                    69
                ],
                "want": [
                    192,
                    97,
                    100,
                    102,
                    104,
                    106,
                    171,
                    141,
                    142,
                    82,
                    84,
                    118,
                    152,
                    154
                ],
                "self._module.params": [
                    96,
                    82
                ],
                "have": [
                    98,
                    194,
                    100,
                    195,
                    102,
                    104,
                    106,
                    140,
                    172,
                    173,
                    83,
                    84,
                    119,
                    120,
                    152
                ],
                "resp": [
                    84,
                    85
                ],
                "self.set_state": [
                    84
                ],
                "to_list": [
                    85
                ],
                "state": [
                    96,
                    99,
                    101,
                    103,
                    105
                ],
                "param_list_to_dict": [
                    97,
                    98
                ],
                "self._state_overridden": [
                    100
                ],
                "self._state_deleted": [
                    102
                ],
                "self._state_merged": [
                    104
                ],
                "self._state_replaced": [
                    106
                ],
                "vlan_id": [
                    140,
                    141,
                    142,
                    149,
                    152,
                    153,
                    154,
                    155,
                    158,
                    171,
                    172,
                    173,
                    179,
                    192,
                    194,
                    195,
                    201,
                    209,
                    221,
                    118,
                    119,
                    120,
                    127
                ],
                "desired": [
                    193,
                    199,
                    171,
                    142,
                    144,
                    156,
                    146,
                    147,
                    177,
                    118,
                    154,
                    124,
                    125
                ],
                "want.items": [
                    171,
                    118
                ],
                "extant": [
                    195,
                    199,
                    140,
                    173,
                    175,
                    156,
                    146,
                    147,
                    177,
                    120,
                    122,
                    155,
                    124,
                    125
                ],
                "add_config": [
                    124,
                    177,
                    146,
                    179,
                    149,
                    156,
                    158,
                    127
                ],
                "dict_diff": [
                    199,
                    124,
                    177,
                    146,
                    147,
                    156,
                    125
                ],
                "del_config": [
                    199,
                    201,
                    147,
                    149,
                    125,
                    127
                ],
                "generate_commands": [
                    201,
                    179,
                    149,
                    158,
                    127
                ],
                "have.items": [
                    140
                ],
                "new_vlans": [
                    152,
                    153
                ],
                "to_remove": [
                    208,
                    217
                ],
                "key": [
                    211,
                    212,
                    215,
                    217,
                    218
                ],
                "value": [
                    211,
                    212,
                    215
                ],
                "to_set.items": [
                    211
                ],
                "to_set": [
                    211
                ],
                "commands.append": [
                    218,
                    215
                ],
                "commands.insert": [
                    221
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/ansible_7/test/units/modules/network/eos/test_eos_vlans.py",
                "test_function": "test_eos_vlan_replaced",
                "test_function_code": "    def test_eos_vlan_replaced(self):\n        self.execute_show_command.return_value = []\n        set_module_args(dict(\n            config=[dict(\n                vlan_id=10,\n                name=\"tenreplaced\",\n                state=\"suspend\"\n            )], state=\"replaced\"\n        ))\n        commands = ['vlan 10', 'name tenreplaced', 'state suspend']\n        self.execute_module(changed=True, commands=commands)",
                "test_error": "AssertionError: Lists differ: ['name tenreplaced', 'state suspend', 'vlan 10'] != ['name tenreplaced', 'no name', 'state suspend', 'vlan 10']\n\nFirst differing element 1:\n'state suspend'\n'no name'\n\nSecond list contains 1 additional elements.\nFirst extra element 3:\n'vlan 10'\n\n- ['name tenreplaced', 'state suspend', 'vlan 10']\n+ ['name tenreplaced', 'no name', 'state suspend', 'vlan 10']\n?                      +++++++++++\n : ['vlan 10', 'name tenreplaced', 'state suspend', 'no name']",
                "full_test_error": "self = <units.modules.network.eos.test_eos_vlans.TestEosVlansModule testMethod=test_eos_vlan_replaced>\n\n    def test_eos_vlan_replaced(self):\n        self.execute_show_command.return_value = []\n        set_module_args(dict(\n            config=[dict(\n                vlan_id=10,\n                name=\"tenreplaced\",\n                state=\"suspend\"\n            )], state=\"replaced\"\n        ))\n        commands = ['vlan 10', 'name tenreplaced', 'state suspend']\n>       self.execute_module(changed=True, commands=commands)\n\ntest/units/modules/network/eos/test_eos_vlans.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/units/modules/network/eos/eos_module.py:79: in execute_module\n    self.assertEqual(sorted(commands), sorted(result['commands']), result['commands'])\nE   AssertionError: Lists differ: ['name tenreplaced', 'state suspend', 'vlan 10'] != ['name tenreplaced', 'no name', 'state suspend', 'vlan 10']\nE   \nE   First differing element 1:\nE   'state suspend'\nE   'no name'\nE   \nE   Second list contains 1 additional elements.\nE   First extra element 3:\nE   'vlan 10'\nE   \nE   - ['name tenreplaced', 'state suspend', 'vlan 10']\nE   + ['name tenreplaced', 'no name', 'state suspend', 'vlan 10']\nE   ?                      +++++++++++\nE    : ['vlan 10', 'name tenreplaced', 'state suspend', 'no name']",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}