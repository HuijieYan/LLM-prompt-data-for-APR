{
    "ansible:4": {
        "/Volumes/SSD2T/bgp_envs/repos/ansible_4/lib/ansible/playbook/collectionsearch.py": {
            "buggy_functions": [
                {
                    "function_name": "_load_collections",
                    "function_code": "def _load_collections(self, attr, ds):\n    # this will only be called if someone specified a value; call the shared value\n    _ensure_default_collection(collection_list=ds)\n\n    if not ds:  # don't return an empty collection list, just return None\n        return None\n\n    return ds\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 37,
                    "end_line": 44,
                    "variables": {
                        "_ensure_default_collection": [
                            39
                        ],
                        "ds": [
                            41,
                            44,
                            39
                        ]
                    },
                    "filtered_variables": {
                        "_ensure_default_collection": [
                            39
                        ],
                        "ds": [
                            41,
                            44,
                            39
                        ]
                    },
                    "diff_line_number": 43,
                    "class_data": {
                        "signature": "class CollectionSearch()",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def _load_collections(self, attr, ds):\n    _ensure_default_collection(collection_list=ds)\n    if not ds:\n        return None\n    return ds"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "_collections"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "_load_collections(self, attr, ds)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "_ensure_default_collection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ds": {
                                    "variable_value": "['foo.{{bar}}']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                }
                            },
                            {
                                "_ensure_default_collection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ds": {
                                    "variable_value": "['foo.{{bar}}', 'ansible.legacy']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "_ensure_default_collection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ds": {
                                    "variable_value": "['foo.{{bar}}']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "env": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Environment": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collection_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_template": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "display.warning": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "display": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "_ensure_default_collection": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ds": {
                                    "variable_value": "['foo.{{bar}}', 'ansible.legacy']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "env": {
                                    "variable_value": "<jinja2.environment.Environment object at 0x10efb0a10>",
                                    "variable_type": "Environment",
                                    "variable_shape": null
                                },
                                "Environment": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "collection_name": {
                                    "variable_value": "'ansible.legacy'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "is_template": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "display.warning": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "display": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "from ansible.utils.collection_loader import AnsibleCollectionLoader",
                    "start_line": 9,
                    "end_line": 10
                },
                {
                    "snippet_code": "_collections = FieldAttribute(isa='list', listof=string_types, priority=100, default=_ensure_default_collection)",
                    "start_line": 35,
                    "end_line": 36
                }
            ],
            "inscope_functions": [
                "def _ensure_default_collection(collection_list=None):\n    default_collection = AnsibleCollectionLoader().default_collection\n\n    if collection_list is None:\n        collection_list = []\n\n    if default_collection:  # FIXME: exclude role tasks?\n        if isinstance(collection_list, string_types):\n            collection_list = [collection_list]\n\n        if default_collection not in collection_list:\n            collection_list.insert(0, default_collection)\n\n    # if there's something in the list, ensure that builtin or legacy is always there too\n    if collection_list and 'ansible.builtin' not in collection_list and 'ansible.legacy' not in collection_list:\n        collection_list.append('ansible.legacy')\n\n    return collection_list",
                "def _load_collections(self, attr, ds):\n    # this will only be called if someone specified a value; call the shared value\n    _ensure_default_collection(collection_list=ds)\n\n    if not ds:  # don't return an empty collection list, just return None\n        return None\n\n    return ds"
            ],
            "inscope_function_signatures": [
                "_ensure_default_collection(collection_list=None)",
                "_load_collections(self, attr, ds)"
            ],
            "variables_in_file": {
                "__metaclass__": [
                    5
                ],
                "type": [
                    5
                ],
                "default_collection": [
                    18,
                    13,
                    22,
                    23
                ],
                "AnsibleCollectionLoader": [
                    13
                ],
                "collection_list": [
                    15,
                    16,
                    19,
                    20,
                    22,
                    23,
                    26,
                    27,
                    29
                ],
                "isinstance": [
                    19
                ],
                "string_types": [
                    35,
                    19
                ],
                "collection_list.insert": [
                    23
                ],
                "collection_list.append": [
                    27
                ],
                "_collections": [
                    35
                ],
                "FieldAttribute": [
                    35
                ],
                "_ensure_default_collection": [
                    35,
                    39
                ],
                "ds": [
                    41,
                    44,
                    39
                ]
            },
            "filtered_variables_in_file": {
                "__metaclass__": [
                    5
                ],
                "default_collection": [
                    18,
                    13,
                    22,
                    23
                ],
                "AnsibleCollectionLoader": [
                    13
                ],
                "collection_list": [
                    15,
                    16,
                    19,
                    20,
                    22,
                    23,
                    26,
                    27,
                    29
                ],
                "string_types": [
                    35,
                    19
                ],
                "collection_list.insert": [
                    23
                ],
                "collection_list.append": [
                    27
                ],
                "_collections": [
                    35
                ],
                "FieldAttribute": [
                    35
                ],
                "_ensure_default_collection": [
                    35,
                    39
                ],
                "ds": [
                    41,
                    44,
                    39
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/ansible_4/test/units/playbook/test_collectionsearch.py",
                "test_function": "test_collection_static_warning",
                "test_function_code": "def test_collection_static_warning(capsys):\n    \"\"\"Test that collection name is not templated.\n\n    Also, make sure that users see the warning message for the referenced name.\n    \"\"\"\n\n    collection_name = 'foo.{{bar}}'\n    cs = CollectionSearch()\n    assert collection_name in cs._load_collections(None, [collection_name])\n\n    std_out, std_err = capsys.readouterr()\n    assert '[WARNING]: \"collections\" is not templatable, but we found: %s' % collection_name in std_err\n    assert '' == std_out",
                "test_error": "assert ('[WARNING]: \"collections\" is not templatable, but we found: %s' % 'foo.{{bar}}') in ''",
                "full_test_error": "capsys = <_pytest.capture.CaptureFixture object at 0x10db76b10>\n\n    def test_collection_static_warning(capsys):\n        \"\"\"Test that collection name is not templated.\n    \n        Also, make sure that users see the warning message for the referenced name.\n        \"\"\"\n    \n        collection_name = 'foo.{{bar}}'\n        cs = CollectionSearch()\n        assert collection_name in cs._load_collections(None, [collection_name])\n    \n        std_out, std_err = capsys.readouterr()\n>       assert '[WARNING]: \"collections\" is not templatable, but we found: %s' % collection_name in std_err\nE       assert ('[WARNING]: \"collections\" is not templatable, but we found: %s' % 'foo.{{bar}}') in ''\n\ntest/units/playbook/test_collectionsearch.py:37: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}