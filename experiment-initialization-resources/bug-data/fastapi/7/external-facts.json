{
    "fastapi:7": {
        "github_issue_title": [
            "Invalid Constrained Decimals (condecimal) cause 500 response code, rather than a 422 with explanation of what was invalid.\n"
        ],
        "github_issue_description": [
            "Describe the bug\nIf an invalid condecimal is sent to a FastAPI service the service will return a 500 internal server error, instead of a 422 validation error. I can't reproduce this using Pydantic alone.\n\nTo Reproduce\nSteps to reproduce the behavior:\n\nRun the attached condecimal-500-server.py file.\nIn a separate terminal run the attached condecimal-500-client.py file.\ncondecimal-500-server.log shows what you will see in the terminal that is running the server, most of the invalid requests will return a 422 but the one that violates the decimal constraint raises a TypeError.\ncondecimal-500-client.log shows what you will see in the terminal running the client, basically the same info that you see in the server's logs.\nRun the attached condecimal-500-pydantic.py file.\ncondecimal-500-pydantic.log shows what you will see when running that file, Pydantic correctly raises a ValidationError when the constraint is violated indicating that this is not an bug in Pydantic.\nExpected behavior\nI expect a 422 response along with an explanation of what is invalid about the number to be returned, as happens when other invalid payloads are sent.\n\nEnvironment:\n\nOS: Linux\nFastAPI Version: 0.44.0\nPydantic Version: 1.1.1\nPython Version: 3.7.2\n"
        ]
    }
}