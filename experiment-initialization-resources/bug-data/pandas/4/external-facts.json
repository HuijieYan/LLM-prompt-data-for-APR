{
    "pandas:4": {
        "github_issue_title": [
            "BUG: Multijoining indexes always returns indexers, ignores function parameters\n"
        ],
        "github_issue_description": [
            " I have checked that this issue has not already been reported.\n\n I have confirmed this bug exists on the latest version of pandas.\n\n (optional) I have confirmed this bug exists on the master branch of pandas.\n\nCode Sample\n>>>frame = pd.DataFrame([(1,2,3,4),(4,5,6,7)],columns=[\"i1\", \"i2\", \"i3\",\"val\"]).set_index([\"i1\",\"i2\",\"i3\"])\n>>>frame2 = pd.DataFrame([(1,2,3),(4,5,6)],columns=[\"i1\", \"i2\", \"val\"]).set_index([\"i1\",\"i2\"])\n>>>frame.index.join(frame2.index,return_indexers=False)\n(MultiIndex([(1, 2, 3),\n            (4, 5, 6)],\n           names=['i1', 'i2', 'i3']), None, None)\nProblem description\nParameter return_indexers is ignored in some cases of __join_multi\n\nExpected Output\n>>>frame.index.join(frame2.index,return_indexers=False)\nMultiIndex([(1, 2, 3),\n            (4, 5, 6)],\n           names=['i1', 'i2', 'i3'])\n"
        ]
    }
}