{
    "pandas:42": {
        "github_issue_title": [
            "BUG: Regression in assert_frame_equal check_dtype for extension dtypes\n"
        ],
        "github_issue_description": [
            "Consider this small example of two DataFrames, one with an Int64 extension dtype, the other with the same values but object dtype:\n\ndf1 = pd.DataFrame({'a': pd.array([1, 2, 3], dtype=\"Int64\")}) \ndf2 = df1.astype(object)   \nWith pandas 1.0.1, this passes assert_frame_equal with the check_dtype=False:\n\nIn [5]: pd.testing.assert_frame_equal(df1, df2)  \n...\nAttribute \"dtype\" are different\n[left]:  Int64\n[right]: object\n\nIn [6]: pd.testing.assert_frame_equal(df1, df2, check_dtype=False)  \nbut with master (since #32570, see my comment there, cc @jbrockmendel), this fails:\n\nIn [2]: pd.testing.assert_frame_equal(df1, df2, check_dtype=False)   \n---------------------------------------------------------------------------\nAssertionError                            Traceback (most recent call last)\n<ipython-input-2-d2d792202db1> in <module>\n----> 1 pd.testing.assert_frame_equal(df1, df2, check_dtype=False)\n\n~/scipy/pandas/pandas/_testing.py in assert_frame_equal(left, right, check_dtype, check_index_type, check_column_type, check_frame_type, check_less_precise, check_names, by_blocks, check_exact, check_datetimelike_compat, check_categorical, check_like, obj)\n   1378                 check_datetimelike_compat=check_datetimelike_compat,\n   1379                 check_categorical=check_categorical,\n-> 1380                 obj=f'{obj}.iloc[:, {i}] (column name=\"{col}\")',\n   1381             )\n   1382 \n\n~/scipy/pandas/pandas/_testing.py in assert_series_equal(left, right, check_dtype, check_index_type, check_series_type, check_less_precise, check_names, check_exact, check_datetimelike_compat, check_categorical, check_category_order, obj)\n   1177         )\n   1178     elif is_extension_array_dtype(left.dtype) or is_extension_array_dtype(right.dtype):\n-> 1179         assert_extension_array_equal(left._values, right._values)\n   1180     elif needs_i8_conversion(left.dtype) or needs_i8_conversion(right.dtype):\n   1181         # DatetimeArray or TimedeltaArray\n\n~/scipy/pandas/pandas/_testing.py in assert_extension_array_equal(left, right, check_dtype, check_less_precise, check_exact)\n   1017     \"\"\"\n   1018     assert isinstance(left, ExtensionArray), \"left is not an ExtensionArray\"\n-> 1019     assert isinstance(right, ExtensionArray), \"right is not an ExtensionArray\"\n   1020     if check_dtype:\n   1021         assert_attr_equal(\"dtype\", left, right, obj=\"ExtensionArray\")\n\nAssertionError: right is not an ExtensionArray\n"
        ]
    }
}