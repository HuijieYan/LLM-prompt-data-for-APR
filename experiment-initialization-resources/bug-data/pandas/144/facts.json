{
    "1.1.1": "def _decorate_ticks(self, ax, name, ticklabels, start_edge, end_edge):\n    ax.set_xlim((start_edge, end_edge))\n    ax.set_xticks(self.tick_pos)\n    ax.set_xticklabels(ticklabels)\n    if name is not None and self.use_index:\n        ax.set_xlabel(name)\n",
    "1.1.2": null,
    "1.2.1": "class BarPlot(MPLPlot)",
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "pandas/plotting/_matplotlib/core.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_xtick_barPlot(self):\n        # GH28172\n        s = pd.Series(range(10), index=[\"P{i:02d}\".format(i=i) for i in range(10)])\n        ax = s.plot.bar(xticks=range(0, 11, 2))\n        exp = np.array(list(range(0, 11, 2)))\n        tm.assert_numpy_array_equal(exp, ax.get_xticks())"
    ],
    "1.4.2": [
        "pandas/tests/plotting/test_series.py"
    ],
    "2.1.1": [
        [
            "E               AssertionError: numpy array are different\nE               \nE               numpy array shapes are different\nE               [left]:  (6,)\nE               [right]: (10,)"
        ]
    ],
    "2.1.2": [
        [
            "self = <pandas.tests.plotting.test_series.TestSeriesPlots object at 0x7f7609d4bac0>\n\n    def test_xtick_barPlot(self):\n        # GH28172\n        s = pd.Series(range(10), index=[\"P{i:02d}\".format(i=i) for i in range(10)])\n        ax = s.plot.bar(xticks=range(0, 11, 2))\n        exp = np.array(list(range(0, 11, 2)))\n>       tm.assert_numpy_array_equal(exp, ax.get_xticks())\n\npandas/tests/plotting/test_series.py:879: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nleft = array([ 0,  2,  4,  6,  8, 10])\nright = array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]), err_msg = None\n\n    def _raise(left, right, err_msg):\n        if err_msg is None:\n            if left.shape != right.shape:\n>               raise_assert_detail(\n                    obj,\n                    \"{obj} shapes are different\".format(obj=obj),\n                    left.shape,\n                    right.shape,\n                )",
            "\npandas/util/testing.py:988: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "start_edge": {
                    "value": "-0.5",
                    "shape": "()",
                    "omitted": false
                },
                "end_edge": {
                    "value": "9.5",
                    "shape": "()",
                    "omitted": false
                },
                "self.tick_pos": {
                    "value": "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])",
                    "shape": "(10,)",
                    "omitted": false
                },
                "ticklabels": {
                    "value": "['P00', 'P01', 'P02', 'P03', 'P04', 'P05', 'P06', 'P07', 'P08', 'P09']",
                    "shape": "10",
                    "omitted": false
                },
                "self.use_index": {
                    "value": "True",
                    "shape": null,
                    "omitted": false
                }
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "start_edge": "float64",
                "end_edge": "float64",
                "self.tick_pos": "ndarray",
                "ticklabels": "list",
                "self.use_index": "bool"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "start_edge": {
                    "value": "-0.5",
                    "shape": "()",
                    "omitted": false
                },
                "end_edge": {
                    "value": "9.5",
                    "shape": "()",
                    "omitted": false
                },
                "self.xticks": {
                    "value": "range(0, 11, 2)",
                    "shape": "6",
                    "omitted": false
                },
                "self.tick_pos": {
                    "value": "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])",
                    "shape": "(10,)",
                    "omitted": false
                },
                "ticklabels": {
                    "value": "['P00', 'P01', 'P02', 'P03', 'P04', 'P05', 'P06', 'P07', 'P08', 'P09']",
                    "shape": "10",
                    "omitted": false
                },
                "self.use_index": {
                    "value": "True",
                    "shape": null,
                    "omitted": false
                }
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "start_edge": "float64",
                "end_edge": "float64",
                "self.xticks": "range",
                "self.tick_pos": "ndarray",
                "ticklabels": "list",
                "self.use_index": "bool"
            },
            {}
        ]
    ],
    "3.1.1": [
        "unable to set xticks within bar() plotting function\n"
    ],
    "3.1.2": [
        "Code Sample, a copy-pastable example if possible\nIn the code below:\n\npd.Series(range(10), index=range(10)).plot.bar(xticks=range(0, 11, 2))\nxticks argument has no effect. However, there's no such problem in line() plot.\n\nExpected Output\nOutput plot is expected to have xticks defined by xticks argument, e.g. in the example above it should be set to [0, 2, 4, 6, 8, 10].\n"
    ],
    "used_imports": null
}