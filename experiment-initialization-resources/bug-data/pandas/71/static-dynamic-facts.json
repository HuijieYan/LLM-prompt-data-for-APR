{
    "pandas:71": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/core/reshape/tile.py": {
            "buggy_functions": [
                {
                    "function_name": "cut",
                    "function_code": "def cut(\n    x,\n    bins,\n    right: bool = True,\n    labels=None,\n    retbins: bool = False,\n    precision: int = 3,\n    include_lowest: bool = False,\n    duplicates: str = \"raise\",\n):\n    \"\"\"\n    Bin values into discrete intervals.\n\n    Use `cut` when you need to segment and sort data values into bins. This\n    function is also useful for going from a continuous variable to a\n    categorical variable. For example, `cut` could convert ages to groups of\n    age ranges. Supports binning into an equal number of bins, or a\n    pre-specified array of bins.\n\n    Parameters\n    ----------\n    x : array-like\n        The input array to be binned. Must be 1-dimensional.\n    bins : int, sequence of scalars, or IntervalIndex\n        The criteria to bin by.\n\n        * int : Defines the number of equal-width bins in the range of `x`. The\n          range of `x` is extended by .1% on each side to include the minimum\n          and maximum values of `x`.\n        * sequence of scalars : Defines the bin edges allowing for non-uniform\n          width. No extension of the range of `x` is done.\n        * IntervalIndex : Defines the exact bins to be used. Note that\n          IntervalIndex for `bins` must be non-overlapping.\n\n    right : bool, default True\n        Indicates whether `bins` includes the rightmost edge or not. If\n        ``right == True`` (the default), then the `bins` ``[1, 2, 3, 4]``\n        indicate (1,2], (2,3], (3,4]. This argument is ignored when\n        `bins` is an IntervalIndex.\n    labels : array or False, default None\n        Specifies the labels for the returned bins. Must be the same length as\n        the resulting bins. If False, returns only integer indicators of the\n        bins. This affects the type of the output container (see below).\n        This argument is ignored when `bins` is an IntervalIndex. If True,\n        raises an error.\n    retbins : bool, default False\n        Whether to return the bins or not. Useful when bins is provided\n        as a scalar.\n    precision : int, default 3\n        The precision at which to store and display the bins labels.\n    include_lowest : bool, default False\n        Whether the first interval should be left-inclusive or not.\n    duplicates : {default 'raise', 'drop'}, optional\n        If bin edges are not unique, raise ValueError or drop non-uniques.\n\n        .. versionadded:: 0.23.0\n\n    Returns\n    -------\n    out : Categorical, Series, or ndarray\n        An array-like object representing the respective bin for each value\n        of `x`. The type depends on the value of `labels`.\n\n        * True (default) : returns a Series for Series `x` or a\n          Categorical for all other inputs. The values stored within\n          are Interval dtype.\n\n        * sequence of scalars : returns a Series for Series `x` or a\n          Categorical for all other inputs. The values stored within\n          are whatever the type in the sequence is.\n\n        * False : returns an ndarray of integers.\n\n    bins : numpy.ndarray or IntervalIndex.\n        The computed or specified bins. Only returned when `retbins=True`.\n        For scalar or sequence `bins`, this is an ndarray with the computed\n        bins. If set `duplicates=drop`, `bins` will drop non-unique bin. For\n        an IntervalIndex `bins`, this is equal to `bins`.\n\n    See Also\n    --------\n    qcut : Discretize variable into equal-sized buckets based on rank\n        or based on sample quantiles.\n    Categorical : Array type for storing data that come from a\n        fixed set of values.\n    Series : One-dimensional array with axis labels (including time series).\n    IntervalIndex : Immutable Index implementing an ordered, sliceable set.\n\n    Notes\n    -----\n    Any NA values will be NA in the result. Out of bounds values will be NA in\n    the resulting Series or Categorical object.\n\n    Examples\n    --------\n    Discretize into three equal-sized bins.\n\n    >>> pd.cut(np.array([1, 7, 5, 4, 6, 3]), 3)\n    ... # doctest: +ELLIPSIS\n    [(0.994, 3.0], (5.0, 7.0], (3.0, 5.0], (3.0, 5.0], (5.0, 7.0], ...\n    Categories (3, interval[float64]): [(0.994, 3.0] < (3.0, 5.0] ...\n\n    >>> pd.cut(np.array([1, 7, 5, 4, 6, 3]), 3, retbins=True)\n    ... # doctest: +ELLIPSIS\n    ([(0.994, 3.0], (5.0, 7.0], (3.0, 5.0], (3.0, 5.0], (5.0, 7.0], ...\n    Categories (3, interval[float64]): [(0.994, 3.0] < (3.0, 5.0] ...\n    array([0.994, 3.   , 5.   , 7.   ]))\n\n    Discovers the same bins, but assign them specific labels. Notice that\n    the returned Categorical's categories are `labels` and is ordered.\n\n    >>> pd.cut(np.array([1, 7, 5, 4, 6, 3]),\n    ...        3, labels=[\"bad\", \"medium\", \"good\"])\n    [bad, good, medium, medium, good, bad]\n    Categories (3, object): [bad < medium < good]\n\n    ``labels=False`` implies you just want the bins back.\n\n    >>> pd.cut([0, 1, 1, 2], bins=4, labels=False)\n    array([0, 1, 1, 3])\n\n    Passing a Series as an input returns a Series with categorical dtype:\n\n    >>> s = pd.Series(np.array([2, 4, 6, 8, 10]),\n    ...               index=['a', 'b', 'c', 'd', 'e'])\n    >>> pd.cut(s, 3)\n    ... # doctest: +ELLIPSIS\n    a    (1.992, 4.667]\n    b    (1.992, 4.667]\n    c    (4.667, 7.333]\n    d     (7.333, 10.0]\n    e     (7.333, 10.0]\n    dtype: category\n    Categories (3, interval[float64]): [(1.992, 4.667] < (4.667, ...\n\n    Passing a Series as an input returns a Series with mapping value.\n    It is used to map numerically to intervals based on bins.\n\n    >>> s = pd.Series(np.array([2, 4, 6, 8, 10]),\n    ...               index=['a', 'b', 'c', 'd', 'e'])\n    >>> pd.cut(s, [0, 2, 4, 6, 8, 10], labels=False, retbins=True, right=False)\n    ... # doctest: +ELLIPSIS\n    (a    0.0\n     b    1.0\n     c    2.0\n     d    3.0\n     e    4.0\n     dtype: float64, array([0, 2, 4, 6, 8]))\n\n    Use `drop` optional when bins is not unique\n\n    >>> pd.cut(s, [0, 2, 4, 6, 10, 10], labels=False, retbins=True,\n    ...        right=False, duplicates='drop')\n    ... # doctest: +ELLIPSIS\n    (a    0.0\n     b    1.0\n     c    2.0\n     d    3.0\n     e    3.0\n     dtype: float64, array([0, 2, 4, 6, 8]))\n\n    Passing an IntervalIndex for `bins` results in those categories exactly.\n    Notice that values not covered by the IntervalIndex are set to NaN. 0\n    is to the left of the first bin (which is closed on the right), and 1.5\n    falls between two bins.\n\n    >>> bins = pd.IntervalIndex.from_tuples([(0, 1), (2, 3), (4, 5)])\n    >>> pd.cut([0, 0.5, 1.5, 2.5, 4.5], bins)\n    [NaN, (0, 1], NaN, (2, 3], (4, 5]]\n    Categories (3, interval[int64]): [(0, 1] < (2, 3] < (4, 5]]\n    \"\"\"\n    # NOTE: this binning code is changed a bit from histogram for var(x) == 0\n\n    # for handling the cut for datetime and timedelta objects\n    original = x\n    x = _preprocess_for_cut(x)\n    x, dtype = _coerce_to_type(x)\n\n    if not np.iterable(bins):\n        if is_scalar(bins) and bins < 1:\n            raise ValueError(\"`bins` should be a positive integer.\")\n\n        try:  # for array-like\n            sz = x.size\n        except AttributeError:\n            x = np.asarray(x)\n            sz = x.size\n\n        if sz == 0:\n            raise ValueError(\"Cannot cut empty array\")\n\n        rng = (nanops.nanmin(x), nanops.nanmax(x))\n        mn, mx = [mi + 0.0 for mi in rng]\n\n        if np.isinf(mn) or np.isinf(mx):\n            # GH 24314\n            raise ValueError(\n                \"cannot specify integer `bins` when input data contains infinity\"\n            )\n        elif mn == mx:  # adjust end points before binning\n            mn -= 0.001 * abs(mn) if mn != 0 else 0.001\n            mx += 0.001 * abs(mx) if mx != 0 else 0.001\n            bins = np.linspace(mn, mx, bins + 1, endpoint=True)\n        else:  # adjust end points after binning\n            bins = np.linspace(mn, mx, bins + 1, endpoint=True)\n            adj = (mx - mn) * 0.001  # 0.1% of the range\n            if right:\n                bins[0] -= adj\n            else:\n                bins[-1] += adj\n\n    elif isinstance(bins, IntervalIndex):\n        if bins.is_overlapping:\n            raise ValueError(\"Overlapping IntervalIndex is not accepted.\")\n\n    else:\n        if is_datetime64tz_dtype(bins):\n            bins = np.asarray(bins, dtype=_NS_DTYPE)\n        else:\n            bins = np.asarray(bins)\n        bins = _convert_bin_to_numeric_type(bins, dtype)\n\n        # GH 26045: cast to float64 to avoid an overflow\n        if (np.diff(bins.astype(\"float64\")) < 0).any():\n            raise ValueError(\"bins must increase monotonically.\")\n\n    fac, bins = _bins_to_cuts(\n        x,\n        bins,\n        right=right,\n        labels=labels,\n        precision=precision,\n        include_lowest=include_lowest,\n        dtype=dtype,\n        duplicates=duplicates,\n    )\n\n    return _postprocess_for_cut(fac, bins, retbins, dtype, original)\n",
                    "decorators": [],
                    "docstring": "Bin values into discrete intervals.\n\nUse `cut` when you need to segment and sort data values into bins. This\nfunction is also useful for going from a continuous variable to a\ncategorical variable. For example, `cut` could convert ages to groups of\nage ranges. Supports binning into an equal number of bins, or a\npre-specified array of bins.\n\nParameters\n----------\nx : array-like\n    The input array to be binned. Must be 1-dimensional.\nbins : int, sequence of scalars, or IntervalIndex\n    The criteria to bin by.\n\n    * int : Defines the number of equal-width bins in the range of `x`. The\n      range of `x` is extended by .1% on each side to include the minimum\n      and maximum values of `x`.\n    * sequence of scalars : Defines the bin edges allowing for non-uniform\n      width. No extension of the range of `x` is done.\n    * IntervalIndex : Defines the exact bins to be used. Note that\n      IntervalIndex for `bins` must be non-overlapping.\n\nright : bool, default True\n    Indicates whether `bins` includes the rightmost edge or not. If\n    ``right == True`` (the default), then the `bins` ``[1, 2, 3, 4]``\n    indicate (1,2], (2,3], (3,4]. This argument is ignored when\n    `bins` is an IntervalIndex.\nlabels : array or False, default None\n    Specifies the labels for the returned bins. Must be the same length as\n    the resulting bins. If False, returns only integer indicators of the\n    bins. This affects the type of the output container (see below).\n    This argument is ignored when `bins` is an IntervalIndex. If True,\n    raises an error.\nretbins : bool, default False\n    Whether to return the bins or not. Useful when bins is provided\n    as a scalar.\nprecision : int, default 3\n    The precision at which to store and display the bins labels.\ninclude_lowest : bool, default False\n    Whether the first interval should be left-inclusive or not.\nduplicates : {default 'raise', 'drop'}, optional\n    If bin edges are not unique, raise ValueError or drop non-uniques.\n\n    .. versionadded:: 0.23.0\n\nReturns\n-------\nout : Categorical, Series, or ndarray\n    An array-like object representing the respective bin for each value\n    of `x`. The type depends on the value of `labels`.\n\n    * True (default) : returns a Series for Series `x` or a\n      Categorical for all other inputs. The values stored within\n      are Interval dtype.\n\n    * sequence of scalars : returns a Series for Series `x` or a\n      Categorical for all other inputs. The values stored within\n      are whatever the type in the sequence is.\n\n    * False : returns an ndarray of integers.\n\nbins : numpy.ndarray or IntervalIndex.\n    The computed or specified bins. Only returned when `retbins=True`.\n    For scalar or sequence `bins`, this is an ndarray with the computed\n    bins. If set `duplicates=drop`, `bins` will drop non-unique bin. For\n    an IntervalIndex `bins`, this is equal to `bins`.\n\nSee Also\n--------\nqcut : Discretize variable into equal-sized buckets based on rank\n    or based on sample quantiles.\nCategorical : Array type for storing data that come from a\n    fixed set of values.\nSeries : One-dimensional array with axis labels (including time series).\nIntervalIndex : Immutable Index implementing an ordered, sliceable set.\n\nNotes\n-----\nAny NA values will be NA in the result. Out of bounds values will be NA in\nthe resulting Series or Categorical object.\n\nExamples\n--------\nDiscretize into three equal-sized bins.\n\n>>> pd.cut(np.array([1, 7, 5, 4, 6, 3]), 3)\n... # doctest: +ELLIPSIS\n[(0.994, 3.0], (5.0, 7.0], (3.0, 5.0], (3.0, 5.0], (5.0, 7.0], ...\nCategories (3, interval[float64]): [(0.994, 3.0] < (3.0, 5.0] ...\n\n>>> pd.cut(np.array([1, 7, 5, 4, 6, 3]), 3, retbins=True)\n... # doctest: +ELLIPSIS\n([(0.994, 3.0], (5.0, 7.0], (3.0, 5.0], (3.0, 5.0], (5.0, 7.0], ...\nCategories (3, interval[float64]): [(0.994, 3.0] < (3.0, 5.0] ...\narray([0.994, 3.   , 5.   , 7.   ]))\n\nDiscovers the same bins, but assign them specific labels. Notice that\nthe returned Categorical's categories are `labels` and is ordered.\n\n>>> pd.cut(np.array([1, 7, 5, 4, 6, 3]),\n...        3, labels=[\"bad\", \"medium\", \"good\"])\n[bad, good, medium, medium, good, bad]\nCategories (3, object): [bad < medium < good]\n\n``labels=False`` implies you just want the bins back.\n\n>>> pd.cut([0, 1, 1, 2], bins=4, labels=False)\narray([0, 1, 1, 3])\n\nPassing a Series as an input returns a Series with categorical dtype:\n\n>>> s = pd.Series(np.array([2, 4, 6, 8, 10]),\n...               index=['a', 'b', 'c', 'd', 'e'])\n>>> pd.cut(s, 3)\n... # doctest: +ELLIPSIS\na    (1.992, 4.667]\nb    (1.992, 4.667]\nc    (4.667, 7.333]\nd     (7.333, 10.0]\ne     (7.333, 10.0]\ndtype: category\nCategories (3, interval[float64]): [(1.992, 4.667] < (4.667, ...\n\nPassing a Series as an input returns a Series with mapping value.\nIt is used to map numerically to intervals based on bins.\n\n>>> s = pd.Series(np.array([2, 4, 6, 8, 10]),\n...               index=['a', 'b', 'c', 'd', 'e'])\n>>> pd.cut(s, [0, 2, 4, 6, 8, 10], labels=False, retbins=True, right=False)\n... # doctest: +ELLIPSIS\n(a    0.0\n b    1.0\n c    2.0\n d    3.0\n e    4.0\n dtype: float64, array([0, 2, 4, 6, 8]))\n\nUse `drop` optional when bins is not unique\n\n>>> pd.cut(s, [0, 2, 4, 6, 10, 10], labels=False, retbins=True,\n...        right=False, duplicates='drop')\n... # doctest: +ELLIPSIS\n(a    0.0\n b    1.0\n c    2.0\n d    3.0\n e    3.0\n dtype: float64, array([0, 2, 4, 6, 8]))\n\nPassing an IntervalIndex for `bins` results in those categories exactly.\nNotice that values not covered by the IntervalIndex are set to NaN. 0\nis to the left of the first bin (which is closed on the right), and 1.5\nfalls between two bins.\n\n>>> bins = pd.IntervalIndex.from_tuples([(0, 1), (2, 3), (4, 5)])\n>>> pd.cut([0, 0.5, 1.5, 2.5, 4.5], bins)\n[NaN, (0, 1], NaN, (2, 3], (4, 5]]\nCategories (3, interval[int64]): [(0, 1] < (2, 3] < (4, 5]]",
                    "start_line": 30,
                    "end_line": 267,
                    "variables": {
                        "bool": [
                            33,
                            35,
                            37
                        ],
                        "int": [
                            36
                        ],
                        "str": [
                            38
                        ],
                        "original": [
                            267,
                            204
                        ],
                        "x": [
                            257,
                            204,
                            205,
                            206,
                            213,
                            215,
                            216,
                            221
                        ],
                        "_preprocess_for_cut": [
                            205
                        ],
                        "dtype": [
                            250,
                            267,
                            206,
                            263
                        ],
                        "_coerce_to_type": [
                            206
                        ],
                        "np.iterable": [
                            208
                        ],
                        "np": [
                            224,
                            232,
                            234,
                            208,
                            215,
                            249,
                            247,
                            253
                        ],
                        "bins": [
                            256,
                            258,
                            232,
                            234,
                            267,
                            237,
                            239,
                            208,
                            209,
                            241,
                            242,
                            246,
                            247,
                            249,
                            250,
                            253
                        ],
                        "is_scalar": [
                            209
                        ],
                        "ValueError": [
                            226,
                            210,
                            243,
                            219,
                            254
                        ],
                        "sz": [
                            216,
                            218,
                            213
                        ],
                        "x.size": [
                            216,
                            213
                        ],
                        "AttributeError": [
                            214
                        ],
                        "np.asarray": [
                            249,
                            247,
                            215
                        ],
                        "rng": [
                            221,
                            222
                        ],
                        "nanops.nanmin": [
                            221
                        ],
                        "nanops": [
                            221
                        ],
                        "nanops.nanmax": [
                            221
                        ],
                        "mn": [
                            224,
                            229,
                            230,
                            232,
                            234,
                            235,
                            222
                        ],
                        "mx": [
                            224,
                            229,
                            231,
                            232,
                            234,
                            235,
                            222
                        ],
                        "mi": [
                            222
                        ],
                        "np.isinf": [
                            224
                        ],
                        "abs": [
                            230,
                            231
                        ],
                        "np.linspace": [
                            232,
                            234
                        ],
                        "adj": [
                            235,
                            237,
                            239
                        ],
                        "right": [
                            259,
                            236
                        ],
                        "isinstance": [
                            241
                        ],
                        "IntervalIndex": [
                            241
                        ],
                        "bins.is_overlapping": [
                            242
                        ],
                        "is_datetime64tz_dtype": [
                            246
                        ],
                        "_NS_DTYPE": [
                            247
                        ],
                        "_convert_bin_to_numeric_type": [
                            250
                        ],
                        "any": [
                            253
                        ],
                        "np.diff": [
                            253
                        ],
                        "bins.astype": [
                            253
                        ],
                        "fac": [
                            256,
                            267
                        ],
                        "_bins_to_cuts": [
                            256
                        ],
                        "labels": [
                            260
                        ],
                        "precision": [
                            261
                        ],
                        "include_lowest": [
                            262
                        ],
                        "duplicates": [
                            264
                        ],
                        "_postprocess_for_cut": [
                            267
                        ],
                        "retbins": [
                            267
                        ]
                    },
                    "filtered_variables": {
                        "original": [
                            267,
                            204
                        ],
                        "x": [
                            257,
                            204,
                            205,
                            206,
                            213,
                            215,
                            216,
                            221
                        ],
                        "_preprocess_for_cut": [
                            205
                        ],
                        "dtype": [
                            250,
                            267,
                            206,
                            263
                        ],
                        "_coerce_to_type": [
                            206
                        ],
                        "np.iterable": [
                            208
                        ],
                        "np": [
                            224,
                            232,
                            234,
                            208,
                            215,
                            249,
                            247,
                            253
                        ],
                        "bins": [
                            256,
                            258,
                            232,
                            234,
                            267,
                            237,
                            239,
                            208,
                            209,
                            241,
                            242,
                            246,
                            247,
                            249,
                            250,
                            253
                        ],
                        "is_scalar": [
                            209
                        ],
                        "sz": [
                            216,
                            218,
                            213
                        ],
                        "x.size": [
                            216,
                            213
                        ],
                        "np.asarray": [
                            249,
                            247,
                            215
                        ],
                        "rng": [
                            221,
                            222
                        ],
                        "nanops.nanmin": [
                            221
                        ],
                        "nanops": [
                            221
                        ],
                        "nanops.nanmax": [
                            221
                        ],
                        "mn": [
                            224,
                            229,
                            230,
                            232,
                            234,
                            235,
                            222
                        ],
                        "mx": [
                            224,
                            229,
                            231,
                            232,
                            234,
                            235,
                            222
                        ],
                        "mi": [
                            222
                        ],
                        "np.isinf": [
                            224
                        ],
                        "np.linspace": [
                            232,
                            234
                        ],
                        "adj": [
                            235,
                            237,
                            239
                        ],
                        "right": [
                            259,
                            236
                        ],
                        "IntervalIndex": [
                            241
                        ],
                        "bins.is_overlapping": [
                            242
                        ],
                        "is_datetime64tz_dtype": [
                            246
                        ],
                        "_NS_DTYPE": [
                            247
                        ],
                        "_convert_bin_to_numeric_type": [
                            250
                        ],
                        "np.diff": [
                            253
                        ],
                        "bins.astype": [
                            253
                        ],
                        "fac": [
                            256,
                            267
                        ],
                        "_bins_to_cuts": [
                            256
                        ],
                        "labels": [
                            260
                        ],
                        "precision": [
                            261
                        ],
                        "include_lowest": [
                            262
                        ],
                        "duplicates": [
                            264
                        ],
                        "_postprocess_for_cut": [
                            267
                        ],
                        "retbins": [
                            267
                        ]
                    },
                    "diff_line_number": 207,
                    "class_data": null,
                    "used_imports": [
                        "import numpy as np",
                        "from pandas.core.dtypes.common import _NS_DTYPE, ensure_int64, is_bool_dtype, is_categorical_dtype, is_datetime64_dtype, is_datetime64tz_dtype, is_datetime_or_timedelta_dtype, is_integer, is_list_like, is_scalar, is_timedelta64_dtype",
                        "from pandas import Categorical, Index, IntervalIndex, to_datetime, to_timedelta",
                        "import pandas.core.nanops as nanops"
                    ],
                    "variable_values": [
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    5, <NA>,    4, <NA>,    6, <NA>,    1, <NA>,    3, <NA>,    6, <NA>,\n    9, <NA>,    8, <NA>,    0, <NA>,    4, <NA>,    7, <NA>,    8, <NA>,    1,\n <NA>,    5, <NA>,    6, <NA>,    2, <NA>,    2, <NA>,    1, <NA>,    7, <NA>,\n    5, <NA>,    1, <NA>,    8, <NA>,    8, <NA>,    3, <NA>,    2]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    6, <NA>,    8, <NA>,    4, <NA>,    8, <NA>,    4, <NA>,    5, <NA>,\n    8, <NA>,    1, <NA>,    0, <NA>,    6, <NA>,    7, <NA>,    7, <NA>,    3,\n <NA>,    4, <NA>,    6, <NA>,    4, <NA>,    6, <NA>,    9, <NA>,    7, <NA>,\n    6, <NA>,    7, <NA>,    2, <NA>,    5, <NA>,    2, <NA>,    8]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "Int64Dtype()",
                                    "variable_type": "Int64Dtype",
                                    "variable_shape": null
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "<bound method BaseMaskedArray.to_numpy of <IntegerArray>\n[<NA>,    6, <NA>,    8, <NA>,    4, <NA>,    8, <NA>,    4, <NA>,    5, <NA>,\n    8, <NA>,    1, <NA>,    0, <NA>,    6, <NA>,    7, <NA>,    7, <NA>,    3,\n <NA>,    4, <NA>,    6, <NA>,    4, <NA>,    6, <NA>,    9, <NA>,    7, <NA>,\n    6, <NA>,    7, <NA>,    2, <NA>,    5, <NA>,    2, <NA>,    8]\nLength: 50, dtype: Int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    6, <NA>,    8, <NA>,    4, <NA>,    8, <NA>,    4, <NA>,    5, <NA>,\n    8, <NA>,    1, <NA>,    0, <NA>,    6, <NA>,    7, <NA>,    7, <NA>,    3,\n <NA>,    4, <NA>,    6, <NA>,    4, <NA>,    6, <NA>,    9, <NA>,    7, <NA>,\n    6, <NA>,    7, <NA>,    2, <NA>,    5, <NA>,    2, <NA>,    8]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 6, nan, 8, nan, 4, nan, 8, nan, 4, nan, 5, nan, 8, nan, 1,\n       nan, 0, nan, 6, nan, 7, nan, 7, nan, 3, nan, 4, nan, 6, nan, 4,\n       nan, 6, nan, 9, nan, 7, nan, 6, nan, 7, nan, 2, nan, 5, nan, 2,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([-0.009,  3.   ,  6.   ,  9.   ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(4,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": "(0, 9)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": "9.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": "0.009000000000000001",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bb5f49e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, (-0.009999999999999998, 3.0], NaN, (-0.009999999999999998, 3.0], NaN, ..., (-0.009999999999999998, 3.0], NaN, (-0.009999999999999998, 3.0], NaN, (-0.009999999999999998, 3.0]]\nLength: 50\nCategories (3, interval[float64]): [(-0.009999999999999998, 3.0] < (3.0, 6.0] < (6.0, 9.0]]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "array([nan, 6, nan, 8, nan, 4, nan, 8, nan, 4, nan, 5, nan, 8, nan, 1,\n       nan, 0, nan, 6, nan, 7, nan, 7, nan, 3, nan, 4, nan, 6, nan, 4,\n       nan, 6, nan, 9, nan, 7, nan, 6, nan, 7, nan, 2, nan, 5, nan, 2,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "array([nan, 6, nan, 8, nan, 4, nan, 8, nan, 4, nan, 5, nan, 8, nan, 1,\n       nan, 0, nan, 6, nan, 7, nan, 7, nan, 3, nan, 4, nan, 6, nan, 4,\n       nan, 6, nan, 9, nan, 7, nan, 6, nan, 7, nan, 2, nan, 5, nan, 2,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 6, nan, 8, nan, 4, nan, 8, nan, 4, nan, 5, nan, 8, nan, 1,\n       nan, 0, nan, 6, nan, 7, nan, 7, nan, 3, nan, 4, nan, 6, nan, 4,\n       nan, 6, nan, 9, nan, 7, nan, 6, nan, 7, nan, 2, nan, 5, nan, 2,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([-0.009,  3.   ,  6.   ,  9.   ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(4,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": "(0, 9)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": "9.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": "0.009000000000000001",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfeb8bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, (-0.009999999999999998, 3.0], NaN, (-0.009999999999999998, 3.0], NaN, ..., (-0.009999999999999998, 3.0], NaN, (-0.009999999999999998, 3.0], NaN, (-0.009999999999999998, 3.0]]\nLength: 50\nCategories (3, interval[float64]): [(-0.009999999999999998, 3.0] < (3.0, 6.0] < (6.0, 9.0]]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    0, <NA>,    0, <NA>,    5, <NA>,    8, <NA>,    9, <NA>,    9, <NA>,\n    7, <NA>,    0, <NA>,    6, <NA>,    3, <NA>,    5, <NA>,    9, <NA>,    7,\n <NA>,    9, <NA>,    4, <NA>,    0, <NA>,    7, <NA>,    2, <NA>,    3, <NA>,\n    2, <NA>,    0, <NA>,    2, <NA>,    0, <NA>,    3, <NA>,    8]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "Int64Dtype()",
                                    "variable_type": "Int64Dtype",
                                    "variable_shape": null
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "<bound method BaseMaskedArray.to_numpy of <IntegerArray>\n[<NA>,    0, <NA>,    0, <NA>,    5, <NA>,    8, <NA>,    9, <NA>,    9, <NA>,\n    7, <NA>,    0, <NA>,    6, <NA>,    3, <NA>,    5, <NA>,    9, <NA>,    7,\n <NA>,    9, <NA>,    4, <NA>,    0, <NA>,    7, <NA>,    2, <NA>,    3, <NA>,\n    2, <NA>,    0, <NA>,    2, <NA>,    0, <NA>,    3, <NA>,    8]\nLength: 50, dtype: Int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    0, <NA>,    0, <NA>,    5, <NA>,    8, <NA>,    9, <NA>,    9, <NA>,\n    7, <NA>,    0, <NA>,    6, <NA>,    3, <NA>,    5, <NA>,    9, <NA>,    7,\n <NA>,    9, <NA>,    4, <NA>,    0, <NA>,    7, <NA>,    2, <NA>,    3, <NA>,\n    2, <NA>,    0, <NA>,    2, <NA>,    0, <NA>,    3, <NA>,    8]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 0, nan, 0, nan, 5, nan, 8, nan, 9, nan, 9, nan, 7, nan, 0,\n       nan, 6, nan, 3, nan, 5, nan, 9, nan, 7, nan, 9, nan, 4, nan, 0,\n       nan, 7, nan, 2, nan, 3, nan, 2, nan, 0, nan, 2, nan, 0, nan, 3,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([ 0,  5, 15])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bb5f4d00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, (-0.001, 5.0], NaN, (-0.001, 5.0], NaN, ..., (-0.001, 5.0], NaN, (-0.001, 5.0], NaN, (-0.001, 5.0]]\nLength: 50\nCategories (2, interval[float64]): [(-0.001, 5.0] < (5.0, 15.0]]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "array([nan, 0, nan, 0, nan, 5, nan, 8, nan, 9, nan, 9, nan, 7, nan, 0,\n       nan, 6, nan, 3, nan, 5, nan, 9, nan, 7, nan, 9, nan, 4, nan, 0,\n       nan, 7, nan, 2, nan, 3, nan, 2, nan, 0, nan, 2, nan, 0, nan, 3,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "array([nan, 0, nan, 0, nan, 5, nan, 8, nan, 9, nan, 9, nan, 7, nan, 0,\n       nan, 6, nan, 3, nan, 5, nan, 9, nan, 7, nan, 9, nan, 4, nan, 0,\n       nan, 7, nan, 2, nan, 3, nan, 2, nan, 0, nan, 2, nan, 0, nan, 3,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 0, nan, 0, nan, 5, nan, 8, nan, 9, nan, 9, nan, 7, nan, 0,\n       nan, 6, nan, 3, nan, 5, nan, 9, nan, 7, nan, 9, nan, 4, nan, 0,\n       nan, 7, nan, 2, nan, 3, nan, 2, nan, 0, nan, 2, nan, 0, nan, 3,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([ 0,  5, 15])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bb5fb210>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, (-0.001, 5.0], NaN, (-0.001, 5.0], NaN, ..., (-0.001, 5.0], NaN, (-0.001, 5.0], NaN, (-0.001, 5.0]]\nLength: 50\nCategories (2, interval[float64]): [(-0.001, 5.0] < (5.0, 15.0]]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    1, <NA>,    2, <NA>,    5, <NA>,    9, <NA>,    4, <NA>,    6, <NA>,\n    3, <NA>,    5, <NA>,    7, <NA>,    4, <NA>,    3, <NA>,    9, <NA>,    3,\n <NA>,    4, <NA>,    0, <NA>,    8, <NA>,    8, <NA>,    7, <NA>,    5, <NA>,\n    4, <NA>,    9, <NA>,    1, <NA>,    3, <NA>,    2, <NA>,    8]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "Int64Dtype()",
                                    "variable_type": "Int64Dtype",
                                    "variable_shape": null
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "<bound method BaseMaskedArray.to_numpy of <IntegerArray>\n[<NA>,    1, <NA>,    2, <NA>,    5, <NA>,    9, <NA>,    4, <NA>,    6, <NA>,\n    3, <NA>,    5, <NA>,    7, <NA>,    4, <NA>,    3, <NA>,    9, <NA>,    3,\n <NA>,    4, <NA>,    0, <NA>,    8, <NA>,    8, <NA>,    7, <NA>,    5, <NA>,\n    4, <NA>,    9, <NA>,    1, <NA>,    3, <NA>,    2, <NA>,    8]\nLength: 50, dtype: Int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    1, <NA>,    2, <NA>,    5, <NA>,    9, <NA>,    4, <NA>,    6, <NA>,\n    3, <NA>,    5, <NA>,    7, <NA>,    4, <NA>,    3, <NA>,    9, <NA>,    3,\n <NA>,    4, <NA>,    0, <NA>,    8, <NA>,    8, <NA>,    7, <NA>,    5, <NA>,\n    4, <NA>,    9, <NA>,    1, <NA>,    3, <NA>,    2, <NA>,    8]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 1, nan, 2, nan, 5, nan, 9, nan, 4, nan, 6, nan, 3, nan, 5,\n       nan, 7, nan, 4, nan, 3, nan, 9, nan, 3, nan, 4, nan, 0, nan, 8,\n       nan, 8, nan, 7, nan, 5, nan, 4, nan, 9, nan, 1, nan, 3, nan, 2,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([0.   , 3.   , 6.   , 9.009])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(4,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": "(0, 9)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": "9.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": "0.009000000000000001",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfe92030>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, NaN, NaN, ..., NaN, NaN, NaN, NaN, NaN]\nLength: 50\nCategories (3, interval[float64]): [[0.0, 3.0) < [3.0, 6.0) < [6.0, 9.009)]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "array([nan, 1, nan, 2, nan, 5, nan, 9, nan, 4, nan, 6, nan, 3, nan, 5,\n       nan, 7, nan, 4, nan, 3, nan, 9, nan, 3, nan, 4, nan, 0, nan, 8,\n       nan, 8, nan, 7, nan, 5, nan, 4, nan, 9, nan, 1, nan, 3, nan, 2,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "array([nan, 1, nan, 2, nan, 5, nan, 9, nan, 4, nan, 6, nan, 3, nan, 5,\n       nan, 7, nan, 4, nan, 3, nan, 9, nan, 3, nan, 4, nan, 0, nan, 8,\n       nan, 8, nan, 7, nan, 5, nan, 4, nan, 9, nan, 1, nan, 3, nan, 2,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 1, nan, 2, nan, 5, nan, 9, nan, 4, nan, 6, nan, 3, nan, 5,\n       nan, 7, nan, 4, nan, 3, nan, 9, nan, 3, nan, 4, nan, 0, nan, 8,\n       nan, 8, nan, 7, nan, 5, nan, 4, nan, 9, nan, 1, nan, 3, nan, 2,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([0.   , 3.   , 6.   , 9.009])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(4,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": "(0, 9)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": "9.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": "0.009000000000000001",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bb5f4c10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, NaN, NaN, ..., NaN, NaN, NaN, NaN, NaN]\nLength: 50\nCategories (3, interval[float64]): [[0.0, 3.0) < [3.0, 6.0) < [6.0, 9.009)]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    6, <NA>,    0, <NA>,    9, <NA>,    2, <NA>,    5, <NA>,    1, <NA>,\n    4, <NA>,    8, <NA>,    2, <NA>,    8, <NA>,    0, <NA>,    2, <NA>,    6,\n <NA>,    6, <NA>,    2, <NA>,    3, <NA>,    8, <NA>,    6, <NA>,    9, <NA>,\n    2, <NA>,    0, <NA>,    1, <NA>,    9, <NA>,    3, <NA>,    8]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "Int64Dtype()",
                                    "variable_type": "Int64Dtype",
                                    "variable_shape": null
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "<bound method BaseMaskedArray.to_numpy of <IntegerArray>\n[<NA>,    6, <NA>,    0, <NA>,    9, <NA>,    2, <NA>,    5, <NA>,    1, <NA>,\n    4, <NA>,    8, <NA>,    2, <NA>,    8, <NA>,    0, <NA>,    2, <NA>,    6,\n <NA>,    6, <NA>,    2, <NA>,    3, <NA>,    8, <NA>,    6, <NA>,    9, <NA>,\n    2, <NA>,    0, <NA>,    1, <NA>,    9, <NA>,    3, <NA>,    8]\nLength: 50, dtype: Int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    6, <NA>,    0, <NA>,    9, <NA>,    2, <NA>,    5, <NA>,    1, <NA>,\n    4, <NA>,    8, <NA>,    2, <NA>,    8, <NA>,    0, <NA>,    2, <NA>,    6,\n <NA>,    6, <NA>,    2, <NA>,    3, <NA>,    8, <NA>,    6, <NA>,    9, <NA>,\n    2, <NA>,    0, <NA>,    1, <NA>,    9, <NA>,    3, <NA>,    8]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 6, nan, 0, nan, 9, nan, 2, nan, 5, nan, 1, nan, 4, nan, 8,\n       nan, 2, nan, 8, nan, 0, nan, 2, nan, 6, nan, 6, nan, 2, nan, 3,\n       nan, 8, nan, 6, nan, 9, nan, 2, nan, 0, nan, 1, nan, 9, nan, 3,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([ 0,  5, 15])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfe92530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, [0.0, 5.0), NaN, ..., NaN, NaN, NaN, NaN, NaN]\nLength: 50\nCategories (2, interval[int64]): [[0, 5) < [5, 15)]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "array([nan, 6, nan, 0, nan, 9, nan, 2, nan, 5, nan, 1, nan, 4, nan, 8,\n       nan, 2, nan, 8, nan, 0, nan, 2, nan, 6, nan, 6, nan, 2, nan, 3,\n       nan, 8, nan, 6, nan, 9, nan, 2, nan, 0, nan, 1, nan, 9, nan, 3,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "array([nan, 6, nan, 0, nan, 9, nan, 2, nan, 5, nan, 1, nan, 4, nan, 8,\n       nan, 2, nan, 8, nan, 0, nan, 2, nan, 6, nan, 6, nan, 2, nan, 3,\n       nan, 8, nan, 6, nan, 9, nan, 2, nan, 0, nan, 1, nan, 9, nan, 3,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 6, nan, 0, nan, 9, nan, 2, nan, 5, nan, 1, nan, 4, nan, 8,\n       nan, 2, nan, 8, nan, 0, nan, 2, nan, 6, nan, 6, nan, 2, nan, 3,\n       nan, 8, nan, 6, nan, 9, nan, 2, nan, 0, nan, 1, nan, 9, nan, 3,\n       nan, 8], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([ 0,  5, 15])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bb5f4a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, [0.0, 5.0), NaN, ..., NaN, NaN, NaN, NaN, NaN]\nLength: 50\nCategories (2, interval[int64]): [[0, 5) < [5, 15)]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    5, <NA>,    2, <NA>,    1, <NA>,    7, <NA>,    1, <NA>,    5, <NA>,\n    3, <NA>,    4, <NA>,    1, <NA>,    4, <NA>,    2, <NA>,    0, <NA>,    7,\n <NA>,    0, <NA>,    3, <NA>,    7, <NA>,    3, <NA>,    2, <NA>,    1, <NA>,\n    4, <NA>,    9, <NA>,    8, <NA>,    1, <NA>,    4, <NA>,    5]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "Int64Dtype()",
                                    "variable_type": "Int64Dtype",
                                    "variable_shape": null
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "<bound method BaseMaskedArray.to_numpy of <IntegerArray>\n[<NA>,    5, <NA>,    2, <NA>,    1, <NA>,    7, <NA>,    1, <NA>,    5, <NA>,\n    3, <NA>,    4, <NA>,    1, <NA>,    4, <NA>,    2, <NA>,    0, <NA>,    7,\n <NA>,    0, <NA>,    3, <NA>,    7, <NA>,    3, <NA>,    2, <NA>,    1, <NA>,\n    4, <NA>,    9, <NA>,    8, <NA>,    1, <NA>,    4, <NA>,    5]\nLength: 50, dtype: Int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    5, <NA>,    2, <NA>,    1, <NA>,    7, <NA>,    1, <NA>,    5, <NA>,\n    3, <NA>,    4, <NA>,    1, <NA>,    4, <NA>,    2, <NA>,    0, <NA>,    7,\n <NA>,    0, <NA>,    3, <NA>,    7, <NA>,    3, <NA>,    2, <NA>,    1, <NA>,\n    4, <NA>,    9, <NA>,    8, <NA>,    1, <NA>,    4, <NA>,    5]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 5, nan, 2, nan, 1, nan, 7, nan, 1, nan, 5, nan, 3, nan, 4,\n       nan, 1, nan, 4, nan, 2, nan, 0, nan, 7, nan, 0, nan, 3, nan, 7,\n       nan, 3, nan, 2, nan, 1, nan, 4, nan, 9, nan, 8, nan, 1, nan, 4,\n       nan, 5], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([-0.009,  3.   ,  6.   ,  9.   ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(4,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": "(0, 9)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": "9.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": "0.009000000000000001",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bb5f48f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, (-0.009, 3.0], NaN, (-0.009, 3.0], NaN, ..., (-0.009, 3.0], NaN, (-0.009, 3.0], NaN, (-0.009, 3.0]]\nLength: 50\nCategories (3, interval[float64]): [(-0.009, 3.0] < (3.0, 6.0] < (6.0, 9.0]]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "array([nan, 5, nan, 2, nan, 1, nan, 7, nan, 1, nan, 5, nan, 3, nan, 4,\n       nan, 1, nan, 4, nan, 2, nan, 0, nan, 7, nan, 0, nan, 3, nan, 7,\n       nan, 3, nan, 2, nan, 1, nan, 4, nan, 9, nan, 8, nan, 1, nan, 4,\n       nan, 5], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "array([nan, 5, nan, 2, nan, 1, nan, 7, nan, 1, nan, 5, nan, 3, nan, 4,\n       nan, 1, nan, 4, nan, 2, nan, 0, nan, 7, nan, 0, nan, 3, nan, 7,\n       nan, 3, nan, 2, nan, 1, nan, 4, nan, 9, nan, 8, nan, 1, nan, 4,\n       nan, 5], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 5, nan, 2, nan, 1, nan, 7, nan, 1, nan, 5, nan, 3, nan, 4,\n       nan, 1, nan, 4, nan, 2, nan, 0, nan, 7, nan, 0, nan, 3, nan, 7,\n       nan, 3, nan, 2, nan, 1, nan, 4, nan, 9, nan, 8, nan, 1, nan, 4,\n       nan, 5], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([-0.009,  3.   ,  6.   ,  9.   ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(4,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": "(0, 9)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": "9.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": "0.009000000000000001",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfe929e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, (-0.009, 3.0], NaN, (-0.009, 3.0], NaN, ..., (-0.009, 3.0], NaN, (-0.009, 3.0], NaN, (-0.009, 3.0]]\nLength: 50\nCategories (3, interval[float64]): [(-0.009, 3.0] < (3.0, 6.0] < (6.0, 9.0]]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    0, <NA>,    9, <NA>,    9, <NA>,    1, <NA>,    2, <NA>,    6, <NA>,\n    9, <NA>,    6, <NA>,    0, <NA>,    2, <NA>,    6, <NA>,    0, <NA>,    7,\n <NA>,    5, <NA>,    9, <NA>,    2, <NA>,    6, <NA>,    5, <NA>,    4, <NA>,\n    6, <NA>,    4, <NA>,    9, <NA>,    9, <NA>,    2, <NA>,    0]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "Int64Dtype()",
                                    "variable_type": "Int64Dtype",
                                    "variable_shape": null
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "<bound method BaseMaskedArray.to_numpy of <IntegerArray>\n[<NA>,    0, <NA>,    9, <NA>,    9, <NA>,    1, <NA>,    2, <NA>,    6, <NA>,\n    9, <NA>,    6, <NA>,    0, <NA>,    2, <NA>,    6, <NA>,    0, <NA>,    7,\n <NA>,    5, <NA>,    9, <NA>,    2, <NA>,    6, <NA>,    5, <NA>,    4, <NA>,\n    6, <NA>,    4, <NA>,    9, <NA>,    9, <NA>,    2, <NA>,    0]\nLength: 50, dtype: Int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    0, <NA>,    9, <NA>,    9, <NA>,    1, <NA>,    2, <NA>,    6, <NA>,\n    9, <NA>,    6, <NA>,    0, <NA>,    2, <NA>,    6, <NA>,    0, <NA>,    7,\n <NA>,    5, <NA>,    9, <NA>,    2, <NA>,    6, <NA>,    5, <NA>,    4, <NA>,\n    6, <NA>,    4, <NA>,    9, <NA>,    9, <NA>,    2, <NA>,    0]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 0, nan, 9, nan, 9, nan, 1, nan, 2, nan, 6, nan, 9, nan, 6,\n       nan, 0, nan, 2, nan, 6, nan, 0, nan, 7, nan, 5, nan, 9, nan, 2,\n       nan, 6, nan, 5, nan, 4, nan, 6, nan, 4, nan, 9, nan, 9, nan, 2,\n       nan, 0], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([ 0,  5, 15])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfef2120>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, (0.0, 5.0], NaN, ..., (0.0, 5.0], NaN, (0.0, 5.0], NaN, NaN]\nLength: 50\nCategories (2, interval[int64]): [(0, 5] < (5, 15]]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "array([nan, 0, nan, 9, nan, 9, nan, 1, nan, 2, nan, 6, nan, 9, nan, 6,\n       nan, 0, nan, 2, nan, 6, nan, 0, nan, 7, nan, 5, nan, 9, nan, 2,\n       nan, 6, nan, 5, nan, 4, nan, 6, nan, 4, nan, 9, nan, 9, nan, 2,\n       nan, 0], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "array([nan, 0, nan, 9, nan, 9, nan, 1, nan, 2, nan, 6, nan, 9, nan, 6,\n       nan, 0, nan, 2, nan, 6, nan, 0, nan, 7, nan, 5, nan, 9, nan, 2,\n       nan, 6, nan, 5, nan, 4, nan, 6, nan, 4, nan, 9, nan, 9, nan, 2,\n       nan, 0], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 0, nan, 9, nan, 9, nan, 1, nan, 2, nan, 6, nan, 9, nan, 6,\n       nan, 0, nan, 2, nan, 6, nan, 0, nan, 7, nan, 5, nan, 9, nan, 2,\n       nan, 6, nan, 5, nan, 4, nan, 6, nan, 4, nan, 9, nan, 9, nan, 2,\n       nan, 0], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([ 0,  5, 15])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bb5f4bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, (0.0, 5.0], NaN, ..., (0.0, 5.0], NaN, (0.0, 5.0], NaN, NaN]\nLength: 50\nCategories (2, interval[int64]): [(0, 5] < (5, 15]]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    2, <NA>,    6, <NA>,    3, <NA>,    1, <NA>,    7, <NA>,    7, <NA>,\n    1, <NA>,    1, <NA>,    5, <NA>,    9, <NA>,    8, <NA>,    1, <NA>,    0,\n <NA>,    9, <NA>,    5, <NA>,    4, <NA>,    6, <NA>,    4, <NA>,    3, <NA>,\n    8, <NA>,    7, <NA>,    7, <NA>,    7, <NA>,    4, <NA>,    1]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "Int64Dtype()",
                                    "variable_type": "Int64Dtype",
                                    "variable_shape": null
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "<bound method BaseMaskedArray.to_numpy of <IntegerArray>\n[<NA>,    2, <NA>,    6, <NA>,    3, <NA>,    1, <NA>,    7, <NA>,    7, <NA>,\n    1, <NA>,    1, <NA>,    5, <NA>,    9, <NA>,    8, <NA>,    1, <NA>,    0,\n <NA>,    9, <NA>,    5, <NA>,    4, <NA>,    6, <NA>,    4, <NA>,    3, <NA>,\n    8, <NA>,    7, <NA>,    7, <NA>,    7, <NA>,    4, <NA>,    1]\nLength: 50, dtype: Int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    2, <NA>,    6, <NA>,    3, <NA>,    1, <NA>,    7, <NA>,    7, <NA>,\n    1, <NA>,    1, <NA>,    5, <NA>,    9, <NA>,    8, <NA>,    1, <NA>,    0,\n <NA>,    9, <NA>,    5, <NA>,    4, <NA>,    6, <NA>,    4, <NA>,    3, <NA>,\n    8, <NA>,    7, <NA>,    7, <NA>,    7, <NA>,    4, <NA>,    1]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 2, nan, 6, nan, 3, nan, 1, nan, 7, nan, 7, nan, 1, nan, 1,\n       nan, 5, nan, 9, nan, 8, nan, 1, nan, 0, nan, 9, nan, 5, nan, 4,\n       nan, 6, nan, 4, nan, 3, nan, 8, nan, 7, nan, 7, nan, 7, nan, 4,\n       nan, 1], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([0.   , 3.   , 6.   , 9.009])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(4,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": "(0, 9)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": "9.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": "0.009000000000000001",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfe80350>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, NaN, NaN, ..., NaN, NaN, NaN, NaN, NaN]\nLength: 50\nCategories (3, interval[float64]): [[0.0, 3.0) < [3.0, 6.0) < [6.0, 9.009)]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "array([nan, 2, nan, 6, nan, 3, nan, 1, nan, 7, nan, 7, nan, 1, nan, 1,\n       nan, 5, nan, 9, nan, 8, nan, 1, nan, 0, nan, 9, nan, 5, nan, 4,\n       nan, 6, nan, 4, nan, 3, nan, 8, nan, 7, nan, 7, nan, 7, nan, 4,\n       nan, 1], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "array([nan, 2, nan, 6, nan, 3, nan, 1, nan, 7, nan, 7, nan, 1, nan, 1,\n       nan, 5, nan, 9, nan, 8, nan, 1, nan, 0, nan, 9, nan, 5, nan, 4,\n       nan, 6, nan, 4, nan, 3, nan, 8, nan, 7, nan, 7, nan, 7, nan, 4,\n       nan, 1], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 2, nan, 6, nan, 3, nan, 1, nan, 7, nan, 7, nan, 1, nan, 1,\n       nan, 5, nan, 9, nan, 8, nan, 1, nan, 0, nan, 9, nan, 5, nan, 4,\n       nan, 6, nan, 4, nan, 3, nan, 8, nan, 7, nan, 7, nan, 7, nan, 4,\n       nan, 1], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([0.   , 3.   , 6.   , 9.009])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(4,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": "(0, 9)",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": "9.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": "0.009000000000000001",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfe92120>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, NaN, NaN, ..., NaN, NaN, NaN, NaN, NaN]\nLength: 50\nCategories (3, interval[float64]): [[0.0, 3.0) < [3.0, 6.0) < [6.0, 9.009)]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    7, <NA>,    0, <NA>,    4, <NA>,    5, <NA>,    2, <NA>,    5, <NA>,\n    7, <NA>,    8, <NA>,    4, <NA>,    7, <NA>,    0, <NA>,    2, <NA>,    4,\n <NA>,    9, <NA>,    3, <NA>,    8, <NA>,    6, <NA>,    7, <NA>,    0, <NA>,\n    6, <NA>,    3, <NA>,    5, <NA>,    3, <NA>,    4, <NA>,    5]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "Int64Dtype()",
                                    "variable_type": "Int64Dtype",
                                    "variable_shape": null
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "<bound method BaseMaskedArray.to_numpy of <IntegerArray>\n[<NA>,    7, <NA>,    0, <NA>,    4, <NA>,    5, <NA>,    2, <NA>,    5, <NA>,\n    7, <NA>,    8, <NA>,    4, <NA>,    7, <NA>,    0, <NA>,    2, <NA>,    4,\n <NA>,    9, <NA>,    3, <NA>,    8, <NA>,    6, <NA>,    7, <NA>,    0, <NA>,\n    6, <NA>,    3, <NA>,    5, <NA>,    3, <NA>,    4, <NA>,    5]\nLength: 50, dtype: Int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "<IntegerArray>\n[<NA>,    7, <NA>,    0, <NA>,    4, <NA>,    5, <NA>,    2, <NA>,    5, <NA>,\n    7, <NA>,    8, <NA>,    4, <NA>,    7, <NA>,    0, <NA>,    2, <NA>,    4,\n <NA>,    9, <NA>,    3, <NA>,    8, <NA>,    6, <NA>,    7, <NA>,    0, <NA>,\n    6, <NA>,    3, <NA>,    5, <NA>,    3, <NA>,    4, <NA>,    5]\nLength: 50, dtype: Int64",
                                    "variable_type": "IntegerArray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 7, nan, 0, nan, 4, nan, 5, nan, 2, nan, 5, nan, 7, nan, 8,\n       nan, 4, nan, 7, nan, 0, nan, 2, nan, 4, nan, 9, nan, 3, nan, 8,\n       nan, 6, nan, 7, nan, 0, nan, 6, nan, 3, nan, 5, nan, 3, nan, 4,\n       nan, 5], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([ 0,  5, 15])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfe80c10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, NaN, NaN, ..., NaN, NaN, NaN, NaN, NaN]\nLength: 50\nCategories (2, interval[int64]): [[0, 5) < [5, 15)]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "original": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x": {
                                    "variable_value": "array([nan, 7, nan, 0, nan, 4, nan, 5, nan, 2, nan, 5, nan, 7, nan, 8,\n       nan, 4, nan, 7, nan, 0, nan, 2, nan, 4, nan, 9, nan, 3, nan, 8,\n       nan, 6, nan, 7, nan, 0, nan, 6, nan, 3, nan, 5, nan, 3, nan, 4,\n       nan, 5], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "[0, 5, 15]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "original": {
                                    "variable_value": "array([nan, 7, nan, 0, nan, 4, nan, 5, nan, 2, nan, 5, nan, 7, nan, 8,\n       nan, 4, nan, 7, nan, 0, nan, 2, nan, 4, nan, 9, nan, 3, nan, 8,\n       nan, 6, nan, 7, nan, 0, nan, 6, nan, 3, nan, 5, nan, 3, nan, 4,\n       nan, 5], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "x": {
                                    "variable_value": "array([nan, 7, nan, 0, nan, 4, nan, 5, nan, 2, nan, 5, nan, 7, nan, 8,\n       nan, 4, nan, 7, nan, 0, nan, 2, nan, 4, nan, 9, nan, 3, nan, 8,\n       nan, 6, nan, 7, nan, 0, nan, 6, nan, 3, nan, 5, nan, 3, nan, 4,\n       nan, 5], dtype=object)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(50,)"
                                },
                                "_preprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dtype": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "_coerce_to_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_extension_array_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.dtype": {
                                    "variable_value": "dtype('O')",
                                    "variable_type": "dtype",
                                    "variable_shape": "()"
                                },
                                "is_integer_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.to_numpy": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.nan": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.iterable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins": {
                                    "variable_value": "array([ 0,  5, 15])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sz": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "x.size": {
                                    "variable_value": "50",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.asarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rng": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmin": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nanops.nanmax": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isinf": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.linspace": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "adj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "right": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "IntervalIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.is_overlapping": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_datetime64tz_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_NS_DTYPE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_convert_bin_to_numeric_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.diff": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bins.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7fd7bfe80120>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "fac": {
                                    "variable_value": "[NaN, NaN, NaN, NaN, NaN, ..., NaN, NaN, NaN, NaN, NaN]\nLength: 50\nCategories (2, interval[int64]): [[0, 5) < [5, 15)]",
                                    "variable_type": "Categorical",
                                    "variable_shape": "(50,)"
                                },
                                "_bins_to_cuts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "labels": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "precision": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "include_lowest": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "duplicates": {
                                    "variable_value": "'raise'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "_postprocess_for_cut": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "retbins": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "from pandas.core.dtypes.common import (\n    _NS_DTYPE,\n    ensure_int64,\n    is_bool_dtype,\n    is_categorical_dtype,\n    is_datetime64_dtype,\n    is_datetime64tz_dtype,\n    is_datetime_or_timedelta_dtype,\n    is_integer,\n    is_list_like,\n    is_scalar,\n    is_timedelta64_dtype,\n)",
                    "start_line": 9,
                    "end_line": 21
                }
            ],
            "inscope_functions": {
                "file_scope_functions": [
                    {
                        "code": "def cut(\n    x,\n    bins,\n    right: bool = True,\n    labels=None,\n    retbins: bool = False,\n    precision: int = 3,\n    include_lowest: bool = False,\n    duplicates: str = \"raise\",\n):\n    \"\"\"\n    Bin values into discrete intervals.\n\n    Use `cut` when you need to segment and sort data values into bins. This\n    function is also useful for going from a continuous variable to a\n    categorical variable. For example, `cut` could convert ages to groups of\n    age ranges. Supports binning into an equal number of bins, or a\n    pre-specified array of bins.\n\n    Parameters\n    ----------\n    x : array-like\n        The input array to be binned. Must be 1-dimensional.\n    bins : int, sequence of scalars, or IntervalIndex\n        The criteria to bin by.\n\n        * int : Defines the number of equal-width bins in the range of `x`. The\n          range of `x` is extended by .1% on each side to include the minimum\n          and maximum values of `x`.\n        * sequence of scalars : Defines the bin edges allowing for non-uniform\n          width. No extension of the range of `x` is done.\n        * IntervalIndex : Defines the exact bins to be used. Note that\n          IntervalIndex for `bins` must be non-overlapping.\n\n    right : bool, default True\n        Indicates whether `bins` includes the rightmost edge or not. If\n        ``right == True`` (the default), then the `bins` ``[1, 2, 3, 4]``\n        indicate (1,2], (2,3], (3,4]. This argument is ignored when\n        `bins` is an IntervalIndex.\n    labels : array or False, default None\n        Specifies the labels for the returned bins. Must be the same length as\n        the resulting bins. If False, returns only integer indicators of the\n        bins. This affects the type of the output container (see below).\n        This argument is ignored when `bins` is an IntervalIndex. If True,\n        raises an error.\n    retbins : bool, default False\n        Whether to return the bins or not. Useful when bins is provided\n        as a scalar.\n    precision : int, default 3\n        The precision at which to store and display the bins labels.\n    include_lowest : bool, default False\n        Whether the first interval should be left-inclusive or not.\n    duplicates : {default 'raise', 'drop'}, optional\n        If bin edges are not unique, raise ValueError or drop non-uniques.\n\n        .. versionadded:: 0.23.0\n\n    Returns\n    -------\n    out : Categorical, Series, or ndarray\n        An array-like object representing the respective bin for each value\n        of `x`. The type depends on the value of `labels`.\n\n        * True (default) : returns a Series for Series `x` or a\n          Categorical for all other inputs. The values stored within\n          are Interval dtype.\n\n        * sequence of scalars : returns a Series for Series `x` or a\n          Categorical for all other inputs. The values stored within\n          are whatever the type in the sequence is.\n\n        * False : returns an ndarray of integers.\n\n    bins : numpy.ndarray or IntervalIndex.\n        The computed or specified bins. Only returned when `retbins=True`.\n        For scalar or sequence `bins`, this is an ndarray with the computed\n        bins. If set `duplicates=drop`, `bins` will drop non-unique bin. For\n        an IntervalIndex `bins`, this is equal to `bins`.\n\n    See Also\n    --------\n    qcut : Discretize variable into equal-sized buckets based on rank\n        or based on sample quantiles.\n    Categorical : Array type for storing data that come from a\n        fixed set of values.\n    Series : One-dimensional array with axis labels (including time series).\n    IntervalIndex : Immutable Index implementing an ordered, sliceable set.\n\n    Notes\n    -----\n    Any NA values will be NA in the result. Out of bounds values will be NA in\n    the resulting Series or Categorical object.\n\n    Examples\n    --------\n    Discretize into three equal-sized bins.\n\n    >>> pd.cut(np.array([1, 7, 5, 4, 6, 3]), 3)\n    ... # doctest: +ELLIPSIS\n    [(0.994, 3.0], (5.0, 7.0], (3.0, 5.0], (3.0, 5.0], (5.0, 7.0], ...\n    Categories (3, interval[float64]): [(0.994, 3.0] < (3.0, 5.0] ...\n\n    >>> pd.cut(np.array([1, 7, 5, 4, 6, 3]), 3, retbins=True)\n    ... # doctest: +ELLIPSIS\n    ([(0.994, 3.0], (5.0, 7.0], (3.0, 5.0], (3.0, 5.0], (5.0, 7.0], ...\n    Categories (3, interval[float64]): [(0.994, 3.0] < (3.0, 5.0] ...\n    array([0.994, 3.   , 5.   , 7.   ]))\n\n    Discovers the same bins, but assign them specific labels. Notice that\n    the returned Categorical's categories are `labels` and is ordered.\n\n    >>> pd.cut(np.array([1, 7, 5, 4, 6, 3]),\n    ...        3, labels=[\"bad\", \"medium\", \"good\"])\n    [bad, good, medium, medium, good, bad]\n    Categories (3, object): [bad < medium < good]\n\n    ``labels=False`` implies you just want the bins back.\n\n    >>> pd.cut([0, 1, 1, 2], bins=4, labels=False)\n    array([0, 1, 1, 3])\n\n    Passing a Series as an input returns a Series with categorical dtype:\n\n    >>> s = pd.Series(np.array([2, 4, 6, 8, 10]),\n    ...               index=['a', 'b', 'c', 'd', 'e'])\n    >>> pd.cut(s, 3)\n    ... # doctest: +ELLIPSIS\n    a    (1.992, 4.667]\n    b    (1.992, 4.667]\n    c    (4.667, 7.333]\n    d     (7.333, 10.0]\n    e     (7.333, 10.0]\n    dtype: category\n    Categories (3, interval[float64]): [(1.992, 4.667] < (4.667, ...\n\n    Passing a Series as an input returns a Series with mapping value.\n    It is used to map numerically to intervals based on bins.\n\n    >>> s = pd.Series(np.array([2, 4, 6, 8, 10]),\n    ...               index=['a', 'b', 'c', 'd', 'e'])\n    >>> pd.cut(s, [0, 2, 4, 6, 8, 10], labels=False, retbins=True, right=False)\n    ... # doctest: +ELLIPSIS\n    (a    0.0\n     b    1.0\n     c    2.0\n     d    3.0\n     e    4.0\n     dtype: float64, array([0, 2, 4, 6, 8]))\n\n    Use `drop` optional when bins is not unique\n\n    >>> pd.cut(s, [0, 2, 4, 6, 10, 10], labels=False, retbins=True,\n    ...        right=False, duplicates='drop')\n    ... # doctest: +ELLIPSIS\n    (a    0.0\n     b    1.0\n     c    2.0\n     d    3.0\n     e    3.0\n     dtype: float64, array([0, 2, 4, 6, 8]))\n\n    Passing an IntervalIndex for `bins` results in those categories exactly.\n    Notice that values not covered by the IntervalIndex are set to NaN. 0\n    is to the left of the first bin (which is closed on the right), and 1.5\n    falls between two bins.\n\n    >>> bins = pd.IntervalIndex.from_tuples([(0, 1), (2, 3), (4, 5)])\n    >>> pd.cut([0, 0.5, 1.5, 2.5, 4.5], bins)\n    [NaN, (0, 1], NaN, (2, 3], (4, 5]]\n    Categories (3, interval[int64]): [(0, 1] < (2, 3] < (4, 5]]\n    \"\"\"\n    # NOTE: this binning code is changed a bit from histogram for var(x) == 0\n\n    # for handling the cut for datetime and timedelta objects\n    original = x\n    x = _preprocess_for_cut(x)\n    x, dtype = _coerce_to_type(x)\n\n    if not np.iterable(bins):\n        if is_scalar(bins) and bins < 1:\n            raise ValueError(\"`bins` should be a positive integer.\")\n\n        try:  # for array-like\n            sz = x.size\n        except AttributeError:\n            x = np.asarray(x)\n            sz = x.size\n\n        if sz == 0:\n            raise ValueError(\"Cannot cut empty array\")\n\n        rng = (nanops.nanmin(x), nanops.nanmax(x))\n        mn, mx = [mi + 0.0 for mi in rng]\n\n        if np.isinf(mn) or np.isinf(mx):\n            # GH 24314\n            raise ValueError(\n                \"cannot specify integer `bins` when input data contains infinity\"\n            )\n        elif mn == mx:  # adjust end points before binning\n            mn -= 0.001 * abs(mn) if mn != 0 else 0.001\n            mx += 0.001 * abs(mx) if mx != 0 else 0.001\n            bins = np.linspace(mn, mx, bins + 1, endpoint=True)\n        else:  # adjust end points after binning\n            bins = np.linspace(mn, mx, bins + 1, endpoint=True)\n            adj = (mx - mn) * 0.001  # 0.1% of the range\n            if right:\n                bins[0] -= adj\n            else:\n                bins[-1] += adj\n\n    elif isinstance(bins, IntervalIndex):\n        if bins.is_overlapping:\n            raise ValueError(\"Overlapping IntervalIndex is not accepted.\")\n\n    else:\n        if is_datetime64tz_dtype(bins):\n            bins = np.asarray(bins, dtype=_NS_DTYPE)\n        else:\n            bins = np.asarray(bins)\n        bins = _convert_bin_to_numeric_type(bins, dtype)\n\n        # GH 26045: cast to float64 to avoid an overflow\n        if (np.diff(bins.astype(\"float64\")) < 0).any():\n            raise ValueError(\"bins must increase monotonically.\")\n\n    fac, bins = _bins_to_cuts(\n        x,\n        bins,\n        right=right,\n        labels=labels,\n        precision=precision,\n        include_lowest=include_lowest,\n        dtype=dtype,\n        duplicates=duplicates,\n    )\n\n    return _postprocess_for_cut(fac, bins, retbins, dtype, original)",
                        "signature": "cut(x, bins, right: bool=True, labels=None, retbins: bool=False, precision: int=3, include_lowest: bool=False, duplicates: str='raise')"
                    },
                    {
                        "code": "def qcut(\n    x,\n    q,\n    labels=None,\n    retbins: bool = False,\n    precision: int = 3,\n    duplicates: str = \"raise\",\n):\n    \"\"\"\n    Quantile-based discretization function.\n\n    Discretize variable into equal-sized buckets based on rank or based\n    on sample quantiles. For example 1000 values for 10 quantiles would\n    produce a Categorical object indicating quantile membership for each data point.\n\n    Parameters\n    ----------\n    x : 1d ndarray or Series\n    q : int or list-like of int\n        Number of quantiles. 10 for deciles, 4 for quartiles, etc. Alternately\n        array of quantiles, e.g. [0, .25, .5, .75, 1.] for quartiles.\n    labels : array or False, default None\n        Used as labels for the resulting bins. Must be of the same length as\n        the resulting bins. If False, return only integer indicators of the\n        bins. If True, raises an error.\n    retbins : bool, optional\n        Whether to return the (bins, labels) or not. Can be useful if bins\n        is given as a scalar.\n    precision : int, optional\n        The precision at which to store and display the bins labels.\n    duplicates : {default 'raise', 'drop'}, optional\n        If bin edges are not unique, raise ValueError or drop non-uniques.\n\n    Returns\n    -------\n    out : Categorical or Series or array of integers if labels is False\n        The return type (Categorical or Series) depends on the input: a Series\n        of type category if input is a Series else Categorical. Bins are\n        represented as categories when categorical data is returned.\n    bins : ndarray of floats\n        Returned only if `retbins` is True.\n\n    Notes\n    -----\n    Out of bounds values will be NA in the resulting Categorical object\n\n    Examples\n    --------\n    >>> pd.qcut(range(5), 4)\n    ... # doctest: +ELLIPSIS\n    [(-0.001, 1.0], (-0.001, 1.0], (1.0, 2.0], (2.0, 3.0], (3.0, 4.0]]\n    Categories (4, interval[float64]): [(-0.001, 1.0] < (1.0, 2.0] ...\n\n    >>> pd.qcut(range(5), 3, labels=[\"good\", \"medium\", \"bad\"])\n    ... # doctest: +SKIP\n    [good, good, medium, bad, bad]\n    Categories (3, object): [good < medium < bad]\n\n    >>> pd.qcut(range(5), 4, labels=False)\n    array([0, 0, 1, 2, 3])\n    \"\"\"\n    original = x\n    x = _preprocess_for_cut(x)\n    x, dtype = _coerce_to_type(x)\n\n    if is_integer(q):\n        quantiles = np.linspace(0, 1, q + 1)\n    else:\n        quantiles = q\n    bins = algos.quantile(x, quantiles)\n    fac, bins = _bins_to_cuts(\n        x,\n        bins,\n        labels=labels,\n        precision=precision,\n        include_lowest=True,\n        dtype=dtype,\n        duplicates=duplicates,\n    )\n\n    return _postprocess_for_cut(fac, bins, retbins, dtype, original)",
                        "signature": "qcut(x, q, labels=None, retbins: bool=False, precision: int=3, duplicates: str='raise')"
                    },
                    {
                        "code": "def _bins_to_cuts(\n    x,\n    bins,\n    right: bool = True,\n    labels=None,\n    precision: int = 3,\n    include_lowest: bool = False,\n    dtype=None,\n    duplicates: str = \"raise\",\n):\n\n    if duplicates not in [\"raise\", \"drop\"]:\n        raise ValueError(\n            \"invalid value for 'duplicates' parameter, valid options are: raise, drop\"\n        )\n\n    if isinstance(bins, IntervalIndex):\n        # we have a fast-path here\n        ids = bins.get_indexer(x)\n        result = Categorical.from_codes(ids, categories=bins, ordered=True)\n        return result, bins\n\n    unique_bins = algos.unique(bins)\n    if len(unique_bins) < len(bins) and len(bins) != 2:\n        if duplicates == \"raise\":\n            raise ValueError(\n                f\"Bin edges must be unique: {repr(bins)}.\\n\"\n                f\"You can drop duplicate edges by setting the 'duplicates' kwarg\"\n            )\n        else:\n            bins = unique_bins\n\n    side = \"left\" if right else \"right\"\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n\n    if include_lowest:\n        ids[x == bins[0]] = 1\n\n    na_mask = isna(x) | (ids == len(bins)) | (ids == 0)\n    has_nas = na_mask.any()\n\n    if labels is not False:\n        if not (labels is None or is_list_like(labels)):\n            raise ValueError(\n                \"Bin labels must either be False, None or passed in as a \"\n                \"list-like argument\"\n            )\n\n        elif labels is None:\n            labels = _format_labels(\n                bins, precision, right=right, include_lowest=include_lowest, dtype=dtype\n            )\n\n        else:\n            if len(labels) != len(bins) - 1:\n                raise ValueError(\n                    \"Bin labels must be one fewer than the number of bin edges\"\n                )\n\n        if not is_categorical_dtype(labels):\n            labels = Categorical(labels, categories=labels, ordered=True)\n\n        np.putmask(ids, na_mask, 0)\n        result = algos.take_nd(labels, ids - 1)\n\n    else:\n        result = ids - 1\n        if has_nas:\n            result = result.astype(np.float64)\n            np.putmask(result, na_mask, np.nan)\n\n    return result, bins",
                        "signature": "_bins_to_cuts(x, bins, right: bool=True, labels=None, precision: int=3, include_lowest: bool=False, dtype=None, duplicates: str='raise')"
                    },
                    {
                        "code": "def _coerce_to_type(x):\n    \"\"\"\n    if the passed data is of datetime/timedelta or bool type,\n    this method converts it to numeric so that cut or qcut method can\n    handle it\n    \"\"\"\n    dtype = None\n\n    if is_datetime64tz_dtype(x):\n        dtype = x.dtype\n    elif is_datetime64_dtype(x):\n        x = to_datetime(x)\n        dtype = np.dtype(\"datetime64[ns]\")\n    elif is_timedelta64_dtype(x):\n        x = to_timedelta(x)\n        dtype = np.dtype(\"timedelta64[ns]\")\n    elif is_bool_dtype(x):\n        # GH 20303\n        x = x.astype(np.int64)\n\n    if dtype is not None:\n        # GH 19768: force NaT to NaN during integer conversion\n        x = np.where(x.notna(), x.view(np.int64), np.nan)\n\n    return x, dtype",
                        "signature": "_coerce_to_type(x)"
                    },
                    {
                        "code": "def _convert_bin_to_numeric_type(bins, dtype):\n    \"\"\"\n    if the passed bin is of datetime/timedelta type,\n    this method converts it to integer\n\n    Parameters\n    ----------\n    bins : list-like of bins\n    dtype : dtype of data\n\n    Raises\n    ------\n    ValueError if bins are not of a compat dtype to dtype\n    \"\"\"\n    bins_dtype = infer_dtype(bins, skipna=False)\n    if is_timedelta64_dtype(dtype):\n        if bins_dtype in [\"timedelta\", \"timedelta64\"]:\n            bins = to_timedelta(bins).view(np.int64)\n        else:\n            raise ValueError(\"bins must be of timedelta64 dtype\")\n    elif is_datetime64_dtype(dtype) or is_datetime64tz_dtype(dtype):\n        if bins_dtype in [\"datetime\", \"datetime64\"]:\n            bins = to_datetime(bins).view(np.int64)\n        else:\n            raise ValueError(\"bins must be of datetime64 dtype\")\n\n    return bins",
                        "signature": "_convert_bin_to_numeric_type(bins, dtype)"
                    },
                    {
                        "code": "def _convert_bin_to_datelike_type(bins, dtype):\n    \"\"\"\n    Convert bins to a DatetimeIndex or TimedeltaIndex if the original dtype is\n    datelike\n\n    Parameters\n    ----------\n    bins : list-like of bins\n    dtype : dtype of data\n\n    Returns\n    -------\n    bins : Array-like of bins, DatetimeIndex or TimedeltaIndex if dtype is\n           datelike\n    \"\"\"\n    if is_datetime64tz_dtype(dtype):\n        bins = to_datetime(bins.astype(np.int64), utc=True).tz_convert(dtype.tz)\n    elif is_datetime_or_timedelta_dtype(dtype):\n        bins = Index(bins.astype(np.int64), dtype=dtype)\n    return bins",
                        "signature": "_convert_bin_to_datelike_type(bins, dtype)"
                    },
                    {
                        "code": "def _format_labels(\n    bins, precision: int, right: bool = True, include_lowest: bool = False, dtype=None\n):\n    \"\"\" based on the dtype, return our labels \"\"\"\n\n    closed = \"right\" if right else \"left\"\n\n    if is_datetime64tz_dtype(dtype):\n        formatter = lambda x: Timestamp(x, tz=dtype.tz)\n        adjust = lambda x: x - Timedelta(\"1ns\")\n    elif is_datetime64_dtype(dtype):\n        formatter = Timestamp\n        adjust = lambda x: x - Timedelta(\"1ns\")\n    elif is_timedelta64_dtype(dtype):\n        formatter = Timedelta\n        adjust = lambda x: x - Timedelta(\"1ns\")\n    else:\n        precision = _infer_precision(precision, bins)\n        formatter = lambda x: _round_frac(x, precision)\n        adjust = lambda x: x - 10 ** (-precision)\n\n    breaks = [formatter(b) for b in bins]\n    if right and include_lowest:\n        # adjust lhs of first interval by precision to account for being right closed\n        breaks[0] = adjust(breaks[0])\n\n    return IntervalIndex.from_breaks(breaks, closed=closed)",
                        "signature": "_format_labels(bins, precision: int, right: bool=True, include_lowest: bool=False, dtype=None)"
                    },
                    {
                        "code": "def _preprocess_for_cut(x):\n    \"\"\"\n    handles preprocessing for cut where we convert passed\n    input to array, strip the index information and store it\n    separately\n    \"\"\"\n\n    # Check that the passed array is a Pandas or Numpy object\n    # We don't want to strip away a Pandas data-type here (e.g. datetimetz)\n    ndim = getattr(x, \"ndim\", None)\n    if ndim is None:\n        x = np.asarray(x)\n    if x.ndim != 1:\n        raise ValueError(\"Input array must be 1 dimensional\")\n\n    return x",
                        "signature": "_preprocess_for_cut(x)"
                    },
                    {
                        "code": "def _postprocess_for_cut(fac, bins, retbins: bool, dtype, original):\n    \"\"\"\n    handles post processing for the cut method where\n    we combine the index information if the originally passed\n    datatype was a series\n    \"\"\"\n    if isinstance(original, ABCSeries):\n        fac = original._constructor(fac, index=original.index, name=original.name)\n\n    if not retbins:\n        return fac\n\n    bins = _convert_bin_to_datelike_type(bins, dtype)\n\n    return fac, bins",
                        "signature": "_postprocess_for_cut(fac, bins, retbins: bool, dtype, original)"
                    },
                    {
                        "code": "def _round_frac(x, precision: int):\n    \"\"\"\n    Round the fractional part of the given number\n    \"\"\"\n    if not np.isfinite(x) or x == 0:\n        return x\n    else:\n        frac, whole = np.modf(x)\n        if whole == 0:\n            digits = -int(np.floor(np.log10(abs(frac)))) - 1 + precision\n        else:\n            digits = precision\n        return np.around(x, digits)",
                        "signature": "_round_frac(x, precision: int)"
                    },
                    {
                        "code": "def _infer_precision(base_precision: int, bins) -> int:\n    \"\"\"Infer an appropriate precision for _round_frac\n    \"\"\"\n    for precision in range(base_precision, 20):\n        levels = [_round_frac(b, precision) for b in bins]\n        if algos.unique(levels).size == bins.size:\n            return precision\n    return base_precision  # default",
                        "signature": "_infer_precision(base_precision: int, bins) -> int"
                    }
                ],
                "file_scope_classes": []
            },
            "variables_in_file": {
                "bool": [
                    33,
                    35,
                    356,
                    37,
                    359,
                    552,
                    274,
                    506
                ],
                "int": [
                    578,
                    36,
                    358,
                    584,
                    275,
                    569,
                    506
                ],
                "str": [
                    361,
                    276,
                    38
                ],
                "original": [
                    331,
                    267,
                    204,
                    558,
                    559,
                    350
                ],
                "x": [
                    257,
                    386,
                    513,
                    514,
                    389,
                    517,
                    391,
                    520,
                    523,
                    524,
                    543,
                    545,
                    546,
                    549,
                    435,
                    436,
                    437,
                    438,
                    440,
                    441,
                    443,
                    445,
                    573,
                    574,
                    576,
                    449,
                    451,
                    581,
                    331,
                    204,
                    205,
                    206,
                    332,
                    333,
                    339,
                    213,
                    341,
                    215,
                    216,
                    221,
                    371
                ],
                "_preprocess_for_cut": [
                    332,
                    205
                ],
                "dtype": [
                    512,
                    513,
                    515,
                    518,
                    263,
                    267,
                    403,
                    433,
                    436,
                    564,
                    439,
                    442,
                    447,
                    451,
                    333,
                    206,
                    469,
                    346,
                    474,
                    350,
                    498,
                    499,
                    500,
                    501,
                    250
                ],
                "_coerce_to_type": [
                    333,
                    206
                ],
                "np.iterable": [
                    208
                ],
                "np": [
                    415,
                    545,
                    421,
                    422,
                    439,
                    442,
                    445,
                    573,
                    576,
                    449,
                    578,
                    581,
                    208,
                    336,
                    471,
                    215,
                    476,
                    224,
                    232,
                    234,
                    499,
                    501,
                    247,
                    249,
                    253
                ],
                "bins": [
                    256,
                    258,
                    386,
                    389,
                    391,
                    522,
                    267,
                    526,
                    403,
                    407,
                    424,
                    564,
                    566,
                    588,
                    589,
                    208,
                    209,
                    339,
                    340,
                    468,
                    342,
                    471,
                    476,
                    350,
                    375,
                    480,
                    502,
                    376,
                    232,
                    234,
                    237,
                    239,
                    241,
                    242,
                    369,
                    371,
                    372,
                    246,
                    247,
                    373,
                    249,
                    250,
                    379,
                    499,
                    253,
                    501,
                    383
                ],
                "is_scalar": [
                    209
                ],
                "ValueError": [
                    226,
                    547,
                    478,
                    396,
                    365,
                    210,
                    243,
                    408,
                    473,
                    378,
                    219,
                    254
                ],
                "sz": [
                    216,
                    218,
                    213
                ],
                "x.size": [
                    216,
                    213
                ],
                "AttributeError": [
                    214
                ],
                "np.asarray": [
                    249,
                    247,
                    545,
                    215
                ],
                "rng": [
                    221,
                    222
                ],
                "nanops.nanmin": [
                    221
                ],
                "nanops": [
                    221
                ],
                "nanops.nanmax": [
                    221
                ],
                "mn": [
                    224,
                    229,
                    230,
                    232,
                    234,
                    235,
                    222
                ],
                "mx": [
                    224,
                    229,
                    231,
                    232,
                    234,
                    235,
                    222
                ],
                "mi": [
                    222
                ],
                "np.isinf": [
                    224
                ],
                "abs": [
                    578,
                    230,
                    231
                ],
                "np.linspace": [
                    232,
                    234,
                    336
                ],
                "adj": [
                    235,
                    237,
                    239
                ],
                "right": [
                    385,
                    259,
                    236,
                    527,
                    403,
                    510
                ],
                "isinstance": [
                    558,
                    241,
                    369
                ],
                "IntervalIndex": [
                    241,
                    531,
                    369
                ],
                "bins.is_overlapping": [
                    242
                ],
                "is_datetime64tz_dtype": [
                    512,
                    498,
                    435,
                    246,
                    474
                ],
                "_NS_DTYPE": [
                    247
                ],
                "_convert_bin_to_numeric_type": [
                    250
                ],
                "any": [
                    253
                ],
                "np.diff": [
                    253
                ],
                "bins.astype": [
                    501,
                    499,
                    253
                ],
                "fac": [
                    256,
                    267,
                    559,
                    562,
                    340,
                    566,
                    350
                ],
                "_bins_to_cuts": [
                    256,
                    340
                ],
                "labels": [
                    407,
                    416,
                    260,
                    394,
                    395,
                    401,
                    402,
                    343,
                    412,
                    413
                ],
                "precision": [
                    578,
                    580,
                    261,
                    522,
                    523,
                    524,
                    587,
                    588,
                    590,
                    403,
                    344
                ],
                "include_lowest": [
                    403,
                    388,
                    262,
                    527
                ],
                "duplicates": [
                    264,
                    377,
                    347,
                    364
                ],
                "_postprocess_for_cut": [
                    267,
                    350
                ],
                "retbins": [
                    561,
                    267,
                    350
                ],
                "is_integer": [
                    335
                ],
                "q": [
                    336,
                    338,
                    335
                ],
                "quantiles": [
                    336,
                    338,
                    339
                ],
                "algos.quantile": [
                    339
                ],
                "algos": [
                    416,
                    339,
                    589,
                    375
                ],
                "ids": [
                    416,
                    386,
                    419,
                    389,
                    391,
                    371,
                    372,
                    415
                ],
                "bins.get_indexer": [
                    371
                ],
                "result": [
                    416,
                    419,
                    421,
                    422,
                    424,
                    372,
                    373
                ],
                "Categorical.from_codes": [
                    372
                ],
                "Categorical": [
                    372,
                    413
                ],
                "unique_bins": [
                    376,
                    383,
                    375
                ],
                "algos.unique": [
                    589,
                    375
                ],
                "len": [
                    376,
                    407,
                    391
                ],
                "repr": [
                    379
                ],
                "side": [
                    385,
                    386
                ],
                "ensure_int64": [
                    386
                ],
                "bins.searchsorted": [
                    386
                ],
                "na_mask": [
                    392,
                    415,
                    422,
                    391
                ],
                "isna": [
                    391
                ],
                "has_nas": [
                    392,
                    420
                ],
                "na_mask.any": [
                    392
                ],
                "is_list_like": [
                    395
                ],
                "_format_labels": [
                    402
                ],
                "is_categorical_dtype": [
                    412
                ],
                "np.putmask": [
                    422,
                    415
                ],
                "algos.take_nd": [
                    416
                ],
                "result.astype": [
                    421
                ],
                "np.float64": [
                    421
                ],
                "np.nan": [
                    449,
                    422
                ],
                "x.dtype": [
                    436
                ],
                "is_datetime64_dtype": [
                    474,
                    515,
                    437
                ],
                "to_datetime": [
                    499,
                    476,
                    438
                ],
                "np.dtype": [
                    442,
                    439
                ],
                "is_timedelta64_dtype": [
                    440,
                    469,
                    518
                ],
                "to_timedelta": [
                    441,
                    471
                ],
                "is_bool_dtype": [
                    443
                ],
                "x.astype": [
                    445
                ],
                "np.int64": [
                    449,
                    499,
                    501,
                    471,
                    476,
                    445
                ],
                "np.where": [
                    449
                ],
                "x.notna": [
                    449
                ],
                "x.view": [
                    449
                ],
                "bins_dtype": [
                    475,
                    468,
                    470
                ],
                "infer_dtype": [
                    468
                ],
                "view": [
                    476,
                    471
                ],
                "tz_convert": [
                    499
                ],
                "dtype.tz": [
                    513,
                    499
                ],
                "is_datetime_or_timedelta_dtype": [
                    500
                ],
                "Index": [
                    501
                ],
                "closed": [
                    531,
                    510
                ],
                "formatter": [
                    513,
                    516,
                    519,
                    523,
                    526
                ],
                "Timestamp": [
                    513,
                    516
                ],
                "adjust": [
                    514,
                    517,
                    520,
                    524,
                    529
                ],
                "Timedelta": [
                    520,
                    514,
                    517,
                    519
                ],
                "_infer_precision": [
                    522
                ],
                "_round_frac": [
                    523,
                    588
                ],
                "breaks": [
                    529,
                    531,
                    526
                ],
                "b": [
                    588,
                    526
                ],
                "IntervalIndex.from_breaks": [
                    531
                ],
                "ndim": [
                    544,
                    543
                ],
                "getattr": [
                    543
                ],
                "x.ndim": [
                    546
                ],
                "ABCSeries": [
                    558
                ],
                "original._constructor": [
                    559
                ],
                "original.index": [
                    559
                ],
                "original.name": [
                    559
                ],
                "_convert_bin_to_datelike_type": [
                    564
                ],
                "np.isfinite": [
                    573
                ],
                "frac": [
                    576,
                    578
                ],
                "whole": [
                    576,
                    577
                ],
                "np.modf": [
                    576
                ],
                "digits": [
                    578,
                    580,
                    581
                ],
                "np.floor": [
                    578
                ],
                "np.log10": [
                    578
                ],
                "np.around": [
                    581
                ],
                "range": [
                    587
                ],
                "base_precision": [
                    587,
                    591
                ],
                "levels": [
                    588,
                    589
                ],
                "size": [
                    589
                ],
                "bins.size": [
                    589
                ]
            },
            "filtered_variables_in_file": {
                "original": [
                    331,
                    267,
                    204,
                    558,
                    559,
                    350
                ],
                "x": [
                    257,
                    386,
                    513,
                    514,
                    389,
                    517,
                    391,
                    520,
                    523,
                    524,
                    543,
                    545,
                    546,
                    549,
                    435,
                    436,
                    437,
                    438,
                    440,
                    441,
                    443,
                    445,
                    573,
                    574,
                    576,
                    449,
                    451,
                    581,
                    331,
                    204,
                    205,
                    206,
                    332,
                    333,
                    339,
                    213,
                    341,
                    215,
                    216,
                    221,
                    371
                ],
                "_preprocess_for_cut": [
                    332,
                    205
                ],
                "dtype": [
                    512,
                    513,
                    515,
                    518,
                    263,
                    267,
                    403,
                    433,
                    436,
                    564,
                    439,
                    442,
                    447,
                    451,
                    333,
                    206,
                    469,
                    346,
                    474,
                    350,
                    498,
                    499,
                    500,
                    501,
                    250
                ],
                "_coerce_to_type": [
                    333,
                    206
                ],
                "np.iterable": [
                    208
                ],
                "np": [
                    415,
                    545,
                    421,
                    422,
                    439,
                    442,
                    445,
                    573,
                    576,
                    449,
                    578,
                    581,
                    208,
                    336,
                    471,
                    215,
                    476,
                    224,
                    232,
                    234,
                    499,
                    501,
                    247,
                    249,
                    253
                ],
                "bins": [
                    256,
                    258,
                    386,
                    389,
                    391,
                    522,
                    267,
                    526,
                    403,
                    407,
                    424,
                    564,
                    566,
                    588,
                    589,
                    208,
                    209,
                    339,
                    340,
                    468,
                    342,
                    471,
                    476,
                    350,
                    375,
                    480,
                    502,
                    376,
                    232,
                    234,
                    237,
                    239,
                    241,
                    242,
                    369,
                    371,
                    372,
                    246,
                    247,
                    373,
                    249,
                    250,
                    379,
                    499,
                    253,
                    501,
                    383
                ],
                "is_scalar": [
                    209
                ],
                "sz": [
                    216,
                    218,
                    213
                ],
                "x.size": [
                    216,
                    213
                ],
                "np.asarray": [
                    249,
                    247,
                    545,
                    215
                ],
                "rng": [
                    221,
                    222
                ],
                "nanops.nanmin": [
                    221
                ],
                "nanops": [
                    221
                ],
                "nanops.nanmax": [
                    221
                ],
                "mn": [
                    224,
                    229,
                    230,
                    232,
                    234,
                    235,
                    222
                ],
                "mx": [
                    224,
                    229,
                    231,
                    232,
                    234,
                    235,
                    222
                ],
                "mi": [
                    222
                ],
                "np.isinf": [
                    224
                ],
                "np.linspace": [
                    232,
                    234,
                    336
                ],
                "adj": [
                    235,
                    237,
                    239
                ],
                "right": [
                    385,
                    259,
                    236,
                    527,
                    403,
                    510
                ],
                "IntervalIndex": [
                    241,
                    531,
                    369
                ],
                "bins.is_overlapping": [
                    242
                ],
                "is_datetime64tz_dtype": [
                    512,
                    498,
                    435,
                    246,
                    474
                ],
                "_NS_DTYPE": [
                    247
                ],
                "_convert_bin_to_numeric_type": [
                    250
                ],
                "np.diff": [
                    253
                ],
                "bins.astype": [
                    501,
                    499,
                    253
                ],
                "fac": [
                    256,
                    267,
                    559,
                    562,
                    340,
                    566,
                    350
                ],
                "_bins_to_cuts": [
                    256,
                    340
                ],
                "labels": [
                    407,
                    416,
                    260,
                    394,
                    395,
                    401,
                    402,
                    343,
                    412,
                    413
                ],
                "precision": [
                    578,
                    580,
                    261,
                    522,
                    523,
                    524,
                    587,
                    588,
                    590,
                    403,
                    344
                ],
                "include_lowest": [
                    403,
                    388,
                    262,
                    527
                ],
                "duplicates": [
                    264,
                    377,
                    347,
                    364
                ],
                "_postprocess_for_cut": [
                    267,
                    350
                ],
                "retbins": [
                    561,
                    267,
                    350
                ],
                "is_integer": [
                    335
                ],
                "q": [
                    336,
                    338,
                    335
                ],
                "quantiles": [
                    336,
                    338,
                    339
                ],
                "algos.quantile": [
                    339
                ],
                "algos": [
                    416,
                    339,
                    589,
                    375
                ],
                "ids": [
                    416,
                    386,
                    419,
                    389,
                    391,
                    371,
                    372,
                    415
                ],
                "bins.get_indexer": [
                    371
                ],
                "result": [
                    416,
                    419,
                    421,
                    422,
                    424,
                    372,
                    373
                ],
                "Categorical.from_codes": [
                    372
                ],
                "Categorical": [
                    372,
                    413
                ],
                "unique_bins": [
                    376,
                    383,
                    375
                ],
                "algos.unique": [
                    589,
                    375
                ],
                "side": [
                    385,
                    386
                ],
                "ensure_int64": [
                    386
                ],
                "bins.searchsorted": [
                    386
                ],
                "na_mask": [
                    392,
                    415,
                    422,
                    391
                ],
                "isna": [
                    391
                ],
                "has_nas": [
                    392,
                    420
                ],
                "na_mask.any": [
                    392
                ],
                "is_list_like": [
                    395
                ],
                "_format_labels": [
                    402
                ],
                "is_categorical_dtype": [
                    412
                ],
                "np.putmask": [
                    422,
                    415
                ],
                "algos.take_nd": [
                    416
                ],
                "result.astype": [
                    421
                ],
                "np.float64": [
                    421
                ],
                "np.nan": [
                    449,
                    422
                ],
                "x.dtype": [
                    436
                ],
                "is_datetime64_dtype": [
                    474,
                    515,
                    437
                ],
                "to_datetime": [
                    499,
                    476,
                    438
                ],
                "np.dtype": [
                    442,
                    439
                ],
                "is_timedelta64_dtype": [
                    440,
                    469,
                    518
                ],
                "to_timedelta": [
                    441,
                    471
                ],
                "is_bool_dtype": [
                    443
                ],
                "x.astype": [
                    445
                ],
                "np.int64": [
                    449,
                    499,
                    501,
                    471,
                    476,
                    445
                ],
                "np.where": [
                    449
                ],
                "x.notna": [
                    449
                ],
                "x.view": [
                    449
                ],
                "bins_dtype": [
                    475,
                    468,
                    470
                ],
                "infer_dtype": [
                    468
                ],
                "view": [
                    476,
                    471
                ],
                "tz_convert": [
                    499
                ],
                "dtype.tz": [
                    513,
                    499
                ],
                "is_datetime_or_timedelta_dtype": [
                    500
                ],
                "Index": [
                    501
                ],
                "closed": [
                    531,
                    510
                ],
                "formatter": [
                    513,
                    516,
                    519,
                    523,
                    526
                ],
                "Timestamp": [
                    513,
                    516
                ],
                "adjust": [
                    514,
                    517,
                    520,
                    524,
                    529
                ],
                "Timedelta": [
                    520,
                    514,
                    517,
                    519
                ],
                "_infer_precision": [
                    522
                ],
                "_round_frac": [
                    523,
                    588
                ],
                "breaks": [
                    529,
                    531,
                    526
                ],
                "b": [
                    588,
                    526
                ],
                "IntervalIndex.from_breaks": [
                    531
                ],
                "ndim": [
                    544,
                    543
                ],
                "x.ndim": [
                    546
                ],
                "ABCSeries": [
                    558
                ],
                "original._constructor": [
                    559
                ],
                "original.index": [
                    559
                ],
                "original.name": [
                    559
                ],
                "_convert_bin_to_datelike_type": [
                    564
                ],
                "np.isfinite": [
                    573
                ],
                "frac": [
                    576,
                    578
                ],
                "whole": [
                    576,
                    577
                ],
                "np.modf": [
                    576
                ],
                "digits": [
                    578,
                    580,
                    581
                ],
                "np.floor": [
                    578
                ],
                "np.log10": [
                    578
                ],
                "np.around": [
                    581
                ],
                "base_precision": [
                    587,
                    591
                ],
                "levels": [
                    588,
                    589
                ],
                "size": [
                    589
                ],
                "bins.size": [
                    589
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/tests/arrays/test_integer.py",
                "test_function": "test_cut",
                "test_function_code": "@pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n@pytest.mark.parametrize(\"right\", [True, False])\n@pytest.mark.parametrize(\"include_lowest\", [True, False])\ndef test_cut(bins, right, include_lowest):\n    a = np.random.randint(0, 10, size=50).astype(object)\n    a[::2] = np.nan\n    result = pd.cut(\n        pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n    )\n    expected = pd.cut(a, bins, right=right, include_lowest=include_lowest)\n    tm.assert_categorical_equal(result, expected)",
                "test_error": "TypeError: boolean value of NA is ambiguous",
                "full_test_error": "bins = 3, right = True, include_lowest = True\n\n    @pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n    @pytest.mark.parametrize(\"right\", [True, False])\n    @pytest.mark.parametrize(\"include_lowest\", [True, False])\n    def test_cut(bins, right, include_lowest):\n        a = np.random.randint(0, 10, size=50).astype(object)\n        a[::2] = np.nan\n>       result = pd.cut(\n            pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n        )\n\npandas/tests/arrays/test_integer.py:1070: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "traceback": "pandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('bins', [3, [0, 5, 15]])",
                    "pytest.mark.parametrize('right', [True, False])",
                    "pytest.mark.parametrize('include_lowest', [True, False])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/tests/arrays/test_integer.py",
                "test_function": "test_cut",
                "test_function_code": "@pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n@pytest.mark.parametrize(\"right\", [True, False])\n@pytest.mark.parametrize(\"include_lowest\", [True, False])\ndef test_cut(bins, right, include_lowest):\n    a = np.random.randint(0, 10, size=50).astype(object)\n    a[::2] = np.nan\n    result = pd.cut(\n        pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n    )\n    expected = pd.cut(a, bins, right=right, include_lowest=include_lowest)\n    tm.assert_categorical_equal(result, expected)",
                "test_error": "TypeError: boolean value of NA is ambiguous",
                "full_test_error": "bins = [0, 5, 15], right = True, include_lowest = True\n\n    @pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n    @pytest.mark.parametrize(\"right\", [True, False])\n    @pytest.mark.parametrize(\"include_lowest\", [True, False])\n    def test_cut(bins, right, include_lowest):\n        a = np.random.randint(0, 10, size=50).astype(object)\n        a[::2] = np.nan\n>       result = pd.cut(\n            pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n        )\n\npandas/tests/arrays/test_integer.py:1070: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "traceback": "pandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('bins', [3, [0, 5, 15]])",
                    "pytest.mark.parametrize('right', [True, False])",
                    "pytest.mark.parametrize('include_lowest', [True, False])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/tests/arrays/test_integer.py",
                "test_function": "test_cut",
                "test_function_code": "@pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n@pytest.mark.parametrize(\"right\", [True, False])\n@pytest.mark.parametrize(\"include_lowest\", [True, False])\ndef test_cut(bins, right, include_lowest):\n    a = np.random.randint(0, 10, size=50).astype(object)\n    a[::2] = np.nan\n    result = pd.cut(\n        pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n    )\n    expected = pd.cut(a, bins, right=right, include_lowest=include_lowest)\n    tm.assert_categorical_equal(result, expected)",
                "test_error": "TypeError: boolean value of NA is ambiguous",
                "full_test_error": "bins = 3, right = False, include_lowest = True\n\n    @pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n    @pytest.mark.parametrize(\"right\", [True, False])\n    @pytest.mark.parametrize(\"include_lowest\", [True, False])\n    def test_cut(bins, right, include_lowest):\n        a = np.random.randint(0, 10, size=50).astype(object)\n        a[::2] = np.nan\n>       result = pd.cut(\n            pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n        )\n\npandas/tests/arrays/test_integer.py:1070: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "traceback": "pandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('bins', [3, [0, 5, 15]])",
                    "pytest.mark.parametrize('right', [True, False])",
                    "pytest.mark.parametrize('include_lowest', [True, False])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/tests/arrays/test_integer.py",
                "test_function": "test_cut",
                "test_function_code": "@pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n@pytest.mark.parametrize(\"right\", [True, False])\n@pytest.mark.parametrize(\"include_lowest\", [True, False])\ndef test_cut(bins, right, include_lowest):\n    a = np.random.randint(0, 10, size=50).astype(object)\n    a[::2] = np.nan\n    result = pd.cut(\n        pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n    )\n    expected = pd.cut(a, bins, right=right, include_lowest=include_lowest)\n    tm.assert_categorical_equal(result, expected)",
                "test_error": "TypeError: boolean value of NA is ambiguous",
                "full_test_error": "bins = [0, 5, 15], right = False, include_lowest = True\n\n    @pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n    @pytest.mark.parametrize(\"right\", [True, False])\n    @pytest.mark.parametrize(\"include_lowest\", [True, False])\n    def test_cut(bins, right, include_lowest):\n        a = np.random.randint(0, 10, size=50).astype(object)\n        a[::2] = np.nan\n>       result = pd.cut(\n            pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n        )\n\npandas/tests/arrays/test_integer.py:1070: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "traceback": "pandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('bins', [3, [0, 5, 15]])",
                    "pytest.mark.parametrize('right', [True, False])",
                    "pytest.mark.parametrize('include_lowest', [True, False])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/tests/arrays/test_integer.py",
                "test_function": "test_cut",
                "test_function_code": "@pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n@pytest.mark.parametrize(\"right\", [True, False])\n@pytest.mark.parametrize(\"include_lowest\", [True, False])\ndef test_cut(bins, right, include_lowest):\n    a = np.random.randint(0, 10, size=50).astype(object)\n    a[::2] = np.nan\n    result = pd.cut(\n        pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n    )\n    expected = pd.cut(a, bins, right=right, include_lowest=include_lowest)\n    tm.assert_categorical_equal(result, expected)",
                "test_error": "TypeError: boolean value of NA is ambiguous",
                "full_test_error": "bins = 3, right = True, include_lowest = False\n\n    @pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n    @pytest.mark.parametrize(\"right\", [True, False])\n    @pytest.mark.parametrize(\"include_lowest\", [True, False])\n    def test_cut(bins, right, include_lowest):\n        a = np.random.randint(0, 10, size=50).astype(object)\n        a[::2] = np.nan\n>       result = pd.cut(\n            pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n        )\n\npandas/tests/arrays/test_integer.py:1070: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "traceback": "pandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('bins', [3, [0, 5, 15]])",
                    "pytest.mark.parametrize('right', [True, False])",
                    "pytest.mark.parametrize('include_lowest', [True, False])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/tests/arrays/test_integer.py",
                "test_function": "test_cut",
                "test_function_code": "@pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n@pytest.mark.parametrize(\"right\", [True, False])\n@pytest.mark.parametrize(\"include_lowest\", [True, False])\ndef test_cut(bins, right, include_lowest):\n    a = np.random.randint(0, 10, size=50).astype(object)\n    a[::2] = np.nan\n    result = pd.cut(\n        pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n    )\n    expected = pd.cut(a, bins, right=right, include_lowest=include_lowest)\n    tm.assert_categorical_equal(result, expected)",
                "test_error": "TypeError: boolean value of NA is ambiguous",
                "full_test_error": "bins = [0, 5, 15], right = True, include_lowest = False\n\n    @pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n    @pytest.mark.parametrize(\"right\", [True, False])\n    @pytest.mark.parametrize(\"include_lowest\", [True, False])\n    def test_cut(bins, right, include_lowest):\n        a = np.random.randint(0, 10, size=50).astype(object)\n        a[::2] = np.nan\n>       result = pd.cut(\n            pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n        )\n\npandas/tests/arrays/test_integer.py:1070: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "traceback": "pandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('bins', [3, [0, 5, 15]])",
                    "pytest.mark.parametrize('right', [True, False])",
                    "pytest.mark.parametrize('include_lowest', [True, False])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/tests/arrays/test_integer.py",
                "test_function": "test_cut",
                "test_function_code": "@pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n@pytest.mark.parametrize(\"right\", [True, False])\n@pytest.mark.parametrize(\"include_lowest\", [True, False])\ndef test_cut(bins, right, include_lowest):\n    a = np.random.randint(0, 10, size=50).astype(object)\n    a[::2] = np.nan\n    result = pd.cut(\n        pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n    )\n    expected = pd.cut(a, bins, right=right, include_lowest=include_lowest)\n    tm.assert_categorical_equal(result, expected)",
                "test_error": "TypeError: boolean value of NA is ambiguous",
                "full_test_error": "bins = 3, right = False, include_lowest = False\n\n    @pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n    @pytest.mark.parametrize(\"right\", [True, False])\n    @pytest.mark.parametrize(\"include_lowest\", [True, False])\n    def test_cut(bins, right, include_lowest):\n        a = np.random.randint(0, 10, size=50).astype(object)\n        a[::2] = np.nan\n>       result = pd.cut(\n            pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n        )\n\npandas/tests/arrays/test_integer.py:1070: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "traceback": "pandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('bins', [3, [0, 5, 15]])",
                    "pytest.mark.parametrize('right', [True, False])",
                    "pytest.mark.parametrize('include_lowest', [True, False])"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_71/pandas/tests/arrays/test_integer.py",
                "test_function": "test_cut",
                "test_function_code": "@pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n@pytest.mark.parametrize(\"right\", [True, False])\n@pytest.mark.parametrize(\"include_lowest\", [True, False])\ndef test_cut(bins, right, include_lowest):\n    a = np.random.randint(0, 10, size=50).astype(object)\n    a[::2] = np.nan\n    result = pd.cut(\n        pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n    )\n    expected = pd.cut(a, bins, right=right, include_lowest=include_lowest)\n    tm.assert_categorical_equal(result, expected)",
                "test_error": "TypeError: boolean value of NA is ambiguous",
                "full_test_error": "bins = [0, 5, 15], right = False, include_lowest = False\n\n    @pytest.mark.parametrize(\"bins\", [3, [0, 5, 15]])\n    @pytest.mark.parametrize(\"right\", [True, False])\n    @pytest.mark.parametrize(\"include_lowest\", [True, False])\n    def test_cut(bins, right, include_lowest):\n        a = np.random.randint(0, 10, size=50).astype(object)\n        a[::2] = np.nan\n>       result = pd.cut(\n            pd.array(a, dtype=\"Int64\"), bins, right=right, include_lowest=include_lowest\n        )\n\npandas/tests/arrays/test_integer.py:1070: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "traceback": "pandas/core/reshape/tile.py:256: in cut\n    fac, bins = _bins_to_cuts(\npandas/core/reshape/tile.py:386: in _bins_to_cuts\n    ids = ensure_int64(bins.searchsorted(x, side=side))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise TypeError(\"boolean value of NA is ambiguous\")\nE   TypeError: boolean value of NA is ambiguous\n\npandas/_libs/missing.pyx:360: TypeError",
                "test_function_decorators": [
                    "pytest.mark.parametrize('bins', [3, [0, 5, 15]])",
                    "pytest.mark.parametrize('right', [True, False])",
                    "pytest.mark.parametrize('include_lowest', [True, False])"
                ]
            }
        ]
    }
}