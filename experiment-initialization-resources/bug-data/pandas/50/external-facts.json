{
    "pandas:50": {
        "github_issue_title": [
            "Categorical NaN behaviour different from a str\n"
        ],
        "github_issue_description": [
            "Code Sample\nSeries as category\ndf = pd.Series(['a','a','b','c']).astype('category')\nprint(df.shift(1))\nprint(df)\nprint(df.shift(1) != df)\n\nOUTPUT:\n\n0 NaN\n1 a\n2 a\n3 b\ndtype: category\nCategories (3, object): [a, b, c]\n0 a\n1 a\n2 b\n3 c\ndtype: category\nCategories (3, object): [a, b, c]\n0 False\n1 False\n2 True\n3 True\ndtype: bool\n\nSeries as str\ndf = pd.Series(['a','a','b','c']).astype('str')\nprint(df.shift(1))\nprint(df)\nprint(df.shift(1) != df)\n\nOUTPUT:\n\n0 NaN\n1 a\n2 a\n3 b\ndtype: object\n0 a\n1 a\n2 b\n3 c\ndtype: object\n0 True\n1 False\n2 True\n3 True\ndtype: bool\n\n#### Problem description\n\nThe behaviour of NaN in comparison operators is different for type category and str. See example code - the first element is NaN in both instances, but the second instance equates to false, and the first equates to true for a != operation. For a == operation for a category, the behavior is as expected.\n\n#### Expected Output\n\nI would expect both to have the same output.\n\n#### Output of ``pd.show_versions()``\n\n<details>\n\nINSTALLED VERSIONS\n------------------\ncommit           : None\npython           : 3.8.0.final.0\npython-bits      : 64\nOS               : Linux\nOS-release       : 3.10.0-1062.12.1.el7.x86_64\nmachine          : x86_64\nprocessor        : x86_64\nbyteorder        : little\nLC_ALL           : None\nLANG             : en_GB.UTF-8\nLOCALE           : en_GB.UTF-8\n\npandas           : 1.0.1\nnumpy            : 1.18.1\npytz             : 2019.3\ndateutil         : 2.8.1\npip              : 20.0.2\nsetuptools       : 41.4.0\nCython           : 0.29.15\npytest           : 5.3.5\nhypothesis       : None\nsphinx           : None\nblosc            : None\nfeather          : None\nxlsxwriter       : None\nlxml.etree       : None\nhtml5lib         : None\npymysql          : None\npsycopg2         : None\njinja2           : 2.11.1\nIPython          : 7.12.0\npandas_datareader: None\nbs4              : None\nbottleneck       : None\nfastparquet      : None\ngcsfs            : None\nlxml.etree       : None\nmatplotlib       : 3.1.3\nnumexpr          : 2.7.1\nodfpy            : None\nopenpyxl         : 3.0.3\npandas_gbq       : None\npyarrow          : None\npytables         : None\npytest           : 5.3.5\npyxlsb           : None\ns3fs             : None\nscipy            : 1.4.1\nsqlalchemy       : 1.3.13\ntables           : 3.6.1\ntabulate         : None\nxarray           : None\nxlrd             : None\nxlwt             : None\nxlsxwriter       : None\nnumba            : None\n\n</details>\n"
        ]
    }
}