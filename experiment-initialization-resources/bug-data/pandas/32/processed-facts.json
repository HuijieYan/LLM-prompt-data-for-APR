{
    "1.1.1": "def __init__(\n    self, filepath_or_buffer, index=None, encoding=\"ISO-8859-1\", chunksize=None\n):\n\n    self._encoding = encoding\n    self._lines_read = 0\n    self._index = index\n    self._chunksize = chunksize\n\n    if isinstance(filepath_or_buffer, str):\n        (\n            filepath_or_buffer,\n            encoding,\n            compression,\n            should_close,\n        ) = get_filepath_or_buffer(filepath_or_buffer, encoding=encoding)\n\n    if isinstance(filepath_or_buffer, (str, bytes)):\n        self.filepath_or_buffer = open(filepath_or_buffer, \"rb\")\n    else:\n        # Copy to BytesIO, and ensure no encoding\n        contents = filepath_or_buffer.read()\n        try:\n            contents = contents.encode(self._encoding)\n        except UnicodeEncodeError:\n            pass\n        self.filepath_or_buffer = BytesIO(contents)\n\n    self._read_header()\n",
    "1.1.2": null,
    "1.2.1": "pandas/io/sas/sas_xport.py",
    "1.2.2": "from io import BytesIO\nfrom pandas.io.common import get_filepath_or_buffer",
    "1.3.1": "class XportReader(abc.Iterator)",
    "1.3.2": null,
    "1.4.1": [
        "_read_header(self)",
        "read(self, nrows=None)"
    ],
    "1.4.2": null,
    "1.5.1": [
        "    def test2_binary(self):\n        # Test with SSHSV1_A.xpt, read as a binary file\n\n        # Compare to this\n        data_csv = pd.read_csv(self.file02.replace(\".xpt\", \".csv\"))\n        numeric_as_float(data_csv)\n\n        data = read_sas(self.file02b, format=\"xport\")\n        tm.assert_frame_equal(data, data_csv)"
    ],
    "1.5.2": [
        "pandas/tests/io/sas/test_xport.py"
    ],
    "2.1.1": [
        [
            "E               AttributeError: 'bytes' object has no attribute 'encode'"
        ]
    ],
    "2.1.2": [
        [
            "self = <pandas.tests.io.sas.test_xport.TestXport object at 0x7efc3e8a79a0>\n\n    def test2_binary(self):\n        # Test with SSHSV1_A.xpt, read as a binary file\n    \n        # Compare to this\n        data_csv = pd.read_csv(self.file02.replace(\".xpt\", \".csv\"))\n        numeric_as_float(data_csv)\n    \n>       data = read_sas(self.file02b, format=\"xport\")\n\npandas/tests/io/sas/test_xport.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/io/sas/sasreader.py:68: in read_sas\n    reader = XportReader(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pandas.io.sas.sas_xport.XportReader object at 0x7efc3e8b9e20>\nfilepath_or_buffer = <_io.BufferedReader name='/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_32/pandas/tests/io/sas/data/SSHSV1_A.xpt'>\nindex = None, encoding = None, chunksize = None\n\n    def __init__(\n        self, filepath_or_buffer, index=None, encoding=\"ISO-8859-1\", chunksize=None\n    ):\n    \n        self._encoding = encoding\n        self._lines_read = 0\n        self._index = index\n        self._chunksize = chunksize\n    \n        if isinstance(filepath_or_buffer, str):\n            (\n                filepath_or_buffer,\n                encoding,\n                compression,\n                should_close,\n            ) = get_filepath_or_buffer(filepath_or_buffer, encoding=encoding)\n    \n        if isinstance(filepath_or_buffer, (str, bytes)):\n            self.filepath_or_buffer = open(filepath_or_buffer, \"rb\")\n        else:\n            # Copy to BytesIO, and ensure no encoding\n            contents = filepath_or_buffer.read()\n            try:\n>               contents = contents.encode(self._encoding)",
            "\npandas/io/sas/sas_xport.py:269: AttributeError"
        ]
    ],
    "2.2.1": null,
    "2.2.2": null,
    "2.3.1": [
        [
            {
                "filepath_or_buffer": {
                    "value": "<_io.BufferedReader name='/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_32/pandas/tests/io/sas/data/SSHSV1_A.xpt'>",
                    "shape": null,
                    "omitted": false
                }
            },
            {
                "self._lines_read": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                },
                "self.filepath_or_buffer": {
                    "value": "<_io.BufferedReader name='/home/ubuntu/Desktop/bgp_envs_local/repos/pandas_32/pandas/tests/io/sas/data/SSHSV1_A.xpt'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ]
    ],
    "2.3.2": [
        [
            {
                "filepath_or_buffer": "BufferedReader"
            },
            {
                "self._lines_read": "int",
                "self.filepath_or_buffer": "BufferedReader"
            }
        ]
    ],
    "3.1.1": [
        "read_sas fails when passed a file object from GCSFS\n"
    ],
    "3.1.2": [
        "Code Sample, a copy-pastable example if possible\nFrom https://stackoverflow.com/q/60848250/101923\n\nexport BUCKET_NAME=swast-scratch-us\ncurl -L https://wwwn.cdc.gov/Nchs/Nhanes/2017-2018/DEMO_J.XPT | gsutil cp - gs://${BUCKET_NAME}/sas_sample/Nchs/Nhanes/2017-2018/DEMO_J.XPT\nimport pandas as pd\nimport gcsfs\n\n\nbucket_name = \"swast-scratch-us\"\nproject_id = \"swast-scratch\"\n\nfs = gcsfs.GCSFileSystem(project=project_id)\nwith fs.open(\n    \"{}/sas_sample/Nchs/Nhanes/2017-2018/DEMO_J.XPT\".format(bucket_name),\n    \"rb\"\n) as f:\n    df = pd.read_sas(f, format=\"xport\")\n    print(df)\nProblem description\nThis throws the following exception:\n\nTraceback (most recent call last):\n  File \"after.py\", line 15, in <module>\n    df = pd.read_sas(f, format=\"xport\")\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/pandas/io/sas/sasreader.py\", line 70, in read_sas\n    filepath_or_buffer, index=index, encoding=encoding, chunksize=chunksize\n  File \"/Users/swast/miniconda3/envs/scratch/lib/python3.7/site-packages/pandas/io/sas/sas_xport.py\", line 280, in __init__\n    contents = contents.encode(self._encoding)\nAttributeError: 'bytes' object has no attribute 'encode'\n(scratch) \nExpected Output\n          SEQN  SDDSRVYR  RIDSTATR  RIAGENDR  ...  SDMVSTRA  INDHHIN2  INDFMIN2  INDFMPIR\n0      93703.0      10.0       2.0       2.0  ...     145.0      15.0      15.0      5.00\n1      93704.0      10.0       2.0       1.0  ...     143.0      15.0      15.0      5.00\n2      93705.0      10.0       2.0       2.0  ...     145.0       3.0       3.0      0.82\n3      93706.0      10.0       2.0       1.0  ...     134.0       NaN       NaN       NaN\n4      93707.0      10.0       2.0       1.0  ...     138.0      10.0      10.0      1.88\n...        ...       ...       ...       ...  ...       ...       ...       ...       ...\n9249  102952.0      10.0       2.0       2.0  ...     138.0       4.0       4.0      0.95\n9250  102953.0      10.0       2.0       1.0  ...     137.0      12.0      12.0       NaN\n9251  102954.0      10.0       2.0       2.0  ...     144.0      10.0      10.0      1.18\n9252  102955.0      10.0       2.0       2.0  ...     136.0       9.0       9.0      2.24\n9253  102956.0      10.0       2.0       1.0  ...     142.0       7.0       7.0      1.56\n\n[9254 rows x 46 columns]\nNote: the expected output is printed when a local file is read.\n"
    ]
}