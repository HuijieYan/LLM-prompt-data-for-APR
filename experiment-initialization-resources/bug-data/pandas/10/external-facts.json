{
    "pandas:10": {
        "github_issue_title": [
            "BUG: Series.update() raises ValueError if dtype=\"string\"\n"
        ],
        "github_issue_description": [
            " I have checked that this issue has not already been reported.\n\n I have confirmed this bug exists on the latest version of pandas.\n\n (optional) I have confirmed this bug exists on the master branch of pandas.\n\nCode Sample, a copy-pastable example\nimport pandas as pd\na = pd.Series([\"a\", None, \"c\"], dtype=\"string\")\nb = pd.Series([None, \"b\", None], dtype=\"string\")\na.update(b)\nresults in:\n\nTraceback (most recent call last):\n\n  File \"<ipython-input-15-b9da8f25067a>\", line 1, in <module>\n    a.update(b)\n\n  File \"C:\\tools\\anaconda3\\envs\\Simple\\lib\\site-packages\\pandas\\core\\series.py\", line 2810, in update\n    self._data = self._data.putmask(mask=mask, new=other, inplace=True)\n\n  File \"C:\\tools\\anaconda3\\envs\\Simple\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 564, in putmask\n    return self.apply(\"putmask\", **kwargs)\n\n  File \"C:\\tools\\anaconda3\\envs\\Simple\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 442, in apply\n    applied = getattr(b, f)(**kwargs)\n\n  File \"C:\\tools\\anaconda3\\envs\\Simple\\lib\\site-packages\\pandas\\core\\internals\\blocks.py\", line 1676, in putmask\n    new_values[mask] = new\n\n  File \"C:\\tools\\anaconda3\\envs\\Simple\\lib\\site-packages\\pandas\\core\\arrays\\string_.py\", line 248, in __setitem__\n    super().__setitem__(key, value)\n\n  File \"C:\\tools\\anaconda3\\envs\\Simple\\lib\\site-packages\\pandas\\core\\arrays\\numpy_.py\", line 252, in __setitem__\n    self._ndarray[key] = value\n\nValueError: NumPy boolean array indexing assignment cannot assign 3 input values to the 1 output values where the mask is true\nProblem description\nThe example works if I leave off the dtype=\"string\" (resulting in the implicit dtype object).\nIMO update should work for all dtypes, not only the \"old\" ones.\n\na = pd.Series([1, None, 3], dtype=\"Int16\") etc. also raises ValueError, while the same with dtype=\"float64\"works.\n\nIt looks as if update doesn't work with the new nullable dtypes (the ones with pd.NA).\n\nExpected Output\nThe expected result is that a.update(b) updates a without raising an exception, not only for object and float64, but also for string and Int16 etc..\n"
        ]
    }
}