{
    "pandas:136": {
        "github_issue_title": [
            "Merge_asof() Requires specific int type, not reflected in error or documentation\n"
        ],
        "github_issue_description": [
            "Code Sample, a copy-pastable example if possible\nimport pandas as pd\n\nleft = pd.DataFrame({'ts_int': [0, 100, 200], 'left_val': [1, 2, 3]})\nright = pd.DataFrame({'ts_int': [50, 150, 250], 'right_val': [1, 2, 3]})\nleft['ts_int'] = left['ts_int'].astype(int)\nright['ts_int'] = right['ts_int'].astype(int)\npd.merge_asof(left, right, on='ts_int', tolerance=100)\n\n> pandas.errors.MergeError: key must be integer, timestamp or float\n\nprint(left['ts_int'].dtype)\n>>> int32\nprint(right['ts_int'].dtype)\n>>> int32\nProblem description\nmerge_asof() throws the MergeError key must be integer, timestamp or float even when the data used to merge on is a valid integer type.\n\nThis happens with all types of int with the exception of int64, as a result of the check performed when a tolerance is passed (pandas/core/reshape/merge.py:1641). This check uses the is_int64_dtype(lt), which will ofcourse return False for every type of int that isn't int64. This requirement of the on key being int64 is however not documented in the docs, nor is it reflected from the raised error.\n\nExpected Output\nThe expected output can go either of two ways. If it should be possible to perform the merge on every integer type, the expected output would be:\n\n   ts_int  left_val  right_val\n0       0         1        NaN\n1     100         2        1.0\n2     200         3        2.0\nIf it shouldn't be possible, I'd expect the returned MergeError and/or the docs to reflect that the integer type that should be used as key to merge on has to be of int64 type.\n"
        ]
    }
}