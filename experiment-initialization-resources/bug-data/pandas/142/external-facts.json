{
    "pandas:142": {
        "github_issue_title": [
            "pd.Series.diff() on boolean values\n"
        ],
        "github_issue_description": [
            "Code Sample\n>> x = pd.Series([True,False,True])\n>> x.diff()\n0     NaN\n1    True\n2    True\ndtype: object\n>> x - x.shift()\n0    NaN\n1     -1\n2      1\ndtype: object\nProblem description\nIt's counter-intuitive that the results of above are different.\n\nThe current implementation of pd.Series.diff uses algorithms.diff that subtracts 2 numpy arrays in the following way\n\nout_arr[res_indexer] = arr[res_indexer] - arr[lag_indexer]\nAs pointed here such behaviour is deprecated in favor to np.diff. But np.diff also treats booleans in binary operations in its own numpy way, that is different from native python (replace False with 0, replace True with 1).\n\n>> np.array([True, False]) - np.array([False, True])\n/home/deoxys/miniconda3/lib/python3.6/site-packages/ipykernel_launcher.py:1: DeprecationWarning: numpy boolean subtract, the `-` operator, is deprecated, use the bitwise_xor, the `^` operator, or the logical_xor function instead.\narray([ True,  True], dtype=bool)\n>> np.diff([False, True, False])\narray([ True,  True], dtype=bool)\n>> True - False\n1\n>> False - True\n-1\nExpected Output\nI believe there is no correct way of subtracting booleans. But, it's definitely strange that operations like x - x.shift() and x.diff() provide different results.\n"
        ]
    }
}