{
    "1.1.1": "def is_string_dtype(arr_or_dtype) -> bool:\n    \n    # TODO: gh-15585: consider making the checks stricter.\n    def condition(dtype) -> bool:\n        return dtype.kind in (\"O\", \"S\", \"U\") and not is_excluded_dtype(dtype)\n\n    def is_excluded_dtype(dtype) -> bool:\n        \n        is_excluded_checks = (is_period_dtype, is_interval_dtype)\n        return any(is_excluded(dtype) for is_excluded in is_excluded_checks)\n\n    return _is_dtype(arr_or_dtype, condition)\n",
    "1.1.2": "Check whether the provided array or dtype is of the string dtype.\n\nParameters\n----------\narr_or_dtype : array-like\n    The array or dtype to check.\n\nReturns\n-------\nboolean\n    Whether or not the array or dtype is of the string dtype.\n\nExamples\n--------\n>>> is_string_dtype(str)\nTrue\n>>> is_string_dtype(object)\nTrue\n>>> is_string_dtype(int)\nFalse\n>>>\n>>> is_string_dtype(np.array(['a', 'b']))\nTrue\n>>> is_string_dtype(pd.Series([1, 2]))\nFalse",
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "pandas/core/dtypes/common.py",
    "1.3.2": [
        "is_period_dtype(arr_or_dtype) -> bool",
        "is_interval_dtype(arr_or_dtype) -> bool",
        "_is_dtype(arr_or_dtype, condition) -> bool",
        "condition(dtype) -> bool",
        "is_excluded_dtype(dtype) -> bool"
    ],
    "1.4.1": [
        "    def test_not_string(self):\n        # though CategoricalDtype has object kind, it cannot be string\n        assert not is_string_dtype(CategoricalDtype())"
    ],
    "1.4.2": [
        "pandas/tests/dtypes/test_dtypes.py"
    ],
    "2.1.1": [
        [
            "E       assert not True\nE        +  where True = is_string_dtype(CategoricalDtype(categories=None, ordered=False))\nE        +    where CategoricalDtype(categories=None, ordered=False) = CategoricalDtype()"
        ]
    ],
    "2.1.2": [
        [
            "self = <pandas.tests.dtypes.test_dtypes.TestCategoricalDtype object at 0x7f373994d7f0>\n\n    def test_not_string(self):\n        # though CategoricalDtype has object kind, it cannot be string\n>       assert not is_string_dtype(CategoricalDtype())",
            "\npandas/tests/dtypes/test_dtypes.py:196: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('<M8[ns]')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('O')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('float64')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "datetime64[ns, US/Eastern]",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('int64')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('bool')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "CategoricalDtype(categories=None, ordered=False)",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "DatetimeTZDtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "CategoricalDtype"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('<M8[ns]')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('O')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('float64')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "datetime64[ns, US/Eastern]",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('int64')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "dtype('bool')",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "arr_or_dtype": {
                    "value": "CategoricalDtype(categories=None, ordered=False)",
                    "shape": "()",
                    "omitted": false
                }
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "DatetimeTZDtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "dtype"
            },
            {}
        ],
        [
            {
                "arr_or_dtype": "CategoricalDtype"
            },
            {}
        ]
    ],
    "3.1.1": [
        "BUG: is_string_dtype incorrectly identifies categorical data\n"
    ],
    "3.1.2": [
        " I have checked that this issue has not already been reported.\n\n I have confirmed this bug exists on the latest version of pandas.\n\n (optional) I have confirmed this bug exists on the master branch of pandas.\n\ns = pd.Series(['a', 'b', 'c'], dtype='category')\npdt.is_string_dtype(s)\n>>> True\nProblem description\nThe current implementation of is_string_dtype incorrectly evaluates to True for categorical series.\n\nExpected Output\ns = pd.Series(['a', 'b', 'c'], dtype='category')\npdt.is_string_dtype(s)\n>>> False\n"
    ],
    "used_imports": null
}