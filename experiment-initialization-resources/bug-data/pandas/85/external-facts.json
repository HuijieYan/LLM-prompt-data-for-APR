{
    "pandas:85": {
        "github_issue_title": [
            "REGR: MultiIndex level names RuntimeError in groupby.apply\n"
        ],
        "github_issue_description": [
            "df = pd.DataFrame({\n    'A': np.arange(10), 'B': [1, 2] * 5, \n    'C': np.random.rand(10), 'D': np.random.rand(10)}\n).set_index(['A', 'B'])  \ndf.groupby('B').apply(lambda x: x.sum())\nOn master this gives an error:\n\nIn [40]: df.groupby('B').apply(lambda x: x.sum())\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-40-75bc1ff12251> in <module>\n----> 1 df.groupby('B').apply(lambda x: x.sum())\n\n~/scipy/pandas/pandas/core/groupby/groupby.py in apply(self, func, *args, **kwargs)\n    733         with option_context(\"mode.chained_assignment\", None):\n    734             try:\n--> 735                 result = self._python_apply_general(f)\n    736             except TypeError:\n    737                 # gh-20949\n\n~/scipy/pandas/pandas/core/groupby/groupby.py in _python_apply_general(self, f)\n    752 \n    753         return self._wrap_applied_output(\n--> 754             keys, values, not_indexed_same=mutated or self.mutated\n    755         )\n    756 \n\n~/scipy/pandas/pandas/core/groupby/generic.py in _wrap_applied_output(self, keys, values, not_indexed_same)\n   1200                 if len(keys) == ping.ngroups:\n   1201                     key_index = ping.group_index\n-> 1202                     key_index.name = key_names[0]\n   1203 \n   1204                     key_lookup = Index(keys)\n\n~/scipy/pandas/pandas/core/indexes/base.py in name(self, value)\n   1171             # Used in MultiIndex.levels to avoid silently ignoring name updates.\n   1172             raise RuntimeError(\n-> 1173                 \"Cannot set name on a level of a MultiIndex. Use \"\n   1174                 \"'MultiIndex.set_names' instead.\"\n   1175             )\n\nRuntimeError: Cannot set name on a level of a MultiIndex. Use 'MultiIndex.set_names' instead.\nOn 0.25.3 this works:\n\nIn [10]:  df.groupby('B').apply(lambda x: x.sum()) \nOut[10]: \n          C         D\nB                    \n1  2.761792  3.963817\n2  1.040950  3.578762\nIt seems the additional MultiIndex level that is not used to group (['A', 'B'] are index levels, but only grouping by 'B').\n"
        ]
    }
}