{
    "1.1.1": "def from_content_disposition(self, content_disposition):\n    try:\n        filename = to_native_str(content_disposition).split(';')[1].split('=')[1]\n        filename = filename.strip('\"\\'')\n        return self.from_filename(filename)\n    except IndexError:\n        return Response\n",
    "1.1.2": null,
    "1.2.1": "scrapy/responsetypes.py",
    "1.2.2": "from scrapy.http import Response\nfrom scrapy.utils.python import isbinarytext, to_bytes, to_native_str",
    "1.3.1": "class ResponseTypes(object)",
    "1.3.2": null,
    "1.4.1": [
        "from_filename(self, filename)"
    ],
    "1.4.2": [
        "from_filename(self, filename)"
    ],
    "1.5.1": [
        "    def test_from_content_disposition(self):\n        mappings = [\n            (b'attachment; filename=\"data.xml\"', XmlResponse),\n            (b'attachment; filename=data.xml', XmlResponse),\n            (u'attachment;filename=data\u00a3.tar.gz'.encode('utf-8'), Response),\n            (u'attachment;filename=data\u00b5.tar.gz'.encode('latin-1'), Response),\n            (u'attachment;filename=data\u9ad8.doc'.encode('gbk'), Response),\n            (u'attachment;filename=\u062f\u0648\u0631\u0647data.html'.encode('cp720'), HtmlResponse),\n            (u'attachment;filename=\u65e5\u672c\u8a9e\u7248Wikipedia.xml'.encode('iso2022_jp'), XmlResponse),\n\n        ]\n        for source, cls in mappings:\n            retcls = responsetypes.from_content_disposition(source)\n            assert retcls is cls, \"%s ==> %s != %s\" % (source, retcls, cls)"
    ],
    "1.5.2": [
        "tests/test_responsetypes.py"
    ],
    "2.1.1": [
        [
            "E       UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb5 in position 24: invalid start byte"
        ]
    ],
    "2.1.2": [
        [
            "self = <tests.test_responsetypes.ResponseTypesTest testMethod=test_from_content_disposition>\n\n    def test_from_content_disposition(self):\n        mappings = [\n            (b'attachment; filename=\"data.xml\"', XmlResponse),\n            (b'attachment; filename=data.xml', XmlResponse),\n            (u'attachment;filename=data\u00a3.tar.gz'.encode('utf-8'), Response),\n            (u'attachment;filename=data\u00b5.tar.gz'.encode('latin-1'), Response),\n            (u'attachment;filename=data\u9ad8.doc'.encode('gbk'), Response),\n            (u'attachment;filename=\u062f\u0648\u0631\u0647data.html'.encode('cp720'), HtmlResponse),\n            (u'attachment;filename=\u65e5\u672c\u8a9e\u7248Wikipedia.xml'.encode('iso2022_jp'), XmlResponse),\n    \n        ]\n        for source, cls in mappings:\n>           retcls = responsetypes.from_content_disposition(source)\n\n/home/ubuntu/Desktop/bgp_envs_local/repos/scrapy_18/tests/test_responsetypes.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/ubuntu/Desktop/bgp_envs_local/repos/scrapy_18/scrapy/responsetypes.py:62: in from_content_disposition\n    filename = to_native_str(content_disposition).split(';')[1].split('=')[1]\n/home/ubuntu/Desktop/bgp_envs_local/repos/scrapy_18/scrapy/utils/python.py:129: in to_native_str\n    return to_unicode(text, encoding, errors)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntext = b'attachment;filename=data\\xb5.tar.gz', encoding = 'utf-8'\nerrors = 'strict'\n\n    def to_unicode(text, encoding=None, errors='strict'):\n        \"\"\"Return the unicode representation of a bytes object `text`. If `text`\n        is already an unicode object, return it as-is.\"\"\"\n        if isinstance(text, six.text_type):\n            return text\n        if not isinstance(text, (bytes, six.text_type)):\n            raise TypeError('to_unicode must receive a bytes, str or unicode '\n                            'object, got %s' % type(text).__name__)\n        if encoding is None:\n            encoding = 'utf-8'\n>       return text.decode(encoding, errors)",
            "\n/home/ubuntu/Desktop/bgp_envs_local/repos/scrapy_18/scrapy/utils/python.py:107: UnicodeDecodeError"
        ]
    ],
    "2.2.1": [
        [
            {
                "content_disposition": {
                    "value": "b'attachment; filename=\"data.xml\"'",
                    "shape": "31",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'data.xml'",
                    "shape": "8",
                    "omitted": false
                }
            }
        ],
        [
            {
                "content_disposition": {
                    "value": "b'attachment; filename=data.xml'",
                    "shape": "29",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'data.xml'",
                    "shape": "8",
                    "omitted": false
                }
            }
        ],
        [
            {
                "content_disposition": {
                    "value": "b'attachment;filename=data\\xc2\\xa3.tar.gz'",
                    "shape": "33",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'data\u00a3.tar.gz'",
                    "shape": "12",
                    "omitted": false
                }
            }
        ]
    ],
    "2.2.2": [
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ]
    ],
    "2.3.1": [
        [
            {
                "content_disposition": {
                    "value": "b'attachment; filename=\"data.xml\"'",
                    "shape": "31",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'data.xml'",
                    "shape": "8",
                    "omitted": false
                }
            }
        ],
        [
            {
                "content_disposition": {
                    "value": "b'attachment; filename=data.xml'",
                    "shape": "29",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'data.xml'",
                    "shape": "8",
                    "omitted": false
                }
            }
        ],
        [
            {
                "content_disposition": {
                    "value": "b'attachment;filename=data\\xc2\\xa3.tar.gz'",
                    "shape": "33",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'data\u00c2\u00a3.tar.gz'",
                    "shape": "13",
                    "omitted": false
                }
            }
        ],
        [
            {
                "content_disposition": {
                    "value": "b'attachment;filename=data\\xb5.tar.gz'",
                    "shape": "32",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'data\u00b5.tar.gz'",
                    "shape": "12",
                    "omitted": false
                }
            }
        ],
        [
            {
                "content_disposition": {
                    "value": "b'attachment;filename=data\\xb8\\xdf.doc'",
                    "shape": "30",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'data\u00b8\u00df.doc'",
                    "shape": "10",
                    "omitted": false
                }
            }
        ],
        [
            {
                "content_disposition": {
                    "value": "b'attachment;filename=\\xa7\\xed\\xa9\\xecdata.html'",
                    "shape": "33",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'\u00a7\u00ed\u00a9\u00ecdata.html'",
                    "shape": "13",
                    "omitted": false
                }
            }
        ],
        [
            {
                "content_disposition": {
                    "value": "b'attachment;filename=\\x1b$BF",
                    "shape": "K\\\\8lHG\\x1b(BWikipedia.xml'",
                    "omitted": false
                }
            },
            {
                "filename": {
                    "value": "'\\x1b$BF",
                    "shape": "K\\\\8lHG\\x1b(BWikipedia.xml'",
                    "omitted": false
                }
            }
        ]
    ],
    "2.3.2": [
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ],
        [
            {
                "content_disposition": "bytes"
            },
            {
                "filename": "str"
            }
        ]
    ],
    "3.1.1": [
        "PY3: error decoding Content-Disposition header\n"
    ],
    "3.1.2": [
        "This request\n\nscrapy shell 'http://npe.com.cn/plus/save_to_doc.php?id=1666'\nraises this error:\n\nTraceback (most recent call last):\n  File \"/Users/kmike/envs/dl/bin/scrapy\", line 9, in <module>\n    load_entry_point('Scrapy', 'console_scripts', 'scrapy')()\n  File \"/Users/kmike/svn/scrapy/scrapy/cmdline.py\", line 142, in execute\n    _run_print_help(parser, _run_command, cmd, args, opts)\n  File \"/Users/kmike/svn/scrapy/scrapy/cmdline.py\", line 88, in _run_print_help\n    func(*a, **kw)\n  File \"/Users/kmike/svn/scrapy/scrapy/cmdline.py\", line 149, in _run_command\n    cmd.run(args, opts)\n  File \"/Users/kmike/svn/scrapy/scrapy/commands/shell.py\", line 71, in run\n    shell.start(url=url)\n  File \"/Users/kmike/svn/scrapy/scrapy/shell.py\", line 47, in start\n    self.fetch(url, spider)\n  File \"/Users/kmike/svn/scrapy/scrapy/shell.py\", line 112, in fetch\n    reactor, self._schedule, request, spider)\n  File \"/Users/kmike/envs/dl/lib/python3.5/site-packages/Twisted-15.5.0-py3.5.egg/twisted/internet/threads.py\", line 122, in blockingCallFromThread\n    result.raiseException()\n  File \"/Users/kmike/envs/dl/lib/python3.5/site-packages/Twisted-15.5.0-py3.5.egg/twisted/python/failure.py\", line 368, in raiseException\n    raise self.value.with_traceback(self.tb)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xb8 in position 25: invalid start byte\nThe error points to a wrong location (similar to #1760); the real traceback is\n\nTraceback (most recent call last):\n  File \"/Users/kmike/envs/dl/lib/python3.5/site-packages/Twisted-15.5.0-py3.5.egg/twisted/internet/defer.py\", line 1126, in _inlineCallbacks\n    result = result.throwExceptionIntoGenerator(g)\n  File \"/Users/kmike/envs/dl/lib/python3.5/site-packages/Twisted-15.5.0-py3.5.egg/twisted/python/failure.py\", line 389, in throwExceptionIntoGenerator\n    return g.throw(self.type, self.value, self.tb)\n  File \"/Users/kmike/svn/scrapy/scrapy/core/downloader/middleware.py\", line 43, in process_request\n    defer.returnValue((yield download_func(request=request,spider=spider)))\n  File \"/Users/kmike/envs/dl/lib/python3.5/site-packages/Twisted-15.5.0-py3.5.egg/twisted/internet/defer.py\", line 588, in _runCallbacks\n    current.result = callback(current.result, *args, **kw)\n  File \"/Users/kmike/svn/scrapy/scrapy/core/downloader/handlers/http11.py\", line 272, in _cb_bodydone\n    respcls = responsetypes.from_args(headers=headers, url=url)\n  File \"/Users/kmike/svn/scrapy/scrapy/responsetypes.py\", line 110, in from_args\n    cls = self.from_headers(headers)\n  File \"/Users/kmike/svn/scrapy/scrapy/responsetypes.py\", line 78, in from_headers\n    cls = self.from_content_disposition(headers[b'Content-Disposition'])\n  File \"/Users/kmike/svn/scrapy/scrapy/responsetypes.py\", line 62, in from_content_disposition\n    filename = to_native_str(content_disposition).split(';')[1].split('=')[1]\n  File \"/Users/kmike/svn/scrapy/scrapy/utils/python.py\", line 129, in to_native_str\n    return to_unicode(text, encoding, errors)\n  File \"/Users/kmike/svn/scrapy/scrapy/utils/python.py\", line 107, in to_unicode\n    return text.decode(encoding, errors)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xb8 in position 25: invalid start byte\nIt looks like Content-Disposition is decoded using utf-8, but the encoding was not UTF-8.\n"
    ]
}