{
    "scrapy:39": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/scrapy_39/scrapy/spiders/__init__.py": {
            "buggy_functions": [
                {
                    "function_name": "start_requests",
                    "function_code": "def start_requests(self):\n    if self.make_requests_from_url is not Spider.make_requests_from_url:\n        warnings.warn(\n            \"Spider.make_requests_from_url method is deprecated; \"\n            \"it won't be called in future Scrapy releases. \"\n            \"Please override start_requests method instead.\"\n        )\n        for url in self.start_urls:\n            yield self.make_requests_from_url(url)\n    else:\n        for url in self.start_urls:\n            yield Request(url, dont_filter=True)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 68,
                    "end_line": 79,
                    "variables": {
                        "self.make_requests_from_url": [
                            76,
                            69
                        ],
                        "self": [
                            75,
                            76,
                            69,
                            78
                        ],
                        "Spider.make_requests_from_url": [
                            69
                        ],
                        "Spider": [
                            69
                        ],
                        "warnings.warn": [
                            70
                        ],
                        "warnings": [
                            70
                        ],
                        "url": [
                            75,
                            76,
                            78,
                            79
                        ],
                        "self.start_urls": [
                            75,
                            78
                        ],
                        "Request": [
                            79
                        ]
                    },
                    "filtered_variables": {
                        "self.make_requests_from_url": [
                            76,
                            69
                        ],
                        "self": [
                            75,
                            76,
                            69,
                            78
                        ],
                        "Spider.make_requests_from_url": [
                            69
                        ],
                        "Spider": [
                            69
                        ],
                        "warnings.warn": [
                            70
                        ],
                        "warnings": [
                            70
                        ],
                        "url": [
                            75,
                            76,
                            78,
                            79
                        ],
                        "self.start_urls": [
                            75,
                            78
                        ],
                        "Request": [
                            79
                        ]
                    },
                    "diff_line_number": 69,
                    "class_data": {
                        "signature": "class Spider(object_ref)",
                        "docstring": "Base class for scrapy spiders. All spiders must inherit from this\nclass.",
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self, name=None, **kwargs):\n    if name is not None:\n        self.name = name\n    elif not getattr(self, 'name', None):\n        raise ValueError('%s must have a name' % type(self).__name__)\n    self.__dict__.update(kwargs)\n    if not hasattr(self, 'start_urls'):\n        self.start_urls = []",
                            "@property\ndef logger(self):\n    logger = logging.getLogger(self.name)\n    return logging.LoggerAdapter(logger, {'spider': self})",
                            "def log(self, message, level=logging.DEBUG, **kw):\n    \"\"\"Log the given message at the given log level\n\n    This helper wraps a log call to the logger within the spider, but you\n    can use it directly (e.g. Spider.logger.info('msg')) or use any other\n    Python logger too.\n    \"\"\"\n    self.logger.log(level, message, **kw)",
                            "@classmethod\ndef from_crawler(cls, crawler, *args, **kwargs):\n    spider = cls(*args, **kwargs)\n    spider._set_crawler(crawler)\n    return spider",
                            "def set_crawler(self, crawler):\n    warnings.warn('set_crawler is deprecated, instantiate and bound the spider to this crawler with from_crawler method instead.', category=ScrapyDeprecationWarning, stacklevel=2)\n    assert not hasattr(self, 'crawler'), 'Spider already bounded to a crawler'\n    self._set_crawler(crawler)",
                            "def _set_crawler(self, crawler):\n    self.crawler = crawler\n    self.settings = crawler.settings\n    crawler.signals.connect(self.close, signals.spider_closed)",
                            "def start_requests(self):\n    if self.make_requests_from_url is not Spider.make_requests_from_url:\n        warnings.warn(\"Spider.make_requests_from_url method is deprecated; it won't be called in future Scrapy releases. Please override start_requests method instead.\")\n        for url in self.start_urls:\n            yield self.make_requests_from_url(url)\n    else:\n        for url in self.start_urls:\n            yield Request(url, dont_filter=True)",
                            "def make_requests_from_url(self, url):\n    \"\"\" This method is deprecated. \"\"\"\n    return Request(url, dont_filter=True)",
                            "def parse(self, response):\n    raise NotImplementedError",
                            "@classmethod\ndef update_settings(cls, settings):\n    settings.setdict(cls.custom_settings or {}, priority='spider')",
                            "@classmethod\ndef handles_request(cls, request):\n    return url_is_from_spider(request.url, cls)",
                            "@staticmethod\ndef close(spider, reason):\n    closed = getattr(spider, 'closed', None)\n    if callable(closed):\n        return closed(reason)",
                            "def __str__(self):\n    return '<%s %r at 0x%0x>' % (type(self).__name__, self.name, id(self))"
                        ],
                        "constructor_variables": [
                            "self.name = name",
                            "self.start_urls = []"
                        ],
                        "class_level_variables": [
                            "name = None",
                            "custom_settings = None",
                            "__repr__ = __str__"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "__init__(self, name=None, **kwargs)",
                            "logger(self)",
                            "log(self, message, level=logging.DEBUG, **kw)",
                            "from_crawler(cls, crawler, *args, **kwargs)",
                            "set_crawler(self, crawler)",
                            "_set_crawler(self, crawler)",
                            "start_requests(self)",
                            "make_requests_from_url(self, url)",
                            "parse(self, response)",
                            "update_settings(cls, settings)",
                            "handles_request(cls, request)",
                            "close(spider, reason)",
                            "__str__(self)"
                        ],
                        "class_level_variable_names": [
                            "name",
                            "custom_settings",
                            "__repr__"
                        ],
                        "constructor_variable_names": [
                            "name",
                            "start_urls"
                        ]
                    },
                    "used_imports": [
                        "import warnings",
                        "from scrapy.http import Request"
                    ],
                    "variable_values": [
                        [
                            {
                                "self.make_requests_from_url": {
                                    "variable_value": "<bound method Spider.make_requests_from_url of <MySpider4 'spider1' at 0x7fe597d609a0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<MySpider4 'spider1' at 0x7fe597d609a0>",
                                    "variable_type": "MySpider4",
                                    "variable_shape": null
                                },
                                "Spider.make_requests_from_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Spider": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings.warn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start_urls": {
                                    "variable_value": "['http://example.com']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "Request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "self.make_requests_from_url": {
                                    "variable_value": "<bound method Spider.make_requests_from_url of <MySpider4 'spider1' at 0x7fe597d609a0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<MySpider4 'spider1' at 0x7fe597d609a0>",
                                    "variable_type": "MySpider4",
                                    "variable_shape": null
                                },
                                "Spider.make_requests_from_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Spider": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings.warn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": "'http://example.com'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "self.start_urls": {
                                    "variable_value": "['http://example.com']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "Request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "cls": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.__class__": {
                                    "variable_value": "<class 'tests.test_spider.DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider4'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<MySpider4 'spider1' at 0x7fd038fe24f0>",
                                    "variable_type": "MySpider4",
                                    "variable_shape": null
                                },
                                "cls.make_requests_from_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Spider.make_requests_from_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Spider": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings.warn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cls.__module__": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cls.__name__": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start_urls": {
                                    "variable_value": "['http://example.com']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.make_requests_from_url": {
                                    "variable_value": "<bound method Spider.make_requests_from_url of <MySpider4 'spider1' at 0x7fd038fe24f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cls": {
                                    "variable_value": "<class 'tests.test_spider.DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider4'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "self.__class__": {
                                    "variable_value": "<class 'tests.test_spider.DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider4'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<MySpider4 'spider1' at 0x7fd038fe24f0>",
                                    "variable_type": "MySpider4",
                                    "variable_shape": null
                                },
                                "cls.make_requests_from_url": {
                                    "variable_value": "<function Spider.make_requests_from_url at 0x7fd0393b2e50>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "Spider.make_requests_from_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Spider": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings.warn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cls.__module__": {
                                    "variable_value": "'tests.test_spider'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "cls.__name__": {
                                    "variable_value": "'MySpider4'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "url": {
                                    "variable_value": "'http://example.com'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "self.start_urls": {
                                    "variable_value": "['http://example.com']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.make_requests_from_url": {
                                    "variable_value": "<bound method Spider.make_requests_from_url of <MySpider4 'spider1' at 0x7fd038fe24f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cls": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.__class__": {
                                    "variable_value": "<class 'tests.test_spider.DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider5'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<MySpider5 'spider2' at 0x7fd0386858e0>",
                                    "variable_type": "MySpider5",
                                    "variable_shape": null
                                },
                                "cls.make_requests_from_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Spider.make_requests_from_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Spider": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings.warn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cls.__module__": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cls.__name__": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start_urls": {
                                    "variable_value": "['http://example.com']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.make_requests_from_url": {
                                    "variable_value": "<bound method DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider5.make_requests_from_url of <MySpider5 'spider2' at 0x7fd0386858e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cls": {
                                    "variable_value": "<class 'tests.test_spider.DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider5'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "self.__class__": {
                                    "variable_value": "<class 'tests.test_spider.DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider5'>",
                                    "variable_type": "type",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<MySpider5 'spider2' at 0x7fd0386858e0>",
                                    "variable_type": "MySpider5",
                                    "variable_shape": null
                                },
                                "cls.make_requests_from_url": {
                                    "variable_value": "<function DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider5.make_requests_from_url at 0x7fd038687c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "Spider.make_requests_from_url": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Spider": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings.warn": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "warnings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cls.__module__": {
                                    "variable_value": "'tests.test_spider'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "cls.__name__": {
                                    "variable_value": "'MySpider5'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "url": {
                                    "variable_value": "'http://example.com'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "self.start_urls": {
                                    "variable_value": "['http://example.com']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.make_requests_from_url": {
                                    "variable_value": "<bound method DeprecationTest.test_make_requests_from_url_deprecated.<locals>.MySpider5.make_requests_from_url of <MySpider5 'spider2' at 0x7fd0386858e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def __init__(self, name=None, **kwargs):\n    if name is not None:\n        self.name = name\n    elif not getattr(self, 'name', None):\n        raise ValueError(\"%s must have a name\" % type(self).__name__)\n    self.__dict__.update(kwargs)\n    if not hasattr(self, 'start_urls'):\n        self.start_urls = []",
                "@property\ndef logger(self):\n    logger = logging.getLogger(self.name)\n    return logging.LoggerAdapter(logger, {'spider': self})",
                "def log(self, message, level=logging.DEBUG, **kw):\n    \"\"\"Log the given message at the given log level\n\n    This helper wraps a log call to the logger within the spider, but you\n    can use it directly (e.g. Spider.logger.info('msg')) or use any other\n    Python logger too.\n    \"\"\"\n    self.logger.log(level, message, **kw)",
                "@classmethod\ndef from_crawler(cls, crawler, *args, **kwargs):\n    spider = cls(*args, **kwargs)\n    spider._set_crawler(crawler)\n    return spider",
                "def set_crawler(self, crawler):\n    warnings.warn(\"set_crawler is deprecated, instantiate and bound the \"\n                  \"spider to this crawler with from_crawler method \"\n                  \"instead.\",\n                  category=ScrapyDeprecationWarning, stacklevel=2)\n    assert not hasattr(self, 'crawler'), \"Spider already bounded to a \" \\\n                                         \"crawler\"\n    self._set_crawler(crawler)",
                "def _set_crawler(self, crawler):\n    self.crawler = crawler\n    self.settings = crawler.settings\n    crawler.signals.connect(self.close, signals.spider_closed)",
                "def start_requests(self):\n    if self.make_requests_from_url is not Spider.make_requests_from_url:\n        warnings.warn(\n            \"Spider.make_requests_from_url method is deprecated; \"\n            \"it won't be called in future Scrapy releases. \"\n            \"Please override start_requests method instead.\"\n        )\n        for url in self.start_urls:\n            yield self.make_requests_from_url(url)\n    else:\n        for url in self.start_urls:\n            yield Request(url, dont_filter=True)",
                "def make_requests_from_url(self, url):\n    \"\"\" This method is deprecated. \"\"\"\n    return Request(url, dont_filter=True)",
                "def parse(self, response):\n    raise NotImplementedError",
                "@classmethod\ndef update_settings(cls, settings):\n    settings.setdict(cls.custom_settings or {}, priority='spider')",
                "@classmethod\ndef handles_request(cls, request):\n    return url_is_from_spider(request.url, cls)",
                "@staticmethod\ndef close(spider, reason):\n    closed = getattr(spider, 'closed', None)\n    if callable(closed):\n        return closed(reason)",
                "def __str__(self):\n    return \"<%s %r at 0x%0x>\" % (type(self).__name__, self.name, id(self))",
                "def __init__(self, message):\n    self.message = message",
                "def __getattr__(self, name):\n    raise AttributeError(self.message)"
            ],
            "inscope_function_signatures": [
                "__init__(self, name=None, **kwargs)",
                "logger(self)",
                "log(self, message, level=logging.DEBUG, **kw)",
                "from_crawler(cls, crawler, *args, **kwargs)",
                "set_crawler(self, crawler)",
                "_set_crawler(self, crawler)",
                "start_requests(self)",
                "make_requests_from_url(self, url)",
                "parse(self, response)",
                "update_settings(cls, settings)",
                "handles_request(cls, request)",
                "close(spider, reason)",
                "__str__(self)",
                "__init__(self, message)",
                "__getattr__(self, name)"
            ],
            "variables_in_file": {
                "object_ref": [
                    17
                ],
                "name": [
                    26,
                    27,
                    22
                ],
                "custom_settings": [
                    23
                ],
                "self.name": [
                    27,
                    36,
                    103
                ],
                "self": [
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    36,
                    37,
                    46,
                    59,
                    61,
                    64,
                    65,
                    66,
                    69,
                    75,
                    76,
                    78,
                    103,
                    113,
                    116
                ],
                "getattr": [
                    98,
                    28
                ],
                "ValueError": [
                    29
                ],
                "__name__": [
                    29,
                    103
                ],
                "type": [
                    29,
                    103
                ],
                "self.__dict__.update": [
                    30
                ],
                "self.__dict__": [
                    30
                ],
                "kwargs": [
                    50,
                    30
                ],
                "hasattr": [
                    59,
                    31
                ],
                "self.start_urls": [
                    32,
                    75,
                    78
                ],
                "logger": [
                    36,
                    37
                ],
                "logging.getLogger": [
                    36
                ],
                "logging": [
                    36,
                    37,
                    39
                ],
                "logging.LoggerAdapter": [
                    37
                ],
                "property": [
                    34
                ],
                "logging.DEBUG": [
                    39
                ],
                "self.logger.log": [
                    46
                ],
                "self.logger": [
                    46
                ],
                "level": [
                    46
                ],
                "message": [
                    113,
                    46
                ],
                "kw": [
                    46
                ],
                "spider": [
                    50,
                    51,
                    52,
                    98
                ],
                "cls": [
                    50,
                    90,
                    94
                ],
                "args": [
                    50
                ],
                "spider._set_crawler": [
                    51
                ],
                "crawler": [
                    64,
                    65,
                    66,
                    51,
                    61
                ],
                "classmethod": [
                    48,
                    88,
                    92
                ],
                "warnings.warn": [
                    70,
                    55
                ],
                "warnings": [
                    70,
                    55
                ],
                "ScrapyDeprecationWarning": [
                    58
                ],
                "self._set_crawler": [
                    61
                ],
                "self.crawler": [
                    64
                ],
                "self.settings": [
                    65
                ],
                "crawler.settings": [
                    65
                ],
                "crawler.signals.connect": [
                    66
                ],
                "crawler.signals": [
                    66
                ],
                "self.close": [
                    66
                ],
                "signals.spider_closed": [
                    66
                ],
                "signals": [
                    66
                ],
                "self.make_requests_from_url": [
                    76,
                    69
                ],
                "Spider.make_requests_from_url": [
                    69
                ],
                "Spider": [
                    108,
                    69
                ],
                "url": [
                    75,
                    76,
                    78,
                    79,
                    83
                ],
                "Request": [
                    83,
                    79
                ],
                "NotImplementedError": [
                    86
                ],
                "settings.setdict": [
                    90
                ],
                "settings": [
                    90
                ],
                "cls.custom_settings": [
                    90
                ],
                "url_is_from_spider": [
                    94
                ],
                "request.url": [
                    94
                ],
                "request": [
                    94
                ],
                "closed": [
                    98,
                    99,
                    100
                ],
                "callable": [
                    99
                ],
                "reason": [
                    100
                ],
                "staticmethod": [
                    96
                ],
                "id": [
                    103
                ],
                "__repr__": [
                    105
                ],
                "__str__": [
                    105
                ],
                "BaseSpider": [
                    108
                ],
                "create_deprecated_class": [
                    108
                ],
                "object": [
                    111
                ],
                "self.message": [
                    113,
                    116
                ],
                "AttributeError": [
                    116
                ],
                "spiders": [
                    118
                ],
                "ObsoleteClass": [
                    118
                ]
            },
            "filtered_variables_in_file": {
                "object_ref": [
                    17
                ],
                "name": [
                    26,
                    27,
                    22
                ],
                "custom_settings": [
                    23
                ],
                "self.name": [
                    27,
                    36,
                    103
                ],
                "self": [
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    36,
                    37,
                    46,
                    59,
                    61,
                    64,
                    65,
                    66,
                    69,
                    75,
                    76,
                    78,
                    103,
                    113,
                    116
                ],
                "self.__dict__.update": [
                    30
                ],
                "self.__dict__": [
                    30
                ],
                "kwargs": [
                    50,
                    30
                ],
                "self.start_urls": [
                    32,
                    75,
                    78
                ],
                "logger": [
                    36,
                    37
                ],
                "logging.getLogger": [
                    36
                ],
                "logging": [
                    36,
                    37,
                    39
                ],
                "logging.LoggerAdapter": [
                    37
                ],
                "logging.DEBUG": [
                    39
                ],
                "self.logger.log": [
                    46
                ],
                "self.logger": [
                    46
                ],
                "level": [
                    46
                ],
                "message": [
                    113,
                    46
                ],
                "kw": [
                    46
                ],
                "spider": [
                    50,
                    51,
                    52,
                    98
                ],
                "cls": [
                    50,
                    90,
                    94
                ],
                "args": [
                    50
                ],
                "spider._set_crawler": [
                    51
                ],
                "crawler": [
                    64,
                    65,
                    66,
                    51,
                    61
                ],
                "warnings.warn": [
                    70,
                    55
                ],
                "warnings": [
                    70,
                    55
                ],
                "ScrapyDeprecationWarning": [
                    58
                ],
                "self._set_crawler": [
                    61
                ],
                "self.crawler": [
                    64
                ],
                "self.settings": [
                    65
                ],
                "crawler.settings": [
                    65
                ],
                "crawler.signals.connect": [
                    66
                ],
                "crawler.signals": [
                    66
                ],
                "self.close": [
                    66
                ],
                "signals.spider_closed": [
                    66
                ],
                "signals": [
                    66
                ],
                "self.make_requests_from_url": [
                    76,
                    69
                ],
                "Spider.make_requests_from_url": [
                    69
                ],
                "Spider": [
                    108,
                    69
                ],
                "url": [
                    75,
                    76,
                    78,
                    79,
                    83
                ],
                "Request": [
                    83,
                    79
                ],
                "settings.setdict": [
                    90
                ],
                "settings": [
                    90
                ],
                "cls.custom_settings": [
                    90
                ],
                "url_is_from_spider": [
                    94
                ],
                "request.url": [
                    94
                ],
                "request": [
                    94
                ],
                "closed": [
                    98,
                    99,
                    100
                ],
                "reason": [
                    100
                ],
                "__repr__": [
                    105
                ],
                "__str__": [
                    105
                ],
                "BaseSpider": [
                    108
                ],
                "create_deprecated_class": [
                    108
                ],
                "self.message": [
                    113,
                    116
                ],
                "spiders": [
                    118
                ],
                "ObsoleteClass": [
                    118
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/scrapy_39/tests/test_spider.py",
                "test_function": "test_make_requests_from_url_deprecated",
                "test_function_code": "    def test_make_requests_from_url_deprecated(self):\n        class MySpider4(Spider):\n            name = 'spider1'\n            start_urls = ['http://example.com']\n\n        class MySpider5(Spider):\n            name = 'spider2'\n            start_urls = ['http://example.com']\n\n            def make_requests_from_url(self, url):\n                return Request(url + \"/foo\", dont_filter=True)\n\n        with warnings.catch_warnings(record=True) as w:\n            # spider without overridden make_requests_from_url method\n            # doesn't issue a warning\n            spider1 = MySpider4()\n            self.assertEqual(len(list(spider1.start_requests())), 1)\n            self.assertEqual(len(w), 0)\n\n            # spider with overridden make_requests_from_url issues a warning,\n            # but the method still works\n            spider2 = MySpider5()\n            requests = list(spider2.start_requests())\n            self.assertEqual(len(requests), 1)\n            self.assertEqual(requests[0].url, 'http://example.com/foo')\n            self.assertEqual(len(w), 1)",
                "test_error": "twisted.trial.unittest.FailTest: 1 != 0",
                "full_test_error": "self = <tests.test_spider.DeprecationTest testMethod=test_make_requests_from_url_deprecated>\n\n    def test_make_requests_from_url_deprecated(self):\n        class MySpider4(Spider):\n            name = 'spider1'\n            start_urls = ['http://example.com']\n    \n        class MySpider5(Spider):\n            name = 'spider2'\n            start_urls = ['http://example.com']\n    \n            def make_requests_from_url(self, url):\n                return Request(url + \"/foo\", dont_filter=True)\n    \n        with warnings.catch_warnings(record=True) as w:\n            # spider without overridden make_requests_from_url method\n            # doesn't issue a warning\n            spider1 = MySpider4()\n            self.assertEqual(len(list(spider1.start_requests())), 1)\n>           self.assertEqual(len(w), 0)\n\n/home/ubuntu/Desktop/bgp_envs_local/repos/scrapy_39/tests/test_spider.py:419: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/ubuntu/Desktop/bgp_envs_local/envs/scrapy_39/lib/python3.8/site-packages/twisted/trial/_synctest.py:434: in assertEqual\n    super(_Assertions, self).assertEqual(first, second, msg)\nE   twisted.trial.unittest.FailTest: 1 != 0",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}