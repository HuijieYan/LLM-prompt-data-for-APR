{
    "1.1.1": "def __new__(mcs, class_name, bases, attrs):\n    new_bases = tuple(base._class for base in bases if hasattr(base, '_class'))\n    _class = super(ItemMeta, mcs).__new__(mcs, 'x_' + class_name, new_bases, attrs)\n\n    fields = getattr(_class, 'fields', {})\n    new_attrs = {}\n    for n in dir(_class):\n        v = getattr(_class, n)\n        if isinstance(v, Field):\n            fields[n] = v\n        elif n in attrs:\n            new_attrs[n] = attrs[n]\n\n    new_attrs['fields'] = fields\n    new_attrs['_class'] = _class\n    return super(ItemMeta, mcs).__new__(mcs, class_name, bases, new_attrs)\n",
    "1.1.2": null,
    "1.2.1": "scrapy/item.py",
    "1.2.2": null,
    "1.3.1": "class ItemMeta(ABCMeta)",
    "1.3.2": null,
    "1.4.1": [
        "__new__(mcs, class_name, bases, attrs)"
    ],
    "1.4.2": null,
    "1.5.1": [
        "    def test_item_meta_classcell_regression(self):\n        class MyItem(six.with_metaclass(ItemMeta, Item)):\n            def __init__(self, *args, **kwargs):\n                # This call to super() trigger the __classcell__ propagation\n                # requirement. When not done properly raises an error:\n                # TypeError: __class__ set to <class '__main__.MyItem'>\n                # defining 'MyItem' as <class '__main__.MyItem'>\n                super(MyItem, self).__init__(*args, **kwargs)"
    ],
    "1.5.2": [
        "tests/test_item.py"
    ],
    "2.1.1": [
        [
            "E       TypeError: __class__ set to <class 'tests.test_item.ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem'> defining 'MyItem' as <class 'tests.test_item.MyItem'>"
        ]
    ],
    "2.1.2": [
        [
            "self = <tests.test_item.ItemMetaClassCellRegression testMethod=test_item_meta_classcell_regression>\n\n    def test_item_meta_classcell_regression(self):\n>       class MyItem(six.with_metaclass(ItemMeta, Item)):",
            "\n/home/ubuntu/Desktop/bgp_envs_local/repos/scrapy_8/tests/test_item.py:288: TypeError"
        ]
    ],
    "2.2.1": [
        [
            {
                "bases": {
                    "value": "(<class 'scrapy.item.DictItem'>,)",
                    "shape": "1",
                    "omitted": false
                },
                "class_name": {
                    "value": "'Item'",
                    "shape": "4",
                    "omitted": false
                },
                "attrs": {
                    "value": "{'__module__': 'scrapy.item', '__doc__': None, '__abstractmethods__': frozenset(), '_abc_impl': <_abc_data object at 0x7f37c9e0e4b0>, '__qualname__': 'Item'}",
                    "shape": "5",
                    "omitted": false
                }
            },
            {
                "new_bases": {
                    "value": "()",
                    "shape": "0",
                    "omitted": false
                },
                "_class": {
                    "value": "<class 'scrapy.item.Item'>",
                    "shape": null,
                    "omitted": false
                },
                "fields": {
                    "value": "{}",
                    "shape": "0",
                    "omitted": false
                },
                "new_attrs": {
                    "value": "{'__abstractmethods__': frozenset(), '__doc__': None, '__module__': 'scrapy.item', '_abc_impl': <_abc_data object at 0x7f37c9e0e4b0>, 'fields': {}, '_class': <class 'scrapy.item.Item'>}",
                    "shape": "6",
                    "omitted": false
                },
                "n": {
                    "value": "'_abc_impl'",
                    "shape": "9",
                    "omitted": false
                }
            }
        ],
        [
            {
                "bases": {
                    "value": "(<class 'scrapy.item.Item'>,)",
                    "shape": "1",
                    "omitted": false
                },
                "class_name": {
                    "value": "'MyItem'",
                    "shape": "6",
                    "omitted": false
                },
                "attrs": {
                    "value": "{'__module__': 'tests.test_item', '__qualname__': 'ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem', '__init__': <function ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem.__init__ at 0x7f37c9e2cee0>, '__classcell__': <cell at 0x7f37c9e1c160: empty>}",
                    "shape": "4",
                    "omitted": false
                }
            },
            {
                "new_bases": {
                    "value": "(<class 'scrapy.item.Item'>,)",
                    "shape": "1",
                    "omitted": false
                },
                "_class": {
                    "value": "<class 'tests.test_item.ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem'>",
                    "shape": null,
                    "omitted": false
                },
                "attrs": {
                    "value": "{'__module__': 'tests.test_item', '__qualname__': 'ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem', '__init__': <function ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem.__init__ at 0x7f37c9e2cee0>, '__classcell__': <cell at 0x7f37c9e1c160: ItemMeta object at 0x56275456b850>}",
                    "shape": "4",
                    "omitted": false
                },
                "fields": {
                    "value": "{}",
                    "shape": "0",
                    "omitted": false
                },
                "new_attrs": {
                    "value": "{'__init__': <function ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem.__init__ at 0x7f37c9e2cee0>, '__module__': 'tests.test_item', 'fields': {}, '_class': <class 'tests.test_item.ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem'>}",
                    "shape": "4",
                    "omitted": false
                },
                "n": {
                    "value": "'_abc_impl'",
                    "shape": "9",
                    "omitted": false
                }
            }
        ]
    ],
    "2.2.2": [
        [
            {
                "bases": "tuple",
                "class_name": "str",
                "attrs": "dict"
            },
            {
                "new_bases": "tuple",
                "_class": "ItemMeta",
                "fields": "dict",
                "new_attrs": "dict",
                "n": "str"
            }
        ],
        [
            {
                "bases": "tuple",
                "class_name": "str",
                "attrs": "dict"
            },
            {
                "new_bases": "tuple",
                "_class": "ItemMeta",
                "attrs": "dict",
                "fields": "dict",
                "new_attrs": "dict",
                "n": "str"
            }
        ]
    ],
    "2.3.1": [
        [
            {
                "attrs": {
                    "value": "{'__module__': 'scrapy.item', '__doc__': None, '__abstractmethods__': frozenset(), '_abc_impl': <_abc_data object at 0x7f9fe7249480>, '__qualname__': 'Item'}",
                    "shape": "5",
                    "omitted": false
                },
                "bases": {
                    "value": "(<class 'scrapy.item.DictItem'>,)",
                    "shape": "1",
                    "omitted": false
                },
                "class_name": {
                    "value": "'Item'",
                    "shape": "4",
                    "omitted": false
                }
            },
            {
                "new_bases": {
                    "value": "()",
                    "shape": "0",
                    "omitted": false
                },
                "_class": {
                    "value": "<class 'scrapy.item.Item'>",
                    "shape": null,
                    "omitted": false
                },
                "fields": {
                    "value": "{}",
                    "shape": "0",
                    "omitted": false
                },
                "new_attrs": {
                    "value": "{'__abstractmethods__': frozenset(), '__doc__': None, '__module__': 'scrapy.item', '_abc_impl': <_abc_data object at 0x7f9fe7249480>, 'fields': {}, '_class': <class 'scrapy.item.Item'>}",
                    "shape": "6",
                    "omitted": false
                },
                "n": {
                    "value": "'_abc_impl'",
                    "shape": "9",
                    "omitted": false
                }
            }
        ],
        [
            {
                "attrs": {
                    "value": "{'__module__': 'tests.test_item', '__qualname__': 'ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem', '__init__': <function ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem.__init__ at 0x7f9fe7267ee0>, '__classcell__': <cell at 0x7f9fe7259190: empty>}",
                    "shape": "4",
                    "omitted": false
                },
                "bases": {
                    "value": "(<class 'scrapy.item.Item'>,)",
                    "shape": "1",
                    "omitted": false
                },
                "class_name": {
                    "value": "'MyItem'",
                    "shape": "6",
                    "omitted": false
                }
            },
            {
                "classcell": {
                    "value": "<cell at 0x7f9fe7259190: empty>",
                    "shape": null,
                    "omitted": false
                },
                "attrs": {
                    "value": "{'__module__': 'tests.test_item', '__qualname__': 'ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem', '__init__': <function ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem.__init__ at 0x7f9fe7267ee0>}",
                    "shape": "3",
                    "omitted": false
                },
                "new_bases": {
                    "value": "(<class 'scrapy.item.Item'>,)",
                    "shape": "1",
                    "omitted": false
                },
                "_class": {
                    "value": "<class 'tests.test_item.ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem'>",
                    "shape": null,
                    "omitted": false
                },
                "fields": {
                    "value": "{}",
                    "shape": "0",
                    "omitted": false
                },
                "new_attrs": {
                    "value": "{'__init__': <function ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem.__init__ at 0x7f9fe7267ee0>, '__module__': 'tests.test_item', 'fields': {}, '_class': <class 'tests.test_item.ItemMetaClassCellRegression.test_item_meta_classcell_regression.<locals>.MyItem'>, '__classcell__': <cell at 0x7f9fe7259190: empty>}",
                    "shape": "5",
                    "omitted": false
                },
                "n": {
                    "value": "'_abc_impl'",
                    "shape": "9",
                    "omitted": false
                }
            }
        ]
    ],
    "2.3.2": [
        [
            {
                "attrs": "dict",
                "bases": "tuple",
                "class_name": "str"
            },
            {
                "new_bases": "tuple",
                "_class": "ItemMeta",
                "fields": "dict",
                "new_attrs": "dict",
                "n": "str"
            }
        ],
        [
            {
                "attrs": "dict",
                "bases": "tuple",
                "class_name": "str"
            },
            {
                "classcell": "cell",
                "attrs": "dict",
                "new_bases": "tuple",
                "_class": "ItemMeta",
                "fields": "dict",
                "new_attrs": "dict",
                "n": "str"
            }
        ]
    ],
    "3.1.1": [
        "Python 3.6 Item inheritance fails\n"
    ],
    "3.1.2": [
        "When trying to use inheritance on Item I get\n\nTypeError: __class__ set to <class '__main__.SpecialItem'> defining 'SpecialItem' as <class '__main__.SpecialItem'>\n\nSee more detail here:\nscrapy-plugins/scrapy-djangoitem#18\n"
    ]
}