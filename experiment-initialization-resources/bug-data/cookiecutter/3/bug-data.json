{
    "cookiecutter:3": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/cookiecutter_3/cookiecutter/prompt.py": {
            "buggy_functions": [
                {
                    "function_name": "read_user_choice",
                    "function_code": "def read_user_choice(var_name, options):\n    \"\"\"Prompt the user to choose from several options for the given variable.\n\n    The first item will be returned if no input happens.\n\n    :param str var_name: Variable as specified in the context\n    :param list options: Sequence of options that are available to select from\n    :return: Exactly one item of ``options`` that has been chosen by the user\n    \"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.prompt\n    if not isinstance(options, list):\n        raise TypeError\n\n    if not options:\n        raise ValueError\n\n    choice_map = OrderedDict(\n        (u'{}'.format(i), value) for i, value in enumerate(options, 1)\n    )\n    choices = choice_map.keys()\n    default = u'1'\n\n    choice_lines = [u'{} - {}'.format(*c) for c in choice_map.items()]\n    prompt = u'\\n'.join((\n        u'Select {}:'.format(var_name),\n        u'\\n'.join(choice_lines),\n        u'Choose from {}'.format(u', '.join(choices))\n    ))\n\n    user_choice = click.prompt(\n        prompt, type=click.Choice(choices), default=default\n    )\n    return choice_map[user_choice]\n",
                    "decorators": [],
                    "docstring": "Prompt the user to choose from several options for the given variable.\n\nThe first item will be returned if no input happens.\n\n:param str var_name: Variable as specified in the context\n:param list options: Sequence of options that are available to select from\n:return: Exactly one item of ``options`` that has been chosen by the user",
                    "start_line": 61,
                    "end_line": 93,
                    "variables": {
                        "isinstance": [
                            71
                        ],
                        "options": [
                            74,
                            78,
                            71
                        ],
                        "list": [
                            71
                        ],
                        "TypeError": [
                            72
                        ],
                        "ValueError": [
                            75
                        ],
                        "choice_map": [
                            80,
                            83,
                            93,
                            77
                        ],
                        "OrderedDict": [
                            77
                        ],
                        "format": [
                            83,
                            85,
                            78,
                            87
                        ],
                        "i": [
                            78
                        ],
                        "value": [
                            78
                        ],
                        "enumerate": [
                            78
                        ],
                        "choices": [
                            80,
                            91,
                            87
                        ],
                        "choice_map.keys": [
                            80
                        ],
                        "default": [
                            81,
                            91
                        ],
                        "choice_lines": [
                            83,
                            86
                        ],
                        "c": [
                            83
                        ],
                        "choice_map.items": [
                            83
                        ],
                        "prompt": [
                            91,
                            84
                        ],
                        "join": [
                            84,
                            86,
                            87
                        ],
                        "var_name": [
                            85
                        ],
                        "user_choice": [
                            90,
                            93
                        ],
                        "click.prompt": [
                            90
                        ],
                        "click": [
                            90,
                            91
                        ],
                        "click.Choice": [
                            91
                        ]
                    },
                    "filtered_variables": {
                        "options": [
                            74,
                            78,
                            71
                        ],
                        "choice_map": [
                            80,
                            83,
                            93,
                            77
                        ],
                        "OrderedDict": [
                            77
                        ],
                        "i": [
                            78
                        ],
                        "value": [
                            78
                        ],
                        "choices": [
                            80,
                            91,
                            87
                        ],
                        "choice_map.keys": [
                            80
                        ],
                        "default": [
                            81,
                            91
                        ],
                        "choice_lines": [
                            83,
                            86
                        ],
                        "c": [
                            83
                        ],
                        "choice_map.items": [
                            83
                        ],
                        "prompt": [
                            91,
                            84
                        ],
                        "join": [
                            84,
                            86,
                            87
                        ],
                        "var_name": [
                            85
                        ],
                        "user_choice": [
                            90,
                            93
                        ],
                        "click.prompt": [
                            90
                        ],
                        "click": [
                            90,
                            91
                        ],
                        "click.Choice": [
                            91
                        ]
                    },
                    "diff_line_number": 91,
                    "class_data": null,
                    "used_imports": [
                        "from collections import OrderedDict",
                        "import click"
                    ],
                    "variable_values": [
                        [
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": "OrderedDict([('1', 'hello'), ('2', 'world'), ('3', 'foo'), ('4', 'bar')])",
                                    "variable_type": "OrderedDict",
                                    "variable_shape": "4"
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": "odict_keys(['1', '2', '3', '4'])",
                                    "variable_type": "odict_keys",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": "<built-in method keys of collections.OrderedDict object at 0x7f3859098d40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "choice_lines": {
                                    "variable_value": "['1 - hello', '2 - world', '3 - foo', '4 - bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": "<built-in method items of collections.OrderedDict object at 0x7f3859098d40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": "'Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4'",
                                    "variable_type": "str",
                                    "variable_shape": "74"
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": "OrderedDict([('1', 'hello'), ('2', 'world'), ('3', 'foo'), ('4', 'bar')])",
                                    "variable_type": "OrderedDict",
                                    "variable_shape": "4"
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": "odict_keys(['1', '2', '3', '4'])",
                                    "variable_type": "odict_keys",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": "<built-in method keys of collections.OrderedDict object at 0x7f385a1d7170>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "choice_lines": {
                                    "variable_value": "['1 - hello', '2 - world', '3 - foo', '4 - bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": "<built-in method items of collections.OrderedDict object at 0x7f385a1d7170>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": "'Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4'",
                                    "variable_type": "str",
                                    "variable_shape": "74"
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": "'2'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": "OrderedDict([('1', 'hello'), ('2', 'world'), ('3', 'foo'), ('4', 'bar')])",
                                    "variable_type": "OrderedDict",
                                    "variable_shape": "4"
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": "odict_keys(['1', '2', '3', '4'])",
                                    "variable_type": "odict_keys",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": "<built-in method keys of collections.OrderedDict object at 0x7f385a1c2290>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "choice_lines": {
                                    "variable_value": "['1 - hello', '2 - world', '3 - foo', '4 - bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": "<built-in method items of collections.OrderedDict object at 0x7f385a1c2290>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": "'Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4'",
                                    "variable_type": "str",
                                    "variable_shape": "74"
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": "'3'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": "OrderedDict([('1', 'hello'), ('2', 'world'), ('3', 'foo'), ('4', 'bar')])",
                                    "variable_type": "OrderedDict",
                                    "variable_shape": "4"
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": "odict_keys(['1', '2', '3', '4'])",
                                    "variable_type": "odict_keys",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": "<built-in method keys of collections.OrderedDict object at 0x7f385a1bc8c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "choice_lines": {
                                    "variable_value": "['1 - hello', '2 - world', '3 - foo', '4 - bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": "<built-in method items of collections.OrderedDict object at 0x7f385a1bc8c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": "'Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4'",
                                    "variable_type": "str",
                                    "variable_shape": "74"
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": "'4'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": "OrderedDict([('1', 'hello'), ('2', 'world'), ('3', 'foo'), ('4', 'bar')])",
                                    "variable_type": "OrderedDict",
                                    "variable_shape": "4"
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": "odict_keys(['1', '2', '3', '4'])",
                                    "variable_type": "odict_keys",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": "<built-in method keys of collections.OrderedDict object at 0x7f8df1e49cb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "choice_lines": {
                                    "variable_value": "['1 - hello', '2 - world', '3 - foo', '4 - bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": "<built-in method items of collections.OrderedDict object at 0x7f8df1e49cb0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": "'Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4'",
                                    "variable_type": "str",
                                    "variable_shape": "74"
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": "OrderedDict([('1', 'hello'), ('2', 'world'), ('3', 'foo'), ('4', 'bar')])",
                                    "variable_type": "OrderedDict",
                                    "variable_shape": "4"
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": "odict_keys(['1', '2', '3', '4'])",
                                    "variable_type": "odict_keys",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": "<built-in method keys of collections.OrderedDict object at 0x7f8df1be6170>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "choice_lines": {
                                    "variable_value": "['1 - hello', '2 - world', '3 - foo', '4 - bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": "<built-in method items of collections.OrderedDict object at 0x7f8df1be6170>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": "'Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4'",
                                    "variable_type": "str",
                                    "variable_shape": "74"
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": "'2'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": "OrderedDict([('1', 'hello'), ('2', 'world'), ('3', 'foo'), ('4', 'bar')])",
                                    "variable_type": "OrderedDict",
                                    "variable_shape": "4"
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": "odict_keys(['1', '2', '3', '4'])",
                                    "variable_type": "odict_keys",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": "<built-in method keys of collections.OrderedDict object at 0x7f8df1be65f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "choice_lines": {
                                    "variable_value": "['1 - hello', '2 - world', '3 - foo', '4 - bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": "<built-in method items of collections.OrderedDict object at 0x7f8df1be65f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": "'Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4'",
                                    "variable_type": "str",
                                    "variable_shape": "74"
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": "'3'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_lines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "options": {
                                    "variable_value": "['hello', 'world', 'foo', 'bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "choice_map": {
                                    "variable_value": "OrderedDict([('1', 'hello'), ('2', 'world'), ('3', 'foo'), ('4', 'bar')])",
                                    "variable_type": "OrderedDict",
                                    "variable_shape": "4"
                                },
                                "OrderedDict": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "value": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choices": {
                                    "variable_value": "odict_keys(['1', '2', '3', '4'])",
                                    "variable_type": "odict_keys",
                                    "variable_shape": null
                                },
                                "choice_map.keys": {
                                    "variable_value": "<built-in method keys of collections.OrderedDict object at 0x7f8df1be69e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "default": {
                                    "variable_value": "'1'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "choice_lines": {
                                    "variable_value": "['1 - hello', '2 - world', '3 - foo', '4 - bar']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "c": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "choice_map.items": {
                                    "variable_value": "<built-in method items of collections.OrderedDict object at 0x7f8df1be69e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prompt": {
                                    "variable_value": "'Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4'",
                                    "variable_type": "str",
                                    "variable_shape": "74"
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "var_name": {
                                    "variable_value": "'varname'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "user_choice": {
                                    "variable_value": "'4'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "click.prompt": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "click.Choice": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def read_user_variable(var_name, default_value):\n    \"\"\"Prompt the user for the given variable and return the entered value\n    or the given default.\n\n    :param str var_name: Variable of the context to query the user\n    :param default_value: Value that will be returned if no input happens\n    \"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.prompt\n    return click.prompt(var_name, default=default_value)",
                "def read_user_yes_no(question, default_value):\n    \"\"\"Prompt the user to reply with 'yes' or 'no' (or equivalent values).\n\n    Note:\n      Possible choices are 'true', '1', 'yes', 'y' or 'false', '0', 'no', 'n'\n\n    :param str question: Question to the user\n    :param default_value: Value that will be returned if no input happens\n    \"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.prompt\n    return click.prompt(\n        question,\n        default=default_value,\n        type=click.BOOL\n    )",
                "def read_repo_password(question):\n    \"\"\"Prompt the user to enter a password\n\n    :param str question: Question to the user\n    \"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.prompt\n    return click.prompt(question, hide_input=True)",
                "def read_user_choice(var_name, options):\n    \"\"\"Prompt the user to choose from several options for the given variable.\n\n    The first item will be returned if no input happens.\n\n    :param str var_name: Variable as specified in the context\n    :param list options: Sequence of options that are available to select from\n    :return: Exactly one item of ``options`` that has been chosen by the user\n    \"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.prompt\n    if not isinstance(options, list):\n        raise TypeError\n\n    if not options:\n        raise ValueError\n\n    choice_map = OrderedDict(\n        (u'{}'.format(i), value) for i, value in enumerate(options, 1)\n    )\n    choices = choice_map.keys()\n    default = u'1'\n\n    choice_lines = [u'{} - {}'.format(*c) for c in choice_map.items()]\n    prompt = u'\\n'.join((\n        u'Select {}:'.format(var_name),\n        u'\\n'.join(choice_lines),\n        u'Choose from {}'.format(u', '.join(choices))\n    ))\n\n    user_choice = click.prompt(\n        prompt, type=click.Choice(choices), default=default\n    )\n    return choice_map[user_choice]",
                "def process_json(user_value):\n    try:\n        user_dict = json.loads(\n            user_value,\n            object_pairs_hook=OrderedDict,\n        )\n    except Exception:\n        # Leave it up to click to ask the user again\n        raise click.UsageError('Unable to decode to JSON.')\n\n    if not isinstance(user_dict, dict):\n        # Leave it up to click to ask the user again\n        raise click.UsageError('Requires JSON dict.')\n\n    return user_dict",
                "def read_user_dict(var_name, default_value):\n    \"\"\"Prompt the user to provide a dictionary of data.\n\n    :param str var_name: Variable as specified in the context\n    :param default_value: Value that will be returned if no input is provided\n    :return: A Python dictionary to use in the context.\n    \"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.prompt\n    if not isinstance(default_value, dict):\n        raise TypeError\n\n    default_display = 'default'\n\n    user_value = click.prompt(\n        var_name,\n        default=default_display,\n        type=click.STRING,\n        value_proc=process_json,\n    )\n\n    if user_value == default_display:\n        # Return the given default w/o any processing\n        return default_value\n    return user_value",
                "def render_variable(env, raw, cookiecutter_dict):\n    \"\"\"Inside the prompting taken from the cookiecutter.json file, this renders\n    the next variable. For example, if a project_name is \"Peanut Butter\n    Cookie\", the repo_name could be be rendered with:\n\n        `{{ cookiecutter.project_name.replace(\" \", \"_\") }}`.\n\n    This is then presented to the user as the default.\n\n    :param Environment env: A Jinja2 Environment object.\n    :param str raw: The next value to be prompted for by the user.\n    :param dict cookiecutter_dict: The current context as it's gradually\n        being populated with variables.\n    :return: The rendered value for the default variable.\n    \"\"\"\n    if raw is None:\n        return None\n    elif isinstance(raw, dict):\n        return {\n            render_variable(env, k, cookiecutter_dict):\n                render_variable(env, v, cookiecutter_dict)\n            for k, v in raw.items()\n        }\n    elif isinstance(raw, list):\n        return [\n            render_variable(env, v, cookiecutter_dict)\n            for v in raw\n        ]\n    elif not isinstance(raw, basestring):\n        raw = str(raw)\n\n    template = env.from_string(raw)\n\n    rendered_template = template.render(cookiecutter=cookiecutter_dict)\n    return rendered_template",
                "def prompt_choice_for_config(cookiecutter_dict, env, key, options, no_input):\n    \"\"\"Prompt the user which option to choose from the given. Each of the\n    possible choices is rendered beforehand.\n    \"\"\"\n    rendered_options = [\n        render_variable(env, raw, cookiecutter_dict) for raw in options\n    ]\n\n    if no_input:\n        return rendered_options[0]\n    return read_user_choice(key, rendered_options)",
                "def prompt_for_config(context, no_input=False):\n    \"\"\"\n    Prompts the user to enter new config, using context as a source for the\n    field names and sample values.\n\n    :param no_input: Prompt the user at command line for manual configuration?\n    \"\"\"\n    cookiecutter_dict = OrderedDict([])\n    env = StrictEnvironment(context=context)\n\n    # First pass: Handle simple and raw variables, plus choices.\n    # These must be done first because the dictionaries keys and\n    # values might refer to them.\n    for key, raw in iteritems(context[u'cookiecutter']):\n        if key.startswith(u'_'):\n            cookiecutter_dict[key] = raw\n            continue\n\n        try:\n            if isinstance(raw, list):\n                # We are dealing with a choice variable\n                val = prompt_choice_for_config(\n                    cookiecutter_dict, env, key, raw, no_input\n                )\n                cookiecutter_dict[key] = val\n            elif not isinstance(raw, dict):\n                # We are dealing with a regular variable\n                val = render_variable(env, raw, cookiecutter_dict)\n\n                if not no_input:\n                    val = read_user_variable(key, val)\n\n                cookiecutter_dict[key] = val\n        except UndefinedError as err:\n            msg = \"Unable to render variable '{}'\".format(key)\n            raise UndefinedVariableInTemplate(msg, err, context)\n\n    # Second pass; handle the dictionaries.\n    for key, raw in iteritems(context[u'cookiecutter']):\n\n        try:\n            if isinstance(raw, dict):\n                # We are dealing with a dict variable\n                val = render_variable(env, raw, cookiecutter_dict)\n\n                if not no_input:\n                    val = read_user_dict(key, val)\n\n                cookiecutter_dict[key] = val\n        except UndefinedError as err:\n            msg = \"Unable to render variable '{}'\".format(key)\n            raise UndefinedVariableInTemplate(msg, err, context)\n\n    return cookiecutter_dict"
            ],
            "inscope_function_signatures": [
                "read_user_variable(var_name, default_value)",
                "read_user_yes_no(question, default_value)",
                "read_repo_password(question)",
                "read_user_choice(var_name, options)",
                "process_json(user_value)",
                "read_user_dict(var_name, default_value)",
                "render_variable(env, raw, cookiecutter_dict)",
                "prompt_choice_for_config(cookiecutter_dict, env, key, options, no_input)",
                "prompt_for_config(context, no_input=False)"
            ],
            "variables_in_file": {
                "click.prompt": [
                    32,
                    90,
                    45,
                    58,
                    126
                ],
                "click": [
                    32,
                    129,
                    58,
                    104,
                    108,
                    45,
                    48,
                    90,
                    91,
                    126
                ],
                "var_name": [
                    32,
                    85,
                    127
                ],
                "default_value": [
                    32,
                    121,
                    135,
                    47
                ],
                "question": [
                    58,
                    46
                ],
                "click.BOOL": [
                    48
                ],
                "isinstance": [
                    162,
                    230,
                    71,
                    167,
                    106,
                    208,
                    214,
                    121,
                    156
                ],
                "options": [
                    74,
                    181,
                    78,
                    71
                ],
                "list": [
                    208,
                    162,
                    71
                ],
                "TypeError": [
                    72,
                    122
                ],
                "ValueError": [
                    75
                ],
                "choice_map": [
                    80,
                    83,
                    93,
                    77
                ],
                "OrderedDict": [
                    196,
                    100,
                    77
                ],
                "format": [
                    78,
                    239,
                    83,
                    85,
                    87,
                    223
                ],
                "i": [
                    78
                ],
                "value": [
                    78
                ],
                "enumerate": [
                    78
                ],
                "choices": [
                    80,
                    91,
                    87
                ],
                "choice_map.keys": [
                    80
                ],
                "default": [
                    81,
                    91
                ],
                "choice_lines": [
                    83,
                    86
                ],
                "c": [
                    83
                ],
                "choice_map.items": [
                    83
                ],
                "prompt": [
                    91,
                    84
                ],
                "join": [
                    84,
                    86,
                    87
                ],
                "user_choice": [
                    90,
                    93
                ],
                "click.Choice": [
                    91
                ],
                "user_dict": [
                    98,
                    110,
                    106
                ],
                "json.loads": [
                    98
                ],
                "json": [
                    98
                ],
                "user_value": [
                    136,
                    99,
                    133,
                    126
                ],
                "Exception": [
                    102
                ],
                "click.UsageError": [
                    104,
                    108
                ],
                "dict": [
                    230,
                    106,
                    214,
                    121,
                    156
                ],
                "default_display": [
                    128,
                    124,
                    133
                ],
                "click.STRING": [
                    129
                ],
                "process_json": [
                    130
                ],
                "raw": [
                    160,
                    162,
                    227,
                    165,
                    230,
                    167,
                    168,
                    232,
                    170,
                    202,
                    204,
                    208,
                    211,
                    181,
                    214,
                    216,
                    154,
                    156
                ],
                "render_variable": [
                    164,
                    232,
                    181,
                    216,
                    158,
                    159
                ],
                "env": [
                    164,
                    197,
                    232,
                    170,
                    211,
                    181,
                    216,
                    158,
                    159
                ],
                "k": [
                    160,
                    158
                ],
                "cookiecutter_dict": [
                    164,
                    196,
                    232,
                    172,
                    204,
                    237,
                    242,
                    211,
                    181,
                    213,
                    216,
                    221,
                    158,
                    159
                ],
                "v": [
                    160,
                    164,
                    165,
                    159
                ],
                "raw.items": [
                    160
                ],
                "basestring": [
                    167
                ],
                "str": [
                    168
                ],
                "template": [
                    170,
                    172
                ],
                "env.from_string": [
                    170
                ],
                "rendered_template": [
                    172,
                    173
                ],
                "template.render": [
                    172
                ],
                "rendered_options": [
                    185,
                    186,
                    180
                ],
                "no_input": [
                    184,
                    234,
                    218,
                    211
                ],
                "read_user_choice": [
                    186
                ],
                "key": [
                    227,
                    202,
                    203,
                    204,
                    235,
                    237,
                    239,
                    211,
                    213,
                    186,
                    219,
                    221,
                    223
                ],
                "StrictEnvironment": [
                    197
                ],
                "context": [
                    224,
                    227,
                    197,
                    202,
                    240
                ],
                "iteritems": [
                    202,
                    227
                ],
                "key.startswith": [
                    203
                ],
                "val": [
                    232,
                    235,
                    237,
                    210,
                    213,
                    216,
                    219,
                    221
                ],
                "prompt_choice_for_config": [
                    210
                ],
                "read_user_variable": [
                    219
                ],
                "UndefinedError": [
                    222,
                    238
                ],
                "msg": [
                    224,
                    240,
                    239,
                    223
                ],
                "UndefinedVariableInTemplate": [
                    224,
                    240
                ],
                "err": [
                    224,
                    240
                ],
                "read_user_dict": [
                    235
                ]
            },
            "filtered_variables_in_file": {
                "click.prompt": [
                    32,
                    90,
                    45,
                    58,
                    126
                ],
                "click": [
                    32,
                    129,
                    58,
                    104,
                    108,
                    45,
                    48,
                    90,
                    91,
                    126
                ],
                "var_name": [
                    32,
                    85,
                    127
                ],
                "default_value": [
                    32,
                    121,
                    135,
                    47
                ],
                "question": [
                    58,
                    46
                ],
                "click.BOOL": [
                    48
                ],
                "options": [
                    74,
                    181,
                    78,
                    71
                ],
                "choice_map": [
                    80,
                    83,
                    93,
                    77
                ],
                "OrderedDict": [
                    196,
                    100,
                    77
                ],
                "i": [
                    78
                ],
                "value": [
                    78
                ],
                "choices": [
                    80,
                    91,
                    87
                ],
                "choice_map.keys": [
                    80
                ],
                "default": [
                    81,
                    91
                ],
                "choice_lines": [
                    83,
                    86
                ],
                "c": [
                    83
                ],
                "choice_map.items": [
                    83
                ],
                "prompt": [
                    91,
                    84
                ],
                "join": [
                    84,
                    86,
                    87
                ],
                "user_choice": [
                    90,
                    93
                ],
                "click.Choice": [
                    91
                ],
                "user_dict": [
                    98,
                    110,
                    106
                ],
                "json.loads": [
                    98
                ],
                "json": [
                    98
                ],
                "user_value": [
                    136,
                    99,
                    133,
                    126
                ],
                "click.UsageError": [
                    104,
                    108
                ],
                "default_display": [
                    128,
                    124,
                    133
                ],
                "click.STRING": [
                    129
                ],
                "process_json": [
                    130
                ],
                "raw": [
                    160,
                    162,
                    227,
                    165,
                    230,
                    167,
                    168,
                    232,
                    170,
                    202,
                    204,
                    208,
                    211,
                    181,
                    214,
                    216,
                    154,
                    156
                ],
                "render_variable": [
                    164,
                    232,
                    181,
                    216,
                    158,
                    159
                ],
                "env": [
                    164,
                    197,
                    232,
                    170,
                    211,
                    181,
                    216,
                    158,
                    159
                ],
                "k": [
                    160,
                    158
                ],
                "cookiecutter_dict": [
                    164,
                    196,
                    232,
                    172,
                    204,
                    237,
                    242,
                    211,
                    181,
                    213,
                    216,
                    221,
                    158,
                    159
                ],
                "v": [
                    160,
                    164,
                    165,
                    159
                ],
                "raw.items": [
                    160
                ],
                "basestring": [
                    167
                ],
                "template": [
                    170,
                    172
                ],
                "env.from_string": [
                    170
                ],
                "rendered_template": [
                    172,
                    173
                ],
                "template.render": [
                    172
                ],
                "rendered_options": [
                    185,
                    186,
                    180
                ],
                "no_input": [
                    184,
                    234,
                    218,
                    211
                ],
                "read_user_choice": [
                    186
                ],
                "key": [
                    227,
                    202,
                    203,
                    204,
                    235,
                    237,
                    239,
                    211,
                    213,
                    186,
                    219,
                    221,
                    223
                ],
                "StrictEnvironment": [
                    197
                ],
                "context": [
                    224,
                    227,
                    197,
                    202,
                    240
                ],
                "iteritems": [
                    202,
                    227
                ],
                "key.startswith": [
                    203
                ],
                "val": [
                    232,
                    235,
                    237,
                    210,
                    213,
                    216,
                    219,
                    221
                ],
                "prompt_choice_for_config": [
                    210
                ],
                "read_user_variable": [
                    219
                ],
                "UndefinedError": [
                    222,
                    238
                ],
                "msg": [
                    224,
                    240,
                    239,
                    223
                ],
                "UndefinedVariableInTemplate": [
                    224,
                    240
                ],
                "err": [
                    224,
                    240
                ],
                "read_user_dict": [
                    235
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/cookiecutter_3/tests/test_read_user_choice.py",
                "test_function": "test_click_invocation",
                "test_function_code": "@pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))\ndef test_click_invocation(mocker, user_choice, expected_value):\n    choice = mocker.patch('click.Choice')\n    choice.return_value = click.Choice(OPTIONS)\n\n    prompt = mocker.patch('click.prompt')\n    prompt.return_value = '{}'.format(user_choice)\n\n    assert read_user_choice('varname', OPTIONS) == expected_value\n\n    prompt.assert_called_once_with(\n        EXPECTED_PROMPT,\n        type=click.Choice(OPTIONS),\n        default='1',\n        show_choices=False\n    )",
                "test_error": "AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720335892176'>)\nActual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720335892176'>)\n\npytest introspection follows:\n\nKwargs:\nassert {'type': <MagicMock name='Choice()' id='139720335892176'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720335892176'>, 'default': '1', 'show_choices': False}\n  Common items:\n  {'default': '1', 'type': <MagicMock name='Choice()' id='139720335892176'>}\n  Right contains 1 more item:\n  {'show_choices': False}\n  Full diff:\n    {\n     'default': '1',\n  -  'show_choices': False,\n     'type': <MagicMock name='Choice()' id='139720335892176'>,\n    }",
                "full_test_error": "_mock_self = <MagicMock name='prompt' id='139720330357520'>\nargs = ('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',)\nkwargs = {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720335892176'>}\nexpected = (('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',), {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720335892176'>})\n_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f132ca61b00>\nactual = call('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720335892176'>)\ncause = None\n\n    def assert_called_with(_mock_self, *args, **kwargs):\n        \"\"\"assert that the mock was called with the specified arguments.\n    \n        Raises an AssertionError if the args and keyword args passed in are\n        different to the last call to the mock.\"\"\"\n        self = _mock_self\n        if self.call_args is None:\n            expected = self._format_mock_call_signature(args, kwargs)\n            raise AssertionError('Expected call: %s\\nNot called' % (expected,))\n    \n        def _error_message():\n            msg = self._format_mock_failure_message(args, kwargs)\n            return msg\n        expected = self._call_matcher((args, kwargs))\n        actual = self._call_matcher(self.call_args)\n        if expected != actual:\n            cause = expected if isinstance(expected, Exception) else None\n>           raise AssertionError(_error_message()) from cause\nE           AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720335892176'>)\nE           Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720335892176'>)\n\n/usr/local/lib/python3.7/unittest/mock.py:878: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n_mock_self = <MagicMock name='prompt' id='139720330357520'>\nargs = ('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',)\nkwargs = {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720335892176'>}\nself = <MagicMock name='prompt' id='139720330357520'>\n\n    def assert_called_once_with(_mock_self, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        self = _mock_self\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.\" %\n                   (self._mock_name or 'mock', self.call_count))\n            raise AssertionError(msg)\n>       return self.assert_called_with(*args, **kwargs)\nE       AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720335892176'>)\nE       Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720335892176'>)\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'type': <MagicMock name='Choice()' id='139720335892176'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720335892176'>, 'default': '1', 'show_choices': False}\nE         Common items:\nE         {'default': '1', 'type': <MagicMock name='Choice()' id='139720335892176'>}\nE         Right contains 1 more item:\nE         {'show_choices': False}\nE         Full diff:\nE           {\nE            'default': '1',\nE         -  'show_choices': False,\nE            'type': <MagicMock name='Choice()' id='139720335892176'>,\nE           }\n\n/usr/local/lib/python3.7/unittest/mock.py:889: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nmocker = <pytest_mock.plugin.MockerFixture object at 0x7f132ca5b750>\nuser_choice = 1, expected_value = 'hello'\n\n    @pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))\n    def test_click_invocation(mocker, user_choice, expected_value):\n        choice = mocker.patch('click.Choice')\n        choice.return_value = click.Choice(OPTIONS)\n    \n        prompt = mocker.patch('click.prompt')\n        prompt.return_value = '{}'.format(user_choice)\n    \n        assert read_user_choice('varname', OPTIONS) == expected_value\n    \n        prompt.assert_called_once_with(\n            EXPECTED_PROMPT,\n            type=click.Choice(OPTIONS),\n            default='1',\n>           show_choices=False\n        )\nE       AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720335892176'>)\nE       Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720335892176'>)\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'type': <MagicMock name='Choice()' id='139720335892176'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720335892176'>, 'default': '1', 'show_choices': False}\nE         Common items:\nE         {'default': '1', 'type': <MagicMock name='Choice()' id='139720335892176'>}\nE         Right contains 1 more item:\nE         {'show_choices': False}\nE         Full diff:\nE           {\nE            'default': '1',\nE         -  'show_choices': False,\nE            'type': <MagicMock name='Choice()' id='139720335892176'>,\nE           }\n\ntests/test_read_user_choice.py:33: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/cookiecutter_3/tests/test_read_user_choice.py",
                "test_function": "test_click_invocation",
                "test_function_code": "@pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))\ndef test_click_invocation(mocker, user_choice, expected_value):\n    choice = mocker.patch('click.Choice')\n    choice.return_value = click.Choice(OPTIONS)\n\n    prompt = mocker.patch('click.prompt')\n    prompt.return_value = '{}'.format(user_choice)\n\n    assert read_user_choice('varname', OPTIONS) == expected_value\n\n    prompt.assert_called_once_with(\n        EXPECTED_PROMPT,\n        type=click.Choice(OPTIONS),\n        default='1',\n        show_choices=False\n    )",
                "test_error": "AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720352578768'>)\nActual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720352578768'>)\n\npytest introspection follows:\n\nKwargs:\nassert {'type': <MagicMock name='Choice()' id='139720352578768'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720352578768'>, 'default': '1', 'show_choices': False}\n  Common items:\n  {'default': '1', 'type': <MagicMock name='Choice()' id='139720352578768'>}\n  Right contains 1 more item:\n  {'show_choices': False}\n  Full diff:\n    {\n     'default': '1',\n  -  'show_choices': False,\n     'type': <MagicMock name='Choice()' id='139720352578768'>,\n    }",
                "full_test_error": "_mock_self = <MagicMock name='prompt' id='139720323365200'>\nargs = ('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',)\nkwargs = {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720352578768'>}\nexpected = (('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',), {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720352578768'>})\n_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f132dfde560>\nactual = call('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720352578768'>)\ncause = None\n\n    def assert_called_with(_mock_self, *args, **kwargs):\n        \"\"\"assert that the mock was called with the specified arguments.\n    \n        Raises an AssertionError if the args and keyword args passed in are\n        different to the last call to the mock.\"\"\"\n        self = _mock_self\n        if self.call_args is None:\n            expected = self._format_mock_call_signature(args, kwargs)\n            raise AssertionError('Expected call: %s\\nNot called' % (expected,))\n    \n        def _error_message():\n            msg = self._format_mock_failure_message(args, kwargs)\n            return msg\n        expected = self._call_matcher((args, kwargs))\n        actual = self._call_matcher(self.call_args)\n        if expected != actual:\n            cause = expected if isinstance(expected, Exception) else None\n>           raise AssertionError(_error_message()) from cause\nE           AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720352578768'>)\nE           Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720352578768'>)\n\n/usr/local/lib/python3.7/unittest/mock.py:878: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n_mock_self = <MagicMock name='prompt' id='139720323365200'>\nargs = ('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',)\nkwargs = {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720352578768'>}\nself = <MagicMock name='prompt' id='139720323365200'>\n\n    def assert_called_once_with(_mock_self, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        self = _mock_self\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.\" %\n                   (self._mock_name or 'mock', self.call_count))\n            raise AssertionError(msg)\n>       return self.assert_called_with(*args, **kwargs)\nE       AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720352578768'>)\nE       Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720352578768'>)\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'type': <MagicMock name='Choice()' id='139720352578768'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720352578768'>, 'default': '1', 'show_choices': False}\nE         Common items:\nE         {'default': '1', 'type': <MagicMock name='Choice()' id='139720352578768'>}\nE         Right contains 1 more item:\nE         {'show_choices': False}\nE         Full diff:\nE           {\nE            'default': '1',\nE         -  'show_choices': False,\nE            'type': <MagicMock name='Choice()' id='139720352578768'>,\nE           }\n\n/usr/local/lib/python3.7/unittest/mock.py:889: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nmocker = <pytest_mock.plugin.MockerFixture object at 0x7f132dfc3910>\nuser_choice = 2, expected_value = 'world'\n\n    @pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))\n    def test_click_invocation(mocker, user_choice, expected_value):\n        choice = mocker.patch('click.Choice')\n        choice.return_value = click.Choice(OPTIONS)\n    \n        prompt = mocker.patch('click.prompt')\n        prompt.return_value = '{}'.format(user_choice)\n    \n        assert read_user_choice('varname', OPTIONS) == expected_value\n    \n        prompt.assert_called_once_with(\n            EXPECTED_PROMPT,\n            type=click.Choice(OPTIONS),\n            default='1',\n>           show_choices=False\n        )\nE       AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720352578768'>)\nE       Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720352578768'>)\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'type': <MagicMock name='Choice()' id='139720352578768'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720352578768'>, 'default': '1', 'show_choices': False}\nE         Common items:\nE         {'default': '1', 'type': <MagicMock name='Choice()' id='139720352578768'>}\nE         Right contains 1 more item:\nE         {'show_choices': False}\nE         Full diff:\nE           {\nE            'default': '1',\nE         -  'show_choices': False,\nE            'type': <MagicMock name='Choice()' id='139720352578768'>,\nE           }\n\ntests/test_read_user_choice.py:33: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/cookiecutter_3/tests/test_read_user_choice.py",
                "test_function": "test_click_invocation",
                "test_function_code": "@pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))\ndef test_click_invocation(mocker, user_choice, expected_value):\n    choice = mocker.patch('click.Choice')\n    choice.return_value = click.Choice(OPTIONS)\n\n    prompt = mocker.patch('click.prompt')\n    prompt.return_value = '{}'.format(user_choice)\n\n    assert read_user_choice('varname', OPTIONS) == expected_value\n\n    prompt.assert_called_once_with(\n        EXPECTED_PROMPT,\n        type=click.Choice(OPTIONS),\n        default='1',\n        show_choices=False\n    )",
                "test_error": "AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720325628944'>)\nActual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720325628944'>)\n\npytest introspection follows:\n\nKwargs:\nassert {'type': <MagicMock name='Choice()' id='139720325628944'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720325628944'>, 'default': '1', 'show_choices': False}\n  Common items:\n  {'default': '1', 'type': <MagicMock name='Choice()' id='139720325628944'>}\n  Right contains 1 more item:\n  {'show_choices': False}\n  Full diff:\n    {\n     'default': '1',\n  -  'show_choices': False,\n     'type': <MagicMock name='Choice()' id='139720325628944'>,\n    }",
                "full_test_error": "_mock_self = <MagicMock name='prompt' id='139720326422736'>\nargs = ('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',)\nkwargs = {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720325628944'>}\nexpected = (('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',), {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720325628944'>})\n_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f132dfca710>\nactual = call('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720325628944'>)\ncause = None\n\n    def assert_called_with(_mock_self, *args, **kwargs):\n        \"\"\"assert that the mock was called with the specified arguments.\n    \n        Raises an AssertionError if the args and keyword args passed in are\n        different to the last call to the mock.\"\"\"\n        self = _mock_self\n        if self.call_args is None:\n            expected = self._format_mock_call_signature(args, kwargs)\n            raise AssertionError('Expected call: %s\\nNot called' % (expected,))\n    \n        def _error_message():\n            msg = self._format_mock_failure_message(args, kwargs)\n            return msg\n        expected = self._call_matcher((args, kwargs))\n        actual = self._call_matcher(self.call_args)\n        if expected != actual:\n            cause = expected if isinstance(expected, Exception) else None\n>           raise AssertionError(_error_message()) from cause\nE           AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720325628944'>)\nE           Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720325628944'>)\n\n/usr/local/lib/python3.7/unittest/mock.py:878: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n_mock_self = <MagicMock name='prompt' id='139720326422736'>\nargs = ('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',)\nkwargs = {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720325628944'>}\nself = <MagicMock name='prompt' id='139720326422736'>\n\n    def assert_called_once_with(_mock_self, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        self = _mock_self\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.\" %\n                   (self._mock_name or 'mock', self.call_count))\n            raise AssertionError(msg)\n>       return self.assert_called_with(*args, **kwargs)\nE       AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720325628944'>)\nE       Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720325628944'>)\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'type': <MagicMock name='Choice()' id='139720325628944'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720325628944'>, 'default': '1', 'show_choices': False}\nE         Common items:\nE         {'default': '1', 'type': <MagicMock name='Choice()' id='139720325628944'>}\nE         Right contains 1 more item:\nE         {'show_choices': False}\nE         Full diff:\nE           {\nE            'default': '1',\nE         -  'show_choices': False,\nE            'type': <MagicMock name='Choice()' id='139720325628944'>,\nE           }\n\n/usr/local/lib/python3.7/unittest/mock.py:889: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nmocker = <pytest_mock.plugin.MockerFixture object at 0x7f132c6c55d0>\nuser_choice = 3, expected_value = 'foo'\n\n    @pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))\n    def test_click_invocation(mocker, user_choice, expected_value):\n        choice = mocker.patch('click.Choice')\n        choice.return_value = click.Choice(OPTIONS)\n    \n        prompt = mocker.patch('click.prompt')\n        prompt.return_value = '{}'.format(user_choice)\n    \n        assert read_user_choice('varname', OPTIONS) == expected_value\n    \n        prompt.assert_called_once_with(\n            EXPECTED_PROMPT,\n            type=click.Choice(OPTIONS),\n            default='1',\n>           show_choices=False\n        )\nE       AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720325628944'>)\nE       Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720325628944'>)\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'type': <MagicMock name='Choice()' id='139720325628944'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720325628944'>, 'default': '1', 'show_choices': False}\nE         Common items:\nE         {'default': '1', 'type': <MagicMock name='Choice()' id='139720325628944'>}\nE         Right contains 1 more item:\nE         {'show_choices': False}\nE         Full diff:\nE           {\nE            'default': '1',\nE         -  'show_choices': False,\nE            'type': <MagicMock name='Choice()' id='139720325628944'>,\nE           }\n\ntests/test_read_user_choice.py:33: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))"
                ]
            },
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/cookiecutter_3/tests/test_read_user_choice.py",
                "test_function": "test_click_invocation",
                "test_function_code": "@pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))\ndef test_click_invocation(mocker, user_choice, expected_value):\n    choice = mocker.patch('click.Choice')\n    choice.return_value = click.Choice(OPTIONS)\n\n    prompt = mocker.patch('click.prompt')\n    prompt.return_value = '{}'.format(user_choice)\n\n    assert read_user_choice('varname', OPTIONS) == expected_value\n\n    prompt.assert_called_once_with(\n        EXPECTED_PROMPT,\n        type=click.Choice(OPTIONS),\n        default='1',\n        show_choices=False\n    )",
                "test_error": "AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720326485520'>)\nActual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720326485520'>)\n\npytest introspection follows:\n\nKwargs:\nassert {'type': <MagicMock name='Choice()' id='139720326485520'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720326485520'>, 'default': '1', 'show_choices': False}\n  Common items:\n  {'default': '1', 'type': <MagicMock name='Choice()' id='139720326485520'>}\n  Right contains 1 more item:\n  {'show_choices': False}\n  Full diff:\n    {\n     'default': '1',\n  -  'show_choices': False,\n     'type': <MagicMock name='Choice()' id='139720326485520'>,\n    }",
                "full_test_error": "_mock_self = <MagicMock name='prompt' id='139720326507216'>\nargs = ('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',)\nkwargs = {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720326485520'>}\nexpected = (('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',), {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720326485520'>})\n_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x7f132dfc5c20>\nactual = call('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720326485520'>)\ncause = None\n\n    def assert_called_with(_mock_self, *args, **kwargs):\n        \"\"\"assert that the mock was called with the specified arguments.\n    \n        Raises an AssertionError if the args and keyword args passed in are\n        different to the last call to the mock.\"\"\"\n        self = _mock_self\n        if self.call_args is None:\n            expected = self._format_mock_call_signature(args, kwargs)\n            raise AssertionError('Expected call: %s\\nNot called' % (expected,))\n    \n        def _error_message():\n            msg = self._format_mock_failure_message(args, kwargs)\n            return msg\n        expected = self._call_matcher((args, kwargs))\n        actual = self._call_matcher(self.call_args)\n        if expected != actual:\n            cause = expected if isinstance(expected, Exception) else None\n>           raise AssertionError(_error_message()) from cause\nE           AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720326485520'>)\nE           Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720326485520'>)\n\n/usr/local/lib/python3.7/unittest/mock.py:878: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n_mock_self = <MagicMock name='prompt' id='139720326507216'>\nargs = ('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4',)\nkwargs = {'default': '1', 'show_choices': False, 'type': <MagicMock name='Choice()' id='139720326485520'>}\nself = <MagicMock name='prompt' id='139720326507216'>\n\n    def assert_called_once_with(_mock_self, *args, **kwargs):\n        \"\"\"assert that the mock was called exactly once and that that call was\n        with the specified arguments.\"\"\"\n        self = _mock_self\n        if not self.call_count == 1:\n            msg = (\"Expected '%s' to be called once. Called %s times.\" %\n                   (self._mock_name or 'mock', self.call_count))\n            raise AssertionError(msg)\n>       return self.assert_called_with(*args, **kwargs)\nE       AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720326485520'>)\nE       Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720326485520'>)\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'type': <MagicMock name='Choice()' id='139720326485520'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720326485520'>, 'default': '1', 'show_choices': False}\nE         Common items:\nE         {'default': '1', 'type': <MagicMock name='Choice()' id='139720326485520'>}\nE         Right contains 1 more item:\nE         {'show_choices': False}\nE         Full diff:\nE           {\nE            'default': '1',\nE         -  'show_choices': False,\nE            'type': <MagicMock name='Choice()' id='139720326485520'>,\nE           }\n\n/usr/local/lib/python3.7/unittest/mock.py:889: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nmocker = <pytest_mock.plugin.MockerFixture object at 0x7f132c6fd990>\nuser_choice = 4, expected_value = 'bar'\n\n    @pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))\n    def test_click_invocation(mocker, user_choice, expected_value):\n        choice = mocker.patch('click.Choice')\n        choice.return_value = click.Choice(OPTIONS)\n    \n        prompt = mocker.patch('click.prompt')\n        prompt.return_value = '{}'.format(user_choice)\n    \n        assert read_user_choice('varname', OPTIONS) == expected_value\n    \n        prompt.assert_called_once_with(\n            EXPECTED_PROMPT,\n            type=click.Choice(OPTIONS),\n            default='1',\n>           show_choices=False\n        )\nE       AssertionError: Expected call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', show_choices=False, type=<MagicMock name='Choice()' id='139720326485520'>)\nE       Actual call: prompt('Select varname:\\n1 - hello\\n2 - world\\n3 - foo\\n4 - bar\\nChoose from 1, 2, 3, 4', default='1', type=<MagicMock name='Choice()' id='139720326485520'>)\nE       \nE       pytest introspection follows:\nE       \nE       Kwargs:\nE       assert {'type': <MagicMock name='Choice()' id='139720326485520'>, 'default': '1'} == {'type': <MagicMock name='Choice()' id='139720326485520'>, 'default': '1', 'show_choices': False}\nE         Common items:\nE         {'default': '1', 'type': <MagicMock name='Choice()' id='139720326485520'>}\nE         Right contains 1 more item:\nE         {'show_choices': False}\nE         Full diff:\nE           {\nE            'default': '1',\nE         -  'show_choices': False,\nE            'type': <MagicMock name='Choice()' id='139720326485520'>,\nE           }\n\ntests/test_read_user_choice.py:33: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('user_choice, expected_value', enumerate(OPTIONS, 1))"
                ]
            }
        ]
    }
}