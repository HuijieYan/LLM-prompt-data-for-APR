{
    "luigi:26": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/luigi_26/luigi/contrib/hadoop_jar.py": {
            "buggy_functions": [
                {
                    "function_name": "run_job",
                    "function_code": "def run_job(self, job):\n    ssh_config = job.ssh()\n    if ssh_config:\n        host = ssh_config.get(\"host\", None)\n        key_file = ssh_config.get(\"key_file\", None)\n        username = ssh_config.get(\"username\", None)\n        if not host or not key_file or not username or not job.jar():\n            raise HadoopJarJobError(\"missing some config for HadoopRemoteJarJobRunner\")\n        arglist = ['ssh', '-i', key_file,\n                   '-o', 'BatchMode=yes']  # no password prompts etc\n        if ssh_config.get(\"no_host_key_check\", False):\n            arglist += ['-o', 'UserKnownHostsFile=/dev/null',\n                        '-o', 'StrictHostKeyChecking=no']\n        arglist.append('{}@{}'.format(username, host))\n    else:\n        arglist = []\n        if not job.jar() or not os.path.exists(job.jar()):\n            logger.error(\"Can't find jar: %s, full path %s\", job.jar(), os.path.abspath(job.jar()))\n            raise HadoopJarJobError(\"job jar does not exist\")\n\n    # TODO(jcrobak): libjars, files, etc. Can refactor out of\n    # hadoop.HadoopJobRunner\n    hadoop_arglist = luigi.contrib.hdfs.load_hadoop_cmd() + ['jar', job.jar()]\n    if job.main():\n        hadoop_arglist.append(job.main())\n\n    jobconfs = job.jobconfs()\n\n    for jc in jobconfs:\n        hadoop_arglist += ['-D' + jc]\n\n    (tmp_files, job_args) = fix_paths(job)\n\n    hadoop_arglist += job_args\n    arglist.extend(hadoop_arglist)\n\n    luigi.contrib.hadoop.run_and_track_hadoop_job(arglist)\n\n    for a, b in tmp_files:\n        a.move(b)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 70,
                    "end_line": 109,
                    "variables": {
                        "ssh_config": [
                            71,
                            72,
                            73,
                            74,
                            75,
                            80
                        ],
                        "job.ssh": [
                            71
                        ],
                        "job": [
                            96,
                            101,
                            71,
                            76,
                            86,
                            87,
                            92,
                            93,
                            94
                        ],
                        "host": [
                            73,
                            83,
                            76
                        ],
                        "ssh_config.get": [
                            80,
                            73,
                            74,
                            75
                        ],
                        "key_file": [
                            74,
                            76,
                            78
                        ],
                        "username": [
                            83,
                            75,
                            76
                        ],
                        "job.jar": [
                            76,
                            92,
                            86,
                            87
                        ],
                        "HadoopJarJobError": [
                            88,
                            77
                        ],
                        "arglist": [
                            104,
                            106,
                            78,
                            81,
                            83,
                            85
                        ],
                        "arglist.append": [
                            83
                        ],
                        "format": [
                            83
                        ],
                        "os.path.exists": [
                            86
                        ],
                        "os.path": [
                            86,
                            87
                        ],
                        "os": [
                            86,
                            87
                        ],
                        "logger.error": [
                            87
                        ],
                        "logger": [
                            87
                        ],
                        "os.path.abspath": [
                            87
                        ],
                        "hadoop_arglist": [
                            99,
                            103,
                            104,
                            92,
                            94
                        ],
                        "luigi.contrib.hdfs.load_hadoop_cmd": [
                            92
                        ],
                        "luigi.contrib.hdfs": [
                            92
                        ],
                        "luigi.contrib": [
                            106,
                            92
                        ],
                        "luigi": [
                            106,
                            92
                        ],
                        "job.main": [
                            93,
                            94
                        ],
                        "hadoop_arglist.append": [
                            94
                        ],
                        "jobconfs": [
                            96,
                            98
                        ],
                        "job.jobconfs": [
                            96
                        ],
                        "jc": [
                            98,
                            99
                        ],
                        "tmp_files": [
                            108,
                            101
                        ],
                        "job_args": [
                            101,
                            103
                        ],
                        "fix_paths": [
                            101
                        ],
                        "arglist.extend": [
                            104
                        ],
                        "luigi.contrib.hadoop.run_and_track_hadoop_job": [
                            106
                        ],
                        "luigi.contrib.hadoop": [
                            106
                        ],
                        "a": [
                            108,
                            109
                        ],
                        "b": [
                            108,
                            109
                        ],
                        "a.move": [
                            109
                        ]
                    },
                    "filtered_variables": {
                        "ssh_config": [
                            71,
                            72,
                            73,
                            74,
                            75,
                            80
                        ],
                        "job.ssh": [
                            71
                        ],
                        "job": [
                            96,
                            101,
                            71,
                            76,
                            86,
                            87,
                            92,
                            93,
                            94
                        ],
                        "host": [
                            73,
                            83,
                            76
                        ],
                        "ssh_config.get": [
                            80,
                            73,
                            74,
                            75
                        ],
                        "key_file": [
                            74,
                            76,
                            78
                        ],
                        "username": [
                            83,
                            75,
                            76
                        ],
                        "job.jar": [
                            76,
                            92,
                            86,
                            87
                        ],
                        "HadoopJarJobError": [
                            88,
                            77
                        ],
                        "arglist": [
                            104,
                            106,
                            78,
                            81,
                            83,
                            85
                        ],
                        "arglist.append": [
                            83
                        ],
                        "os.path.exists": [
                            86
                        ],
                        "os.path": [
                            86,
                            87
                        ],
                        "os": [
                            86,
                            87
                        ],
                        "logger.error": [
                            87
                        ],
                        "logger": [
                            87
                        ],
                        "os.path.abspath": [
                            87
                        ],
                        "hadoop_arglist": [
                            99,
                            103,
                            104,
                            92,
                            94
                        ],
                        "luigi.contrib.hdfs.load_hadoop_cmd": [
                            92
                        ],
                        "luigi.contrib.hdfs": [
                            92
                        ],
                        "luigi.contrib": [
                            106,
                            92
                        ],
                        "luigi": [
                            106,
                            92
                        ],
                        "job.main": [
                            93,
                            94
                        ],
                        "hadoop_arglist.append": [
                            94
                        ],
                        "jobconfs": [
                            96,
                            98
                        ],
                        "job.jobconfs": [
                            96
                        ],
                        "jc": [
                            98,
                            99
                        ],
                        "tmp_files": [
                            108,
                            101
                        ],
                        "job_args": [
                            101,
                            103
                        ],
                        "fix_paths": [
                            101
                        ],
                        "arglist.extend": [
                            104
                        ],
                        "luigi.contrib.hadoop.run_and_track_hadoop_job": [
                            106
                        ],
                        "luigi.contrib.hadoop": [
                            106
                        ],
                        "a": [
                            108,
                            109
                        ],
                        "b": [
                            108,
                            109
                        ],
                        "a.move": [
                            109
                        ]
                    },
                    "diff_line_number": 86,
                    "class_data": {
                        "signature": "class HadoopJarJobRunner(luigi.contrib.hadoop.JobRunner)",
                        "docstring": "JobRunner for `hadoop jar` commands. Used to run a HadoopJarJobTask.",
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self):\n    pass",
                            "def run_job(self, job):\n    ssh_config = job.ssh()\n    if ssh_config:\n        host = ssh_config.get('host', None)\n        key_file = ssh_config.get('key_file', None)\n        username = ssh_config.get('username', None)\n        if not host or not key_file or (not username) or (not job.jar()):\n            raise HadoopJarJobError('missing some config for HadoopRemoteJarJobRunner')\n        arglist = ['ssh', '-i', key_file, '-o', 'BatchMode=yes']\n        if ssh_config.get('no_host_key_check', False):\n            arglist += ['-o', 'UserKnownHostsFile=/dev/null', '-o', 'StrictHostKeyChecking=no']\n        arglist.append('{}@{}'.format(username, host))\n    else:\n        arglist = []\n        if not job.jar() or not os.path.exists(job.jar()):\n            logger.error(\"Can't find jar: %s, full path %s\", job.jar(), os.path.abspath(job.jar()))\n            raise HadoopJarJobError('job jar does not exist')\n    hadoop_arglist = luigi.contrib.hdfs.load_hadoop_cmd() + ['jar', job.jar()]\n    if job.main():\n        hadoop_arglist.append(job.main())\n    jobconfs = job.jobconfs()\n    for jc in jobconfs:\n        hadoop_arglist += ['-D' + jc]\n    (tmp_files, job_args) = fix_paths(job)\n    hadoop_arglist += job_args\n    arglist.extend(hadoop_arglist)\n    luigi.contrib.hadoop.run_and_track_hadoop_job(arglist)\n    for (a, b) in tmp_files:\n        a.move(b)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "__init__(self)",
                            "run_job(self, job)"
                        ],
                        "class_level_variable_names": [],
                        "constructor_variable_names": []
                    },
                    "used_imports": [
                        "import os"
                    ],
                    "variable_values": [
                        [
                            {
                                "ssh_config": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job.ssh": {
                                    "variable_value": "<bound method HadoopJarJobTask.ssh of TestMissingJarJob()>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "job": {
                                    "variable_value": "TestMissingJarJob()",
                                    "variable_type": "TestMissingJarJob",
                                    "variable_shape": null
                                },
                                "host": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ssh_config.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key_file": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "username": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job.jar": {
                                    "variable_value": "<bound method HadoopJarJobTask.jar of TestMissingJarJob()>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "HadoopJarJobError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "arglist": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "arglist.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "logger.error": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "logger": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.abspath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "hadoop_arglist": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib.hdfs.load_hadoop_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib.hdfs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job.main": {
                                    "variable_value": "<bound method HadoopJarJobTask.main of TestMissingJarJob()>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "hadoop_arglist.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "jobconfs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job.jobconfs": {
                                    "variable_value": "<bound method BaseHadoopJobTask.jobconfs of TestMissingJarJob()>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "jc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tmp_files": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job_args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fix_paths": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "arglist.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib.hadoop.run_and_track_hadoop_job": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib.hadoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "a": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "b": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "a.move": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "ssh_config": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job.ssh": {
                                    "variable_value": "<bound method HadoopJarJobTask.ssh of TestMissingJarJob()>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "job": {
                                    "variable_value": "TestMissingJarJob()",
                                    "variable_type": "TestMissingJarJob",
                                    "variable_shape": null
                                },
                                "host": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ssh_config.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key_file": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "username": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job.jar": {
                                    "variable_value": "<bound method HadoopJarJobTask.jar of TestMissingJarJob()>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "HadoopJarJobError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "arglist": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "arglist.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.exists": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "logger.error": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "logger": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "os.path.abspath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "hadoop_arglist": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib.hdfs.load_hadoop_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib.hdfs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job.main": {
                                    "variable_value": "<bound method HadoopJarJobTask.main of TestMissingJarJob()>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "hadoop_arglist.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "jobconfs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job.jobconfs": {
                                    "variable_value": "<bound method BaseHadoopJobTask.jobconfs of TestMissingJarJob()>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "jc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tmp_files": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "job_args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fix_paths": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "arglist.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib.hadoop.run_and_track_hadoop_job": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "luigi.contrib.hadoop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "a": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "b": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "a.move": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": {
                "file_scope_functions": [
                    {
                        "code": "def fix_paths(job):\n    \"\"\"\n    Coerce input arguments to use temporary files when used for output.\n\n    Return a list of temporary file pairs (tmpfile, destination path) and\n    a list of arguments.\n\n    Converts each HdfsTarget to a string for the path.\n    \"\"\"\n    tmp_files = []\n    args = []\n    for x in job.args():\n        if isinstance(x, luigi.contrib.hdfs.HdfsTarget):  # input/output\n            if x.exists() or not job.atomic_output():  # input\n                args.append(x.path)\n            else:  # output\n                x_path_no_slash = x.path[:-1] if x.path[-1] == '/' else x.path\n                y = luigi.contrib.hdfs.HdfsTarget(x_path_no_slash + '-luigi-tmp-%09d' % random.randrange(0, 1e10))\n                tmp_files.append((y, x_path_no_slash))\n                logger.info('Using temp path: %s for path %s', y.path, x.path)\n                args.append(y.path)\n        else:\n            args.append(str(x))\n\n    return (tmp_files, args)",
                        "signature": "fix_paths(job)"
                    }
                ],
                "file_scope_classes": [
                    {
                        "class_declaration": "class HadoopJarJobError:",
                        "functions": []
                    },
                    {
                        "class_declaration": "class HadoopJarJobRunner:",
                        "functions": [
                            {
                                "code": "def __init__(self):\n    pass",
                                "signature": "__init__(self)"
                            },
                            {
                                "code": "def run_job(self, job):\n    ssh_config = job.ssh()\n    if ssh_config:\n        host = ssh_config.get(\"host\", None)\n        key_file = ssh_config.get(\"key_file\", None)\n        username = ssh_config.get(\"username\", None)\n        if not host or not key_file or not username or not job.jar():\n            raise HadoopJarJobError(\"missing some config for HadoopRemoteJarJobRunner\")\n        arglist = ['ssh', '-i', key_file,\n                   '-o', 'BatchMode=yes']  # no password prompts etc\n        if ssh_config.get(\"no_host_key_check\", False):\n            arglist += ['-o', 'UserKnownHostsFile=/dev/null',\n                        '-o', 'StrictHostKeyChecking=no']\n        arglist.append('{}@{}'.format(username, host))\n    else:\n        arglist = []\n        if not job.jar() or not os.path.exists(job.jar()):\n            logger.error(\"Can't find jar: %s, full path %s\", job.jar(), os.path.abspath(job.jar()))\n            raise HadoopJarJobError(\"job jar does not exist\")\n\n    # TODO(jcrobak): libjars, files, etc. Can refactor out of\n    # hadoop.HadoopJobRunner\n    hadoop_arglist = luigi.contrib.hdfs.load_hadoop_cmd() + ['jar', job.jar()]\n    if job.main():\n        hadoop_arglist.append(job.main())\n\n    jobconfs = job.jobconfs()\n\n    for jc in jobconfs:\n        hadoop_arglist += ['-D' + jc]\n\n    (tmp_files, job_args) = fix_paths(job)\n\n    hadoop_arglist += job_args\n    arglist.extend(hadoop_arglist)\n\n    luigi.contrib.hadoop.run_and_track_hadoop_job(arglist)\n\n    for a, b in tmp_files:\n        a.move(b)",
                                "signature": "run_job(self, job)"
                            }
                        ]
                    },
                    {
                        "class_declaration": "class HadoopJarJobTask:",
                        "functions": [
                            {
                                "code": "def jar(self):\n    \"\"\"\n    Path to the jar for this Hadoop Job.\n    \"\"\"\n    return None",
                                "signature": "jar(self)"
                            },
                            {
                                "code": "def main(self):\n    \"\"\"\n    optional main method for this Hadoop Job.\n    \"\"\"\n    return None",
                                "signature": "main(self)"
                            },
                            {
                                "code": "def job_runner(self):\n    # We recommend that you define a subclass, override this method and set up your own config\n    return HadoopJarJobRunner()",
                                "signature": "job_runner(self)"
                            },
                            {
                                "code": "def atomic_output(self):\n    \"\"\"\n    If True, then rewrite output arguments to be temp locations and\n    atomically move them into place after the job finishes.\n    \"\"\"\n    return True",
                                "signature": "atomic_output(self)"
                            },
                            {
                                "code": "def ssh(self):\n    \"\"\"\n    Set this to run hadoop command remotely via ssh. It needs to be a dict that looks like\n    {\"host\": \"myhost\", \"key_file\": None, \"username\": None, [\"no_host_key_check\": False]}\n    \"\"\"\n    return None",
                                "signature": "ssh(self)"
                            },
                            {
                                "code": "def args(self):\n    \"\"\"\n    Returns an array of args to pass to the job (after hadoop jar <jar> <main>).\n    \"\"\"\n    return []",
                                "signature": "args(self)"
                            }
                        ]
                    }
                ]
            },
            "variables_in_file": {
                "logger": [
                    50,
                    28,
                    87
                ],
                "logging.getLogger": [
                    28
                ],
                "logging": [
                    28
                ],
                "tmp_files": [
                    101,
                    40,
                    108,
                    49,
                    55
                ],
                "args": [
                    41,
                    45,
                    51,
                    53,
                    55
                ],
                "x": [
                    42,
                    43,
                    44,
                    45,
                    47,
                    50,
                    53
                ],
                "job.args": [
                    42
                ],
                "job": [
                    96,
                    101,
                    71,
                    42,
                    44,
                    76,
                    86,
                    87,
                    92,
                    93,
                    94
                ],
                "isinstance": [
                    43
                ],
                "luigi.contrib.hdfs.HdfsTarget": [
                    48,
                    43
                ],
                "luigi.contrib.hdfs": [
                    48,
                    43,
                    92
                ],
                "luigi.contrib": [
                    106,
                    43,
                    48,
                    112,
                    92,
                    62
                ],
                "luigi": [
                    106,
                    43,
                    48,
                    112,
                    92,
                    62
                ],
                "x.exists": [
                    44
                ],
                "job.atomic_output": [
                    44
                ],
                "args.append": [
                    53,
                    51,
                    45
                ],
                "x.path": [
                    50,
                    45,
                    47
                ],
                "x_path_no_slash": [
                    48,
                    49,
                    47
                ],
                "y": [
                    48,
                    49,
                    50,
                    51
                ],
                "random.randrange": [
                    48
                ],
                "random": [
                    48
                ],
                "tmp_files.append": [
                    49
                ],
                "logger.info": [
                    50
                ],
                "y.path": [
                    50,
                    51
                ],
                "str": [
                    53
                ],
                "Exception": [
                    58
                ],
                "luigi.contrib.hadoop.JobRunner": [
                    62
                ],
                "luigi.contrib.hadoop": [
                    112,
                    106,
                    62
                ],
                "ssh_config": [
                    71,
                    72,
                    73,
                    74,
                    75,
                    80
                ],
                "job.ssh": [
                    71
                ],
                "host": [
                    73,
                    83,
                    76
                ],
                "ssh_config.get": [
                    80,
                    73,
                    74,
                    75
                ],
                "key_file": [
                    74,
                    76,
                    78
                ],
                "username": [
                    83,
                    75,
                    76
                ],
                "job.jar": [
                    76,
                    92,
                    86,
                    87
                ],
                "HadoopJarJobError": [
                    88,
                    77
                ],
                "arglist": [
                    104,
                    106,
                    78,
                    81,
                    83,
                    85
                ],
                "arglist.append": [
                    83
                ],
                "format": [
                    83
                ],
                "os.path.exists": [
                    86
                ],
                "os.path": [
                    86,
                    87
                ],
                "os": [
                    86,
                    87
                ],
                "logger.error": [
                    87
                ],
                "os.path.abspath": [
                    87
                ],
                "hadoop_arglist": [
                    99,
                    103,
                    104,
                    92,
                    94
                ],
                "luigi.contrib.hdfs.load_hadoop_cmd": [
                    92
                ],
                "job.main": [
                    93,
                    94
                ],
                "hadoop_arglist.append": [
                    94
                ],
                "jobconfs": [
                    96,
                    98
                ],
                "job.jobconfs": [
                    96
                ],
                "jc": [
                    98,
                    99
                ],
                "job_args": [
                    101,
                    103
                ],
                "fix_paths": [
                    101
                ],
                "arglist.extend": [
                    104
                ],
                "luigi.contrib.hadoop.run_and_track_hadoop_job": [
                    106
                ],
                "a": [
                    108,
                    109
                ],
                "b": [
                    108,
                    109
                ],
                "a.move": [
                    109
                ],
                "luigi.contrib.hadoop.BaseHadoopJobTask": [
                    112
                ],
                "HadoopJarJobRunner": [
                    131
                ]
            },
            "filtered_variables_in_file": {
                "logger": [
                    50,
                    28,
                    87
                ],
                "logging.getLogger": [
                    28
                ],
                "logging": [
                    28
                ],
                "tmp_files": [
                    101,
                    40,
                    108,
                    49,
                    55
                ],
                "args": [
                    41,
                    45,
                    51,
                    53,
                    55
                ],
                "x": [
                    42,
                    43,
                    44,
                    45,
                    47,
                    50,
                    53
                ],
                "job.args": [
                    42
                ],
                "job": [
                    96,
                    101,
                    71,
                    42,
                    44,
                    76,
                    86,
                    87,
                    92,
                    93,
                    94
                ],
                "luigi.contrib.hdfs.HdfsTarget": [
                    48,
                    43
                ],
                "luigi.contrib.hdfs": [
                    48,
                    43,
                    92
                ],
                "luigi.contrib": [
                    106,
                    43,
                    48,
                    112,
                    92,
                    62
                ],
                "luigi": [
                    106,
                    43,
                    48,
                    112,
                    92,
                    62
                ],
                "x.exists": [
                    44
                ],
                "job.atomic_output": [
                    44
                ],
                "args.append": [
                    53,
                    51,
                    45
                ],
                "x.path": [
                    50,
                    45,
                    47
                ],
                "x_path_no_slash": [
                    48,
                    49,
                    47
                ],
                "y": [
                    48,
                    49,
                    50,
                    51
                ],
                "random.randrange": [
                    48
                ],
                "random": [
                    48
                ],
                "tmp_files.append": [
                    49
                ],
                "logger.info": [
                    50
                ],
                "y.path": [
                    50,
                    51
                ],
                "luigi.contrib.hadoop.JobRunner": [
                    62
                ],
                "luigi.contrib.hadoop": [
                    112,
                    106,
                    62
                ],
                "ssh_config": [
                    71,
                    72,
                    73,
                    74,
                    75,
                    80
                ],
                "job.ssh": [
                    71
                ],
                "host": [
                    73,
                    83,
                    76
                ],
                "ssh_config.get": [
                    80,
                    73,
                    74,
                    75
                ],
                "key_file": [
                    74,
                    76,
                    78
                ],
                "username": [
                    83,
                    75,
                    76
                ],
                "job.jar": [
                    76,
                    92,
                    86,
                    87
                ],
                "HadoopJarJobError": [
                    88,
                    77
                ],
                "arglist": [
                    104,
                    106,
                    78,
                    81,
                    83,
                    85
                ],
                "arglist.append": [
                    83
                ],
                "os.path.exists": [
                    86
                ],
                "os.path": [
                    86,
                    87
                ],
                "os": [
                    86,
                    87
                ],
                "logger.error": [
                    87
                ],
                "os.path.abspath": [
                    87
                ],
                "hadoop_arglist": [
                    99,
                    103,
                    104,
                    92,
                    94
                ],
                "luigi.contrib.hdfs.load_hadoop_cmd": [
                    92
                ],
                "job.main": [
                    93,
                    94
                ],
                "hadoop_arglist.append": [
                    94
                ],
                "jobconfs": [
                    96,
                    98
                ],
                "job.jobconfs": [
                    96
                ],
                "jc": [
                    98,
                    99
                ],
                "job_args": [
                    101,
                    103
                ],
                "fix_paths": [
                    101
                ],
                "arglist.extend": [
                    104
                ],
                "luigi.contrib.hadoop.run_and_track_hadoop_job": [
                    106
                ],
                "a": [
                    108,
                    109
                ],
                "b": [
                    108,
                    109
                ],
                "a.move": [
                    109
                ],
                "luigi.contrib.hadoop.BaseHadoopJobTask": [
                    112
                ],
                "HadoopJarJobRunner": [
                    131
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/luigi_26/test/contrib/hadoop_jar_test.py",
                "test_function": "test_missing_jar",
                "test_function_code": "    @patch('luigi.contrib.hadoop.run_and_track_hadoop_job')\n    def test_missing_jar(self, mock_job):\n        mock_job.return_value = None\n        task = TestMissingJarJob()\n        self.assertRaises(HadoopJarJobError, task.run)",
                "test_error": "TypeError: expected str, bytes or os.PathLike object, not NoneType",
                "full_test_error": "self = <contrib.hadoop_jar_test.HadoopJarJobTaskTest testMethod=test_missing_jar>\nmock_job = <MagicMock name='run_and_track_hadoop_job' id='140201793314048'>\n\n    @patch('luigi.contrib.hadoop.run_and_track_hadoop_job')\n    def test_missing_jar(self, mock_job):\n        mock_job.return_value = None\n        task = TestMissingJarJob()\n>       self.assertRaises(HadoopJarJobError, task.run)\n\ntest/contrib/hadoop_jar_test.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nluigi/contrib/hadoop.py:651: in run\n    self.job_runner().run_job(self)\nluigi/contrib/hadoop_jar.py:87: in run_job\n    logger.error(\"Can't find jar: %s, full path %s\", job.jar(), os.path.abspath(job.jar()))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def abspath(path):\n        \"\"\"Return an absolute path.\"\"\"\n>       path = os.fspath(path)\nE       TypeError: expected str, bytes or os.PathLike object, not NoneType\n\n/usr/local/lib/python3.8/posixpath.py:374: TypeError",
                "traceback": "luigi/contrib/hadoop.py:651: in run\n    self.job_runner().run_job(self)\nluigi/contrib/hadoop_jar.py:87: in run_job\n    logger.error(\"Can't find jar: %s, full path %s\", job.jar(), os.path.abspath(job.jar()))",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def abspath(path):\n        \"\"\"Return an absolute path.\"\"\"\n>       path = os.fspath(path)\nE       TypeError: expected str, bytes or os.PathLike object, not NoneType\n\n/usr/local/lib/python3.8/posixpath.py:374: TypeError",
                "test_function_decorators": [
                    "patch('luigi.contrib.hadoop.run_and_track_hadoop_job')"
                ]
            }
        ]
    }
}