{
    "1.1.1": "def move(self, old_path, new_path, raise_if_exists=False):\n    if raise_if_exists and os.path.exists(new_path):\n        raise RuntimeError('Destination exists: %s' % new_path)\n    d = os.path.dirname(new_path)\n    if d and not os.path.exists(d):\n        self.fs.mkdir(d)\n    os.rename(old_path, new_path)\n",
    "1.1.2": null,
    "1.2.1": "class LocalFileSystem(FileSystem)",
    "1.2.2": "Wrapper for access to file system operations.\n\nWork in progress - add things as needed.",
    "1.2.3": [
        "exists(self, path)",
        "mkdir(self, path, parents=True, raise_if_exists=False)"
    ],
    "1.2.4": null,
    "1.2.5": null,
    "1.3.1": "luigi/file.py",
    "1.3.2": [
        "exists(self, path)",
        "mkdir(self, path, parents=True, raise_if_exists=False)"
    ],
    "1.4.1": [
        "    def test_move_to_new_dir(self):\n        # Regression test for a bug in LocalFileSystem.move\n        src = os.path.join(self.path, 'src.txt')\n        dest = os.path.join(self.path, 'newdir', 'dest.txt')\n\n        LocalTarget(src).open('w').close()\n        self.fs.move(src, dest)\n        self.assertTrue(os.path.exists(dest))"
    ],
    "1.4.2": [
        "test/file_test.py"
    ],
    "2.1.1": [
        [
            "E           AttributeError: 'LocalFileSystem' object has no attribute 'fs'"
        ]
    ],
    "2.1.2": [
        [
            "self = <file_test.FileSystemTest testMethod=test_move_to_new_dir>\n\n    def test_move_to_new_dir(self):\n        # Regression test for a bug in LocalFileSystem.move\n        src = os.path.join(self.path, 'src.txt')\n        dest = os.path.join(self.path, 'newdir', 'dest.txt')\n    \n        LocalTarget(src).open('w').close()\n>       self.fs.move(src, dest)\n\ntest/file_test.py:308: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <luigi.file.LocalFileSystem object at 0x1112a27f0>\nold_path = '/tmp/luigi-test-dir/src.txt'\nnew_path = '/tmp/luigi-test-dir/newdir/dest.txt', raise_if_exists = False\n\n    def move(self, old_path, new_path, raise_if_exists=False):\n        if raise_if_exists and os.path.exists(new_path):\n            raise RuntimeError('Destination exists: %s' % new_path)\n        d = os.path.dirname(new_path)\n        if d and not os.path.exists(d):\n>           self.fs.mkdir(d)",
            "\nluigi/file.py:91: AttributeError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": [
        [
            {
                "raise_if_exists": {
                    "value": "False",
                    "shape": null,
                    "omitted": false
                },
                "new_path": {
                    "value": "'/tmp/luigi-test-dir/newdir/dest.txt'",
                    "shape": "35",
                    "omitted": false
                },
                "old_path": {
                    "value": "'/tmp/luigi-test-dir/src.txt'",
                    "shape": "27",
                    "omitted": false
                }
            },
            {
                "d": {
                    "value": "'/tmp/luigi-test-dir/newdir'",
                    "shape": "26",
                    "omitted": false
                }
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "raise_if_exists": "bool",
                "new_path": "str",
                "old_path": "str"
            },
            {
                "d": "str"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}