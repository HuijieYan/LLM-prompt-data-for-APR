{
    "luigi:3": {
        "github_issue_title": [
            "TupleParameter errors in dynamic dependencies\n"
        ],
        "github_issue_description": [
            "Passing a TupleParameter in a dynamic dependency results in a TypeError in Python 3.6.5. See the following example for a basic demonstration.\n\nThe following code:\n\nimport luigi\nimport luigi.mock\nimport luigi.util\n\nclass FirstTask(luigi.Task):\n\n    # my_tuple = luigi.ListParameter(default=(1, 2, 3))\n    my_tuple = luigi.TupleParameter(default=(1, 2, 3))\n\n    @property\n    def tuple_string(self):\n        return '-'.join(map(str, self.my_tuple))\n\n    def run(self):\n        print(self.task_id + ': ' + self.tuple_string)\n        with self.output().open('w') as f:\n            f.write(self.tuple_string)\n\n    def output(self):\n        return luigi.mock.MockTarget(self.task_id)\n\n\n@luigi.util.inherits(FirstTask)\nclass SecondTask(luigi.Task):\n\n    def run(self):\n        input_target = yield FirstTask(my_tuple=tuple(self.my_tuple))\n\n        with input_target.open('r') as src:\n            my_tuple = src.read()\n            print(self.task_id + ': ' + my_tuple)\n\n            with self.output().open('w') as dst:\n                dst.write(my_tuple)\n\n    def output(self):\n        return luigi.mock.MockTarget(self.task_id)\n\nif __name__ == '__main__':\n    luigi.build([SecondTask()], local_scheduler=True)\n... results in this error:\n\n$ python scratch_9.py\nDEBUG: Checking if SecondTask(my_tuple=[1, 2, 3]) is complete\nINFO: Informed scheduler that task   SecondTask__1__2__3__a7a294ba13   has status   PENDING\nINFO: Done scheduling tasks\nINFO: Running Worker with 1 processes\nDEBUG: Asking scheduler for work...\nDEBUG: Pending tasks: 1\nINFO: [pid 10635] Worker Worker(salt=723375901, workers=1, host=DGJonathanDuckworth.local, username=jduckworth, pid=10635) running   SecondTask(my_tuple=[1, 2, 3])\nINFO: [pid 10635] Worker Worker(salt=723375901, workers=1, host=DGJonathanDuckworth.local, username=jduckworth, pid=10635) new requirements      SecondTask(my_tuple=[1, 2, 3])\nDEBUG: 1 running tasks, waiting for next task to finish\nINFO: Worker Worker(salt=723375901, workers=1, host=DGJonathanDuckworth.local, username=jduckworth, pid=10635) was stopped. Shutting down Keep-Alive thread\nTraceback (most recent call last):\n  File \"/Users/jduckworth/Library/Preferences/PyCharmCE2018.3/scratches/scratch_9.py\", line 40, in <module>\n    luigi.build([SecondTask()], local_scheduler=True)\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/interface.py\", line 274, in build\n    return _schedule_and_run(tasks, worker_scheduler_factory, override_defaults=env_params)['success']\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/interface.py\", line 207, in _schedule_and_run\n    success &= worker.run()\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/worker.py\", line 1162, in run\n    self._handle_next_task()\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/worker.py\", line 1066, in _handle_next_task\n    for module, name, params in new_requirements]\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/worker.py\", line 1066, in <listcomp>\n    for module, name, params in new_requirements]\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/task_register.py\", line 253, in load_task\n    return task_cls.from_str_params(params_str)\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/task.py\", line 482, in from_str_params\n    kwargs[param_name] = param.parse(param_str)\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/parameter.py\", line 1107, in parse\n    return tuple(tuple(x) for x in json.loads(x, object_pairs_hook=_FrozenOrderedDict))\n  File \"/Users/jduckworth/.virtualenvs/viper-dev/lib/python3.6/site-packages/luigi/parameter.py\", line 1107, in <genexpr>\n    return tuple(tuple(x) for x in json.loads(x, object_pairs_hook=_FrozenOrderedDict))\nTypeError: 'int' object is not iterable\nIt looks like the problem is that the code here catches a ValueError, but not a TypeError. I haven't tested in Python 2, but I'm assuming a ValueError gets thrown in that case and this is just a result of differences in Python versions.\n\nI'm happy to put in a PR if it's helpful.\n"
        ]
    }
}