{
    "matplotlib:10": {
        "/Volumes/SSD2T/bgp_envs/repos/matplotlib_10/lib/matplotlib/axis.py": {
            "buggy_functions": [
                {
                    "function_name": "set_tick_params",
                    "function_code": "def set_tick_params(self, which='major', reset=False, **kw):\n    \"\"\"\n    Set appearance parameters for ticks, ticklabels, and gridlines.\n\n    For documentation of keyword arguments, see\n    :meth:`matplotlib.axes.Axes.tick_params`.\n    \"\"\"\n    cbook._check_in_list(['major', 'minor', 'both'], which=which)\n    kwtrans = self._translate_tick_kw(kw)\n\n    # the kwargs are stored in self._major/minor_tick_kw so that any\n    # future new ticks will automatically get them\n    if reset:\n        if which in ['major', 'both']:\n            self._major_tick_kw.clear()\n            self._major_tick_kw.update(kwtrans)\n        if which in ['minor', 'both']:\n            self._minor_tick_kw.clear()\n            self._minor_tick_kw.update(kwtrans)\n        self.reset_ticks()\n    else:\n        if which in ['major', 'both']:\n            self._major_tick_kw.update(kwtrans)\n            for tick in self.majorTicks:\n                tick._apply_params(**kwtrans)\n        if which in ['minor', 'both']:\n            self._minor_tick_kw.update(kwtrans)\n            for tick in self.minorTicks:\n                tick._apply_params(**kwtrans)\n        # special-case label color to also apply to the offset text\n        if 'labelcolor' in kwtrans:\n            self.offsetText.set_color(kwtrans['labelcolor'])\n\n    self.stale = True\n",
                    "decorators": [],
                    "docstring": "Set appearance parameters for ticks, ticklabels, and gridlines.\n\nFor documentation of keyword arguments, see\n:meth:`matplotlib.axes.Axes.tick_params`.",
                    "start_line": 798,
                    "end_line": 831,
                    "variables": {
                        "cbook._check_in_list": [
                            805
                        ],
                        "cbook": [
                            805
                        ],
                        "which": [
                            805,
                            811,
                            814,
                            819,
                            823
                        ],
                        "kwtrans": [
                            806,
                            813,
                            816,
                            820,
                            822,
                            824,
                            826,
                            828,
                            829
                        ],
                        "self._translate_tick_kw": [
                            806
                        ],
                        "self": [
                            806,
                            812,
                            813,
                            815,
                            816,
                            817,
                            820,
                            821,
                            824,
                            825,
                            829,
                            831
                        ],
                        "kw": [
                            806
                        ],
                        "reset": [
                            810
                        ],
                        "self._major_tick_kw.clear": [
                            812
                        ],
                        "self._major_tick_kw": [
                            812,
                            813,
                            820
                        ],
                        "self._major_tick_kw.update": [
                            820,
                            813
                        ],
                        "self._minor_tick_kw.clear": [
                            815
                        ],
                        "self._minor_tick_kw": [
                            816,
                            824,
                            815
                        ],
                        "self._minor_tick_kw.update": [
                            816,
                            824
                        ],
                        "self.reset_ticks": [
                            817
                        ],
                        "tick": [
                            825,
                            826,
                            821,
                            822
                        ],
                        "self.majorTicks": [
                            821
                        ],
                        "tick._apply_params": [
                            826,
                            822
                        ],
                        "self.minorTicks": [
                            825
                        ],
                        "self.offsetText.set_color": [
                            829
                        ],
                        "self.offsetText": [
                            829
                        ],
                        "self.stale": [
                            831
                        ]
                    },
                    "filtered_variables": {
                        "cbook._check_in_list": [
                            805
                        ],
                        "cbook": [
                            805
                        ],
                        "which": [
                            805,
                            811,
                            814,
                            819,
                            823
                        ],
                        "kwtrans": [
                            806,
                            813,
                            816,
                            820,
                            822,
                            824,
                            826,
                            828,
                            829
                        ],
                        "self._translate_tick_kw": [
                            806
                        ],
                        "self": [
                            806,
                            812,
                            813,
                            815,
                            816,
                            817,
                            820,
                            821,
                            824,
                            825,
                            829,
                            831
                        ],
                        "kw": [
                            806
                        ],
                        "reset": [
                            810
                        ],
                        "self._major_tick_kw.clear": [
                            812
                        ],
                        "self._major_tick_kw": [
                            812,
                            813,
                            820
                        ],
                        "self._major_tick_kw.update": [
                            820,
                            813
                        ],
                        "self._minor_tick_kw.clear": [
                            815
                        ],
                        "self._minor_tick_kw": [
                            816,
                            824,
                            815
                        ],
                        "self._minor_tick_kw.update": [
                            816,
                            824
                        ],
                        "self.reset_ticks": [
                            817
                        ],
                        "tick": [
                            825,
                            826,
                            821,
                            822
                        ],
                        "self.majorTicks": [
                            821
                        ],
                        "tick._apply_params": [
                            826,
                            822
                        ],
                        "self.minorTicks": [
                            825
                        ],
                        "self.offsetText.set_color": [
                            829
                        ],
                        "self.offsetText": [
                            829
                        ],
                        "self.stale": [
                            831
                        ]
                    },
                    "diff_line_number": 827,
                    "class_data": {
                        "signature": "class Axis(martist.Artist)",
                        "docstring": "Base class for `.XAxis` and `.YAxis`.\n\nAttributes\n----------\nisDefault_label : bool\n\naxes : `matplotlib.axes.Axes`\n    The `~.axes.Axes` to which the Axis belongs.\nmajor : `matplotlib.axis.Ticker`\n    Determines the major tick positions and their label format.\nminor : `matplotlib.axis.Ticker`\n    Determines the minor tick positions and their label format.\ncallbacks : `matplotlib.cbook.CallbackRegistry`\n\nlabel : `.Text`\n    The axis label.\nlabelpad : float\n    The distance between the axis label and the tick labels.\n    Defaults to :rc:`axes.labelpad` = 4.\noffsetText : `.Text`\n    A `.Text` object containing the data offset of the ticks (if any).\npickradius : float\n    The acceptance radius for containment tests. See also `.Axis.contains`.\nmajorTicks : list of `.Tick`\n    The major ticks.\nminorTicks : list of `.Tick`\n    The minor ticks.",
                        "constructor_docstring": "Parameters\n----------\naxes : `matplotlib.axes.Axes`\n    The `~.axes.Axes` to which the created Axis belongs.\npickradius : float\n    The acceptance radius for containment tests. See also\n    `.Axis.contains`.",
                        "functions": [
                            "def __str__(self):\n    return '{}({},{})'.format(type(self).__name__, *self.axes.transAxes.transform((0, 0)))",
                            "def __init__(self, axes, pickradius=15):\n    \"\"\"\n    Parameters\n    ----------\n    axes : `matplotlib.axes.Axes`\n        The `~.axes.Axes` to which the created Axis belongs.\n    pickradius : float\n        The acceptance radius for containment tests. See also\n        `.Axis.contains`.\n    \"\"\"\n    martist.Artist.__init__(self)\n    self._remove_overlapping_locs = True\n    self.set_figure(axes.figure)\n    self.isDefault_label = True\n    self.axes = axes\n    self.major = Ticker()\n    self.minor = Ticker()\n    self.callbacks = cbook.CallbackRegistry()\n    self._autolabelpos = True\n    self._smart_bounds = False\n    self.label = mtext.Text(np.nan, np.nan, fontsize=mpl.rcParams['axes.labelsize'], fontweight=mpl.rcParams['axes.labelweight'], color=mpl.rcParams['axes.labelcolor'])\n    self._set_artist_props(self.label)\n    self.offsetText = mtext.Text(np.nan, np.nan)\n    self._set_artist_props(self.offsetText)\n    self.labelpad = mpl.rcParams['axes.labelpad']\n    self.pickradius = pickradius\n    self._major_tick_kw = dict()\n    self._minor_tick_kw = dict()\n    self.cla()\n    self._set_scale('linear')",
                            "def get_remove_overlapping_locs(self):\n    return self._remove_overlapping_locs",
                            "def set_remove_overlapping_locs(self, val):\n    self._remove_overlapping_locs = bool(val)",
                            "def set_label_coords(self, x, y, transform=None):\n    \"\"\"\n    Set the coordinates of the label.\n\n    By default, the x coordinate of the y label and the y coordinate of the\n    x label are determined by the tick label bounding boxes, but this can\n    lead to poor alignment of multiple labels if there are multiple axes.\n\n    You can also specify the coordinate system of the label with the\n    transform.  If None, the default coordinate system will be the axes\n    coordinate system: (0, 0) is bottom left, (0.5, 0.5) is center, etc.\n    \"\"\"\n    self._autolabelpos = False\n    if transform is None:\n        transform = self.axes.transAxes\n    self.label.set_transform(transform)\n    self.label.set_position((x, y))\n    self.stale = True",
                            "def get_transform(self):\n    return self._scale.get_transform()",
                            "def get_scale(self):\n    return self._scale.name",
                            "def _set_scale(self, value, **kwargs):\n    self._scale = mscale.scale_factory(value, self, **kwargs)\n    self._scale.set_default_locators_and_formatters(self)\n    self.isDefault_majloc = True\n    self.isDefault_minloc = True\n    self.isDefault_majfmt = True\n    self.isDefault_minfmt = True",
                            "def limit_range_for_scale(self, vmin, vmax):\n    return self._scale.limit_range_for_scale(vmin, vmax, self.get_minpos())",
                            "def get_children(self):\n    return [self.label, self.offsetText, *self.get_major_ticks(), *self.get_minor_ticks()]",
                            "def cla(self):\n    \"\"\"Clear this axis.\"\"\"\n    self.label.set_text('')\n    self._set_scale('linear')\n    self.callbacks = cbook.CallbackRegistry()\n    self._gridOnMajor = mpl.rcParams['axes.grid'] and mpl.rcParams['axes.grid.which'] in ('both', 'major')\n    self._gridOnMinor = mpl.rcParams['axes.grid'] and mpl.rcParams['axes.grid.which'] in ('both', 'minor')\n    self.reset_ticks()\n    self.converter = None\n    self.units = None\n    self.set_units(None)\n    self.stale = True",
                            "def reset_ticks(self):\n    \"\"\"\n    Re-initialize the major and minor Tick lists.\n\n    Each list starts with a single fresh Tick.\n    \"\"\"\n    try:\n        del self.majorTicks\n    except AttributeError:\n        pass\n    try:\n        del self.minorTicks\n    except AttributeError:\n        pass\n    try:\n        self.set_clip_path(self.axes.patch)\n    except AttributeError:\n        pass",
                            "def set_tick_params(self, which='major', reset=False, **kw):\n    \"\"\"\n    Set appearance parameters for ticks, ticklabels, and gridlines.\n\n    For documentation of keyword arguments, see\n    :meth:`matplotlib.axes.Axes.tick_params`.\n    \"\"\"\n    cbook._check_in_list(['major', 'minor', 'both'], which=which)\n    kwtrans = self._translate_tick_kw(kw)\n    if reset:\n        if which in ['major', 'both']:\n            self._major_tick_kw.clear()\n            self._major_tick_kw.update(kwtrans)\n        if which in ['minor', 'both']:\n            self._minor_tick_kw.clear()\n            self._minor_tick_kw.update(kwtrans)\n        self.reset_ticks()\n    else:\n        if which in ['major', 'both']:\n            self._major_tick_kw.update(kwtrans)\n            for tick in self.majorTicks:\n                tick._apply_params(**kwtrans)\n        if which in ['minor', 'both']:\n            self._minor_tick_kw.update(kwtrans)\n            for tick in self.minorTicks:\n                tick._apply_params(**kwtrans)\n        if 'labelcolor' in kwtrans:\n            self.offsetText.set_color(kwtrans['labelcolor'])\n    self.stale = True",
                            "@staticmethod\ndef _translate_tick_kw(kw):\n    kwkeys = ['size', 'width', 'color', 'tickdir', 'pad', 'labelsize', 'labelcolor', 'zorder', 'gridOn', 'tick1On', 'tick2On', 'label1On', 'label2On', 'length', 'direction', 'left', 'bottom', 'right', 'top', 'labelleft', 'labelbottom', 'labelright', 'labeltop', 'labelrotation'] + _gridline_param_names\n    kwtrans = {}\n    if 'length' in kw:\n        kwtrans['size'] = kw.pop('length')\n    if 'direction' in kw:\n        kwtrans['tickdir'] = kw.pop('direction')\n    if 'rotation' in kw:\n        kwtrans['labelrotation'] = kw.pop('rotation')\n    if 'left' in kw:\n        kwtrans['tick1On'] = kw.pop('left')\n    if 'bottom' in kw:\n        kwtrans['tick1On'] = kw.pop('bottom')\n    if 'right' in kw:\n        kwtrans['tick2On'] = kw.pop('right')\n    if 'top' in kw:\n        kwtrans['tick2On'] = kw.pop('top')\n    if 'labelleft' in kw:\n        kwtrans['label1On'] = kw.pop('labelleft')\n    if 'labelbottom' in kw:\n        kwtrans['label1On'] = kw.pop('labelbottom')\n    if 'labelright' in kw:\n        kwtrans['label2On'] = kw.pop('labelright')\n    if 'labeltop' in kw:\n        kwtrans['label2On'] = kw.pop('labeltop')\n    if 'colors' in kw:\n        c = kw.pop('colors')\n        kwtrans['color'] = c\n        kwtrans['labelcolor'] = c\n    for key in kw:\n        if key not in kwkeys:\n            raise ValueError('keyword %s is not recognized; valid keywords are %s' % (key, kwkeys))\n        kwtrans.update(kw)\n    return kwtrans",
                            "def set_clip_path(self, clippath, transform=None):\n    martist.Artist.set_clip_path(self, clippath, transform)\n    for child in self.majorTicks + self.minorTicks:\n        child.set_clip_path(clippath, transform)\n    self.stale = True",
                            "def get_view_interval(self):\n    \"\"\"Return the view limits ``(min, max)`` of this axis.\"\"\"\n    raise NotImplementedError('Derived must override')",
                            "def set_view_interval(self, vmin, vmax, ignore=False):\n    \"\"\"\n    Set the axis view limits.  This method is for internal use; Matplotlib\n    users should typically use e.g. `~.Axes.set_xlim` or `~.Axes.set_ylim`.\n\n    If *ignore* is False (the default), this method will never reduce the\n    preexisting view limits, only expand them if *vmin* or *vmax* are not\n    within them.  Moreover, the order of *vmin* and *vmax* does not matter;\n    the orientation of the axis will not change.\n\n    If *ignore* is True, the view limits will be set exactly to ``(vmin,\n    vmax)`` in that order.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                            "def get_data_interval(self):\n    \"\"\"Return the Interval instance for this axis data limits.\"\"\"\n    raise NotImplementedError('Derived must override')",
                            "def set_data_interval(self, vmin, vmax, ignore=False):\n    \"\"\"\n    Set the axis data limits.  This method is for internal use.\n\n    If *ignore* is False (the default), this method will never reduce the\n    preexisting data limits, only expand them if *vmin* or *vmax* are not\n    within them.  Moreover, the order of *vmin* and *vmax* does not matter;\n    the orientation of the axis will not change.\n\n    If *ignore* is True, the data limits will be set exactly to ``(vmin,\n    vmax)`` in that order.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                            "def get_inverted(self):\n    \"\"\"\n    Return whether the axis is oriented in the \"inverse\" direction.\n\n    The \"normal\" direction is increasing to the right for the x-axis and to\n    the top for the y-axis; the \"inverse\" direction is increasing to the\n    left for the x-axis and to the bottom for the y-axis.\n    \"\"\"\n    low, high = self.get_view_interval()\n    return high < low",
                            "def set_inverted(self, inverted):\n    \"\"\"\n    Set whether the axis is oriented in the \"inverse\" direction.\n\n    The \"normal\" direction is increasing to the right for the x-axis and to\n    the top for the y-axis; the \"inverse\" direction is increasing to the\n    left for the x-axis and to the bottom for the y-axis.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                            "def set_default_intervals(self):\n    \"\"\"\n    Set the default limits for the axis data and view interval if they\n    have not been not mutated yet.\n    \"\"\"",
                            "def _set_artist_props(self, a):\n    if a is None:\n        return\n    a.set_figure(self.figure)",
                            "def get_ticklabel_extents(self, renderer):\n    \"\"\"\n    Get the extents of the tick labels on either side\n    of the axes.\n    \"\"\"\n    ticks_to_draw = self._update_ticks()\n    ticklabelBoxes, ticklabelBoxes2 = self._get_tick_bboxes(ticks_to_draw, renderer)\n    if len(ticklabelBoxes):\n        bbox = mtransforms.Bbox.union(ticklabelBoxes)\n    else:\n        bbox = mtransforms.Bbox.from_extents(0, 0, 0, 0)\n    if len(ticklabelBoxes2):\n        bbox2 = mtransforms.Bbox.union(ticklabelBoxes2)\n    else:\n        bbox2 = mtransforms.Bbox.from_extents(0, 0, 0, 0)\n    return (bbox, bbox2)",
                            "@cbook.deprecated('3.2')\ndef set_smart_bounds(self, value):\n    \"\"\"Set the axis to have smart bounds.\"\"\"\n    self._smart_bounds = value\n    self.stale = True",
                            "@cbook.deprecated('3.2')\ndef get_smart_bounds(self):\n    \"\"\"Return whether the axis has smart bounds.\"\"\"\n    return self._smart_bounds",
                            "def _update_ticks(self):\n    \"\"\"\n    Update ticks (position and labels) using the current data interval of\n    the axes.  Return the list of ticks that will be drawn.\n    \"\"\"\n    major_locs = self.get_majorticklocs()\n    major_labels = self.major.formatter.format_ticks(major_locs)\n    major_ticks = self.get_major_ticks(len(major_locs))\n    self.major.formatter.set_locs(major_locs)\n    for tick, loc, label in zip(major_ticks, major_locs, major_labels):\n        tick.update_position(loc)\n        tick.set_label1(label)\n        tick.set_label2(label)\n    minor_locs = self.get_minorticklocs()\n    minor_labels = self.minor.formatter.format_ticks(minor_locs)\n    minor_ticks = self.get_minor_ticks(len(minor_locs))\n    self.minor.formatter.set_locs(minor_locs)\n    for tick, loc, label in zip(minor_ticks, minor_locs, minor_labels):\n        tick.update_position(loc)\n        tick.set_label1(label)\n        tick.set_label2(label)\n    ticks = [*major_ticks, *minor_ticks]\n    view_low, view_high = self.get_view_interval()\n    if view_low > view_high:\n        view_low, view_high = (view_high, view_low)\n    if self._smart_bounds and ticks:\n        data_low, data_high = sorted(self.get_data_interval())\n        locs = np.sort([tick.get_loc() for tick in ticks])\n        if data_low <= view_low:\n            ilow = view_low\n        else:\n            good_locs = locs[locs <= data_low]\n            if len(good_locs):\n                ilow = good_locs[-1]\n            else:\n                ilow = locs[0]\n        if data_high >= view_high:\n            ihigh = view_high\n        else:\n            good_locs = locs[locs >= data_high]\n            if len(good_locs):\n                ihigh = good_locs[0]\n            else:\n                ihigh = locs[-1]\n        ticks = [tick for tick in ticks if ilow <= tick.get_loc() <= ihigh]\n    interval_t = self.get_transform().transform([view_low, view_high])\n    ticks_to_draw = []\n    for tick in ticks:\n        try:\n            loc_t = self.get_transform().transform(tick.get_loc())\n        except AssertionError:\n            pass\n        else:\n            if mtransforms._interval_contains_close(interval_t, loc_t):\n                ticks_to_draw.append(tick)\n    return ticks_to_draw",
                            "def _get_tick_bboxes(self, ticks, renderer):\n    \"\"\"Return lists of bboxes for ticks' label1's and label2's.\"\"\"\n    return ([tick.label1.get_window_extent(renderer) for tick in ticks if tick.label1.get_visible()], [tick.label2.get_window_extent(renderer) for tick in ticks if tick.label2.get_visible()])",
                            "def get_tightbbox(self, renderer):\n    \"\"\"\n    Return a bounding box that encloses the axis. It only accounts\n    tick labels, axis label, and offsetText.\n    \"\"\"\n    if not self.get_visible():\n        return\n    ticks_to_draw = self._update_ticks()\n    self._update_label_position(renderer)\n    ticklabelBoxes, ticklabelBoxes2 = self._get_tick_bboxes(ticks_to_draw, renderer)\n    self._update_offset_text_position(ticklabelBoxes, ticklabelBoxes2)\n    self.offsetText.set_text(self.major.formatter.get_offset())\n    bboxes = [*(a.get_window_extent(renderer) for a in [self.label, self.offsetText] if a.get_visible()), *ticklabelBoxes, *ticklabelBoxes2]\n    bboxes = [b for b in bboxes if 0 < b.width < np.inf and 0 < b.height < np.inf]\n    if bboxes:\n        return mtransforms.Bbox.union(bboxes)\n    else:\n        return None",
                            "def get_tick_padding(self):\n    values = []\n    if len(self.majorTicks):\n        values.append(self.majorTicks[0].get_tick_padding())\n    if len(self.minorTicks):\n        values.append(self.minorTicks[0].get_tick_padding())\n    return max(values, default=0)",
                            "@martist.allow_rasterization\ndef draw(self, renderer, *args, **kwargs):\n    if not self.get_visible():\n        return\n    renderer.open_group(__name__, gid=self.get_gid())\n    ticks_to_draw = self._update_ticks()\n    ticklabelBoxes, ticklabelBoxes2 = self._get_tick_bboxes(ticks_to_draw, renderer)\n    for tick in ticks_to_draw:\n        tick.draw(renderer)\n    self._update_label_position(renderer)\n    self.label.draw(renderer)\n    self._update_offset_text_position(ticklabelBoxes, ticklabelBoxes2)\n    self.offsetText.set_text(self.major.formatter.get_offset())\n    self.offsetText.draw(renderer)\n    renderer.close_group(__name__)\n    self.stale = False",
                            "def get_gridlines(self):\n    \"\"\"Return the grid lines as a list of Line2D instance.\"\"\"\n    ticks = self.get_major_ticks()\n    return cbook.silent_list('Line2D gridline', [tick.gridline for tick in ticks])",
                            "def get_label(self):\n    \"\"\"Return the axis label as a Text instance.\"\"\"\n    return self.label",
                            "def get_offset_text(self):\n    \"\"\"Return the axis offsetText as a Text instance.\"\"\"\n    return self.offsetText",
                            "def get_pickradius(self):\n    \"\"\"Return the depth of the axis used by the picker.\"\"\"\n    return self.pickradius",
                            "def get_majorticklabels(self):\n    \"\"\"Return a list of Text instances for the major ticklabels.\"\"\"\n    ticks = self.get_major_ticks()\n    labels1 = [tick.label1 for tick in ticks if tick.label1.get_visible()]\n    labels2 = [tick.label2 for tick in ticks if tick.label2.get_visible()]\n    return cbook.silent_list('Text major ticklabel', labels1 + labels2)",
                            "def get_minorticklabels(self):\n    \"\"\"Return a list of Text instances for the minor ticklabels.\"\"\"\n    ticks = self.get_minor_ticks()\n    labels1 = [tick.label1 for tick in ticks if tick.label1.get_visible()]\n    labels2 = [tick.label2 for tick in ticks if tick.label2.get_visible()]\n    return cbook.silent_list('Text minor ticklabel', labels1 + labels2)",
                            "def get_ticklabels(self, minor=False, which=None):\n    \"\"\"\n    Get the tick labels as a list of `~matplotlib.text.Text` instances.\n\n    Parameters\n    ----------\n    minor : bool\n       If True return the minor ticklabels,\n       else return the major ticklabels\n\n    which : None, ('minor', 'major', 'both')\n       Overrides *minor*.\n\n       Selects which ticklabels to return\n\n    Returns\n    -------\n    list\n       List of `~matplotlib.text.Text` instances.\n    \"\"\"\n    if which is not None:\n        if which == 'minor':\n            return self.get_minorticklabels()\n        elif which == 'major':\n            return self.get_majorticklabels()\n        elif which == 'both':\n            return self.get_majorticklabels() + self.get_minorticklabels()\n        else:\n            cbook._check_in_list(['major', 'minor', 'both'], which=which)\n    if minor:\n        return self.get_minorticklabels()\n    return self.get_majorticklabels()",
                            "def get_majorticklines(self):\n    \"\"\"Return the major tick lines as a list of Line2D instances.\"\"\"\n    lines = []\n    ticks = self.get_major_ticks()\n    for tick in ticks:\n        lines.append(tick.tick1line)\n        lines.append(tick.tick2line)\n    return cbook.silent_list('Line2D ticklines', lines)",
                            "def get_minorticklines(self):\n    \"\"\"Return the minor tick lines as a list of Line2D instances.\"\"\"\n    lines = []\n    ticks = self.get_minor_ticks()\n    for tick in ticks:\n        lines.append(tick.tick1line)\n        lines.append(tick.tick2line)\n    return cbook.silent_list('Line2D ticklines', lines)",
                            "def get_ticklines(self, minor=False):\n    \"\"\"Return the tick lines as a list of Line2D instances.\"\"\"\n    if minor:\n        return self.get_minorticklines()\n    return self.get_majorticklines()",
                            "def get_majorticklocs(self):\n    \"\"\"Get the array of major tick locations in data coordinates.\"\"\"\n    return self.major.locator()",
                            "def get_minorticklocs(self):\n    \"\"\"Get the array of minor tick locations in data coordinates.\"\"\"\n    major_locs = self.major.locator()\n    minor_locs = self.minor.locator()\n    transform = self._scale.get_transform()\n    tr_minor_locs = transform.transform(minor_locs)\n    tr_major_locs = transform.transform(major_locs)\n    lo, hi = sorted(transform.transform(self.get_view_interval()))\n    tol = (hi - lo) * 1e-05\n    if self.remove_overlapping_locs:\n        minor_locs = [loc for loc, tr_loc in zip(minor_locs, tr_minor_locs) if ~np.isclose(tr_loc, tr_major_locs, atol=tol, rtol=0).any()]\n    return minor_locs",
                            "def get_ticklocs(self, minor=False):\n    \"\"\"Get the array of tick locations in data coordinates.\"\"\"\n    return self.get_minorticklocs() if minor else self.get_majorticklocs()",
                            "def get_ticks_direction(self, minor=False):\n    \"\"\"\n    Get the tick directions as a numpy array\n\n    Parameters\n    ----------\n    minor : bool, default: False\n        True to return the minor tick directions,\n        False to return the major tick directions.\n\n    Returns\n    -------\n    numpy array of tick directions\n    \"\"\"\n    if minor:\n        return np.array([tick._tickdir for tick in self.get_minor_ticks()])\n    else:\n        return np.array([tick._tickdir for tick in self.get_major_ticks()])",
                            "def _get_tick(self, major):\n    \"\"\"Return the default tick instance.\"\"\"\n    raise NotImplementedError('derived must override')",
                            "def _copy_tick_props(self, src, dest):\n    \"\"\"Copy the properties from *src* tick to *dest* tick.\"\"\"\n    if src is None or dest is None:\n        return\n    dest.label1.update_from(src.label1)\n    dest.label2.update_from(src.label2)\n    dest.tick1line.update_from(src.tick1line)\n    dest.tick2line.update_from(src.tick2line)\n    dest.gridline.update_from(src.gridline)",
                            "def get_label_text(self):\n    \"\"\"Get the text of the label.\"\"\"\n    return self.label.get_text()",
                            "def get_major_locator(self):\n    \"\"\"Get the locator of the major ticker.\"\"\"\n    return self.major.locator",
                            "def get_minor_locator(self):\n    \"\"\"Get the locator of the minor ticker.\"\"\"\n    return self.minor.locator",
                            "def get_major_formatter(self):\n    \"\"\"Get the formatter of the major ticker.\"\"\"\n    return self.major.formatter",
                            "def get_minor_formatter(self):\n    \"\"\"Get the formatter of the minor ticker.\"\"\"\n    return self.minor.formatter",
                            "def get_major_ticks(self, numticks=None):\n    \"\"\"Get the tick instances; grow as necessary.\"\"\"\n    if numticks is None:\n        numticks = len(self.get_majorticklocs())\n    while len(self.majorTicks) < numticks:\n        tick = self._get_tick(major=True)\n        self.majorTicks.append(tick)\n        tick.gridline.set_visible(self._gridOnMajor)\n        self._copy_tick_props(self.majorTicks[0], tick)\n    return self.majorTicks[:numticks]",
                            "def get_minor_ticks(self, numticks=None):\n    \"\"\"Get the minor tick instances; grow as necessary.\"\"\"\n    if numticks is None:\n        numticks = len(self.get_minorticklocs())\n    while len(self.minorTicks) < numticks:\n        tick = self._get_tick(major=False)\n        self.minorTicks.append(tick)\n        tick.gridline.set_visible(self._gridOnMinor)\n        self._copy_tick_props(self.minorTicks[0], tick)\n    return self.minorTicks[:numticks]",
                            "def grid(self, b=None, which='major', **kwargs):\n    \"\"\"\n    Configure the grid lines.\n\n    Parameters\n    ----------\n    b : bool or None\n        Whether to show the grid lines. If any *kwargs* are supplied,\n        it is assumed you want the grid on and *b* will be set to True.\n\n        If *b* is *None* and there are no *kwargs*, this toggles the\n        visibility of the lines.\n\n    which : {'major', 'minor', 'both'}\n        The grid lines to apply the changes on.\n\n    **kwargs : `.Line2D` properties\n        Define the line properties of the grid, e.g.::\n\n            grid(color='r', linestyle='-', linewidth=2)\n\n    \"\"\"\n    if len(kwargs):\n        if not b and b is not None:\n            cbook._warn_external('First parameter to grid() is false, but line properties are supplied. The grid will be enabled.')\n        b = True\n    which = which.lower()\n    cbook._check_in_list(['major', 'minor', 'both'], which=which)\n    gridkw = {'grid_' + item[0]: item[1] for item in kwargs.items()}\n    if which in ['minor', 'both']:\n        if b is None:\n            self._gridOnMinor = not self._gridOnMinor\n        else:\n            self._gridOnMinor = b\n        self.set_tick_params(which='minor', gridOn=self._gridOnMinor, **gridkw)\n    if which in ['major', 'both']:\n        if b is None:\n            self._gridOnMajor = not self._gridOnMajor\n        else:\n            self._gridOnMajor = b\n        self.set_tick_params(which='major', gridOn=self._gridOnMajor, **gridkw)\n    self.stale = True",
                            "def update_units(self, data):\n    \"\"\"\n    Introspect *data* for units converter and update the\n    axis.converter instance if necessary. Return *True*\n    if *data* is registered for unit conversion.\n    \"\"\"\n    converter = munits.registry.get_converter(data)\n    if converter is None:\n        return False\n    neednew = self.converter != converter\n    self.converter = converter\n    default = self.converter.default_units(data, self)\n    if default is not None and self.units is None:\n        self.set_units(default)\n    if neednew:\n        self._update_axisinfo()\n    self.stale = True\n    return True",
                            "def _update_axisinfo(self):\n    \"\"\"\n    Check the axis converter for the stored units to see if the\n    axis info needs to be updated.\n    \"\"\"\n    if self.converter is None:\n        return\n    info = self.converter.axisinfo(self.units, self)\n    if info is None:\n        return\n    if info.majloc is not None and self.major.locator != info.majloc and self.isDefault_majloc:\n        self.set_major_locator(info.majloc)\n        self.isDefault_majloc = True\n    if info.minloc is not None and self.minor.locator != info.minloc and self.isDefault_minloc:\n        self.set_minor_locator(info.minloc)\n        self.isDefault_minloc = True\n    if info.majfmt is not None and self.major.formatter != info.majfmt and self.isDefault_majfmt:\n        self.set_major_formatter(info.majfmt)\n        self.isDefault_majfmt = True\n    if info.minfmt is not None and self.minor.formatter != info.minfmt and self.isDefault_minfmt:\n        self.set_minor_formatter(info.minfmt)\n        self.isDefault_minfmt = True\n    if info.label is not None and self.isDefault_label:\n        self.set_label_text(info.label)\n        self.isDefault_label = True\n    self.set_default_intervals()",
                            "def have_units(self):\n    return self.converter is not None or self.units is not None",
                            "def convert_units(self, x):\n    if munits._is_natively_supported(x):\n        return x\n    if self.converter is None:\n        self.converter = munits.registry.get_converter(x)\n    if self.converter is None:\n        return x\n    try:\n        ret = self.converter.convert(x, self.units, self)\n    except Exception as e:\n        raise munits.ConversionError(f'Failed to convert value(s) to axis units: {x!r}') from e\n    return ret",
                            "def set_units(self, u):\n    \"\"\"\n    Set the units for axis.\n\n    Parameters\n    ----------\n    u : units tag\n    \"\"\"\n    if u == self.units:\n        return\n    self.units = u\n    self._update_axisinfo()\n    self.callbacks.process('units')\n    self.callbacks.process('units finalize')\n    self.stale = True",
                            "def get_units(self):\n    \"\"\"Return the units for axis.\"\"\"\n    return self.units",
                            "def set_label_text(self, label, fontdict=None, **kwargs):\n    \"\"\"\n    Set the text value of the axis label.\n\n    Parameters\n    ----------\n    label : str\n        Text string.\n    fontdict : dict\n        Text properties.\n    **kwargs\n        Merged into fontdict.\n    \"\"\"\n    self.isDefault_label = False\n    self.label.set_text(label)\n    if fontdict is not None:\n        self.label.update(fontdict)\n    self.label.update(kwargs)\n    self.stale = True\n    return self.label",
                            "def set_major_formatter(self, formatter):\n    \"\"\"\n    Set the formatter of the major ticker.\n\n    Parameters\n    ----------\n    formatter : `~matplotlib.ticker.Formatter`\n    \"\"\"\n    cbook._check_isinstance(mticker.Formatter, formatter=formatter)\n    if isinstance(formatter, mticker.FixedFormatter) and len(formatter.seq) > 0 and (not isinstance(self.major.locator, mticker.FixedLocator)):\n        cbook._warn_external('FixedFormatter should only be used together with FixedLocator')\n    self.isDefault_majfmt = False\n    self.major.formatter = formatter\n    formatter.set_axis(self)\n    self.stale = True",
                            "def set_minor_formatter(self, formatter):\n    \"\"\"\n    Set the formatter of the minor ticker.\n\n    Parameters\n    ----------\n    formatter : `~matplotlib.ticker.Formatter`\n    \"\"\"\n    cbook._check_isinstance(mticker.Formatter, formatter=formatter)\n    if isinstance(formatter, mticker.FixedFormatter) and len(formatter.seq) > 0 and (not isinstance(self.minor.locator, mticker.FixedLocator)):\n        cbook._warn_external('FixedFormatter should only be used together with FixedLocator')\n    self.isDefault_minfmt = False\n    self.minor.formatter = formatter\n    formatter.set_axis(self)\n    self.stale = True",
                            "def set_major_locator(self, locator):\n    \"\"\"\n    Set the locator of the major ticker.\n\n    Parameters\n    ----------\n    locator : `~matplotlib.ticker.Locator`\n    \"\"\"\n    cbook._check_isinstance(mticker.Locator, locator=locator)\n    self.isDefault_majloc = False\n    self.major.locator = locator\n    if self.major.formatter:\n        self.major.formatter._set_locator(locator)\n    locator.set_axis(self)\n    self.stale = True",
                            "def set_minor_locator(self, locator):\n    \"\"\"\n    Set the locator of the minor ticker.\n\n    Parameters\n    ----------\n    locator : `~matplotlib.ticker.Locator`\n    \"\"\"\n    cbook._check_isinstance(mticker.Locator, locator=locator)\n    self.isDefault_minloc = False\n    self.minor.locator = locator\n    if self.minor.formatter:\n        self.minor.formatter._set_locator(locator)\n    locator.set_axis(self)\n    self.stale = True",
                            "def set_pickradius(self, pickradius):\n    \"\"\"\n    Set the depth of the axis used by the picker.\n\n    Parameters\n    ----------\n    pickradius :  float\n    \"\"\"\n    self.pickradius = pickradius",
                            "def set_ticklabels(self, ticklabels, *, minor=False, **kwargs):\n    \"\"\"\n    Set the text values of the tick labels.\n\n    .. warning::\n        This method should only be used after fixing the tick positions\n        using `.Axis.set_ticks`. Otherwise, the labels may end up in\n        unexpected positions.\n\n    Parameters\n    ----------\n    ticklabels : sequence of str or of `.Text`\\\\s\n        List of texts for tick labels; must include values for non-visible\n        labels.\n    minor : bool\n        If True, set minor ticks instead of major ticks.\n    **kwargs\n        Text properties.\n\n    Returns\n    -------\n    list of `.Text`\\\\s\n        For each tick, includes ``tick.label1`` if it is visible, then\n        ``tick.label2`` if it is visible, in that order.\n    \"\"\"\n    ticklabels = [t.get_text() if hasattr(t, 'get_text') else t for t in ticklabels]\n    if minor:\n        self.set_minor_formatter(mticker.FixedFormatter(ticklabels))\n        ticks = self.get_minor_ticks()\n    else:\n        self.set_major_formatter(mticker.FixedFormatter(ticklabels))\n        ticks = self.get_major_ticks()\n    ret = []\n    for tick_label, tick in zip(ticklabels, ticks):\n        tick.label1.set_text(tick_label)\n        tick.label1.update(kwargs)\n        tick.label2.set_text(tick_label)\n        tick.label2.update(kwargs)\n        if tick.label1.get_visible():\n            ret.append(tick.label1)\n        if tick.label2.get_visible():\n            ret.append(tick.label2)\n    self.stale = True\n    return ret",
                            "@cbook._make_keyword_only('3.2', 'minor')\ndef set_ticks(self, ticks, minor=False):\n    \"\"\"\n    Set the locations of the tick marks from sequence ticks\n\n    Parameters\n    ----------\n    ticks : sequence of floats\n    minor : bool\n    \"\"\"\n    ticks = self.convert_units(ticks)\n    if len(ticks) > 1:\n        xleft, xright = self.get_view_interval()\n        if xright > xleft:\n            self.set_view_interval(min(ticks), max(ticks))\n        else:\n            self.set_view_interval(max(ticks), min(ticks))\n    if minor:\n        self.set_minor_locator(mticker.FixedLocator(ticks))\n        return self.get_minor_ticks(len(ticks))\n    else:\n        self.set_major_locator(mticker.FixedLocator(ticks))\n        return self.get_major_ticks(len(ticks))",
                            "def _get_tick_boxes_siblings(self, xdir, renderer):\n    \"\"\"\n    Get the bounding boxes for this `.axis` and its siblings\n    as set by `.Figure.align_xlabels` or  `.Figure.align_ylablels`.\n\n    By default it just gets bboxes for self.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                            "def _update_label_position(self, renderer):\n    \"\"\"\n    Update the label position based on the bounding box enclosing\n    all the ticklabels and axis spine.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                            "def _update_offset_text_position(self, bboxes, bboxes2):\n    \"\"\"\n    Update the offset text position based on the sequence of bounding\n    boxes of all the ticklabels.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                            "@cbook.deprecated('3.3')\ndef pan(self, numsteps):\n    \"\"\"Pan by *numsteps* (can be positive or negative).\"\"\"\n    self.major.locator.pan(numsteps)",
                            "@cbook.deprecated('3.3')\ndef zoom(self, direction):\n    \"\"\"Zoom in/out on axis; if *direction* is >0 zoom in, else zoom out.\"\"\"\n    self.major.locator.zoom(direction)",
                            "def axis_date(self, tz=None):\n    \"\"\"\n    Sets up axis ticks and labels treating data along this axis as dates.\n\n    Parameters\n    ----------\n    tz : tzinfo or str or None\n        The timezone used to create date labels.\n    \"\"\"\n    if isinstance(tz, str):\n        import dateutil.tz\n        tz = dateutil.tz.gettz(tz)\n    self.update_units(datetime.datetime(2009, 1, 1, 0, 0, 0, 0, tz))",
                            "def get_tick_space(self):\n    \"\"\"Return the estimated number of ticks that can fit on the axis.\"\"\"\n    raise NotImplementedError()",
                            "def _get_ticks_position(self):\n    \"\"\"\n    Helper for `XAxis.get_ticks_position` and `YAxis.get_ticks_position`.\n\n    Check the visibility of tick1line, label1, tick2line, and label2 on\n    the first major and the first minor ticks, and return\n\n    - 1 if only tick1line and label1 are visible (which corresponds to\n      \"bottom\" for the x-axis and \"left\" for the y-axis);\n    - 2 if only tick2line and label2 are visible (which corresponds to\n      \"top\" for the x-axis and \"right\" for the y-axis);\n    - \"default\" if only tick1line, tick2line and label1 are visible;\n    - \"unknown\" otherwise.\n    \"\"\"\n    major = self.majorTicks[0]\n    minor = self.minorTicks[0]\n    if all((tick.tick1line.get_visible() and (not tick.tick2line.get_visible()) and tick.label1.get_visible() and (not tick.label2.get_visible()) for tick in [major, minor])):\n        return 1\n    elif all((tick.tick2line.get_visible() and (not tick.tick1line.get_visible()) and tick.label2.get_visible() and (not tick.label1.get_visible()) for tick in [major, minor])):\n        return 2\n    elif all((tick.tick1line.get_visible() and tick.tick2line.get_visible() and tick.label1.get_visible() and (not tick.label2.get_visible()) for tick in [major, minor])):\n        return 'default'\n    else:\n        return 'unknown'",
                            "def get_label_position(self):\n    \"\"\"\n    Return the label position (top or bottom)\n    \"\"\"\n    return self.label_position",
                            "def set_label_position(self, position):\n    \"\"\"\n    Set the label position (top or bottom)\n\n    Parameters\n    ----------\n    position : {'top', 'bottom'}\n    \"\"\"\n    raise NotImplementedError()",
                            "def get_minpos(self):\n    raise NotImplementedError()"
                        ],
                        "constructor_variables": [
                            "pickradius",
                            "_major_tick_kw",
                            "minor",
                            "offsetText",
                            "label",
                            "_minor_tick_kw",
                            "_remove_overlapping_locs",
                            "labelpad",
                            "axes",
                            "_smart_bounds",
                            "_autolabelpos",
                            "major",
                            "callbacks",
                            "isDefault_label"
                        ],
                        "class_level_variables": [
                            "OFFSETTEXTPAD",
                            "majorTicks",
                            "minorTicks",
                            "remove_overlapping_locs"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "__str__(self)",
                            "__init__(self, axes, pickradius=15)",
                            "get_remove_overlapping_locs(self)",
                            "set_remove_overlapping_locs(self, val)",
                            "set_label_coords(self, x, y, transform=None)",
                            "get_transform(self)",
                            "get_scale(self)",
                            "_set_scale(self, value, **kwargs)",
                            "limit_range_for_scale(self, vmin, vmax)",
                            "get_children(self)",
                            "cla(self)",
                            "reset_ticks(self)",
                            "set_tick_params(self, which='major', reset=False, **kw)",
                            "_translate_tick_kw(kw)",
                            "set_clip_path(self, clippath, transform=None)",
                            "get_view_interval(self)",
                            "set_view_interval(self, vmin, vmax, ignore=False)",
                            "get_data_interval(self)",
                            "set_data_interval(self, vmin, vmax, ignore=False)",
                            "get_inverted(self)",
                            "set_inverted(self, inverted)",
                            "set_default_intervals(self)",
                            "_set_artist_props(self, a)",
                            "get_ticklabel_extents(self, renderer)",
                            "set_smart_bounds(self, value)",
                            "get_smart_bounds(self)",
                            "_update_ticks(self)",
                            "_get_tick_bboxes(self, ticks, renderer)",
                            "get_tightbbox(self, renderer)",
                            "get_tick_padding(self)",
                            "draw(self, renderer, *args, **kwargs)",
                            "get_gridlines(self)",
                            "get_label(self)",
                            "get_offset_text(self)",
                            "get_pickradius(self)",
                            "get_majorticklabels(self)",
                            "get_minorticklabels(self)",
                            "get_ticklabels(self, minor=False, which=None)",
                            "get_majorticklines(self)",
                            "get_minorticklines(self)",
                            "get_ticklines(self, minor=False)",
                            "get_majorticklocs(self)",
                            "get_minorticklocs(self)",
                            "get_ticklocs(self, minor=False)",
                            "get_ticks_direction(self, minor=False)",
                            "_get_tick(self, major)",
                            "_copy_tick_props(self, src, dest)",
                            "get_label_text(self)",
                            "get_major_locator(self)",
                            "get_minor_locator(self)",
                            "get_major_formatter(self)",
                            "get_minor_formatter(self)",
                            "get_major_ticks(self, numticks=None)",
                            "get_minor_ticks(self, numticks=None)",
                            "grid(self, b=None, which='major', **kwargs)",
                            "update_units(self, data)",
                            "_update_axisinfo(self)",
                            "have_units(self)",
                            "convert_units(self, x)",
                            "set_units(self, u)",
                            "get_units(self)",
                            "set_label_text(self, label, fontdict=None, **kwargs)",
                            "set_major_formatter(self, formatter)",
                            "set_minor_formatter(self, formatter)",
                            "set_major_locator(self, locator)",
                            "set_minor_locator(self, locator)",
                            "set_pickradius(self, pickradius)",
                            "set_ticklabels(self, ticklabels, **kwargs)",
                            "set_ticks(self, ticks, minor=False)",
                            "_get_tick_boxes_siblings(self, xdir, renderer)",
                            "_update_label_position(self, renderer)",
                            "_update_offset_text_position(self, bboxes, bboxes2)",
                            "pan(self, numsteps)",
                            "zoom(self, direction)",
                            "axis_date(self, tz=None)",
                            "get_tick_space(self)",
                            "_get_ticks_position(self)",
                            "get_label_position(self)",
                            "set_label_position(self, position)",
                            "get_minpos(self)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11db731f0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11db731f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbac700>, <matplotlib.axis.XTick object at 0x11dbac340>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbacb20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11db731f0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11db731f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.XTick object at 0x11dbac340>",
                                    "variable_type": "XTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbac700>, <matplotlib.axis.XTick object at 0x11dbac340>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.XTick object at 0x11dbac340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbacb20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11dbbe430>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11dbbe430>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11db731f0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11db731f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbac700>, <matplotlib.axis.XTick object at 0x11dbac340>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbacb20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11db731f0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11db731f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.XTick object at 0x11dbac340>",
                                    "variable_type": "XTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbac700>, <matplotlib.axis.XTick object at 0x11dbac340>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.XTick object at 0x11dbac340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbacb20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11dbbe430>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11dbbe430>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'minor'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11db731f0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'top': True, 'bottom': True, 'labeltop': False, 'labelbottom': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11db731f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbac700>, <matplotlib.axis.XTick object at 0x11dbac340>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbacb20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'minor'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11db731f0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11db731f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.XTick object at 0x11dbacb20>",
                                    "variable_type": "XTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbac700>, <matplotlib.axis.XTick object at 0x11dbac340>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.XTick object at 0x11dbacb20>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbacb20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'minor'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'left': True, 'right': True, 'labelleft': True, 'labelright': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'minor'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11dbc6040>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11dbc6040>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11db731f0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'top': True, 'bottom': True, 'labeltop': False, 'labelbottom': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11db731f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbac700>, <matplotlib.axis.XTick object at 0x11dbac340>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbacb20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11db731f0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11db731f0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.XTick object at 0x11dbac340>",
                                    "variable_type": "XTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbac700>, <matplotlib.axis.XTick object at 0x11dbac340>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.XTick object at 0x11dbac340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11dbacb20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'left': True, 'right': True, 'labelleft': True, 'labelright': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11dbbe430>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11dbbe430>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11dbbe430>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11dbbe430>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x11dafd430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11db73e50>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': False, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11db73e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11dbbe430>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbbebe0>, <matplotlib.axis.YTick object at 0x11dbbe430>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11dbbe430>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11dbc6040>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11a2da190>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11a2da190>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a592490>, <matplotlib.axis.XTick object at 0x11a5920d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a5928b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11a2da190>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11a2da190>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.XTick object at 0x11a5920d0>",
                                    "variable_type": "XTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a592490>, <matplotlib.axis.XTick object at 0x11a5920d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.XTick object at 0x11a5920d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a5928b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11a59f1c0>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11a59f1c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11a2da190>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11a2da190>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a592490>, <matplotlib.axis.XTick object at 0x11a5920d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a5928b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11a2da190>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11a2da190>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.XTick object at 0x11a5920d0>",
                                    "variable_type": "XTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a592490>, <matplotlib.axis.XTick object at 0x11a5920d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.XTick object at 0x11a5920d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a5928b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11a59f1c0>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11a59f1c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'minor'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11a2da190>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'top': True, 'bottom': True, 'labeltop': False, 'labelbottom': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11a2da190>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a592490>, <matplotlib.axis.XTick object at 0x11a5920d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a5928b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'minor'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11a2da190>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11a2da190>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.XTick object at 0x11a5928b0>",
                                    "variable_type": "XTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a592490>, <matplotlib.axis.XTick object at 0x11a5920d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.XTick object at 0x11a5928b0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a5928b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'minor'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'left': True, 'right': True, 'labelleft': True, 'labelright': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'minor'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11a59fd90>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11a59fd90>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11a2da190>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'top': True, 'bottom': True, 'labeltop': False, 'labelbottom': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11a2da190>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a592490>, <matplotlib.axis.XTick object at 0x11a5920d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a5928b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x11a2da190>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.XAxis object at 0x11a2da190>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.XTick object at 0x11a5920d0>",
                                    "variable_type": "XTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a592490>, <matplotlib.axis.XTick object at 0x11a5920d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.XTick object at 0x11a5920d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.XTick object at 0x11a5928b0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(1, 0, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'left': True, 'right': True, 'labelleft': True, 'labelright': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11a59f1c0>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11a59f1c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11a59f1c0>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11a59f1c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': False, 'label2On': True}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cbook._check_in_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "which": {
                                    "variable_value": "'major'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "kwtrans": {
                                    "variable_value": "{'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "self._translate_tick_kw": {
                                    "variable_value": "<function Axis._translate_tick_kw at 0x119e5d430>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axis.YAxis object at 0x11a2dac10>",
                                    "variable_type": "YAxis",
                                    "variable_shape": null
                                },
                                "kw": {
                                    "variable_value": "{'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "1"
                                },
                                "reset": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw": {
                                    "variable_value": "{'gridOn': False, 'tick1On': True, 'tick2On': True, 'label1On': False, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self._major_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw.clear": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self._minor_tick_kw": {
                                    "variable_value": "{'tick1On': True, 'tick2On': True, 'label1On': True, 'label2On': False}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self._minor_tick_kw.update": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.reset_ticks": {
                                    "variable_value": "<bound method Axis.reset_ticks of <matplotlib.axis.YAxis object at 0x11a2dac10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "tick": {
                                    "variable_value": "<matplotlib.axis.YTick object at 0x11a59f1c0>",
                                    "variable_type": "YTick",
                                    "variable_shape": null
                                },
                                "self.majorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59f970>, <matplotlib.axis.YTick object at 0x11a59f1c0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "tick._apply_params": {
                                    "variable_value": "<bound method Tick._apply_params of <matplotlib.axis.YTick object at 0x11a59f1c0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.minorTicks": {
                                    "variable_value": "[<matplotlib.axis.YTick object at 0x11a59fd90>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.offsetText.set_visible": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText": {
                                    "variable_value": "Text(0, 0.5, '')",
                                    "variable_type": "Text",
                                    "variable_shape": null
                                },
                                "self._major_tick_kw.get": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.offsetText.set_color": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.stale": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _make_getset_interval(method_name, lim_name, attr_name):\n    \"\"\"\n    Helper to generate ``get_{data,view}_interval`` and\n    ``set_{data,view}_interval`` implementations.\n    \"\"\"\n\n    def getter(self):\n        # docstring inherited.\n        return getattr(getattr(self.axes, lim_name), attr_name)\n\n    def setter(self, vmin, vmax, ignore=False):\n        # docstring inherited.\n        if ignore:\n            setattr(getattr(self.axes, lim_name), attr_name, (vmin, vmax))\n        else:\n            oldmin, oldmax = getter(self)\n            if oldmin < oldmax:\n                setter(self, min(vmin, vmax, oldmin), max(vmin, vmax, oldmax),\n                       ignore=True)\n            else:\n                setter(self, max(vmin, vmax, oldmin), min(vmin, vmax, oldmax),\n                       ignore=True)\n        self.stale = True\n\n    getter.__name__ = f\"get_{method_name}_interval\"\n    setter.__name__ = f\"set_{method_name}_interval\"\n\n    return getter, setter",
                "@cbook._delete_parameter(\"3.3\", \"label\")\ndef __init__(self, axes, loc, label=None,\n             size=None,  # points\n             width=None,\n             color=None,\n             tickdir=None,\n             pad=None,\n             labelsize=None,\n             labelcolor=None,\n             zorder=None,\n             gridOn=None,  # defaults to axes.grid depending on\n                           # axes.grid.which\n             tick1On=True,\n             tick2On=True,\n             label1On=True,\n             label2On=False,\n             major=True,\n             labelrotation=0,\n             grid_color=None,\n             grid_linestyle=None,\n             grid_linewidth=None,\n             grid_alpha=None,\n             **kw  # Other Line2D kwargs applied to gridlines.\n             ):\n    \"\"\"\n    bbox is the Bound2D bounding box in display coords of the Axes\n    loc is the tick location in data coords\n    size is the tick size in points\n    \"\"\"\n    martist.Artist.__init__(self)\n\n    if gridOn is None:\n        if major and (mpl.rcParams['axes.grid.which']\n                      in ('both', 'major')):\n            gridOn = mpl.rcParams['axes.grid']\n        elif (not major) and (mpl.rcParams['axes.grid.which']\n                              in ('both', 'minor')):\n            gridOn = mpl.rcParams['axes.grid']\n        else:\n            gridOn = False\n\n    self.set_figure(axes.figure)\n    self.axes = axes\n\n    name = self.__name__.lower()\n\n    self._loc = loc\n    self._major = major\n\n    major_minor = \"major\" if major else \"minor\"\n\n    if size is None:\n        size = mpl.rcParams[f\"{name}.{major_minor}.size\"]\n    self._size = size\n\n    if width is None:\n        width = mpl.rcParams[f\"{name}.{major_minor}.width\"]\n    self._width = width\n\n    if color is None:\n        color = mpl.rcParams[f\"{name}.color\"]\n\n    if pad is None:\n        pad = mpl.rcParams[f\"{name}.{major_minor}.pad\"]\n    self._base_pad = pad\n\n    if labelcolor is None:\n        labelcolor = mpl.rcParams[f\"{name}.color\"]\n\n    if labelsize is None:\n        labelsize = mpl.rcParams[f\"{name}.labelsize\"]\n\n    self._set_labelrotation(labelrotation)\n\n    if zorder is None:\n        if major:\n            zorder = mlines.Line2D.zorder + 0.01\n        else:\n            zorder = mlines.Line2D.zorder\n    self._zorder = zorder\n\n    if grid_color is None:\n        grid_color = mpl.rcParams[\"grid.color\"]\n    if grid_linestyle is None:\n        grid_linestyle = mpl.rcParams[\"grid.linestyle\"]\n    if grid_linewidth is None:\n        grid_linewidth = mpl.rcParams[\"grid.linewidth\"]\n    if grid_alpha is None:\n        grid_alpha = mpl.rcParams[\"grid.alpha\"]\n    grid_kw = {k[5:]: v for k, v in kw.items()}\n\n    self.apply_tickdir(tickdir)\n\n    self.tick1line = mlines.Line2D(\n        [], [],\n        color=color, linestyle=\"none\", zorder=zorder, visible=tick1On,\n        markersize=size, markeredgewidth=width,\n    )\n    self.tick2line = mlines.Line2D(\n        [], [],\n        color=color, linestyle=\"none\", zorder=zorder, visible=tick2On,\n        markersize=size, markeredgewidth=width,\n    )\n    self.gridline = mlines.Line2D(\n        [], [],\n        color=grid_color, alpha=grid_alpha, visible=gridOn,\n        linestyle=grid_linestyle, linewidth=grid_linewidth, marker=\"\",\n        **grid_kw,\n    )\n    self.gridline.get_path()._interpolation_steps = \\\n        GRIDLINE_INTERPOLATION_STEPS\n    self.label1 = mtext.Text(\n        np.nan, np.nan,\n        fontsize=labelsize, color=labelcolor, visible=label1On)\n    self.label2 = mtext.Text(\n        np.nan, np.nan,\n        fontsize=labelsize, color=labelcolor, visible=label2On)\n    for meth, attr in [(\"_get_tick1line\", \"tick1line\"),\n                       (\"_get_tick2line\", \"tick2line\"),\n                       (\"_get_gridline\", \"gridline\"),\n                       (\"_get_text1\", \"label1\"),\n                       (\"_get_text2\", \"label2\")]:\n        if getattr(self, meth) != getattr(Tick, meth).__get__(self):\n            cbook.warn_deprecated(\n                \"3.3\", message=f\"Relying on {meth} to initialize \"\n                f\"Tick.{attr} is deprecated since %(since)s and will not \"\n                f\"work %(removal)s; please directly set the attribute in \"\n                \"the subclass' __init__ instead.\")\n            setattr(self, attr, getattr(self, meth)())\n    for artist in [self.tick1line, self.tick2line, self.gridline,\n                   self.label1, self.label2]:\n        self._set_artist_props(artist)\n\n    self.update_position(loc)",
                "@property\n@cbook.deprecated(\"3.1\", alternative=\"Tick.label1\", pending=True)\ndef label(self):\n    return self.label1",
                "def _set_labelrotation(self, labelrotation):\n    if isinstance(labelrotation, str):\n        mode = labelrotation\n        angle = 0\n    elif isinstance(labelrotation, (tuple, list)):\n        mode, angle = labelrotation\n    else:\n        mode = 'default'\n        angle = labelrotation\n    cbook._check_in_list(['auto', 'default'], labelrotation=mode)\n    self._labelrotation = (mode, angle)",
                "def apply_tickdir(self, tickdir):\n    \"\"\"Calculate ``self._pad`` and ``self._tickmarkers``.\"\"\"",
                "def get_tickdir(self):\n    return self._tickdir",
                "def get_tick_padding(self):\n    \"\"\"Get the length of the tick outside of the axes.\"\"\"\n    padding = {\n        'in': 0.0,\n        'inout': 0.5,\n        'out': 1.0\n    }\n    return self._size * padding[self._tickdir]",
                "def get_children(self):\n    children = [self.tick1line, self.tick2line,\n                self.gridline, self.label1, self.label2]\n    return children",
                "def set_clip_path(self, clippath, transform=None):\n    # docstring inherited\n    martist.Artist.set_clip_path(self, clippath, transform)\n    self.gridline.set_clip_path(clippath, transform)\n    self.stale = True",
                "def get_pad_pixels(self):\n    return self.figure.dpi * self._base_pad / 72",
                "def contains(self, mouseevent):\n    \"\"\"\n    Test whether the mouse event occurred in the Tick marks.\n\n    This function always returns false.  It is more useful to test if the\n    axis as a whole contains the mouse rather than the set of tick marks.\n    \"\"\"\n    inside, info = self._default_contains(mouseevent)\n    if inside is not None:\n        return inside, info\n    return False, {}",
                "def set_pad(self, val):\n    \"\"\"\n    Set the tick label pad in points\n\n    Parameters\n    ----------\n    val : float\n    \"\"\"\n    self._apply_params(pad=val)\n    self.stale = True",
                "def get_pad(self):\n    \"\"\"Get the value of the tick label pad in points.\"\"\"\n    return self._base_pad",
                "def _get_text1(self):\n    \"\"\"Get the default Text 1 instance.\"\"\"",
                "def _get_text2(self):\n    \"\"\"Get the default Text 2 instance.\"\"\"",
                "def _get_tick1line(self):\n    \"\"\"Get the default line2D instance for tick1.\"\"\"",
                "def _get_tick2line(self):\n    \"\"\"Get the default line2D instance for tick2.\"\"\"",
                "def _get_gridline(self):\n    \"\"\"Get the default grid Line2d instance for this tick.\"\"\"",
                "def get_loc(self):\n    \"\"\"Return the tick location (data coords) as a scalar.\"\"\"\n    return self._loc",
                "@martist.allow_rasterization\ndef draw(self, renderer):\n    if not self.get_visible():\n        self.stale = False\n        return\n    renderer.open_group(self.__name__, gid=self.get_gid())\n    for artist in [self.gridline, self.tick1line, self.tick2line,\n                   self.label1, self.label2]:\n        artist.draw(renderer)\n    renderer.close_group(self.__name__)\n    self.stale = False",
                "def set_label1(self, s):\n    \"\"\"\n    Set the label1 text.\n\n    Parameters\n    ----------\n    s : str\n    \"\"\"\n    self.label1.set_text(s)\n    self.stale = True",
                "def set_label2(self, s):\n    \"\"\"\n    Set the label2 text.\n\n    Parameters\n    ----------\n    s : str\n    \"\"\"\n    self.label2.set_text(s)\n    self.stale = True",
                "def _set_artist_props(self, a):\n    a.set_figure(self.figure)",
                "def get_view_interval(self):\n    \"\"\"\n    Return the view limits ``(min, max)`` of the axis the tick belongs to.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                "def _apply_params(self, **kw):\n    for name, target in [(\"gridOn\", self.gridline),\n                         (\"tick1On\", self.tick1line),\n                         (\"tick2On\", self.tick2line),\n                         (\"label1On\", self.label1),\n                         (\"label2On\", self.label2)]:\n        if name in kw:\n            target.set_visible(kw.pop(name))\n    if any(k in kw for k in ['size', 'width', 'pad', 'tickdir']):\n        self._size = kw.pop('size', self._size)\n        # Width could be handled outside this block, but it is\n        # convenient to leave it here.\n        self._width = kw.pop('width', self._width)\n        self._base_pad = kw.pop('pad', self._base_pad)\n        # apply_tickdir uses _size and _base_pad to make _pad,\n        # and also makes _tickmarkers.\n        self.apply_tickdir(kw.pop('tickdir', self._tickdir))\n        self.tick1line.set_marker(self._tickmarkers[0])\n        self.tick2line.set_marker(self._tickmarkers[1])\n        for line in (self.tick1line, self.tick2line):\n            line.set_markersize(self._size)\n            line.set_markeredgewidth(self._width)\n        # _get_text1_transform uses _pad from apply_tickdir.\n        trans = self._get_text1_transform()[0]\n        self.label1.set_transform(trans)\n        trans = self._get_text2_transform()[0]\n        self.label2.set_transform(trans)\n    tick_kw = {k: v for k, v in kw.items() if k in ['color', 'zorder']}\n    self.tick1line.set(**tick_kw)\n    self.tick2line.set(**tick_kw)\n    for k, v in tick_kw.items():\n        setattr(self, '_' + k, v)\n\n    if 'labelrotation' in kw:\n        self._set_labelrotation(kw.pop('labelrotation'))\n        self.label1.set(rotation=self._labelrotation[1])\n        self.label2.set(rotation=self._labelrotation[1])\n\n    label_kw = {k[5:]: v for k, v in kw.items()\n                if k in ['labelsize', 'labelcolor']}\n    self.label1.set(**label_kw)\n    self.label2.set(**label_kw)\n    for k, v in label_kw.items():\n        # for labelsize the text objects covert str ('small')\n        # -> points. grab the integer from the `Text` object\n        # instead of saving the string representation\n        v = getattr(self.label1, 'get_' + k)()\n        setattr(self, '_label' + k, v)\n\n    grid_kw = {k[5:]: v for k, v in kw.items()\n               if k in _gridline_param_names}\n    self.gridline.set(**grid_kw)\n    for k, v in grid_kw.items():\n        setattr(self, '_grid_' + k, v)",
                "def update_position(self, loc):\n    \"\"\"Set the location of tick in data coords with scalar *loc*.\"\"\"\n    raise NotImplementedError('Derived must override')",
                "def _get_text1_transform(self):\n    raise NotImplementedError('Derived must override')",
                "def _get_text2_transform(self):\n    raise NotImplementedError('Derived must override')",
                "def __init__(self, *args, **kwargs):\n    super().__init__(*args, **kwargs)\n    # x in data coords, y in axes coords\n    self.tick1line.set(\n        xdata=[0], ydata=[0],\n        transform=self.axes.get_xaxis_transform(which=\"tick1\"),\n        marker=self._tickmarkers[0],\n    )\n    self.tick2line.set(\n        xdata=[0], ydata=[1],\n        transform=self.axes.get_xaxis_transform(which=\"tick2\"),\n        marker=self._tickmarkers[1],\n    )\n    self.gridline.set(\n        xdata=[0, 0], ydata=[0, 1],\n        transform=self.axes.get_xaxis_transform(which=\"grid\"),\n    )\n    # the y loc is 3 points below the min of y axis\n    trans, va, ha = self._get_text1_transform()\n    self.label1.set(\n        x=0, y=0,\n        verticalalignment=va, horizontalalignment=ha, transform=trans,\n    )\n    trans, va, ha = self._get_text2_transform()\n    self.label2.set(\n        x=0, y=1,\n        verticalalignment=va, horizontalalignment=ha, transform=trans,\n    )",
                "def _get_text1_transform(self):\n    return self.axes.get_xaxis_text1_transform(self._pad)",
                "def _get_text2_transform(self):\n    return self.axes.get_xaxis_text2_transform(self._pad)",
                "def apply_tickdir(self, tickdir):\n    \"\"\"Set tick direction. Valid values are 'in', 'out', 'inout'.\"\"\"\n    if tickdir is None:\n        tickdir = mpl.rcParams['%s.direction' % self.__name__.lower()]\n    cbook._check_in_list(['in', 'out', 'inout'], tickdir=tickdir)\n    self._tickdir = tickdir\n\n    if self._tickdir == 'in':\n        self._tickmarkers = (mlines.TICKUP, mlines.TICKDOWN)\n    elif self._tickdir == 'inout':\n        self._tickmarkers = ('|', '|')\n    else:\n        self._tickmarkers = (mlines.TICKDOWN, mlines.TICKUP)\n    self._pad = self._base_pad + self.get_tick_padding()\n    self.stale = True",
                "def update_position(self, loc):\n    \"\"\"Set the location of tick in data coords with scalar *loc*.\"\"\"\n    self.tick1line.set_xdata((loc,))\n    self.tick2line.set_xdata((loc,))\n    self.gridline.set_xdata((loc,))\n    self.label1.set_x(loc)\n    self.label2.set_x(loc)\n    self._loc = loc\n    self.stale = True",
                "def get_view_interval(self):\n    # docstring inherited\n    return self.axes.viewLim.intervalx",
                "def __init__(self, *args, **kwargs):\n    super().__init__(*args, **kwargs)\n    # x in axes coords, y in data coords\n    self.tick1line.set(\n        xdata=[0], ydata=[0],\n        transform=self.axes.get_yaxis_transform(which=\"tick1\"),\n        marker=self._tickmarkers[0],\n    )\n    self.tick2line.set(\n        xdata=[1], ydata=[0],\n        transform=self.axes.get_yaxis_transform(which=\"tick2\"),\n        marker=self._tickmarkers[1],\n    )\n    self.gridline.set(\n        xdata=[0, 1], ydata=[0, 0],\n        transform=self.axes.get_yaxis_transform(which=\"grid\"),\n    )\n    # the y loc is 3 points below the min of y axis\n    trans, va, ha = self._get_text1_transform()\n    self.label1.set(\n        x=0, y=0,\n        verticalalignment=va, horizontalalignment=ha, transform=trans,\n    )\n    trans, va, ha = self._get_text2_transform()\n    self.label2.set(\n        x=1, y=0,\n        verticalalignment=va, horizontalalignment=ha, transform=trans,\n    )",
                "def _get_text1_transform(self):\n    return self.axes.get_yaxis_text1_transform(self._pad)",
                "def _get_text2_transform(self):\n    return self.axes.get_yaxis_text2_transform(self._pad)",
                "def apply_tickdir(self, tickdir):\n    if tickdir is None:\n        tickdir = mpl.rcParams['%s.direction' % self.__name__.lower()]\n    self._tickdir = tickdir\n\n    if self._tickdir == 'in':\n        self._tickmarkers = (mlines.TICKRIGHT, mlines.TICKLEFT)\n    elif self._tickdir == 'inout':\n        self._tickmarkers = ('_', '_')\n    else:\n        self._tickmarkers = (mlines.TICKLEFT, mlines.TICKRIGHT)\n    self._pad = self._base_pad + self.get_tick_padding()\n    self.stale = True",
                "def update_position(self, loc):\n    \"\"\"Set the location of tick in data coords with scalar *loc*.\"\"\"\n    self.tick1line.set_ydata((loc,))\n    self.tick2line.set_ydata((loc,))\n    self.gridline.set_ydata((loc,))\n    self.label1.set_y(loc)\n    self.label2.set_y(loc)\n    self._loc = loc\n    self.stale = True",
                "def get_view_interval(self):\n    # docstring inherited\n    return self.axes.viewLim.intervaly",
                "def __init__(self):\n    self._locator = None\n    self._formatter = None",
                "@property\ndef locator(self):\n    return self._locator",
                "@locator.setter\ndef locator(self, locator):\n    if not isinstance(locator, mticker.Locator):\n        cbook.warn_deprecated(\n            \"3.2\", message=\"Support for locators that do not subclass \"\n            \"matplotlib.ticker.Locator is deprecated since %(since)s and \"\n            \"support for them will be removed %(removal)s.\")\n    self._locator = locator",
                "@property\ndef formatter(self):\n    return self._formatter",
                "@formatter.setter\ndef formatter(self, formatter):\n    if not isinstance(formatter, mticker.Formatter):\n        cbook.warn_deprecated(\n            \"3.2\", message=\"Support for formatters that do not subclass \"\n            \"matplotlib.ticker.Formatter is deprecated since %(since)s \"\n            \"and support for them will be removed %(removal)s.\")\n    self._formatter = formatter",
                "def __init__(self, major):\n    self._major = major",
                "def __get__(self, instance, cls):\n    if instance is None:\n        return self\n    else:\n        # instance._get_tick() can itself try to access the majorTicks\n        # attribute (e.g. in certain projection classes which override\n        # e.g. get_xaxis_text1_transform).  In order to avoid infinite\n        # recursion, first set the majorTicks on the instance to an empty\n        # list, then create the tick and append it.\n        if self._major:\n            instance.majorTicks = []\n            tick = instance._get_tick(major=True)\n            instance.majorTicks.append(tick)\n            return instance.majorTicks\n        else:\n            instance.minorTicks = []\n            tick = instance._get_tick(major=False)\n            instance.minorTicks.append(tick)\n            return instance.minorTicks",
                "def __str__(self):\n    return \"{}({},{})\".format(\n        type(self).__name__, *self.axes.transAxes.transform((0, 0)))",
                "def __init__(self, axes, pickradius=15):\n    \"\"\"\n    Parameters\n    ----------\n    axes : `matplotlib.axes.Axes`\n        The `~.axes.Axes` to which the created Axis belongs.\n    pickradius : float\n        The acceptance radius for containment tests. See also\n        `.Axis.contains`.\n    \"\"\"\n    martist.Artist.__init__(self)\n    self._remove_overlapping_locs = True\n\n    self.set_figure(axes.figure)\n\n    self.isDefault_label = True\n\n    self.axes = axes\n    self.major = Ticker()\n    self.minor = Ticker()\n    self.callbacks = cbook.CallbackRegistry()\n\n    self._autolabelpos = True\n    self._smart_bounds = False  # Deprecated in 3.2\n\n    self.label = mtext.Text(\n        np.nan, np.nan,\n        fontsize=mpl.rcParams['axes.labelsize'],\n        fontweight=mpl.rcParams['axes.labelweight'],\n        color=mpl.rcParams['axes.labelcolor'],\n    )\n    self._set_artist_props(self.label)\n    self.offsetText = mtext.Text(np.nan, np.nan)\n    self._set_artist_props(self.offsetText)\n\n    self.labelpad = mpl.rcParams['axes.labelpad']\n\n    self.pickradius = pickradius\n\n    # Initialize here for testing; later add API\n    self._major_tick_kw = dict()\n    self._minor_tick_kw = dict()\n\n    self.cla()\n    self._set_scale('linear')",
                "def get_remove_overlapping_locs(self):\n    return self._remove_overlapping_locs",
                "def set_remove_overlapping_locs(self, val):\n    self._remove_overlapping_locs = bool(val)",
                "def set_label_coords(self, x, y, transform=None):\n    \"\"\"\n    Set the coordinates of the label.\n\n    By default, the x coordinate of the y label and the y coordinate of the\n    x label are determined by the tick label bounding boxes, but this can\n    lead to poor alignment of multiple labels if there are multiple axes.\n\n    You can also specify the coordinate system of the label with the\n    transform.  If None, the default coordinate system will be the axes\n    coordinate system: (0, 0) is bottom left, (0.5, 0.5) is center, etc.\n    \"\"\"\n    self._autolabelpos = False\n    if transform is None:\n        transform = self.axes.transAxes\n\n    self.label.set_transform(transform)\n    self.label.set_position((x, y))\n    self.stale = True",
                "def get_transform(self):\n    return self._scale.get_transform()",
                "def get_scale(self):\n    return self._scale.name",
                "def _set_scale(self, value, **kwargs):\n    self._scale = mscale.scale_factory(value, self, **kwargs)\n    self._scale.set_default_locators_and_formatters(self)\n\n    self.isDefault_majloc = True\n    self.isDefault_minloc = True\n    self.isDefault_majfmt = True\n    self.isDefault_minfmt = True",
                "def limit_range_for_scale(self, vmin, vmax):\n    return self._scale.limit_range_for_scale(vmin, vmax, self.get_minpos())",
                "def get_children(self):\n    return [self.label, self.offsetText,\n            *self.get_major_ticks(), *self.get_minor_ticks()]",
                "def cla(self):\n    \"\"\"Clear this axis.\"\"\"\n\n    self.label.set_text('')  # self.set_label_text would change isDefault_\n\n    self._set_scale('linear')\n\n    # Clear the callback registry for this axis, or it may \"leak\"\n    self.callbacks = cbook.CallbackRegistry()\n\n    # whether the grids are on\n    self._gridOnMajor = (\n            mpl.rcParams['axes.grid'] and\n            mpl.rcParams['axes.grid.which'] in ('both', 'major'))\n    self._gridOnMinor = (\n            mpl.rcParams['axes.grid'] and\n            mpl.rcParams['axes.grid.which'] in ('both', 'minor'))\n\n    self.reset_ticks()\n\n    self.converter = None\n    self.units = None\n    self.set_units(None)\n    self.stale = True",
                "def reset_ticks(self):\n    \"\"\"\n    Re-initialize the major and minor Tick lists.\n\n    Each list starts with a single fresh Tick.\n    \"\"\"\n    # Restore the lazy tick lists.\n    try:\n        del self.majorTicks\n    except AttributeError:\n        pass\n    try:\n        del self.minorTicks\n    except AttributeError:\n        pass\n    try:\n        self.set_clip_path(self.axes.patch)\n    except AttributeError:\n        pass",
                "def set_tick_params(self, which='major', reset=False, **kw):\n    \"\"\"\n    Set appearance parameters for ticks, ticklabels, and gridlines.\n\n    For documentation of keyword arguments, see\n    :meth:`matplotlib.axes.Axes.tick_params`.\n    \"\"\"\n    cbook._check_in_list(['major', 'minor', 'both'], which=which)\n    kwtrans = self._translate_tick_kw(kw)\n\n    # the kwargs are stored in self._major/minor_tick_kw so that any\n    # future new ticks will automatically get them\n    if reset:\n        if which in ['major', 'both']:\n            self._major_tick_kw.clear()\n            self._major_tick_kw.update(kwtrans)\n        if which in ['minor', 'both']:\n            self._minor_tick_kw.clear()\n            self._minor_tick_kw.update(kwtrans)\n        self.reset_ticks()\n    else:\n        if which in ['major', 'both']:\n            self._major_tick_kw.update(kwtrans)\n            for tick in self.majorTicks:\n                tick._apply_params(**kwtrans)\n        if which in ['minor', 'both']:\n            self._minor_tick_kw.update(kwtrans)\n            for tick in self.minorTicks:\n                tick._apply_params(**kwtrans)\n        # special-case label color to also apply to the offset text\n        if 'labelcolor' in kwtrans:\n            self.offsetText.set_color(kwtrans['labelcolor'])\n\n    self.stale = True",
                "@staticmethod\ndef _translate_tick_kw(kw):\n    # The following lists may be moved to a more accessible location.\n    kwkeys = ['size', 'width', 'color', 'tickdir', 'pad',\n              'labelsize', 'labelcolor', 'zorder', 'gridOn',\n              'tick1On', 'tick2On', 'label1On', 'label2On',\n              'length', 'direction', 'left', 'bottom', 'right', 'top',\n              'labelleft', 'labelbottom', 'labelright', 'labeltop',\n              'labelrotation'] + _gridline_param_names\n    kwtrans = {}\n    if 'length' in kw:\n        kwtrans['size'] = kw.pop('length')\n    if 'direction' in kw:\n        kwtrans['tickdir'] = kw.pop('direction')\n    if 'rotation' in kw:\n        kwtrans['labelrotation'] = kw.pop('rotation')\n    if 'left' in kw:\n        kwtrans['tick1On'] = kw.pop('left')\n    if 'bottom' in kw:\n        kwtrans['tick1On'] = kw.pop('bottom')\n    if 'right' in kw:\n        kwtrans['tick2On'] = kw.pop('right')\n    if 'top' in kw:\n        kwtrans['tick2On'] = kw.pop('top')\n    if 'labelleft' in kw:\n        kwtrans['label1On'] = kw.pop('labelleft')\n    if 'labelbottom' in kw:\n        kwtrans['label1On'] = kw.pop('labelbottom')\n    if 'labelright' in kw:\n        kwtrans['label2On'] = kw.pop('labelright')\n    if 'labeltop' in kw:\n        kwtrans['label2On'] = kw.pop('labeltop')\n    if 'colors' in kw:\n        c = kw.pop('colors')\n        kwtrans['color'] = c\n        kwtrans['labelcolor'] = c\n    # Maybe move the checking up to the caller of this method.\n    for key in kw:\n        if key not in kwkeys:\n            raise ValueError(\n                \"keyword %s is not recognized; valid keywords are %s\"\n                % (key, kwkeys))\n        kwtrans.update(kw)\n    return kwtrans",
                "def set_clip_path(self, clippath, transform=None):\n    martist.Artist.set_clip_path(self, clippath, transform)\n    for child in self.majorTicks + self.minorTicks:\n        child.set_clip_path(clippath, transform)\n    self.stale = True",
                "def get_view_interval(self):\n    \"\"\"Return the view limits ``(min, max)`` of this axis.\"\"\"\n    raise NotImplementedError('Derived must override')",
                "def set_view_interval(self, vmin, vmax, ignore=False):\n    \"\"\"\n    Set the axis view limits.  This method is for internal use; Matplotlib\n    users should typically use e.g. `~.Axes.set_xlim` or `~.Axes.set_ylim`.\n\n    If *ignore* is False (the default), this method will never reduce the\n    preexisting view limits, only expand them if *vmin* or *vmax* are not\n    within them.  Moreover, the order of *vmin* and *vmax* does not matter;\n    the orientation of the axis will not change.\n\n    If *ignore* is True, the view limits will be set exactly to ``(vmin,\n    vmax)`` in that order.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                "def get_data_interval(self):\n    \"\"\"Return the Interval instance for this axis data limits.\"\"\"\n    raise NotImplementedError('Derived must override')",
                "def set_data_interval(self, vmin, vmax, ignore=False):\n    \"\"\"\n    Set the axis data limits.  This method is for internal use.\n\n    If *ignore* is False (the default), this method will never reduce the\n    preexisting data limits, only expand them if *vmin* or *vmax* are not\n    within them.  Moreover, the order of *vmin* and *vmax* does not matter;\n    the orientation of the axis will not change.\n\n    If *ignore* is True, the data limits will be set exactly to ``(vmin,\n    vmax)`` in that order.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                "def get_inverted(self):\n    \"\"\"\n    Return whether the axis is oriented in the \"inverse\" direction.\n\n    The \"normal\" direction is increasing to the right for the x-axis and to\n    the top for the y-axis; the \"inverse\" direction is increasing to the\n    left for the x-axis and to the bottom for the y-axis.\n    \"\"\"\n    low, high = self.get_view_interval()\n    return high < low",
                "def set_inverted(self, inverted):\n    \"\"\"\n    Set whether the axis is oriented in the \"inverse\" direction.\n\n    The \"normal\" direction is increasing to the right for the x-axis and to\n    the top for the y-axis; the \"inverse\" direction is increasing to the\n    left for the x-axis and to the bottom for the y-axis.\n    \"\"\"\n    # Currently, must be implemented in subclasses using set_xlim/set_ylim\n    # rather than generically using set_view_interval, so that shared\n    # axes get updated as well.\n    raise NotImplementedError('Derived must override')",
                "def set_default_intervals(self):\n    \"\"\"\n    Set the default limits for the axis data and view interval if they\n    have not been not mutated yet.\n    \"\"\"",
                "def _set_artist_props(self, a):\n    if a is None:\n        return\n    a.set_figure(self.figure)",
                "def get_ticklabel_extents(self, renderer):\n    \"\"\"\n    Get the extents of the tick labels on either side\n    of the axes.\n    \"\"\"\n\n    ticks_to_draw = self._update_ticks()\n    ticklabelBoxes, ticklabelBoxes2 = self._get_tick_bboxes(ticks_to_draw,\n                                                            renderer)\n\n    if len(ticklabelBoxes):\n        bbox = mtransforms.Bbox.union(ticklabelBoxes)\n    else:\n        bbox = mtransforms.Bbox.from_extents(0, 0, 0, 0)\n    if len(ticklabelBoxes2):\n        bbox2 = mtransforms.Bbox.union(ticklabelBoxes2)\n    else:\n        bbox2 = mtransforms.Bbox.from_extents(0, 0, 0, 0)\n    return bbox, bbox2",
                "@cbook.deprecated(\"3.2\")\ndef set_smart_bounds(self, value):\n    \"\"\"Set the axis to have smart bounds.\"\"\"\n    self._smart_bounds = value\n    self.stale = True",
                "@cbook.deprecated(\"3.2\")\ndef get_smart_bounds(self):\n    \"\"\"Return whether the axis has smart bounds.\"\"\"\n    return self._smart_bounds",
                "def _update_ticks(self):\n    \"\"\"\n    Update ticks (position and labels) using the current data interval of\n    the axes.  Return the list of ticks that will be drawn.\n    \"\"\"\n    major_locs = self.get_majorticklocs()\n    major_labels = self.major.formatter.format_ticks(major_locs)\n    major_ticks = self.get_major_ticks(len(major_locs))\n    self.major.formatter.set_locs(major_locs)\n    for tick, loc, label in zip(major_ticks, major_locs, major_labels):\n        tick.update_position(loc)\n        tick.set_label1(label)\n        tick.set_label2(label)\n    minor_locs = self.get_minorticklocs()\n    minor_labels = self.minor.formatter.format_ticks(minor_locs)\n    minor_ticks = self.get_minor_ticks(len(minor_locs))\n    self.minor.formatter.set_locs(minor_locs)\n    for tick, loc, label in zip(minor_ticks, minor_locs, minor_labels):\n        tick.update_position(loc)\n        tick.set_label1(label)\n        tick.set_label2(label)\n    ticks = [*major_ticks, *minor_ticks]\n\n    view_low, view_high = self.get_view_interval()\n    if view_low > view_high:\n        view_low, view_high = view_high, view_low\n\n    if self._smart_bounds and ticks:  # _smart_bounds is deprecated in 3.2\n        # handle inverted limits\n        data_low, data_high = sorted(self.get_data_interval())\n        locs = np.sort([tick.get_loc() for tick in ticks])\n        if data_low <= view_low:\n            # data extends beyond view, take view as limit\n            ilow = view_low\n        else:\n            # data stops within view, take best tick\n            good_locs = locs[locs <= data_low]\n            if len(good_locs):\n                # last tick prior or equal to first data point\n                ilow = good_locs[-1]\n            else:\n                # No ticks (why not?), take first tick\n                ilow = locs[0]\n        if data_high >= view_high:\n            # data extends beyond view, take view as limit\n            ihigh = view_high\n        else:\n            # data stops within view, take best tick\n            good_locs = locs[locs >= data_high]\n            if len(good_locs):\n                # first tick after or equal to last data point\n                ihigh = good_locs[0]\n            else:\n                # No ticks (why not?), take last tick\n                ihigh = locs[-1]\n        ticks = [tick for tick in ticks if ilow <= tick.get_loc() <= ihigh]\n\n    interval_t = self.get_transform().transform([view_low, view_high])\n\n    ticks_to_draw = []\n    for tick in ticks:\n        try:\n            loc_t = self.get_transform().transform(tick.get_loc())\n        except AssertionError:\n            # transforms.transform doesn't allow masked values but\n            # some scales might make them, so we need this try/except.\n            pass\n        else:\n            if mtransforms._interval_contains_close(interval_t, loc_t):\n                ticks_to_draw.append(tick)\n\n    return ticks_to_draw",
                "def _get_tick_bboxes(self, ticks, renderer):\n    \"\"\"Return lists of bboxes for ticks' label1's and label2's.\"\"\"\n    return ([tick.label1.get_window_extent(renderer)\n             for tick in ticks if tick.label1.get_visible()],\n            [tick.label2.get_window_extent(renderer)\n             for tick in ticks if tick.label2.get_visible()])",
                "def get_tightbbox(self, renderer):\n    \"\"\"\n    Return a bounding box that encloses the axis. It only accounts\n    tick labels, axis label, and offsetText.\n    \"\"\"\n    if not self.get_visible():\n        return\n\n    ticks_to_draw = self._update_ticks()\n\n    self._update_label_position(renderer)\n\n    # go back to just this axis's tick labels\n    ticklabelBoxes, ticklabelBoxes2 = self._get_tick_bboxes(\n                ticks_to_draw, renderer)\n\n    self._update_offset_text_position(ticklabelBoxes, ticklabelBoxes2)\n    self.offsetText.set_text(self.major.formatter.get_offset())\n\n    bboxes = [\n        *(a.get_window_extent(renderer)\n          for a in [self.label, self.offsetText]\n          if a.get_visible()),\n        *ticklabelBoxes,\n        *ticklabelBoxes2,\n    ]\n    bboxes = [b for b in bboxes\n              if 0 < b.width < np.inf and 0 < b.height < np.inf]\n    if bboxes:\n        return mtransforms.Bbox.union(bboxes)\n    else:\n        return None",
                "def get_tick_padding(self):\n    values = []\n    if len(self.majorTicks):\n        values.append(self.majorTicks[0].get_tick_padding())\n    if len(self.minorTicks):\n        values.append(self.minorTicks[0].get_tick_padding())\n    return max(values, default=0)",
                "@martist.allow_rasterization\ndef draw(self, renderer, *args, **kwargs):\n    # docstring inherited\n\n    if not self.get_visible():\n        return\n    renderer.open_group(__name__, gid=self.get_gid())\n\n    ticks_to_draw = self._update_ticks()\n    ticklabelBoxes, ticklabelBoxes2 = self._get_tick_bboxes(ticks_to_draw,\n                                                            renderer)\n\n    for tick in ticks_to_draw:\n        tick.draw(renderer)\n\n    # scale up the axis label box to also find the neighbors, not\n    # just the tick labels that actually overlap note we need a\n    # *copy* of the axis label box because we don't wan't to scale\n    # the actual bbox\n\n    self._update_label_position(renderer)\n\n    self.label.draw(renderer)\n\n    self._update_offset_text_position(ticklabelBoxes, ticklabelBoxes2)\n    self.offsetText.set_text(self.major.formatter.get_offset())\n    self.offsetText.draw(renderer)\n\n    renderer.close_group(__name__)\n    self.stale = False",
                "def get_gridlines(self):\n    \"\"\"Return the grid lines as a list of Line2D instance.\"\"\"\n    ticks = self.get_major_ticks()\n    return cbook.silent_list('Line2D gridline',\n                             [tick.gridline for tick in ticks])",
                "def get_label(self):\n    \"\"\"Return the axis label as a Text instance.\"\"\"\n    return self.label",
                "def get_offset_text(self):\n    \"\"\"Return the axis offsetText as a Text instance.\"\"\"\n    return self.offsetText",
                "def get_pickradius(self):\n    \"\"\"Return the depth of the axis used by the picker.\"\"\"\n    return self.pickradius",
                "def get_majorticklabels(self):\n    \"\"\"Return a list of Text instances for the major ticklabels.\"\"\"\n    ticks = self.get_major_ticks()\n    labels1 = [tick.label1 for tick in ticks if tick.label1.get_visible()]\n    labels2 = [tick.label2 for tick in ticks if tick.label2.get_visible()]\n    return cbook.silent_list('Text major ticklabel', labels1 + labels2)",
                "def get_minorticklabels(self):\n    \"\"\"Return a list of Text instances for the minor ticklabels.\"\"\"\n    ticks = self.get_minor_ticks()\n    labels1 = [tick.label1 for tick in ticks if tick.label1.get_visible()]\n    labels2 = [tick.label2 for tick in ticks if tick.label2.get_visible()]\n    return cbook.silent_list('Text minor ticklabel', labels1 + labels2)",
                "def get_ticklabels(self, minor=False, which=None):\n    \"\"\"\n    Get the tick labels as a list of `~matplotlib.text.Text` instances.\n\n    Parameters\n    ----------\n    minor : bool\n       If True return the minor ticklabels,\n       else return the major ticklabels\n\n    which : None, ('minor', 'major', 'both')\n       Overrides *minor*.\n\n       Selects which ticklabels to return\n\n    Returns\n    -------\n    list\n       List of `~matplotlib.text.Text` instances.\n    \"\"\"\n\n    if which is not None:\n        if which == 'minor':\n            return self.get_minorticklabels()\n        elif which == 'major':\n            return self.get_majorticklabels()\n        elif which == 'both':\n            return self.get_majorticklabels() + self.get_minorticklabels()\n        else:\n            cbook._check_in_list(['major', 'minor', 'both'], which=which)\n    if minor:\n        return self.get_minorticklabels()\n    return self.get_majorticklabels()",
                "def get_majorticklines(self):\n    \"\"\"Return the major tick lines as a list of Line2D instances.\"\"\"\n    lines = []\n    ticks = self.get_major_ticks()\n    for tick in ticks:\n        lines.append(tick.tick1line)\n        lines.append(tick.tick2line)\n    return cbook.silent_list('Line2D ticklines', lines)",
                "def get_minorticklines(self):\n    \"\"\"Return the minor tick lines as a list of Line2D instances.\"\"\"\n    lines = []\n    ticks = self.get_minor_ticks()\n    for tick in ticks:\n        lines.append(tick.tick1line)\n        lines.append(tick.tick2line)\n    return cbook.silent_list('Line2D ticklines', lines)",
                "def get_ticklines(self, minor=False):\n    \"\"\"Return the tick lines as a list of Line2D instances.\"\"\"\n    if minor:\n        return self.get_minorticklines()\n    return self.get_majorticklines()",
                "def get_majorticklocs(self):\n    \"\"\"Get the array of major tick locations in data coordinates.\"\"\"\n    return self.major.locator()",
                "def get_minorticklocs(self):\n    \"\"\"Get the array of minor tick locations in data coordinates.\"\"\"\n    # Remove minor ticks duplicating major ticks.\n    major_locs = self.major.locator()\n    minor_locs = self.minor.locator()\n    transform = self._scale.get_transform()\n    tr_minor_locs = transform.transform(minor_locs)\n    tr_major_locs = transform.transform(major_locs)\n    lo, hi = sorted(transform.transform(self.get_view_interval()))\n    # Use the transformed view limits as scale.  1e-5 is the default rtol\n    # for np.isclose.\n    tol = (hi - lo) * 1e-5\n    if self.remove_overlapping_locs:\n        minor_locs = [\n            loc for loc, tr_loc in zip(minor_locs, tr_minor_locs)\n            if ~np.isclose(tr_loc, tr_major_locs, atol=tol, rtol=0).any()]\n    return minor_locs",
                "def get_ticklocs(self, minor=False):\n    \"\"\"Get the array of tick locations in data coordinates.\"\"\"\n    return self.get_minorticklocs() if minor else self.get_majorticklocs()",
                "def get_ticks_direction(self, minor=False):\n    \"\"\"\n    Get the tick directions as a numpy array\n\n    Parameters\n    ----------\n    minor : bool, default: False\n        True to return the minor tick directions,\n        False to return the major tick directions.\n\n    Returns\n    -------\n    numpy array of tick directions\n    \"\"\"\n    if minor:\n        return np.array(\n            [tick._tickdir for tick in self.get_minor_ticks()])\n    else:\n        return np.array(\n            [tick._tickdir for tick in self.get_major_ticks()])",
                "def _get_tick(self, major):\n    \"\"\"Return the default tick instance.\"\"\"\n    raise NotImplementedError('derived must override')",
                "def _copy_tick_props(self, src, dest):\n    \"\"\"Copy the properties from *src* tick to *dest* tick.\"\"\"\n    if src is None or dest is None:\n        return\n    dest.label1.update_from(src.label1)\n    dest.label2.update_from(src.label2)\n    dest.tick1line.update_from(src.tick1line)\n    dest.tick2line.update_from(src.tick2line)\n    dest.gridline.update_from(src.gridline)",
                "def get_label_text(self):\n    \"\"\"Get the text of the label.\"\"\"\n    return self.label.get_text()",
                "def get_major_locator(self):\n    \"\"\"Get the locator of the major ticker.\"\"\"\n    return self.major.locator",
                "def get_minor_locator(self):\n    \"\"\"Get the locator of the minor ticker.\"\"\"\n    return self.minor.locator",
                "def get_major_formatter(self):\n    \"\"\"Get the formatter of the major ticker.\"\"\"\n    return self.major.formatter",
                "def get_minor_formatter(self):\n    \"\"\"Get the formatter of the minor ticker.\"\"\"\n    return self.minor.formatter",
                "def get_major_ticks(self, numticks=None):\n    \"\"\"Get the tick instances; grow as necessary.\"\"\"\n    if numticks is None:\n        numticks = len(self.get_majorticklocs())\n\n    while len(self.majorTicks) < numticks:\n        # Update the new tick label properties from the old.\n        tick = self._get_tick(major=True)\n        self.majorTicks.append(tick)\n        tick.gridline.set_visible(self._gridOnMajor)\n        self._copy_tick_props(self.majorTicks[0], tick)\n\n    return self.majorTicks[:numticks]",
                "def get_minor_ticks(self, numticks=None):\n    \"\"\"Get the minor tick instances; grow as necessary.\"\"\"\n    if numticks is None:\n        numticks = len(self.get_minorticklocs())\n\n    while len(self.minorTicks) < numticks:\n        # Update the new tick label properties from the old.\n        tick = self._get_tick(major=False)\n        self.minorTicks.append(tick)\n        tick.gridline.set_visible(self._gridOnMinor)\n        self._copy_tick_props(self.minorTicks[0], tick)\n\n    return self.minorTicks[:numticks]",
                "def grid(self, b=None, which='major', **kwargs):\n    \"\"\"\n    Configure the grid lines.\n\n    Parameters\n    ----------\n    b : bool or None\n        Whether to show the grid lines. If any *kwargs* are supplied,\n        it is assumed you want the grid on and *b* will be set to True.\n\n        If *b* is *None* and there are no *kwargs*, this toggles the\n        visibility of the lines.\n\n    which : {'major', 'minor', 'both'}\n        The grid lines to apply the changes on.\n\n    **kwargs : `.Line2D` properties\n        Define the line properties of the grid, e.g.::\n\n            grid(color='r', linestyle='-', linewidth=2)\n\n    \"\"\"\n    if len(kwargs):\n        if not b and b is not None:  # something false-like but not None\n            cbook._warn_external('First parameter to grid() is false, '\n                                 'but line properties are supplied. The '\n                                 'grid will be enabled.')\n        b = True\n    which = which.lower()\n    cbook._check_in_list(['major', 'minor', 'both'], which=which)\n    gridkw = {'grid_' + item[0]: item[1] for item in kwargs.items()}\n\n    if which in ['minor', 'both']:\n        if b is None:\n            self._gridOnMinor = not self._gridOnMinor\n        else:\n            self._gridOnMinor = b\n        self.set_tick_params(which='minor', gridOn=self._gridOnMinor,\n                             **gridkw)\n    if which in ['major', 'both']:\n        if b is None:\n            self._gridOnMajor = not self._gridOnMajor\n        else:\n            self._gridOnMajor = b\n        self.set_tick_params(which='major', gridOn=self._gridOnMajor,\n                             **gridkw)\n    self.stale = True",
                "def update_units(self, data):\n    \"\"\"\n    Introspect *data* for units converter and update the\n    axis.converter instance if necessary. Return *True*\n    if *data* is registered for unit conversion.\n    \"\"\"\n    converter = munits.registry.get_converter(data)\n    if converter is None:\n        return False\n\n    neednew = self.converter != converter\n    self.converter = converter\n    default = self.converter.default_units(data, self)\n    if default is not None and self.units is None:\n        self.set_units(default)\n\n    if neednew:\n        self._update_axisinfo()\n    self.stale = True\n    return True",
                "def _update_axisinfo(self):\n    \"\"\"\n    Check the axis converter for the stored units to see if the\n    axis info needs to be updated.\n    \"\"\"\n    if self.converter is None:\n        return\n\n    info = self.converter.axisinfo(self.units, self)\n\n    if info is None:\n        return\n    if info.majloc is not None and \\\n       self.major.locator != info.majloc and self.isDefault_majloc:\n        self.set_major_locator(info.majloc)\n        self.isDefault_majloc = True\n    if info.minloc is not None and \\\n       self.minor.locator != info.minloc and self.isDefault_minloc:\n        self.set_minor_locator(info.minloc)\n        self.isDefault_minloc = True\n    if info.majfmt is not None and \\\n       self.major.formatter != info.majfmt and self.isDefault_majfmt:\n        self.set_major_formatter(info.majfmt)\n        self.isDefault_majfmt = True\n    if info.minfmt is not None and \\\n       self.minor.formatter != info.minfmt and self.isDefault_minfmt:\n        self.set_minor_formatter(info.minfmt)\n        self.isDefault_minfmt = True\n    if info.label is not None and self.isDefault_label:\n        self.set_label_text(info.label)\n        self.isDefault_label = True\n\n    self.set_default_intervals()",
                "def have_units(self):\n    return self.converter is not None or self.units is not None",
                "def convert_units(self, x):\n    # If x is natively supported by Matplotlib, doesn't need converting\n    if munits._is_natively_supported(x):\n        return x\n\n    if self.converter is None:\n        self.converter = munits.registry.get_converter(x)\n\n    if self.converter is None:\n        return x\n    try:\n        ret = self.converter.convert(x, self.units, self)\n    except Exception as e:\n        raise munits.ConversionError('Failed to convert value(s) to axis '\n                                     f'units: {x!r}') from e\n    return ret",
                "def set_units(self, u):\n    \"\"\"\n    Set the units for axis.\n\n    Parameters\n    ----------\n    u : units tag\n    \"\"\"\n    if u == self.units:\n        return\n    self.units = u\n    self._update_axisinfo()\n    self.callbacks.process('units')\n    self.callbacks.process('units finalize')\n    self.stale = True",
                "def get_units(self):\n    \"\"\"Return the units for axis.\"\"\"\n    return self.units",
                "def set_label_text(self, label, fontdict=None, **kwargs):\n    \"\"\"\n    Set the text value of the axis label.\n\n    Parameters\n    ----------\n    label : str\n        Text string.\n    fontdict : dict\n        Text properties.\n    **kwargs\n        Merged into fontdict.\n    \"\"\"\n    self.isDefault_label = False\n    self.label.set_text(label)\n    if fontdict is not None:\n        self.label.update(fontdict)\n    self.label.update(kwargs)\n    self.stale = True\n    return self.label",
                "def set_major_formatter(self, formatter):\n    \"\"\"\n    Set the formatter of the major ticker.\n\n    Parameters\n    ----------\n    formatter : `~matplotlib.ticker.Formatter`\n    \"\"\"\n    cbook._check_isinstance(mticker.Formatter, formatter=formatter)\n    if (isinstance(formatter, mticker.FixedFormatter)\n            and len(formatter.seq) > 0\n            and not isinstance(self.major.locator, mticker.FixedLocator)):\n        cbook._warn_external('FixedFormatter should only be used together '\n                             'with FixedLocator')\n    self.isDefault_majfmt = False\n    self.major.formatter = formatter\n    formatter.set_axis(self)\n    self.stale = True",
                "def set_minor_formatter(self, formatter):\n    \"\"\"\n    Set the formatter of the minor ticker.\n\n    Parameters\n    ----------\n    formatter : `~matplotlib.ticker.Formatter`\n    \"\"\"\n    cbook._check_isinstance(mticker.Formatter, formatter=formatter)\n    if (isinstance(formatter, mticker.FixedFormatter)\n            and len(formatter.seq) > 0\n            and not isinstance(self.minor.locator, mticker.FixedLocator)):\n        cbook._warn_external('FixedFormatter should only be used together '\n                             'with FixedLocator')\n    self.isDefault_minfmt = False\n    self.minor.formatter = formatter\n    formatter.set_axis(self)\n    self.stale = True",
                "def set_major_locator(self, locator):\n    \"\"\"\n    Set the locator of the major ticker.\n\n    Parameters\n    ----------\n    locator : `~matplotlib.ticker.Locator`\n    \"\"\"\n    cbook._check_isinstance(mticker.Locator, locator=locator)\n    self.isDefault_majloc = False\n    self.major.locator = locator\n    if self.major.formatter:\n        self.major.formatter._set_locator(locator)\n    locator.set_axis(self)\n    self.stale = True",
                "def set_minor_locator(self, locator):\n    \"\"\"\n    Set the locator of the minor ticker.\n\n    Parameters\n    ----------\n    locator : `~matplotlib.ticker.Locator`\n    \"\"\"\n    cbook._check_isinstance(mticker.Locator, locator=locator)\n    self.isDefault_minloc = False\n    self.minor.locator = locator\n    if self.minor.formatter:\n        self.minor.formatter._set_locator(locator)\n    locator.set_axis(self)\n    self.stale = True",
                "def set_pickradius(self, pickradius):\n    \"\"\"\n    Set the depth of the axis used by the picker.\n\n    Parameters\n    ----------\n    pickradius :  float\n    \"\"\"\n    self.pickradius = pickradius",
                "def set_ticklabels(self, ticklabels, *, minor=False, **kwargs):\n    r\"\"\"\n    Set the text values of the tick labels.\n\n    .. warning::\n        This method should only be used after fixing the tick positions\n        using `.Axis.set_ticks`. Otherwise, the labels may end up in\n        unexpected positions.\n\n    Parameters\n    ----------\n    ticklabels : sequence of str or of `.Text`\\s\n        List of texts for tick labels; must include values for non-visible\n        labels.\n    minor : bool\n        If True, set minor ticks instead of major ticks.\n    **kwargs\n        Text properties.\n\n    Returns\n    -------\n    list of `.Text`\\s\n        For each tick, includes ``tick.label1`` if it is visible, then\n        ``tick.label2`` if it is visible, in that order.\n    \"\"\"\n    ticklabels = [t.get_text() if hasattr(t, 'get_text') else t\n                  for t in ticklabels]\n    if minor:\n        self.set_minor_formatter(mticker.FixedFormatter(ticklabels))\n        ticks = self.get_minor_ticks()\n    else:\n        self.set_major_formatter(mticker.FixedFormatter(ticklabels))\n        ticks = self.get_major_ticks()\n    ret = []\n    for tick_label, tick in zip(ticklabels, ticks):\n        # deal with label1\n        tick.label1.set_text(tick_label)\n        tick.label1.update(kwargs)\n        # deal with label2\n        tick.label2.set_text(tick_label)\n        tick.label2.update(kwargs)\n        # only return visible tick labels\n        if tick.label1.get_visible():\n            ret.append(tick.label1)\n        if tick.label2.get_visible():\n            ret.append(tick.label2)\n\n    self.stale = True\n    return ret",
                "@cbook._make_keyword_only(\"3.2\", \"minor\")\ndef set_ticks(self, ticks, minor=False):\n    \"\"\"\n    Set the locations of the tick marks from sequence ticks\n\n    Parameters\n    ----------\n    ticks : sequence of floats\n    minor : bool\n    \"\"\"\n    # XXX if the user changes units, the information will be lost here\n    ticks = self.convert_units(ticks)\n    if len(ticks) > 1:\n        xleft, xright = self.get_view_interval()\n        if xright > xleft:\n            self.set_view_interval(min(ticks), max(ticks))\n        else:\n            self.set_view_interval(max(ticks), min(ticks))\n    if minor:\n        self.set_minor_locator(mticker.FixedLocator(ticks))\n        return self.get_minor_ticks(len(ticks))\n    else:\n        self.set_major_locator(mticker.FixedLocator(ticks))\n        return self.get_major_ticks(len(ticks))",
                "def _get_tick_boxes_siblings(self, xdir, renderer):\n    \"\"\"\n    Get the bounding boxes for this `.axis` and its siblings\n    as set by `.Figure.align_xlabels` or  `.Figure.align_ylablels`.\n\n    By default it just gets bboxes for self.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                "def _update_label_position(self, renderer):\n    \"\"\"\n    Update the label position based on the bounding box enclosing\n    all the ticklabels and axis spine.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                "def _update_offset_text_position(self, bboxes, bboxes2):\n    \"\"\"\n    Update the offset text position based on the sequence of bounding\n    boxes of all the ticklabels.\n    \"\"\"\n    raise NotImplementedError('Derived must override')",
                "@cbook.deprecated(\"3.3\")\ndef pan(self, numsteps):\n    \"\"\"Pan by *numsteps* (can be positive or negative).\"\"\"\n    self.major.locator.pan(numsteps)",
                "@cbook.deprecated(\"3.3\")\ndef zoom(self, direction):\n    \"\"\"Zoom in/out on axis; if *direction* is >0 zoom in, else zoom out.\"\"\"\n    self.major.locator.zoom(direction)",
                "def axis_date(self, tz=None):\n    \"\"\"\n    Sets up axis ticks and labels treating data along this axis as dates.\n\n    Parameters\n    ----------\n    tz : tzinfo or str or None\n        The timezone used to create date labels.\n    \"\"\"\n    # By providing a sample datetime instance with the desired timezone,\n    # the registered converter can be selected, and the \"units\" attribute,\n    # which is the timezone, can be set.\n    if isinstance(tz, str):\n        import dateutil.tz\n        tz = dateutil.tz.gettz(tz)\n    self.update_units(datetime.datetime(2009, 1, 1, 0, 0, 0, 0, tz))",
                "def get_tick_space(self):\n    \"\"\"Return the estimated number of ticks that can fit on the axis.\"\"\"\n    # Must be overridden in the subclass\n    raise NotImplementedError()",
                "def _get_ticks_position(self):\n    \"\"\"\n    Helper for `XAxis.get_ticks_position` and `YAxis.get_ticks_position`.\n\n    Check the visibility of tick1line, label1, tick2line, and label2 on\n    the first major and the first minor ticks, and return\n\n    - 1 if only tick1line and label1 are visible (which corresponds to\n      \"bottom\" for the x-axis and \"left\" for the y-axis);\n    - 2 if only tick2line and label2 are visible (which corresponds to\n      \"top\" for the x-axis and \"right\" for the y-axis);\n    - \"default\" if only tick1line, tick2line and label1 are visible;\n    - \"unknown\" otherwise.\n    \"\"\"\n    major = self.majorTicks[0]\n    minor = self.minorTicks[0]\n    if all(tick.tick1line.get_visible()\n           and not tick.tick2line.get_visible()\n           and tick.label1.get_visible()\n           and not tick.label2.get_visible()\n           for tick in [major, minor]):\n        return 1\n    elif all(tick.tick2line.get_visible()\n             and not tick.tick1line.get_visible()\n             and tick.label2.get_visible()\n             and not tick.label1.get_visible()\n             for tick in [major, minor]):\n        return 2\n    elif all(tick.tick1line.get_visible()\n             and tick.tick2line.get_visible()\n             and tick.label1.get_visible()\n             and not tick.label2.get_visible()\n             for tick in [major, minor]):\n        return \"default\"\n    else:\n        return \"unknown\"",
                "def get_label_position(self):\n    \"\"\"\n    Return the label position (top or bottom)\n    \"\"\"\n    return self.label_position",
                "def set_label_position(self, position):\n    \"\"\"\n    Set the label position (top or bottom)\n\n    Parameters\n    ----------\n    position : {'top', 'bottom'}\n    \"\"\"\n    raise NotImplementedError()",
                "def get_minpos(self):\n    raise NotImplementedError()",
                "def getter(self):\n    # docstring inherited.\n    return getattr(getattr(self.axes, lim_name), attr_name)",
                "def setter(self, vmin, vmax, ignore=False):\n    # docstring inherited.\n    if ignore:\n        setattr(getattr(self.axes, lim_name), attr_name, (vmin, vmax))\n    else:\n        oldmin, oldmax = getter(self)\n        if oldmin < oldmax:\n            setter(self, min(vmin, vmax, oldmin), max(vmin, vmax, oldmax),\n                   ignore=True)\n        else:\n            setter(self, max(vmin, vmax, oldmin), min(vmin, vmax, oldmax),\n                   ignore=True)\n    self.stale = True",
                "def __init__(self, *args, **kwargs):\n    super().__init__(*args, **kwargs)\n    # x in axes coords, y in display coords (to be updated at draw time by\n    # _update_label_positions and _update_offset_text_position).\n    self.label.set(\n        x=0.5, y=0,\n        verticalalignment='top', horizontalalignment='center',\n        transform=mtransforms.blended_transform_factory(\n            self.axes.transAxes, mtransforms.IdentityTransform()),\n    )\n    self.label_position = 'bottom'\n    self.offsetText.set(\n        x=1, y=0,\n        verticalalignment='top', horizontalalignment='right',\n        transform=mtransforms.blended_transform_factory(\n            self.axes.transAxes, mtransforms.IdentityTransform()),\n        fontsize=mpl.rcParams['xtick.labelsize'],\n        color=mpl.rcParams['xtick.color'],\n    )\n    self.offset_text_position = 'bottom'",
                "def contains(self, mouseevent):\n    \"\"\"Test whether the mouse event occurred in the x axis.\n    \"\"\"\n    inside, info = self._default_contains(mouseevent)\n    if inside is not None:\n        return inside, info\n\n    x, y = mouseevent.x, mouseevent.y\n    try:\n        trans = self.axes.transAxes.inverted()\n        xaxes, yaxes = trans.transform((x, y))\n    except ValueError:\n        return False, {}\n    (l, b), (r, t) = self.axes.transAxes.transform([(0, 0), (1, 1)])\n    inaxis = 0 <= xaxes <= 1 and (\n        b - self.pickradius < y < b or\n        t < y < t + self.pickradius)\n    return inaxis, {}",
                "def _get_tick(self, major):\n    if major:\n        tick_kw = self._major_tick_kw\n    else:\n        tick_kw = self._minor_tick_kw\n    return XTick(self.axes, 0, major=major, **tick_kw)",
                "def set_label_position(self, position):\n    \"\"\"\n    Set the label position (top or bottom)\n\n    Parameters\n    ----------\n    position : {'top', 'bottom'}\n    \"\"\"\n    self.label.set_verticalalignment(cbook._check_getitem({\n        'top': 'baseline', 'bottom': 'top',\n    }, position=position))\n    self.label_position = position\n    self.stale = True",
                "def _get_tick_boxes_siblings(self, renderer):\n    \"\"\"\n    Get the bounding boxes for this `.axis` and its siblings\n    as set by `.Figure.align_xlabels` or  `.Figure.align_ylablels`.\n\n    By default it just gets bboxes for self.\n    \"\"\"\n    bboxes = []\n    bboxes2 = []\n    # get the Grouper that keeps track of x-label groups for this figure\n    grp = self.figure._align_xlabel_grp\n    # if we want to align labels from other axes:\n    for nn, axx in enumerate(grp.get_siblings(self.axes)):\n        ticks_to_draw = axx.xaxis._update_ticks()\n        tlb, tlb2 = axx.xaxis._get_tick_bboxes(ticks_to_draw, renderer)\n        bboxes.extend(tlb)\n        bboxes2.extend(tlb2)\n    return bboxes, bboxes2",
                "def _update_label_position(self, renderer):\n    \"\"\"\n    Update the label position based on the bounding box enclosing\n    all the ticklabels and axis spine\n    \"\"\"\n    if not self._autolabelpos:\n        return\n\n    # get bounding boxes for this axis and any siblings\n    # that have been set by `fig.align_xlabels()`\n    bboxes, bboxes2 = self._get_tick_boxes_siblings(renderer=renderer)\n\n    x, y = self.label.get_position()\n    if self.label_position == 'bottom':\n        try:\n            spine = self.axes.spines['bottom']\n            spinebbox = spine.get_transform().transform_path(\n                spine.get_path()).get_extents()\n        except KeyError:\n            # use axes if spine doesn't exist\n            spinebbox = self.axes.bbox\n        bbox = mtransforms.Bbox.union(bboxes + [spinebbox])\n        bottom = bbox.y0\n\n        self.label.set_position(\n            (x, bottom - self.labelpad * self.figure.dpi / 72)\n        )\n\n    else:\n        try:\n            spine = self.axes.spines['top']\n            spinebbox = spine.get_transform().transform_path(\n                spine.get_path()).get_extents()\n        except KeyError:\n            # use axes if spine doesn't exist\n            spinebbox = self.axes.bbox\n        bbox = mtransforms.Bbox.union(bboxes2 + [spinebbox])\n        top = bbox.y1\n\n        self.label.set_position(\n            (x, top + self.labelpad * self.figure.dpi / 72)\n        )",
                "def _update_offset_text_position(self, bboxes, bboxes2):\n    \"\"\"\n    Update the offset_text position based on the sequence of bounding\n    boxes of all the ticklabels\n    \"\"\"\n    x, y = self.offsetText.get_position()\n    if not hasattr(self, '_tick_position'):\n        self._tick_position = 'bottom'\n    if self._tick_position == 'bottom':\n        if not len(bboxes):\n            bottom = self.axes.bbox.ymin\n        else:\n            bbox = mtransforms.Bbox.union(bboxes)\n            bottom = bbox.y0\n        self.offsetText.set_position(\n            (x, bottom - self.OFFSETTEXTPAD * self.figure.dpi / 72)\n        )\n    else:\n        if not len(bboxes2):\n            top = self.axes.bbox.ymax\n        else:\n            bbox = mtransforms.Bbox.union(bboxes2)\n            top = bbox.y1\n        self.offsetText.set_va('top')\n        self.offsetText.set_position(\n            (x, top + self.OFFSETTEXTPAD * self.figure.dpi / 72)\n        )",
                "def get_text_heights(self, renderer):\n    \"\"\"\n    Return how much space should be reserved for text above and below the\n    axes, as a pair of floats.\n    \"\"\"\n    bbox, bbox2 = self.get_ticklabel_extents(renderer)\n    # MGDTODO: Need a better way to get the pad\n    padPixels = self.majorTicks[0].get_pad_pixels()\n\n    above = 0.0\n    if bbox2.height:\n        above += bbox2.height + padPixels\n    below = 0.0\n    if bbox.height:\n        below += bbox.height + padPixels\n\n    if self.get_label_position() == 'top':\n        above += self.label.get_window_extent(renderer).height + padPixels\n    else:\n        below += self.label.get_window_extent(renderer).height + padPixels\n    return above, below",
                "def set_ticks_position(self, position):\n    \"\"\"\n    Set the ticks position.\n\n    Parameters\n    ----------\n    position : {'top', 'bottom', 'both', 'default', 'none'}\n        'both' sets the ticks to appear on both positions, but does not\n        change the tick labels.  'default' resets the tick positions to\n        the default: ticks on both positions, labels at bottom.  'none'\n        can be used if you don't want any ticks. 'none' and 'both'\n        affect only the ticks, not the labels.\n    \"\"\"\n    cbook._check_in_list(['top', 'bottom', 'both', 'default', 'none'],\n                         position=position)\n    if position == 'top':\n        self.set_tick_params(which='both', top=True, labeltop=True,\n                             bottom=False, labelbottom=False)\n        self._tick_position = 'top'\n    elif position == 'bottom':\n        self.set_tick_params(which='both', top=False, labeltop=False,\n                             bottom=True, labelbottom=True)\n        self._tick_position = 'bottom'\n    elif position == 'both':\n        self.set_tick_params(which='both', top=True,\n                             bottom=True)\n    elif position == 'none':\n        self.set_tick_params(which='both', top=False,\n                             bottom=False)\n    elif position == 'default':\n        self.set_tick_params(which='both', top=True, labeltop=False,\n                             bottom=True, labelbottom=True)\n        self._tick_position = 'bottom'\n    else:\n        assert False, \"unhandled parameter not caught by _check_in_list\"\n    self.stale = True",
                "def tick_top(self):\n    \"\"\"\n    Move ticks and ticklabels (if present) to the top of the axes.\n    \"\"\"\n    label = True\n    if 'label1On' in self._major_tick_kw:\n        label = (self._major_tick_kw['label1On']\n                 or self._major_tick_kw['label2On'])\n    self.set_ticks_position('top')\n    # If labels were turned off before this was called, leave them off.\n    self.set_tick_params(which='both', labeltop=label)",
                "def tick_bottom(self):\n    \"\"\"\n    Move ticks and ticklabels (if present) to the bottom of the axes.\n    \"\"\"\n    label = True\n    if 'label1On' in self._major_tick_kw:\n        label = (self._major_tick_kw['label1On']\n                 or self._major_tick_kw['label2On'])\n    self.set_ticks_position('bottom')\n    # If labels were turned off before this was called, leave them off.\n    self.set_tick_params(which='both', labelbottom=label)",
                "def get_ticks_position(self):\n    \"\"\"\n    Return the ticks position (\"top\", \"bottom\", \"default\", or \"unknown\").\n    \"\"\"\n    return {1: \"bottom\", 2: \"top\",\n            \"default\": \"default\", \"unknown\": \"unknown\"}[\n                self._get_ticks_position()]",
                "def get_minpos(self):\n    return self.axes.dataLim.minposx",
                "def set_inverted(self, inverted):\n    # docstring inherited\n    a, b = self.get_view_interval()\n    # cast to bool to avoid bad interaction between python 3.8 and np.bool_\n    self.axes.set_xlim(sorted((a, b), reverse=bool(inverted)), auto=None)",
                "def set_default_intervals(self):\n    # docstring inherited\n    xmin, xmax = 0., 1.\n    dataMutated = self.axes.dataLim.mutatedx()\n    viewMutated = self.axes.viewLim.mutatedx()\n    if not dataMutated or not viewMutated:\n        if self.converter is not None:\n            info = self.converter.axisinfo(self.units, self)\n            if info.default_limits is not None:\n                valmin, valmax = info.default_limits\n                xmin = self.converter.convert(valmin, self.units, self)\n                xmax = self.converter.convert(valmax, self.units, self)\n        if not dataMutated:\n            self.axes.dataLim.intervalx = xmin, xmax\n        if not viewMutated:\n            self.axes.viewLim.intervalx = xmin, xmax\n    self.stale = True",
                "def get_tick_space(self):\n    ends = self.axes.transAxes.transform([[0, 0], [1, 0]])\n    length = ((ends[1][0] - ends[0][0]) / self.axes.figure.dpi) * 72\n    tick = self._get_tick(True)\n    # There is a heuristic here that the aspect ratio of tick text\n    # is no more than 3:1\n    size = tick.label1.get_size() * 3\n    if size > 0:\n        return int(np.floor(length / size))\n    else:\n        return 2**31 - 1",
                "def __init__(self, *args, **kwargs):\n    super().__init__(*args, **kwargs)\n    # x in display coords, y in axes coords (to be updated at draw time by\n    # _update_label_positions and _update_offset_text_position).\n    self.label.set(\n        x=0, y=0.5,\n        verticalalignment='bottom', horizontalalignment='center',\n        rotation='vertical', rotation_mode='anchor',\n        transform=mtransforms.blended_transform_factory(\n            mtransforms.IdentityTransform(), self.axes.transAxes),\n    )\n    self.label_position = 'left'\n    # x in axes coords, y in display coords(!).\n    self.offsetText.set(\n        x=0, y=0.5,\n        verticalalignment='baseline', horizontalalignment='left',\n        transform=mtransforms.blended_transform_factory(\n            self.axes.transAxes, mtransforms.IdentityTransform()),\n        fontsize=mpl.rcParams['ytick.labelsize'],\n        color=mpl.rcParams['ytick.color'],\n    )\n    self.offset_text_position = 'left'",
                "def contains(self, mouseevent):\n    # docstring inherited\n    inside, info = self._default_contains(mouseevent)\n    if inside is not None:\n        return inside, info\n\n    x, y = mouseevent.x, mouseevent.y\n    try:\n        trans = self.axes.transAxes.inverted()\n        xaxes, yaxes = trans.transform((x, y))\n    except ValueError:\n        return False, {}\n    (l, b), (r, t) = self.axes.transAxes.transform([(0, 0), (1, 1)])\n    inaxis = 0 <= yaxes <= 1 and (\n        l - self.pickradius < x < l or\n        r < x < r + self.pickradius)\n    return inaxis, {}",
                "def _get_tick(self, major):\n    if major:\n        tick_kw = self._major_tick_kw\n    else:\n        tick_kw = self._minor_tick_kw\n    return YTick(self.axes, 0, major=major, **tick_kw)",
                "def set_label_position(self, position):\n    \"\"\"\n    Set the label position (left or right)\n\n    Parameters\n    ----------\n    position : {'left', 'right'}\n    \"\"\"\n    self.label.set_rotation_mode('anchor')\n    self.label.set_horizontalalignment('center')\n    self.label.set_verticalalignment(cbook._check_getitem({\n        'left': 'bottom', 'right': 'top',\n    }, position=position))\n    self.label_position = position\n    self.stale = True",
                "def _get_tick_boxes_siblings(self, renderer):\n    \"\"\"\n    Get the bounding boxes for this `.axis` and its siblings\n    as set by `.Figure.align_xlabels` or  `.Figure.align_ylablels`.\n\n    By default it just gets bboxes for self.\n    \"\"\"\n    bboxes = []\n    bboxes2 = []\n    # get the Grouper that keeps track of y-label groups for this figure\n    grp = self.figure._align_ylabel_grp\n    # if we want to align labels from other axes:\n    for axx in grp.get_siblings(self.axes):\n        ticks_to_draw = axx.yaxis._update_ticks()\n        tlb, tlb2 = axx.yaxis._get_tick_bboxes(ticks_to_draw, renderer)\n        bboxes.extend(tlb)\n        bboxes2.extend(tlb2)\n    return bboxes, bboxes2",
                "def _update_label_position(self, renderer):\n    \"\"\"\n    Update the label position based on the bounding box enclosing\n    all the ticklabels and axis spine\n    \"\"\"\n    if not self._autolabelpos:\n        return\n\n    # get bounding boxes for this axis and any siblings\n    # that have been set by `fig.align_ylabels()`\n    bboxes, bboxes2 = self._get_tick_boxes_siblings(renderer=renderer)\n\n    x, y = self.label.get_position()\n    if self.label_position == 'left':\n        try:\n            spine = self.axes.spines['left']\n            spinebbox = spine.get_transform().transform_path(\n                spine.get_path()).get_extents()\n        except KeyError:\n            # use axes if spine doesn't exist\n            spinebbox = self.axes.bbox\n        bbox = mtransforms.Bbox.union(bboxes + [spinebbox])\n        left = bbox.x0\n        self.label.set_position(\n            (left - self.labelpad * self.figure.dpi / 72, y)\n        )\n\n    else:\n        try:\n            spine = self.axes.spines['right']\n            spinebbox = spine.get_transform().transform_path(\n                spine.get_path()).get_extents()\n        except KeyError:\n            # use axes if spine doesn't exist\n            spinebbox = self.axes.bbox\n        bbox = mtransforms.Bbox.union(bboxes2 + [spinebbox])\n        right = bbox.x1\n\n        self.label.set_position(\n            (right + self.labelpad * self.figure.dpi / 72, y)\n        )",
                "def _update_offset_text_position(self, bboxes, bboxes2):\n    \"\"\"\n    Update the offset_text position based on the sequence of bounding\n    boxes of all the ticklabels\n    \"\"\"\n    x, y = self.offsetText.get_position()\n    top = self.axes.bbox.ymax\n    self.offsetText.set_position(\n        (x, top + self.OFFSETTEXTPAD * self.figure.dpi / 72)\n    )",
                "def set_offset_position(self, position):\n    \"\"\"\n    Parameters\n    ----------\n    position : {'left', 'right'}\n    \"\"\"\n    x, y = self.offsetText.get_position()\n    x = cbook._check_getitem({'left': 0, 'right': 1}, position=position)\n\n    self.offsetText.set_ha(position)\n    self.offsetText.set_position((x, y))\n    self.stale = True",
                "def get_text_widths(self, renderer):\n    bbox, bbox2 = self.get_ticklabel_extents(renderer)\n    # MGDTODO: Need a better way to get the pad\n    padPixels = self.majorTicks[0].get_pad_pixels()\n\n    left = 0.0\n    if bbox.width:\n        left += bbox.width + padPixels\n    right = 0.0\n    if bbox2.width:\n        right += bbox2.width + padPixels\n\n    if self.get_label_position() == 'left':\n        left += self.label.get_window_extent(renderer).width + padPixels\n    else:\n        right += self.label.get_window_extent(renderer).width + padPixels\n    return left, right",
                "def set_ticks_position(self, position):\n    \"\"\"\n    Set the ticks position.\n\n    Parameters\n    ----------\n    position : {'left', 'right', 'both', 'default', 'none'}\n        'both' sets the ticks to appear on both positions, but does not\n        change the tick labels.  'default' resets the tick positions to\n        the default: ticks on both positions, labels at left.  'none'\n        can be used if you don't want any ticks. 'none' and 'both'\n        affect only the ticks, not the labels.\n    \"\"\"\n    cbook._check_in_list(['left', 'right', 'both', 'default', 'none'],\n                         position=position)\n    if position == 'right':\n        self.set_tick_params(which='both', right=True, labelright=True,\n                             left=False, labelleft=False)\n        self.set_offset_position(position)\n    elif position == 'left':\n        self.set_tick_params(which='both', right=False, labelright=False,\n                             left=True, labelleft=True)\n        self.set_offset_position(position)\n    elif position == 'both':\n        self.set_tick_params(which='both', right=True,\n                             left=True)\n    elif position == 'none':\n        self.set_tick_params(which='both', right=False,\n                             left=False)\n    elif position == 'default':\n        self.set_tick_params(which='both', right=True, labelright=False,\n                             left=True, labelleft=True)\n    else:\n        assert False, \"unhandled parameter not caught by _check_in_list\"\n    self.stale = True",
                "def tick_right(self):\n    \"\"\"\n    Move ticks and ticklabels (if present) to the right of the axes.\n    \"\"\"\n    label = True\n    if 'label1On' in self._major_tick_kw:\n        label = (self._major_tick_kw['label1On']\n                 or self._major_tick_kw['label2On'])\n    self.set_ticks_position('right')\n    # if labels were turned off before this was called\n    # leave them off\n    self.set_tick_params(which='both', labelright=label)",
                "def tick_left(self):\n    \"\"\"\n    Move ticks and ticklabels (if present) to the left of the axes.\n    \"\"\"\n    label = True\n    if 'label1On' in self._major_tick_kw:\n        label = (self._major_tick_kw['label1On']\n                 or self._major_tick_kw['label2On'])\n    self.set_ticks_position('left')\n    # if labels were turned off before this was called\n    # leave them off\n    self.set_tick_params(which='both', labelleft=label)",
                "def get_ticks_position(self):\n    \"\"\"\n    Return the ticks position (\"left\", \"right\", \"default\", or \"unknown\").\n    \"\"\"\n    return {1: \"left\", 2: \"right\",\n            \"default\": \"default\", \"unknown\": \"unknown\"}[\n                self._get_ticks_position()]",
                "def get_minpos(self):\n    return self.axes.dataLim.minposy",
                "def set_inverted(self, inverted):\n    # docstring inherited\n    a, b = self.get_view_interval()\n    # cast to bool to avoid bad interaction between python 3.8 and np.bool_\n    self.axes.set_ylim(sorted((a, b), reverse=bool(inverted)), auto=None)",
                "def set_default_intervals(self):\n    # docstring inherited\n    ymin, ymax = 0., 1.\n    dataMutated = self.axes.dataLim.mutatedy()\n    viewMutated = self.axes.viewLim.mutatedy()\n    if not dataMutated or not viewMutated:\n        if self.converter is not None:\n            info = self.converter.axisinfo(self.units, self)\n            if info.default_limits is not None:\n                valmin, valmax = info.default_limits\n                ymin = self.converter.convert(valmin, self.units, self)\n                ymax = self.converter.convert(valmax, self.units, self)\n        if not dataMutated:\n            self.axes.dataLim.intervaly = ymin, ymax\n        if not viewMutated:\n            self.axes.viewLim.intervaly = ymin, ymax\n    self.stale = True",
                "def get_tick_space(self):\n    ends = self.axes.transAxes.transform([[0, 0], [0, 1]])\n    length = ((ends[1][1] - ends[0][1]) / self.axes.figure.dpi) * 72\n    tick = self._get_tick(True)\n    # Having a spacing of at least 2 just looks good.\n    size = tick.label1.get_size() * 2.0\n    if size > 0:\n        return int(np.floor(length / size))\n    else:\n        return 2**31 - 1"
            ],
            "inscope_function_signatures": [
                "_make_getset_interval(method_name, lim_name, attr_name)",
                "__init__(self, axes, loc, label=None, size=None, width=None, color=None, tickdir=None, pad=None, labelsize=None, labelcolor=None, zorder=None, gridOn=None, tick1On=True, tick2On=True, label1On=True, label2On=False, major=True, labelrotation=0, grid_color=None, grid_linestyle=None, grid_linewidth=None, grid_alpha=None, **kw)",
                "label(self)",
                "_set_labelrotation(self, labelrotation)",
                "apply_tickdir(self, tickdir)",
                "get_tickdir(self)",
                "get_tick_padding(self)",
                "get_children(self)",
                "set_clip_path(self, clippath, transform=None)",
                "get_pad_pixels(self)",
                "contains(self, mouseevent)",
                "set_pad(self, val)",
                "get_pad(self)",
                "_get_text1(self)",
                "_get_text2(self)",
                "_get_tick1line(self)",
                "_get_tick2line(self)",
                "_get_gridline(self)",
                "get_loc(self)",
                "draw(self, renderer)",
                "set_label1(self, s)",
                "set_label2(self, s)",
                "_set_artist_props(self, a)",
                "get_view_interval(self)",
                "_apply_params(self, **kw)",
                "update_position(self, loc)",
                "_get_text1_transform(self)",
                "_get_text2_transform(self)",
                "__init__(self, *args, **kwargs)",
                "_get_text1_transform(self)",
                "_get_text2_transform(self)",
                "apply_tickdir(self, tickdir)",
                "update_position(self, loc)",
                "get_view_interval(self)",
                "__init__(self, *args, **kwargs)",
                "_get_text1_transform(self)",
                "_get_text2_transform(self)",
                "apply_tickdir(self, tickdir)",
                "update_position(self, loc)",
                "get_view_interval(self)",
                "__init__(self)",
                "locator(self)",
                "locator(self, locator)",
                "formatter(self)",
                "formatter(self, formatter)",
                "__init__(self, major)",
                "__get__(self, instance, cls)",
                "__str__(self)",
                "__init__(self, axes, pickradius=15)",
                "get_remove_overlapping_locs(self)",
                "set_remove_overlapping_locs(self, val)",
                "set_label_coords(self, x, y, transform=None)",
                "get_transform(self)",
                "get_scale(self)",
                "_set_scale(self, value, **kwargs)",
                "limit_range_for_scale(self, vmin, vmax)",
                "get_children(self)",
                "cla(self)",
                "reset_ticks(self)",
                "set_tick_params(self, which='major', reset=False, **kw)",
                "_translate_tick_kw(kw)",
                "set_clip_path(self, clippath, transform=None)",
                "get_view_interval(self)",
                "set_view_interval(self, vmin, vmax, ignore=False)",
                "get_data_interval(self)",
                "set_data_interval(self, vmin, vmax, ignore=False)",
                "get_inverted(self)",
                "set_inverted(self, inverted)",
                "set_default_intervals(self)",
                "_set_artist_props(self, a)",
                "get_ticklabel_extents(self, renderer)",
                "set_smart_bounds(self, value)",
                "get_smart_bounds(self)",
                "_update_ticks(self)",
                "_get_tick_bboxes(self, ticks, renderer)",
                "get_tightbbox(self, renderer)",
                "get_tick_padding(self)",
                "draw(self, renderer, *args, **kwargs)",
                "get_gridlines(self)",
                "get_label(self)",
                "get_offset_text(self)",
                "get_pickradius(self)",
                "get_majorticklabels(self)",
                "get_minorticklabels(self)",
                "get_ticklabels(self, minor=False, which=None)",
                "get_majorticklines(self)",
                "get_minorticklines(self)",
                "get_ticklines(self, minor=False)",
                "get_majorticklocs(self)",
                "get_minorticklocs(self)",
                "get_ticklocs(self, minor=False)",
                "get_ticks_direction(self, minor=False)",
                "_get_tick(self, major)",
                "_copy_tick_props(self, src, dest)",
                "get_label_text(self)",
                "get_major_locator(self)",
                "get_minor_locator(self)",
                "get_major_formatter(self)",
                "get_minor_formatter(self)",
                "get_major_ticks(self, numticks=None)",
                "get_minor_ticks(self, numticks=None)",
                "grid(self, b=None, which='major', **kwargs)",
                "update_units(self, data)",
                "_update_axisinfo(self)",
                "have_units(self)",
                "convert_units(self, x)",
                "set_units(self, u)",
                "get_units(self)",
                "set_label_text(self, label, fontdict=None, **kwargs)",
                "set_major_formatter(self, formatter)",
                "set_minor_formatter(self, formatter)",
                "set_major_locator(self, locator)",
                "set_minor_locator(self, locator)",
                "set_pickradius(self, pickradius)",
                "set_ticklabels(self, ticklabels, **kwargs)",
                "set_ticks(self, ticks, minor=False)",
                "_get_tick_boxes_siblings(self, xdir, renderer)",
                "_update_label_position(self, renderer)",
                "_update_offset_text_position(self, bboxes, bboxes2)",
                "pan(self, numsteps)",
                "zoom(self, direction)",
                "axis_date(self, tz=None)",
                "get_tick_space(self)",
                "_get_ticks_position(self)",
                "get_label_position(self)",
                "set_label_position(self, position)",
                "get_minpos(self)",
                "getter(self)",
                "setter(self, vmin, vmax, ignore=False)",
                "__init__(self, *args, **kwargs)",
                "contains(self, mouseevent)",
                "_get_tick(self, major)",
                "set_label_position(self, position)",
                "_get_tick_boxes_siblings(self, renderer)",
                "_update_label_position(self, renderer)",
                "_update_offset_text_position(self, bboxes, bboxes2)",
                "get_text_heights(self, renderer)",
                "set_ticks_position(self, position)",
                "tick_top(self)",
                "tick_bottom(self)",
                "get_ticks_position(self)",
                "get_minpos(self)",
                "set_inverted(self, inverted)",
                "set_default_intervals(self)",
                "get_tick_space(self)",
                "__init__(self, *args, **kwargs)",
                "contains(self, mouseevent)",
                "_get_tick(self, major)",
                "set_label_position(self, position)",
                "_get_tick_boxes_siblings(self, renderer)",
                "_update_label_position(self, renderer)",
                "_update_offset_text_position(self, bboxes, bboxes2)",
                "set_offset_position(self, position)",
                "get_text_widths(self, renderer)",
                "set_ticks_position(self, position)",
                "tick_right(self)",
                "tick_left(self)",
                "get_ticks_position(self)",
                "get_minpos(self)",
                "set_inverted(self, inverted)",
                "set_default_intervals(self)",
                "get_tick_space(self)"
            ],
            "variables_in_file": {
                "_log": [
                    20
                ],
                "logging.getLogger": [
                    20
                ],
                "logging": [
                    20
                ],
                "__name__": [
                    1122,
                    646,
                    398,
                    1808,
                    2099,
                    20,
                    471,
                    1144
                ],
                "GRIDLINE_INTERPOLATION_STEPS": [
                    165,
                    22
                ],
                "_line_AI": [
                    26,
                    27,
                    28
                ],
                "martist.ArtistInspector": [
                    26
                ],
                "martist": [
                    33,
                    612,
                    229,
                    282,
                    879,
                    658,
                    84,
                    26,
                    1116
                ],
                "mlines.Line2D": [
                    131,
                    133,
                    148,
                    153,
                    26,
                    158
                ],
                "mlines": [
                    514,
                    131,
                    133,
                    518,
                    148,
                    153,
                    26,
                    443,
                    158,
                    447
                ],
                "_line_param_names": [
                    27,
                    30
                ],
                "_line_AI.get_setters": [
                    27
                ],
                "_line_param_aliases": [
                    28,
                    30
                ],
                "list": [
                    28,
                    199
                ],
                "d": [
                    28
                ],
                "_line_AI.aliasd.values": [
                    28
                ],
                "_line_AI.aliasd": [
                    28
                ],
                "_gridline_param_names": [
                    841,
                    377,
                    29
                ],
                "name": [
                    99,
                    328,
                    107,
                    333,
                    334,
                    111,
                    115,
                    125,
                    118,
                    122,
                    29,
                    30
                ],
                "martist.Artist": [
                    33,
                    612,
                    229,
                    879,
                    658,
                    84
                ],
                "martist.Artist.__init__": [
                    658,
                    84
                ],
                "self": [
                    2051,
                    2059,
                    2063,
                    2065,
                    2070,
                    2071,
                    2073,
                    2074,
                    2077,
                    2078,
                    2080,
                    2082,
                    2083,
                    2086,
                    2087,
                    2088,
                    2106,
                    2111,
                    2113,
                    2115,
                    2119,
                    2123,
                    2127,
                    84,
                    2133,
                    2137,
                    2139,
                    2140,
                    96,
                    97,
                    2145,
                    99,
                    2147,
                    101,
                    102,
                    2148,
                    108,
                    2158,
                    2159,
                    112,
                    2160,
                    2163,
                    2164,
                    119,
                    127,
                    2176,
                    2178,
                    134,
                    2190,
                    146,
                    2195,
                    148,
                    2197,
                    2198,
                    2200,
                    153,
                    2205,
                    158,
                    2208,
                    2209,
                    164,
                    166,
                    2214,
                    169,
                    2219,
                    2223,
                    2224,
                    177,
                    183,
                    184,
                    185,
                    186,
                    2232,
                    188,
                    2233,
                    2234,
                    2235,
                    193,
                    2244,
                    2247,
                    2248,
                    2249,
                    2252,
                    205,
                    2254,
                    211,
                    2263,
                    2264,
                    2266,
                    220,
                    223,
                    224,
                    229,
                    230,
                    231,
                    234,
                    2285,
                    2287,
                    2289,
                    243,
                    2291,
                    2293,
                    2296,
                    2299,
                    2303,
                    256,
                    257,
                    261,
                    2310,
                    2311,
                    2312,
                    2313,
                    2316,
                    2323,
                    2324,
                    2325,
                    2326,
                    280,
                    2329,
                    284,
                    285,
                    287,
                    288,
                    289,
                    2337,
                    291,
                    292,
                    2345,
                    2349,
                    302,
                    303,
                    2351,
                    2356,
                    2357,
                    2359,
                    2360,
                    315,
                    316,
                    2363,
                    2364,
                    319,
                    2366,
                    2368,
                    2369,
                    2372,
                    2373,
                    2374,
                    328,
                    329,
                    330,
                    331,
                    332,
                    336,
                    339,
                    340,
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    350,
                    351,
                    352,
                    353,
                    355,
                    356,
                    358,
                    361,
                    362,
                    363,
                    367,
                    368,
                    373,
                    374,
                    378,
                    380,
                    403,
                    405,
                    406,
                    408,
                    410,
                    411,
                    413,
                    415,
                    418,
                    419,
                    423,
                    424,
                    430,
                    433,
                    438,
                    440,
                    442,
                    443,
                    444,
                    445,
                    447,
                    448,
                    449,
                    453,
                    454,
                    455,
                    456,
                    457,
                    458,
                    459,
                    463,
                    476,
                    478,
                    479,
                    481,
                    483,
                    484,
                    486,
                    488,
                    491,
                    492,
                    496,
                    497,
                    503,
                    506,
                    510,
                    511,
                    513,
                    514,
                    515,
                    516,
                    518,
                    519,
                    520,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    534,
                    550,
                    551,
                    555,
                    564,
                    568,
                    577,
                    589,
                    593,
                    600,
                    646,
                    658,
                    659,
                    661,
                    663,
                    665,
                    666,
                    667,
                    668,
                    670,
                    671,
                    673,
                    679,
                    680,
                    681,
                    683,
                    685,
                    688,
                    689,
                    691,
                    692,
                    701,
                    704,
                    723,
                    725,
                    727,
                    728,
                    729,
                    732,
                    735,
                    738,
                    739,
                    741,
                    742,
                    743,
                    744,
                    747,
                    750,
                    751,
                    756,
                    758,
                    761,
                    764,
                    767,
                    771,
                    773,
                    774,
                    775,
                    776,
                    786,
                    790,
                    794,
                    806,
                    812,
                    813,
                    815,
                    816,
                    817,
                    820,
                    821,
                    824,
                    825,
                    829,
                    831,
                    879,
                    880,
                    882,
                    929,
                    962,
                    970,
                    971,
                    987,
                    988,
                    993,
                    1000,
                    1001,
                    1002,
                    1003,
                    1008,
                    1009,
                    1010,
                    1011,
                    1018,
                    1022,
                    1024,
                    1052,
                    1057,
                    1080,
                    1083,
                    1085,
                    1088,
                    1091,
                    1092,
                    1096,
                    1110,
                    1111,
                    1112,
                    1113,
                    1120,
                    1122,
                    1124,
                    1125,
                    1136,
                    1138,
                    1140,
                    1141,
                    1142,
                    1145,
                    1149,
                    1155,
                    1159,
                    1163,
                    1167,
                    1174,
                    1202,
                    1204,
                    1206,
                    1210,
                    1211,
                    1216,
                    1225,
                    1234,
                    1235,
                    1239,
                    1244,
                    1245,
                    1246,
                    1249,
                    1253,
                    1261,
                    1279,
                    1282,
                    1300,
                    1304,
                    1308,
                    1312,
                    1316,
                    1321,
                    1323,
                    1325,
                    1326,
                    1327,
                    1328,
                    1330,
                    1335,
                    1337,
                    1339,
                    1340,
                    1341,
                    1342,
                    1344,
                    1380,
                    1382,
                    1383,
                    1387,
                    1389,
                    1390,
                    1392,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1411,
                    1412,
                    1420,
                    1423,
                    1428,
                    1429,
                    1430,
                    1432,
                    1433,
                    1434,
                    1436,
                    1437,
                    1438,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1447,
                    1450,
                    1457,
                    1458,
                    1460,
                    1463,
                    1477,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1487,
                    1502,
                    1503,
                    1505,
                    1506,
                    1507,
                    1508,
                    1521,
                    1524,
                    1525,
                    1526,
                    1527,
                    1540,
                    1543,
                    1544,
                    1545,
                    1546,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1588,
                    1618,
                    1619,
                    1621,
                    1622,
                    1637,
                    1651,
                    1653,
                    1655,
                    1657,
                    1659,
                    1660,
                    1662,
                    1663,
                    1691,
                    1696,
                    1713,
                    1734,
                    1735,
                    1761,
                    1785,
                    1790,
                    1792,
                    1794,
                    1797,
                    1799,
                    1815,
                    1819,
                    1821,
                    1822,
                    1826,
                    1830,
                    1835,
                    1841,
                    1845,
                    1847,
                    1848,
                    1853,
                    1855,
                    1856,
                    1866,
                    1869,
                    1870,
                    1882,
                    1884,
                    1896,
                    1901,
                    1903,
                    1904,
                    1906,
                    1911,
                    1915,
                    1916,
                    1921,
                    1926,
                    1930,
                    1931,
                    1939,
                    1940,
                    1941,
                    1942,
                    1944,
                    1948,
                    1949,
                    1953,
                    1957,
                    1958,
                    1959,
                    1967,
                    1969,
                    1978,
                    1979,
                    1981,
                    2000,
                    2002,
                    2004,
                    2006,
                    2008,
                    2011,
                    2014,
                    2016,
                    2019,
                    2026,
                    2027,
                    2028,
                    2029,
                    2031,
                    2038,
                    2039,
                    2040,
                    2041,
                    2043
                ],
                "gridOn": [
                    160,
                    86,
                    89,
                    92,
                    94
                ],
                "major": [
                    1856,
                    2144,
                    130,
                    2148,
                    102,
                    1734,
                    104,
                    1740,
                    589,
                    1746,
                    87,
                    1752,
                    90,
                    1852
                ],
                "mpl.rcParams": [
                    768,
                    769,
                    137,
                    765,
                    139,
                    141,
                    766,
                    143,
                    675,
                    676,
                    677,
                    1827,
                    1828,
                    683,
                    438,
                    2120,
                    2121,
                    87,
                    89,
                    90,
                    92,
                    107,
                    111,
                    115,
                    118,
                    122,
                    125,
                    510
                ],
                "mpl": [
                    768,
                    769,
                    137,
                    765,
                    139,
                    141,
                    766,
                    143,
                    675,
                    676,
                    677,
                    1827,
                    1828,
                    683,
                    438,
                    2120,
                    2121,
                    87,
                    89,
                    90,
                    92,
                    107,
                    111,
                    115,
                    118,
                    122,
                    125,
                    510
                ],
                "self.set_figure": [
                    96,
                    661
                ],
                "axes.figure": [
                    96,
                    661
                ],
                "axes": [
                    96,
                    97,
                    665,
                    661
                ],
                "self.axes": [
                    1921,
                    2178,
                    646,
                    1926,
                    2059,
                    1911,
                    2065,
                    405,
                    534,
                    2070,
                    1944,
                    665,
                    410,
                    794,
                    1819,
                    2071,
                    2200,
                    415,
                    2080,
                    1953,
                    1826,
                    2082,
                    2205,
                    2086,
                    2087,
                    2214,
                    2345,
                    2219,
                    430,
                    2351,
                    433,
                    1841,
                    2356,
                    1845,
                    2357,
                    2233,
                    2366,
                    2111,
                    1856,
                    2368,
                    2372,
                    2373,
                    2119,
                    463,
                    725,
                    2133,
                    2137,
                    1884,
                    478,
                    97,
                    483,
                    2148,
                    488,
                    1906,
                    503,
                    1785,
                    506,
                    1790
                ],
                "self.__name__.lower": [
                    99,
                    438,
                    510
                ],
                "self.__name__": [
                    291,
                    99,
                    438,
                    510,
                    287
                ],
                "self._loc": [
                    280,
                    529,
                    458,
                    101
                ],
                "loc": [
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    188,
                    453,
                    454,
                    455,
                    456,
                    457,
                    458,
                    101,
                    1255,
                    1004,
                    1005,
                    1012,
                    1013
                ],
                "self._major": [
                    600,
                    589,
                    102
                ],
                "major_minor": [
                    104,
                    107,
                    118,
                    111
                ],
                "size": [
                    2376,
                    2377,
                    106,
                    107,
                    108,
                    2091,
                    2092,
                    2093,
                    2378,
                    151,
                    156
                ],
                "self._size": [
                    336,
                    347,
                    220,
                    108
                ],
                "width": [
                    110,
                    111,
                    112,
                    151,
                    2264,
                    2266,
                    156
                ],
                "self._width": [
                    112,
                    339,
                    348
                ],
                "color": [
                    114,
                    115,
                    155,
                    150
                ],
                "pad": [
                    117,
                    118,
                    119
                ],
                "self._base_pad": [
                    448,
                    261,
                    519,
                    234,
                    340,
                    119
                ],
                "labelcolor": [
                    168,
                    121,
                    122,
                    171
                ],
                "labelsize": [
                    168,
                    171,
                    124,
                    125
                ],
                "self._set_labelrotation": [
                    361,
                    127
                ],
                "labelrotation": [
                    196,
                    197,
                    199,
                    200,
                    203,
                    127
                ],
                "zorder": [
                    129,
                    131,
                    133,
                    134,
                    150,
                    155
                ],
                "mlines.Line2D.zorder": [
                    131,
                    133
                ],
                "self._zorder": [
                    134
                ],
                "grid_color": [
                    136,
                    137,
                    160
                ],
                "grid_linestyle": [
                    161,
                    138,
                    139
                ],
                "grid_linewidth": [
                    161,
                    140,
                    141
                ],
                "grid_alpha": [
                    160,
                    142,
                    143
                ],
                "grid_kw": [
                    162,
                    144,
                    376,
                    378,
                    379
                ],
                "k": [
                    354,
                    357,
                    358,
                    365,
                    366,
                    335,
                    144,
                    369,
                    373,
                    374,
                    376,
                    377,
                    379,
                    380
                ],
                "v": [
                    354,
                    357,
                    358,
                    365,
                    144,
                    369,
                    373,
                    374,
                    376,
                    379,
                    380
                ],
                "kw.items": [
                    144,
                    354,
                    376,
                    365
                ],
                "kw": [
                    144,
                    806,
                    843,
                    844,
                    333,
                    334,
                    847,
                    335,
                    336,
                    845,
                    339,
                    340,
                    846,
                    848,
                    343,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    354,
                    859,
                    860,
                    861,
                    862,
                    863,
                    360,
                    361,
                    865,
                    866,
                    870,
                    365,
                    875,
                    376,
                    864
                ],
                "self.apply_tickdir": [
                    146,
                    343
                ],
                "tickdir": [
                    146,
                    437,
                    438,
                    439,
                    440,
                    509,
                    510,
                    511
                ],
                "self.tick1line": [
                    288,
                    344,
                    355,
                    453,
                    329,
                    524,
                    403,
                    148,
                    184,
                    346,
                    476,
                    223
                ],
                "tick1On": [
                    150
                ],
                "self.tick2line": [
                    288,
                    481,
                    356,
                    408,
                    454,
                    345,
                    330,
                    525,
                    184,
                    153,
                    346,
                    223
                ],
                "tick2On": [
                    155
                ],
                "self.gridline": [
                    224,
                    288,
                    164,
                    230,
                    455,
                    328,
                    486,
                    526,
                    184,
                    378,
                    413,
                    158
                ],
                "_interpolation_steps": [
                    164
                ],
                "self.gridline.get_path": [
                    164
                ],
                "self.label1": [
                    224,
                    193,
                    289,
                    419,
                    166,
                    456,
                    362,
                    331,
                    492,
                    302,
                    367,
                    527,
                    373,
                    185,
                    351
                ],
                "mtext.Text": [
                    680,
                    169,
                    673,
                    166
                ],
                "mtext": [
                    680,
                    169,
                    673,
                    166
                ],
                "np.nan": [
                    674,
                    170,
                    680,
                    167
                ],
                "np": [
                    1025,
                    674,
                    1281,
                    167,
                    680,
                    1256,
                    170,
                    2378,
                    2093,
                    1102,
                    1278
                ],
                "label1On": [
                    168
                ],
                "self.label2": [
                    224,
                    289,
                    353,
                    424,
                    169,
                    457,
                    363,
                    332,
                    368,
                    497,
                    528,
                    185,
                    315
                ],
                "label2On": [
                    171
                ],
                "meth": [
                    177,
                    179,
                    172,
                    183
                ],
                "attr": [
                    180,
                    172,
                    183
                ],
                "getattr": [
                    177,
                    373,
                    183,
                    1785,
                    1790
                ],
                "__get__": [
                    177
                ],
                "Tick": [
                    177,
                    393,
                    466
                ],
                "cbook.warn_deprecated": [
                    560,
                    178,
                    573
                ],
                "cbook": [
                    1537,
                    1541,
                    1170,
                    1556,
                    1688,
                    1177,
                    668,
                    1693,
                    1572,
                    805,
                    560,
                    178,
                    55,
                    1208,
                    439,
                    573,
                    191,
                    1220,
                    2245,
                    1866,
                    204,
                    1229,
                    1997,
                    984,
                    1370,
                    990,
                    1375,
                    1640,
                    2282,
                    1518,
                    2160,
                    1522,
                    761,
                    1150
                ],
                "setattr": [
                    358,
                    374,
                    183,
                    380,
                    1790
                ],
                "artist": [
                    184,
                    186,
                    288,
                    290
                ],
                "self._set_artist_props": [
                    681,
                    186,
                    679
                ],
                "self.update_position": [
                    188
                ],
                "cbook._delete_parameter": [
                    55
                ],
                "property": [
                    566,
                    553,
                    706,
                    190
                ],
                "cbook.deprecated": [
                    1688,
                    984,
                    1693,
                    990,
                    191
                ],
                "isinstance": [
                    1538,
                    196,
                    1540,
                    199,
                    1710,
                    1519,
                    559,
                    1521,
                    572
                ],
                "str": [
                    196,
                    1710
                ],
                "mode": [
                    197,
                    200,
                    202,
                    204,
                    205
                ],
                "angle": [
                    200,
                    203,
                    205,
                    198
                ],
                "tuple": [
                    199
                ],
                "cbook._check_in_list": [
                    805,
                    2282,
                    204,
                    1997,
                    439,
                    1208,
                    1375
                ],
                "self._labelrotation": [
                    362,
                    363,
                    205
                ],
                "self._tickdir": [
                    513,
                    444,
                    515,
                    211,
                    343,
                    440,
                    442,
                    220,
                    511
                ],
                "padding": [
                    220,
                    215
                ],
                "children": [
                    225,
                    223
                ],
                "martist.Artist.set_clip_path": [
                    229,
                    879
                ],
                "clippath": [
                    881,
                    229,
                    230,
                    879
                ],
                "transform": [
                    1248,
                    1057,
                    1249,
                    229,
                    230,
                    879,
                    881,
                    724,
                    725,
                    727,
                    1052,
                    1246,
                    1247
                ],
                "self.gridline.set_clip_path": [
                    230
                ],
                "self.stale": [
                    257,
                    1412,
                    1799,
                    520,
                    776,
                    1546,
                    530,
                    1562,
                    285,
                    2083,
                    292,
                    1578,
                    303,
                    316,
                    831,
                    449,
                    2369,
                    2249,
                    459,
                    1483,
                    1870,
                    729,
                    988,
                    1507,
                    2019,
                    1637,
                    231,
                    1392,
                    882,
                    2164,
                    1527,
                    1145,
                    2303
                ],
                "self.figure.dpi": [
                    2209,
                    1959,
                    234,
                    1931,
                    2224,
                    2235,
                    1916,
                    1949
                ],
                "self.figure": [
                    2176,
                    2209,
                    962,
                    1959,
                    234,
                    1931,
                    2224,
                    1882,
                    2235,
                    1916,
                    1949,
                    319
                ],
                "inside": [
                    1835,
                    1836,
                    1837,
                    2127,
                    2128,
                    2129,
                    243,
                    244,
                    245
                ],
                "info": [
                    1423,
                    1425,
                    1427,
                    1428,
                    1429,
                    1431,
                    1432,
                    1433,
                    2074,
                    1435,
                    1436,
                    1437,
                    2075,
                    1439,
                    1440,
                    1441,
                    2076,
                    1443,
                    1444,
                    1835,
                    1837,
                    2360,
                    2361,
                    2362,
                    2127,
                    2129,
                    243,
                    245
                ],
                "self._default_contains": [
                    1835,
                    243,
                    2127
                ],
                "mouseevent": [
                    1835,
                    2127,
                    1839,
                    2131,
                    243
                ],
                "self._apply_params": [
                    256
                ],
                "val": [
                    256,
                    704
                ],
                "self.get_visible": [
                    1080,
                    284,
                    1120
                ],
                "renderer.open_group": [
                    1122,
                    287
                ],
                "renderer": [
                    2180,
                    2195,
                    287,
                    290,
                    291,
                    1070,
                    1967,
                    1072,
                    1979,
                    1085,
                    1981,
                    1089,
                    1095,
                    972,
                    2252,
                    2264,
                    2266,
                    1886,
                    1122,
                    1126,
                    1129,
                    1901,
                    1136,
                    1138,
                    1142,
                    1144
                ],
                "self.get_gid": [
                    1122,
                    287
                ],
                "artist.draw": [
                    290
                ],
                "renderer.close_group": [
                    1144,
                    291
                ],
                "martist.allow_rasterization": [
                    282,
                    1116
                ],
                "self.label1.set_text": [
                    302
                ],
                "s": [
                    315,
                    302
                ],
                "set_label": [
                    305
                ],
                "set_label1": [
                    305
                ],
                "self.label2.set_text": [
                    315
                ],
                "a.set_figure": [
                    962,
                    319
                ],
                "a": [
                    960,
                    962,
                    1095,
                    1096,
                    1097,
                    2349,
                    2063,
                    2351,
                    2065,
                    319
                ],
                "NotImplementedError": [
                    384,
                    387,
                    325,
                    390,
                    901,
                    1286,
                    905,
                    1672,
                    1771,
                    1774,
                    943,
                    1679,
                    886,
                    919,
                    1686,
                    1718
                ],
                "target": [
                    328,
                    334
                ],
                "target.set_visible": [
                    334
                ],
                "kw.pop": [
                    864,
                    866,
                    361,
                    844,
                    334,
                    846,
                    336,
                    848,
                    850,
                    339,
                    340,
                    852,
                    854,
                    343,
                    856,
                    858,
                    860,
                    862
                ],
                "any": [
                    1256,
                    335
                ],
                "self.tick1line.set_marker": [
                    344
                ],
                "self._tickmarkers": [
                    514,
                    484,
                    516,
                    518,
                    479,
                    443,
                    406,
                    344,
                    345,
                    411,
                    445,
                    447
                ],
                "self.tick2line.set_marker": [
                    345
                ],
                "line": [
                    346,
                    347,
                    348
                ],
                "line.set_markersize": [
                    347
                ],
                "line.set_markeredgewidth": [
                    348
                ],
                "trans": [
                    352,
                    353,
                    418,
                    421,
                    423,
                    426,
                    491,
                    494,
                    496,
                    1841,
                    1842,
                    499,
                    2133,
                    2134,
                    350,
                    351
                ],
                "self._get_text1_transform": [
                    418,
                    491,
                    350
                ],
                "self.label1.set_transform": [
                    351
                ],
                "self._get_text2_transform": [
                    352,
                    496,
                    423
                ],
                "self.label2.set_transform": [
                    353
                ],
                "tick_kw": [
                    1856,
                    2145,
                    354,
                    355,
                    356,
                    357,
                    2147,
                    2148,
                    1853,
                    1855
                ],
                "self.tick1line.set": [
                    476,
                    355,
                    403
                ],
                "self.tick2line.set": [
                    408,
                    481,
                    356
                ],
                "tick_kw.items": [
                    357
                ],
                "self.label1.set": [
                    362,
                    419,
                    492,
                    367
                ],
                "self.label2.set": [
                    368,
                    497,
                    363,
                    424
                ],
                "label_kw": [
                    368,
                    369,
                    365,
                    367
                ],
                "label_kw.items": [
                    369
                ],
                "self.gridline.set": [
                    378,
                    413,
                    486
                ],
                "grid_kw.items": [
                    379
                ],
                "__init__": [
                    401,
                    474,
                    1812,
                    2103
                ],
                "super": [
                    401,
                    474,
                    1812,
                    2103
                ],
                "args": [
                    401,
                    474,
                    1812,
                    2103
                ],
                "kwargs": [
                    1376,
                    738,
                    1506,
                    401,
                    1812,
                    2103,
                    1368,
                    474,
                    1627,
                    1630
                ],
                "self.axes.get_xaxis_transform": [
                    410,
                    405,
                    415
                ],
                "va": [
                    418,
                    421,
                    423,
                    426,
                    491,
                    494,
                    496,
                    499
                ],
                "ha": [
                    418,
                    421,
                    423,
                    426,
                    491,
                    494,
                    496,
                    499
                ],
                "self.axes.get_xaxis_text1_transform": [
                    430
                ],
                "self._pad": [
                    448,
                    519,
                    430,
                    433,
                    503,
                    506
                ],
                "self.axes.get_xaxis_text2_transform": [
                    433
                ],
                "mlines.TICKUP": [
                    443,
                    447
                ],
                "mlines.TICKDOWN": [
                    443,
                    447
                ],
                "self.get_tick_padding": [
                    448,
                    519
                ],
                "self.tick1line.set_xdata": [
                    453
                ],
                "self.tick2line.set_xdata": [
                    454
                ],
                "self.gridline.set_xdata": [
                    455
                ],
                "self.label1.set_x": [
                    456
                ],
                "self.label2.set_x": [
                    457
                ],
                "self.axes.viewLim.intervalx": [
                    2082,
                    463
                ],
                "self.axes.viewLim": [
                    2368,
                    2082,
                    463,
                    2357,
                    534,
                    2071
                ],
                "self.axes.get_yaxis_transform": [
                    488,
                    483,
                    478
                ],
                "self.axes.get_yaxis_text1_transform": [
                    503
                ],
                "self.axes.get_yaxis_text2_transform": [
                    506
                ],
                "mlines.TICKRIGHT": [
                    514,
                    518
                ],
                "mlines.TICKLEFT": [
                    514,
                    518
                ],
                "self.tick1line.set_ydata": [
                    524
                ],
                "self.tick2line.set_ydata": [
                    525
                ],
                "self.gridline.set_ydata": [
                    526
                ],
                "self.label1.set_y": [
                    527
                ],
                "self.label2.set_y": [
                    528
                ],
                "self.axes.viewLim.intervaly": [
                    2368,
                    534
                ],
                "self._locator": [
                    555,
                    564,
                    550
                ],
                "self._formatter": [
                    568,
                    577,
                    551
                ],
                "locator": [
                    1572,
                    1574,
                    1576,
                    1577,
                    557,
                    559,
                    1556,
                    564,
                    1558,
                    1560,
                    1561
                ],
                "mticker.Locator": [
                    1556,
                    1572,
                    559
                ],
                "mticker": [
                    1537,
                    1538,
                    1540,
                    1572,
                    1518,
                    1519,
                    559,
                    1521,
                    1618,
                    1556,
                    1621,
                    1659,
                    572,
                    1662
                ],
                "locator.setter": [
                    557
                ],
                "formatter": [
                    577,
                    1537,
                    1538,
                    1539,
                    1544,
                    1545,
                    1518,
                    1519,
                    1520,
                    1525,
                    1526,
                    570,
                    572
                ],
                "mticker.Formatter": [
                    1537,
                    572,
                    1518
                ],
                "formatter.setter": [
                    570
                ],
                "instance": [
                    608,
                    609,
                    592,
                    601,
                    602,
                    603,
                    604,
                    606,
                    607
                ],
                "instance.majorTicks": [
                    601,
                    603,
                    604
                ],
                "tick": [
                    1025,
                    1282,
                    1168,
                    1169,
                    1175,
                    1176,
                    1050,
                    1055,
                    1057,
                    1279,
                    1064,
                    2088,
                    2091,
                    1325,
                    1070,
                    1071,
                    1072,
                    1073,
                    1326,
                    1327,
                    1328,
                    821,
                    822,
                    2376,
                    825,
                    826,
                    1339,
                    1340,
                    1341,
                    1342,
                    1217,
                    1218,
                    1219,
                    2374,
                    1736,
                    1737,
                    1226,
                    1227,
                    1228,
                    1738,
                    1739,
                    1740,
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1748,
                    1749,
                    1750,
                    1624,
                    1751,
                    602,
                    603,
                    1626,
                    1627,
                    1629,
                    607,
                    608,
                    1630,
                    1632,
                    1633,
                    1634,
                    1635,
                    1128,
                    1129,
                    1004,
                    1005,
                    1006,
                    1007,
                    1752,
                    1012,
                    1013,
                    1014,
                    1015,
                    1151
                ],
                "instance._get_tick": [
                    602,
                    607
                ],
                "instance.majorTicks.append": [
                    603
                ],
                "instance.minorTicks": [
                    608,
                    609,
                    606
                ],
                "instance.minorTicks.append": [
                    608
                ],
                "OFFSETTEXTPAD": [
                    642
                ],
                "format": [
                    645
                ],
                "type": [
                    646
                ],
                "self.axes.transAxes.transform": [
                    2372,
                    2086,
                    646,
                    1845,
                    2137
                ],
                "self.axes.transAxes": [
                    1826,
                    2372,
                    646,
                    2086,
                    2119,
                    1841,
                    725,
                    1845,
                    2133,
                    2137,
                    1819,
                    2111
                ],
                "self._remove_overlapping_locs": [
                    704,
                    659,
                    701
                ],
                "self.isDefault_label": [
                    1443,
                    1445,
                    1502,
                    663
                ],
                "self.major": [
                    1312,
                    1696,
                    1092,
                    1559,
                    1001,
                    1560,
                    1003,
                    1691,
                    1521,
                    1428,
                    1141,
                    1525,
                    1239,
                    1304,
                    1436,
                    666,
                    1558,
                    1244
                ],
                "Ticker": [
                    666,
                    667
                ],
                "self.minor": [
                    1440,
                    1316,
                    1540,
                    1574,
                    1575,
                    1544,
                    1576,
                    1009,
                    1011,
                    1432,
                    667,
                    1308,
                    1245
                ],
                "self.callbacks": [
                    761,
                    1482,
                    668,
                    1481
                ],
                "cbook.CallbackRegistry": [
                    761,
                    668
                ],
                "self._autolabelpos": [
                    1896,
                    2190,
                    723,
                    670
                ],
                "self._smart_bounds": [
                    993,
                    987,
                    1022,
                    671
                ],
                "self.label": [
                    1155,
                    1930,
                    1300,
                    2197,
                    1815,
                    2208,
                    673,
                    679,
                    2223,
                    2106,
                    1979,
                    1981,
                    1096,
                    1866,
                    727,
                    728,
                    2264,
                    2266,
                    1503,
                    1505,
                    1506,
                    1508,
                    750,
                    1903,
                    2158,
                    2159,
                    1138,
                    2160,
                    756,
                    1915
                ],
                "self.offsetText": [
                    1159,
                    1939,
                    1948,
                    1822,
                    1957,
                    1958,
                    680,
                    681,
                    2232,
                    2234,
                    829,
                    2115,
                    1092,
                    2244,
                    2247,
                    1096,
                    2248,
                    750,
                    1141,
                    1142
                ],
                "self.labelpad": [
                    2209,
                    683,
                    1931,
                    2224,
                    1916
                ],
                "self.pickradius": [
                    1163,
                    685,
                    1588,
                    1847,
                    1848,
                    2139,
                    2140
                ],
                "pickradius": [
                    1588,
                    685
                ],
                "self._major_tick_kw": [
                    2145,
                    2310,
                    2311,
                    2312,
                    2026,
                    2027,
                    812,
                    813,
                    2028,
                    688,
                    2323,
                    820,
                    2324,
                    2038,
                    2039,
                    2040,
                    2325,
                    1853
                ],
                "dict": [
                    688,
                    689
                ],
                "self._minor_tick_kw": [
                    2147,
                    815,
                    816,
                    689,
                    824,
                    1855
                ],
                "self.cla": [
                    691
                ],
                "self._set_scale": [
                    692,
                    758
                ],
                "majorTicks": [
                    697
                ],
                "_LazyTickList": [
                    697,
                    698
                ],
                "minorTicks": [
                    698
                ],
                "bool": [
                    704,
                    2065,
                    2351
                ],
                "remove_overlapping_locs": [
                    706
                ],
                "get_remove_overlapping_locs": [
                    707
                ],
                "set_remove_overlapping_locs": [
                    707
                ],
                "self.label.set_transform": [
                    727
                ],
                "self.label.set_position": [
                    2208,
                    1930,
                    2223,
                    728,
                    1915
                ],
                "x": [
                    1931,
                    1939,
                    2197,
                    1949,
                    1959,
                    1454,
                    1455,
                    1839,
                    1458,
                    1842,
                    1461,
                    1463,
                    2232,
                    1466,
                    2235,
                    2244,
                    2245,
                    2248,
                    2131,
                    2134,
                    728,
                    2139,
                    2140,
                    1903,
                    1916
                ],
                "y": [
                    2209,
                    2244,
                    2248,
                    1839,
                    1903,
                    2224,
                    1842,
                    1848,
                    1939,
                    2131,
                    2134,
                    1847,
                    728,
                    2197,
                    2232
                ],
                "self._scale.get_transform": [
                    732,
                    1246
                ],
                "self._scale": [
                    738,
                    739,
                    747,
                    732,
                    1246,
                    735
                ],
                "self._scale.name": [
                    735
                ],
                "mscale.scale_factory": [
                    738
                ],
                "mscale": [
                    738
                ],
                "value": [
                    738,
                    987
                ],
                "self._scale.set_default_locators_and_formatters": [
                    739
                ],
                "self.isDefault_majloc": [
                    1557,
                    1428,
                    741,
                    1430
                ],
                "self.isDefault_minloc": [
                    1432,
                    1434,
                    1573,
                    742
                ],
                "self.isDefault_majfmt": [
                    1436,
                    1524,
                    1438,
                    743
                ],
                "self.isDefault_minfmt": [
                    744,
                    1442,
                    1440,
                    1543
                ],
                "self._scale.limit_range_for_scale": [
                    747
                ],
                "vmin": [
                    1794,
                    747,
                    1797,
                    1790
                ],
                "vmax": [
                    1794,
                    747,
                    1797,
                    1790
                ],
                "self.get_minpos": [
                    747
                ],
                "self.get_major_ticks": [
                    1216,
                    1282,
                    1002,
                    1167,
                    751,
                    1622,
                    1149,
                    1663
                ],
                "self.get_minor_ticks": [
                    1225,
                    751,
                    1010,
                    1619,
                    1174,
                    1660,
                    1279
                ],
                "self.label.set_text": [
                    756,
                    1503
                ],
                "self._gridOnMajor": [
                    1387,
                    1389,
                    1390,
                    1327,
                    764
                ],
                "self._gridOnMinor": [
                    1380,
                    1382,
                    1383,
                    1341,
                    767
                ],
                "self.reset_ticks": [
                    817,
                    771
                ],
                "self.converter": [
                    773,
                    1420,
                    1423,
                    2073,
                    2074,
                    2077,
                    2078,
                    1450,
                    1457,
                    1458,
                    1460,
                    2359,
                    1463,
                    2360,
                    2363,
                    2364,
                    1404,
                    1405,
                    1406
                ],
                "self.units": [
                    1477,
                    774,
                    1479,
                    1450,
                    1423,
                    1487,
                    1463,
                    2360,
                    2074,
                    2363,
                    2364,
                    2077,
                    2078,
                    1407
                ],
                "self.set_units": [
                    1408,
                    775
                ],
                "self.majorTicks": [
                    1734,
                    1323,
                    1326,
                    2254,
                    880,
                    1328,
                    786,
                    1330,
                    1969,
                    821,
                    1110,
                    1111
                ],
                "AttributeError": [
                    795,
                    787,
                    791
                ],
                "self.minorTicks": [
                    1113,
                    1344,
                    1337,
                    1735,
                    880,
                    790,
                    1112,
                    825,
                    1340,
                    1342
                ],
                "self.set_clip_path": [
                    794
                ],
                "self.axes.patch": [
                    794
                ],
                "which": [
                    1378,
                    805,
                    1385,
                    811,
                    814,
                    1200,
                    1201,
                    819,
                    1203,
                    1205,
                    823,
                    1208,
                    1374,
                    1375
                ],
                "kwtrans": [
                    806,
                    813,
                    816,
                    820,
                    822,
                    824,
                    826,
                    828,
                    829,
                    842,
                    844,
                    846,
                    848,
                    850,
                    852,
                    854,
                    856,
                    858,
                    860,
                    862,
                    864,
                    867,
                    868,
                    875,
                    876
                ],
                "self._translate_tick_kw": [
                    806
                ],
                "reset": [
                    810
                ],
                "self._major_tick_kw.clear": [
                    812
                ],
                "self._major_tick_kw.update": [
                    820,
                    813
                ],
                "self._minor_tick_kw.clear": [
                    815
                ],
                "self._minor_tick_kw.update": [
                    816,
                    824
                ],
                "tick._apply_params": [
                    826,
                    822
                ],
                "self.offsetText.set_color": [
                    829
                ],
                "kwkeys": [
                    874,
                    836,
                    871
                ],
                "c": [
                    866,
                    867,
                    868
                ],
                "key": [
                    874,
                    870,
                    871
                ],
                "ValueError": [
                    872,
                    1843,
                    2135
                ],
                "kwtrans.update": [
                    875
                ],
                "staticmethod": [
                    833
                ],
                "child": [
                    880,
                    881
                ],
                "child.set_clip_path": [
                    881
                ],
                "low": [
                    929,
                    930
                ],
                "high": [
                    929,
                    930
                ],
                "self.get_view_interval": [
                    929,
                    1249,
                    2349,
                    2063,
                    1653,
                    1018
                ],
                "ticks_to_draw": [
                    1089,
                    2179,
                    1124,
                    1125,
                    2180,
                    1064,
                    1128,
                    970,
                    971,
                    1066,
                    1886,
                    1083,
                    1885,
                    1054
                ],
                "self._update_ticks": [
                    970,
                    1083,
                    1124
                ],
                "ticklabelBoxes": [
                    1088,
                    1091,
                    1125,
                    1098,
                    971,
                    974,
                    975,
                    1140
                ],
                "ticklabelBoxes2": [
                    1088,
                    1091,
                    1125,
                    971,
                    1099,
                    978,
                    979,
                    1140
                ],
                "self._get_tick_bboxes": [
                    1088,
                    971,
                    1125
                ],
                "len": [
                    1539,
                    1032,
                    1044,
                    1943,
                    1952,
                    1321,
                    1323,
                    1335,
                    1337,
                    974,
                    978,
                    1110,
                    1368,
                    1112,
                    1002,
                    1520,
                    1010,
                    1652,
                    1660,
                    1663
                ],
                "bbox": [
                    1927,
                    1928,
                    1946,
                    1947,
                    2206,
                    2207,
                    1955,
                    1956,
                    2220,
                    2221,
                    1967,
                    1975,
                    1976,
                    2252,
                    975,
                    977,
                    2257,
                    2258,
                    982,
                    1912,
                    1913
                ],
                "mtransforms.Bbox.union": [
                    1955,
                    1927,
                    2220,
                    975,
                    1104,
                    979,
                    1912,
                    1946,
                    2206
                ],
                "mtransforms.Bbox": [
                    1955,
                    1927,
                    2220,
                    975,
                    1104,
                    977,
                    979,
                    981,
                    1912,
                    1946,
                    2206
                ],
                "mtransforms": [
                    1927,
                    1818,
                    1819,
                    1946,
                    2206,
                    1825,
                    1826,
                    1955,
                    1063,
                    2220,
                    2110,
                    2111,
                    2118,
                    2119,
                    975,
                    1104,
                    977,
                    979,
                    981,
                    1912
                ],
                "mtransforms.Bbox.from_extents": [
                    977,
                    981
                ],
                "bbox2": [
                    2252,
                    1967,
                    979,
                    1972,
                    981,
                    982,
                    1973,
                    2260,
                    2261
                ],
                "major_locs": [
                    1248,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1244
                ],
                "self.get_majorticklocs": [
                    1000,
                    1321,
                    1261
                ],
                "major_labels": [
                    1001,
                    1004
                ],
                "self.major.formatter.format_ticks": [
                    1001
                ],
                "self.major.formatter": [
                    1312,
                    1092,
                    1001,
                    1003,
                    1141,
                    1525,
                    1559,
                    1560,
                    1436
                ],
                "major_ticks": [
                    1016,
                    1002,
                    1004
                ],
                "self.major.formatter.set_locs": [
                    1003
                ],
                "label": [
                    2309,
                    2311,
                    2316,
                    2322,
                    2324,
                    2329,
                    1503,
                    2025,
                    2027,
                    1004,
                    1006,
                    1007,
                    2031,
                    1015,
                    1012,
                    2037,
                    1014,
                    2039,
                    2043
                ],
                "zip": [
                    1624,
                    1004,
                    1012,
                    1255
                ],
                "tick.update_position": [
                    1013,
                    1005
                ],
                "tick.set_label1": [
                    1006,
                    1014
                ],
                "tick.set_label2": [
                    1015,
                    1007
                ],
                "minor_locs": [
                    1254,
                    1255,
                    1257,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1245,
                    1247
                ],
                "self.get_minorticklocs": [
                    1008,
                    1261,
                    1335
                ],
                "minor_labels": [
                    1009,
                    1012
                ],
                "self.minor.formatter.format_ticks": [
                    1009
                ],
                "self.minor.formatter": [
                    1440,
                    1316,
                    1575,
                    1544,
                    1576,
                    1009,
                    1011
                ],
                "minor_ticks": [
                    1016,
                    1010,
                    1012
                ],
                "self.minor.formatter.set_locs": [
                    1011
                ],
                "ticks": [
                    1025,
                    1167,
                    1168,
                    1169,
                    1174,
                    1175,
                    1176,
                    1050,
                    1055,
                    1662,
                    1071,
                    1663,
                    1073,
                    1216,
                    1217,
                    1225,
                    1226,
                    1619,
                    1622,
                    1624,
                    1651,
                    1652,
                    1655,
                    1016,
                    1657,
                    1659,
                    1660,
                    1149,
                    1022,
                    1151
                ],
                "view_low": [
                    1026,
                    1028,
                    1052,
                    1018,
                    1019,
                    1020
                ],
                "view_high": [
                    1052,
                    1038,
                    1040,
                    1018,
                    1019,
                    1020
                ],
                "data_low": [
                    1024,
                    1026,
                    1031
                ],
                "data_high": [
                    1024,
                    1043,
                    1038
                ],
                "sorted": [
                    1024,
                    1249,
                    2065,
                    2351
                ],
                "self.get_data_interval": [
                    1024
                ],
                "locs": [
                    1025,
                    1031,
                    1037,
                    1043,
                    1049
                ],
                "np.sort": [
                    1025
                ],
                "tick.get_loc": [
                    1025,
                    1050,
                    1057
                ],
                "ilow": [
                    1034,
                    1050,
                    1028,
                    1037
                ],
                "good_locs": [
                    1031,
                    1032,
                    1034,
                    1043,
                    1044,
                    1046
                ],
                "ihigh": [
                    1040,
                    1049,
                    1050,
                    1046
                ],
                "interval_t": [
                    1052,
                    1063
                ],
                "self.get_transform": [
                    1057,
                    1052
                ],
                "loc_t": [
                    1057,
                    1063
                ],
                "AssertionError": [
                    1058
                ],
                "mtransforms._interval_contains_close": [
                    1063
                ],
                "ticks_to_draw.append": [
                    1064
                ],
                "tick.label1.get_window_extent": [
                    1070
                ],
                "tick.label1": [
                    1632,
                    1633,
                    2376,
                    1738,
                    2091,
                    1070,
                    1071,
                    1168,
                    1745,
                    1750,
                    1175,
                    1626,
                    1627
                ],
                "tick.label1.get_visible": [
                    1632,
                    1738,
                    1071,
                    1168,
                    1745,
                    1750,
                    1175
                ],
                "tick.label2.get_window_extent": [
                    1072
                ],
                "tick.label2": [
                    1634,
                    1635,
                    1739,
                    1072,
                    1073,
                    1169,
                    1744,
                    1751,
                    1176,
                    1629,
                    1630
                ],
                "tick.label2.get_visible": [
                    1634,
                    1739,
                    1744,
                    1073,
                    1169,
                    1751,
                    1176
                ],
                "self._update_label_position": [
                    1136,
                    1085
                ],
                "self._update_offset_text_position": [
                    1091,
                    1140
                ],
                "self.offsetText.set_text": [
                    1092,
                    1141
                ],
                "self.major.formatter.get_offset": [
                    1092,
                    1141
                ],
                "bboxes": [
                    1889,
                    2181,
                    1094,
                    2183,
                    1101,
                    1901,
                    1103,
                    1104,
                    1943,
                    2195,
                    1879,
                    1912,
                    1946,
                    2173,
                    2206,
                    1887
                ],
                "a.get_window_extent": [
                    1095
                ],
                "a.get_visible": [
                    1097
                ],
                "b": [
                    2137,
                    1379,
                    1382,
                    1386,
                    1101,
                    1102,
                    1389,
                    2063,
                    2065,
                    2349,
                    2351,
                    1845,
                    1847,
                    1369,
                    1373
                ],
                "b.width": [
                    1102
                ],
                "np.inf": [
                    1102
                ],
                "b.height": [
                    1102
                ],
                "values": [
                    1113,
                    1114,
                    1109,
                    1111
                ],
                "values.append": [
                    1113,
                    1111
                ],
                "get_tick_padding": [
                    1113,
                    1111
                ],
                "max": [
                    1794,
                    1797,
                    1655,
                    1657,
                    1114
                ],
                "tick.draw": [
                    1129
                ],
                "self.label.draw": [
                    1138
                ],
                "self.offsetText.draw": [
                    1142
                ],
                "cbook.silent_list": [
                    1220,
                    1229,
                    1170,
                    1177,
                    1150
                ],
                "tick.gridline": [
                    1341,
                    1327,
                    1151
                ],
                "labels1": [
                    1168,
                    1177,
                    1170,
                    1175
                ],
                "labels2": [
                    1176,
                    1169,
                    1170,
                    1177
                ],
                "self.get_minorticklabels": [
                    1210,
                    1202,
                    1206
                ],
                "self.get_majorticklabels": [
                    1211,
                    1204,
                    1206
                ],
                "minor": [
                    1735,
                    1740,
                    1261,
                    1617,
                    1233,
                    1746,
                    1752,
                    1209,
                    1658,
                    1277
                ],
                "lines": [
                    1218,
                    1219,
                    1220,
                    1224,
                    1227,
                    1228,
                    1229,
                    1215
                ],
                "lines.append": [
                    1218,
                    1219,
                    1228,
                    1227
                ],
                "tick.tick1line": [
                    1218,
                    1736,
                    1227,
                    1743,
                    1748
                ],
                "tick.tick2line": [
                    1219,
                    1737,
                    1228,
                    1742,
                    1749
                ],
                "self.get_minorticklines": [
                    1234
                ],
                "self.get_majorticklines": [
                    1235
                ],
                "self.major.locator": [
                    1696,
                    1521,
                    1428,
                    1558,
                    1239,
                    1304,
                    1691,
                    1244
                ],
                "self.minor.locator": [
                    1540,
                    1574,
                    1432,
                    1308,
                    1245
                ],
                "tr_minor_locs": [
                    1255,
                    1247
                ],
                "transform.transform": [
                    1248,
                    1249,
                    1247
                ],
                "tr_major_locs": [
                    1248,
                    1256
                ],
                "lo": [
                    1249,
                    1252
                ],
                "hi": [
                    1249,
                    1252
                ],
                "tol": [
                    1256,
                    1252
                ],
                "self.remove_overlapping_locs": [
                    1253
                ],
                "tr_loc": [
                    1256,
                    1255
                ],
                "np.isclose": [
                    1256
                ],
                "np.array": [
                    1281,
                    1278
                ],
                "tick._tickdir": [
                    1282,
                    1279
                ],
                "src": [
                    1290,
                    1292,
                    1293,
                    1294,
                    1295,
                    1296
                ],
                "dest": [
                    1290,
                    1292,
                    1293,
                    1294,
                    1295,
                    1296
                ],
                "dest.label1.update_from": [
                    1292
                ],
                "dest.label1": [
                    1292
                ],
                "src.label1": [
                    1292
                ],
                "dest.label2.update_from": [
                    1293
                ],
                "dest.label2": [
                    1293
                ],
                "src.label2": [
                    1293
                ],
                "dest.tick1line.update_from": [
                    1294
                ],
                "dest.tick1line": [
                    1294
                ],
                "src.tick1line": [
                    1294
                ],
                "dest.tick2line.update_from": [
                    1295
                ],
                "dest.tick2line": [
                    1295
                ],
                "src.tick2line": [
                    1295
                ],
                "dest.gridline.update_from": [
                    1296
                ],
                "dest.gridline": [
                    1296
                ],
                "src.gridline": [
                    1296
                ],
                "self.label.get_text": [
                    1300
                ],
                "numticks": [
                    1344,
                    1320,
                    1321,
                    1323,
                    1330,
                    1334,
                    1335,
                    1337
                ],
                "self._get_tick": [
                    2088,
                    1339,
                    1325,
                    2374
                ],
                "self.majorTicks.append": [
                    1326
                ],
                "tick.gridline.set_visible": [
                    1341,
                    1327
                ],
                "self._copy_tick_props": [
                    1328,
                    1342
                ],
                "self.minorTicks.append": [
                    1340
                ],
                "cbook._warn_external": [
                    1370,
                    1522,
                    1541
                ],
                "which.lower": [
                    1374
                ],
                "gridkw": [
                    1376,
                    1384,
                    1391
                ],
                "item": [
                    1376
                ],
                "kwargs.items": [
                    1376
                ],
                "self.set_tick_params": [
                    2296,
                    1383,
                    2043,
                    2316,
                    2285,
                    1390,
                    2031,
                    2000,
                    2289,
                    2299,
                    2004,
                    2293,
                    2008,
                    2329,
                    2011,
                    2014
                ],
                "converter": [
                    1400,
                    1401,
                    1404,
                    1405
                ],
                "munits.registry.get_converter": [
                    1400,
                    1458
                ],
                "munits.registry": [
                    1400,
                    1458
                ],
                "munits": [
                    1400,
                    1465,
                    1458,
                    1454
                ],
                "data": [
                    1400,
                    1406
                ],
                "neednew": [
                    1410,
                    1404
                ],
                "default": [
                    1408,
                    1406,
                    1407
                ],
                "self.converter.default_units": [
                    1406
                ],
                "self._update_axisinfo": [
                    1480,
                    1411
                ],
                "self.converter.axisinfo": [
                    2360,
                    2074,
                    1423
                ],
                "info.majloc": [
                    1427,
                    1428,
                    1429
                ],
                "self.set_major_locator": [
                    1429,
                    1662
                ],
                "info.minloc": [
                    1432,
                    1433,
                    1431
                ],
                "self.set_minor_locator": [
                    1433,
                    1659
                ],
                "info.majfmt": [
                    1435,
                    1436,
                    1437
                ],
                "self.set_major_formatter": [
                    1621,
                    1437
                ],
                "info.minfmt": [
                    1440,
                    1441,
                    1439
                ],
                "self.set_minor_formatter": [
                    1441,
                    1618
                ],
                "info.label": [
                    1443,
                    1444
                ],
                "self.set_label_text": [
                    1444
                ],
                "self.set_default_intervals": [
                    1447
                ],
                "munits._is_natively_supported": [
                    1454
                ],
                "ret": [
                    1633,
                    1463,
                    1635,
                    1638,
                    1623,
                    1467
                ],
                "self.converter.convert": [
                    1463,
                    2363,
                    2364,
                    2077,
                    2078
                ],
                "Exception": [
                    1464
                ],
                "munits.ConversionError": [
                    1465
                ],
                "e": [
                    1466
                ],
                "u": [
                    1477,
                    1479
                ],
                "self.callbacks.process": [
                    1481,
                    1482
                ],
                "fontdict": [
                    1504,
                    1505
                ],
                "self.label.update": [
                    1505,
                    1506
                ],
                "cbook._check_isinstance": [
                    1572,
                    1537,
                    1556,
                    1518
                ],
                "mticker.FixedFormatter": [
                    1538,
                    1621,
                    1618,
                    1519
                ],
                "formatter.seq": [
                    1520,
                    1539
                ],
                "mticker.FixedLocator": [
                    1521,
                    1659,
                    1540,
                    1662
                ],
                "formatter.set_axis": [
                    1545,
                    1526
                ],
                "self.major.formatter._set_locator": [
                    1560
                ],
                "locator.set_axis": [
                    1561,
                    1577
                ],
                "self.minor.formatter._set_locator": [
                    1576
                ],
                "ticklabels": [
                    1615,
                    1616,
                    1618,
                    1621,
                    1624
                ],
                "hasattr": [
                    1940,
                    1615
                ],
                "t": [
                    1615,
                    1616,
                    1845,
                    1848,
                    2137
                ],
                "t.get_text": [
                    1615
                ],
                "tick_label": [
                    1624,
                    1626,
                    1629
                ],
                "tick.label1.set_text": [
                    1626
                ],
                "tick.label1.update": [
                    1627
                ],
                "tick.label2.set_text": [
                    1629
                ],
                "tick.label2.update": [
                    1630
                ],
                "ret.append": [
                    1633,
                    1635
                ],
                "self.convert_units": [
                    1651
                ],
                "xleft": [
                    1653,
                    1654
                ],
                "xright": [
                    1653,
                    1654
                ],
                "self.set_view_interval": [
                    1657,
                    1655
                ],
                "min": [
                    1657,
                    1794,
                    1797,
                    1655
                ],
                "cbook._make_keyword_only": [
                    1640
                ],
                "self.major.locator.pan": [
                    1691
                ],
                "numsteps": [
                    1691
                ],
                "self.major.locator.zoom": [
                    1696
                ],
                "direction": [
                    1696
                ],
                "tz": [
                    1712,
                    1713,
                    1710
                ],
                "dateutil.tz.gettz": [
                    1712
                ],
                "dateutil.tz": [
                    1712
                ],
                "dateutil": [
                    1712
                ],
                "self.update_units": [
                    1713
                ],
                "datetime.datetime": [
                    1713
                ],
                "datetime": [
                    1713
                ],
                "all": [
                    1736,
                    1748,
                    1742
                ],
                "tick.tick1line.get_visible": [
                    1736,
                    1748,
                    1743
                ],
                "tick.tick2line.get_visible": [
                    1737,
                    1749,
                    1742
                ],
                "self.label_position": [
                    1761,
                    2113,
                    1869,
                    1904,
                    2163,
                    2198,
                    1821
                ],
                "lim_name": [
                    1785,
                    1790
                ],
                "attr_name": [
                    1785,
                    1790
                ],
                "ignore": [
                    1789
                ],
                "oldmin": [
                    1792,
                    1793,
                    1794,
                    1797
                ],
                "oldmax": [
                    1792,
                    1793,
                    1794,
                    1797
                ],
                "getter": [
                    1792,
                    1801,
                    1804
                ],
                "setter": [
                    1794,
                    1802,
                    1804,
                    1797
                ],
                "getter.__name__": [
                    1801
                ],
                "method_name": [
                    1801,
                    1802
                ],
                "setter.__name__": [
                    1802
                ],
                "Axis": [
                    2098,
                    1807
                ],
                "axis_name": [
                    1809,
                    2100
                ],
                "self.label.set": [
                    2106,
                    1815
                ],
                "mtransforms.blended_transform_factory": [
                    2118,
                    1825,
                    1818,
                    2110
                ],
                "mtransforms.IdentityTransform": [
                    1826,
                    1819,
                    2119,
                    2111
                ],
                "self.offsetText.set": [
                    2115,
                    1822
                ],
                "self.offset_text_position": [
                    2123,
                    1830
                ],
                "mouseevent.x": [
                    2131,
                    1839
                ],
                "mouseevent.y": [
                    2131,
                    1839
                ],
                "self.axes.transAxes.inverted": [
                    1841,
                    2133
                ],
                "xaxes": [
                    2134,
                    1842,
                    1846
                ],
                "yaxes": [
                    1842,
                    2138,
                    2134
                ],
                "trans.transform": [
                    1842,
                    2134
                ],
                "l": [
                    2137,
                    2139,
                    1845
                ],
                "r": [
                    2137,
                    2140,
                    1845
                ],
                "inaxis": [
                    1849,
                    2138,
                    2141,
                    1846
                ],
                "XTick": [
                    1856
                ],
                "self.label.set_verticalalignment": [
                    2160,
                    1866
                ],
                "cbook._check_getitem": [
                    2160,
                    1866,
                    2245
                ],
                "position": [
                    2245,
                    2247,
                    1868,
                    1869,
                    1998,
                    1999,
                    2003,
                    2007,
                    2010,
                    2013,
                    2283,
                    2284,
                    2287,
                    2288,
                    2162,
                    2163,
                    2291,
                    2292,
                    2295,
                    2298
                ],
                "bboxes2": [
                    1888,
                    1889,
                    1952,
                    1955,
                    2182,
                    1927,
                    2183,
                    2220,
                    1901,
                    2195,
                    1880,
                    2174
                ],
                "grp": [
                    2176,
                    1882,
                    1884,
                    2178
                ],
                "self.figure._align_xlabel_grp": [
                    1882
                ],
                "nn": [
                    1884
                ],
                "axx": [
                    2178,
                    2179,
                    2180,
                    1884,
                    1885,
                    1886
                ],
                "enumerate": [
                    1884
                ],
                "grp.get_siblings": [
                    2178,
                    1884
                ],
                "axx.xaxis._update_ticks": [
                    1885
                ],
                "axx.xaxis": [
                    1885,
                    1886
                ],
                "tlb": [
                    2180,
                    2181,
                    1886,
                    1887
                ],
                "tlb2": [
                    1888,
                    2182,
                    2180,
                    1886
                ],
                "axx.xaxis._get_tick_bboxes": [
                    1886
                ],
                "bboxes.extend": [
                    2181,
                    1887
                ],
                "bboxes2.extend": [
                    1888,
                    2182
                ],
                "self._get_tick_boxes_siblings": [
                    2195,
                    1901
                ],
                "self.label.get_position": [
                    2197,
                    1903
                ],
                "spine": [
                    1921,
                    1922,
                    1923,
                    2214,
                    2215,
                    2216,
                    1906,
                    1907,
                    1908,
                    2200,
                    2201,
                    2202
                ],
                "self.axes.spines": [
                    2200,
                    1921,
                    1906,
                    2214
                ],
                "spinebbox": [
                    1922,
                    1926,
                    1927,
                    2215,
                    2219,
                    2220,
                    1907,
                    1911,
                    1912,
                    2201,
                    2205,
                    2206
                ],
                "get_extents": [
                    2201,
                    1922,
                    1907,
                    2215
                ],
                "transform_path": [
                    2201,
                    1922,
                    1907,
                    2215
                ],
                "spine.get_transform": [
                    2201,
                    1922,
                    1907,
                    2215
                ],
                "spine.get_path": [
                    2216,
                    2202,
                    1923,
                    1908
                ],
                "KeyError": [
                    2217,
                    2203,
                    1924,
                    1909
                ],
                "self.axes.bbox": [
                    1953,
                    1926,
                    2219,
                    1911,
                    1944,
                    2233,
                    2205
                ],
                "bottom": [
                    1944,
                    1913,
                    1947,
                    1916,
                    1949
                ],
                "bbox.y0": [
                    1913,
                    1947
                ],
                "top": [
                    1953,
                    1956,
                    1959,
                    1928,
                    1931,
                    2233,
                    2235
                ],
                "bbox.y1": [
                    1928,
                    1956
                ],
                "self.offsetText.get_position": [
                    2232,
                    1939,
                    2244
                ],
                "self._tick_position": [
                    2016,
                    2002,
                    1941,
                    2006,
                    1942
                ],
                "self.axes.bbox.ymin": [
                    1944
                ],
                "self.offsetText.set_position": [
                    2248,
                    2234,
                    1948,
                    1958
                ],
                "self.OFFSETTEXTPAD": [
                    2235,
                    1949,
                    1959
                ],
                "self.axes.bbox.ymax": [
                    1953,
                    2233
                ],
                "self.offsetText.set_va": [
                    1957
                ],
                "self.get_ticklabel_extents": [
                    2252,
                    1967
                ],
                "padPixels": [
                    2254,
                    1969,
                    2258,
                    1973,
                    2261,
                    1976,
                    2266,
                    1979,
                    1981,
                    2264
                ],
                "get_pad_pixels": [
                    1969,
                    2254
                ],
                "above": [
                    1979,
                    1971,
                    1973,
                    1982
                ],
                "bbox2.height": [
                    1972,
                    1973
                ],
                "below": [
                    1976,
                    1982,
                    1981,
                    1974
                ],
                "bbox.height": [
                    1976,
                    1975
                ],
                "self.get_label_position": [
                    1978,
                    2263
                ],
                "height": [
                    1979,
                    1981
                ],
                "self.label.get_window_extent": [
                    2264,
                    2266,
                    1979,
                    1981
                ],
                "self.set_ticks_position": [
                    2041,
                    2029,
                    2313,
                    2326
                ],
                "self._get_ticks_position": [
                    2337,
                    2051
                ],
                "get_view_interval": [
                    2339,
                    2053
                ],
                "set_view_interval": [
                    2339,
                    2053
                ],
                "_make_getset_interval": [
                    2341,
                    2339,
                    2053,
                    2055
                ],
                "get_data_interval": [
                    2341,
                    2055
                ],
                "set_data_interval": [
                    2341,
                    2055
                ],
                "self.axes.dataLim.minposx": [
                    2059
                ],
                "self.axes.dataLim": [
                    2080,
                    2345,
                    2059,
                    2356,
                    2070,
                    2366
                ],
                "self.axes.set_xlim": [
                    2065
                ],
                "inverted": [
                    2065,
                    2351
                ],
                "xmin": [
                    2080,
                    2077,
                    2082,
                    2069
                ],
                "xmax": [
                    2080,
                    2082,
                    2069,
                    2078
                ],
                "dataMutated": [
                    2356,
                    2358,
                    2070,
                    2072,
                    2365,
                    2079
                ],
                "self.axes.dataLim.mutatedx": [
                    2070
                ],
                "viewMutated": [
                    2081,
                    2357,
                    2358,
                    2071,
                    2072,
                    2367
                ],
                "self.axes.viewLim.mutatedx": [
                    2071
                ],
                "info.default_limits": [
                    2361,
                    2362,
                    2075,
                    2076
                ],
                "valmin": [
                    2362,
                    2363,
                    2076,
                    2077
                ],
                "valmax": [
                    2364,
                    2362,
                    2076,
                    2078
                ],
                "self.axes.dataLim.intervalx": [
                    2080
                ],
                "ends": [
                    2372,
                    2373,
                    2086,
                    2087
                ],
                "length": [
                    2378,
                    2373,
                    2093,
                    2087
                ],
                "self.axes.figure.dpi": [
                    2373,
                    2087
                ],
                "self.axes.figure": [
                    2373,
                    2087
                ],
                "tick.label1.get_size": [
                    2376,
                    2091
                ],
                "int": [
                    2378,
                    2093
                ],
                "np.floor": [
                    2378,
                    2093
                ],
                "YTick": [
                    2148
                ],
                "self.label.set_rotation_mode": [
                    2158
                ],
                "self.label.set_horizontalalignment": [
                    2159
                ],
                "self.figure._align_ylabel_grp": [
                    2176
                ],
                "axx.yaxis._update_ticks": [
                    2179
                ],
                "axx.yaxis": [
                    2179,
                    2180
                ],
                "axx.yaxis._get_tick_bboxes": [
                    2180
                ],
                "left": [
                    2209,
                    2256,
                    2258,
                    2264,
                    2267,
                    2207
                ],
                "bbox.x0": [
                    2207
                ],
                "right": [
                    2221,
                    2224,
                    2259,
                    2261,
                    2266,
                    2267
                ],
                "bbox.x1": [
                    2221
                ],
                "self.offsetText.set_ha": [
                    2247
                ],
                "bbox.width": [
                    2257,
                    2258
                ],
                "bbox2.width": [
                    2260,
                    2261
                ],
                "self.set_offset_position": [
                    2291,
                    2287
                ],
                "self.axes.dataLim.minposy": [
                    2345
                ],
                "self.axes.set_ylim": [
                    2351
                ],
                "ymin": [
                    2368,
                    2363,
                    2355,
                    2366
                ],
                "ymax": [
                    2368,
                    2355,
                    2364,
                    2366
                ],
                "self.axes.dataLim.mutatedy": [
                    2356
                ],
                "self.axes.viewLim.mutatedy": [
                    2357
                ],
                "self.axes.dataLim.intervaly": [
                    2366
                ]
            },
            "filtered_variables_in_file": {
                "_log": [
                    20
                ],
                "logging.getLogger": [
                    20
                ],
                "logging": [
                    20
                ],
                "GRIDLINE_INTERPOLATION_STEPS": [
                    165,
                    22
                ],
                "_line_AI": [
                    26,
                    27,
                    28
                ],
                "martist.ArtistInspector": [
                    26
                ],
                "martist": [
                    33,
                    612,
                    229,
                    282,
                    879,
                    658,
                    84,
                    26,
                    1116
                ],
                "mlines.Line2D": [
                    131,
                    133,
                    148,
                    153,
                    26,
                    158
                ],
                "mlines": [
                    514,
                    131,
                    133,
                    518,
                    148,
                    153,
                    26,
                    443,
                    158,
                    447
                ],
                "_line_param_names": [
                    27,
                    30
                ],
                "_line_AI.get_setters": [
                    27
                ],
                "_line_param_aliases": [
                    28,
                    30
                ],
                "d": [
                    28
                ],
                "_line_AI.aliasd.values": [
                    28
                ],
                "_line_AI.aliasd": [
                    28
                ],
                "_gridline_param_names": [
                    841,
                    377,
                    29
                ],
                "name": [
                    99,
                    328,
                    107,
                    333,
                    334,
                    111,
                    115,
                    125,
                    118,
                    122,
                    29,
                    30
                ],
                "martist.Artist": [
                    33,
                    612,
                    229,
                    879,
                    658,
                    84
                ],
                "martist.Artist.__init__": [
                    658,
                    84
                ],
                "self": [
                    2051,
                    2059,
                    2063,
                    2065,
                    2070,
                    2071,
                    2073,
                    2074,
                    2077,
                    2078,
                    2080,
                    2082,
                    2083,
                    2086,
                    2087,
                    2088,
                    2106,
                    2111,
                    2113,
                    2115,
                    2119,
                    2123,
                    2127,
                    84,
                    2133,
                    2137,
                    2139,
                    2140,
                    96,
                    97,
                    2145,
                    99,
                    2147,
                    101,
                    102,
                    2148,
                    108,
                    2158,
                    2159,
                    112,
                    2160,
                    2163,
                    2164,
                    119,
                    127,
                    2176,
                    2178,
                    134,
                    2190,
                    146,
                    2195,
                    148,
                    2197,
                    2198,
                    2200,
                    153,
                    2205,
                    158,
                    2208,
                    2209,
                    164,
                    166,
                    2214,
                    169,
                    2219,
                    2223,
                    2224,
                    177,
                    183,
                    184,
                    185,
                    186,
                    2232,
                    188,
                    2233,
                    2234,
                    2235,
                    193,
                    2244,
                    2247,
                    2248,
                    2249,
                    2252,
                    205,
                    2254,
                    211,
                    2263,
                    2264,
                    2266,
                    220,
                    223,
                    224,
                    229,
                    230,
                    231,
                    234,
                    2285,
                    2287,
                    2289,
                    243,
                    2291,
                    2293,
                    2296,
                    2299,
                    2303,
                    256,
                    257,
                    261,
                    2310,
                    2311,
                    2312,
                    2313,
                    2316,
                    2323,
                    2324,
                    2325,
                    2326,
                    280,
                    2329,
                    284,
                    285,
                    287,
                    288,
                    289,
                    2337,
                    291,
                    292,
                    2345,
                    2349,
                    302,
                    303,
                    2351,
                    2356,
                    2357,
                    2359,
                    2360,
                    315,
                    316,
                    2363,
                    2364,
                    319,
                    2366,
                    2368,
                    2369,
                    2372,
                    2373,
                    2374,
                    328,
                    329,
                    330,
                    331,
                    332,
                    336,
                    339,
                    340,
                    343,
                    344,
                    345,
                    346,
                    347,
                    348,
                    350,
                    351,
                    352,
                    353,
                    355,
                    356,
                    358,
                    361,
                    362,
                    363,
                    367,
                    368,
                    373,
                    374,
                    378,
                    380,
                    403,
                    405,
                    406,
                    408,
                    410,
                    411,
                    413,
                    415,
                    418,
                    419,
                    423,
                    424,
                    430,
                    433,
                    438,
                    440,
                    442,
                    443,
                    444,
                    445,
                    447,
                    448,
                    449,
                    453,
                    454,
                    455,
                    456,
                    457,
                    458,
                    459,
                    463,
                    476,
                    478,
                    479,
                    481,
                    483,
                    484,
                    486,
                    488,
                    491,
                    492,
                    496,
                    497,
                    503,
                    506,
                    510,
                    511,
                    513,
                    514,
                    515,
                    516,
                    518,
                    519,
                    520,
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    530,
                    534,
                    550,
                    551,
                    555,
                    564,
                    568,
                    577,
                    589,
                    593,
                    600,
                    646,
                    658,
                    659,
                    661,
                    663,
                    665,
                    666,
                    667,
                    668,
                    670,
                    671,
                    673,
                    679,
                    680,
                    681,
                    683,
                    685,
                    688,
                    689,
                    691,
                    692,
                    701,
                    704,
                    723,
                    725,
                    727,
                    728,
                    729,
                    732,
                    735,
                    738,
                    739,
                    741,
                    742,
                    743,
                    744,
                    747,
                    750,
                    751,
                    756,
                    758,
                    761,
                    764,
                    767,
                    771,
                    773,
                    774,
                    775,
                    776,
                    786,
                    790,
                    794,
                    806,
                    812,
                    813,
                    815,
                    816,
                    817,
                    820,
                    821,
                    824,
                    825,
                    829,
                    831,
                    879,
                    880,
                    882,
                    929,
                    962,
                    970,
                    971,
                    987,
                    988,
                    993,
                    1000,
                    1001,
                    1002,
                    1003,
                    1008,
                    1009,
                    1010,
                    1011,
                    1018,
                    1022,
                    1024,
                    1052,
                    1057,
                    1080,
                    1083,
                    1085,
                    1088,
                    1091,
                    1092,
                    1096,
                    1110,
                    1111,
                    1112,
                    1113,
                    1120,
                    1122,
                    1124,
                    1125,
                    1136,
                    1138,
                    1140,
                    1141,
                    1142,
                    1145,
                    1149,
                    1155,
                    1159,
                    1163,
                    1167,
                    1174,
                    1202,
                    1204,
                    1206,
                    1210,
                    1211,
                    1216,
                    1225,
                    1234,
                    1235,
                    1239,
                    1244,
                    1245,
                    1246,
                    1249,
                    1253,
                    1261,
                    1279,
                    1282,
                    1300,
                    1304,
                    1308,
                    1312,
                    1316,
                    1321,
                    1323,
                    1325,
                    1326,
                    1327,
                    1328,
                    1330,
                    1335,
                    1337,
                    1339,
                    1340,
                    1341,
                    1342,
                    1344,
                    1380,
                    1382,
                    1383,
                    1387,
                    1389,
                    1390,
                    1392,
                    1404,
                    1405,
                    1406,
                    1407,
                    1408,
                    1411,
                    1412,
                    1420,
                    1423,
                    1428,
                    1429,
                    1430,
                    1432,
                    1433,
                    1434,
                    1436,
                    1437,
                    1438,
                    1440,
                    1441,
                    1442,
                    1443,
                    1444,
                    1445,
                    1447,
                    1450,
                    1457,
                    1458,
                    1460,
                    1463,
                    1477,
                    1479,
                    1480,
                    1481,
                    1482,
                    1483,
                    1487,
                    1502,
                    1503,
                    1505,
                    1506,
                    1507,
                    1508,
                    1521,
                    1524,
                    1525,
                    1526,
                    1527,
                    1540,
                    1543,
                    1544,
                    1545,
                    1546,
                    1557,
                    1558,
                    1559,
                    1560,
                    1561,
                    1562,
                    1573,
                    1574,
                    1575,
                    1576,
                    1577,
                    1578,
                    1588,
                    1618,
                    1619,
                    1621,
                    1622,
                    1637,
                    1651,
                    1653,
                    1655,
                    1657,
                    1659,
                    1660,
                    1662,
                    1663,
                    1691,
                    1696,
                    1713,
                    1734,
                    1735,
                    1761,
                    1785,
                    1790,
                    1792,
                    1794,
                    1797,
                    1799,
                    1815,
                    1819,
                    1821,
                    1822,
                    1826,
                    1830,
                    1835,
                    1841,
                    1845,
                    1847,
                    1848,
                    1853,
                    1855,
                    1856,
                    1866,
                    1869,
                    1870,
                    1882,
                    1884,
                    1896,
                    1901,
                    1903,
                    1904,
                    1906,
                    1911,
                    1915,
                    1916,
                    1921,
                    1926,
                    1930,
                    1931,
                    1939,
                    1940,
                    1941,
                    1942,
                    1944,
                    1948,
                    1949,
                    1953,
                    1957,
                    1958,
                    1959,
                    1967,
                    1969,
                    1978,
                    1979,
                    1981,
                    2000,
                    2002,
                    2004,
                    2006,
                    2008,
                    2011,
                    2014,
                    2016,
                    2019,
                    2026,
                    2027,
                    2028,
                    2029,
                    2031,
                    2038,
                    2039,
                    2040,
                    2041,
                    2043
                ],
                "gridOn": [
                    160,
                    86,
                    89,
                    92,
                    94
                ],
                "major": [
                    1856,
                    2144,
                    130,
                    2148,
                    102,
                    1734,
                    104,
                    1740,
                    589,
                    1746,
                    87,
                    1752,
                    90,
                    1852
                ],
                "mpl.rcParams": [
                    768,
                    769,
                    137,
                    765,
                    139,
                    141,
                    766,
                    143,
                    675,
                    676,
                    677,
                    1827,
                    1828,
                    683,
                    438,
                    2120,
                    2121,
                    87,
                    89,
                    90,
                    92,
                    107,
                    111,
                    115,
                    118,
                    122,
                    125,
                    510
                ],
                "mpl": [
                    768,
                    769,
                    137,
                    765,
                    139,
                    141,
                    766,
                    143,
                    675,
                    676,
                    677,
                    1827,
                    1828,
                    683,
                    438,
                    2120,
                    2121,
                    87,
                    89,
                    90,
                    92,
                    107,
                    111,
                    115,
                    118,
                    122,
                    125,
                    510
                ],
                "self.set_figure": [
                    96,
                    661
                ],
                "axes.figure": [
                    96,
                    661
                ],
                "axes": [
                    96,
                    97,
                    665,
                    661
                ],
                "self.axes": [
                    1921,
                    2178,
                    646,
                    1926,
                    2059,
                    1911,
                    2065,
                    405,
                    534,
                    2070,
                    1944,
                    665,
                    410,
                    794,
                    1819,
                    2071,
                    2200,
                    415,
                    2080,
                    1953,
                    1826,
                    2082,
                    2205,
                    2086,
                    2087,
                    2214,
                    2345,
                    2219,
                    430,
                    2351,
                    433,
                    1841,
                    2356,
                    1845,
                    2357,
                    2233,
                    2366,
                    2111,
                    1856,
                    2368,
                    2372,
                    2373,
                    2119,
                    463,
                    725,
                    2133,
                    2137,
                    1884,
                    478,
                    97,
                    483,
                    2148,
                    488,
                    1906,
                    503,
                    1785,
                    506,
                    1790
                ],
                "self.__name__.lower": [
                    99,
                    438,
                    510
                ],
                "self.__name__": [
                    291,
                    99,
                    438,
                    510,
                    287
                ],
                "self._loc": [
                    280,
                    529,
                    458,
                    101
                ],
                "loc": [
                    524,
                    525,
                    526,
                    527,
                    528,
                    529,
                    188,
                    453,
                    454,
                    455,
                    456,
                    457,
                    458,
                    101,
                    1255,
                    1004,
                    1005,
                    1012,
                    1013
                ],
                "self._major": [
                    600,
                    589,
                    102
                ],
                "major_minor": [
                    104,
                    107,
                    118,
                    111
                ],
                "size": [
                    2376,
                    2377,
                    106,
                    107,
                    108,
                    2091,
                    2092,
                    2093,
                    2378,
                    151,
                    156
                ],
                "self._size": [
                    336,
                    347,
                    220,
                    108
                ],
                "width": [
                    110,
                    111,
                    112,
                    151,
                    2264,
                    2266,
                    156
                ],
                "self._width": [
                    112,
                    339,
                    348
                ],
                "color": [
                    114,
                    115,
                    155,
                    150
                ],
                "pad": [
                    117,
                    118,
                    119
                ],
                "self._base_pad": [
                    448,
                    261,
                    519,
                    234,
                    340,
                    119
                ],
                "labelcolor": [
                    168,
                    121,
                    122,
                    171
                ],
                "labelsize": [
                    168,
                    171,
                    124,
                    125
                ],
                "self._set_labelrotation": [
                    361,
                    127
                ],
                "labelrotation": [
                    196,
                    197,
                    199,
                    200,
                    203,
                    127
                ],
                "zorder": [
                    129,
                    131,
                    133,
                    134,
                    150,
                    155
                ],
                "mlines.Line2D.zorder": [
                    131,
                    133
                ],
                "self._zorder": [
                    134
                ],
                "grid_color": [
                    136,
                    137,
                    160
                ],
                "grid_linestyle": [
                    161,
                    138,
                    139
                ],
                "grid_linewidth": [
                    161,
                    140,
                    141
                ],
                "grid_alpha": [
                    160,
                    142,
                    143
                ],
                "grid_kw": [
                    162,
                    144,
                    376,
                    378,
                    379
                ],
                "k": [
                    354,
                    357,
                    358,
                    365,
                    366,
                    335,
                    144,
                    369,
                    373,
                    374,
                    376,
                    377,
                    379,
                    380
                ],
                "v": [
                    354,
                    357,
                    358,
                    365,
                    144,
                    369,
                    373,
                    374,
                    376,
                    379,
                    380
                ],
                "kw.items": [
                    144,
                    354,
                    376,
                    365
                ],
                "kw": [
                    144,
                    806,
                    843,
                    844,
                    333,
                    334,
                    847,
                    335,
                    336,
                    845,
                    339,
                    340,
                    846,
                    848,
                    343,
                    849,
                    850,
                    851,
                    852,
                    853,
                    854,
                    855,
                    856,
                    857,
                    858,
                    354,
                    859,
                    860,
                    861,
                    862,
                    863,
                    360,
                    361,
                    865,
                    866,
                    870,
                    365,
                    875,
                    376,
                    864
                ],
                "self.apply_tickdir": [
                    146,
                    343
                ],
                "tickdir": [
                    146,
                    437,
                    438,
                    439,
                    440,
                    509,
                    510,
                    511
                ],
                "self.tick1line": [
                    288,
                    344,
                    355,
                    453,
                    329,
                    524,
                    403,
                    148,
                    184,
                    346,
                    476,
                    223
                ],
                "tick1On": [
                    150
                ],
                "self.tick2line": [
                    288,
                    481,
                    356,
                    408,
                    454,
                    345,
                    330,
                    525,
                    184,
                    153,
                    346,
                    223
                ],
                "tick2On": [
                    155
                ],
                "self.gridline": [
                    224,
                    288,
                    164,
                    230,
                    455,
                    328,
                    486,
                    526,
                    184,
                    378,
                    413,
                    158
                ],
                "_interpolation_steps": [
                    164
                ],
                "self.gridline.get_path": [
                    164
                ],
                "self.label1": [
                    224,
                    193,
                    289,
                    419,
                    166,
                    456,
                    362,
                    331,
                    492,
                    302,
                    367,
                    527,
                    373,
                    185,
                    351
                ],
                "mtext.Text": [
                    680,
                    169,
                    673,
                    166
                ],
                "mtext": [
                    680,
                    169,
                    673,
                    166
                ],
                "np.nan": [
                    674,
                    170,
                    680,
                    167
                ],
                "np": [
                    1025,
                    674,
                    1281,
                    167,
                    680,
                    1256,
                    170,
                    2378,
                    2093,
                    1102,
                    1278
                ],
                "label1On": [
                    168
                ],
                "self.label2": [
                    224,
                    289,
                    353,
                    424,
                    169,
                    457,
                    363,
                    332,
                    368,
                    497,
                    528,
                    185,
                    315
                ],
                "label2On": [
                    171
                ],
                "meth": [
                    177,
                    179,
                    172,
                    183
                ],
                "attr": [
                    180,
                    172,
                    183
                ],
                "__get__": [
                    177
                ],
                "Tick": [
                    177,
                    393,
                    466
                ],
                "cbook.warn_deprecated": [
                    560,
                    178,
                    573
                ],
                "cbook": [
                    1537,
                    1541,
                    1170,
                    1556,
                    1688,
                    1177,
                    668,
                    1693,
                    1572,
                    805,
                    560,
                    178,
                    55,
                    1208,
                    439,
                    573,
                    191,
                    1220,
                    2245,
                    1866,
                    204,
                    1229,
                    1997,
                    984,
                    1370,
                    990,
                    1375,
                    1640,
                    2282,
                    1518,
                    2160,
                    1522,
                    761,
                    1150
                ],
                "artist": [
                    184,
                    186,
                    288,
                    290
                ],
                "self._set_artist_props": [
                    681,
                    186,
                    679
                ],
                "self.update_position": [
                    188
                ],
                "cbook._delete_parameter": [
                    55
                ],
                "cbook.deprecated": [
                    1688,
                    984,
                    1693,
                    990,
                    191
                ],
                "mode": [
                    197,
                    200,
                    202,
                    204,
                    205
                ],
                "angle": [
                    200,
                    203,
                    205,
                    198
                ],
                "cbook._check_in_list": [
                    805,
                    2282,
                    204,
                    1997,
                    439,
                    1208,
                    1375
                ],
                "self._labelrotation": [
                    362,
                    363,
                    205
                ],
                "self._tickdir": [
                    513,
                    444,
                    515,
                    211,
                    343,
                    440,
                    442,
                    220,
                    511
                ],
                "padding": [
                    220,
                    215
                ],
                "children": [
                    225,
                    223
                ],
                "martist.Artist.set_clip_path": [
                    229,
                    879
                ],
                "clippath": [
                    881,
                    229,
                    230,
                    879
                ],
                "transform": [
                    1248,
                    1057,
                    1249,
                    229,
                    230,
                    879,
                    881,
                    724,
                    725,
                    727,
                    1052,
                    1246,
                    1247
                ],
                "self.gridline.set_clip_path": [
                    230
                ],
                "self.stale": [
                    257,
                    1412,
                    1799,
                    520,
                    776,
                    1546,
                    530,
                    1562,
                    285,
                    2083,
                    292,
                    1578,
                    303,
                    316,
                    831,
                    449,
                    2369,
                    2249,
                    459,
                    1483,
                    1870,
                    729,
                    988,
                    1507,
                    2019,
                    1637,
                    231,
                    1392,
                    882,
                    2164,
                    1527,
                    1145,
                    2303
                ],
                "self.figure.dpi": [
                    2209,
                    1959,
                    234,
                    1931,
                    2224,
                    2235,
                    1916,
                    1949
                ],
                "self.figure": [
                    2176,
                    2209,
                    962,
                    1959,
                    234,
                    1931,
                    2224,
                    1882,
                    2235,
                    1916,
                    1949,
                    319
                ],
                "inside": [
                    1835,
                    1836,
                    1837,
                    2127,
                    2128,
                    2129,
                    243,
                    244,
                    245
                ],
                "info": [
                    1423,
                    1425,
                    1427,
                    1428,
                    1429,
                    1431,
                    1432,
                    1433,
                    2074,
                    1435,
                    1436,
                    1437,
                    2075,
                    1439,
                    1440,
                    1441,
                    2076,
                    1443,
                    1444,
                    1835,
                    1837,
                    2360,
                    2361,
                    2362,
                    2127,
                    2129,
                    243,
                    245
                ],
                "self._default_contains": [
                    1835,
                    243,
                    2127
                ],
                "mouseevent": [
                    1835,
                    2127,
                    1839,
                    2131,
                    243
                ],
                "self._apply_params": [
                    256
                ],
                "val": [
                    256,
                    704
                ],
                "self.get_visible": [
                    1080,
                    284,
                    1120
                ],
                "renderer.open_group": [
                    1122,
                    287
                ],
                "renderer": [
                    2180,
                    2195,
                    287,
                    290,
                    291,
                    1070,
                    1967,
                    1072,
                    1979,
                    1085,
                    1981,
                    1089,
                    1095,
                    972,
                    2252,
                    2264,
                    2266,
                    1886,
                    1122,
                    1126,
                    1129,
                    1901,
                    1136,
                    1138,
                    1142,
                    1144
                ],
                "self.get_gid": [
                    1122,
                    287
                ],
                "artist.draw": [
                    290
                ],
                "renderer.close_group": [
                    1144,
                    291
                ],
                "martist.allow_rasterization": [
                    282,
                    1116
                ],
                "self.label1.set_text": [
                    302
                ],
                "s": [
                    315,
                    302
                ],
                "set_label": [
                    305
                ],
                "set_label1": [
                    305
                ],
                "self.label2.set_text": [
                    315
                ],
                "a.set_figure": [
                    962,
                    319
                ],
                "a": [
                    960,
                    962,
                    1095,
                    1096,
                    1097,
                    2349,
                    2063,
                    2351,
                    2065,
                    319
                ],
                "target": [
                    328,
                    334
                ],
                "target.set_visible": [
                    334
                ],
                "kw.pop": [
                    864,
                    866,
                    361,
                    844,
                    334,
                    846,
                    336,
                    848,
                    850,
                    339,
                    340,
                    852,
                    854,
                    343,
                    856,
                    858,
                    860,
                    862
                ],
                "self.tick1line.set_marker": [
                    344
                ],
                "self._tickmarkers": [
                    514,
                    484,
                    516,
                    518,
                    479,
                    443,
                    406,
                    344,
                    345,
                    411,
                    445,
                    447
                ],
                "self.tick2line.set_marker": [
                    345
                ],
                "line": [
                    346,
                    347,
                    348
                ],
                "line.set_markersize": [
                    347
                ],
                "line.set_markeredgewidth": [
                    348
                ],
                "trans": [
                    352,
                    353,
                    418,
                    421,
                    423,
                    426,
                    491,
                    494,
                    496,
                    1841,
                    1842,
                    499,
                    2133,
                    2134,
                    350,
                    351
                ],
                "self._get_text1_transform": [
                    418,
                    491,
                    350
                ],
                "self.label1.set_transform": [
                    351
                ],
                "self._get_text2_transform": [
                    352,
                    496,
                    423
                ],
                "self.label2.set_transform": [
                    353
                ],
                "tick_kw": [
                    1856,
                    2145,
                    354,
                    355,
                    356,
                    357,
                    2147,
                    2148,
                    1853,
                    1855
                ],
                "self.tick1line.set": [
                    476,
                    355,
                    403
                ],
                "self.tick2line.set": [
                    408,
                    481,
                    356
                ],
                "tick_kw.items": [
                    357
                ],
                "self.label1.set": [
                    362,
                    419,
                    492,
                    367
                ],
                "self.label2.set": [
                    368,
                    497,
                    363,
                    424
                ],
                "label_kw": [
                    368,
                    369,
                    365,
                    367
                ],
                "label_kw.items": [
                    369
                ],
                "self.gridline.set": [
                    378,
                    413,
                    486
                ],
                "grid_kw.items": [
                    379
                ],
                "__init__": [
                    401,
                    474,
                    1812,
                    2103
                ],
                "args": [
                    401,
                    474,
                    1812,
                    2103
                ],
                "kwargs": [
                    1376,
                    738,
                    1506,
                    401,
                    1812,
                    2103,
                    1368,
                    474,
                    1627,
                    1630
                ],
                "self.axes.get_xaxis_transform": [
                    410,
                    405,
                    415
                ],
                "va": [
                    418,
                    421,
                    423,
                    426,
                    491,
                    494,
                    496,
                    499
                ],
                "ha": [
                    418,
                    421,
                    423,
                    426,
                    491,
                    494,
                    496,
                    499
                ],
                "self.axes.get_xaxis_text1_transform": [
                    430
                ],
                "self._pad": [
                    448,
                    519,
                    430,
                    433,
                    503,
                    506
                ],
                "self.axes.get_xaxis_text2_transform": [
                    433
                ],
                "mlines.TICKUP": [
                    443,
                    447
                ],
                "mlines.TICKDOWN": [
                    443,
                    447
                ],
                "self.get_tick_padding": [
                    448,
                    519
                ],
                "self.tick1line.set_xdata": [
                    453
                ],
                "self.tick2line.set_xdata": [
                    454
                ],
                "self.gridline.set_xdata": [
                    455
                ],
                "self.label1.set_x": [
                    456
                ],
                "self.label2.set_x": [
                    457
                ],
                "self.axes.viewLim.intervalx": [
                    2082,
                    463
                ],
                "self.axes.viewLim": [
                    2368,
                    2082,
                    463,
                    2357,
                    534,
                    2071
                ],
                "self.axes.get_yaxis_transform": [
                    488,
                    483,
                    478
                ],
                "self.axes.get_yaxis_text1_transform": [
                    503
                ],
                "self.axes.get_yaxis_text2_transform": [
                    506
                ],
                "mlines.TICKRIGHT": [
                    514,
                    518
                ],
                "mlines.TICKLEFT": [
                    514,
                    518
                ],
                "self.tick1line.set_ydata": [
                    524
                ],
                "self.tick2line.set_ydata": [
                    525
                ],
                "self.gridline.set_ydata": [
                    526
                ],
                "self.label1.set_y": [
                    527
                ],
                "self.label2.set_y": [
                    528
                ],
                "self.axes.viewLim.intervaly": [
                    2368,
                    534
                ],
                "self._locator": [
                    555,
                    564,
                    550
                ],
                "self._formatter": [
                    568,
                    577,
                    551
                ],
                "locator": [
                    1572,
                    1574,
                    1576,
                    1577,
                    557,
                    559,
                    1556,
                    564,
                    1558,
                    1560,
                    1561
                ],
                "mticker.Locator": [
                    1556,
                    1572,
                    559
                ],
                "mticker": [
                    1537,
                    1538,
                    1540,
                    1572,
                    1518,
                    1519,
                    559,
                    1521,
                    1618,
                    1556,
                    1621,
                    1659,
                    572,
                    1662
                ],
                "locator.setter": [
                    557
                ],
                "formatter": [
                    577,
                    1537,
                    1538,
                    1539,
                    1544,
                    1545,
                    1518,
                    1519,
                    1520,
                    1525,
                    1526,
                    570,
                    572
                ],
                "mticker.Formatter": [
                    1537,
                    572,
                    1518
                ],
                "formatter.setter": [
                    570
                ],
                "instance": [
                    608,
                    609,
                    592,
                    601,
                    602,
                    603,
                    604,
                    606,
                    607
                ],
                "instance.majorTicks": [
                    601,
                    603,
                    604
                ],
                "tick": [
                    1025,
                    1282,
                    1168,
                    1169,
                    1175,
                    1176,
                    1050,
                    1055,
                    1057,
                    1279,
                    1064,
                    2088,
                    2091,
                    1325,
                    1070,
                    1071,
                    1072,
                    1073,
                    1326,
                    1327,
                    1328,
                    821,
                    822,
                    2376,
                    825,
                    826,
                    1339,
                    1340,
                    1341,
                    1342,
                    1217,
                    1218,
                    1219,
                    2374,
                    1736,
                    1737,
                    1226,
                    1227,
                    1228,
                    1738,
                    1739,
                    1740,
                    1742,
                    1743,
                    1744,
                    1745,
                    1746,
                    1748,
                    1749,
                    1750,
                    1624,
                    1751,
                    602,
                    603,
                    1626,
                    1627,
                    1629,
                    607,
                    608,
                    1630,
                    1632,
                    1633,
                    1634,
                    1635,
                    1128,
                    1129,
                    1004,
                    1005,
                    1006,
                    1007,
                    1752,
                    1012,
                    1013,
                    1014,
                    1015,
                    1151
                ],
                "instance._get_tick": [
                    602,
                    607
                ],
                "instance.majorTicks.append": [
                    603
                ],
                "instance.minorTicks": [
                    608,
                    609,
                    606
                ],
                "instance.minorTicks.append": [
                    608
                ],
                "OFFSETTEXTPAD": [
                    642
                ],
                "self.axes.transAxes.transform": [
                    2372,
                    2086,
                    646,
                    1845,
                    2137
                ],
                "self.axes.transAxes": [
                    1826,
                    2372,
                    646,
                    2086,
                    2119,
                    1841,
                    725,
                    1845,
                    2133,
                    2137,
                    1819,
                    2111
                ],
                "self._remove_overlapping_locs": [
                    704,
                    659,
                    701
                ],
                "self.isDefault_label": [
                    1443,
                    1445,
                    1502,
                    663
                ],
                "self.major": [
                    1312,
                    1696,
                    1092,
                    1559,
                    1001,
                    1560,
                    1003,
                    1691,
                    1521,
                    1428,
                    1141,
                    1525,
                    1239,
                    1304,
                    1436,
                    666,
                    1558,
                    1244
                ],
                "Ticker": [
                    666,
                    667
                ],
                "self.minor": [
                    1440,
                    1316,
                    1540,
                    1574,
                    1575,
                    1544,
                    1576,
                    1009,
                    1011,
                    1432,
                    667,
                    1308,
                    1245
                ],
                "self.callbacks": [
                    761,
                    1482,
                    668,
                    1481
                ],
                "cbook.CallbackRegistry": [
                    761,
                    668
                ],
                "self._autolabelpos": [
                    1896,
                    2190,
                    723,
                    670
                ],
                "self._smart_bounds": [
                    993,
                    987,
                    1022,
                    671
                ],
                "self.label": [
                    1155,
                    1930,
                    1300,
                    2197,
                    1815,
                    2208,
                    673,
                    679,
                    2223,
                    2106,
                    1979,
                    1981,
                    1096,
                    1866,
                    727,
                    728,
                    2264,
                    2266,
                    1503,
                    1505,
                    1506,
                    1508,
                    750,
                    1903,
                    2158,
                    2159,
                    1138,
                    2160,
                    756,
                    1915
                ],
                "self.offsetText": [
                    1159,
                    1939,
                    1948,
                    1822,
                    1957,
                    1958,
                    680,
                    681,
                    2232,
                    2234,
                    829,
                    2115,
                    1092,
                    2244,
                    2247,
                    1096,
                    2248,
                    750,
                    1141,
                    1142
                ],
                "self.labelpad": [
                    2209,
                    683,
                    1931,
                    2224,
                    1916
                ],
                "self.pickradius": [
                    1163,
                    685,
                    1588,
                    1847,
                    1848,
                    2139,
                    2140
                ],
                "pickradius": [
                    1588,
                    685
                ],
                "self._major_tick_kw": [
                    2145,
                    2310,
                    2311,
                    2312,
                    2026,
                    2027,
                    812,
                    813,
                    2028,
                    688,
                    2323,
                    820,
                    2324,
                    2038,
                    2039,
                    2040,
                    2325,
                    1853
                ],
                "self._minor_tick_kw": [
                    2147,
                    815,
                    816,
                    689,
                    824,
                    1855
                ],
                "self.cla": [
                    691
                ],
                "self._set_scale": [
                    692,
                    758
                ],
                "majorTicks": [
                    697
                ],
                "_LazyTickList": [
                    697,
                    698
                ],
                "minorTicks": [
                    698
                ],
                "remove_overlapping_locs": [
                    706
                ],
                "get_remove_overlapping_locs": [
                    707
                ],
                "set_remove_overlapping_locs": [
                    707
                ],
                "self.label.set_transform": [
                    727
                ],
                "self.label.set_position": [
                    2208,
                    1930,
                    2223,
                    728,
                    1915
                ],
                "x": [
                    1931,
                    1939,
                    2197,
                    1949,
                    1959,
                    1454,
                    1455,
                    1839,
                    1458,
                    1842,
                    1461,
                    1463,
                    2232,
                    1466,
                    2235,
                    2244,
                    2245,
                    2248,
                    2131,
                    2134,
                    728,
                    2139,
                    2140,
                    1903,
                    1916
                ],
                "y": [
                    2209,
                    2244,
                    2248,
                    1839,
                    1903,
                    2224,
                    1842,
                    1848,
                    1939,
                    2131,
                    2134,
                    1847,
                    728,
                    2197,
                    2232
                ],
                "self._scale.get_transform": [
                    732,
                    1246
                ],
                "self._scale": [
                    738,
                    739,
                    747,
                    732,
                    1246,
                    735
                ],
                "self._scale.name": [
                    735
                ],
                "mscale.scale_factory": [
                    738
                ],
                "mscale": [
                    738
                ],
                "value": [
                    738,
                    987
                ],
                "self._scale.set_default_locators_and_formatters": [
                    739
                ],
                "self.isDefault_majloc": [
                    1557,
                    1428,
                    741,
                    1430
                ],
                "self.isDefault_minloc": [
                    1432,
                    1434,
                    1573,
                    742
                ],
                "self.isDefault_majfmt": [
                    1436,
                    1524,
                    1438,
                    743
                ],
                "self.isDefault_minfmt": [
                    744,
                    1442,
                    1440,
                    1543
                ],
                "self._scale.limit_range_for_scale": [
                    747
                ],
                "vmin": [
                    1794,
                    747,
                    1797,
                    1790
                ],
                "vmax": [
                    1794,
                    747,
                    1797,
                    1790
                ],
                "self.get_minpos": [
                    747
                ],
                "self.get_major_ticks": [
                    1216,
                    1282,
                    1002,
                    1167,
                    751,
                    1622,
                    1149,
                    1663
                ],
                "self.get_minor_ticks": [
                    1225,
                    751,
                    1010,
                    1619,
                    1174,
                    1660,
                    1279
                ],
                "self.label.set_text": [
                    756,
                    1503
                ],
                "self._gridOnMajor": [
                    1387,
                    1389,
                    1390,
                    1327,
                    764
                ],
                "self._gridOnMinor": [
                    1380,
                    1382,
                    1383,
                    1341,
                    767
                ],
                "self.reset_ticks": [
                    817,
                    771
                ],
                "self.converter": [
                    773,
                    1420,
                    1423,
                    2073,
                    2074,
                    2077,
                    2078,
                    1450,
                    1457,
                    1458,
                    1460,
                    2359,
                    1463,
                    2360,
                    2363,
                    2364,
                    1404,
                    1405,
                    1406
                ],
                "self.units": [
                    1477,
                    774,
                    1479,
                    1450,
                    1423,
                    1487,
                    1463,
                    2360,
                    2074,
                    2363,
                    2364,
                    2077,
                    2078,
                    1407
                ],
                "self.set_units": [
                    1408,
                    775
                ],
                "self.majorTicks": [
                    1734,
                    1323,
                    1326,
                    2254,
                    880,
                    1328,
                    786,
                    1330,
                    1969,
                    821,
                    1110,
                    1111
                ],
                "self.minorTicks": [
                    1113,
                    1344,
                    1337,
                    1735,
                    880,
                    790,
                    1112,
                    825,
                    1340,
                    1342
                ],
                "self.set_clip_path": [
                    794
                ],
                "self.axes.patch": [
                    794
                ],
                "which": [
                    1378,
                    805,
                    1385,
                    811,
                    814,
                    1200,
                    1201,
                    819,
                    1203,
                    1205,
                    823,
                    1208,
                    1374,
                    1375
                ],
                "kwtrans": [
                    806,
                    813,
                    816,
                    820,
                    822,
                    824,
                    826,
                    828,
                    829,
                    842,
                    844,
                    846,
                    848,
                    850,
                    852,
                    854,
                    856,
                    858,
                    860,
                    862,
                    864,
                    867,
                    868,
                    875,
                    876
                ],
                "self._translate_tick_kw": [
                    806
                ],
                "reset": [
                    810
                ],
                "self._major_tick_kw.clear": [
                    812
                ],
                "self._major_tick_kw.update": [
                    820,
                    813
                ],
                "self._minor_tick_kw.clear": [
                    815
                ],
                "self._minor_tick_kw.update": [
                    816,
                    824
                ],
                "tick._apply_params": [
                    826,
                    822
                ],
                "self.offsetText.set_color": [
                    829
                ],
                "kwkeys": [
                    874,
                    836,
                    871
                ],
                "c": [
                    866,
                    867,
                    868
                ],
                "key": [
                    874,
                    870,
                    871
                ],
                "kwtrans.update": [
                    875
                ],
                "child": [
                    880,
                    881
                ],
                "child.set_clip_path": [
                    881
                ],
                "low": [
                    929,
                    930
                ],
                "high": [
                    929,
                    930
                ],
                "self.get_view_interval": [
                    929,
                    1249,
                    2349,
                    2063,
                    1653,
                    1018
                ],
                "ticks_to_draw": [
                    1089,
                    2179,
                    1124,
                    1125,
                    2180,
                    1064,
                    1128,
                    970,
                    971,
                    1066,
                    1886,
                    1083,
                    1885,
                    1054
                ],
                "self._update_ticks": [
                    970,
                    1083,
                    1124
                ],
                "ticklabelBoxes": [
                    1088,
                    1091,
                    1125,
                    1098,
                    971,
                    974,
                    975,
                    1140
                ],
                "ticklabelBoxes2": [
                    1088,
                    1091,
                    1125,
                    971,
                    1099,
                    978,
                    979,
                    1140
                ],
                "self._get_tick_bboxes": [
                    1088,
                    971,
                    1125
                ],
                "bbox": [
                    1927,
                    1928,
                    1946,
                    1947,
                    2206,
                    2207,
                    1955,
                    1956,
                    2220,
                    2221,
                    1967,
                    1975,
                    1976,
                    2252,
                    975,
                    977,
                    2257,
                    2258,
                    982,
                    1912,
                    1913
                ],
                "mtransforms.Bbox.union": [
                    1955,
                    1927,
                    2220,
                    975,
                    1104,
                    979,
                    1912,
                    1946,
                    2206
                ],
                "mtransforms.Bbox": [
                    1955,
                    1927,
                    2220,
                    975,
                    1104,
                    977,
                    979,
                    981,
                    1912,
                    1946,
                    2206
                ],
                "mtransforms": [
                    1927,
                    1818,
                    1819,
                    1946,
                    2206,
                    1825,
                    1826,
                    1955,
                    1063,
                    2220,
                    2110,
                    2111,
                    2118,
                    2119,
                    975,
                    1104,
                    977,
                    979,
                    981,
                    1912
                ],
                "mtransforms.Bbox.from_extents": [
                    977,
                    981
                ],
                "bbox2": [
                    2252,
                    1967,
                    979,
                    1972,
                    981,
                    982,
                    1973,
                    2260,
                    2261
                ],
                "major_locs": [
                    1248,
                    1000,
                    1001,
                    1002,
                    1003,
                    1004,
                    1244
                ],
                "self.get_majorticklocs": [
                    1000,
                    1321,
                    1261
                ],
                "major_labels": [
                    1001,
                    1004
                ],
                "self.major.formatter.format_ticks": [
                    1001
                ],
                "self.major.formatter": [
                    1312,
                    1092,
                    1001,
                    1003,
                    1141,
                    1525,
                    1559,
                    1560,
                    1436
                ],
                "major_ticks": [
                    1016,
                    1002,
                    1004
                ],
                "self.major.formatter.set_locs": [
                    1003
                ],
                "label": [
                    2309,
                    2311,
                    2316,
                    2322,
                    2324,
                    2329,
                    1503,
                    2025,
                    2027,
                    1004,
                    1006,
                    1007,
                    2031,
                    1015,
                    1012,
                    2037,
                    1014,
                    2039,
                    2043
                ],
                "tick.update_position": [
                    1013,
                    1005
                ],
                "tick.set_label1": [
                    1006,
                    1014
                ],
                "tick.set_label2": [
                    1015,
                    1007
                ],
                "minor_locs": [
                    1254,
                    1255,
                    1257,
                    1008,
                    1009,
                    1010,
                    1011,
                    1012,
                    1245,
                    1247
                ],
                "self.get_minorticklocs": [
                    1008,
                    1261,
                    1335
                ],
                "minor_labels": [
                    1009,
                    1012
                ],
                "self.minor.formatter.format_ticks": [
                    1009
                ],
                "self.minor.formatter": [
                    1440,
                    1316,
                    1575,
                    1544,
                    1576,
                    1009,
                    1011
                ],
                "minor_ticks": [
                    1016,
                    1010,
                    1012
                ],
                "self.minor.formatter.set_locs": [
                    1011
                ],
                "ticks": [
                    1025,
                    1167,
                    1168,
                    1169,
                    1174,
                    1175,
                    1176,
                    1050,
                    1055,
                    1662,
                    1071,
                    1663,
                    1073,
                    1216,
                    1217,
                    1225,
                    1226,
                    1619,
                    1622,
                    1624,
                    1651,
                    1652,
                    1655,
                    1016,
                    1657,
                    1659,
                    1660,
                    1149,
                    1022,
                    1151
                ],
                "view_low": [
                    1026,
                    1028,
                    1052,
                    1018,
                    1019,
                    1020
                ],
                "view_high": [
                    1052,
                    1038,
                    1040,
                    1018,
                    1019,
                    1020
                ],
                "data_low": [
                    1024,
                    1026,
                    1031
                ],
                "data_high": [
                    1024,
                    1043,
                    1038
                ],
                "self.get_data_interval": [
                    1024
                ],
                "locs": [
                    1025,
                    1031,
                    1037,
                    1043,
                    1049
                ],
                "np.sort": [
                    1025
                ],
                "tick.get_loc": [
                    1025,
                    1050,
                    1057
                ],
                "ilow": [
                    1034,
                    1050,
                    1028,
                    1037
                ],
                "good_locs": [
                    1031,
                    1032,
                    1034,
                    1043,
                    1044,
                    1046
                ],
                "ihigh": [
                    1040,
                    1049,
                    1050,
                    1046
                ],
                "interval_t": [
                    1052,
                    1063
                ],
                "self.get_transform": [
                    1057,
                    1052
                ],
                "loc_t": [
                    1057,
                    1063
                ],
                "mtransforms._interval_contains_close": [
                    1063
                ],
                "ticks_to_draw.append": [
                    1064
                ],
                "tick.label1.get_window_extent": [
                    1070
                ],
                "tick.label1": [
                    1632,
                    1633,
                    2376,
                    1738,
                    2091,
                    1070,
                    1071,
                    1168,
                    1745,
                    1750,
                    1175,
                    1626,
                    1627
                ],
                "tick.label1.get_visible": [
                    1632,
                    1738,
                    1071,
                    1168,
                    1745,
                    1750,
                    1175
                ],
                "tick.label2.get_window_extent": [
                    1072
                ],
                "tick.label2": [
                    1634,
                    1635,
                    1739,
                    1072,
                    1073,
                    1169,
                    1744,
                    1751,
                    1176,
                    1629,
                    1630
                ],
                "tick.label2.get_visible": [
                    1634,
                    1739,
                    1744,
                    1073,
                    1169,
                    1751,
                    1176
                ],
                "self._update_label_position": [
                    1136,
                    1085
                ],
                "self._update_offset_text_position": [
                    1091,
                    1140
                ],
                "self.offsetText.set_text": [
                    1092,
                    1141
                ],
                "self.major.formatter.get_offset": [
                    1092,
                    1141
                ],
                "bboxes": [
                    1889,
                    2181,
                    1094,
                    2183,
                    1101,
                    1901,
                    1103,
                    1104,
                    1943,
                    2195,
                    1879,
                    1912,
                    1946,
                    2173,
                    2206,
                    1887
                ],
                "a.get_window_extent": [
                    1095
                ],
                "a.get_visible": [
                    1097
                ],
                "b": [
                    2137,
                    1379,
                    1382,
                    1386,
                    1101,
                    1102,
                    1389,
                    2063,
                    2065,
                    2349,
                    2351,
                    1845,
                    1847,
                    1369,
                    1373
                ],
                "b.width": [
                    1102
                ],
                "np.inf": [
                    1102
                ],
                "b.height": [
                    1102
                ],
                "values": [
                    1113,
                    1114,
                    1109,
                    1111
                ],
                "values.append": [
                    1113,
                    1111
                ],
                "get_tick_padding": [
                    1113,
                    1111
                ],
                "tick.draw": [
                    1129
                ],
                "self.label.draw": [
                    1138
                ],
                "self.offsetText.draw": [
                    1142
                ],
                "cbook.silent_list": [
                    1220,
                    1229,
                    1170,
                    1177,
                    1150
                ],
                "tick.gridline": [
                    1341,
                    1327,
                    1151
                ],
                "labels1": [
                    1168,
                    1177,
                    1170,
                    1175
                ],
                "labels2": [
                    1176,
                    1169,
                    1170,
                    1177
                ],
                "self.get_minorticklabels": [
                    1210,
                    1202,
                    1206
                ],
                "self.get_majorticklabels": [
                    1211,
                    1204,
                    1206
                ],
                "minor": [
                    1735,
                    1740,
                    1261,
                    1617,
                    1233,
                    1746,
                    1752,
                    1209,
                    1658,
                    1277
                ],
                "lines": [
                    1218,
                    1219,
                    1220,
                    1224,
                    1227,
                    1228,
                    1229,
                    1215
                ],
                "lines.append": [
                    1218,
                    1219,
                    1228,
                    1227
                ],
                "tick.tick1line": [
                    1218,
                    1736,
                    1227,
                    1743,
                    1748
                ],
                "tick.tick2line": [
                    1219,
                    1737,
                    1228,
                    1742,
                    1749
                ],
                "self.get_minorticklines": [
                    1234
                ],
                "self.get_majorticklines": [
                    1235
                ],
                "self.major.locator": [
                    1696,
                    1521,
                    1428,
                    1558,
                    1239,
                    1304,
                    1691,
                    1244
                ],
                "self.minor.locator": [
                    1540,
                    1574,
                    1432,
                    1308,
                    1245
                ],
                "tr_minor_locs": [
                    1255,
                    1247
                ],
                "transform.transform": [
                    1248,
                    1249,
                    1247
                ],
                "tr_major_locs": [
                    1248,
                    1256
                ],
                "lo": [
                    1249,
                    1252
                ],
                "hi": [
                    1249,
                    1252
                ],
                "tol": [
                    1256,
                    1252
                ],
                "self.remove_overlapping_locs": [
                    1253
                ],
                "tr_loc": [
                    1256,
                    1255
                ],
                "np.isclose": [
                    1256
                ],
                "np.array": [
                    1281,
                    1278
                ],
                "tick._tickdir": [
                    1282,
                    1279
                ],
                "src": [
                    1290,
                    1292,
                    1293,
                    1294,
                    1295,
                    1296
                ],
                "dest": [
                    1290,
                    1292,
                    1293,
                    1294,
                    1295,
                    1296
                ],
                "dest.label1.update_from": [
                    1292
                ],
                "dest.label1": [
                    1292
                ],
                "src.label1": [
                    1292
                ],
                "dest.label2.update_from": [
                    1293
                ],
                "dest.label2": [
                    1293
                ],
                "src.label2": [
                    1293
                ],
                "dest.tick1line.update_from": [
                    1294
                ],
                "dest.tick1line": [
                    1294
                ],
                "src.tick1line": [
                    1294
                ],
                "dest.tick2line.update_from": [
                    1295
                ],
                "dest.tick2line": [
                    1295
                ],
                "src.tick2line": [
                    1295
                ],
                "dest.gridline.update_from": [
                    1296
                ],
                "dest.gridline": [
                    1296
                ],
                "src.gridline": [
                    1296
                ],
                "self.label.get_text": [
                    1300
                ],
                "numticks": [
                    1344,
                    1320,
                    1321,
                    1323,
                    1330,
                    1334,
                    1335,
                    1337
                ],
                "self._get_tick": [
                    2088,
                    1339,
                    1325,
                    2374
                ],
                "self.majorTicks.append": [
                    1326
                ],
                "tick.gridline.set_visible": [
                    1341,
                    1327
                ],
                "self._copy_tick_props": [
                    1328,
                    1342
                ],
                "self.minorTicks.append": [
                    1340
                ],
                "cbook._warn_external": [
                    1370,
                    1522,
                    1541
                ],
                "which.lower": [
                    1374
                ],
                "gridkw": [
                    1376,
                    1384,
                    1391
                ],
                "item": [
                    1376
                ],
                "kwargs.items": [
                    1376
                ],
                "self.set_tick_params": [
                    2296,
                    1383,
                    2043,
                    2316,
                    2285,
                    1390,
                    2031,
                    2000,
                    2289,
                    2299,
                    2004,
                    2293,
                    2008,
                    2329,
                    2011,
                    2014
                ],
                "converter": [
                    1400,
                    1401,
                    1404,
                    1405
                ],
                "munits.registry.get_converter": [
                    1400,
                    1458
                ],
                "munits.registry": [
                    1400,
                    1458
                ],
                "munits": [
                    1400,
                    1465,
                    1458,
                    1454
                ],
                "data": [
                    1400,
                    1406
                ],
                "neednew": [
                    1410,
                    1404
                ],
                "default": [
                    1408,
                    1406,
                    1407
                ],
                "self.converter.default_units": [
                    1406
                ],
                "self._update_axisinfo": [
                    1480,
                    1411
                ],
                "self.converter.axisinfo": [
                    2360,
                    2074,
                    1423
                ],
                "info.majloc": [
                    1427,
                    1428,
                    1429
                ],
                "self.set_major_locator": [
                    1429,
                    1662
                ],
                "info.minloc": [
                    1432,
                    1433,
                    1431
                ],
                "self.set_minor_locator": [
                    1433,
                    1659
                ],
                "info.majfmt": [
                    1435,
                    1436,
                    1437
                ],
                "self.set_major_formatter": [
                    1621,
                    1437
                ],
                "info.minfmt": [
                    1440,
                    1441,
                    1439
                ],
                "self.set_minor_formatter": [
                    1441,
                    1618
                ],
                "info.label": [
                    1443,
                    1444
                ],
                "self.set_label_text": [
                    1444
                ],
                "self.set_default_intervals": [
                    1447
                ],
                "munits._is_natively_supported": [
                    1454
                ],
                "ret": [
                    1633,
                    1463,
                    1635,
                    1638,
                    1623,
                    1467
                ],
                "self.converter.convert": [
                    1463,
                    2363,
                    2364,
                    2077,
                    2078
                ],
                "munits.ConversionError": [
                    1465
                ],
                "e": [
                    1466
                ],
                "u": [
                    1477,
                    1479
                ],
                "self.callbacks.process": [
                    1481,
                    1482
                ],
                "fontdict": [
                    1504,
                    1505
                ],
                "self.label.update": [
                    1505,
                    1506
                ],
                "cbook._check_isinstance": [
                    1572,
                    1537,
                    1556,
                    1518
                ],
                "mticker.FixedFormatter": [
                    1538,
                    1621,
                    1618,
                    1519
                ],
                "formatter.seq": [
                    1520,
                    1539
                ],
                "mticker.FixedLocator": [
                    1521,
                    1659,
                    1540,
                    1662
                ],
                "formatter.set_axis": [
                    1545,
                    1526
                ],
                "self.major.formatter._set_locator": [
                    1560
                ],
                "locator.set_axis": [
                    1561,
                    1577
                ],
                "self.minor.formatter._set_locator": [
                    1576
                ],
                "ticklabels": [
                    1615,
                    1616,
                    1618,
                    1621,
                    1624
                ],
                "t": [
                    1615,
                    1616,
                    1845,
                    1848,
                    2137
                ],
                "t.get_text": [
                    1615
                ],
                "tick_label": [
                    1624,
                    1626,
                    1629
                ],
                "tick.label1.set_text": [
                    1626
                ],
                "tick.label1.update": [
                    1627
                ],
                "tick.label2.set_text": [
                    1629
                ],
                "tick.label2.update": [
                    1630
                ],
                "ret.append": [
                    1633,
                    1635
                ],
                "self.convert_units": [
                    1651
                ],
                "xleft": [
                    1653,
                    1654
                ],
                "xright": [
                    1653,
                    1654
                ],
                "self.set_view_interval": [
                    1657,
                    1655
                ],
                "cbook._make_keyword_only": [
                    1640
                ],
                "self.major.locator.pan": [
                    1691
                ],
                "numsteps": [
                    1691
                ],
                "self.major.locator.zoom": [
                    1696
                ],
                "direction": [
                    1696
                ],
                "tz": [
                    1712,
                    1713,
                    1710
                ],
                "dateutil.tz.gettz": [
                    1712
                ],
                "dateutil.tz": [
                    1712
                ],
                "dateutil": [
                    1712
                ],
                "self.update_units": [
                    1713
                ],
                "datetime.datetime": [
                    1713
                ],
                "datetime": [
                    1713
                ],
                "tick.tick1line.get_visible": [
                    1736,
                    1748,
                    1743
                ],
                "tick.tick2line.get_visible": [
                    1737,
                    1749,
                    1742
                ],
                "self.label_position": [
                    1761,
                    2113,
                    1869,
                    1904,
                    2163,
                    2198,
                    1821
                ],
                "lim_name": [
                    1785,
                    1790
                ],
                "attr_name": [
                    1785,
                    1790
                ],
                "ignore": [
                    1789
                ],
                "oldmin": [
                    1792,
                    1793,
                    1794,
                    1797
                ],
                "oldmax": [
                    1792,
                    1793,
                    1794,
                    1797
                ],
                "getter": [
                    1792,
                    1801,
                    1804
                ],
                "setter": [
                    1794,
                    1802,
                    1804,
                    1797
                ],
                "getter.__name__": [
                    1801
                ],
                "method_name": [
                    1801,
                    1802
                ],
                "setter.__name__": [
                    1802
                ],
                "Axis": [
                    2098,
                    1807
                ],
                "axis_name": [
                    1809,
                    2100
                ],
                "self.label.set": [
                    2106,
                    1815
                ],
                "mtransforms.blended_transform_factory": [
                    2118,
                    1825,
                    1818,
                    2110
                ],
                "mtransforms.IdentityTransform": [
                    1826,
                    1819,
                    2119,
                    2111
                ],
                "self.offsetText.set": [
                    2115,
                    1822
                ],
                "self.offset_text_position": [
                    2123,
                    1830
                ],
                "mouseevent.x": [
                    2131,
                    1839
                ],
                "mouseevent.y": [
                    2131,
                    1839
                ],
                "self.axes.transAxes.inverted": [
                    1841,
                    2133
                ],
                "xaxes": [
                    2134,
                    1842,
                    1846
                ],
                "yaxes": [
                    1842,
                    2138,
                    2134
                ],
                "trans.transform": [
                    1842,
                    2134
                ],
                "l": [
                    2137,
                    2139,
                    1845
                ],
                "r": [
                    2137,
                    2140,
                    1845
                ],
                "inaxis": [
                    1849,
                    2138,
                    2141,
                    1846
                ],
                "XTick": [
                    1856
                ],
                "self.label.set_verticalalignment": [
                    2160,
                    1866
                ],
                "cbook._check_getitem": [
                    2160,
                    1866,
                    2245
                ],
                "position": [
                    2245,
                    2247,
                    1868,
                    1869,
                    1998,
                    1999,
                    2003,
                    2007,
                    2010,
                    2013,
                    2283,
                    2284,
                    2287,
                    2288,
                    2162,
                    2163,
                    2291,
                    2292,
                    2295,
                    2298
                ],
                "bboxes2": [
                    1888,
                    1889,
                    1952,
                    1955,
                    2182,
                    1927,
                    2183,
                    2220,
                    1901,
                    2195,
                    1880,
                    2174
                ],
                "grp": [
                    2176,
                    1882,
                    1884,
                    2178
                ],
                "self.figure._align_xlabel_grp": [
                    1882
                ],
                "nn": [
                    1884
                ],
                "axx": [
                    2178,
                    2179,
                    2180,
                    1884,
                    1885,
                    1886
                ],
                "grp.get_siblings": [
                    2178,
                    1884
                ],
                "axx.xaxis._update_ticks": [
                    1885
                ],
                "axx.xaxis": [
                    1885,
                    1886
                ],
                "tlb": [
                    2180,
                    2181,
                    1886,
                    1887
                ],
                "tlb2": [
                    1888,
                    2182,
                    2180,
                    1886
                ],
                "axx.xaxis._get_tick_bboxes": [
                    1886
                ],
                "bboxes.extend": [
                    2181,
                    1887
                ],
                "bboxes2.extend": [
                    1888,
                    2182
                ],
                "self._get_tick_boxes_siblings": [
                    2195,
                    1901
                ],
                "self.label.get_position": [
                    2197,
                    1903
                ],
                "spine": [
                    1921,
                    1922,
                    1923,
                    2214,
                    2215,
                    2216,
                    1906,
                    1907,
                    1908,
                    2200,
                    2201,
                    2202
                ],
                "self.axes.spines": [
                    2200,
                    1921,
                    1906,
                    2214
                ],
                "spinebbox": [
                    1922,
                    1926,
                    1927,
                    2215,
                    2219,
                    2220,
                    1907,
                    1911,
                    1912,
                    2201,
                    2205,
                    2206
                ],
                "get_extents": [
                    2201,
                    1922,
                    1907,
                    2215
                ],
                "transform_path": [
                    2201,
                    1922,
                    1907,
                    2215
                ],
                "spine.get_transform": [
                    2201,
                    1922,
                    1907,
                    2215
                ],
                "spine.get_path": [
                    2216,
                    2202,
                    1923,
                    1908
                ],
                "self.axes.bbox": [
                    1953,
                    1926,
                    2219,
                    1911,
                    1944,
                    2233,
                    2205
                ],
                "bottom": [
                    1944,
                    1913,
                    1947,
                    1916,
                    1949
                ],
                "bbox.y0": [
                    1913,
                    1947
                ],
                "top": [
                    1953,
                    1956,
                    1959,
                    1928,
                    1931,
                    2233,
                    2235
                ],
                "bbox.y1": [
                    1928,
                    1956
                ],
                "self.offsetText.get_position": [
                    2232,
                    1939,
                    2244
                ],
                "self._tick_position": [
                    2016,
                    2002,
                    1941,
                    2006,
                    1942
                ],
                "self.axes.bbox.ymin": [
                    1944
                ],
                "self.offsetText.set_position": [
                    2248,
                    2234,
                    1948,
                    1958
                ],
                "self.OFFSETTEXTPAD": [
                    2235,
                    1949,
                    1959
                ],
                "self.axes.bbox.ymax": [
                    1953,
                    2233
                ],
                "self.offsetText.set_va": [
                    1957
                ],
                "self.get_ticklabel_extents": [
                    2252,
                    1967
                ],
                "padPixels": [
                    2254,
                    1969,
                    2258,
                    1973,
                    2261,
                    1976,
                    2266,
                    1979,
                    1981,
                    2264
                ],
                "get_pad_pixels": [
                    1969,
                    2254
                ],
                "above": [
                    1979,
                    1971,
                    1973,
                    1982
                ],
                "bbox2.height": [
                    1972,
                    1973
                ],
                "below": [
                    1976,
                    1982,
                    1981,
                    1974
                ],
                "bbox.height": [
                    1976,
                    1975
                ],
                "self.get_label_position": [
                    1978,
                    2263
                ],
                "height": [
                    1979,
                    1981
                ],
                "self.label.get_window_extent": [
                    2264,
                    2266,
                    1979,
                    1981
                ],
                "self.set_ticks_position": [
                    2041,
                    2029,
                    2313,
                    2326
                ],
                "self._get_ticks_position": [
                    2337,
                    2051
                ],
                "get_view_interval": [
                    2339,
                    2053
                ],
                "set_view_interval": [
                    2339,
                    2053
                ],
                "_make_getset_interval": [
                    2341,
                    2339,
                    2053,
                    2055
                ],
                "get_data_interval": [
                    2341,
                    2055
                ],
                "set_data_interval": [
                    2341,
                    2055
                ],
                "self.axes.dataLim.minposx": [
                    2059
                ],
                "self.axes.dataLim": [
                    2080,
                    2345,
                    2059,
                    2356,
                    2070,
                    2366
                ],
                "self.axes.set_xlim": [
                    2065
                ],
                "inverted": [
                    2065,
                    2351
                ],
                "xmin": [
                    2080,
                    2077,
                    2082,
                    2069
                ],
                "xmax": [
                    2080,
                    2082,
                    2069,
                    2078
                ],
                "dataMutated": [
                    2356,
                    2358,
                    2070,
                    2072,
                    2365,
                    2079
                ],
                "self.axes.dataLim.mutatedx": [
                    2070
                ],
                "viewMutated": [
                    2081,
                    2357,
                    2358,
                    2071,
                    2072,
                    2367
                ],
                "self.axes.viewLim.mutatedx": [
                    2071
                ],
                "info.default_limits": [
                    2361,
                    2362,
                    2075,
                    2076
                ],
                "valmin": [
                    2362,
                    2363,
                    2076,
                    2077
                ],
                "valmax": [
                    2364,
                    2362,
                    2076,
                    2078
                ],
                "self.axes.dataLim.intervalx": [
                    2080
                ],
                "ends": [
                    2372,
                    2373,
                    2086,
                    2087
                ],
                "length": [
                    2378,
                    2373,
                    2093,
                    2087
                ],
                "self.axes.figure.dpi": [
                    2373,
                    2087
                ],
                "self.axes.figure": [
                    2373,
                    2087
                ],
                "tick.label1.get_size": [
                    2376,
                    2091
                ],
                "np.floor": [
                    2378,
                    2093
                ],
                "YTick": [
                    2148
                ],
                "self.label.set_rotation_mode": [
                    2158
                ],
                "self.label.set_horizontalalignment": [
                    2159
                ],
                "self.figure._align_ylabel_grp": [
                    2176
                ],
                "axx.yaxis._update_ticks": [
                    2179
                ],
                "axx.yaxis": [
                    2179,
                    2180
                ],
                "axx.yaxis._get_tick_bboxes": [
                    2180
                ],
                "left": [
                    2209,
                    2256,
                    2258,
                    2264,
                    2267,
                    2207
                ],
                "bbox.x0": [
                    2207
                ],
                "right": [
                    2221,
                    2224,
                    2259,
                    2261,
                    2266,
                    2267
                ],
                "bbox.x1": [
                    2221
                ],
                "self.offsetText.set_ha": [
                    2247
                ],
                "bbox.width": [
                    2257,
                    2258
                ],
                "bbox2.width": [
                    2260,
                    2261
                ],
                "self.set_offset_position": [
                    2291,
                    2287
                ],
                "self.axes.dataLim.minposy": [
                    2345
                ],
                "self.axes.set_ylim": [
                    2351
                ],
                "ymin": [
                    2368,
                    2363,
                    2355,
                    2366
                ],
                "ymax": [
                    2368,
                    2355,
                    2364,
                    2366
                ],
                "self.axes.dataLim.mutatedy": [
                    2356
                ],
                "self.axes.viewLim.mutatedy": [
                    2357
                ],
                "self.axes.dataLim.intervaly": [
                    2366
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/matplotlib_10/lib/matplotlib/tests/test_axes.py",
                "test_function": "test_offset_text_visible",
                "test_function_code": "def test_offset_text_visible():\n    fig = plt.figure()\n    ax = fig.add_subplot(1, 1, 1)\n    ax.plot([1.01e9, 1.02e9, 1.03e9])\n    ax.yaxis.set_tick_params(label1On=False, label2On=True)\n    assert ax.yaxis.get_offset_text().get_visible()\n    ax.yaxis.set_tick_params(label2On=False)\n    assert not ax.yaxis.get_offset_text().get_visible()",
                "test_error": "AssertionError: assert not True\n +  where True = <bound method Artist.get_visible of Text(0, 0.5, '')>()\n +    where <bound method Artist.get_visible of Text(0, 0.5, '')> = Text(0, 0.5, '').get_visible\n +      where Text(0, 0.5, '') = <bound method Axis.get_offset_text of <matplotlib.axis.YAxis object at 0x1182b4a30>>()\n +        where <bound method Axis.get_offset_text of <matplotlib.axis.YAxis object at 0x1182b4a30>> = <matplotlib.axis.YAxis object at 0x1182b4a30>.get_offset_text\n +          where <matplotlib.axis.YAxis object at 0x1182b4a30> = <matplotlib.axes._subplots.AxesSubplot object at 0x118298b20>.yaxis",
                "full_test_error": "def test_offset_text_visible():\n        fig = plt.figure()\n        ax = fig.add_subplot(1, 1, 1)\n        ax.plot([1.01e9, 1.02e9, 1.03e9])\n        ax.yaxis.set_tick_params(label1On=False, label2On=True)\n        assert ax.yaxis.get_offset_text().get_visible()\n        ax.yaxis.set_tick_params(label2On=False)\n>       assert not ax.yaxis.get_offset_text().get_visible()\nE       AssertionError: assert not True\nE        +  where True = <bound method Artist.get_visible of Text(0, 0.5, '')>()\nE        +    where <bound method Artist.get_visible of Text(0, 0.5, '')> = Text(0, 0.5, '').get_visible\nE        +      where Text(0, 0.5, '') = <bound method Axis.get_offset_text of <matplotlib.axis.YAxis object at 0x1182b4a30>>()\nE        +        where <bound method Axis.get_offset_text of <matplotlib.axis.YAxis object at 0x1182b4a30>> = <matplotlib.axis.YAxis object at 0x1182b4a30>.get_offset_text\nE        +          where <matplotlib.axis.YAxis object at 0x1182b4a30> = <matplotlib.axes._subplots.AxesSubplot object at 0x118298b20>.yaxis\n\nlib/matplotlib/tests/test_axes.py:5507: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}