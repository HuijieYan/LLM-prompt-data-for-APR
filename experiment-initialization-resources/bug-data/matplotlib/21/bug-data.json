{
    "matplotlib:21": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/matplotlib_21/lib/matplotlib/axes/_axes.py": {
            "buggy_functions": [
                {
                    "function_name": "bxp",
                    "function_code": "@cbook._rename_parameter(\"3.1\", \"manage_xticks\", \"manage_ticks\")\ndef bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n    \"\"\"\n    Drawing function for box and whisker plots.\n\n    Make a box and whisker plot for each column of *x* or each\n    vector in sequence *x*.  The box extends from the lower to\n    upper quartile values of the data, with a line at the median.\n    The whiskers extend from the box to show the range of the\n    data.  Flier points are those past the end of the whiskers.\n\n    Parameters\n    ----------\n    bxpstats : list of dicts\n      A list of dictionaries containing stats for each boxplot.\n      Required keys are:\n\n      - ``med``: The median (scalar float).\n\n      - ``q1``: The first quartile (25th percentile) (scalar\n        float).\n\n      - ``q3``: The third quartile (75th percentile) (scalar\n        float).\n\n      - ``whislo``: Lower bound of the lower whisker (scalar\n        float).\n\n      - ``whishi``: Upper bound of the upper whisker (scalar\n        float).\n\n      Optional keys are:\n\n      - ``mean``: The mean (scalar float). Needed if\n        ``showmeans=True``.\n\n      - ``fliers``: Data beyond the whiskers (sequence of floats).\n        Needed if ``showfliers=True``.\n\n      - ``cilo`` & ``cihi``: Lower and upper confidence intervals\n        about the median. Needed if ``shownotches=True``.\n\n      - ``label``: Name of the dataset (string). If available,\n        this will be used a tick label for the boxplot\n\n    positions : array-like, default: [1, 2, ..., n]\n      Sets the positions of the boxes. The ticks and limits\n      are automatically set to match the positions.\n\n    widths : array-like, default: None\n      Either a scalar or a vector and sets the width of each\n      box. The default is ``0.15*(distance between extreme\n      positions)``, clipped to no less than 0.15 and no more than\n      0.5.\n\n    vert : bool, default: True\n      If `True` (default), makes the boxes vertical.  If `False`,\n      makes horizontal boxes.\n\n    patch_artist : bool, default: False\n      If `False` produces boxes with the `.Line2D` artist.\n      If `True` produces boxes with the `~matplotlib.patches.Patch` artist.\n\n    shownotches : bool, default: False\n      If `False` (default), produces a rectangular box plot.\n      If `True`, will produce a notched box plot\n\n    showmeans : bool, default: False\n      If `True`, will toggle on the rendering of the means\n\n    showcaps  : bool, default: True\n      If `True`, will toggle on the rendering of the caps\n\n    showbox  : bool, default: True\n      If `True`, will toggle on the rendering of the box\n\n    showfliers : bool, default: True\n      If `True`, will toggle on the rendering of the fliers\n\n    boxprops : dict or None (default)\n      If provided, will set the plotting style of the boxes\n\n    whiskerprops : dict or None (default)\n      If provided, will set the plotting style of the whiskers\n\n    capprops : dict or None (default)\n      If provided, will set the plotting style of the caps\n\n    flierprops : dict or None (default)\n      If provided will set the plotting style of the fliers\n\n    medianprops : dict or None (default)\n      If provided, will set the plotting style of the medians\n\n    meanprops : dict or None (default)\n      If provided, will set the plotting style of the means\n\n    meanline : bool, default: False\n      If `True` (and *showmeans* is `True`), will try to render the mean\n      as a line spanning the full width of the box according to\n      *meanprops*. Not recommended if *shownotches* is also True.\n      Otherwise, means will be shown as points.\n\n    manage_ticks : bool, default: True\n      If True, the tick locations and labels will be adjusted to match the\n      boxplot positions.\n\n    zorder : scalar, default: None\n      The zorder of the resulting boxplot.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the boxplot to a list\n      of the `.Line2D` instances created. That dictionary has the\n      following keys (assuming vertical boxplots):\n\n      - ``boxes``: the main body of the boxplot showing the\n        quartiles and the median's confidence intervals if\n        enabled.\n\n      - ``medians``: horizontal lines at the median of each box.\n\n      - ``whiskers``: the vertical lines extending to the most\n        extreme, non-outlier data points.\n\n      - ``caps``: the horizontal lines at the ends of the\n        whiskers.\n\n      - ``fliers``: points representing data that extend beyond\n        the whiskers (fliers).\n\n      - ``means``: points or lines representing the means.\n\n    Examples\n    --------\n    .. plot:: gallery/statistics/bxp.py\n\n    \"\"\"\n    # lists of artists to be output\n    whiskers = []\n    caps = []\n    boxes = []\n    medians = []\n    means = []\n    fliers = []\n\n    # empty list of xticklabels\n    datalabels = []\n\n    # Use default zorder if none specified\n    if zorder is None:\n        zorder = mlines.Line2D.zorder\n\n    zdelta = 0.1\n\n    def line_props_with_rcdefaults(subkey, explicit, zdelta=0):\n        d = {k.split('.')[-1]: v for k, v in rcParams.items()\n             if k.startswith(f'boxplot.{subkey}')}\n        d['zorder'] = zorder + zdelta\n        if explicit is not None:\n            d.update(\n                cbook.normalize_kwargs(explicit, mlines.Line2D._alias_map))\n        return d\n\n    # box properties\n    if patch_artist:\n        final_boxprops = dict(\n            linestyle=rcParams['boxplot.boxprops.linestyle'],\n            linewidth=rcParams['boxplot.boxprops.linewidth'],\n            edgecolor=rcParams['boxplot.boxprops.color'],\n            facecolor=('white' if rcParams['_internal.classic_mode'] else\n                       rcParams['patch.facecolor']),\n            zorder=zorder,\n        )\n        if boxprops is not None:\n            final_boxprops.update(\n                cbook.normalize_kwargs(\n                    boxprops, mpatches.PathPatch._alias_map))\n    else:\n        final_boxprops = line_props_with_rcdefaults('boxprops', boxprops)\n    final_whiskerprops = line_props_with_rcdefaults(\n        'whiskerprops', whiskerprops)\n    final_capprops = line_props_with_rcdefaults(\n        'capprops', capprops)\n    final_flierprops = line_props_with_rcdefaults(\n        'flierprops', flierprops)\n    final_medianprops = line_props_with_rcdefaults(\n        'medianprops', medianprops, zdelta)\n    final_meanprops = line_props_with_rcdefaults(\n        'meanprops', meanprops, zdelta)\n    removed_prop = 'marker' if meanline else 'linestyle'\n    # Only remove the property if it's not set explicitly as a parameter.\n    if meanprops is None or removed_prop not in meanprops:\n        final_meanprops[removed_prop] = ''\n\n    def to_vc(xs, ys):\n        # convert arguments to verts and codes, append (0, 0) (ignored).\n        verts = np.append(np.column_stack([xs, ys]), [(0, 0)], 0)\n        codes = ([mpath.Path.MOVETO]\n                 + [mpath.Path.LINETO] * (len(verts) - 2)\n                 + [mpath.Path.CLOSEPOLY])\n        return verts, codes\n\n    def patch_list(xs, ys, **kwargs):\n        verts, codes = to_vc(xs, ys)\n        path = mpath.Path(verts, codes)\n        patch = mpatches.PathPatch(path, **kwargs)\n        self.add_artist(patch)\n        return [patch]\n\n    # vertical or horizontal plot?\n    if vert:\n        def doplot(*args, **kwargs):\n            return self.plot(*args, **kwargs)\n\n        def dopatch(xs, ys, **kwargs):\n            return patch_list(xs, ys, **kwargs)\n\n    else:\n        def doplot(*args, **kwargs):\n            shuffled = []\n            for i in range(0, len(args), 2):\n                shuffled.extend([args[i + 1], args[i]])\n            return self.plot(*shuffled, **kwargs)\n\n        def dopatch(xs, ys, **kwargs):\n            xs, ys = ys, xs  # flip X, Y\n            return patch_list(xs, ys, **kwargs)\n\n    # input validation\n    N = len(bxpstats)\n    datashape_message = (\"List of boxplot statistics and `{0}` \"\n                         \"values must have same the length\")\n    # check position\n    if positions is None:\n        positions = list(range(1, N + 1))\n    elif len(positions) != N:\n        raise ValueError(datashape_message.format(\"positions\"))\n\n    positions = np.array(positions)\n    if len(positions) > 0 and not isinstance(positions[0], Number):\n        raise TypeError(\"positions should be an iterable of numbers\")\n\n    # width\n    if widths is None:\n        widths = [np.clip(0.15 * np.ptp(positions), 0.15, 0.5)] * N\n    elif np.isscalar(widths):\n        widths = [widths] * N\n    elif len(widths) != N:\n        raise ValueError(datashape_message.format(\"widths\"))\n\n    for pos, width, stats in zip(positions, widths, bxpstats):\n        # try to find a new label\n        datalabels.append(stats.get('label', pos))\n\n        # whisker coords\n        whisker_x = np.ones(2) * pos\n        whiskerlo_y = np.array([stats['q1'], stats['whislo']])\n        whiskerhi_y = np.array([stats['q3'], stats['whishi']])\n\n        # cap coords\n        cap_left = pos - width * 0.25\n        cap_right = pos + width * 0.25\n        cap_x = np.array([cap_left, cap_right])\n        cap_lo = np.ones(2) * stats['whislo']\n        cap_hi = np.ones(2) * stats['whishi']\n\n        # box and median coords\n        box_left = pos - width * 0.5\n        box_right = pos + width * 0.5\n        med_y = [stats['med'], stats['med']]\n\n        # notched boxes\n        if shownotches:\n            box_x = [box_left, box_right, box_right, cap_right, box_right,\n                     box_right, box_left, box_left, cap_left, box_left,\n                     box_left]\n            box_y = [stats['q1'], stats['q1'], stats['cilo'],\n                     stats['med'], stats['cihi'], stats['q3'],\n                     stats['q3'], stats['cihi'], stats['med'],\n                     stats['cilo'], stats['q1']]\n            med_x = cap_x\n\n        # plain boxes\n        else:\n            box_x = [box_left, box_right, box_right, box_left, box_left]\n            box_y = [stats['q1'], stats['q1'], stats['q3'], stats['q3'],\n                     stats['q1']]\n            med_x = [box_left, box_right]\n\n        # maybe draw the box:\n        if showbox:\n            if patch_artist:\n                boxes.extend(dopatch(box_x, box_y, **final_boxprops))\n            else:\n                boxes.extend(doplot(box_x, box_y, **final_boxprops))\n\n        # draw the whiskers\n        whiskers.extend(doplot(\n            whisker_x, whiskerlo_y, **final_whiskerprops\n        ))\n        whiskers.extend(doplot(\n            whisker_x, whiskerhi_y, **final_whiskerprops\n        ))\n\n        # maybe draw the caps:\n        if showcaps:\n            caps.extend(doplot(cap_x, cap_lo, **final_capprops))\n            caps.extend(doplot(cap_x, cap_hi, **final_capprops))\n\n        # draw the medians\n        medians.extend(doplot(med_x, med_y, **final_medianprops))\n\n        # maybe draw the means\n        if showmeans:\n            if meanline:\n                means.extend(doplot(\n                    [box_left, box_right], [stats['mean'], stats['mean']],\n                    **final_meanprops\n                ))\n            else:\n                means.extend(doplot(\n                    [pos], [stats['mean']], **final_meanprops\n                ))\n\n        # maybe draw the fliers\n        if showfliers:\n            # fliers coords\n            flier_x = np.full(len(stats['fliers']), pos, dtype=np.float64)\n            flier_y = stats['fliers']\n\n            fliers.extend(doplot(\n                flier_x, flier_y, **final_flierprops\n            ))\n\n    if manage_ticks:\n        axis_name = \"x\" if vert else \"y\"\n        interval = getattr(self.dataLim, f\"interval{axis_name}\")\n        axis = getattr(self, f\"{axis_name}axis\")\n        positions = axis.convert_units(positions)\n        # The 0.5 additional padding ensures reasonable-looking boxes\n        # even when drawing a single box.  We set the sticky edge to\n        # prevent margins expansion, in order to match old behavior (back\n        # when separate calls to boxplot() would completely reset the axis\n        # limits regardless of what was drawn before).  The sticky edges\n        # are attached to the median lines, as they are always present.\n        interval[:] = (min(interval[0], min(positions) - .5),\n                       max(interval[1], max(positions) + .5))\n        for median, position in zip(medians, positions):\n            getattr(median.sticky_edges, axis_name).extend(\n                [position - .5, position + .5])\n        # Modified from Axis.set_ticks and Axis.set_ticklabels.\n        locator = axis.get_major_locator()\n        if not isinstance(axis.get_major_locator(),\n                          mticker.FixedLocator):\n            locator = mticker.FixedLocator([])\n            axis.set_major_locator(locator)\n        locator.locs = np.array([*locator.locs, *positions])\n        formatter = axis.get_major_formatter()\n        if not isinstance(axis.get_major_formatter(),\n                          mticker.FixedFormatter):\n            formatter = mticker.FixedFormatter([])\n            axis.set_major_formatter(formatter)\n        formatter.seq = [*formatter.seq, *datalabels]\n\n        self._request_autoscale_view(\n            scalex=self._autoscaleXon, scaley=self._autoscaleYon)\n\n    return dict(whiskers=whiskers, caps=caps, boxes=boxes,\n                medians=medians, fliers=fliers, means=means)\n",
                    "decorators": [
                        "cbook._rename_parameter('3.1', 'manage_xticks', 'manage_ticks')"
                    ],
                    "docstring": "Drawing function for box and whisker plots.\n\nMake a box and whisker plot for each column of *x* or each\nvector in sequence *x*.  The box extends from the lower to\nupper quartile values of the data, with a line at the median.\nThe whiskers extend from the box to show the range of the\ndata.  Flier points are those past the end of the whiskers.\n\nParameters\n----------\nbxpstats : list of dicts\n  A list of dictionaries containing stats for each boxplot.\n  Required keys are:\n\n  - ``med``: The median (scalar float).\n\n  - ``q1``: The first quartile (25th percentile) (scalar\n    float).\n\n  - ``q3``: The third quartile (75th percentile) (scalar\n    float).\n\n  - ``whislo``: Lower bound of the lower whisker (scalar\n    float).\n\n  - ``whishi``: Upper bound of the upper whisker (scalar\n    float).\n\n  Optional keys are:\n\n  - ``mean``: The mean (scalar float). Needed if\n    ``showmeans=True``.\n\n  - ``fliers``: Data beyond the whiskers (sequence of floats).\n    Needed if ``showfliers=True``.\n\n  - ``cilo`` & ``cihi``: Lower and upper confidence intervals\n    about the median. Needed if ``shownotches=True``.\n\n  - ``label``: Name of the dataset (string). If available,\n    this will be used a tick label for the boxplot\n\npositions : array-like, default: [1, 2, ..., n]\n  Sets the positions of the boxes. The ticks and limits\n  are automatically set to match the positions.\n\nwidths : array-like, default: None\n  Either a scalar or a vector and sets the width of each\n  box. The default is ``0.15*(distance between extreme\n  positions)``, clipped to no less than 0.15 and no more than\n  0.5.\n\nvert : bool, default: True\n  If `True` (default), makes the boxes vertical.  If `False`,\n  makes horizontal boxes.\n\npatch_artist : bool, default: False\n  If `False` produces boxes with the `.Line2D` artist.\n  If `True` produces boxes with the `~matplotlib.patches.Patch` artist.\n\nshownotches : bool, default: False\n  If `False` (default), produces a rectangular box plot.\n  If `True`, will produce a notched box plot\n\nshowmeans : bool, default: False\n  If `True`, will toggle on the rendering of the means\n\nshowcaps  : bool, default: True\n  If `True`, will toggle on the rendering of the caps\n\nshowbox  : bool, default: True\n  If `True`, will toggle on the rendering of the box\n\nshowfliers : bool, default: True\n  If `True`, will toggle on the rendering of the fliers\n\nboxprops : dict or None (default)\n  If provided, will set the plotting style of the boxes\n\nwhiskerprops : dict or None (default)\n  If provided, will set the plotting style of the whiskers\n\ncapprops : dict or None (default)\n  If provided, will set the plotting style of the caps\n\nflierprops : dict or None (default)\n  If provided will set the plotting style of the fliers\n\nmedianprops : dict or None (default)\n  If provided, will set the plotting style of the medians\n\nmeanprops : dict or None (default)\n  If provided, will set the plotting style of the means\n\nmeanline : bool, default: False\n  If `True` (and *showmeans* is `True`), will try to render the mean\n  as a line spanning the full width of the box according to\n  *meanprops*. Not recommended if *shownotches* is also True.\n  Otherwise, means will be shown as points.\n\nmanage_ticks : bool, default: True\n  If True, the tick locations and labels will be adjusted to match the\n  boxplot positions.\n\nzorder : scalar, default: None\n  The zorder of the resulting boxplot.\n\nReturns\n-------\nresult : dict\n  A dictionary mapping each component of the boxplot to a list\n  of the `.Line2D` instances created. That dictionary has the\n  following keys (assuming vertical boxplots):\n\n  - ``boxes``: the main body of the boxplot showing the\n    quartiles and the median's confidence intervals if\n    enabled.\n\n  - ``medians``: horizontal lines at the median of each box.\n\n  - ``whiskers``: the vertical lines extending to the most\n    extreme, non-outlier data points.\n\n  - ``caps``: the horizontal lines at the ends of the\n    whiskers.\n\n  - ``fliers``: points representing data that extend beyond\n    the whiskers (fliers).\n\n  - ``means``: points or lines representing the means.\n\nExamples\n--------\n.. plot:: gallery/statistics/bxp.py",
                    "start_line": 3752,
                    "end_line": 4127,
                    "variables": {
                        "whiskers": [
                            4056,
                            3897,
                            4059,
                            4126
                        ],
                        "caps": [
                            4065,
                            3898,
                            4066,
                            4126
                        ],
                        "boxes": [
                            3899,
                            4053,
                            4051,
                            4126
                        ],
                        "medians": [
                            4106,
                            3900,
                            4069,
                            4127
                        ],
                        "means": [
                            4074,
                            4127,
                            3901,
                            4079
                        ],
                        "fliers": [
                            4089,
                            3902,
                            4127
                        ],
                        "datalabels": [
                            3905,
                            4011,
                            4121
                        ],
                        "zorder": [
                            3930,
                            3908,
                            3909,
                            3916
                        ],
                        "mlines.Line2D.zorder": [
                            3909
                        ],
                        "mlines.Line2D": [
                            3909,
                            3919
                        ],
                        "mlines": [
                            3909,
                            3919
                        ],
                        "zdelta": [
                            3945,
                            3947,
                            3916,
                            3911
                        ],
                        "d": [
                            3920,
                            3914,
                            3916,
                            3918
                        ],
                        "k.split": [
                            3914
                        ],
                        "k": [
                            3914,
                            3915
                        ],
                        "v": [
                            3914
                        ],
                        "rcParams.items": [
                            3914
                        ],
                        "rcParams": [
                            3914,
                            3925,
                            3926,
                            3927,
                            3928,
                            3929
                        ],
                        "k.startswith": [
                            3915
                        ],
                        "subkey": [
                            3915
                        ],
                        "explicit": [
                            3917,
                            3919
                        ],
                        "d.update": [
                            3918
                        ],
                        "cbook.normalize_kwargs": [
                            3934,
                            3919
                        ],
                        "cbook": [
                            3752,
                            3934,
                            3919
                        ],
                        "mlines.Line2D._alias_map": [
                            3919
                        ],
                        "patch_artist": [
                            4050,
                            3923
                        ],
                        "final_boxprops": [
                            3937,
                            4051,
                            3924,
                            4053,
                            3933
                        ],
                        "dict": [
                            3924,
                            4126
                        ],
                        "boxprops": [
                            3937,
                            3932,
                            3935
                        ],
                        "final_boxprops.update": [
                            3933
                        ],
                        "mpatches.PathPatch._alias_map": [
                            3935
                        ],
                        "mpatches.PathPatch": [
                            3964,
                            3935
                        ],
                        "mpatches": [
                            3964,
                            3935
                        ],
                        "line_props_with_rcdefaults": [
                            3937,
                            3938,
                            3940,
                            3942,
                            3944,
                            3946
                        ],
                        "final_whiskerprops": [
                            4057,
                            3938,
                            4060
                        ],
                        "whiskerprops": [
                            3939
                        ],
                        "final_capprops": [
                            4065,
                            4066,
                            3940
                        ],
                        "capprops": [
                            3941
                        ],
                        "final_flierprops": [
                            4090,
                            3942
                        ],
                        "flierprops": [
                            3943
                        ],
                        "final_medianprops": [
                            3944,
                            4069
                        ],
                        "medianprops": [
                            3945
                        ],
                        "final_meanprops": [
                            4080,
                            3946,
                            4076,
                            3951
                        ],
                        "meanprops": [
                            3947,
                            3950
                        ],
                        "removed_prop": [
                            3948,
                            3950,
                            3951
                        ],
                        "meanline": [
                            4073,
                            3948
                        ],
                        "verts": [
                            3955,
                            3957,
                            3959,
                            3962,
                            3963
                        ],
                        "np.append": [
                            3955
                        ],
                        "np": [
                            4003,
                            4004,
                            4014,
                            4015,
                            4016,
                            3955,
                            4115,
                            4021,
                            4022,
                            4023,
                            4086,
                            3997
                        ],
                        "np.column_stack": [
                            3955
                        ],
                        "xs": [
                            3974,
                            3984,
                            3985,
                            3955,
                            3962
                        ],
                        "ys": [
                            3974,
                            3984,
                            3985,
                            3955,
                            3962
                        ],
                        "codes": [
                            3962,
                            3963,
                            3956,
                            3959
                        ],
                        "mpath.Path.MOVETO": [
                            3956
                        ],
                        "mpath.Path": [
                            3963,
                            3956,
                            3957,
                            3958
                        ],
                        "mpath": [
                            3963,
                            3956,
                            3957,
                            3958
                        ],
                        "mpath.Path.LINETO": [
                            3957
                        ],
                        "len": [
                            4006,
                            3979,
                            3988,
                            3957,
                            4086,
                            3994,
                            3998
                        ],
                        "mpath.Path.CLOSEPOLY": [
                            3958
                        ],
                        "to_vc": [
                            3962
                        ],
                        "path": [
                            3963,
                            3964
                        ],
                        "patch": [
                            3964,
                            3965,
                            3966
                        ],
                        "kwargs": [
                            3971,
                            3974,
                            3981,
                            3985,
                            3964
                        ],
                        "self.add_artist": [
                            3965
                        ],
                        "self": [
                            4096,
                            3971,
                            3981,
                            4123,
                            4124,
                            3965,
                            4095
                        ],
                        "vert": [
                            3969,
                            4094
                        ],
                        "self.plot": [
                            3971,
                            3981
                        ],
                        "args": [
                            3980,
                            3971,
                            3979
                        ],
                        "patch_list": [
                            3985,
                            3974
                        ],
                        "shuffled": [
                            3978,
                            3980,
                            3981
                        ],
                        "i": [
                            3979,
                            3980
                        ],
                        "range": [
                            3993,
                            3979
                        ],
                        "shuffled.extend": [
                            3980
                        ],
                        "N": [
                            4003,
                            4005,
                            4006,
                            3988,
                            3993,
                            3994
                        ],
                        "bxpstats": [
                            4009,
                            3988
                        ],
                        "datashape_message": [
                            3995,
                            3989,
                            4007
                        ],
                        "positions": [
                            4097,
                            4003,
                            4104,
                            4009,
                            4105,
                            4106,
                            4115,
                            3992,
                            3993,
                            3994,
                            3997,
                            3998
                        ],
                        "list": [
                            3993
                        ],
                        "ValueError": [
                            3995,
                            4007
                        ],
                        "datashape_message.format": [
                            3995,
                            4007
                        ],
                        "np.array": [
                            4015,
                            4016,
                            4115,
                            4021,
                            3997
                        ],
                        "isinstance": [
                            4117,
                            3998,
                            4111
                        ],
                        "Number": [
                            3998
                        ],
                        "TypeError": [
                            3999
                        ],
                        "widths": [
                            4002,
                            4003,
                            4004,
                            4005,
                            4006,
                            4009
                        ],
                        "np.clip": [
                            4003
                        ],
                        "np.ptp": [
                            4003
                        ],
                        "np.isscalar": [
                            4004
                        ],
                        "pos": [
                            4009,
                            4011,
                            4014,
                            4080,
                            4019,
                            4020,
                            4086,
                            4026,
                            4027
                        ],
                        "width": [
                            4009,
                            4019,
                            4020,
                            4026,
                            4027
                        ],
                        "stats": [
                            4035,
                            4036,
                            4037,
                            4038,
                            4009,
                            4011,
                            4044,
                            4045,
                            4075,
                            4015,
                            4016,
                            4080,
                            4087,
                            4022,
                            4023,
                            4086,
                            4028
                        ],
                        "zip": [
                            4009,
                            4106
                        ],
                        "datalabels.append": [
                            4011
                        ],
                        "stats.get": [
                            4011
                        ],
                        "whisker_x": [
                            4057,
                            4060,
                            4014
                        ],
                        "np.ones": [
                            4022,
                            4014,
                            4023
                        ],
                        "whiskerlo_y": [
                            4057,
                            4015
                        ],
                        "whiskerhi_y": [
                            4016,
                            4060
                        ],
                        "cap_left": [
                            4033,
                            4019,
                            4021
                        ],
                        "cap_right": [
                            4032,
                            4020,
                            4021
                        ],
                        "cap_x": [
                            4065,
                            4066,
                            4021,
                            4039
                        ],
                        "cap_lo": [
                            4065,
                            4022
                        ],
                        "cap_hi": [
                            4066,
                            4023
                        ],
                        "box_left": [
                            4032,
                            4033,
                            4034,
                            4043,
                            4075,
                            4046,
                            4026
                        ],
                        "box_right": [
                            4032,
                            4033,
                            4043,
                            4075,
                            4046,
                            4027
                        ],
                        "med_y": [
                            4028,
                            4069
                        ],
                        "shownotches": [
                            4031
                        ],
                        "box_x": [
                            4032,
                            4043,
                            4053,
                            4051
                        ],
                        "box_y": [
                            4035,
                            4044,
                            4053,
                            4051
                        ],
                        "med_x": [
                            4069,
                            4046,
                            4039
                        ],
                        "showbox": [
                            4049
                        ],
                        "boxes.extend": [
                            4051,
                            4053
                        ],
                        "dopatch": [
                            4051
                        ],
                        "doplot": [
                            4065,
                            4066,
                            4069,
                            4074,
                            4079,
                            4053,
                            4056,
                            4089,
                            4059
                        ],
                        "whiskers.extend": [
                            4056,
                            4059
                        ],
                        "showcaps": [
                            4064
                        ],
                        "caps.extend": [
                            4065,
                            4066
                        ],
                        "medians.extend": [
                            4069
                        ],
                        "showmeans": [
                            4072
                        ],
                        "means.extend": [
                            4074,
                            4079
                        ],
                        "showfliers": [
                            4084
                        ],
                        "flier_x": [
                            4090,
                            4086
                        ],
                        "np.full": [
                            4086
                        ],
                        "np.float64": [
                            4086
                        ],
                        "flier_y": [
                            4090,
                            4087
                        ],
                        "fliers.extend": [
                            4089
                        ],
                        "manage_ticks": [
                            4093
                        ],
                        "axis_name": [
                            4096,
                            4107,
                            4094,
                            4095
                        ],
                        "interval": [
                            4104,
                            4105,
                            4095
                        ],
                        "getattr": [
                            4096,
                            4107,
                            4095
                        ],
                        "self.dataLim": [
                            4095
                        ],
                        "axis": [
                            4096,
                            4097,
                            4110,
                            4111,
                            4114,
                            4116,
                            4117,
                            4120
                        ],
                        "axis.convert_units": [
                            4097
                        ],
                        "min": [
                            4104
                        ],
                        "max": [
                            4105
                        ],
                        "median": [
                            4106,
                            4107
                        ],
                        "position": [
                            4106,
                            4108
                        ],
                        "extend": [
                            4107
                        ],
                        "median.sticky_edges": [
                            4107
                        ],
                        "locator": [
                            4113,
                            4114,
                            4115,
                            4110
                        ],
                        "axis.get_major_locator": [
                            4110,
                            4111
                        ],
                        "mticker.FixedLocator": [
                            4112,
                            4113
                        ],
                        "mticker": [
                            4112,
                            4113,
                            4118,
                            4119
                        ],
                        "axis.set_major_locator": [
                            4114
                        ],
                        "locator.locs": [
                            4115
                        ],
                        "formatter": [
                            4120,
                            4121,
                            4116,
                            4119
                        ],
                        "axis.get_major_formatter": [
                            4116,
                            4117
                        ],
                        "mticker.FixedFormatter": [
                            4118,
                            4119
                        ],
                        "axis.set_major_formatter": [
                            4120
                        ],
                        "formatter.seq": [
                            4121
                        ],
                        "self._request_autoscale_view": [
                            4123
                        ],
                        "self._autoscaleXon": [
                            4124
                        ],
                        "self._autoscaleYon": [
                            4124
                        ],
                        "cbook._rename_parameter": [
                            3752
                        ]
                    },
                    "filtered_variables": {
                        "whiskers": [
                            4056,
                            3897,
                            4059,
                            4126
                        ],
                        "caps": [
                            4065,
                            3898,
                            4066,
                            4126
                        ],
                        "boxes": [
                            3899,
                            4053,
                            4051,
                            4126
                        ],
                        "medians": [
                            4106,
                            3900,
                            4069,
                            4127
                        ],
                        "means": [
                            4074,
                            4127,
                            3901,
                            4079
                        ],
                        "fliers": [
                            4089,
                            3902,
                            4127
                        ],
                        "datalabels": [
                            3905,
                            4011,
                            4121
                        ],
                        "zorder": [
                            3930,
                            3908,
                            3909,
                            3916
                        ],
                        "mlines.Line2D.zorder": [
                            3909
                        ],
                        "mlines.Line2D": [
                            3909,
                            3919
                        ],
                        "mlines": [
                            3909,
                            3919
                        ],
                        "zdelta": [
                            3945,
                            3947,
                            3916,
                            3911
                        ],
                        "d": [
                            3920,
                            3914,
                            3916,
                            3918
                        ],
                        "k.split": [
                            3914
                        ],
                        "k": [
                            3914,
                            3915
                        ],
                        "v": [
                            3914
                        ],
                        "rcParams.items": [
                            3914
                        ],
                        "rcParams": [
                            3914,
                            3925,
                            3926,
                            3927,
                            3928,
                            3929
                        ],
                        "k.startswith": [
                            3915
                        ],
                        "subkey": [
                            3915
                        ],
                        "explicit": [
                            3917,
                            3919
                        ],
                        "d.update": [
                            3918
                        ],
                        "cbook.normalize_kwargs": [
                            3934,
                            3919
                        ],
                        "cbook": [
                            3752,
                            3934,
                            3919
                        ],
                        "mlines.Line2D._alias_map": [
                            3919
                        ],
                        "patch_artist": [
                            4050,
                            3923
                        ],
                        "final_boxprops": [
                            3937,
                            4051,
                            3924,
                            4053,
                            3933
                        ],
                        "boxprops": [
                            3937,
                            3932,
                            3935
                        ],
                        "final_boxprops.update": [
                            3933
                        ],
                        "mpatches.PathPatch._alias_map": [
                            3935
                        ],
                        "mpatches.PathPatch": [
                            3964,
                            3935
                        ],
                        "mpatches": [
                            3964,
                            3935
                        ],
                        "line_props_with_rcdefaults": [
                            3937,
                            3938,
                            3940,
                            3942,
                            3944,
                            3946
                        ],
                        "final_whiskerprops": [
                            4057,
                            3938,
                            4060
                        ],
                        "whiskerprops": [
                            3939
                        ],
                        "final_capprops": [
                            4065,
                            4066,
                            3940
                        ],
                        "capprops": [
                            3941
                        ],
                        "final_flierprops": [
                            4090,
                            3942
                        ],
                        "flierprops": [
                            3943
                        ],
                        "final_medianprops": [
                            3944,
                            4069
                        ],
                        "medianprops": [
                            3945
                        ],
                        "final_meanprops": [
                            4080,
                            3946,
                            4076,
                            3951
                        ],
                        "meanprops": [
                            3947,
                            3950
                        ],
                        "removed_prop": [
                            3948,
                            3950,
                            3951
                        ],
                        "meanline": [
                            4073,
                            3948
                        ],
                        "verts": [
                            3955,
                            3957,
                            3959,
                            3962,
                            3963
                        ],
                        "np.append": [
                            3955
                        ],
                        "np": [
                            4003,
                            4004,
                            4014,
                            4015,
                            4016,
                            3955,
                            4115,
                            4021,
                            4022,
                            4023,
                            4086,
                            3997
                        ],
                        "np.column_stack": [
                            3955
                        ],
                        "xs": [
                            3974,
                            3984,
                            3985,
                            3955,
                            3962
                        ],
                        "ys": [
                            3974,
                            3984,
                            3985,
                            3955,
                            3962
                        ],
                        "codes": [
                            3962,
                            3963,
                            3956,
                            3959
                        ],
                        "mpath.Path.MOVETO": [
                            3956
                        ],
                        "mpath.Path": [
                            3963,
                            3956,
                            3957,
                            3958
                        ],
                        "mpath": [
                            3963,
                            3956,
                            3957,
                            3958
                        ],
                        "mpath.Path.LINETO": [
                            3957
                        ],
                        "mpath.Path.CLOSEPOLY": [
                            3958
                        ],
                        "to_vc": [
                            3962
                        ],
                        "path": [
                            3963,
                            3964
                        ],
                        "patch": [
                            3964,
                            3965,
                            3966
                        ],
                        "kwargs": [
                            3971,
                            3974,
                            3981,
                            3985,
                            3964
                        ],
                        "self.add_artist": [
                            3965
                        ],
                        "self": [
                            4096,
                            3971,
                            3981,
                            4123,
                            4124,
                            3965,
                            4095
                        ],
                        "vert": [
                            3969,
                            4094
                        ],
                        "self.plot": [
                            3971,
                            3981
                        ],
                        "args": [
                            3980,
                            3971,
                            3979
                        ],
                        "patch_list": [
                            3985,
                            3974
                        ],
                        "shuffled": [
                            3978,
                            3980,
                            3981
                        ],
                        "i": [
                            3979,
                            3980
                        ],
                        "shuffled.extend": [
                            3980
                        ],
                        "N": [
                            4003,
                            4005,
                            4006,
                            3988,
                            3993,
                            3994
                        ],
                        "bxpstats": [
                            4009,
                            3988
                        ],
                        "datashape_message": [
                            3995,
                            3989,
                            4007
                        ],
                        "positions": [
                            4097,
                            4003,
                            4104,
                            4009,
                            4105,
                            4106,
                            4115,
                            3992,
                            3993,
                            3994,
                            3997,
                            3998
                        ],
                        "datashape_message.format": [
                            3995,
                            4007
                        ],
                        "np.array": [
                            4015,
                            4016,
                            4115,
                            4021,
                            3997
                        ],
                        "Number": [
                            3998
                        ],
                        "widths": [
                            4002,
                            4003,
                            4004,
                            4005,
                            4006,
                            4009
                        ],
                        "np.clip": [
                            4003
                        ],
                        "np.ptp": [
                            4003
                        ],
                        "np.isscalar": [
                            4004
                        ],
                        "pos": [
                            4009,
                            4011,
                            4014,
                            4080,
                            4019,
                            4020,
                            4086,
                            4026,
                            4027
                        ],
                        "width": [
                            4009,
                            4019,
                            4020,
                            4026,
                            4027
                        ],
                        "stats": [
                            4035,
                            4036,
                            4037,
                            4038,
                            4009,
                            4011,
                            4044,
                            4045,
                            4075,
                            4015,
                            4016,
                            4080,
                            4087,
                            4022,
                            4023,
                            4086,
                            4028
                        ],
                        "datalabels.append": [
                            4011
                        ],
                        "stats.get": [
                            4011
                        ],
                        "whisker_x": [
                            4057,
                            4060,
                            4014
                        ],
                        "np.ones": [
                            4022,
                            4014,
                            4023
                        ],
                        "whiskerlo_y": [
                            4057,
                            4015
                        ],
                        "whiskerhi_y": [
                            4016,
                            4060
                        ],
                        "cap_left": [
                            4033,
                            4019,
                            4021
                        ],
                        "cap_right": [
                            4032,
                            4020,
                            4021
                        ],
                        "cap_x": [
                            4065,
                            4066,
                            4021,
                            4039
                        ],
                        "cap_lo": [
                            4065,
                            4022
                        ],
                        "cap_hi": [
                            4066,
                            4023
                        ],
                        "box_left": [
                            4032,
                            4033,
                            4034,
                            4043,
                            4075,
                            4046,
                            4026
                        ],
                        "box_right": [
                            4032,
                            4033,
                            4043,
                            4075,
                            4046,
                            4027
                        ],
                        "med_y": [
                            4028,
                            4069
                        ],
                        "shownotches": [
                            4031
                        ],
                        "box_x": [
                            4032,
                            4043,
                            4053,
                            4051
                        ],
                        "box_y": [
                            4035,
                            4044,
                            4053,
                            4051
                        ],
                        "med_x": [
                            4069,
                            4046,
                            4039
                        ],
                        "showbox": [
                            4049
                        ],
                        "boxes.extend": [
                            4051,
                            4053
                        ],
                        "dopatch": [
                            4051
                        ],
                        "doplot": [
                            4065,
                            4066,
                            4069,
                            4074,
                            4079,
                            4053,
                            4056,
                            4089,
                            4059
                        ],
                        "whiskers.extend": [
                            4056,
                            4059
                        ],
                        "showcaps": [
                            4064
                        ],
                        "caps.extend": [
                            4065,
                            4066
                        ],
                        "medians.extend": [
                            4069
                        ],
                        "showmeans": [
                            4072
                        ],
                        "means.extend": [
                            4074,
                            4079
                        ],
                        "showfliers": [
                            4084
                        ],
                        "flier_x": [
                            4090,
                            4086
                        ],
                        "np.full": [
                            4086
                        ],
                        "np.float64": [
                            4086
                        ],
                        "flier_y": [
                            4090,
                            4087
                        ],
                        "fliers.extend": [
                            4089
                        ],
                        "manage_ticks": [
                            4093
                        ],
                        "axis_name": [
                            4096,
                            4107,
                            4094,
                            4095
                        ],
                        "interval": [
                            4104,
                            4105,
                            4095
                        ],
                        "self.dataLim": [
                            4095
                        ],
                        "axis": [
                            4096,
                            4097,
                            4110,
                            4111,
                            4114,
                            4116,
                            4117,
                            4120
                        ],
                        "axis.convert_units": [
                            4097
                        ],
                        "median": [
                            4106,
                            4107
                        ],
                        "position": [
                            4106,
                            4108
                        ],
                        "extend": [
                            4107
                        ],
                        "median.sticky_edges": [
                            4107
                        ],
                        "locator": [
                            4113,
                            4114,
                            4115,
                            4110
                        ],
                        "axis.get_major_locator": [
                            4110,
                            4111
                        ],
                        "mticker.FixedLocator": [
                            4112,
                            4113
                        ],
                        "mticker": [
                            4112,
                            4113,
                            4118,
                            4119
                        ],
                        "axis.set_major_locator": [
                            4114
                        ],
                        "locator.locs": [
                            4115
                        ],
                        "formatter": [
                            4120,
                            4121,
                            4116,
                            4119
                        ],
                        "axis.get_major_formatter": [
                            4116,
                            4117
                        ],
                        "mticker.FixedFormatter": [
                            4118,
                            4119
                        ],
                        "axis.set_major_formatter": [
                            4120
                        ],
                        "formatter.seq": [
                            4121
                        ],
                        "self._request_autoscale_view": [
                            4123
                        ],
                        "self._autoscaleXon": [
                            4124
                        ],
                        "self._autoscaleYon": [
                            4124
                        ],
                        "cbook._rename_parameter": [
                            3752
                        ]
                    },
                    "diff_line_number": 3913,
                    "class_data": {
                        "signature": "class Axes(_AxesBase)",
                        "docstring": "The `Axes` contains most of the figure elements: `~.axis.Axis`,\n`~.axis.Tick`, `~.lines.Line2D`, `~.text.Text`, `~.patches.Polygon`, etc.,\nand sets the coordinate system.\n\nThe `Axes` instance supports callbacks through a callbacks attribute which\nis a `~.cbook.CallbackRegistry` instance.  The events you can connect to\nare 'xlim_changed' and 'ylim_changed' and the callback will be called with\nfunc(*ax*) where *ax* is the `Axes` instance.\n\nAttributes\n----------\ndataLim : `.Bbox`\n    The bounding box enclosing all data displayed in the Axes.\nviewLim : `.Bbox`\n    The view limits in data coordinates.",
                        "constructor_docstring": null,
                        "functions": [
                            "@cbook.deprecated('3.1')\n@property\ndef aname(self):\n    return 'Axes'",
                            "def get_title(self, loc='center'):\n    \"\"\"\n    Get an axes title.\n\n    Get one of the three available axes titles. The available titles\n    are positioned above the axes in the center, flush with the left\n    edge, and flush with the right edge.\n\n    Parameters\n    ----------\n    loc : {'center', 'left', 'right'}, str, default: 'center'\n        Which title to return.\n\n    Returns\n    -------\n    title : str\n        The title text string.\n\n    \"\"\"\n    titles = {'left': self._left_title, 'center': self.title, 'right': self._right_title}\n    title = cbook._check_getitem(titles, loc=loc.lower())\n    return title.get_text()",
                            "def set_title(self, label, fontdict=None, loc=None, pad=None, **kwargs):\n    \"\"\"\n    Set a title for the axes.\n\n    Set one of the three available axes titles. The available titles\n    are positioned above the axes in the center, flush with the left\n    edge, and flush with the right edge.\n\n    Parameters\n    ----------\n    label : str\n        Text to use for the title\n\n    fontdict : dict\n        A dictionary controlling the appearance of the title text,\n        the default *fontdict* is::\n\n           {'fontsize': rcParams['axes.titlesize'],\n            'fontweight' : rcParams['axes.titleweight'],\n            'color' : rcParams['axes.titlecolor'],\n            'verticalalignment': 'baseline',\n            'horizontalalignment': loc}\n\n    loc : {'center', 'left', 'right'}, str, optional\n        Which title to set.\n        If *None*, defaults to :rc:`axes.titlelocation`.\n\n    pad : float\n        The offset of the title from the top of the axes, in points.\n        If *None*, defaults to :rc:`axes.titlepad`.\n\n    Returns\n    -------\n    text : :class:`~matplotlib.text.Text`\n        The matplotlib text instance representing the title\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.text.Text` properties\n        Other keyword arguments are text properties, see\n        :class:`~matplotlib.text.Text` for a list of valid text\n        properties.\n    \"\"\"\n    if loc is None:\n        loc = rcParams['axes.titlelocation']\n    titles = {'left': self._left_title, 'center': self.title, 'right': self._right_title}\n    title = cbook._check_getitem(titles, loc=loc.lower())\n    default = {'fontsize': rcParams['axes.titlesize'], 'fontweight': rcParams['axes.titleweight'], 'verticalalignment': 'baseline', 'horizontalalignment': loc.lower()}\n    titlecolor = rcParams['axes.titlecolor']\n    if not cbook._str_lower_equal(titlecolor, 'auto'):\n        default['color'] = titlecolor\n    if pad is None:\n        pad = rcParams['axes.titlepad']\n    self._set_title_offset_trans(float(pad))\n    title.set_text(label)\n    title.update(default)\n    if fontdict is not None:\n        title.update(fontdict)\n    title.update(kwargs)\n    return title",
                            "def get_xlabel(self):\n    \"\"\"\n    Get the xlabel text string.\n    \"\"\"\n    label = self.xaxis.get_label()\n    return label.get_text()",
                            "def set_xlabel(self, xlabel, fontdict=None, labelpad=None, **kwargs):\n    \"\"\"\n    Set the label for the x-axis.\n\n    Parameters\n    ----------\n    xlabel : str\n        The label text.\n\n    labelpad : float, default: None\n        Spacing in points from the axes bounding box including ticks\n        and tick labels.\n\n    Other Parameters\n    ----------------\n    **kwargs : `.Text` properties\n        `.Text` properties control the appearance of the label.\n\n    See also\n    --------\n    text : for information on how override and the optional args work\n    \"\"\"\n    if labelpad is not None:\n        self.xaxis.labelpad = labelpad\n    return self.xaxis.set_label_text(xlabel, fontdict, **kwargs)",
                            "def get_ylabel(self):\n    \"\"\"\n    Get the ylabel text string.\n    \"\"\"\n    label = self.yaxis.get_label()\n    return label.get_text()",
                            "def set_ylabel(self, ylabel, fontdict=None, labelpad=None, **kwargs):\n    \"\"\"\n    Set the label for the y-axis.\n\n    Parameters\n    ----------\n    ylabel : str\n        The label text.\n\n    labelpad : float, default: None\n        Spacing in points from the axes bounding box including ticks\n        and tick labels.\n\n    Other Parameters\n    ----------------\n    **kwargs : `.Text` properties\n        `.Text` properties control the appearance of the label.\n\n    See also\n    --------\n    text : for information on how override and the optional args work\n\n    \"\"\"\n    if labelpad is not None:\n        self.yaxis.labelpad = labelpad\n    return self.yaxis.set_label_text(ylabel, fontdict, **kwargs)",
                            "def get_legend_handles_labels(self, legend_handler_map=None):\n    \"\"\"\n    Return handles and labels for legend\n\n    ``ax.legend()`` is equivalent to ::\n\n      h, l = ax.get_legend_handles_labels()\n      ax.legend(h, l)\n\n    \"\"\"\n    (handles, labels) = mlegend._get_legend_handles_labels([self], legend_handler_map)\n    return (handles, labels)",
                            "@docstring.dedent_interpd\ndef legend(self, *args, **kwargs):\n    \"\"\"\n    Place a legend on the axes.\n\n    Call signatures::\n\n        legend()\n        legend(labels)\n        legend(handles, labels)\n\n    The call signatures correspond to three different ways how to use\n    this method.\n\n    **1. Automatic detection of elements to be shown in the legend**\n\n    The elements to be added to the legend are automatically determined,\n    when you do not pass in any extra arguments.\n\n    In this case, the labels are taken from the artist. You can specify\n    them either at artist creation or by calling the\n    :meth:`~.Artist.set_label` method on the artist::\n\n        line, = ax.plot([1, 2, 3], label='Inline label')\n        ax.legend()\n\n    or::\n\n        line, = ax.plot([1, 2, 3])\n        line.set_label('Label via method')\n        ax.legend()\n\n    Specific lines can be excluded from the automatic legend element\n    selection by defining a label starting with an underscore.\n    This is default for all artists, so calling `Axes.legend` without\n    any arguments and without setting the labels manually will result in\n    no legend being drawn.\n\n\n    **2. Labeling existing plot elements**\n\n    To make a legend for lines which already exist on the axes\n    (via plot for instance), simply call this function with an iterable\n    of strings, one for each legend item. For example::\n\n        ax.plot([1, 2, 3])\n        ax.legend(['A simple line'])\n\n    Note: This way of using is discouraged, because the relation between\n    plot elements and labels is only implicit by their order and can\n    easily be mixed up.\n\n\n    **3. Explicitly defining the elements in the legend**\n\n    For full control of which artists have a legend entry, it is possible\n    to pass an iterable of legend artists followed by an iterable of\n    legend labels respectively::\n\n        legend((line1, line2, line3), ('label1', 'label2', 'label3'))\n\n    Parameters\n    ----------\n    handles : sequence of `.Artist`, optional\n        A list of Artists (lines, patches) to be added to the legend.\n        Use this together with *labels*, if you need full control on what\n        is shown in the legend and the automatic mechanism described above\n        is not sufficient.\n\n        The length of handles and labels should be the same in this\n        case. If they are not, they are truncated to the smaller length.\n\n    labels : list of str, optional\n        A list of labels to show next to the artists.\n        Use this together with *handles*, if you need full control on what\n        is shown in the legend and the automatic mechanism described above\n        is not sufficient.\n\n    Other Parameters\n    ----------------\n    %(_legend_kw_doc)s\n\n    Returns\n    -------\n    legend : `~matplotlib.legend.Legend`\n\n    Notes\n    -----\n    Not all kinds of artist are supported by the legend command. See\n    :doc:`/tutorials/intermediate/legend_guide` for details.\n\n    Examples\n    --------\n    .. plot:: gallery/text_labels_and_annotations/legend.py\n    \"\"\"\n    (handles, labels, extra_args, kwargs) = mlegend._parse_legend_args([self], *args, **kwargs)\n    if len(extra_args):\n        raise TypeError('legend only accepts two non-keyword arguments')\n    self.legend_ = mlegend.Legend(self, handles, labels, **kwargs)\n    self.legend_._remove_method = self._remove_legend\n    return self.legend_",
                            "def _remove_legend(self, legend):\n    self.legend_ = None",
                            "def inset_axes(self, bounds, *, transform=None, zorder=5, **kwargs):\n    \"\"\"\n    Add a child inset axes to this existing axes.\n\n    Warnings\n    --------\n    This method is experimental as of 3.0, and the API may change.\n\n    Parameters\n    ----------\n    bounds : [x0, y0, width, height]\n        Lower-left corner of inset axes, and its width and height.\n\n    transform : `.Transform`\n        Defaults to `ax.transAxes`, i.e. the units of *rect* are in\n        axes-relative coordinates.\n\n    zorder : number\n        Defaults to 5 (same as `.Axes.legend`).  Adjust higher or lower\n        to change whether it is above or below data plotted on the\n        parent axes.\n\n    **kwargs\n        Other keyword arguments are passed on to the `.Axes` child axes.\n\n    Returns\n    -------\n    ax\n        The created `~.axes.Axes` instance.\n\n    Examples\n    --------\n    This example makes two inset axes, the first is in axes-relative\n    coordinates, and the second in data-coordinates::\n\n        fig, ax = plt.subplots()\n        ax.plot(range(10))\n        axin1 = ax.inset_axes([0.8, 0.1, 0.15, 0.15])\n        axin2 = ax.inset_axes(\n                [5, 7, 2.3, 2.3], transform=ax.transData)\n\n    \"\"\"\n    if transform is None:\n        transform = self.transAxes\n    label = kwargs.pop('label', 'inset_axes')\n    inset_locator = _make_inset_locator(bounds, transform, self)\n    bb = inset_locator(None, None)\n    inset_ax = Axes(self.figure, bb.bounds, zorder=zorder, label=label, **kwargs)\n    inset_ax.set_axes_locator(inset_locator)\n    self.add_child_axes(inset_ax)\n    return inset_ax",
                            "def indicate_inset(self, bounds, inset_ax=None, *, transform=None, facecolor='none', edgecolor='0.5', alpha=0.5, zorder=4.99, **kwargs):\n    \"\"\"\n    Add an inset indicator to the axes.  This is a rectangle on the plot\n    at the position indicated by *bounds* that optionally has lines that\n    connect the rectangle to an inset axes (`.Axes.inset_axes`).\n\n    Warnings\n    --------\n    This method is experimental as of 3.0, and the API may change.\n\n\n    Parameters\n    ----------\n    bounds : [x0, y0, width, height]\n        Lower-left corner of rectangle to be marked, and its width\n        and height.\n\n    inset_ax : `.Axes`\n        An optional inset axes to draw connecting lines to.  Two lines are\n        drawn connecting the indicator box to the inset axes on corners\n        chosen so as to not overlap with the indicator box.\n\n    transform : `.Transform`\n        Transform for the rectangle co-ordinates. Defaults to\n        `ax.transAxes`, i.e. the units of *rect* are in axes-relative\n        coordinates.\n\n    facecolor : color, default: 'none'\n        Facecolor of the rectangle.\n\n    edgecolor : color, default: '0.5'\n        Color of the rectangle and color of the connecting lines.\n\n    alpha : float\n        Transparency of the rectangle and connector lines.  Default is 0.5.\n\n    zorder : float\n        Drawing order of the rectangle and connector lines. Default is 4.99\n        (just below the default level of inset axes).\n\n    **kwargs\n        Other keyword arguments are passed on to the rectangle patch.\n\n    Returns\n    -------\n    rectangle_patch : `.patches.Rectangle`\n         The indicator frame.\n\n    connector_lines : 4-tuple of `.patches.ConnectionPatch`\n        The four connector lines connecting to (lower_left, upper_left,\n        lower_right upper_right) corners of *inset_ax*. Two lines are\n        set with visibility to *False*,  but the user can set the\n        visibility to True if the automatic choice is not deemed correct.\n\n    \"\"\"\n    self.apply_aspect()\n    if transform is None:\n        transform = self.transData\n    label = kwargs.pop('label', 'indicate_inset')\n    (x, y, width, height) = bounds\n    rectangle_patch = mpatches.Rectangle((x, y), width, height, facecolor=facecolor, edgecolor=edgecolor, alpha=alpha, zorder=zorder, label=label, transform=transform, **kwargs)\n    self.add_patch(rectangle_patch)\n    connects = []\n    if inset_ax is not None:\n        for xy_inset_ax in [(0, 0), (0, 1), (1, 0), (1, 1)]:\n            (ex, ey) = xy_inset_ax\n            if self.xaxis.get_inverted():\n                ex = 1 - ex\n            if self.yaxis.get_inverted():\n                ey = 1 - ey\n            xy_data = (x + ex * width, y + ey * height)\n            p = mpatches.ConnectionPatch(xyA=xy_inset_ax, coordsA=inset_ax.transAxes, xyB=xy_data, coordsB=self.transData, arrowstyle='-', zorder=zorder, edgecolor=edgecolor, alpha=alpha)\n            connects.append(p)\n            self.add_patch(p)\n        pos = inset_ax.get_position()\n        bboxins = pos.transformed(self.figure.transFigure)\n        rectbbox = mtransforms.Bbox.from_bounds(*bounds).transformed(transform)\n        x0 = rectbbox.x0 < bboxins.x0\n        x1 = rectbbox.x1 < bboxins.x1\n        y0 = rectbbox.y0 < bboxins.y0\n        y1 = rectbbox.y1 < bboxins.y1\n        connects[0].set_visible(x0 ^ y0)\n        connects[1].set_visible(x0 == y1)\n        connects[2].set_visible(x1 == y0)\n        connects[3].set_visible(x1 ^ y1)\n    return (rectangle_patch, tuple(connects) if connects else None)",
                            "def indicate_inset_zoom(self, inset_ax, **kwargs):\n    \"\"\"\n    Add an inset indicator rectangle to the axes based on the axis\n    limits for an *inset_ax* and draw connectors between *inset_ax*\n    and the rectangle.\n\n    Warnings\n    --------\n    This method is experimental as of 3.0, and the API may change.\n\n    Parameters\n    ----------\n    inset_ax : `.Axes`\n        Inset axes to draw connecting lines to.  Two lines are\n        drawn connecting the indicator box to the inset axes on corners\n        chosen so as to not overlap with the indicator box.\n\n    **kwargs\n        Other keyword arguments are passed on to `.Axes.indicate_inset`\n\n    Returns\n    -------\n    rectangle_patch : `.Patches.Rectangle`\n         Rectangle artist.\n\n    connector_lines : 4-tuple of `.Patches.ConnectionPatch`\n        Each of four connector lines coming from the rectangle drawn on\n        this axis, in the order lower left, upper left, lower right,\n        upper right.\n        Two are set with visibility to *False*,  but the user can\n        set the visibility to *True* if the automatic choice is not deemed\n        correct.\n    \"\"\"\n    xlim = inset_ax.get_xlim()\n    ylim = inset_ax.get_ylim()\n    rect = (xlim[0], ylim[0], xlim[1] - xlim[0], ylim[1] - ylim[0])\n    return self.indicate_inset(rect, inset_ax, **kwargs)",
                            "@docstring.dedent_interpd\ndef secondary_xaxis(self, location, *, functions=None, **kwargs):\n    \"\"\"\n    Add a second x-axis to this axes.\n\n    For example if we want to have a second scale for the data plotted on\n    the xaxis.\n\n    %(_secax_docstring)s\n\n    Examples\n    --------\n    The main axis shows frequency, and the secondary axis shows period.\n\n    .. plot::\n\n        fig, ax = plt.subplots()\n        ax.loglog(range(1, 360, 5), range(1, 360, 5))\n        ax.set_xlabel('frequency [Hz]')\n\n        def invert(x):\n            return 1 / x\n\n        secax = ax.secondary_xaxis('top', functions=(invert, invert))\n        secax.set_xlabel('Period [s]')\n        plt.show()\n    \"\"\"\n    if location in ['top', 'bottom'] or isinstance(location, Number):\n        secondary_ax = SecondaryAxis(self, 'x', location, functions, **kwargs)\n        self.add_child_axes(secondary_ax)\n        return secondary_ax\n    else:\n        raise ValueError('secondary_xaxis location must be either a float or \"top\"/\"bottom\"')",
                            "def secondary_yaxis(self, location, *, functions=None, **kwargs):\n    \"\"\"\n    Add a second y-axis to this axes.\n\n    For example if we want to have a second scale for the data plotted on\n    the yaxis.\n\n    %(_secax_docstring)s\n\n    Examples\n    --------\n    Add a secondary axes that converts from radians to degrees\n\n    .. plot::\n\n        fig, ax = plt.subplots()\n        ax.plot(range(1, 360, 5), range(1, 360, 5))\n        ax.set_ylabel('degrees')\n        secax = ax.secondary_yaxis('right', functions=(np.deg2rad,\n                                                       np.rad2deg))\n        secax.set_ylabel('radians')\n    \"\"\"\n    if location in ['left', 'right'] or isinstance(location, Number):\n        secondary_ax = SecondaryAxis(self, 'y', location, functions, **kwargs)\n        self.add_child_axes(secondary_ax)\n        return secondary_ax\n    else:\n        raise ValueError('secondary_yaxis location must be either a float or \"left\"/\"right\"')",
                            "@cbook._delete_parameter('3.1', 'withdash')\ndef text(self, x, y, s, fontdict=None, withdash=False, **kwargs):\n    \"\"\"\n    Add text to the axes.\n\n    Add the text *s* to the axes at location *x*, *y* in data coordinates.\n\n    Parameters\n    ----------\n    x, y : scalars\n        The position to place the text. By default, this is in data\n        coordinates. The coordinate system can be changed using the\n        *transform* parameter.\n\n    s : str\n        The text.\n\n    fontdict : dict, default: None\n        A dictionary to override the default text properties. If fontdict\n        is None, the defaults are determined by your rc parameters.\n\n    withdash : bool, default: False\n        Creates a `~matplotlib.text.TextWithDash` instance instead of a\n        `~matplotlib.text.Text` instance.\n\n    Returns\n    -------\n    text : `.Text`\n        The created `.Text` instance.\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.text.Text` properties.\n        Other miscellaneous text parameters.\n\n    Examples\n    --------\n    Individual keyword arguments can be used to override any given\n    parameter::\n\n        >>> text(x, y, s, fontsize=12)\n\n    The default transform specifies that text is in data coords,\n    alternatively, you can specify text in axis coords ((0, 0) is\n    lower-left and (1, 1) is upper-right).  The example below places\n    text in the center of the axes::\n\n        >>> text(0.5, 0.5, 'matplotlib', horizontalalignment='center',\n        ...      verticalalignment='center', transform=ax.transAxes)\n\n    You can put a rectangular box around the text instance (e.g., to\n    set a background color) by using the keyword *bbox*.  *bbox* is\n    a dictionary of `~matplotlib.patches.Rectangle`\n    properties.  For example::\n\n        >>> text(x, y, s, bbox=dict(facecolor='red', alpha=0.5))\n    \"\"\"\n    if fontdict is None:\n        fontdict = {}\n    effective_kwargs = {'verticalalignment': 'baseline', 'horizontalalignment': 'left', 'transform': self.transData, 'clip_on': False, **fontdict, **kwargs}\n    if withdash and withdash is not cbook.deprecation._deprecated_parameter:\n        t = mtext.TextWithDash(x, y, text=s)\n    else:\n        t = mtext.Text(x, y, text=s)\n    t.update(effective_kwargs)\n    t.set_clip_path(self.patch)\n    self._add_text(t)\n    return t",
                            "@docstring.dedent_interpd\ndef annotate(self, s, xy, *args, **kwargs):\n    a = mtext.Annotation(s, xy, *args, **kwargs)\n    a.set_transform(mtransforms.IdentityTransform())\n    if 'clip_on' in kwargs:\n        a.set_clip_path(self.patch)\n    self._add_text(a)\n    return a",
                            "@docstring.dedent_interpd\ndef axhline(self, y=0, xmin=0, xmax=1, **kwargs):\n    \"\"\"\n    Add a horizontal line across the axis.\n\n    Parameters\n    ----------\n    y : float, default: 0\n        y position in data coordinates of the horizontal line.\n\n    xmin : float, default: 0\n        Should be between 0 and 1, 0 being the far left of the plot, 1 the\n        far right of the plot.\n\n    xmax : float, default: 1\n        Should be between 0 and 1, 0 being the far left of the plot, 1 the\n        far right of the plot.\n\n    Returns\n    -------\n    line : `~matplotlib.lines.Line2D`\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Valid keyword arguments are `.Line2D` properties, with the\n        exception of 'transform':\n\n        %(_Line2D_docstr)s\n\n    See also\n    --------\n    hlines : Add horizontal lines in data coordinates.\n    axhspan : Add a horizontal span (rectangle) across the axis.\n    axline : Add a line with an arbitrary slope.\n\n    Examples\n    --------\n    * draw a thick red hline at 'y' = 0 that spans the xrange::\n\n        >>> axhline(linewidth=4, color='r')\n\n    * draw a default hline at 'y' = 1 that spans the xrange::\n\n        >>> axhline(y=1)\n\n    * draw a default hline at 'y' = .5 that spans the middle half of\n      the xrange::\n\n        >>> axhline(y=.5, xmin=0.25, xmax=0.75)\n    \"\"\"\n    if 'transform' in kwargs:\n        raise ValueError(\"'transform' is not allowed as a kwarg;\" + 'axhline generates its own transform.')\n    (ymin, ymax) = self.get_ybound()\n    self._process_unit_info(ydata=y, kwargs=kwargs)\n    yy = self.convert_yunits(y)\n    scaley = yy < ymin or yy > ymax\n    trans = self.get_yaxis_transform(which='grid')\n    l = mlines.Line2D([xmin, xmax], [y, y], transform=trans, **kwargs)\n    self.add_line(l)\n    self._request_autoscale_view(scalex=False, scaley=scaley)\n    return l",
                            "@docstring.dedent_interpd\ndef axvline(self, x=0, ymin=0, ymax=1, **kwargs):\n    \"\"\"\n    Add a vertical line across the axes.\n\n    Parameters\n    ----------\n    x : float, default: 0\n        x position in data coordinates of the vertical line.\n\n    ymin : float, default: 0\n        Should be between 0 and 1, 0 being the bottom of the plot, 1 the\n        top of the plot.\n\n    ymax : float, default: 1\n        Should be between 0 and 1, 0 being the bottom of the plot, 1 the\n        top of the plot.\n\n    Returns\n    -------\n    line : `~matplotlib.lines.Line2D`\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Valid keyword arguments are `.Line2D` properties, with the\n        exception of 'transform':\n\n        %(_Line2D_docstr)s\n\n    Examples\n    --------\n    * draw a thick red vline at *x* = 0 that spans the yrange::\n\n        >>> axvline(linewidth=4, color='r')\n\n    * draw a default vline at *x* = 1 that spans the yrange::\n\n        >>> axvline(x=1)\n\n    * draw a default vline at *x* = .5 that spans the middle half of\n      the yrange::\n\n        >>> axvline(x=.5, ymin=0.25, ymax=0.75)\n\n    See also\n    --------\n    vlines : Add vertical lines in data coordinates.\n    axvspan : Add a vertical span (rectangle) across the axis.\n    axline : Add a line with an abritrary slope.\n    \"\"\"\n    if 'transform' in kwargs:\n        raise ValueError(\"'transform' is not allowed as a kwarg;\" + 'axvline generates its own transform.')\n    (xmin, xmax) = self.get_xbound()\n    self._process_unit_info(xdata=x, kwargs=kwargs)\n    xx = self.convert_xunits(x)\n    scalex = xx < xmin or xx > xmax\n    trans = self.get_xaxis_transform(which='grid')\n    l = mlines.Line2D([x, x], [ymin, ymax], transform=trans, **kwargs)\n    self.add_line(l)\n    self._request_autoscale_view(scalex=scalex, scaley=False)\n    return l",
                            "@docstring.dedent_interpd\ndef axline(self, xy1, xy2, **kwargs):\n    \"\"\"\n    Add an infinitely long straight line that passes through two points.\n\n    This draws a straight line \"on the screen\", regardless of the x and y\n    scales, and is thus also suitable for drawing exponential decays in\n    semilog plots, power laws in loglog plots, etc.\n\n    Parameters\n    ----------\n    xy1, xy2 : (float, float)\n        Points for the line to pass through.\n\n    Returns\n    -------\n    :class:`~matplotlib.lines.Line2D`\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Valid kwargs are :class:`~matplotlib.lines.Line2D` properties,\n        with the exception of 'transform':\n\n        %(_Line2D_docstr)s\n\n    Examples\n    --------\n    Draw a thick red line passing through (0, 0) and (1, 1)::\n\n        >>> axline((0, 0), (1, 1), linewidth=4, color='r')\n\n    See Also\n    --------\n    axhline : for horizontal lines\n    axvline : for vertical lines\n    \"\"\"\n    if 'transform' in kwargs:\n        raise TypeError(\"'transform' is not allowed as a kwarg; axline generates its own transform\")\n    (x1, y1) = xy1\n    (x2, y2) = xy2\n    line = mlines._AxLine([x1, x2], [y1, y2], **kwargs)\n    self._set_artist_props(line)\n    if line.get_clip_path() is None:\n        line.set_clip_path(self.patch)\n    if not line.get_label():\n        line.set_label(f'_line{len(self.lines)}')\n    self.lines.append(line)\n    line._remove_method = self.lines.remove\n    self.update_datalim([xy1, xy2])\n    self._request_autoscale_view()\n    return line",
                            "@docstring.dedent_interpd\ndef axhspan(self, ymin, ymax, xmin=0, xmax=1, **kwargs):\n    \"\"\"\n    Add a horizontal span (rectangle) across the axis.\n\n    Draw a horizontal span (rectangle) from *ymin* to *ymax*.\n    With the default values of *xmin* = 0 and *xmax* = 1, this\n    always spans the xrange, regardless of the xlim settings, even\n    if you change them, e.g., with the :meth:`set_xlim` command.\n    That is, the horizontal extent is in axes coords: 0=left,\n    0.5=middle, 1.0=right but the *y* location is in data\n    coordinates.\n\n    Parameters\n    ----------\n    ymin : float\n        Lower y-coordinate of the span, in data units.\n    ymax : float\n        Upper y-coordinate of the span, in data units.\n    xmin : float, default: 0\n        Lower x-coordinate of the span, in x-axis (0-1) units.\n    xmax : float, default: 1\n        Upper x-coordinate of the span, in x-axis (0-1) units.\n\n    Returns\n    -------\n    Polygon : `~matplotlib.patches.Polygon`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.patches.Polygon` properties.\n\n    %(Polygon)s\n\n    See Also\n    --------\n    axvspan : Add a vertical span across the axes.\n    \"\"\"\n    trans = self.get_yaxis_transform(which='grid')\n    self._process_unit_info([xmin, xmax], [ymin, ymax], kwargs=kwargs)\n    (xmin, xmax) = self.convert_xunits([xmin, xmax])\n    (ymin, ymax) = self.convert_yunits([ymin, ymax])\n    verts = ((xmin, ymin), (xmin, ymax), (xmax, ymax), (xmax, ymin))\n    p = mpatches.Polygon(verts, **kwargs)\n    p.set_transform(trans)\n    self.add_patch(p)\n    self._request_autoscale_view(scalex=False)\n    return p",
                            "def axvspan(self, xmin, xmax, ymin=0, ymax=1, **kwargs):\n    \"\"\"\n    Add a vertical span (rectangle) across the axes.\n\n    Draw a vertical span (rectangle) from *xmin* to *xmax*.  With\n    the default values of *ymin* = 0 and *ymax* = 1. This always\n    spans the yrange, regardless of the ylim settings, even if you\n    change them, e.g., with the :meth:`set_ylim` command.  That is,\n    the vertical extent is in axes coords: 0=bottom, 0.5=middle,\n    1.0=top but the x location is in data coordinates.\n\n    Parameters\n    ----------\n    xmin : float\n        Lower x-coordinate of the span, in data units.\n    xmax : float\n        Upper x-coordinate of the span, in data units.\n    ymin : float, default: 0\n        Lower y-coordinate of the span, in y-axis units (0-1).\n    ymax : float, default: 1\n        Upper y-coordinate of the span, in y-axis units (0-1).\n\n    Returns\n    -------\n    rectangle : `~matplotlib.patches.Polygon`\n        Vertical span (rectangle) from (xmin, ymin) to (xmax, ymax).\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Optional parameters are properties of the class `.Polygon`.\n\n    See Also\n    --------\n    axhspan : Add a horizontal span across the axes.\n\n    Examples\n    --------\n    Draw a vertical, green, translucent rectangle from x = 1.25 to\n    x = 1.55 that spans the yrange of the axes.\n\n    >>> axvspan(1.25, 1.55, facecolor='g', alpha=0.5)\n\n    \"\"\"\n    trans = self.get_xaxis_transform(which='grid')\n    self._process_unit_info([xmin, xmax], [ymin, ymax], kwargs=kwargs)\n    (xmin, xmax) = self.convert_xunits([xmin, xmax])\n    (ymin, ymax) = self.convert_yunits([ymin, ymax])\n    verts = [(xmin, ymin), (xmin, ymax), (xmax, ymax), (xmax, ymin)]\n    p = mpatches.Polygon(verts, **kwargs)\n    p.set_transform(trans)\n    self.add_patch(p)\n    self._request_autoscale_view(scaley=False)\n    return p",
                            "@_preprocess_data(replace_names=['y', 'xmin', 'xmax', 'colors'], label_namer='y')\ndef hlines(self, y, xmin, xmax, colors='k', linestyles='solid', label='', **kwargs):\n    \"\"\"\n    Plot horizontal lines at each *y* from *xmin* to *xmax*.\n\n    Parameters\n    ----------\n    y : scalar or sequence of scalar\n        y-indexes where to plot the lines.\n\n    xmin, xmax : scalar or 1D array-like\n        Respective beginning and end of each line. If scalars are\n        provided, all lines will have same length.\n\n    colors : array-like of colors, default: 'k'\n\n    linestyles : {'solid', 'dashed', 'dashdot', 'dotted'}, optional\n\n    label : str, default: ''\n\n    Returns\n    -------\n    lines : `~matplotlib.collections.LineCollection`\n\n    Other Parameters\n    ----------------\n    **kwargs :  `~matplotlib.collections.LineCollection` properties.\n\n    See also\n    --------\n    vlines : vertical lines\n    axhline: horizontal line across the axes\n    \"\"\"\n    self._process_unit_info([xmin, xmax], y, kwargs=kwargs)\n    y = self.convert_yunits(y)\n    xmin = self.convert_xunits(xmin)\n    xmax = self.convert_xunits(xmax)\n    if not np.iterable(y):\n        y = [y]\n    if not np.iterable(xmin):\n        xmin = [xmin]\n    if not np.iterable(xmax):\n        xmax = [xmax]\n    (y, xmin, xmax) = cbook.delete_masked_points(y, xmin, xmax)\n    y = np.ravel(y)\n    xmin = np.resize(xmin, y.shape)\n    xmax = np.resize(xmax, y.shape)\n    verts = [((thisxmin, thisy), (thisxmax, thisy)) for (thisxmin, thisxmax, thisy) in zip(xmin, xmax, y)]\n    lines = mcoll.LineCollection(verts, colors=colors, linestyles=linestyles, label=label)\n    self.add_collection(lines, autolim=False)\n    lines.update(kwargs)\n    if len(y) > 0:\n        minx = min(xmin.min(), xmax.min())\n        maxx = max(xmin.max(), xmax.max())\n        miny = y.min()\n        maxy = y.max()\n        corners = ((minx, miny), (maxx, maxy))\n        self.update_datalim(corners)\n        self._request_autoscale_view()\n    return lines",
                            "@_preprocess_data(replace_names=['x', 'ymin', 'ymax', 'colors'], label_namer='x')\ndef vlines(self, x, ymin, ymax, colors='k', linestyles='solid', label='', **kwargs):\n    \"\"\"\n    Plot vertical lines.\n\n    Plot vertical lines at each *x* from *ymin* to *ymax*.\n\n    Parameters\n    ----------\n    x : scalar or 1D array-like\n        x-indexes where to plot the lines.\n\n    ymin, ymax : scalar or 1D array-like\n        Respective beginning and end of each line. If scalars are\n        provided, all lines will have same length.\n\n    colors : array-like of colors, default: 'k'\n\n    linestyles : {'solid', 'dashed', 'dashdot', 'dotted'}, optional\n\n    label : str, default: ''\n\n    Returns\n    -------\n    lines : `~matplotlib.collections.LineCollection`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.collections.LineCollection` properties.\n\n    See also\n    --------\n    hlines : horizontal lines\n    axvline: vertical line across the axes\n    \"\"\"\n    self._process_unit_info(xdata=x, ydata=[ymin, ymax], kwargs=kwargs)\n    x = self.convert_xunits(x)\n    ymin = self.convert_yunits(ymin)\n    ymax = self.convert_yunits(ymax)\n    if not np.iterable(x):\n        x = [x]\n    if not np.iterable(ymin):\n        ymin = [ymin]\n    if not np.iterable(ymax):\n        ymax = [ymax]\n    (x, ymin, ymax) = cbook.delete_masked_points(x, ymin, ymax)\n    x = np.ravel(x)\n    ymin = np.resize(ymin, x.shape)\n    ymax = np.resize(ymax, x.shape)\n    verts = [((thisx, thisymin), (thisx, thisymax)) for (thisx, thisymin, thisymax) in zip(x, ymin, ymax)]\n    lines = mcoll.LineCollection(verts, colors=colors, linestyles=linestyles, label=label)\n    self.add_collection(lines, autolim=False)\n    lines.update(kwargs)\n    if len(x) > 0:\n        minx = x.min()\n        maxx = x.max()\n        miny = min(ymin.min(), ymax.min())\n        maxy = max(ymin.max(), ymax.max())\n        corners = ((minx, miny), (maxx, maxy))\n        self.update_datalim(corners)\n        self._request_autoscale_view()\n    return lines",
                            "@_preprocess_data(replace_names=['positions', 'lineoffsets', 'linelengths', 'linewidths', 'colors', 'linestyles'])\n@docstring.dedent_interpd\ndef eventplot(self, positions, orientation='horizontal', lineoffsets=1, linelengths=1, linewidths=None, colors=None, linestyles='solid', **kwargs):\n    \"\"\"\n    Plot identical parallel lines at the given positions.\n\n    *positions* should be a 1D or 2D array-like object, with each row\n    corresponding to a row or column of lines.\n\n    This type of plot is commonly used in neuroscience for representing\n    neural events, where it is usually called a spike raster, dot raster,\n    or raster plot.\n\n    However, it is useful in any situation where you wish to show the\n    timing or position of multiple sets of discrete events, such as the\n    arrival times of people to a business on each day of the month or the\n    date of hurricanes each year of the last century.\n\n    Parameters\n    ----------\n    positions : 1D or 2D array-like object\n        Each value is an event. If *positions* is a 2D array-like, each\n        row corresponds to a row or a column of lines (depending on the\n        *orientation* parameter).\n\n    orientation : {'horizontal', 'vertical'}, optional\n        The direction of the event collections:\n\n        - 'horizontal': the lines are arranged horizontally in rows,\n          and are vertical.\n        - 'vertical': the lines are arranged vertically in columns,\n          and are horizontal.\n\n    lineoffsets : scalar or sequence of scalars, default: 1\n        The offset of the center of the lines from the origin, in the\n        direction orthogonal to *orientation*.\n\n    linelengths : scalar or sequence of scalars, default: 1\n        The total height of the lines (i.e. the lines stretches from\n        ``lineoffset - linelength/2`` to ``lineoffset + linelength/2``).\n\n    linewidths : scalar, scalar sequence or None, default: None\n        The line width(s) of the event lines, in points. If it is None,\n        defaults to its rcParams setting.\n\n    colors : color, sequence of colors or None, default: None\n        The color(s) of the event lines. If it is None, defaults to its\n        rcParams setting.\n\n    linestyles : str or tuple or a sequence of such values, optional\n        Default is 'solid'. Valid strings are ['solid', 'dashed',\n        'dashdot', 'dotted', '-', '--', '-.', ':']. Dash tuples\n        should be of the form::\n\n            (offset, onoffseq),\n\n        where *onoffseq* is an even length tuple of on and off ink\n        in points.\n\n    **kwargs : optional\n        Other keyword arguments are line collection properties.  See\n        :class:`~matplotlib.collections.LineCollection` for a list of\n        the valid properties.\n\n    Returns\n    -------\n    list : A list of :class:`~.collections.EventCollection` objects.\n        Contains the :class:`~.collections.EventCollection` that\n        were added.\n\n    Notes\n    -----\n    For *linelengths*, *linewidths*, *colors*, and *linestyles*, if only\n    a single value is given, that value is applied to all lines.  If an\n    array-like is given, it must have the same length as *positions*, and\n    each value will be applied to the corresponding row of the array.\n\n    Examples\n    --------\n    .. plot:: gallery/lines_bars_and_markers/eventplot_demo.py\n    \"\"\"\n    self._process_unit_info(xdata=positions, ydata=[lineoffsets, linelengths], kwargs=kwargs)\n    positions = self.convert_xunits(positions)\n    lineoffsets = self.convert_yunits(lineoffsets)\n    linelengths = self.convert_yunits(linelengths)\n    if not np.iterable(positions):\n        positions = [positions]\n    elif any((np.iterable(position) for position in positions)):\n        positions = [np.asanyarray(position) for position in positions]\n    else:\n        positions = [np.asanyarray(positions)]\n    if len(positions) == 0:\n        return []\n    colors = cbook.local_over_kwdict(colors, kwargs, 'color')\n    linewidths = cbook.local_over_kwdict(linewidths, kwargs, 'linewidth')\n    linestyles = cbook.local_over_kwdict(linestyles, kwargs, 'linestyle')\n    if not np.iterable(lineoffsets):\n        lineoffsets = [lineoffsets]\n    if not np.iterable(linelengths):\n        linelengths = [linelengths]\n    if not np.iterable(linewidths):\n        linewidths = [linewidths]\n    if not np.iterable(colors):\n        colors = [colors]\n    if hasattr(linestyles, 'lower') or not np.iterable(linestyles):\n        linestyles = [linestyles]\n    lineoffsets = np.asarray(lineoffsets)\n    linelengths = np.asarray(linelengths)\n    linewidths = np.asarray(linewidths)\n    if len(lineoffsets) == 0:\n        lineoffsets = [None]\n    if len(linelengths) == 0:\n        linelengths = [None]\n    if len(linewidths) == 0:\n        lineoffsets = [None]\n    if len(linewidths) == 0:\n        lineoffsets = [None]\n    if len(colors) == 0:\n        colors = [None]\n    try:\n        colors = mcolors.to_rgba_array(colors)\n    except ValueError:\n        pass\n    if len(lineoffsets) == 1 and len(positions) != 1:\n        lineoffsets = np.tile(lineoffsets, len(positions))\n        lineoffsets[0] = 0\n        lineoffsets = np.cumsum(lineoffsets)\n    if len(linelengths) == 1:\n        linelengths = np.tile(linelengths, len(positions))\n    if len(linewidths) == 1:\n        linewidths = np.tile(linewidths, len(positions))\n    if len(colors) == 1:\n        colors = list(colors)\n        colors = colors * len(positions)\n    if len(linestyles) == 1:\n        linestyles = [linestyles] * len(positions)\n    if len(lineoffsets) != len(positions):\n        raise ValueError('lineoffsets and positions are unequal sized sequences')\n    if len(linelengths) != len(positions):\n        raise ValueError('linelengths and positions are unequal sized sequences')\n    if len(linewidths) != len(positions):\n        raise ValueError('linewidths and positions are unequal sized sequences')\n    if len(colors) != len(positions):\n        raise ValueError('colors and positions are unequal sized sequences')\n    if len(linestyles) != len(positions):\n        raise ValueError('linestyles and positions are unequal sized sequences')\n    colls = []\n    for (position, lineoffset, linelength, linewidth, color, linestyle) in zip(positions, lineoffsets, linelengths, linewidths, colors, linestyles):\n        coll = mcoll.EventCollection(position, orientation=orientation, lineoffset=lineoffset, linelength=linelength, linewidth=linewidth, color=color, linestyle=linestyle)\n        self.add_collection(coll, autolim=False)\n        coll.update(kwargs)\n        colls.append(coll)\n    if len(positions) > 0:\n        min_max = [(np.min(_p), np.max(_p)) for _p in positions if len(_p) > 0]\n        if len(min_max) > 0:\n            (mins, maxes) = zip(*min_max)\n            minpos = np.min(mins)\n            maxpos = np.max(maxes)\n            minline = (lineoffsets - linelengths).min()\n            maxline = (lineoffsets + linelengths).max()\n            if orientation is not None and orientation.lower() == 'vertical':\n                corners = ((minline, minpos), (maxline, maxpos))\n            else:\n                corners = ((minpos, minline), (maxpos, maxline))\n            self.update_datalim(corners)\n            self._request_autoscale_view()\n    return colls",
                            "@docstring.dedent_interpd\ndef plot(self, *args, scalex=True, scaley=True, data=None, **kwargs):\n    \"\"\"\n    Plot y versus x as lines and/or markers.\n\n    Call signatures::\n\n        plot([x], y, [fmt], *, data=None, **kwargs)\n        plot([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n\n    The coordinates of the points or line nodes are given by *x*, *y*.\n\n    The optional parameter *fmt* is a convenient way for defining basic\n    formatting like color, marker and linestyle. It's a shortcut string\n    notation described in the *Notes* section below.\n\n    >>> plot(x, y)        # plot x and y using default line style and color\n    >>> plot(x, y, 'bo')  # plot x and y using blue circle markers\n    >>> plot(y)           # plot y using x as index array 0..N-1\n    >>> plot(y, 'r+')     # ditto, but with red plusses\n\n    You can use `.Line2D` properties as keyword arguments for more\n    control on the appearance. Line properties and *fmt* can be mixed.\n    The following two calls yield identical results:\n\n    >>> plot(x, y, 'go--', linewidth=2, markersize=12)\n    >>> plot(x, y, color='green', marker='o', linestyle='dashed',\n    ...      linewidth=2, markersize=12)\n\n    When conflicting with *fmt*, keyword arguments take precedence.\n\n\n    **Plotting labelled data**\n\n    There's a convenient way for plotting objects with labelled data (i.e.\n    data that can be accessed by index ``obj['y']``). Instead of giving\n    the data in *x* and *y*, you can provide the object in the *data*\n    parameter and just give the labels for *x* and *y*::\n\n    >>> plot('xlabel', 'ylabel', data=obj)\n\n    All indexable objects are supported. This could e.g. be a `dict`, a\n    `pandas.DataFame` or a structured numpy array.\n\n\n    **Plotting multiple sets of data**\n\n    There are various ways to plot multiple sets of data.\n\n    - The most straight forward way is just to call `plot` multiple times.\n      Example:\n\n      >>> plot(x1, y1, 'bo')\n      >>> plot(x2, y2, 'go')\n\n    - Alternatively, if your data is already a 2d array, you can pass it\n      directly to *x*, *y*. A separate data set will be drawn for every\n      column.\n\n      Example: an array ``a`` where the first column represents the *x*\n      values and the other columns are the *y* columns::\n\n      >>> plot(a[0], a[1:])\n\n    - The third way is to specify multiple sets of *[x]*, *y*, *[fmt]*\n      groups::\n\n      >>> plot(x1, y1, 'g^', x2, y2, 'g-')\n\n      In this case, any additional keyword argument applies to all\n      datasets. Also this syntax cannot be combined with the *data*\n      parameter.\n\n    By default, each line is assigned a different style specified by a\n    'style cycle'. The *fmt* and line property parameters are only\n    necessary if you want explicit deviations from these defaults.\n    Alternatively, you can also change the style cycle using\n    :rc:`axes.prop_cycle`.\n\n\n    Parameters\n    ----------\n    x, y : array-like or scalar\n        The horizontal / vertical coordinates of the data points.\n        *x* values are optional and default to ``range(len(y))``.\n\n        Commonly, these parameters are 1D arrays.\n\n        They can also be scalars, or two-dimensional (in that case, the\n        columns represent separate data sets).\n\n        These arguments cannot be passed as keywords.\n\n    fmt : str, optional\n        A format string, e.g. 'ro' for red circles. See the *Notes*\n        section for a full description of the format strings.\n\n        Format strings are just an abbreviation for quickly setting\n        basic line properties. All of these and more can also be\n        controlled by keyword arguments.\n\n        This argument cannot be passed as keyword.\n\n    data : indexable object, optional\n        An object with labelled data. If given, provide the label names to\n        plot in *x* and *y*.\n\n        .. note::\n            Technically there's a slight ambiguity in calls where the\n            second label is a valid *fmt*. ``plot('n', 'o', data=obj)``\n            could be ``plt(x, y)`` or ``plt(y, fmt)``. In such cases,\n            the former interpretation is chosen, but a warning is issued.\n            You may suppress the warning by adding an empty format string\n            ``plot('n', 'o', '', data=obj)``.\n\n    Other Parameters\n    ----------------\n    scalex, scaley : bool, default: True\n        These parameters determined if the view limits are adapted to\n        the data limits. The values are passed on to `autoscale_view`.\n\n    **kwargs : `.Line2D` properties, optional\n        *kwargs* are used to specify properties like a line label (for\n        auto legends), linewidth, antialiasing, marker face color.\n        Example::\n\n        >>> plot([1, 2, 3], [1, 2, 3], 'go-', label='line 1', linewidth=2)\n        >>> plot([1, 2, 3], [1, 4, 9], 'rs', label='line 2')\n\n        If you make multiple lines with one plot command, the kwargs\n        apply to all those lines.\n\n        Here is a list of available `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    See Also\n    --------\n    scatter : XY scatter plot with markers of varying size and/or color (\n        sometimes also called bubble chart).\n\n    Notes\n    -----\n    **Format Strings**\n\n    A format string consists of a part for color, marker and line::\n\n        fmt = '[marker][line][color]'\n\n    Each of them is optional. If not provided, the value from the style\n    cycle is used. Exception: If ``line`` is given, but no ``marker``,\n    the data will be a line without markers.\n\n    Other combinations such as ``[color][marker][line]`` are also\n    supported, but note that their parsing may be ambiguous.\n\n    **Markers**\n\n    =============    ===============================\n    character        description\n    =============    ===============================\n    ``'.'``          point marker\n    ``','``          pixel marker\n    ``'o'``          circle marker\n    ``'v'``          triangle_down marker\n    ``'^'``          triangle_up marker\n    ``'<'``          triangle_left marker\n    ``'>'``          triangle_right marker\n    ``'1'``          tri_down marker\n    ``'2'``          tri_up marker\n    ``'3'``          tri_left marker\n    ``'4'``          tri_right marker\n    ``'s'``          square marker\n    ``'p'``          pentagon marker\n    ``'*'``          star marker\n    ``'h'``          hexagon1 marker\n    ``'H'``          hexagon2 marker\n    ``'+'``          plus marker\n    ``'x'``          x marker\n    ``'D'``          diamond marker\n    ``'d'``          thin_diamond marker\n    ``'|'``          vline marker\n    ``'_'``          hline marker\n    =============    ===============================\n\n    **Line Styles**\n\n    =============    ===============================\n    character        description\n    =============    ===============================\n    ``'-'``          solid line style\n    ``'--'``         dashed line style\n    ``'-.'``         dash-dot line style\n    ``':'``          dotted line style\n    =============    ===============================\n\n    Example format strings::\n\n        'b'    # blue markers with default shape\n        'or'   # red circles\n        '-g'   # green solid line\n        '--'   # dashed line with default color\n        '^k:'  # black triangle_up markers connected by a dotted line\n\n    **Colors**\n\n    The supported color abbreviations are the single letter codes\n\n    =============    ===============================\n    character        color\n    =============    ===============================\n    ``'b'``          blue\n    ``'g'``          green\n    ``'r'``          red\n    ``'c'``          cyan\n    ``'m'``          magenta\n    ``'y'``          yellow\n    ``'k'``          black\n    ``'w'``          white\n    =============    ===============================\n\n    and the ``'CN'`` colors that index into the default property cycle.\n\n    If the color is the only part of the format string, you can\n    additionally use any  `matplotlib.colors` spec, e.g. full names\n    (``'green'``) or hex strings (``'#008000'``).\n    \"\"\"\n    kwargs = cbook.normalize_kwargs(kwargs, mlines.Line2D)\n    lines = [*self._get_lines(*args, data=data, **kwargs)]\n    for line in lines:\n        self.add_line(line)\n    self._request_autoscale_view(scalex=scalex, scaley=scaley)\n    return lines",
                            "@_preprocess_data(replace_names=['x', 'y'], label_namer='y')\n@docstring.dedent_interpd\ndef plot_date(self, x, y, fmt='o', tz=None, xdate=True, ydate=False, **kwargs):\n    \"\"\"\n    Plot data that contains dates.\n\n    Similar to `.plot`, this plots *y* vs. *x* as lines or markers.\n    However, the axis labels are formatted as dates depending on *xdate*\n    and *ydate*.\n\n    Parameters\n    ----------\n    x, y : array-like\n        The coordinates of the data points. If *xdate* or *ydate* is\n        *True*, the respective values *x* or *y* are interpreted as\n        :ref:`Matplotlib dates <date-format>`.\n\n    fmt : str, optional\n        The plot format string. For details, see the corresponding\n        parameter in `.plot`.\n\n    tz : timezone string or `tzinfo` or None\n        The time zone to use in labeling dates. If *None*, defaults to\n        :rc:`timezone`.\n\n    xdate : bool, default: True\n        If *True*, the *x*-axis will be interpreted as Matplotlib dates.\n\n    ydate : bool, default: False\n        If *True*, the *y*-axis will be interpreted as Matplotlib dates.\n\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    matplotlib.dates : Helper functions on dates.\n    matplotlib.dates.date2num : Convert dates to num.\n    matplotlib.dates.num2date : Convert num to dates.\n    matplotlib.dates.drange : Create an equally spaced sequence of dates.\n\n    Notes\n    -----\n    If you are using custom date tickers and formatters, it may be\n    necessary to set the formatters/locators after the call to\n    `.plot_date`. `.plot_date` will set the default tick locator to\n    `.AutoDateLocator` (if the tick locator is not already set to a\n    `.DateLocator` instance) and the default tick formatter to\n    `.AutoDateFormatter` (if the tick formatter is not already set to a\n    `.DateFormatter` instance).\n    \"\"\"\n    if xdate:\n        self.xaxis_date(tz)\n    if ydate:\n        self.yaxis_date(tz)\n    ret = self.plot(x, y, fmt, **kwargs)\n    self._request_autoscale_view()\n    return ret",
                            "@docstring.dedent_interpd\ndef loglog(self, *args, **kwargs):\n    \"\"\"\n    Make a plot with log scaling on both the x and y axis.\n\n    Call signatures::\n\n        loglog([x], y, [fmt], data=None, **kwargs)\n        loglog([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n\n    This is just a thin wrapper around `.plot` which additionally changes\n    both the x-axis and the y-axis to log scaling. All of the concepts and\n    parameters of plot can be used here as well.\n\n    The additional parameters *basex/y*, *subsx/y* and *nonposx/y* control\n    the x/y-axis properties. They are just forwarded to `.Axes.set_xscale`\n    and `.Axes.set_yscale`.\n\n    Parameters\n    ----------\n    basex, basey : scalar, optional, default 10\n        Base of the x/y logarithm.\n\n    subsx, subsy : sequence, optional\n        The location of the minor x/y ticks. If *None*, reasonable\n        locations are automatically chosen depending on the number of\n        decades in the plot.\n        See `.Axes.set_xscale` / `.Axes.set_yscale` for details.\n\n    nonposx, nonposy : {'mask', 'clip'}, optional, default 'mask'\n        Non-positive values in x or y can be masked as invalid, or clipped\n        to a very small positive number.\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All parameters supported by `.plot`.\n    \"\"\"\n    dx = {k: kwargs.pop(k) for k in ['basex', 'subsx', 'nonposx'] if k in kwargs}\n    dy = {k: kwargs.pop(k) for k in ['basey', 'subsy', 'nonposy'] if k in kwargs}\n    self.set_xscale('log', **dx)\n    self.set_yscale('log', **dy)\n    l = self.plot(*args, **kwargs)\n    return l",
                            "@docstring.dedent_interpd\ndef semilogx(self, *args, **kwargs):\n    \"\"\"\n    Make a plot with log scaling on the x axis.\n\n    Call signatures::\n\n        semilogx([x], y, [fmt], data=None, **kwargs)\n        semilogx([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n\n    This is just a thin wrapper around `.plot` which additionally changes\n    the x-axis to log scaling. All of the concepts and parameters of plot\n    can be used here as well.\n\n    The additional parameters *basex*, *subsx* and *nonposx* control the\n    x-axis properties. They are just forwarded to `.Axes.set_xscale`.\n\n    Parameters\n    ----------\n    basex : scalar, optional, default 10\n        Base of the x logarithm.\n\n    subsx : array-like, optional\n        The location of the minor xticks. If *None*, reasonable locations\n        are automatically chosen depending on the number of decades in the\n        plot. See `.Axes.set_xscale` for details.\n\n    nonposx : {'mask', 'clip'}, optional, default 'mask'\n        Non-positive values in x can be masked as invalid, or clipped to a\n        very small positive number.\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All parameters supported by `.plot`.\n    \"\"\"\n    d = {k: kwargs.pop(k) for k in ['basex', 'subsx', 'nonposx'] if k in kwargs}\n    self.set_xscale('log', **d)\n    l = self.plot(*args, **kwargs)\n    return l",
                            "@docstring.dedent_interpd\ndef semilogy(self, *args, **kwargs):\n    \"\"\"\n    Make a plot with log scaling on the y axis.\n\n    Call signatures::\n\n        semilogy([x], y, [fmt], data=None, **kwargs)\n        semilogy([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n\n    This is just a thin wrapper around `.plot` which additionally changes\n    the y-axis to log scaling. All of the concepts and parameters of plot\n    can be used here as well.\n\n    The additional parameters *basey*, *subsy* and *nonposy* control the\n    y-axis properties. They are just forwarded to `.Axes.set_yscale`.\n\n    Parameters\n    ----------\n    basey : scalar, optional, default 10\n        Base of the y logarithm.\n\n    subsy : array-like, optional\n        The location of the minor yticks. If *None*, reasonable locations\n        are automatically chosen depending on the number of decades in the\n        plot. See `.Axes.set_yscale` for details.\n\n    nonposy : {'mask', 'clip'}, optional, default 'mask'\n        Non-positive values in y can be masked as invalid, or clipped to a\n        very small positive number.\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All parameters supported by `.plot`.\n    \"\"\"\n    d = {k: kwargs.pop(k) for k in ['basey', 'subsy', 'nonposy'] if k in kwargs}\n    self.set_yscale('log', **d)\n    l = self.plot(*args, **kwargs)\n    return l",
                            "@_preprocess_data(replace_names=['x'], label_namer='x')\ndef acorr(self, x, **kwargs):\n    \"\"\"\n    Plot the autocorrelation of *x*.\n\n    Parameters\n    ----------\n    x : array-like\n\n    detrend : callable, default: `mlab.detrend_none`\n        *x* is detrended by the *detrend* callable. This must be a\n        function ``x = detrend(x)`` accepting and returning an\n        `numpy.array`. Default is no detrending.\n\n    normed : bool, default: True\n        If ``True``, input vectors are normalised to unit length.\n\n    usevlines : bool, default: True\n        Determines the plot style.\n\n        If ``True``, vertical lines are plotted from 0 to the acorr value\n        using `Axes.vlines`. Additionally, a horizontal line is plotted\n        at y=0 using `Axes.axhline`.\n\n        If ``False``, markers are plotted at the acorr values using\n        `Axes.plot`.\n\n    maxlags : int, default: 10\n        Number of lags to show. If ``None``, will return all\n        ``2 * len(x) - 1`` lags.\n\n    Returns\n    -------\n    lags : array (length ``2*maxlags+1``)\n        The lag vector.\n    c : array  (length ``2*maxlags+1``)\n        The auto correlation vector.\n    line : `.LineCollection` or `.Line2D`\n        `.Artist` added to the axes of the correlation:\n\n        - `.LineCollection` if *usevlines* is True.\n        - `.Line2D` if *usevlines* is False.\n    b : `.Line2D` or None\n        Horizontal line at 0 if *usevlines* is True\n        None *usevlines* is False.\n\n    Other Parameters\n    ----------------\n    linestyle : `.Line2D` property, optional\n        The linestyle for plotting the data points.\n        Only used if *usevlines* is ``False``.\n\n    marker : str, default: 'o'\n        The marker for plotting the data points.\n        Only used if *usevlines* is ``False``.\n\n    Notes\n    -----\n    The cross correlation is performed with :func:`numpy.correlate` with\n    ``mode = \"full\"``.\n    \"\"\"\n    return self.xcorr(x, x, **kwargs)",
                            "@_preprocess_data(replace_names=['x', 'y'], label_namer='y')\ndef xcorr(self, x, y, normed=True, detrend=mlab.detrend_none, usevlines=True, maxlags=10, **kwargs):\n    \"\"\"\n    Plot the cross correlation between *x* and *y*.\n\n    The correlation with lag k is defined as\n    :math:`\\\\sum_n x[n+k] \\\\cdot y^*[n]`, where :math:`y^*` is the complex\n    conjugate of :math:`y`.\n\n    Parameters\n    ----------\n    x : array-like of length n\n\n    y : array-like of length n\n\n    detrend : callable, default: `mlab.detrend_none`\n        *x* and *y* are detrended by the *detrend* callable. This must be a\n        function ``x = detrend(x)`` accepting and returning an\n        `numpy.array`. Default is no detrending.\n\n    normed : bool, default: True\n        If ``True``, input vectors are normalised to unit length.\n\n    usevlines : bool, default: True\n        Determines the plot style.\n\n        If ``True``, vertical lines are plotted from 0 to the xcorr value\n        using `Axes.vlines`. Additionally, a horizontal line is plotted\n        at y=0 using `Axes.axhline`.\n\n        If ``False``, markers are plotted at the xcorr values using\n        `Axes.plot`.\n\n    maxlags : int, default: 10\n        Number of lags to show. If None, will return all ``2 * len(x) - 1``\n        lags.\n\n    Returns\n    -------\n    lags : array (length ``2*maxlags+1``)\n        The lag vector.\n    c : array  (length ``2*maxlags+1``)\n        The auto correlation vector.\n    line : `.LineCollection` or `.Line2D`\n        `.Artist` added to the axes of the correlation:\n\n        - `.LineCollection` if *usevlines* is True.\n        - `.Line2D` if *usevlines* is False.\n    b : `.Line2D` or None\n        Horizontal line at 0 if *usevlines* is True\n        None *usevlines* is False.\n\n    Other Parameters\n    ----------------\n    linestyle : `.Line2D` property, optional\n        The linestyle for plotting the data points.\n        Only used if *usevlines* is ``False``.\n\n    marker : str, default: 'o'\n        The marker for plotting the data points.\n        Only used if *usevlines* is ``False``.\n\n    Notes\n    -----\n    The cross correlation is performed with :func:`numpy.correlate` with\n    ``mode = \"full\"``.\n    \"\"\"\n    Nx = len(x)\n    if Nx != len(y):\n        raise ValueError('x and y must be equal length')\n    x = detrend(np.asarray(x))\n    y = detrend(np.asarray(y))\n    correls = np.correlate(x, y, mode='full')\n    if normed:\n        correls /= np.sqrt(np.dot(x, x) * np.dot(y, y))\n    if maxlags is None:\n        maxlags = Nx - 1\n    if maxlags >= Nx or maxlags < 1:\n        raise ValueError('maxlags must be None or strictly positive < %d' % Nx)\n    lags = np.arange(-maxlags, maxlags + 1)\n    correls = correls[Nx - 1 - maxlags:Nx + maxlags]\n    if usevlines:\n        a = self.vlines(lags, [0], correls, **kwargs)\n        kwargs.pop('label', '')\n        b = self.axhline(**kwargs)\n    else:\n        kwargs.setdefault('marker', 'o')\n        kwargs.setdefault('linestyle', 'None')\n        (a,) = self.plot(lags, correls, **kwargs)\n        b = None\n    return (lags, correls, a, b)",
                            "def step(self, x, y, *args, where='pre', data=None, **kwargs):\n    \"\"\"\n    Make a step plot.\n\n    Call signatures::\n\n        step(x, y, [fmt], *, data=None, where='pre', **kwargs)\n        step(x, y, [fmt], x2, y2, [fmt2], ..., *, where='pre', **kwargs)\n\n    This is just a thin wrapper around `.plot` which changes some\n    formatting options. Most of the concepts and parameters of plot can be\n    used here as well.\n\n    Parameters\n    ----------\n    x : array-like\n        1-D sequence of x positions. It is assumed, but not checked, that\n        it is uniformly increasing.\n\n    y : array-like\n        1-D sequence of y levels.\n\n    fmt : str, optional\n        A format string, e.g. 'g' for a green line. See `.plot` for a more\n        detailed description.\n\n        Note: While full format strings are accepted, it is recommended to\n        only specify the color. Line styles are currently ignored (use\n        the keyword argument *linestyle* instead). Markers are accepted\n        and plotted on the given positions, however, this is a rarely\n        needed feature for step plots.\n\n    data : indexable object, optional\n        An object with labelled data. If given, provide the label names to\n        plot in *x* and *y*.\n\n    where : {'pre', 'post', 'mid'}, default: 'pre'\n        Define where the steps should be placed:\n\n        - 'pre': The y value is continued constantly to the left from\n          every *x* position, i.e. the interval ``(x[i-1], x[i]]`` has the\n          value ``y[i]``.\n        - 'post': The y value is continued constantly to the right from\n          every *x* position, i.e. the interval ``[x[i], x[i+1])`` has the\n          value ``y[i]``.\n        - 'mid': Steps occur half-way between the *x* positions.\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Additional parameters are the same as those for `.plot`.\n\n    Notes\n    -----\n    .. [notes section required to get data note injection right]\n    \"\"\"\n    cbook._check_in_list(('pre', 'post', 'mid'), where=where)\n    kwargs['drawstyle'] = 'steps-' + where\n    return self.plot(x, y, *args, data=data, **kwargs)",
                            "@staticmethod\ndef _convert_dx(dx, x0, xconv, convert):\n    \"\"\"\n    Small helper to do logic of width conversion flexibly.\n\n    *dx* and *x0* have units, but *xconv* has already been converted\n    to unitless (and is an ndarray).  This allows the *dx* to have units\n    that are different from *x0*, but are still accepted by the\n    ``__add__`` operator of *x0*.\n    \"\"\"\n    assert type(xconv) is np.ndarray\n    if xconv.size == 0:\n        return convert(dx)\n    try:\n        try:\n            x0 = cbook.safe_first_element(x0)\n        except (TypeError, IndexError, KeyError):\n            x0 = x0\n        try:\n            x = cbook.safe_first_element(xconv)\n        except (TypeError, IndexError, KeyError):\n            x = xconv\n        delist = False\n        if not np.iterable(dx):\n            dx = [dx]\n            delist = True\n        dx = [convert(x0 + ddx) - x for ddx in dx]\n        if delist:\n            dx = dx[0]\n    except (ValueError, TypeError, AttributeError):\n        dx = convert(dx)\n    return dx",
                            "@_preprocess_data()\n@docstring.dedent_interpd\ndef bar(self, x, height, width=0.8, bottom=None, *, align='center', **kwargs):\n    \"\"\"\n    Make a bar plot.\n\n    The bars are positioned at *x* with the given *align*\\\\ment. Their\n    dimensions are given by *width* and *height*. The vertical baseline\n    is *bottom* (default 0).\n\n    Each of *x*, *height*, *width*, and *bottom* may either be a scalar\n    applying to all bars, or it may be a sequence of length N providing a\n    separate value for each bar.\n\n    Parameters\n    ----------\n    x : sequence of scalars\n        The x coordinates of the bars. See also *align* for the\n        alignment of the bars to the coordinates.\n\n    height : scalar or sequence of scalars\n        The height(s) of the bars.\n\n    width : scalar or array-like, default: 0.8\n        The width(s) of the bars.\n\n    bottom : scalar or array-like, default: 0\n        The y coordinate(s) of the bars bases.\n\n    align : {'center', 'edge'}, default: 'center'\n        Alignment of the bars to the *x* coordinates:\n\n        - 'center': Center the base on the *x* positions.\n        - 'edge': Align the left edges of the bars with the *x* positions.\n\n        To align the bars on the right edge pass a negative *width* and\n        ``align='edge'``.\n\n    Returns\n    -------\n    container : `.BarContainer`\n        Container with all the bars and optionally errorbars.\n\n    Other Parameters\n    ----------------\n    color : scalar or array-like, optional\n        The colors of the bar faces.\n\n    edgecolor : scalar or array-like, optional\n        The colors of the bar edges.\n\n    linewidth : scalar or array-like, optional\n        Width of the bar edge(s). If 0, don't draw edges.\n\n    tick_label : str or array-like, optional\n        The tick labels of the bars.\n        Default: None (Use default numeric labels.)\n\n    xerr, yerr : scalar or array-like of shape(N,) or shape(2, N), optional\n        If not *None*, add horizontal / vertical errorbars to the bar tips.\n        The values are +/- sizes relative to the data:\n\n        - scalar: symmetric +/- values for all bars\n        - shape(N,): symmetric +/- values for each bar\n        - shape(2, N): Separate - and + values for each bar. First row\n          contains the lower errors, the second row contains the upper\n          errors.\n        - *None*: No errorbar. (Default)\n\n        See :doc:`/gallery/statistics/errorbar_features`\n        for an example on the usage of ``xerr`` and ``yerr``.\n\n    ecolor : scalar or array-like, default: 'black'\n        The line color of the errorbars.\n\n    capsize : scalar, optional\n       The length of the error bar caps in points.\n       Default: None, which will take the value from\n       :rc:`errorbar.capsize`.\n\n    error_kw : dict, optional\n        Dictionary of kwargs to be passed to the `~.Axes.errorbar`\n        method. Values of *ecolor* or *capsize* defined here take\n        precedence over the independent kwargs.\n\n    log : bool, default: False\n        If *True*, set the y-axis to be log scale.\n\n    orientation : {'vertical',  'horizontal'}, optional\n        *This is for internal use only.* Please use `barh` for\n        horizontal bar plots. Default: 'vertical'.\n\n    See also\n    --------\n    barh: Plot a horizontal bar plot.\n\n    Notes\n    -----\n    The optional arguments *color*, *edgecolor*, *linewidth*,\n    *xerr*, and *yerr* can be either scalars or sequences of\n    length equal to the number of bars.  This enables you to use\n    bar as the basis for stacked bar charts, or candlestick plots.\n    Detail: *xerr* and *yerr* are passed directly to\n    :meth:`errorbar`, so they can also have shape 2xN for\n    independent specification of lower and upper errors.\n\n    Other optional kwargs:\n\n    %(Rectangle)s\n    \"\"\"\n    kwargs = cbook.normalize_kwargs(kwargs, mpatches.Patch)\n    color = kwargs.pop('color', None)\n    if color is None:\n        color = self._get_patches_for_fill.get_next_color()\n    edgecolor = kwargs.pop('edgecolor', None)\n    linewidth = kwargs.pop('linewidth', None)\n    xerr = kwargs.pop('xerr', None)\n    yerr = kwargs.pop('yerr', None)\n    error_kw = kwargs.pop('error_kw', {})\n    ezorder = error_kw.pop('zorder', None)\n    if ezorder is None:\n        ezorder = kwargs.get('zorder', None)\n        if ezorder is not None:\n            ezorder += 0.01\n    error_kw.setdefault('zorder', ezorder)\n    ecolor = kwargs.pop('ecolor', 'k')\n    capsize = kwargs.pop('capsize', rcParams['errorbar.capsize'])\n    error_kw.setdefault('ecolor', ecolor)\n    error_kw.setdefault('capsize', capsize)\n    orientation = kwargs.pop('orientation', 'vertical')\n    cbook._check_in_list(['vertical', 'horizontal'], orientation=orientation)\n    log = kwargs.pop('log', False)\n    label = kwargs.pop('label', '')\n    tick_labels = kwargs.pop('tick_label', None)\n    y = bottom\n    if orientation == 'vertical':\n        if y is None:\n            y = 0\n    elif orientation == 'horizontal':\n        if x is None:\n            x = 0\n    if orientation == 'vertical':\n        self._process_unit_info(xdata=x, ydata=height, kwargs=kwargs)\n        if log:\n            self.set_yscale('log', nonposy='clip')\n    elif orientation == 'horizontal':\n        self._process_unit_info(xdata=width, ydata=y, kwargs=kwargs)\n        if log:\n            self.set_xscale('log', nonposx='clip')\n    if self.xaxis is not None:\n        x0 = x\n        x = np.asarray(self.convert_xunits(x))\n        width = self._convert_dx(width, x0, x, self.convert_xunits)\n        if xerr is not None:\n            xerr = self._convert_dx(xerr, x0, x, self.convert_xunits)\n    if self.yaxis is not None:\n        y0 = y\n        y = np.asarray(self.convert_yunits(y))\n        height = self._convert_dx(height, y0, y, self.convert_yunits)\n        if yerr is not None:\n            yerr = self._convert_dx(yerr, y0, y, self.convert_yunits)\n    (x, height, width, y, linewidth) = np.broadcast_arrays(np.atleast_1d(x), height, width, y, linewidth)\n    if orientation == 'vertical':\n        tick_label_axis = self.xaxis\n        tick_label_position = x\n    elif orientation == 'horizontal':\n        tick_label_axis = self.yaxis\n        tick_label_position = y\n    linewidth = itertools.cycle(np.atleast_1d(linewidth))\n    color = itertools.chain(itertools.cycle(mcolors.to_rgba_array(color)), itertools.repeat('none'))\n    if edgecolor is None:\n        edgecolor = itertools.repeat(None)\n    else:\n        edgecolor = itertools.chain(itertools.cycle(mcolors.to_rgba_array(edgecolor)), itertools.repeat('none'))\n    cbook._check_in_list(['center', 'edge'], align=align)\n    if align == 'center':\n        if orientation == 'vertical':\n            try:\n                left = x - width / 2\n            except TypeError as e:\n                raise TypeError(f'the dtypes of parameters x ({x.dtype}) and width ({width.dtype}) are incompatible') from e\n            bottom = y\n        elif orientation == 'horizontal':\n            try:\n                bottom = y - height / 2\n            except TypeError as e:\n                raise TypeError(f'the dtypes of parameters y ({y.dtype}) and height ({height.dtype}) are incompatible') from e\n            left = x\n    elif align == 'edge':\n        left = x\n        bottom = y\n    patches = []\n    args = zip(left, bottom, width, height, color, edgecolor, linewidth)\n    for (l, b, w, h, c, e, lw) in args:\n        r = mpatches.Rectangle(xy=(l, b), width=w, height=h, facecolor=c, edgecolor=e, linewidth=lw, label='_nolegend_')\n        r.update(kwargs)\n        r.get_path()._interpolation_steps = 100\n        if orientation == 'vertical':\n            r.sticky_edges.y.append(b)\n        elif orientation == 'horizontal':\n            r.sticky_edges.x.append(l)\n        self.add_patch(r)\n        patches.append(r)\n    if xerr is not None or yerr is not None:\n        if orientation == 'vertical':\n            ex = [l + 0.5 * w for (l, w) in zip(left, width)]\n            ey = [b + h for (b, h) in zip(bottom, height)]\n        elif orientation == 'horizontal':\n            ex = [l + w for (l, w) in zip(left, width)]\n            ey = [b + 0.5 * h for (b, h) in zip(bottom, height)]\n        error_kw.setdefault('label', '_nolegend_')\n        errorbar = self.errorbar(ex, ey, yerr=yerr, xerr=xerr, fmt='none', **error_kw)\n    else:\n        errorbar = None\n    self._request_autoscale_view()\n    bar_container = BarContainer(patches, errorbar, label=label)\n    self.add_container(bar_container)\n    if tick_labels is not None:\n        tick_labels = np.broadcast_to(tick_labels, len(patches))\n        tick_label_axis.set_ticks(tick_label_position)\n        tick_label_axis.set_ticklabels(tick_labels)\n    return bar_container",
                            "@docstring.dedent_interpd\ndef barh(self, y, width, height=0.8, left=None, *, align='center', **kwargs):\n    \"\"\"\n    Make a horizontal bar plot.\n\n    The bars are positioned at *y* with the given *align*\\\\ment. Their\n    dimensions are given by *width* and *height*. The horizontal baseline\n    is *left* (default 0).\n\n    Each of *y*, *width*, *height*, and *left* may either be a scalar\n    applying to all bars, or it may be a sequence of length N providing a\n    separate value for each bar.\n\n    Parameters\n    ----------\n    y : scalar or array-like\n        The y coordinates of the bars. See also *align* for the\n        alignment of the bars to the coordinates.\n\n    width : scalar or array-like\n        The width(s) of the bars.\n\n    height : sequence of scalars, default: 0.8\n        The heights of the bars.\n\n    left : sequence of scalars, default: 0\n        The x coordinates of the left sides of the bars.\n\n    align : {'center', 'edge'}, default: 'center'\n        Alignment of the base to the *y* coordinates*:\n\n        - 'center': Center the bars on the *y* positions.\n        - 'edge': Align the bottom edges of the bars with the *y*\n          positions.\n\n        To align the bars on the top edge pass a negative *height* and\n        ``align='edge'``.\n\n    Returns\n    -------\n    container : `.BarContainer`\n        Container with all the bars and optionally errorbars.\n\n    Other Parameters\n    ----------------\n    color : scalar or array-like, optional\n        The colors of the bar faces.\n\n    edgecolor : scalar or array-like, optional\n        The colors of the bar edges.\n\n    linewidth : scalar or array-like, optional\n        Width of the bar edge(s). If 0, don't draw edges.\n\n    tick_label : str or array-like, optional\n        The tick labels of the bars.\n        Default: None (Use default numeric labels.)\n\n    xerr, yerr : scalar or array-like of shape(N,) or shape(2, N), optional\n        If not ``None``, add horizontal / vertical errorbars to the\n        bar tips. The values are +/- sizes relative to the data:\n\n        - scalar: symmetric +/- values for all bars\n        - shape(N,): symmetric +/- values for each bar\n        - shape(2, N): Separate - and + values for each bar. First row\n          contains the lower errors, the second row contains the upper\n          errors.\n        - *None*: No errorbar. (default)\n\n        See :doc:`/gallery/statistics/errorbar_features`\n        for an example on the usage of ``xerr`` and ``yerr``.\n\n    ecolor : scalar or array-like, default: 'black'\n        The line color of the errorbars.\n\n    capsize : scalar, optional\n       The length of the error bar caps in points.\n       Default: None, which will take the value from\n       :rc:`errorbar.capsize`.\n\n    error_kw : dict, optional\n        Dictionary of kwargs to be passed to the `~.Axes.errorbar`\n        method. Values of *ecolor* or *capsize* defined here take\n        precedence over the independent kwargs.\n\n    log : bool, default: False\n        If ``True``, set the x-axis to be log scale.\n\n    See also\n    --------\n    bar: Plot a vertical bar plot.\n\n    Notes\n    -----\n    The optional arguments *color*, *edgecolor*, *linewidth*,\n    *xerr*, and *yerr* can be either scalars or sequences of\n    length equal to the number of bars.  This enables you to use\n    bar as the basis for stacked bar charts, or candlestick plots.\n    Detail: *xerr* and *yerr* are passed directly to\n    :meth:`errorbar`, so they can also have shape 2xN for\n    independent specification of lower and upper errors.\n\n    Other optional kwargs:\n\n    %(Rectangle)s\n    \"\"\"\n    kwargs.setdefault('orientation', 'horizontal')\n    patches = self.bar(x=left, height=height, width=width, bottom=y, align=align, **kwargs)\n    return patches",
                            "@_preprocess_data()\n@docstring.dedent_interpd\ndef broken_barh(self, xranges, yrange, **kwargs):\n    \"\"\"\n    Plot a horizontal sequence of rectangles.\n\n    A rectangle is drawn for each element of *xranges*. All rectangles\n    have the same vertical position and size defined by *yrange*.\n\n    This is a convenience function for instantiating a\n    `.BrokenBarHCollection`, adding it to the axes and autoscaling the\n    view.\n\n    Parameters\n    ----------\n    xranges : sequence of tuples (*xmin*, *xwidth*)\n        The x-positions and extends of the rectangles. For each tuple\n        (*xmin*, *xwidth*) a rectangle is drawn from *xmin* to *xmin* +\n        *xwidth*.\n    yrange : (*ymin*, *yheight*)\n        The y-position and extend for all the rectangles.\n\n    Other Parameters\n    ----------------\n    **kwargs : :class:`.BrokenBarHCollection` properties\n\n        Each *kwarg* can be either a single argument applying to all\n        rectangles, e.g.::\n\n            facecolors='black'\n\n        or a sequence of arguments over which is cycled, e.g.::\n\n            facecolors=('black', 'blue')\n\n        would create interleaving black and blue rectangles.\n\n        Supported keywords:\n\n        %(BrokenBarHCollection)s\n\n    Returns\n    -------\n    collection : A :class:`~.collections.BrokenBarHCollection`\n    \"\"\"\n    if len(xranges):\n        xdata = cbook.safe_first_element(xranges)\n    else:\n        xdata = None\n    if len(yrange):\n        ydata = cbook.safe_first_element(yrange)\n    else:\n        ydata = None\n    self._process_unit_info(xdata=xdata, ydata=ydata, kwargs=kwargs)\n    xranges_conv = []\n    for xr in xranges:\n        if len(xr) != 2:\n            raise ValueError('each range in xrange must be a sequence with two elements (i.e. an Nx2 array)')\n        x_conv = np.asarray(self.convert_xunits(xr[0]))\n        x1 = self._convert_dx(xr[1], xr[0], x_conv, self.convert_xunits)\n        xranges_conv.append((x_conv, x1))\n    yrange_conv = self.convert_yunits(yrange)\n    col = mcoll.BrokenBarHCollection(xranges_conv, yrange_conv, **kwargs)\n    self.add_collection(col, autolim=True)\n    self._request_autoscale_view()\n    return col",
                            "@_preprocess_data()\ndef stem(self, *args, linefmt=None, markerfmt=None, basefmt=None, bottom=0, label=None, use_line_collection=False):\n    \"\"\"\n    Create a stem plot.\n\n    A stem plot plots vertical lines at each *x* location from the baseline\n    to *y*, and places a marker there.\n\n    Call signature::\n\n      stem([x,] y, linefmt=None, markerfmt=None, basefmt=None)\n\n    The x-positions are optional. The formats may be provided either as\n    positional or as keyword-arguments.\n\n    Parameters\n    ----------\n    x : array-like, optional\n        The x-positions of the stems. Default: (0, 1, ..., len(y) - 1).\n\n    y : array-like\n        The y-values of the stem heads.\n\n    linefmt : str, optional\n        A string defining the properties of the vertical lines. Usually,\n        this will be a color or a color and a linestyle:\n\n        =========  =============\n        Character  Line Style\n        =========  =============\n        ``'-'``    solid line\n        ``'--'``   dashed line\n        ``'-.'``   dash-dot line\n        ``':'``    dotted line\n        =========  =============\n\n        Default: 'C0-', i.e. solid line with the first color of the color\n        cycle.\n\n        Note: While it is technically possible to specify valid formats\n        other than color or color and linestyle (e.g. 'rx' or '-.'), this\n        is beyond the intention of the method and will most likely not\n        result in a reasonable reasonable plot.\n\n    markerfmt : str, optional\n        A string defining the properties of the markers at the stem heads.\n        Default: 'C0o', i.e. filled circles with the first color of the\n        color cycle.\n\n    basefmt : str, default: 'C3-' ('C2-' in classic mode)\n        A format string defining the properties of the baseline.\n\n    bottom : float, default: 0\n        The y-position of the baseline.\n\n    label : str, default: None\n        The label to use for the stems in legends.\n\n    use_line_collection : bool, default: False\n        If ``True``, store and plot the stem lines as a\n        `~.collections.LineCollection` instead of individual lines. This\n        significantly increases performance, and will become the default\n        option in Matplotlib 3.3. If ``False``, defaults to the old\n        behavior of using a list of `.Line2D` objects.\n\n    Returns\n    -------\n    container : :class:`~matplotlib.container.StemContainer`\n        The container may be treated like a tuple\n        (*markerline*, *stemlines*, *baseline*)\n\n    Notes\n    -----\n    .. seealso::\n        The MATLAB function\n        `stem <http://www.mathworks.com/help/techdoc/ref/stem.html>`_\n        which inspired this method.\n    \"\"\"\n    if not 1 <= len(args) <= 5:\n        raise TypeError('stem expected between 1 and 5 positional arguments, got {}'.format(args))\n    if len(args) == 1:\n        (y,) = args\n        x = np.arange(len(y))\n        args = ()\n    else:\n        (x, y, *args) = args\n    self._process_unit_info(xdata=x, ydata=y)\n    x = self.convert_xunits(x)\n    y = self.convert_yunits(y)\n    if linefmt is None:\n        try:\n            linefmt = args[0]\n        except IndexError:\n            linecolor = 'C0'\n            linemarker = 'None'\n            linestyle = '-'\n        else:\n            (linestyle, linemarker, linecolor) = _process_plot_format(linefmt)\n    else:\n        (linestyle, linemarker, linecolor) = _process_plot_format(linefmt)\n    if markerfmt is None:\n        try:\n            markerfmt = args[1]\n        except IndexError:\n            markercolor = 'C0'\n            markermarker = 'o'\n            markerstyle = 'None'\n        else:\n            (markerstyle, markermarker, markercolor) = _process_plot_format(markerfmt)\n    else:\n        (markerstyle, markermarker, markercolor) = _process_plot_format(markerfmt)\n    if basefmt is None:\n        try:\n            basefmt = args[2]\n        except IndexError:\n            if rcParams['_internal.classic_mode']:\n                basecolor = 'C2'\n            else:\n                basecolor = 'C3'\n            basemarker = 'None'\n            basestyle = '-'\n        else:\n            (basestyle, basemarker, basecolor) = _process_plot_format(basefmt)\n    else:\n        (basestyle, basemarker, basecolor) = _process_plot_format(basefmt)\n    if use_line_collection:\n        stemlines = [((xi, bottom), (xi, yi)) for (xi, yi) in zip(x, y)]\n        if linestyle is None:\n            linestyle = rcParams['lines.linestyle']\n        stemlines = mcoll.LineCollection(stemlines, linestyles=linestyle, colors=linecolor, label='_nolegend_')\n        self.add_collection(stemlines)\n    else:\n        cbook._warn_external('In Matplotlib 3.3 individual lines on a stem plot will be added as a LineCollection instead of individual lines. This significantly improves the performance of a stem plot. To remove this warning and switch to the new behaviour, set the \"use_line_collection\" keyword argument to True.')\n        stemlines = []\n        for (xi, yi) in zip(x, y):\n            (l,) = self.plot([xi, xi], [bottom, yi], color=linecolor, linestyle=linestyle, marker=linemarker, label='_nolegend_')\n            stemlines.append(l)\n    (markerline,) = self.plot(x, y, color=markercolor, linestyle=markerstyle, marker=markermarker, label='_nolegend_')\n    (baseline,) = self.plot([np.min(x), np.max(x)], [bottom, bottom], color=basecolor, linestyle=basestyle, marker=basemarker, label='_nolegend_')\n    stem_container = StemContainer((markerline, stemlines, baseline), label=label)\n    self.add_container(stem_container)\n    return stem_container",
                            "@_preprocess_data(replace_names=['x', 'explode', 'labels', 'colors'])\ndef pie(self, x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=None, radius=None, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False, rotatelabels=False):\n    \"\"\"\n    Plot a pie chart.\n\n    Make a pie chart of array *x*.  The fractional area of each wedge is\n    given by ``x/sum(x)``.  If ``sum(x) < 1``, then the values of *x* give\n    the fractional area directly and the array will not be normalized. The\n    resulting pie will have an empty wedge of size ``1 - sum(x)``.\n\n    The wedges are plotted counterclockwise, by default starting from the\n    x-axis.\n\n    Parameters\n    ----------\n    x : array-like\n        The wedge sizes.\n\n    explode : array-like, default: None\n        If not *None*, is a ``len(x)`` array which specifies the fraction\n        of the radius with which to offset each wedge.\n\n    labels : list, default: None\n        A sequence of strings providing the labels for each wedge\n\n    colors : array-like, default: None\n        A sequence of colors through which the pie chart will cycle.  If\n        *None*, will use the colors in the currently active cycle.\n\n    autopct : None or str or callable, default: None\n        If not *None*, is a string or function used to label the wedges\n        with their numeric value.  The label will be placed inside the\n        wedge.  If it is a format string, the label will be ``fmt%pct``.\n        If it is a function, it will be called.\n\n    pctdistance : float, default: 0.6\n        The ratio between the center of each pie slice and the start of\n        the text generated by *autopct*.  Ignored if *autopct* is *None*.\n\n    shadow : bool, default: False\n        Draw a shadow beneath the pie.\n\n    labeldistance : float or None, default: 1.1\n        The radial distance at which the pie labels are drawn.\n        If set to ``None``, label are not drawn, but are stored for use in\n        ``legend()``\n\n    startangle : float, default: None\n        If not *None*, rotates the start of the pie chart by *angle*\n        degrees counterclockwise from the x-axis.\n\n    radius : float, default: None\n        The radius of the pie, if *radius* is *None* it will be set to 1.\n\n    counterclock : bool, default: True\n        Specify fractions direction, clockwise or counterclockwise.\n\n    wedgeprops : dict, default: None\n        Dict of arguments passed to the wedge objects making the pie.\n        For example, you can pass in ``wedgeprops = {'linewidth': 3}``\n        to set the width of the wedge border lines equal to 3.\n        For more details, look at the doc/arguments of the wedge object.\n        By default ``clip_on=False``.\n\n    textprops : dict, default: None\n        Dict of arguments to pass to the text objects.\n\n    center : (float, float), default: (0, 0)\n        The coordinates of the center of the chart.\n\n    frame : bool, default: False\n        Plot axes frame with the chart if true.\n\n    rotatelabels : bool, default: False\n        Rotate each label to the angle of the corresponding slice if true.\n\n    Returns\n    -------\n    patches : list\n        A sequence of :class:`matplotlib.patches.Wedge` instances\n\n    texts : list\n        A list of the label :class:`matplotlib.text.Text` instances.\n\n    autotexts : list\n        A list of :class:`~matplotlib.text.Text` instances for the numeric\n        labels. This will only be returned if the parameter *autopct* is\n        not *None*.\n\n    Notes\n    -----\n    The pie chart will probably look best if the figure and axes are\n    square, or the Axes aspect is equal.\n    This method sets the aspect ratio of the axis to \"equal\".\n    The axes aspect ratio can be controlled with `Axes.set_aspect`.\n    \"\"\"\n    self.set_aspect('equal')\n    x = np.asarray(x, np.float32)\n    if x.ndim != 1 and x.squeeze().ndim <= 1:\n        cbook.warn_deprecated('3.1', message='Non-1D inputs to pie() are currently squeeze()d, but this behavior is deprecated since %(since)s and will be removed %(removal)s; pass a 1D array instead.')\n        x = np.atleast_1d(x.squeeze())\n    sx = x.sum()\n    if sx > 1:\n        x = x / sx\n    if labels is None:\n        labels = [''] * len(x)\n    if explode is None:\n        explode = [0] * len(x)\n    if len(x) != len(labels):\n        raise ValueError(\"'label' must be of length 'x'\")\n    if len(x) != len(explode):\n        raise ValueError(\"'explode' must be of length 'x'\")\n    if colors is None:\n        get_next_color = self._get_patches_for_fill.get_next_color\n    else:\n        color_cycle = itertools.cycle(colors)\n\n        def get_next_color():\n            return next(color_cycle)\n    if radius is None:\n        radius = 1\n    if startangle is None:\n        theta1 = 0\n    else:\n        theta1 = startangle / 360.0\n    if wedgeprops is None:\n        wedgeprops = {}\n    wedgeprops.setdefault('clip_on', False)\n    if textprops is None:\n        textprops = {}\n    textprops.setdefault('clip_on', False)\n    texts = []\n    slices = []\n    autotexts = []\n    for (frac, label, expl) in zip(x, labels, explode):\n        (x, y) = center\n        theta2 = theta1 + frac if counterclock else theta1 - frac\n        thetam = 2 * np.pi * 0.5 * (theta1 + theta2)\n        x += expl * math.cos(thetam)\n        y += expl * math.sin(thetam)\n        w = mpatches.Wedge((x, y), radius, 360.0 * min(theta1, theta2), 360.0 * max(theta1, theta2), facecolor=get_next_color(), **wedgeprops)\n        slices.append(w)\n        self.add_patch(w)\n        w.set_label(label)\n        if shadow:\n            shad = mpatches.Shadow(w, -0.02, -0.02)\n            shad.set_zorder(0.9 * w.get_zorder())\n            shad.set_label('_nolegend_')\n            self.add_patch(shad)\n        if labeldistance is not None:\n            xt = x + labeldistance * radius * math.cos(thetam)\n            yt = y + labeldistance * radius * math.sin(thetam)\n            label_alignment_h = 'left' if xt > 0 else 'right'\n            label_alignment_v = 'center'\n            label_rotation = 'horizontal'\n            if rotatelabels:\n                label_alignment_v = 'bottom' if yt > 0 else 'top'\n                label_rotation = np.rad2deg(thetam) + (0 if xt > 0 else 180)\n            props = dict(horizontalalignment=label_alignment_h, verticalalignment=label_alignment_v, rotation=label_rotation, size=rcParams['xtick.labelsize'])\n            props.update(textprops)\n            t = self.text(xt, yt, label, **props)\n            texts.append(t)\n        if autopct is not None:\n            xt = x + pctdistance * radius * math.cos(thetam)\n            yt = y + pctdistance * radius * math.sin(thetam)\n            if isinstance(autopct, str):\n                s = autopct % (100.0 * frac)\n            elif callable(autopct):\n                s = autopct(100.0 * frac)\n            else:\n                raise TypeError('autopct must be callable or a format string')\n            props = dict(horizontalalignment='center', verticalalignment='center')\n            props.update(textprops)\n            t = self.text(xt, yt, s, **props)\n            autotexts.append(t)\n        theta1 = theta2\n    if not frame:\n        self.set_frame_on(False)\n        self.set_xlim((-1.25 + center[0], 1.25 + center[0]))\n        self.set_ylim((-1.25 + center[1], 1.25 + center[1]))\n        self.set_xticks([])\n        self.set_yticks([])\n    if autopct is None:\n        return (slices, texts)\n    else:\n        return (slices, texts, autotexts)",
                            "@_preprocess_data(replace_names=['x', 'y', 'xerr', 'yerr'], label_namer='y')\n@docstring.dedent_interpd\ndef errorbar(self, x, y, yerr=None, xerr=None, fmt='', ecolor=None, elinewidth=None, capsize=None, barsabove=False, lolims=False, uplims=False, xlolims=False, xuplims=False, errorevery=1, capthick=None, **kwargs):\n    \"\"\"\n    Plot y versus x as lines and/or markers with attached errorbars.\n\n    *x*, *y* define the data locations, *xerr*, *yerr* define the errorbar\n    sizes. By default, this draws the data markers/lines as well the\n    errorbars. Use fmt='none' to draw errorbars without any data markers.\n\n    Parameters\n    ----------\n    x, y : scalar or array-like\n        The data positions.\n\n    xerr, yerr : scalar or array-like, shape(N,) or shape(2, N), optional\n        The errorbar sizes:\n\n        - scalar: Symmetric +/- values for all data points.\n        - shape(N,): Symmetric +/-values for each data point.\n        - shape(2, N): Separate - and + values for each bar. First row\n          contains the lower errors, the second row contains the upper\n          errors.\n        - *None*: No errorbar.\n\n        Note that all error arrays should have *positive* values.\n\n        See :doc:`/gallery/statistics/errorbar_features`\n        for an example on the usage of ``xerr`` and ``yerr``.\n\n    fmt : str, default: ''\n        The format for the data points / data lines. See `.plot` for\n        details.\n\n        Use 'none' (case insensitive) to plot errorbars without any data\n        markers.\n\n    ecolor : color, default: None\n        The color of the errorbar lines.  If None, use the color of the\n        line connecting the markers.\n\n    elinewidth : scalar, default: None\n        The linewidth of the errorbar lines. If None, the linewidth of\n        the current style is used.\n\n    capsize : scalar, default: None\n        The length of the error bar caps in points. If None, it will take\n        the value from :rc:`errorbar.capsize`.\n\n    capthick : scalar, default: None\n        An alias to the keyword argument *markeredgewidth* (a.k.a. *mew*).\n        This setting is a more sensible name for the property that\n        controls the thickness of the error bar cap in points. For\n        backwards compatibility, if *mew* or *markeredgewidth* are given,\n        then they will over-ride *capthick*. This may change in future\n        releases.\n\n    barsabove : bool, default: False\n        If True, will plot the errorbars above the plot\n        symbols. Default is below.\n\n    lolims, uplims, xlolims, xuplims : bool, default: False\n        These arguments can be used to indicate that a value gives only\n        upper/lower limits. In that case a caret symbol is used to\n        indicate this. *lims*-arguments may be of the same type as *xerr*\n        and *yerr*.  To use limits with inverted axes, :meth:`set_xlim`\n        or :meth:`set_ylim` must be called before :meth:`errorbar`.\n\n    errorevery : int or (int, int), default: 1\n        draws error bars on a subset of the data. *errorevery* =N draws\n        error bars on the points (x[::N], y[::N]).\n        *errorevery* =(start, N) draws error bars on the points\n        (x[start::N], y[start::N]). e.g. errorevery=(6, 3)\n        adds error bars to the data at (x[6], x[9], x[12], x[15], ...).\n        Used to avoid overlapping error bars when two series share x-axis\n        values.\n\n    Returns\n    -------\n    container : :class:`~.container.ErrorbarContainer`\n        The container contains:\n\n        - plotline: `.Line2D` instance of x, y plot markers and/or line.\n        - caplines: A tuple of `.Line2D` instances of the error bar caps.\n        - barlinecols: A tuple of\n          :class:`~matplotlib.collections.LineCollection` with the\n          horizontal and vertical error ranges.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All other keyword arguments are passed on to the plot\n        command for the markers. For example, this code makes big red\n        squares with thick green edges::\n\n            x, y, yerr = rand(3, 10)\n            errorbar(x, y, yerr, marker='s', mfc='red',\n                     mec='green', ms=20, mew=4)\n\n        where *mfc*, *mec*, *ms* and *mew* are aliases for the longer\n        property names, *markerfacecolor*, *markeredgecolor*, *markersize*\n        and *markeredgewidth*.\n\n        Valid kwargs for the marker properties are `.Lines2D` properties:\n\n        %(_Line2D_docstr)s\n    \"\"\"\n    kwargs = cbook.normalize_kwargs(kwargs, mlines.Line2D)\n    kwargs = {k: v for (k, v) in kwargs.items() if v is not None}\n    kwargs.setdefault('zorder', 2)\n    try:\n        (offset, errorevery) = errorevery\n    except TypeError:\n        offset = 0\n    if errorevery < 1 or int(errorevery) != errorevery:\n        raise ValueError('errorevery must be positive integer or tuple of integers')\n    if int(offset) != offset:\n        raise ValueError(\"errorevery's starting index must be an integer\")\n    self._process_unit_info(xdata=x, ydata=y, kwargs=kwargs)\n    plot_line = fmt.lower() != 'none'\n    label = kwargs.pop('label', None)\n    if fmt == '':\n        fmt_style_kwargs = {}\n    else:\n        fmt_style_kwargs = {k: v for (k, v) in zip(('linestyle', 'marker', 'color'), _process_plot_format(fmt)) if v is not None}\n    if fmt == 'none':\n        fmt_style_kwargs.pop('color')\n    if 'color' in kwargs or 'color' in fmt_style_kwargs or ecolor is not None:\n        base_style = {}\n        if 'color' in kwargs:\n            base_style['color'] = kwargs.pop('color')\n    else:\n        base_style = next(self._get_lines.prop_cycler)\n    base_style['label'] = '_nolegend_'\n    base_style.update(fmt_style_kwargs)\n    if 'color' not in base_style:\n        base_style['color'] = 'C0'\n    if ecolor is None:\n        ecolor = base_style['color']\n    if not np.iterable(x):\n        x = [x]\n    if not np.iterable(y):\n        y = [y]\n    if xerr is not None:\n        if not np.iterable(xerr):\n            xerr = [xerr] * len(x)\n    if yerr is not None:\n        if not np.iterable(yerr):\n            yerr = [yerr] * len(y)\n    plot_line_style = {**base_style, **kwargs, 'zorder': kwargs['zorder'] - 0.1 if barsabove else kwargs['zorder'] + 0.1}\n    eb_lines_style = dict(base_style)\n    eb_lines_style.pop('marker', None)\n    eb_lines_style.pop('linestyle', None)\n    eb_lines_style['color'] = ecolor\n    if elinewidth:\n        eb_lines_style['linewidth'] = elinewidth\n    elif 'linewidth' in kwargs:\n        eb_lines_style['linewidth'] = kwargs['linewidth']\n    for key in ('transform', 'alpha', 'zorder', 'rasterized'):\n        if key in kwargs:\n            eb_lines_style[key] = kwargs[key]\n    eb_cap_style = dict(base_style)\n    eb_cap_style.pop('marker', None)\n    eb_lines_style.pop('markerfacecolor', None)\n    eb_lines_style.pop('markeredgewidth', None)\n    eb_lines_style.pop('markeredgecolor', None)\n    eb_cap_style.pop('ls', None)\n    eb_cap_style['linestyle'] = 'none'\n    if capsize is None:\n        capsize = rcParams['errorbar.capsize']\n    if capsize > 0:\n        eb_cap_style['markersize'] = 2.0 * capsize\n    if capthick is not None:\n        eb_cap_style['markeredgewidth'] = capthick\n    for key in ('markeredgewidth', 'transform', 'alpha', 'zorder', 'rasterized'):\n        if key in kwargs:\n            eb_cap_style[key] = kwargs[key]\n    eb_cap_style['color'] = ecolor\n    data_line = None\n    if plot_line:\n        data_line = mlines.Line2D(x, y, **plot_line_style)\n        self.add_line(data_line)\n    barcols = []\n    caplines = []\n    lolims = np.broadcast_to(lolims, len(x)).astype(bool)\n    uplims = np.broadcast_to(uplims, len(x)).astype(bool)\n    xlolims = np.broadcast_to(xlolims, len(x)).astype(bool)\n    xuplims = np.broadcast_to(xuplims, len(x)).astype(bool)\n    everymask = np.zeros(len(x), bool)\n    everymask[offset::errorevery] = True\n\n    def xywhere(xs, ys, mask):\n        \"\"\"\n        return xs[mask], ys[mask] where mask is True but xs and\n        ys are not arrays\n        \"\"\"\n        assert len(xs) == len(ys)\n        assert len(xs) == len(mask)\n        xs = [thisx for (thisx, b) in zip(xs, mask) if b]\n        ys = [thisy for (thisy, b) in zip(ys, mask) if b]\n        return (xs, ys)\n\n    def extract_err(err, data):\n        \"\"\"\n        Private function to parse *err* and subtract/add it to *data*.\n\n        Both *err* and *data* are already iterables at this point.\n        \"\"\"\n        try:\n            (a, b) = err\n            iter(a)\n            iter(b)\n        except (TypeError, ValueError):\n            a = b = err\n        a_sh = np.shape(a)\n        b_sh = np.shape(b)\n        if len(a_sh) > 2 or (len(a_sh) == 2 and a_sh[1] != 1) or len(b_sh) > 2 or (len(b_sh) == 2 and b_sh[1] != 1):\n            raise ValueError('err must be a scalar or a 1D or (2, n) array-like')\n        if len(a_sh) == 2 or len(b_sh) == 2:\n            cbook.warn_deprecated('3.1', message='Support for passing a (n, 1)-shaped error array to errorbar() is deprecated since Matplotlib %(since)s and will be removed %(removal)s; pass a 1D array instead.')\n        for e in [a, b]:\n            if len(data) != len(e):\n                raise ValueError(f'The lengths of the data ({len(data)}) and the error {len(e)} do not match')\n        low = [v - e for (v, e) in zip(data, a)]\n        high = [v + e for (v, e) in zip(data, b)]\n        return (low, high)\n    if xerr is not None:\n        (left, right) = extract_err(xerr, x)\n        noxlims = ~(xlolims | xuplims)\n        if noxlims.any() or len(noxlims) == 0:\n            (yo, _) = xywhere(y, right, noxlims & everymask)\n            (lo, ro) = xywhere(left, right, noxlims & everymask)\n            barcols.append(self.hlines(yo, lo, ro, **eb_lines_style))\n            if capsize > 0:\n                caplines.append(mlines.Line2D(lo, yo, marker='|', **eb_cap_style))\n                caplines.append(mlines.Line2D(ro, yo, marker='|', **eb_cap_style))\n        if xlolims.any():\n            (yo, _) = xywhere(y, right, xlolims & everymask)\n            (lo, ro) = xywhere(x, right, xlolims & everymask)\n            barcols.append(self.hlines(yo, lo, ro, **eb_lines_style))\n            (rightup, yup) = xywhere(right, y, xlolims & everymask)\n            if self.xaxis_inverted():\n                marker = mlines.CARETLEFTBASE\n            else:\n                marker = mlines.CARETRIGHTBASE\n            caplines.append(mlines.Line2D(rightup, yup, ls='None', marker=marker, **eb_cap_style))\n            if capsize > 0:\n                (xlo, ylo) = xywhere(x, y, xlolims & everymask)\n                caplines.append(mlines.Line2D(xlo, ylo, marker='|', **eb_cap_style))\n        if xuplims.any():\n            (yo, _) = xywhere(y, right, xuplims & everymask)\n            (lo, ro) = xywhere(left, x, xuplims & everymask)\n            barcols.append(self.hlines(yo, lo, ro, **eb_lines_style))\n            (leftlo, ylo) = xywhere(left, y, xuplims & everymask)\n            if self.xaxis_inverted():\n                marker = mlines.CARETRIGHTBASE\n            else:\n                marker = mlines.CARETLEFTBASE\n            caplines.append(mlines.Line2D(leftlo, ylo, ls='None', marker=marker, **eb_cap_style))\n            if capsize > 0:\n                (xup, yup) = xywhere(x, y, xuplims & everymask)\n                caplines.append(mlines.Line2D(xup, yup, marker='|', **eb_cap_style))\n    if yerr is not None:\n        (lower, upper) = extract_err(yerr, y)\n        noylims = ~(lolims | uplims)\n        if noylims.any() or len(noylims) == 0:\n            (xo, _) = xywhere(x, lower, noylims & everymask)\n            (lo, uo) = xywhere(lower, upper, noylims & everymask)\n            barcols.append(self.vlines(xo, lo, uo, **eb_lines_style))\n            if capsize > 0:\n                caplines.append(mlines.Line2D(xo, lo, marker='_', **eb_cap_style))\n                caplines.append(mlines.Line2D(xo, uo, marker='_', **eb_cap_style))\n        if lolims.any():\n            (xo, _) = xywhere(x, lower, lolims & everymask)\n            (lo, uo) = xywhere(y, upper, lolims & everymask)\n            barcols.append(self.vlines(xo, lo, uo, **eb_lines_style))\n            (xup, upperup) = xywhere(x, upper, lolims & everymask)\n            if self.yaxis_inverted():\n                marker = mlines.CARETDOWNBASE\n            else:\n                marker = mlines.CARETUPBASE\n            caplines.append(mlines.Line2D(xup, upperup, ls='None', marker=marker, **eb_cap_style))\n            if capsize > 0:\n                (xlo, ylo) = xywhere(x, y, lolims & everymask)\n                caplines.append(mlines.Line2D(xlo, ylo, marker='_', **eb_cap_style))\n        if uplims.any():\n            (xo, _) = xywhere(x, lower, uplims & everymask)\n            (lo, uo) = xywhere(lower, y, uplims & everymask)\n            barcols.append(self.vlines(xo, lo, uo, **eb_lines_style))\n            (xlo, lowerlo) = xywhere(x, lower, uplims & everymask)\n            if self.yaxis_inverted():\n                marker = mlines.CARETUPBASE\n            else:\n                marker = mlines.CARETDOWNBASE\n            caplines.append(mlines.Line2D(xlo, lowerlo, ls='None', marker=marker, **eb_cap_style))\n            if capsize > 0:\n                (xup, yup) = xywhere(x, y, uplims & everymask)\n                caplines.append(mlines.Line2D(xup, yup, marker='_', **eb_cap_style))\n    for l in caplines:\n        self.add_line(l)\n    self._request_autoscale_view()\n    errorbar_container = ErrorbarContainer((data_line, tuple(caplines), tuple(barcols)), has_xerr=xerr is not None, has_yerr=yerr is not None, label=label)\n    self.containers.append(errorbar_container)\n    return errorbar_container",
                            "@cbook._rename_parameter('3.1', 'manage_xticks', 'manage_ticks')\n@_preprocess_data()\ndef boxplot(self, x, notch=None, sym=None, vert=None, whis=None, positions=None, widths=None, patch_artist=None, bootstrap=None, usermedians=None, conf_intervals=None, meanline=None, showmeans=None, showcaps=None, showbox=None, showfliers=None, boxprops=None, labels=None, flierprops=None, medianprops=None, meanprops=None, capprops=None, whiskerprops=None, manage_ticks=True, autorange=False, zorder=None):\n    \"\"\"\n    Make a box and whisker plot.\n\n    Make a box and whisker plot for each column of ``x`` or each\n    vector in sequence ``x``.  The box extends from the lower to\n    upper quartile values of the data, with a line at the median.\n    The whiskers extend from the box to show the range of the\n    data.  Flier points are those past the end of the whiskers.\n\n    Parameters\n    ----------\n    x : Array or a sequence of vectors.\n        The input data.\n\n    notch : bool, default: False\n        If `True`, will produce a notched box plot. Otherwise, a\n        rectangular boxplot is produced. The notches represent the\n        confidence interval (CI) around the median. See the entry\n        for the ``bootstrap`` parameter for information regarding\n        how the locations of the notches are computed.\n\n        .. note::\n\n            In cases where the values of the CI are less than the\n            lower quartile or greater than the upper quartile, the\n            notches will extend beyond the box, giving it a\n            distinctive \"flipped\" appearance. This is expected\n            behavior and consistent with other statistical\n            visualization packages.\n\n    sym : str, optional\n        The default symbol for flier points. Enter an empty string\n        ('') if you don't want to show fliers. If `None`, then the\n        fliers default to 'b+'  If you want more control use the\n        flierprops kwarg.\n\n    vert : bool, default: True\n        If `True`, draws vertical boxes.\n        If `False`, draw horizontal boxes.\n\n    whis : float or (float, float), default: 1.5\n        The position of the whiskers.\n\n        If a float, the lower whisker is at the lowest datum above\n        ``Q1 - whis*(Q3-Q1)``, and the upper whisker at the highest datum\n        below ``Q3 + whis*(Q3-Q1)``, where Q1 and Q3 are the first and\n        third quartiles.  The default value of ``whis = 1.5`` corresponds\n        to Tukey's original definition of boxplots.\n\n        If a pair of floats, they indicate the percentiles at which to\n        draw the whiskers (e.g., (5, 95)).  In particular, setting this to\n        (0, 100) results in whiskers covering the whole range of the data.\n        \"range\" is a deprecated synonym for (0, 100).\n\n        In the edge case where ``Q1 == Q3``, *whis* is automatically set\n        to (0, 100) (cover the whole range of the data) if *autorange* is\n        True.\n\n        Beyond the whiskers, data are considered outliers and are plotted\n        as individual points.\n\n    bootstrap : int, optional\n        Specifies whether to bootstrap the confidence intervals\n        around the median for notched boxplots. If ``bootstrap`` is\n        None, no bootstrapping is performed, and notches are\n        calculated using a Gaussian-based asymptotic approximation\n        (see McGill, R., Tukey, J.W., and Larsen, W.A., 1978, and\n        Kendall and Stuart, 1967). Otherwise, bootstrap specifies\n        the number of times to bootstrap the median to determine its\n        95% confidence intervals. Values between 1000 and 10000 are\n        recommended.\n\n    usermedians : array-like, optional\n        An array or sequence whose first dimension (or length) is\n        compatible with ``x``. This overrides the medians computed\n        by matplotlib for each element of ``usermedians`` that is not\n        `None`. When an element of ``usermedians`` is None, the median\n        will be computed by matplotlib as normal.\n\n    conf_intervals : array-like, optional\n        Array or sequence whose first dimension (or length) is\n        compatible with ``x`` and whose second dimension is 2. When\n        the an element of ``conf_intervals`` is not None, the\n        notch locations computed by matplotlib are overridden\n        (provided ``notch`` is `True`). When an element of\n        ``conf_intervals`` is `None`, the notches are computed by the\n        method specified by the other kwargs (e.g., ``bootstrap``).\n\n    positions : array-like, optional\n        Sets the positions of the boxes. The ticks and limits are\n        automatically set to match the positions. Defaults to\n        `range(1, N+1)` where N is the number of boxes to be drawn.\n\n    widths : scalar or array-like\n        Sets the width of each box either with a scalar or a\n        sequence. The default is 0.5, or ``0.15*(distance between\n        extreme positions)``, if that is smaller.\n\n    patch_artist : bool, default: False\n        If `False` produces boxes with the Line2D artist. Otherwise,\n        boxes and drawn with Patch artists.\n\n    labels : sequence, optional\n        Labels for each dataset. Length must be compatible with\n        dimensions of ``x``.\n\n    manage_ticks : bool, default: True\n        If True, the tick locations and labels will be adjusted to match\n        the boxplot positions.\n\n    autorange : bool, default: False\n        When `True` and the data are distributed such that the 25th and\n        75th percentiles are equal, ``whis`` is set to (0, 100) such\n        that the whisker ends are at the minimum and maximum of the data.\n\n    meanline : bool, default: False\n        If `True` (and ``showmeans`` is `True`), will try to render\n        the mean as a line spanning the full width of the box\n        according to ``meanprops`` (see below). Not recommended if\n        ``shownotches`` is also True. Otherwise, means will be shown\n        as points.\n\n    zorder : scalar, default: None\n        Sets the zorder of the boxplot.\n\n    Other Parameters\n    ----------------\n    showcaps : bool, default: True\n        Show the caps on the ends of whiskers.\n    showbox : bool, default: True\n        Show the central box.\n    showfliers : bool, default: True\n        Show the outliers beyond the caps.\n    showmeans : bool, default: False\n        Show the arithmetic means.\n    capprops : dict, default: None\n        The style of the caps.\n    boxprops : dict, default: None\n        The style of the box.\n    whiskerprops : dict, default: None\n        The style of the whiskers.\n    flierprops : dict, default: None\n        The style of the fliers.\n    medianprops : dict, default: None\n        The style of the median.\n    meanprops : dict, default: None\n        The style of the mean.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the boxplot to a list\n      of the `.Line2D` instances created. That dictionary has the\n      following keys (assuming vertical boxplots):\n\n      - ``boxes``: the main body of the boxplot showing the\n        quartiles and the median's confidence intervals if\n        enabled.\n\n      - ``medians``: horizontal lines at the median of each box.\n\n      - ``whiskers``: the vertical lines extending to the most\n        extreme, non-outlier data points.\n\n      - ``caps``: the horizontal lines at the ends of the\n        whiskers.\n\n      - ``fliers``: points representing data that extend beyond\n        the whiskers (fliers).\n\n      - ``means``: points or lines representing the means.\n\n    \"\"\"\n    if whis is None:\n        whis = rcParams['boxplot.whiskers']\n    if bootstrap is None:\n        bootstrap = rcParams['boxplot.bootstrap']\n    bxpstats = cbook.boxplot_stats(x, whis=whis, bootstrap=bootstrap, labels=labels, autorange=autorange)\n    if notch is None:\n        notch = rcParams['boxplot.notch']\n    if vert is None:\n        vert = rcParams['boxplot.vertical']\n    if patch_artist is None:\n        patch_artist = rcParams['boxplot.patchartist']\n    if meanline is None:\n        meanline = rcParams['boxplot.meanline']\n    if showmeans is None:\n        showmeans = rcParams['boxplot.showmeans']\n    if showcaps is None:\n        showcaps = rcParams['boxplot.showcaps']\n    if showbox is None:\n        showbox = rcParams['boxplot.showbox']\n    if showfliers is None:\n        showfliers = rcParams['boxplot.showfliers']\n    if boxprops is None:\n        boxprops = {}\n    if whiskerprops is None:\n        whiskerprops = {}\n    if capprops is None:\n        capprops = {}\n    if medianprops is None:\n        medianprops = {}\n    if meanprops is None:\n        meanprops = {}\n    if flierprops is None:\n        flierprops = {}\n    if patch_artist:\n        boxprops['linestyle'] = 'solid'\n        if 'color' in boxprops:\n            boxprops['edgecolor'] = boxprops.pop('color')\n    if sym is not None:\n        if sym == '':\n            flierprops = dict(linestyle='none', marker='', color='none')\n            showfliers = False\n        else:\n            (_, marker, color) = _process_plot_format(sym)\n            if marker is not None:\n                flierprops['marker'] = marker\n            if color is not None:\n                flierprops['color'] = color\n                flierprops['markerfacecolor'] = color\n                flierprops['markeredgecolor'] = color\n    if usermedians is not None:\n        if len(np.ravel(usermedians)) != len(bxpstats) or np.shape(usermedians)[0] != len(bxpstats):\n            raise ValueError('usermedians length not compatible with x')\n        else:\n            for (stats, med) in zip(bxpstats, usermedians):\n                if med is not None:\n                    stats['med'] = med\n    if conf_intervals is not None:\n        if np.shape(conf_intervals)[0] != len(bxpstats):\n            err_mess = 'conf_intervals length not compatible with x'\n            raise ValueError(err_mess)\n        else:\n            for (stats, ci) in zip(bxpstats, conf_intervals):\n                if ci is not None:\n                    if len(ci) != 2:\n                        raise ValueError('each confidence interval must have two values')\n                    else:\n                        if ci[0] is not None:\n                            stats['cilo'] = ci[0]\n                        if ci[1] is not None:\n                            stats['cihi'] = ci[1]\n    artists = self.bxp(bxpstats, positions=positions, widths=widths, vert=vert, patch_artist=patch_artist, shownotches=notch, showmeans=showmeans, showcaps=showcaps, showbox=showbox, boxprops=boxprops, flierprops=flierprops, medianprops=medianprops, meanprops=meanprops, meanline=meanline, showfliers=showfliers, capprops=capprops, whiskerprops=whiskerprops, manage_ticks=manage_ticks, zorder=zorder)\n    return artists",
                            "@cbook._rename_parameter('3.1', 'manage_xticks', 'manage_ticks')\ndef bxp(self, bxpstats, positions=None, widths=None, vert=True, patch_artist=False, shownotches=False, showmeans=False, showcaps=True, showbox=True, showfliers=True, boxprops=None, whiskerprops=None, flierprops=None, medianprops=None, capprops=None, meanprops=None, meanline=False, manage_ticks=True, zorder=None):\n    \"\"\"\n    Drawing function for box and whisker plots.\n\n    Make a box and whisker plot for each column of *x* or each\n    vector in sequence *x*.  The box extends from the lower to\n    upper quartile values of the data, with a line at the median.\n    The whiskers extend from the box to show the range of the\n    data.  Flier points are those past the end of the whiskers.\n\n    Parameters\n    ----------\n    bxpstats : list of dicts\n      A list of dictionaries containing stats for each boxplot.\n      Required keys are:\n\n      - ``med``: The median (scalar float).\n\n      - ``q1``: The first quartile (25th percentile) (scalar\n        float).\n\n      - ``q3``: The third quartile (75th percentile) (scalar\n        float).\n\n      - ``whislo``: Lower bound of the lower whisker (scalar\n        float).\n\n      - ``whishi``: Upper bound of the upper whisker (scalar\n        float).\n\n      Optional keys are:\n\n      - ``mean``: The mean (scalar float). Needed if\n        ``showmeans=True``.\n\n      - ``fliers``: Data beyond the whiskers (sequence of floats).\n        Needed if ``showfliers=True``.\n\n      - ``cilo`` & ``cihi``: Lower and upper confidence intervals\n        about the median. Needed if ``shownotches=True``.\n\n      - ``label``: Name of the dataset (string). If available,\n        this will be used a tick label for the boxplot\n\n    positions : array-like, default: [1, 2, ..., n]\n      Sets the positions of the boxes. The ticks and limits\n      are automatically set to match the positions.\n\n    widths : array-like, default: None\n      Either a scalar or a vector and sets the width of each\n      box. The default is ``0.15*(distance between extreme\n      positions)``, clipped to no less than 0.15 and no more than\n      0.5.\n\n    vert : bool, default: True\n      If `True` (default), makes the boxes vertical.  If `False`,\n      makes horizontal boxes.\n\n    patch_artist : bool, default: False\n      If `False` produces boxes with the `.Line2D` artist.\n      If `True` produces boxes with the `~matplotlib.patches.Patch` artist.\n\n    shownotches : bool, default: False\n      If `False` (default), produces a rectangular box plot.\n      If `True`, will produce a notched box plot\n\n    showmeans : bool, default: False\n      If `True`, will toggle on the rendering of the means\n\n    showcaps  : bool, default: True\n      If `True`, will toggle on the rendering of the caps\n\n    showbox  : bool, default: True\n      If `True`, will toggle on the rendering of the box\n\n    showfliers : bool, default: True\n      If `True`, will toggle on the rendering of the fliers\n\n    boxprops : dict or None (default)\n      If provided, will set the plotting style of the boxes\n\n    whiskerprops : dict or None (default)\n      If provided, will set the plotting style of the whiskers\n\n    capprops : dict or None (default)\n      If provided, will set the plotting style of the caps\n\n    flierprops : dict or None (default)\n      If provided will set the plotting style of the fliers\n\n    medianprops : dict or None (default)\n      If provided, will set the plotting style of the medians\n\n    meanprops : dict or None (default)\n      If provided, will set the plotting style of the means\n\n    meanline : bool, default: False\n      If `True` (and *showmeans* is `True`), will try to render the mean\n      as a line spanning the full width of the box according to\n      *meanprops*. Not recommended if *shownotches* is also True.\n      Otherwise, means will be shown as points.\n\n    manage_ticks : bool, default: True\n      If True, the tick locations and labels will be adjusted to match the\n      boxplot positions.\n\n    zorder : scalar, default: None\n      The zorder of the resulting boxplot.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the boxplot to a list\n      of the `.Line2D` instances created. That dictionary has the\n      following keys (assuming vertical boxplots):\n\n      - ``boxes``: the main body of the boxplot showing the\n        quartiles and the median's confidence intervals if\n        enabled.\n\n      - ``medians``: horizontal lines at the median of each box.\n\n      - ``whiskers``: the vertical lines extending to the most\n        extreme, non-outlier data points.\n\n      - ``caps``: the horizontal lines at the ends of the\n        whiskers.\n\n      - ``fliers``: points representing data that extend beyond\n        the whiskers (fliers).\n\n      - ``means``: points or lines representing the means.\n\n    Examples\n    --------\n    .. plot:: gallery/statistics/bxp.py\n\n    \"\"\"\n    whiskers = []\n    caps = []\n    boxes = []\n    medians = []\n    means = []\n    fliers = []\n    datalabels = []\n    if zorder is None:\n        zorder = mlines.Line2D.zorder\n    zdelta = 0.1\n\n    def line_props_with_rcdefaults(subkey, explicit, zdelta=0):\n        d = {k.split('.')[-1]: v for (k, v) in rcParams.items() if k.startswith(f'boxplot.{subkey}')}\n        d['zorder'] = zorder + zdelta\n        if explicit is not None:\n            d.update(cbook.normalize_kwargs(explicit, mlines.Line2D._alias_map))\n        return d\n    if patch_artist:\n        final_boxprops = dict(linestyle=rcParams['boxplot.boxprops.linestyle'], linewidth=rcParams['boxplot.boxprops.linewidth'], edgecolor=rcParams['boxplot.boxprops.color'], facecolor='white' if rcParams['_internal.classic_mode'] else rcParams['patch.facecolor'], zorder=zorder)\n        if boxprops is not None:\n            final_boxprops.update(cbook.normalize_kwargs(boxprops, mpatches.PathPatch._alias_map))\n    else:\n        final_boxprops = line_props_with_rcdefaults('boxprops', boxprops)\n    final_whiskerprops = line_props_with_rcdefaults('whiskerprops', whiskerprops)\n    final_capprops = line_props_with_rcdefaults('capprops', capprops)\n    final_flierprops = line_props_with_rcdefaults('flierprops', flierprops)\n    final_medianprops = line_props_with_rcdefaults('medianprops', medianprops, zdelta)\n    final_meanprops = line_props_with_rcdefaults('meanprops', meanprops, zdelta)\n    removed_prop = 'marker' if meanline else 'linestyle'\n    if meanprops is None or removed_prop not in meanprops:\n        final_meanprops[removed_prop] = ''\n\n    def to_vc(xs, ys):\n        verts = np.append(np.column_stack([xs, ys]), [(0, 0)], 0)\n        codes = [mpath.Path.MOVETO] + [mpath.Path.LINETO] * (len(verts) - 2) + [mpath.Path.CLOSEPOLY]\n        return (verts, codes)\n\n    def patch_list(xs, ys, **kwargs):\n        (verts, codes) = to_vc(xs, ys)\n        path = mpath.Path(verts, codes)\n        patch = mpatches.PathPatch(path, **kwargs)\n        self.add_artist(patch)\n        return [patch]\n    if vert:\n\n        def doplot(*args, **kwargs):\n            return self.plot(*args, **kwargs)\n\n        def dopatch(xs, ys, **kwargs):\n            return patch_list(xs, ys, **kwargs)\n    else:\n\n        def doplot(*args, **kwargs):\n            shuffled = []\n            for i in range(0, len(args), 2):\n                shuffled.extend([args[i + 1], args[i]])\n            return self.plot(*shuffled, **kwargs)\n\n        def dopatch(xs, ys, **kwargs):\n            (xs, ys) = (ys, xs)\n            return patch_list(xs, ys, **kwargs)\n    N = len(bxpstats)\n    datashape_message = 'List of boxplot statistics and `{0}` values must have same the length'\n    if positions is None:\n        positions = list(range(1, N + 1))\n    elif len(positions) != N:\n        raise ValueError(datashape_message.format('positions'))\n    positions = np.array(positions)\n    if len(positions) > 0 and (not isinstance(positions[0], Number)):\n        raise TypeError('positions should be an iterable of numbers')\n    if widths is None:\n        widths = [np.clip(0.15 * np.ptp(positions), 0.15, 0.5)] * N\n    elif np.isscalar(widths):\n        widths = [widths] * N\n    elif len(widths) != N:\n        raise ValueError(datashape_message.format('widths'))\n    for (pos, width, stats) in zip(positions, widths, bxpstats):\n        datalabels.append(stats.get('label', pos))\n        whisker_x = np.ones(2) * pos\n        whiskerlo_y = np.array([stats['q1'], stats['whislo']])\n        whiskerhi_y = np.array([stats['q3'], stats['whishi']])\n        cap_left = pos - width * 0.25\n        cap_right = pos + width * 0.25\n        cap_x = np.array([cap_left, cap_right])\n        cap_lo = np.ones(2) * stats['whislo']\n        cap_hi = np.ones(2) * stats['whishi']\n        box_left = pos - width * 0.5\n        box_right = pos + width * 0.5\n        med_y = [stats['med'], stats['med']]\n        if shownotches:\n            box_x = [box_left, box_right, box_right, cap_right, box_right, box_right, box_left, box_left, cap_left, box_left, box_left]\n            box_y = [stats['q1'], stats['q1'], stats['cilo'], stats['med'], stats['cihi'], stats['q3'], stats['q3'], stats['cihi'], stats['med'], stats['cilo'], stats['q1']]\n            med_x = cap_x\n        else:\n            box_x = [box_left, box_right, box_right, box_left, box_left]\n            box_y = [stats['q1'], stats['q1'], stats['q3'], stats['q3'], stats['q1']]\n            med_x = [box_left, box_right]\n        if showbox:\n            if patch_artist:\n                boxes.extend(dopatch(box_x, box_y, **final_boxprops))\n            else:\n                boxes.extend(doplot(box_x, box_y, **final_boxprops))\n        whiskers.extend(doplot(whisker_x, whiskerlo_y, **final_whiskerprops))\n        whiskers.extend(doplot(whisker_x, whiskerhi_y, **final_whiskerprops))\n        if showcaps:\n            caps.extend(doplot(cap_x, cap_lo, **final_capprops))\n            caps.extend(doplot(cap_x, cap_hi, **final_capprops))\n        medians.extend(doplot(med_x, med_y, **final_medianprops))\n        if showmeans:\n            if meanline:\n                means.extend(doplot([box_left, box_right], [stats['mean'], stats['mean']], **final_meanprops))\n            else:\n                means.extend(doplot([pos], [stats['mean']], **final_meanprops))\n        if showfliers:\n            flier_x = np.full(len(stats['fliers']), pos, dtype=np.float64)\n            flier_y = stats['fliers']\n            fliers.extend(doplot(flier_x, flier_y, **final_flierprops))\n    if manage_ticks:\n        axis_name = 'x' if vert else 'y'\n        interval = getattr(self.dataLim, f'interval{axis_name}')\n        axis = getattr(self, f'{axis_name}axis')\n        positions = axis.convert_units(positions)\n        interval[:] = (min(interval[0], min(positions) - 0.5), max(interval[1], max(positions) + 0.5))\n        for (median, position) in zip(medians, positions):\n            getattr(median.sticky_edges, axis_name).extend([position - 0.5, position + 0.5])\n        locator = axis.get_major_locator()\n        if not isinstance(axis.get_major_locator(), mticker.FixedLocator):\n            locator = mticker.FixedLocator([])\n            axis.set_major_locator(locator)\n        locator.locs = np.array([*locator.locs, *positions])\n        formatter = axis.get_major_formatter()\n        if not isinstance(axis.get_major_formatter(), mticker.FixedFormatter):\n            formatter = mticker.FixedFormatter([])\n            axis.set_major_formatter(formatter)\n        formatter.seq = [*formatter.seq, *datalabels]\n        self._request_autoscale_view(scalex=self._autoscaleXon, scaley=self._autoscaleYon)\n    return dict(whiskers=whiskers, caps=caps, boxes=boxes, medians=medians, fliers=fliers, means=means)",
                            "@staticmethod\ndef _parse_scatter_color_args(c, edgecolors, kwargs, xsize, get_next_color_func):\n    \"\"\"\n    Helper function to process color related arguments of `.Axes.scatter`.\n\n    Argument precedence for facecolors:\n\n    - c (if not None)\n    - kwargs['facecolors']\n    - kwargs['facecolor']\n    - kwargs['color'] (==kwcolor)\n    - 'b' if in classic mode else the result of ``get_next_color_func()``\n\n    Argument precedence for edgecolors:\n\n    - edgecolors (is an explicit kw argument in scatter())\n    - kwargs['edgecolor']\n    - kwargs['color'] (==kwcolor)\n    - 'face' if not in classic mode else None\n\n    Parameters\n    ----------\n    c : color or sequence or sequence of color or None\n        See argument description of `.Axes.scatter`.\n    edgecolors : color or sequence of color or {'face', 'none'} or None\n        See argument description of `.Axes.scatter`.\n    kwargs : dict\n        Additional kwargs. If these keys exist, we pop and process them:\n        'facecolors', 'facecolor', 'edgecolor', 'color'\n        Note: The dict is modified by this function.\n    xsize : int\n        The size of the x and y arrays passed to `.Axes.scatter`.\n    get_next_color_func : callable\n        A callable that returns a color. This color is used as facecolor\n        if no other color is provided.\n\n        Note, that this is a function rather than a fixed color value to\n        support conditional evaluation of the next color.  As of the\n        current implementation obtaining the next color from the\n        property cycle advances the cycle. This must only happen if we\n        actually use the color, which will only be decided within this\n        method.\n\n    Returns\n    -------\n    c\n        The input *c* if it was not *None*, else a color derived from the\n        other inputs or defaults.\n    colors : array(N, 4) or None\n        The facecolors as RGBA values, or *None* if a colormap is used.\n    edgecolors\n        The edgecolor.\n\n    \"\"\"\n    facecolors = kwargs.pop('facecolors', None)\n    facecolors = kwargs.pop('facecolor', facecolors)\n    edgecolors = kwargs.pop('edgecolor', edgecolors)\n    kwcolor = kwargs.pop('color', None)\n    if kwcolor is not None and c is not None:\n        raise ValueError(\"Supply a 'c' argument or a 'color' kwarg but not both; they differ but their functionalities overlap.\")\n    if kwcolor is not None:\n        try:\n            mcolors.to_rgba_array(kwcolor)\n        except ValueError:\n            raise ValueError(\"'color' kwarg must be an color or sequence of color specs.  For a sequence of values to be color-mapped, use the 'c' argument instead.\")\n        if edgecolors is None:\n            edgecolors = kwcolor\n        if facecolors is None:\n            facecolors = kwcolor\n    if edgecolors is None and (not rcParams['_internal.classic_mode']):\n        edgecolors = rcParams['scatter.edgecolors']\n    c_was_none = c is None\n    if c is None:\n        c = facecolors if facecolors is not None else 'b' if rcParams['_internal.classic_mode'] else get_next_color_func()\n    c_is_string_or_strings = isinstance(c, str) or (isinstance(c, collections.abc.Iterable) and len(c) > 0 and isinstance(cbook.safe_first_element(c), str))\n\n    def invalid_shape_exception(csize, xsize):\n        return ValueError(f\"'c' argument has {csize} elements, which is inconsistent with 'x' and 'y' with size {xsize}.\")\n    c_is_mapped = False\n    valid_shape = True\n    if not c_was_none and kwcolor is None and (not c_is_string_or_strings):\n        try:\n            c = np.asanyarray(c, dtype=float)\n        except ValueError:\n            pass\n        else:\n            if c.size == xsize:\n                c = c.ravel()\n                c_is_mapped = True\n            else:\n                if c.shape in ((3,), (4,)):\n                    _log.warning(\"'c' argument looks like a single numeric RGB or RGBA sequence, which should be avoided as value-mapping will have precedence in case its length matches with 'x' & 'y'.  Please use a 2-D array with a single row if you really want to specify the same RGB or RGBA value for all points.\")\n                valid_shape = False\n    if not c_is_mapped:\n        try:\n            colors = mcolors.to_rgba_array(c)\n        except ValueError:\n            if not valid_shape:\n                raise invalid_shape_exception(c.size, xsize)\n            raise ValueError(f\"'c' argument must be a color, a sequence of colors, or a sequence of numbers, not {c}\")\n        else:\n            if len(colors) not in (0, 1, xsize):\n                raise invalid_shape_exception(len(colors), xsize)\n    else:\n        colors = None\n    return (c, colors, edgecolors)",
                            "@_preprocess_data(replace_names=['x', 'y', 's', 'linewidths', 'edgecolors', 'c', 'facecolor', 'facecolors', 'color'], label_namer='y')\n@cbook._delete_parameter('3.2', 'verts')\ndef scatter(self, x, y, s=None, c=None, marker=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, verts=None, edgecolors=None, *, plotnonfinite=False, **kwargs):\n    \"\"\"\n    A scatter plot of *y* vs. *x* with varying marker size and/or color.\n\n    Parameters\n    ----------\n    x, y : scalar or array-like, shape (n, )\n        The data positions.\n\n    s : scalar or array-like, shape (n, ), optional\n        The marker size in points**2.\n        Default is ``rcParams['lines.markersize'] ** 2``.\n\n    c : color, sequence, or sequence of colors, optional\n        The marker color. Possible values:\n\n        - A single color format string.\n        - A sequence of colors of length n.\n        - A scalar or sequence of n numbers to be mapped to colors using\n          *cmap* and *norm*.\n        - A 2-D array in which the rows are RGB or RGBA.\n\n        Note that *c* should not be a single numeric RGB or RGBA sequence\n        because that is indistinguishable from an array of values to be\n        colormapped. If you want to specify the same RGB or RGBA value for\n        all points, use a 2-D array with a single row.  Otherwise, value-\n        matching will have precedence in case of a size matching with *x*\n        and *y*.\n\n        Defaults to ``None``. In that case the marker color is determined\n        by the value of ``color``, ``facecolor`` or ``facecolors``. In case\n        those are not specified or ``None``, the marker color is determined\n        by the next color of the ``Axes``' current \"shape and fill\" color\n        cycle. This cycle defaults to :rc:`axes.prop_cycle`.\n\n    marker : `~matplotlib.markers.MarkerStyle`, optional\n        The marker style. *marker* can be either an instance of the class\n        or the text shorthand for a particular marker.\n        Defaults to ``None``, in which case it takes the value of\n        :rc:`scatter.marker` = 'o'.\n        See `~matplotlib.markers` for more information about marker styles.\n\n    cmap : `~matplotlib.colors.Colormap`, optional\n        A `.Colormap` instance or registered colormap name. *cmap* is only\n        used if *c* is an array of floats. If ``None``, defaults to\n        :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, default: None\n        A `.Normalize` instance is used to scale luminance data to 0, 1.\n        *norm* is only used if *c* is an array of floats. If *None*, use\n        the default `.colors.Normalize`.\n\n    vmin, vmax : scalar, default: None\n        *vmin* and *vmax* are used in conjunction with *norm* to normalize\n        luminance data. If None, the respective min and max of the color\n        array is used. *vmin* and *vmax* are ignored if you pass a *norm*\n        instance.\n\n    alpha : scalar, default: None\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n    linewidths : scalar or array-like, default: None\n        The linewidth of the marker edges. Note: The default *edgecolors*\n        is 'face'. You may want to change this as well.\n        If *None*, defaults to :rc:`lines.linewidth`.\n\n    edgecolors : {'face', 'none', *None*} or color or sequence of color, optional.\n        The edge color of the marker. Possible values:\n\n        - 'face': The edge color will always be the same as the face color.\n        - 'none': No patch boundary will be drawn.\n        - A color or sequence of colors.\n\n        Defaults to ``None``, in which case it takes the value of\n        :rc:`scatter.edgecolors` = 'face'.\n\n        For non-filled markers, the *edgecolors* kwarg is ignored and\n        forced to 'face' internally.\n\n    plotnonfinite : bool, default: False\n        Set to plot points with nonfinite *c*, in conjunction with\n        `~matplotlib.colors.Colormap.set_bad`.\n\n    Returns\n    -------\n    paths : `~matplotlib.collections.PathCollection`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.collections.Collection` properties\n\n    See Also\n    --------\n    plot : To plot scatter plots when markers are identical in size and\n        color.\n\n    Notes\n    -----\n    * The `.plot` function will be faster for scatterplots where markers\n      don't vary in size or color.\n\n    * Any or all of *x*, *y*, *s*, and *c* may be masked arrays, in which\n      case all masks will be combined and only unmasked points will be\n      plotted.\n\n    * Fundamentally, scatter works with 1-D arrays; *x*, *y*, *s*, and *c*\n      may be input as N-D arrays, but within scatter they will be\n      flattened. The exception is *c*, which will be flattened only if its\n      size matches the size of *x* and *y*.\n\n    \"\"\"\n    self._process_unit_info(xdata=x, ydata=y, kwargs=kwargs)\n    x = self.convert_xunits(x)\n    y = self.convert_yunits(y)\n    x = np.ma.ravel(x)\n    y = np.ma.ravel(y)\n    if x.size != y.size:\n        raise ValueError('x and y must be the same size')\n    if s is None:\n        s = 20 if rcParams['_internal.classic_mode'] else rcParams['lines.markersize'] ** 2.0\n    s = np.ma.ravel(s)\n    if len(s) not in (1, x.size):\n        raise ValueError('s must be a scalar, or the same size as x and y')\n    (c, colors, edgecolors) = self._parse_scatter_color_args(c, edgecolors, kwargs, x.size, get_next_color_func=self._get_patches_for_fill.get_next_color)\n    if plotnonfinite and colors is None:\n        c = np.ma.masked_invalid(c)\n        (x, y, s, edgecolors, linewidths) = cbook._combine_masks(x, y, s, edgecolors, linewidths)\n    else:\n        (x, y, s, c, colors, edgecolors, linewidths) = cbook._combine_masks(x, y, s, c, colors, edgecolors, linewidths)\n    scales = s\n    if marker is None:\n        marker = rcParams['scatter.marker']\n    if isinstance(marker, mmarkers.MarkerStyle):\n        marker_obj = marker\n    else:\n        marker_obj = mmarkers.MarkerStyle(marker)\n    path = marker_obj.get_path().transformed(marker_obj.get_transform())\n    if not marker_obj.is_filled():\n        edgecolors = 'face'\n        linewidths = rcParams['lines.linewidth']\n    offsets = np.ma.column_stack([x, y])\n    collection = mcoll.PathCollection((path,), scales, facecolors=colors, edgecolors=edgecolors, linewidths=linewidths, offsets=offsets, transOffset=kwargs.pop('transform', self.transData), alpha=alpha)\n    collection.set_transform(mtransforms.IdentityTransform())\n    collection.update(kwargs)\n    if colors is None:\n        collection.set_array(c)\n        collection.set_cmap(cmap)\n        collection.set_norm(norm)\n        if vmin is not None or vmax is not None:\n            collection.set_clim(vmin, vmax)\n        else:\n            collection.autoscale_None()\n    if rcParams['_internal.classic_mode']:\n        if self._xmargin < 0.05 and x.size > 0:\n            self.set_xmargin(0.05)\n        if self._ymargin < 0.05 and x.size > 0:\n            self.set_ymargin(0.05)\n    self.add_collection(collection)\n    self._request_autoscale_view()\n    return collection",
                            "@_preprocess_data(replace_names=['x', 'y'], label_namer='y')\n@docstring.dedent_interpd\ndef hexbin(self, x, y, C=None, gridsize=100, bins=None, xscale='linear', yscale='linear', extent=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, edgecolors='face', reduce_C_function=np.mean, mincnt=None, marginals=False, **kwargs):\n    \"\"\"\n    Make a 2D hexagonal binning plot of points *x*, *y*.\n\n    If *C* is *None*, the value of the hexagon is determined by the number\n    of points in the hexagon. Otherwise, *C* specifies values at the\n    coordinate (x[i], y[i]). For each hexagon, these values are reduced\n    using *reduce_C_function*.\n\n    Parameters\n    ----------\n    x, y : array-like\n        The data positions. *x* and *y* must be of the same length.\n\n    C : array-like, optional\n        If given, these values are accumulated in the bins. Otherwise,\n        every point has a value of 1. Must be of the same length as *x*\n        and *y*.\n\n    gridsize : int or (int, int), default: 100\n        If a single int, the number of hexagons in the *x*-direction.\n        The number of hexagons in the *y*-direction is chosen such that\n        the hexagons are approximately regular.\n\n        Alternatively, if a tuple (*nx*, *ny*), the number of hexagons\n        in the *x*-direction and the *y*-direction.\n\n    bins : 'log' or int or sequence, default: None\n        Discretization of the hexagon values.\n\n        - If *None*, no binning is applied; the color of each hexagon\n          directly corresponds to its count value.\n        - If 'log', use a logarithmic scale for the color map.\n          Internally, :math:`log_{10}(i+1)` is used to determine the\n          hexagon color. This is equivalent to ``norm=LogNorm()``.\n        - If an integer, divide the counts in the specified number\n          of bins, and color the hexagons accordingly.\n        - If a sequence of values, the values of the lower bound of\n          the bins to be used.\n\n    xscale : {'linear', 'log'}, default: 'linear'\n        Use a linear or log10 scale on the horizontal axis.\n\n    yscale : {'linear', 'log'}, default: 'linear'\n        Use a linear or log10 scale on the vertical axis.\n\n    mincnt : int > 0, default: *None*\n        If not *None*, only display cells with more than *mincnt*\n        number of points in the cell.\n\n    marginals : bool, default: *False*\n        If marginals is *True*, plot the marginal density as\n        colormapped rectangles along the bottom of the x-axis and\n        left of the y-axis.\n\n    extent : float, default: *None*\n        The limits of the bins. The default assigns the limits\n        based on *gridsize*, *x*, *y*, *xscale* and *yscale*.\n\n        If *xscale* or *yscale* is set to 'log', the limits are\n        expected to be the exponent for a power of 10. E.g. for\n        x-limits of 1 and 50 in 'linear' scale and y-limits\n        of 10 and 1000 in 'log' scale, enter (1, 50, 1, 3).\n\n        Order of scalars is (left, right, bottom, top).\n\n    Other Parameters\n    ----------------\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        The Colormap instance or registered colormap name used to map\n        the bin values to colors. Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The Normalize instance scales the bin values to the canonical\n        colormap range [0, 1] for mapping to colors. By default, the data\n        range is mapped to the colorbar range using linear scaling.\n\n    vmin, vmax : float, default: None\n        The colorbar range. If *None*, suitable min/max values are\n        automatically chosen by the `~.Normalize` instance (defaults to\n        the respective min/max values of the bins in case of the default\n        linear scaling). This is ignored if *norm* is given.\n\n    alpha : float between 0 and 1, optional\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n    linewidths : float, default: *None*\n        If *None*, defaults to 1.0.\n\n    edgecolors : {'face', 'none', *None*} or color, default: 'face'\n        The color of the hexagon edges. Possible values are:\n\n        - 'face': Draw the edges in the same color as the fill color.\n        - 'none': No edges are drawn. This can sometimes lead to unsightly\n          unpainted pixels between the hexagons.\n        - *None*: Draw outlines in the default color.\n        - An explicit color.\n\n    reduce_C_function : callable, default: `numpy.mean`\n        The function to aggregate *C* within the bins. It is ignored if\n        *C* is not given. This must have the signature::\n\n            def reduce_C_function(C: array) -> float\n\n        Commonly used functions are:\n\n        - `numpy.mean`: average of the points\n        - `numpy.sum`: integral of the point values\n        - `numpy.max`: value taken from the largest point\n\n    **kwargs : `~matplotlib.collections.PolyCollection` properties\n        All other keyword arguments are passed on to `.PolyCollection`:\n\n        %(PolyCollection)s\n\n    Returns\n    -------\n    polycollection : `~matplotlib.collections.PolyCollection`\n        A `.PolyCollection` defining the hexagonal bins.\n\n        - `.PolyCollection.get_offset` contains a Mx2 array containing\n          the x, y positions of the M hexagon centers.\n        - `.PolyCollection.get_array` contains the values of the M\n          hexagons.\n\n        If *marginals* is *True*, horizontal\n        bar and vertical bar (both PolyCollections) will be attached\n        to the return collection as attributes *hbar* and *vbar*.\n\n    \"\"\"\n    self._process_unit_info(xdata=x, ydata=y, kwargs=kwargs)\n    (x, y, C) = cbook.delete_masked_points(x, y, C)\n    if np.iterable(gridsize):\n        (nx, ny) = gridsize\n    else:\n        nx = gridsize\n        ny = int(nx / math.sqrt(3))\n    x = np.array(x, float)\n    y = np.array(y, float)\n    if xscale == 'log':\n        if np.any(x <= 0.0):\n            raise ValueError('x contains non-positive values, so can not be log-scaled')\n        x = np.log10(x)\n    if yscale == 'log':\n        if np.any(y <= 0.0):\n            raise ValueError('y contains non-positive values, so can not be log-scaled')\n        y = np.log10(y)\n    if extent is not None:\n        (xmin, xmax, ymin, ymax) = extent\n    else:\n        (xmin, xmax) = (np.min(x), np.max(x)) if len(x) else (0, 1)\n        (ymin, ymax) = (np.min(y), np.max(y)) if len(y) else (0, 1)\n        (xmin, xmax) = mtransforms.nonsingular(xmin, xmax, expander=0.1)\n        (ymin, ymax) = mtransforms.nonsingular(ymin, ymax, expander=0.1)\n    padding = 1e-09 * (xmax - xmin)\n    xmin -= padding\n    xmax += padding\n    sx = (xmax - xmin) / nx\n    sy = (ymax - ymin) / ny\n    if marginals:\n        xorig = x.copy()\n        yorig = y.copy()\n    x = (x - xmin) / sx\n    y = (y - ymin) / sy\n    ix1 = np.round(x).astype(int)\n    iy1 = np.round(y).astype(int)\n    ix2 = np.floor(x).astype(int)\n    iy2 = np.floor(y).astype(int)\n    nx1 = nx + 1\n    ny1 = ny + 1\n    nx2 = nx\n    ny2 = ny\n    n = nx1 * ny1 + nx2 * ny2\n    d1 = (x - ix1) ** 2 + 3.0 * (y - iy1) ** 2\n    d2 = (x - ix2 - 0.5) ** 2 + 3.0 * (y - iy2 - 0.5) ** 2\n    bdist = d1 < d2\n    if C is None:\n        lattice1 = np.zeros((nx1, ny1))\n        lattice2 = np.zeros((nx2, ny2))\n        c1 = (0 <= ix1) & (ix1 < nx1) & (0 <= iy1) & (iy1 < ny1) & bdist\n        c2 = (0 <= ix2) & (ix2 < nx2) & (0 <= iy2) & (iy2 < ny2) & ~bdist\n        np.add.at(lattice1, (ix1[c1], iy1[c1]), 1)\n        np.add.at(lattice2, (ix2[c2], iy2[c2]), 1)\n        if mincnt is not None:\n            lattice1[lattice1 < mincnt] = np.nan\n            lattice2[lattice2 < mincnt] = np.nan\n        accum = np.concatenate([lattice1.ravel(), lattice2.ravel()])\n        good_idxs = ~np.isnan(accum)\n    else:\n        if mincnt is None:\n            mincnt = 0\n        lattice1 = np.empty((nx1, ny1), dtype=object)\n        for i in range(nx1):\n            for j in range(ny1):\n                lattice1[i, j] = []\n        lattice2 = np.empty((nx2, ny2), dtype=object)\n        for i in range(nx2):\n            for j in range(ny2):\n                lattice2[i, j] = []\n        for i in range(len(x)):\n            if bdist[i]:\n                if 0 <= ix1[i] < nx1 and 0 <= iy1[i] < ny1:\n                    lattice1[ix1[i], iy1[i]].append(C[i])\n            elif 0 <= ix2[i] < nx2 and 0 <= iy2[i] < ny2:\n                lattice2[ix2[i], iy2[i]].append(C[i])\n        for i in range(nx1):\n            for j in range(ny1):\n                vals = lattice1[i, j]\n                if len(vals) > mincnt:\n                    lattice1[i, j] = reduce_C_function(vals)\n                else:\n                    lattice1[i, j] = np.nan\n        for i in range(nx2):\n            for j in range(ny2):\n                vals = lattice2[i, j]\n                if len(vals) > mincnt:\n                    lattice2[i, j] = reduce_C_function(vals)\n                else:\n                    lattice2[i, j] = np.nan\n        accum = np.hstack((lattice1.astype(float).ravel(), lattice2.astype(float).ravel()))\n        good_idxs = ~np.isnan(accum)\n    offsets = np.zeros((n, 2), float)\n    offsets[:nx1 * ny1, 0] = np.repeat(np.arange(nx1), ny1)\n    offsets[:nx1 * ny1, 1] = np.tile(np.arange(ny1), nx1)\n    offsets[nx1 * ny1:, 0] = np.repeat(np.arange(nx2) + 0.5, ny2)\n    offsets[nx1 * ny1:, 1] = np.tile(np.arange(ny2), nx2) + 0.5\n    offsets[:, 0] *= sx\n    offsets[:, 1] *= sy\n    offsets[:, 0] += xmin\n    offsets[:, 1] += ymin\n    offsets = offsets[good_idxs, :]\n    accum = accum[good_idxs]\n    polygon = [sx, sy / 3] * np.array([[0.5, -0.5], [0.5, 0.5], [0.0, 1.0], [-0.5, 0.5], [-0.5, -0.5], [0.0, -1.0]])\n    if linewidths is None:\n        linewidths = [1.0]\n    if xscale == 'log' or yscale == 'log':\n        polygons = np.expand_dims(polygon, 0) + np.expand_dims(offsets, 1)\n        if xscale == 'log':\n            polygons[:, :, 0] = 10.0 ** polygons[:, :, 0]\n            xmin = 10.0 ** xmin\n            xmax = 10.0 ** xmax\n            self.set_xscale(xscale)\n        if yscale == 'log':\n            polygons[:, :, 1] = 10.0 ** polygons[:, :, 1]\n            ymin = 10.0 ** ymin\n            ymax = 10.0 ** ymax\n            self.set_yscale(yscale)\n        collection = mcoll.PolyCollection(polygons, edgecolors=edgecolors, linewidths=linewidths)\n    else:\n        collection = mcoll.PolyCollection([polygon], edgecolors=edgecolors, linewidths=linewidths, offsets=offsets, transOffset=mtransforms.IdentityTransform(), offset_position='data')\n    if bins == 'log':\n        if norm is not None:\n            cbook._warn_external(\"Only one of 'bins' and 'norm' arguments can be supplied, ignoring bins={}\".format(bins))\n        else:\n            norm = mcolors.LogNorm()\n        bins = None\n    if isinstance(norm, mcolors.LogNorm):\n        if (accum == 0).any():\n            accum += 1\n    if norm is not None:\n        if norm.vmin is None and norm.vmax is None:\n            norm.autoscale(accum)\n    if bins is not None:\n        if not np.iterable(bins):\n            (minimum, maximum) = (min(accum), max(accum))\n            bins -= 1\n            bins = minimum + (maximum - minimum) * np.arange(bins) / bins\n        bins = np.sort(bins)\n        accum = bins.searchsorted(accum)\n    collection.set_array(accum)\n    collection.set_cmap(cmap)\n    collection.set_norm(norm)\n    collection.set_alpha(alpha)\n    collection.update(kwargs)\n    if vmin is not None or vmax is not None:\n        collection.set_clim(vmin, vmax)\n    else:\n        collection.autoscale_None()\n    corners = ((xmin, ymin), (xmax, ymax))\n    self.update_datalim(corners)\n    self._request_autoscale_view(tight=True)\n    self.add_collection(collection, autolim=False)\n    if not marginals:\n        return collection\n    if C is None:\n        C = np.ones(len(x))\n\n    def coarse_bin(x, y, coarse):\n        ind = coarse.searchsorted(x).clip(0, len(coarse) - 1)\n        mus = np.zeros(len(coarse))\n        for i in range(len(coarse)):\n            yi = y[ind == i]\n            if len(yi) > 0:\n                mu = reduce_C_function(yi)\n            else:\n                mu = np.nan\n            mus[i] = mu\n        return mus\n    coarse = np.linspace(xmin, xmax, gridsize)\n    xcoarse = coarse_bin(xorig, C, coarse)\n    valid = ~np.isnan(xcoarse)\n    (verts, values) = ([], [])\n    for (i, val) in enumerate(xcoarse):\n        thismin = coarse[i]\n        if i < len(coarse) - 1:\n            thismax = coarse[i + 1]\n        else:\n            thismax = thismin + np.diff(coarse)[-1]\n        if not valid[i]:\n            continue\n        verts.append([(thismin, 0), (thismin, 0.05), (thismax, 0.05), (thismax, 0)])\n        values.append(val)\n    values = np.array(values)\n    trans = self.get_xaxis_transform(which='grid')\n    hbar = mcoll.PolyCollection(verts, transform=trans, edgecolors='face')\n    hbar.set_array(values)\n    hbar.set_cmap(cmap)\n    hbar.set_norm(norm)\n    hbar.set_alpha(alpha)\n    hbar.update(kwargs)\n    self.add_collection(hbar, autolim=False)\n    coarse = np.linspace(ymin, ymax, gridsize)\n    ycoarse = coarse_bin(yorig, C, coarse)\n    valid = ~np.isnan(ycoarse)\n    (verts, values) = ([], [])\n    for (i, val) in enumerate(ycoarse):\n        thismin = coarse[i]\n        if i < len(coarse) - 1:\n            thismax = coarse[i + 1]\n        else:\n            thismax = thismin + np.diff(coarse)[-1]\n        if not valid[i]:\n            continue\n        verts.append([(0, thismin), (0.0, thismax), (0.05, thismax), (0.05, thismin)])\n        values.append(val)\n    values = np.array(values)\n    trans = self.get_yaxis_transform(which='grid')\n    vbar = mcoll.PolyCollection(verts, transform=trans, edgecolors='face')\n    vbar.set_array(values)\n    vbar.set_cmap(cmap)\n    vbar.set_norm(norm)\n    vbar.set_alpha(alpha)\n    vbar.update(kwargs)\n    self.add_collection(vbar, autolim=False)\n    collection.hbar = hbar\n    collection.vbar = vbar\n\n    def on_changed(collection):\n        hbar.set_cmap(collection.get_cmap())\n        hbar.set_clim(collection.get_clim())\n        vbar.set_cmap(collection.get_cmap())\n        vbar.set_clim(collection.get_clim())\n    collection.callbacksSM.connect('changed', on_changed)\n    return collection",
                            "@docstring.dedent_interpd\ndef arrow(self, x, y, dx, dy, **kwargs):\n    \"\"\"\n    Add an arrow to the axes.\n\n    This draws an arrow from ``(x, y)`` to ``(x+dx, y+dy)``.\n\n    Parameters\n    ----------\n    x, y : float\n        The x and y coordinates of the arrow base.\n\n    dx, dy : float\n        The length of the arrow along x and y direction.\n\n    %(FancyArrow)s\n\n    Returns\n    -------\n    arrow : `.FancyArrow`\n        The created `.FancyArrow` object.\n\n    Notes\n    -----\n    The resulting arrow is affected by the axes aspect ratio and limits.\n    This may produce an arrow whose head is not square with its stem. To\n    create an arrow whose head is square with its stem,\n    use :meth:`annotate` for example:\n\n    >>> ax.annotate(\"\", xy=(0.5, 0.5), xytext=(0, 0),\n    ...             arrowprops=dict(arrowstyle=\"->\"))\n\n    \"\"\"\n    x = self.convert_xunits(x)\n    y = self.convert_yunits(y)\n    dx = self.convert_xunits(dx)\n    dy = self.convert_yunits(dy)\n    a = mpatches.FancyArrow(x, y, dx, dy, **kwargs)\n    self.add_artist(a)\n    return a",
                            "@docstring.copy(mquiver.QuiverKey.__init__)\ndef quiverkey(self, Q, X, Y, U, label, **kw):\n    qk = mquiver.QuiverKey(Q, X, Y, U, label, **kw)\n    self.add_artist(qk)\n    return qk",
                            "def _quiver_units(self, args, kw):\n    if len(args) > 3:\n        (x, y) = args[0:2]\n        self._process_unit_info(xdata=x, ydata=y, kwargs=kw)\n        x = self.convert_xunits(x)\n        y = self.convert_yunits(y)\n        return (x, y) + args[2:]\n    return args",
                            "@_preprocess_data()\ndef quiver(self, *args, **kw):\n    args = self._quiver_units(args, kw)\n    q = mquiver.Quiver(self, *args, **kw)\n    self.add_collection(q, autolim=True)\n    self._request_autoscale_view()\n    return q",
                            "@_preprocess_data()\n@docstring.dedent_interpd\ndef barbs(self, *args, **kw):\n    \"\"\"\n    %(barbs_doc)s\n    \"\"\"\n    args = self._quiver_units(args, kw)\n    b = mquiver.Barbs(self, *args, **kw)\n    self.add_collection(b, autolim=True)\n    self._request_autoscale_view()\n    return b",
                            "def fill(self, *args, data=None, **kwargs):\n    \"\"\"\n    Plot filled polygons.\n\n    Parameters\n    ----------\n    *args : sequence of x, y, [color]\n        Each polygon is defined by the lists of *x* and *y* positions of\n        its nodes, optionally followed by a *color* specifier. See\n        :mod:`matplotlib.colors` for supported color specifiers. The\n        standard color cycle is used for polygons without a color\n        specifier.\n\n        You can plot multiple polygons by providing multiple *x*, *y*,\n        *[color]* groups.\n\n        For example, each of the following is legal::\n\n            ax.fill(x, y)                    # a polygon with default color\n            ax.fill(x, y, \"b\")               # a blue polygon\n            ax.fill(x, y, x2, y2)            # two polygons\n            ax.fill(x, y, \"b\", x2, y2, \"r\")  # a blue and a red polygon\n\n    data : indexable object, optional\n        An object with labelled data. If given, provide the label names to\n        plot in *x* and *y*, e.g.::\n\n            ax.fill(\"time\", \"signal\",\n                    data={\"time\": [0, 1, 2], \"signal\": [0, 1, 0]})\n\n    Returns\n    -------\n    a list of :class:`~matplotlib.patches.Polygon`\n\n    Other Parameters\n    ----------------\n    **kwargs : :class:`~matplotlib.patches.Polygon` properties\n\n    Notes\n    -----\n    Use :meth:`fill_between` if you would like to fill the region between\n    two curves.\n    \"\"\"\n    kwargs = cbook.normalize_kwargs(kwargs, mlines.Line2D)\n    patches = [*self._get_patches_for_fill(*args, data=data, **kwargs)]\n    for poly in patches:\n        self.add_patch(poly)\n    self._request_autoscale_view()\n    return patches",
                            "@_preprocess_data(replace_names=['x', 'y1', 'y2', 'where'])\n@docstring.dedent_interpd\ndef fill_between(self, x, y1, y2=0, where=None, interpolate=False, step=None, **kwargs):\n    \"\"\"\n    Fill the area between two horizontal curves.\n\n    The curves are defined by the points (*x*, *y1*) and (*x*, *y2*). This\n    creates one or multiple polygons describing the filled area.\n\n    You may exclude some horizontal sections from filling using *where*.\n\n    By default, the edges connect the given points directly. Use *step* if\n    the filling should be a step function, i.e. constant in between *x*.\n\n\n    Parameters\n    ----------\n    x : array (length N)\n        The x coordinates of the nodes defining the curves.\n\n    y1 : array (length N) or scalar\n        The y coordinates of the nodes defining the first curve.\n\n    y2 : array (length N) or scalar, default: 0\n        The y coordinates of the nodes defining the second curve.\n\n    where : array of bool (length N), optional\n        Define *where* to exclude some horizontal regions from being\n        filled. The filled regions are defined by the coordinates\n        ``x[where]``.  More precisely, fill between ``x[i]`` and ``x[i+1]``\n        if ``where[i] and where[i+1]``.  Note that this definition implies\n        that an isolated *True* value between two *False* values in\n        *where* will not result in filling.  Both sides of the *True*\n        position remain unfilled due to the adjacent *False* values.\n\n    interpolate : bool, default: False\n        This option is only relevant if *where* is used and the two curves\n        are crossing each other.\n\n        Semantically, *where* is often used for *y1* > *y2* or similar.\n        By default, the nodes of the polygon defining the filled region\n        will only be placed at the positions in the *x* array.  Such a\n        polygon cannot describe the above semantics close to the\n        intersection.  The x-sections containing the intersection are\n        simply clipped.\n\n        Setting *interpolate* to *True* will calculate the actual\n        intersection point and extend the filled region up to this point.\n\n    step : {'pre', 'post', 'mid'}, optional\n        Define *step* if the filling should be a step function,\n        i.e. constant in between *x*. The value determines where the\n        step will occur:\n\n        - 'pre': The y value is continued constantly to the left from\n          every *x* position, i.e. the interval ``(x[i-1], x[i]]`` has the\n          value ``y[i]``.\n        - 'post': The y value is continued constantly to the right from\n          every *x* position, i.e. the interval ``[x[i], x[i+1])`` has the\n          value ``y[i]``.\n        - 'mid': Steps occur half-way between the *x* positions.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All other keyword arguments are passed on to `.PolyCollection`.\n        They control the `.Polygon` properties:\n\n        %(PolyCollection)s\n\n    Returns\n    -------\n    `.PolyCollection`\n        A `.PolyCollection` containing the plotted polygons.\n\n    See Also\n    --------\n    fill_betweenx : Fill between two sets of x-values.\n\n    Notes\n    -----\n    .. [notes section required to get data note injection right]\n\n    \"\"\"\n    if not rcParams['_internal.classic_mode']:\n        kwargs = cbook.normalize_kwargs(kwargs, mcoll.Collection)\n        if not any((c in kwargs for c in ('color', 'facecolor'))):\n            kwargs['facecolor'] = self._get_patches_for_fill.get_next_color()\n    self._process_unit_info(xdata=x, ydata=y1, kwargs=kwargs)\n    self._process_unit_info(ydata=y2)\n    x = ma.masked_invalid(self.convert_xunits(x))\n    y1 = ma.masked_invalid(self.convert_yunits(y1))\n    y2 = ma.masked_invalid(self.convert_yunits(y2))\n    for (name, array) in [('x', x), ('y1', y1), ('y2', y2)]:\n        if array.ndim > 1:\n            raise ValueError('Input passed into argument \"%r\"' % name + 'is not 1-dimensional.')\n    if where is None:\n        where = True\n    else:\n        where = np.asarray(where, dtype=bool)\n        if where.size != x.size:\n            cbook.warn_deprecated('3.2', message='The parameter where must have the same size as x in fill_between(). This will become an error in future versions of Matplotlib.')\n    where = where & ~functools.reduce(np.logical_or, map(np.ma.getmask, [x, y1, y2]))\n    (x, y1, y2) = np.broadcast_arrays(np.atleast_1d(x), y1, y2)\n    polys = []\n    for (ind0, ind1) in cbook.contiguous_regions(where):\n        xslice = x[ind0:ind1]\n        y1slice = y1[ind0:ind1]\n        y2slice = y2[ind0:ind1]\n        if step is not None:\n            step_func = cbook.STEP_LOOKUP_MAP['steps-' + step]\n            (xslice, y1slice, y2slice) = step_func(xslice, y1slice, y2slice)\n        if not len(xslice):\n            continue\n        N = len(xslice)\n        X = np.zeros((2 * N + 2, 2), float)\n        if interpolate:\n\n            def get_interp_point(ind):\n                im1 = max(ind - 1, 0)\n                x_values = x[im1:ind + 1]\n                diff_values = y1[im1:ind + 1] - y2[im1:ind + 1]\n                y1_values = y1[im1:ind + 1]\n                if len(diff_values) == 2:\n                    if np.ma.is_masked(diff_values[1]):\n                        return (x[im1], y1[im1])\n                    elif np.ma.is_masked(diff_values[0]):\n                        return (x[ind], y1[ind])\n                diff_order = diff_values.argsort()\n                diff_root_x = np.interp(0, diff_values[diff_order], x_values[diff_order])\n                x_order = x_values.argsort()\n                diff_root_y = np.interp(diff_root_x, x_values[x_order], y1_values[x_order])\n                return (diff_root_x, diff_root_y)\n            start = get_interp_point(ind0)\n            end = get_interp_point(ind1)\n        else:\n            start = (xslice[0], y2slice[0])\n            end = (xslice[-1], y2slice[-1])\n        X[0] = start\n        X[N + 1] = end\n        X[1:N + 1, 0] = xslice\n        X[1:N + 1, 1] = y1slice\n        X[N + 2:, 0] = xslice[::-1]\n        X[N + 2:, 1] = y2slice[::-1]\n        polys.append(X)\n    collection = mcoll.PolyCollection(polys, **kwargs)\n    XY1 = np.array([x[where], y1[where]]).T\n    XY2 = np.array([x[where], y2[where]]).T\n    self.dataLim.update_from_data_xy(XY1, self.ignore_existing_data_limits, updatex=True, updatey=True)\n    self.ignore_existing_data_limits = False\n    self.dataLim.update_from_data_xy(XY2, self.ignore_existing_data_limits, updatex=False, updatey=True)\n    self.add_collection(collection, autolim=False)\n    self._request_autoscale_view()\n    return collection",
                            "@_preprocess_data(replace_names=['y', 'x1', 'x2', 'where'])\n@docstring.dedent_interpd\ndef fill_betweenx(self, y, x1, x2=0, where=None, step=None, interpolate=False, **kwargs):\n    \"\"\"\n    Fill the area between two vertical curves.\n\n    The curves are defined by the points (*x1*, *y*) and (*x2*, *y*). This\n    creates one or multiple polygons describing the filled area.\n\n    You may exclude some vertical sections from filling using *where*.\n\n    By default, the edges connect the given points directly. Use *step* if\n    the filling should be a step function, i.e. constant in between *y*.\n\n\n    Parameters\n    ----------\n    y : array (length N)\n        The y coordinates of the nodes defining the curves.\n\n    x1 : array (length N) or scalar\n        The x coordinates of the nodes defining the first curve.\n\n    x2 : array (length N) or scalar, default: 0\n        The x coordinates of the nodes defining the second curve.\n\n    where : array of bool (length N), optional\n        Define *where* to exclude some vertical regions from being\n        filled. The filled regions are defined by the coordinates\n        ``y[where]``.  More precisely, fill between ``y[i]`` and ``y[i+1]``\n        if ``where[i] and where[i+1]``.  Note that this definition implies\n        that an isolated *True* value between two *False* values in\n        *where* will not result in filling.  Both sides of the *True*\n        position remain unfilled due to the adjacent *False* values.\n\n    interpolate : bool, optional\n        This option is only relevant if *where* is used and the two curves\n        are crossing each other.\n\n        Semantically, *where* is often used for *x1* > *x2* or similar.\n        By default, the nodes of the polygon defining the filled region\n        will only be placed at the positions in the *y* array.  Such a\n        polygon cannot describe the above semantics close to the\n        intersection.  The y-sections containing the intersection are\n        simply clipped.\n\n        Setting *interpolate* to *True* will calculate the actual\n        intersection point and extend the filled region up to this point.\n\n    step : {'pre', 'post', 'mid'}, optional\n        Define *step* if the filling should be a step function,\n        i.e. constant in between *y*. The value determines where the\n        step will occur:\n\n        - 'pre': The y value is continued constantly to the left from\n          every *x* position, i.e. the interval ``(x[i-1], x[i]]`` has the\n          value ``y[i]``.\n        - 'post': The y value is continued constantly to the right from\n          every *x* position, i.e. the interval ``[x[i], x[i+1])`` has the\n          value ``y[i]``.\n        - 'mid': Steps occur half-way between the *x* positions.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All other keyword arguments are passed on to `.PolyCollection`.\n        They control the `.Polygon` properties:\n\n        %(PolyCollection)s\n\n    Returns\n    -------\n    `.PolyCollection`\n        A `.PolyCollection` containing the plotted polygons.\n\n    See Also\n    --------\n    fill_between : Fill between two sets of y-values.\n\n    Notes\n    -----\n    .. [notes section required to get data note injection right]\n\n    \"\"\"\n    if not rcParams['_internal.classic_mode']:\n        kwargs = cbook.normalize_kwargs(kwargs, mcoll.Collection)\n        if not any((c in kwargs for c in ('color', 'facecolor'))):\n            kwargs['facecolor'] = self._get_patches_for_fill.get_next_color()\n    self._process_unit_info(ydata=y, xdata=x1, kwargs=kwargs)\n    self._process_unit_info(xdata=x2)\n    y = ma.masked_invalid(self.convert_yunits(y))\n    x1 = ma.masked_invalid(self.convert_xunits(x1))\n    x2 = ma.masked_invalid(self.convert_xunits(x2))\n    for (name, array) in [('y', y), ('x1', x1), ('x2', x2)]:\n        if array.ndim > 1:\n            raise ValueError('Input passed into argument \"%r\"' % name + 'is not 1-dimensional.')\n    if where is None:\n        where = True\n    else:\n        where = np.asarray(where, dtype=bool)\n        if where.size != y.size:\n            cbook.warn_deprecated('3.2', message='The parameter where must have the same size as y in fill_between(). This will become an error in future versions of Matplotlib.')\n    where = where & ~functools.reduce(np.logical_or, map(np.ma.getmask, [y, x1, x2]))\n    (y, x1, x2) = np.broadcast_arrays(np.atleast_1d(y), x1, x2)\n    polys = []\n    for (ind0, ind1) in cbook.contiguous_regions(where):\n        yslice = y[ind0:ind1]\n        x1slice = x1[ind0:ind1]\n        x2slice = x2[ind0:ind1]\n        if step is not None:\n            step_func = cbook.STEP_LOOKUP_MAP['steps-' + step]\n            (yslice, x1slice, x2slice) = step_func(yslice, x1slice, x2slice)\n        if not len(yslice):\n            continue\n        N = len(yslice)\n        Y = np.zeros((2 * N + 2, 2), float)\n        if interpolate:\n\n            def get_interp_point(ind):\n                im1 = max(ind - 1, 0)\n                y_values = y[im1:ind + 1]\n                diff_values = x1[im1:ind + 1] - x2[im1:ind + 1]\n                x1_values = x1[im1:ind + 1]\n                if len(diff_values) == 2:\n                    if np.ma.is_masked(diff_values[1]):\n                        return (x1[im1], y[im1])\n                    elif np.ma.is_masked(diff_values[0]):\n                        return (x1[ind], y[ind])\n                diff_order = diff_values.argsort()\n                diff_root_y = np.interp(0, diff_values[diff_order], y_values[diff_order])\n                y_order = y_values.argsort()\n                diff_root_x = np.interp(diff_root_y, y_values[y_order], x1_values[y_order])\n                return (diff_root_x, diff_root_y)\n            start = get_interp_point(ind0)\n            end = get_interp_point(ind1)\n        else:\n            start = (x2slice[0], yslice[0])\n            end = (x2slice[-1], yslice[-1])\n        Y[0] = start\n        Y[N + 1] = end\n        Y[1:N + 1, 0] = x1slice\n        Y[1:N + 1, 1] = yslice\n        Y[N + 2:, 0] = x2slice[::-1]\n        Y[N + 2:, 1] = yslice[::-1]\n        polys.append(Y)\n    collection = mcoll.PolyCollection(polys, **kwargs)\n    X1Y = np.array([x1[where], y[where]]).T\n    X2Y = np.array([x2[where], y[where]]).T\n    self.dataLim.update_from_data_xy(X1Y, self.ignore_existing_data_limits, updatex=True, updatey=True)\n    self.ignore_existing_data_limits = False\n    self.dataLim.update_from_data_xy(X2Y, self.ignore_existing_data_limits, updatex=True, updatey=False)\n    self.add_collection(collection, autolim=False)\n    self._request_autoscale_view()\n    return collection",
                            "@_preprocess_data()\n@cbook._delete_parameter('3.1', 'shape')\n@cbook._delete_parameter('3.1', 'imlim')\ndef imshow(self, X, cmap=None, norm=None, aspect=None, interpolation=None, alpha=None, vmin=None, vmax=None, origin=None, extent=None, shape=None, filternorm=True, filterrad=4.0, imlim=None, resample=None, url=None, **kwargs):\n    \"\"\"\n    Display data as an image; i.e. on a 2D regular raster.\n\n    The input may either be actual RGB(A) data, or 2D scalar data, which\n    will be rendered as a pseudocolor image. Note: For actually displaying\n    a grayscale image set up the color mapping using the parameters\n    ``cmap='gray', vmin=0, vmax=255``.\n\n    Parameters\n    ----------\n    X : array-like or PIL image\n        The image data. Supported array shapes are:\n\n        - (M, N): an image with scalar data. The values are mapped to\n          colors using normalization and a colormap. See parameters *norm*,\n          *cmap*, *vmin*, *vmax*.\n        - (M, N, 3): an image with RGB values (0-1 float or 0-255 int).\n        - (M, N, 4): an image with RGBA values (0-1 float or 0-255 int),\n          i.e. including transparency.\n\n        The first two dimensions (M, N) define the rows and columns of\n        the image.\n\n        Out-of-range RGB(A) values are clipped.\n\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        The Colormap instance or registered colormap name used to map\n        scalar data to colors. This parameter is ignored for RGB(A) data.\n        Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The `Normalize` instance used to scale scalar data to the [0, 1]\n        range before mapping to colors using *cmap*. By default, a linear\n        scaling mapping the lowest value to 0 and the highest to 1 is used.\n        This parameter is ignored for RGB(A) data.\n\n    aspect : {'equal', 'auto'} or float, optional\n        The aspect ratio of the axes.  This parameter is particularly\n        relevant for images since it determines whether data pixels are\n        square.\n\n        This parameter is a shortcut for explicitly calling\n        `.Axes.set_aspect`. See there for further details.\n\n        - 'equal': Ensures an aspect ratio of 1. Pixels will be square\n          (unless pixel sizes are explicitly made non-square in data\n          coordinates using *extent*).\n        - 'auto': The axes is kept fixed and the aspect is adjusted so\n          that the data fit in the axes. In general, this will result in\n          non-square pixels.\n\n        If not given, use :rc:`image.aspect`.\n\n    interpolation : str, optional\n        The interpolation method used. If *None*, :rc:`image.interpolation`\n        is used.\n\n        Supported values are 'none', 'antialiased', 'nearest', 'bilinear',\n        'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite',\n        'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell',\n        'sinc', 'lanczos'.\n\n        If *interpolation* is 'none', then no interpolation is performed\n        on the Agg, ps, pdf and svg backends. Other backends will fall back\n        to 'nearest'. Note that most SVG renders perform interpolation at\n        rendering and that the default interpolation method they implement\n        may differ.\n\n        If *interpolation* is the default 'antialiased', then 'nearest'\n        interpolation is used if the image is upsampled by more than a\n        factor of three (i.e. the number of display pixels is at least\n        three times the size of the data array).  If the upsampling rate is\n        smaller than 3, or the image is downsampled, then 'hanning'\n        interpolation is used to act as an anti-aliasing filter, unless the\n        image happens to be upsampled by exactly a factor of two or one.\n\n        See\n        :doc:`/gallery/images_contours_and_fields/interpolation_methods`\n        for an overview of the supported interpolation methods, and\n        :doc:`/gallery/images_contours_and_fields/image_antialiasing` for\n        a discussion of image antialiasing.\n\n        Some interpolation methods require an additional radius parameter,\n        which can be set by *filterrad*. Additionally, the antigrain image\n        resize filter is controlled by the parameter *filternorm*.\n\n    alpha : scalar or array-like, optional\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n        If *alpha* is an array, the alpha blending values are applied pixel\n        by pixel, and *alpha* must have the same shape as *X*.\n\n    vmin, vmax : scalar, optional\n        When using scalar data and no explicit *norm*, *vmin* and *vmax*\n        define the data range that the colormap covers. By default,\n        the colormap covers the complete value range of the supplied\n        data. *vmin*, *vmax* are ignored if the *norm* parameter is used.\n\n    origin : {'upper', 'lower'}, optional\n        Place the [0, 0] index of the array in the upper left or lower left\n        corner of the axes. The convention 'upper' is typically used for\n        matrices and images.\n        If not given, :rc:`image.origin` is used, defaulting to 'upper'.\n\n        Note that the vertical axes points upward for 'lower'\n        but downward for 'upper'.\n\n        See the :doc:`/tutorials/intermediate/imshow_extent` tutorial for\n        examples and a more detailed description.\n\n    extent : scalars (left, right, bottom, top), optional\n        The bounding box in data coordinates that the image will fill.\n        The image is stretched individually along x and y to fill the box.\n\n        The default extent is determined by the following conditions.\n        Pixels have unit size in data coordinates. Their centers are on\n        integer coordinates, and their center coordinates range from 0 to\n        columns-1 horizontally and from 0 to rows-1 vertically.\n\n        Note that the direction of the vertical axis and thus the default\n        values for top and bottom depend on *origin*:\n\n        - For ``origin == 'upper'`` the default is\n          ``(-0.5, numcols-0.5, numrows-0.5, -0.5)``.\n        - For ``origin == 'lower'`` the default is\n          ``(-0.5, numcols-0.5, -0.5, numrows-0.5)``.\n\n        See the :doc:`/tutorials/intermediate/imshow_extent` tutorial for\n        examples and a more detailed description.\n\n    filternorm : bool, default: True\n        A parameter for the antigrain image resize filter (see the\n        antigrain documentation).  If *filternorm* is set, the filter\n        normalizes integer values and corrects the rounding errors. It\n        doesn't do anything with the source floating point values, it\n        corrects only integers according to the rule of 1.0 which means\n        that any sum of pixel weights must be equal to 1.0.  So, the\n        filter function must produce a graph of the proper shape.\n\n    filterrad : float > 0, default: 4.0\n        The filter radius for filters that have a radius parameter, i.e.\n        when interpolation is one of: 'sinc', 'lanczos' or 'blackman'.\n\n    resample : bool, optional\n        When *True*, use a full resampling method.  When *False*, only\n        resample when the output image is larger than the input image.\n\n    url : str, optional\n        Set the url of the created `.AxesImage`. See `.Artist.set_url`.\n\n    Returns\n    -------\n    image : `~matplotlib.image.AxesImage`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.artist.Artist` properties\n        These parameters are passed on to the constructor of the\n        `.AxesImage` artist.\n\n    See also\n    --------\n    matshow : Plot a matrix or an array as an image.\n\n    Notes\n    -----\n    Unless *extent* is used, pixel centers will be located at integer\n    coordinates. In other words: the origin will coincide with the center\n    of pixel (0, 0).\n\n    There are two common representations for RGB images with an alpha\n    channel:\n\n    -   Straight (unassociated) alpha: R, G, and B channels represent the\n        color of the pixel, disregarding its opacity.\n    -   Premultiplied (associated) alpha: R, G, and B channels represent\n        the color of the pixel, adjusted for its opacity by multiplication.\n\n    `~matplotlib.pyplot.imshow` expects RGB images adopting the straight\n    (unassociated) alpha representation.\n    \"\"\"\n    if aspect is None:\n        aspect = rcParams['image.aspect']\n    self.set_aspect(aspect)\n    im = mimage.AxesImage(self, cmap, norm, interpolation, origin, extent, filternorm=filternorm, filterrad=filterrad, resample=resample, **kwargs)\n    im.set_data(X)\n    im.set_alpha(alpha)\n    if im.get_clip_path() is None:\n        im.set_clip_path(self.patch)\n    if vmin is not None or vmax is not None:\n        im.set_clim(vmin, vmax)\n    else:\n        im.autoscale_None()\n    im.set_url(url)\n    im.set_extent(im.get_extent())\n    self.add_image(im)\n    return im",
                            "@staticmethod\ndef _pcolorargs(funcname, *args, allmatch=False):\n    if len(args) == 1:\n        C = np.asanyarray(args[0])\n        (nrows, ncols) = C.shape\n        if allmatch:\n            (X, Y) = np.meshgrid(np.arange(ncols), np.arange(nrows))\n        else:\n            (X, Y) = np.meshgrid(np.arange(ncols + 1), np.arange(nrows + 1))\n        C = cbook.safe_masked_invalid(C)\n        return (X, Y, C)\n    if len(args) == 3:\n        C = np.asanyarray(args[2])\n        (X, Y) = [cbook.safe_masked_invalid(a) for a in args[:2]]\n        if funcname == 'pcolormesh':\n            if np.ma.is_masked(X) or np.ma.is_masked(Y):\n                raise ValueError('x and y arguments to pcolormesh cannot have non-finite values or be of type numpy.ma.core.MaskedArray with masked values')\n            if isinstance(X, np.ma.core.MaskedArray):\n                X = X.data\n            if isinstance(Y, np.ma.core.MaskedArray):\n                Y = Y.data\n        (nrows, ncols) = C.shape\n    else:\n        raise TypeError('Illegal arguments to %s; see help(%s)' % (funcname, funcname))\n    Nx = X.shape[-1]\n    Ny = Y.shape[0]\n    if X.ndim != 2 or X.shape[0] == 1:\n        x = X.reshape(1, Nx)\n        X = x.repeat(Ny, axis=0)\n    if Y.ndim != 2 or Y.shape[1] == 1:\n        y = Y.reshape(Ny, 1)\n        Y = y.repeat(Nx, axis=1)\n    if X.shape != Y.shape:\n        raise TypeError('Incompatible X, Y inputs to %s; see help(%s)' % (funcname, funcname))\n    if allmatch:\n        if (Nx, Ny) != (ncols, nrows):\n            raise TypeError('Dimensions of C %s are incompatible with X (%d) and/or Y (%d); see help(%s)' % (C.shape, Nx, Ny, funcname))\n    else:\n        if not (ncols in (Nx, Nx - 1) and nrows in (Ny, Ny - 1)):\n            raise TypeError('Dimensions of C %s are incompatible with X (%d) and/or Y (%d); see help(%s)' % (C.shape, Nx, Ny, funcname))\n        C = C[:Ny - 1, :Nx - 1]\n    C = cbook.safe_masked_invalid(C)\n    return (X, Y, C)",
                            "@_preprocess_data()\n@docstring.dedent_interpd\ndef pcolor(self, *args, alpha=None, norm=None, cmap=None, vmin=None, vmax=None, **kwargs):\n    \"\"\"\n    Create a pseudocolor plot with a non-regular rectangular grid.\n\n    Call signature::\n\n        pcolor([X, Y,] C, **kwargs)\n\n    *X* and *Y* can be used to specify the corners of the quadrilaterals.\n\n    .. hint::\n\n        ``pcolor()`` can be very slow for large arrays. In most\n        cases you should use the similar but much faster\n        `~.Axes.pcolormesh` instead. See there for a discussion of the\n        differences.\n\n    Parameters\n    ----------\n    C : array-like\n        A scalar 2-D array. The values will be color-mapped.\n\n    X, Y : array-like, optional\n        The coordinates of the quadrilateral corners. The quadrilateral\n        for ``C[i, j]`` has corners at::\n\n            (X[i+1, j], Y[i+1, j])           (X[i+1, j+1], Y[i+1, j+1])\n                                  +---------+\n                                  | C[i, j] |\n                                  +---------+\n                (X[i, j], Y[i, j])           (X[i, j+1], Y[i, j+1])\n\n        Note that the column index corresponds to the\n        x-coordinate, and the row index corresponds to y. For\n        details, see the :ref:`Notes <axes-pcolor-grid-orientation>`\n        section below.\n\n        The dimensions of *X* and *Y* should be one greater than those of\n        *C*. Alternatively, *X*, *Y* and *C* may have equal dimensions, in\n        which case the last row and column of *C* will be ignored.\n\n        If *X* and/or *Y* are 1-D arrays or column vectors they will be\n        expanded as needed into the appropriate 2-D arrays, making a\n        rectangular grid.\n\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        A Colormap instance or registered colormap name. The colormap\n        maps the *C* values to colors. Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The Normalize instance scales the data values to the canonical\n        colormap range [0, 1] for mapping to colors. By default, the data\n        range is mapped to the colorbar range using linear scaling.\n\n    vmin, vmax : scalar, default: None\n        The colorbar range. If *None*, suitable min/max values are\n        automatically chosen by the `~.Normalize` instance (defaults to\n        the respective min/max values of *C* in case of the default linear\n        scaling).\n\n    edgecolors : {'none', None, 'face', color, color sequence}, optional\n        The color of the edges. Defaults to 'none'. Possible values:\n\n        - 'none' or '': No edge.\n        - *None*: :rc:`patch.edgecolor` will be used. Note that currently\n          :rc:`patch.force_edgecolor` has to be True for this to work.\n        - 'face': Use the adjacent face color.\n        - A color or sequence of colors will set the edge color.\n\n        The singular form *edgecolor* works as an alias.\n\n    alpha : scalar, default: None\n        The alpha blending value of the face color, between 0 (transparent)\n        and 1 (opaque). Note: The edgecolor is currently not affected by\n        this.\n\n    snap : bool, default: False\n        Whether to snap the mesh to pixel boundaries.\n\n    Returns\n    -------\n    collection : `matplotlib.collections.Collection`\n\n    Other Parameters\n    ----------------\n    antialiaseds : bool, default: False\n        The default *antialiaseds* is False if the default\n        *edgecolors*\\\\ =\"none\" is used.  This eliminates artificial lines\n        at patch boundaries, and works regardless of the value of alpha.\n        If *edgecolors* is not \"none\", then the default *antialiaseds*\n        is taken from :rc:`patch.antialiased`.\n        Stroking the edges may be preferred if *alpha* is 1, but will\n        cause artifacts otherwise.\n\n    **kwargs\n        Additionally, the following arguments are allowed. They are passed\n        along to the `~matplotlib.collections.PolyCollection` constructor:\n\n    %(PolyCollection)s\n\n    See Also\n    --------\n    pcolormesh : for an explanation of the differences between\n        pcolor and pcolormesh.\n    imshow : If *X* and *Y* are each equidistant, `~.Axes.imshow` can be a\n        faster alternative.\n\n    Notes\n    -----\n    **Masked arrays**\n\n    *X*, *Y* and *C* may be masked arrays. If either ``C[i, j]``, or one\n    of the vertices surrounding ``C[i, j]`` (*X* or *Y* at\n    ``[i, j], [i+1, j], [i, j+1], [i+1, j+1]``) is masked, nothing is\n    plotted.\n\n    .. _axes-pcolor-grid-orientation:\n\n    **Grid orientation**\n\n    The grid orientation follows the standard matrix convention: An array\n    *C* with shape (nrows, ncolumns) is plotted with the column number as\n    *X* and the row number as *Y*.\n\n    **Handling of pcolor() end-cases**\n\n    ``pcolor()`` displays all columns of *C* if *X* and *Y* are not\n    specified, or if *X* and *Y* have one more column than *C*.\n    If *X* and *Y* have the same number of columns as *C* then the last\n    column of *C* is dropped. Similarly for the rows.\n\n    Note: This behavior is different from MATLAB's ``pcolor()``, which\n    always discards the last row and column of *C*.\n    \"\"\"\n    (X, Y, C) = self._pcolorargs('pcolor', *args, allmatch=False)\n    (Ny, Nx) = X.shape\n    self._process_unit_info(xdata=X, ydata=Y, kwargs=kwargs)\n    X = self.convert_xunits(X)\n    Y = self.convert_yunits(Y)\n    C = ma.asarray(C)\n    X = ma.asarray(X)\n    Y = ma.asarray(Y)\n    mask = ma.getmaskarray(X) + ma.getmaskarray(Y)\n    xymask = mask[0:-1, 0:-1] + mask[1:, 1:] + mask[0:-1, 1:] + mask[1:, 0:-1]\n    mask = ma.getmaskarray(C) + xymask\n    unmask = ~mask\n    X1 = ma.filled(X[:-1, :-1])[unmask]\n    Y1 = ma.filled(Y[:-1, :-1])[unmask]\n    X2 = ma.filled(X[1:, :-1])[unmask]\n    Y2 = ma.filled(Y[1:, :-1])[unmask]\n    X3 = ma.filled(X[1:, 1:])[unmask]\n    Y3 = ma.filled(Y[1:, 1:])[unmask]\n    X4 = ma.filled(X[:-1, 1:])[unmask]\n    Y4 = ma.filled(Y[:-1, 1:])[unmask]\n    npoly = len(X1)\n    xy = np.stack([X1, Y1, X2, Y2, X3, Y3, X4, Y4, X1, Y1], axis=-1)\n    verts = xy.reshape((npoly, 5, 2))\n    C = ma.filled(C[:Ny - 1, :Nx - 1])[unmask]\n    linewidths = (0.25,)\n    if 'linewidth' in kwargs:\n        kwargs['linewidths'] = kwargs.pop('linewidth')\n    kwargs.setdefault('linewidths', linewidths)\n    if 'edgecolor' in kwargs:\n        kwargs['edgecolors'] = kwargs.pop('edgecolor')\n    ec = kwargs.setdefault('edgecolors', 'none')\n    if 'antialiased' in kwargs:\n        kwargs['antialiaseds'] = kwargs.pop('antialiased')\n    if 'antialiaseds' not in kwargs and cbook._str_lower_equal(ec, 'none'):\n        kwargs['antialiaseds'] = False\n    kwargs.setdefault('snap', False)\n    collection = mcoll.PolyCollection(verts, **kwargs)\n    collection.set_alpha(alpha)\n    collection.set_array(C)\n    collection.set_cmap(cmap)\n    collection.set_norm(norm)\n    collection.set_clim(vmin, vmax)\n    collection.autoscale_None()\n    self.grid(False)\n    x = X.compressed()\n    y = Y.compressed()\n    t = collection._transform\n    if not isinstance(t, mtransforms.Transform) and hasattr(t, '_as_mpl_transform'):\n        t = t._as_mpl_transform(self.axes)\n    if t and any(t.contains_branch_seperately(self.transData)):\n        trans_to_data = t - self.transData\n        pts = np.vstack([x, y]).T.astype(float)\n        transformed_pts = trans_to_data.transform(pts)\n        x = transformed_pts[..., 0]\n        y = transformed_pts[..., 1]\n    self.add_collection(collection, autolim=False)\n    minx = np.min(x)\n    maxx = np.max(x)\n    miny = np.min(y)\n    maxy = np.max(y)\n    collection.sticky_edges.x[:] = [minx, maxx]\n    collection.sticky_edges.y[:] = [miny, maxy]\n    corners = ((minx, miny), (maxx, maxy))\n    self.update_datalim(corners)\n    self._request_autoscale_view()\n    return collection",
                            "@_preprocess_data()\n@docstring.dedent_interpd\ndef pcolormesh(self, *args, alpha=None, norm=None, cmap=None, vmin=None, vmax=None, shading='flat', antialiased=False, **kwargs):\n    \"\"\"\n    Create a pseudocolor plot with a non-regular rectangular grid.\n\n    Call signature::\n\n        pcolor([X, Y,] C, **kwargs)\n\n    *X* and *Y* can be used to specify the corners of the quadrilaterals.\n\n    .. note::\n\n       `~Axes.pcolormesh` is similar to `~Axes.pcolor`. It's much faster\n       and preferred in most cases. For a detailed discussion on the\n       differences see :ref:`Differences between pcolor() and pcolormesh()\n       <differences-pcolor-pcolormesh>`.\n\n    Parameters\n    ----------\n    C : array-like\n        A scalar 2-D array. The values will be color-mapped.\n\n    X, Y : array-like, optional\n        The coordinates of the quadrilateral corners. The quadrilateral\n        for ``C[i, j]`` has corners at::\n\n            (X[i+1, j], Y[i+1, j])           (X[i+1, j+1], Y[i+1, j+1])\n                                  +---------+\n                                  | C[i, j] |\n                                  +---------+\n                (X[i, j], Y[i, j])           (X[i, j+1], Y[i, j+1])\n\n        Note that the column index corresponds to the\n        x-coordinate, and the row index corresponds to y. For\n        details, see the :ref:`Notes <axes-pcolormesh-grid-orientation>`\n        section below.\n\n        The dimensions of *X* and *Y* should be one greater than those of\n        *C*. Alternatively, *X*, *Y* and *C* may have equal dimensions, in\n        which case the last row and column of *C* will be ignored.\n\n        If *X* and/or *Y* are 1-D arrays or column vectors they will be\n        expanded as needed into the appropriate 2-D arrays, making a\n        rectangular grid.\n\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        A Colormap instance or registered colormap name. The colormap\n        maps the *C* values to colors. Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The Normalize instance scales the data values to the canonical\n        colormap range [0, 1] for mapping to colors. By default, the data\n        range is mapped to the colorbar range using linear scaling.\n\n    vmin, vmax : scalar, default: None\n        The colorbar range. If *None*, suitable min/max values are\n        automatically chosen by the `~.Normalize` instance (defaults to\n        the respective min/max values of *C* in case of the default linear\n        scaling).\n\n    edgecolors : {'none', None, 'face', color, color sequence}, optional\n        The color of the edges. Defaults to 'none'. Possible values:\n\n        - 'none' or '': No edge.\n        - *None*: :rc:`patch.edgecolor` will be used. Note that currently\n          :rc:`patch.force_edgecolor` has to be True for this to work.\n        - 'face': Use the adjacent face color.\n        - A color or sequence of colors will set the edge color.\n\n        The singular form *edgecolor* works as an alias.\n\n    alpha : scalar, default: None\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n    shading : {'flat', 'gouraud'}, optional\n        The fill style, Possible values:\n\n        - 'flat': A solid color is used for each quad. The color of the\n          quad (i, j), (i+1, j), (i, j+1), (i+1, j+1) is given by\n          ``C[i, j]``.\n        - 'gouraud': Each quad will be Gouraud shaded: The color of the\n          corners (i', j') are given by ``C[i',j']``. The color values of\n          the area in between is interpolated from the corner values.\n          When Gouraud shading is used, *edgecolors* is ignored.\n\n    snap : bool, default: False\n        Whether to snap the mesh to pixel boundaries.\n\n    Returns\n    -------\n    mesh : `matplotlib.collections.QuadMesh`\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Additionally, the following arguments are allowed. They are passed\n        along to the `~matplotlib.collections.QuadMesh` constructor:\n\n    %(QuadMesh)s\n\n    See Also\n    --------\n    pcolor : An alternative implementation with slightly different\n        features. For a detailed discussion on the differences see\n        :ref:`Differences between pcolor() and pcolormesh()\n        <differences-pcolor-pcolormesh>`.\n    imshow : If *X* and *Y* are each equidistant, `~.Axes.imshow` can be a\n        faster alternative.\n\n    Notes\n    -----\n    **Masked arrays**\n\n    *C* may be a masked array. If ``C[i, j]`` is masked, the corresponding\n    quadrilateral will be transparent. Masking of *X* and *Y* is not\n    supported. Use `~.Axes.pcolor` if you need this functionality.\n\n    .. _axes-pcolormesh-grid-orientation:\n\n    **Grid orientation**\n\n    The grid orientation follows the standard matrix convention: An array\n    *C* with shape (nrows, ncolumns) is plotted with the column number as\n    *X* and the row number as *Y*.\n\n    .. _differences-pcolor-pcolormesh:\n\n    **Differences between pcolor() and pcolormesh()**\n\n    Both methods are used to create a pseudocolor plot of a 2-D array\n    using quadrilaterals.\n\n    The main difference lies in the created object and internal data\n    handling:\n    While `~.Axes.pcolor` returns a `.PolyCollection`, `~.Axes.pcolormesh`\n    returns a `.QuadMesh`. The latter is more specialized for the given\n    purpose and thus is faster. It should almost always be preferred.\n\n    There is also a slight difference in the handling of masked arrays.\n    Both `~.Axes.pcolor` and `~.Axes.pcolormesh` support masked arrays\n    for *C*. However, only `~.Axes.pcolor` supports masked arrays for *X*\n    and *Y*. The reason lies in the internal handling of the masked values.\n    `~.Axes.pcolor` leaves out the respective polygons from the\n    PolyCollection. `~.Axes.pcolormesh` sets the facecolor of the masked\n    elements to transparent. You can see the difference when using\n    edgecolors. While all edges are drawn irrespective of masking in a\n    QuadMesh, the edge between two adjacent masked quadrilaterals in\n    `~.Axes.pcolor` is not drawn as the corresponding polygons do not\n    exist in the PolyCollection.\n\n    Another difference is the support of Gouraud shading in\n    `~.Axes.pcolormesh`, which is not available with `~.Axes.pcolor`.\n\n    \"\"\"\n    shading = shading.lower()\n    kwargs.setdefault('edgecolors', 'None')\n    allmatch = shading == 'gouraud'\n    (X, Y, C) = self._pcolorargs('pcolormesh', *args, allmatch=allmatch)\n    (Ny, Nx) = X.shape\n    X = X.ravel()\n    Y = Y.ravel()\n    self._process_unit_info(xdata=X, ydata=Y, kwargs=kwargs)\n    X = self.convert_xunits(X)\n    Y = self.convert_yunits(Y)\n    C = C.ravel()\n    coords = np.column_stack((X, Y)).astype(float, copy=False)\n    collection = mcoll.QuadMesh(Nx - 1, Ny - 1, coords, antialiased=antialiased, shading=shading, **kwargs)\n    collection.set_alpha(alpha)\n    collection.set_array(C)\n    collection.set_cmap(cmap)\n    collection.set_norm(norm)\n    collection.set_clim(vmin, vmax)\n    collection.autoscale_None()\n    self.grid(False)\n    t = collection._transform\n    if not isinstance(t, mtransforms.Transform) and hasattr(t, '_as_mpl_transform'):\n        t = t._as_mpl_transform(self.axes)\n    if t and any(t.contains_branch_seperately(self.transData)):\n        trans_to_data = t - self.transData\n        coords = trans_to_data.transform(coords)\n    self.add_collection(collection, autolim=False)\n    (minx, miny) = np.min(coords, axis=0)\n    (maxx, maxy) = np.max(coords, axis=0)\n    collection.sticky_edges.x[:] = [minx, maxx]\n    collection.sticky_edges.y[:] = [miny, maxy]\n    corners = ((minx, miny), (maxx, maxy))\n    self.update_datalim(corners)\n    self._request_autoscale_view()\n    return collection",
                            "@_preprocess_data()\n@docstring.dedent_interpd\ndef pcolorfast(self, *args, alpha=None, norm=None, cmap=None, vmin=None, vmax=None, **kwargs):\n    \"\"\"\n    Create a pseudocolor plot with a non-regular rectangular grid.\n\n    Call signature::\n\n      ax.pcolorfast([X, Y], C, /, **kwargs)\n\n    This method is similar to ~.Axes.pcolor` and `~.Axes.pcolormesh`.\n    It's designed to provide the fastest pcolor-type plotting with the\n    Agg backend. To achieve this, it uses different algorithms internally\n    depending on the complexity of the input grid (regular rectangular,\n    non-regular rectangular or arbitrary quadrilateral).\n\n    .. warning::\n\n       This method is experimental. Compared to `~.Axes.pcolor` or\n       `~.Axes.pcolormesh` it has some limitations:\n\n       - It supports only flat shading (no outlines)\n       - It lacks support for log scaling of the axes.\n       - It does not have a have a pyplot wrapper.\n\n    Parameters\n    ----------\n    C : array-like(M, N)\n        The image data. Supported array shapes are:\n\n        - (M, N): an image with scalar data. The data is visualized\n          using a colormap.\n        - (M, N, 3): an image with RGB values (0-1 float or 0-255 int).\n        - (M, N, 4): an image with RGBA values (0-1 float or 0-255 int),\n          i.e. including transparency.\n\n        The first two dimensions (M, N) define the rows and columns of\n        the image.\n\n        This parameter can only be passed positionally.\n\n    X, Y : tuple or array-like, default: ``(0, N)``, ``(0, M)``\n        *X* and *Y* are used to specify the coordinates of the\n        quadrilaterals. There are different ways to do this:\n\n        - Use tuples ``X=(xmin, xmax)`` and ``Y=(ymin, ymax)`` to define\n          a *uniform rectangular grid*.\n\n          The tuples define the outer edges of the grid. All individual\n          quadrilaterals will be of the same size. This is the fastest\n          version.\n\n        - Use 1D arrays *X*, *Y* to specify a *non-uniform rectangular\n          grid*.\n\n          In this case *X* and *Y* have to be monotonic 1D arrays of length\n          *N+1* and *M+1*, specifying the x and y boundaries of the cells.\n\n          The speed is intermediate. Note: The grid is checked, and if\n          found to be uniform the fast version is used.\n\n        - Use 2D arrays *X*, *Y* if you need an *arbitrary quadrilateral\n          grid* (i.e. if the quadrilaterals are not rectangular).\n\n          In this case *X* and *Y* are 2D arrays with shape (M + 1, N + 1),\n          specifying the x and y coordinates of the corners of the colored\n          quadrilaterals.\n\n          This is the most general, but the slowest to render.  It may\n          produce faster and more compact output using ps, pdf, and\n          svg backends, however.\n\n        These arguments can only be passed positionally.\n\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        A Colormap instance or registered colormap name. The colormap\n        maps the *C* values to colors. Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The Normalize instance scales the data values to the canonical\n        colormap range [0, 1] for mapping to colors. By default, the data\n        range is mapped to the colorbar range using linear scaling.\n\n    vmin, vmax : scalar, default: None\n        The colorbar range. If *None*, suitable min/max values are\n        automatically chosen by the `~.Normalize` instance (defaults to\n        the respective min/max values of *C* in case of the default linear\n        scaling).\n\n    alpha : scalar, default: None\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n    snap : bool, default: False\n        Whether to snap the mesh to pixel boundaries.\n\n    Returns\n    -------\n    image : `.AxesImage` or `.PcolorImage` or `.QuadMesh`\n        The return type depends on the type of grid:\n\n        - `.AxesImage` for a regular rectangular grid.\n        - `.PcolorImage` for a non-regular rectangular grid.\n        - `.QuadMesh` for a non-rectangular grid.\n\n    Notes\n    -----\n    .. [notes section required to get data note injection right]\n    \"\"\"\n    C = args[-1]\n    (nr, nc) = np.shape(C)[:2]\n    if len(args) == 1:\n        style = 'image'\n        x = [0, nc]\n        y = [0, nr]\n    elif len(args) == 3:\n        (x, y) = args[:2]\n        x = np.asarray(x)\n        y = np.asarray(y)\n        if x.ndim == 1 and y.ndim == 1:\n            if x.size == 2 and y.size == 2:\n                style = 'image'\n            else:\n                dx = np.diff(x)\n                dy = np.diff(y)\n                if np.ptp(dx) < 0.01 * np.abs(dx.mean()) and np.ptp(dy) < 0.01 * np.abs(dy.mean()):\n                    style = 'image'\n                else:\n                    style = 'pcolorimage'\n        elif x.ndim == 2 and y.ndim == 2:\n            style = 'quadmesh'\n        else:\n            raise TypeError('arguments do not match valid signatures')\n    else:\n        raise TypeError('need 1 argument or 3 arguments')\n    if style == 'quadmesh':\n        coords = np.stack([x, y], axis=-1)\n        if np.ndim(C) == 2:\n            qm_kwargs = {'array': np.ma.ravel(C)}\n        elif np.ndim(C) == 3:\n            qm_kwargs = {'color': np.ma.reshape(C, (-1, C.shape[-1]))}\n        else:\n            raise ValueError('C must be 2D or 3D')\n        collection = mcoll.QuadMesh(nc, nr, coords, **qm_kwargs, alpha=alpha, cmap=cmap, norm=norm, antialiased=False, edgecolors='none')\n        self.add_collection(collection, autolim=False)\n        (xl, xr, yb, yt) = (x.min(), x.max(), y.min(), y.max())\n        ret = collection\n    else:\n        extent = (xl, xr, yb, yt) = (x[0], x[-1], y[0], y[-1])\n        if style == 'image':\n            im = mimage.AxesImage(self, cmap, norm, data=C, alpha=alpha, extent=extent, interpolation='nearest', origin='lower', **kwargs)\n        elif style == 'pcolorimage':\n            im = mimage.PcolorImage(self, x, y, C, cmap=cmap, norm=norm, alpha=alpha, extent=extent, **kwargs)\n        self.add_image(im)\n        ret = im\n    if vmin is not None or vmax is not None:\n        ret.set_clim(vmin, vmax)\n    elif np.ndim(C) == 2:\n        ret.autoscale_None()\n    if ret.get_clip_path() is None:\n        ret.set_clip_path(self.patch)\n    ret.sticky_edges.x[:] = [xl, xr]\n    ret.sticky_edges.y[:] = [yb, yt]\n    self.update_datalim(np.array([[xl, yb], [xr, yt]]))\n    self._request_autoscale_view(tight=True)\n    return ret",
                            "@_preprocess_data()\ndef contour(self, *args, **kwargs):\n    kwargs['filled'] = False\n    contours = mcontour.QuadContourSet(self, *args, **kwargs)\n    self._request_autoscale_view()\n    return contours",
                            "@_preprocess_data()\ndef contourf(self, *args, **kwargs):\n    kwargs['filled'] = True\n    contours = mcontour.QuadContourSet(self, *args, **kwargs)\n    self._request_autoscale_view()\n    return contours",
                            "def clabel(self, CS, *args, **kwargs):\n    return CS.clabel(*args, **kwargs)",
                            "@_preprocess_data(replace_names=['x', 'weights'], label_namer='x')\ndef hist(self, x, bins=None, range=None, density=False, weights=None, cumulative=False, bottom=None, histtype='bar', align='mid', orientation='vertical', rwidth=None, log=False, color=None, label=None, stacked=False, **kwargs):\n    \"\"\"\n    Plot a histogram.\n\n    Compute and draw the histogram of *x*.  The return value is a tuple\n    (*n*, *bins*, *patches*) or ([*n0*, *n1*, ...], *bins*, [*patches0*,\n    *patches1*,...]) if the input contains multiple data.  See the\n    documentation of the *weights* parameter to draw a histogram of\n    already-binned data.\n\n    Multiple data can be provided via *x* as a list of datasets\n    of potentially different length ([*x0*, *x1*, ...]), or as\n    a 2-D ndarray in which each column is a dataset.  Note that\n    the ndarray form is transposed relative to the list form.\n\n    Masked arrays are not supported.\n\n    The *bins*, *range*, *weights*, and *density* parameters behave as in\n    `numpy.histogram`.\n\n    Parameters\n    ----------\n    x : (n,) array or sequence of (n,) arrays\n        Input values, this takes either a single array or a sequence of\n        arrays which are not required to be of the same length.\n\n    bins : int or sequence or str, optional\n        If *bins* is an integer, it defines the number of equal-width bins\n        in the range.\n\n        If *bins* is a sequence, it defines the bin edges, including the\n        left edge of the first bin and the right edge of the last bin;\n        in this case, bins may be unequally spaced.  All but the last\n        (righthand-most) bin is half-open.  In other words, if *bins* is::\n\n            [1, 2, 3, 4]\n\n        then the first bin is ``[1, 2)`` (including 1, but excluding 2) and\n        the second ``[2, 3)``.  The last bin, however, is ``[3, 4]``, which\n        *includes* 4.\n\n        If *bins* is a string, it is one of the binning strategies\n        supported by `numpy.histogram_bin_edges`: 'auto', 'fd', 'doane',\n        'scott', 'stone', 'rice', 'sturges', or 'sqrt'.\n\n        The default is :rc:`hist.bins`.\n\n    range : tuple or None, optional\n        The lower and upper range of the bins. Lower and upper outliers\n        are ignored. If not provided, *range* is ``(x.min(), x.max())``.\n        Range has no effect if *bins* is a sequence.\n\n        If *bins* is a sequence or *range* is specified, autoscaling\n        is based on the specified bin range instead of the\n        range of x.\n\n        Default is ``None``\n\n    density : bool, optional\n        If ``True``, the first element of the return tuple will\n        be the counts normalized to form a probability density, i.e.,\n        the area (or integral) under the histogram will sum to 1.\n        This is achieved by dividing the count by the number of\n        observations times the bin width and not dividing by the total\n        number of observations. If *stacked* is also ``True``, the sum of\n        the histograms is normalized to 1.\n\n        Default is ``False``.\n\n    weights : (n, ) array-like or None, optional\n        An array of weights, of the same shape as *x*.  Each value in *x*\n        only contributes its associated weight towards the bin count\n        (instead of 1).  If *normed* or *density* is ``True``,\n        the weights are normalized, so that the integral of the density\n        over the range remains 1.\n\n        Default is ``None``.\n\n        This parameter can be used to draw a histogram of data that has\n        already been binned, e.g. using `np.histogram` (by treating each\n        bin as a single point with a weight equal to its count) ::\n\n            counts, bins = np.histogram(data)\n            plt.hist(bins[:-1], bins, weights=counts)\n\n        (or you may alternatively use `~.bar()`).\n\n    cumulative : bool or -1, optional\n        If ``True``, then a histogram is computed where each bin gives the\n        counts in that bin plus all bins for smaller values. The last bin\n        gives the total number of datapoints.\n\n        If *density* is also ``True`` then the histogram is normalized such\n        that the last bin equals 1.\n\n        If *cumulative* is a number less than 0 (e.g., -1), the direction\n        of accumulation is reversed.  In this case, if *density* is also\n        ``True``, then the histogram is normalized such that the first bin\n        equals 1.\n\n        Default is ``False``\n\n    bottom : array-like, scalar, or None\n        Location of the bottom baseline of each bin.  If a scalar,\n        the base line for each bin is shifted by the same amount.\n        If an array, each bin is shifted independently and the length\n        of bottom must match the number of bins.  If None, defaults to 0.\n\n        Default is ``None``\n\n    histtype : {'bar', 'barstacked', 'step',  'stepfilled'}, optional\n        The type of histogram to draw.\n\n        - 'bar' is a traditional bar-type histogram.  If multiple data\n          are given the bars are arranged side by side.\n        - 'barstacked' is a bar-type histogram where multiple\n          data are stacked on top of each other.\n        - 'step' generates a lineplot that is by default unfilled.\n        - 'stepfilled' generates a lineplot that is by default filled.\n\n        Default is 'bar'\n\n    align : {'left', 'mid', 'right'}, optional\n        The horizontal alignment of the histogram bars.\n\n        - 'left': bars are centered on the left bin edges.\n        - 'mid': bars are centered between the bin edges.\n        - 'right': bars are centered on the right bin edges.\n\n        Default is 'mid'\n\n    orientation : {'horizontal', 'vertical'}, optional\n        If 'horizontal', `~matplotlib.pyplot.barh` will be used for\n        bar-type histograms and the *bottom* kwarg will be the left edges.\n\n    rwidth : scalar or None, optional\n        The relative width of the bars as a fraction of the bin width.  If\n        ``None``, automatically compute the width.\n\n        Ignored if *histtype* is 'step' or 'stepfilled'.\n\n        Default is ``None``\n\n    log : bool, optional\n        If ``True``, the histogram axis will be set to a log scale. If\n        *log* is ``True`` and *x* is a 1D array, empty bins will be\n        filtered out and only the non-empty ``(n, bins, patches)``\n        will be returned.\n\n        Default is ``False``\n\n    color : color or array-like of colors or None, optional\n        Color or sequence of colors, one per dataset.  Default (``None``)\n        uses the standard line color sequence.\n\n        Default is ``None``\n\n    label : str or None, optional\n        String, or sequence of strings to match multiple datasets.  Bar\n        charts yield multiple patches per dataset, but only the first gets\n        the label, so that the legend command will work as expected.\n\n        default is ``None``\n\n    stacked : bool, optional\n        If ``True``, multiple data are stacked on top of each other If\n        ``False`` multiple data are arranged side by side if histtype is\n        'bar' or on top of each other if histtype is 'step'\n\n        Default is ``False``\n\n    Returns\n    -------\n    n : array or list of arrays\n        The values of the histogram bins. See *density* and *weights* for a\n        description of the possible semantics.  If input *x* is an array,\n        then this is an array of length *nbins*. If input is a sequence of\n        arrays ``[data1, data2, ...]``, then this is a list of arrays with\n        the values of the histograms for each of the arrays in the same\n        order.  The dtype of the array *n* (or of its element arrays) will\n        always be float even if no weighting or normalization is used.\n\n    bins : array\n        The edges of the bins. Length nbins + 1 (nbins left edges and right\n        edge of last bin).  Always a single array even when multiple data\n        sets are passed in.\n\n    patches : list or list of lists\n        Silent list of individual patches used to create the histogram\n        or list of such list if multiple input datasets.\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.patches.Patch` properties\n\n    See also\n    --------\n    hist2d : 2D histograms\n\n    Notes\n    -----\n    For large numbers of bins (>1000), 'step' and 'stepfilled' can be\n    significantly faster than 'bar' and 'barstacked'.\n\n    \"\"\"\n    bin_range = range\n    from builtins import range\n    if np.isscalar(x):\n        x = [x]\n    if bins is None:\n        bins = rcParams['hist.bins']\n    cbook._check_in_list(['bar', 'barstacked', 'step', 'stepfilled'], histtype=histtype)\n    cbook._check_in_list(['left', 'mid', 'right'], align=align)\n    cbook._check_in_list(['horizontal', 'vertical'], orientation=orientation)\n    if histtype == 'barstacked' and (not stacked):\n        stacked = True\n    input_empty = np.size(x) == 0\n    x = cbook._reshape_2D(x, 'x')\n    nx = len(x)\n    self._process_unit_info(xdata=x[0], kwargs=kwargs)\n    x = [self.convert_xunits(xi) for xi in x]\n    if bin_range is not None:\n        bin_range = self.convert_xunits(bin_range)\n    if not cbook.is_scalar_or_string(bins):\n        bins = self.convert_xunits(bins)\n    if weights is not None:\n        w = cbook._reshape_2D(weights, 'weights')\n    else:\n        w = [None] * nx\n    if len(w) != nx:\n        raise ValueError('weights should have the same shape as x')\n    for (xi, wi) in zip(x, w):\n        if wi is not None and len(wi) != len(xi):\n            raise ValueError('weights should have the same shape as x')\n    if color is None:\n        color = [self._get_lines.get_next_color() for i in range(nx)]\n    else:\n        color = mcolors.to_rgba_array(color)\n        if len(color) != nx:\n            error_message = 'color kwarg must have one color per data set. %d data sets and %d colors were provided' % (nx, len(color))\n            raise ValueError(error_message)\n    hist_kwargs = dict()\n    if bin_range is None:\n        xmin = np.inf\n        xmax = -np.inf\n        for xi in x:\n            if len(xi):\n                xmin = min(xmin, np.nanmin(xi))\n                xmax = max(xmax, np.nanmax(xi))\n        if not np.isnan([xmin, xmax]).any() and (not xmin > xmax):\n            bin_range = (xmin, xmax)\n    if not input_empty and len(x) > 1:\n        if weights is not None:\n            _w = np.concatenate(w)\n        else:\n            _w = None\n        bins = np.histogram_bin_edges(np.concatenate(x), bins, bin_range, _w)\n    else:\n        hist_kwargs['range'] = bin_range\n    density = bool(density)\n    if density and (not stacked):\n        hist_kwargs['density'] = density\n    tops = []\n    for i in range(nx):\n        (m, bins) = np.histogram(x[i], bins, weights=w[i], **hist_kwargs)\n        tops.append(m)\n    tops = np.array(tops, float)\n    if stacked:\n        tops = tops.cumsum(axis=0)\n        if density:\n            tops = tops / np.diff(bins) / tops[-1].sum()\n    if cumulative:\n        slc = slice(None)\n        if isinstance(cumulative, Number) and cumulative < 0:\n            slc = slice(None, None, -1)\n        if density:\n            tops = (tops * np.diff(bins))[:, slc].cumsum(axis=1)[:, slc]\n        else:\n            tops = tops[:, slc].cumsum(axis=1)[:, slc]\n    patches = []\n    _saved_autoscalex = self.get_autoscalex_on()\n    _saved_autoscaley = self.get_autoscaley_on()\n    self.set_autoscalex_on(False)\n    self.set_autoscaley_on(False)\n    if histtype.startswith('bar'):\n        totwidth = np.diff(bins)\n        if rwidth is not None:\n            dr = np.clip(rwidth, 0, 1)\n        elif len(tops) > 1 and (not stacked or rcParams['_internal.classic_mode']):\n            dr = 0.8\n        else:\n            dr = 1.0\n        if histtype == 'bar' and (not stacked):\n            width = dr * totwidth / nx\n            dw = width\n            boffset = -0.5 * dr * totwidth * (1 - 1 / nx)\n        elif histtype == 'barstacked' or stacked:\n            width = dr * totwidth\n            (boffset, dw) = (0.0, 0.0)\n        if align == 'mid':\n            boffset += 0.5 * totwidth\n        elif align == 'right':\n            boffset += totwidth\n        if orientation == 'horizontal':\n            _barfunc = self.barh\n            bottom_kwarg = 'left'\n        else:\n            _barfunc = self.bar\n            bottom_kwarg = 'bottom'\n        for (m, c) in zip(tops, color):\n            if bottom is None:\n                bottom = np.zeros(len(m))\n            if stacked:\n                height = m - bottom\n            else:\n                height = m\n            patch = _barfunc(bins[:-1] + boffset, height, width, align='center', log=log, color=c, **{bottom_kwarg: bottom})\n            patches.append(patch)\n            if stacked:\n                bottom[:] = m\n            boffset += dw\n    elif histtype.startswith('step'):\n        x = np.zeros(4 * len(bins) - 3)\n        y = np.zeros(4 * len(bins) - 3)\n        (x[0:2 * len(bins) - 1:2], x[1:2 * len(bins) - 1:2]) = (bins, bins[:-1])\n        x[2 * len(bins) - 1:] = x[1:2 * len(bins) - 1][::-1]\n        if bottom is None:\n            bottom = np.zeros(len(bins) - 1)\n        (y[1:2 * len(bins) - 1:2], y[2:2 * len(bins):2]) = (bottom, bottom)\n        y[2 * len(bins) - 1:] = y[1:2 * len(bins) - 1][::-1]\n        if log:\n            if orientation == 'horizontal':\n                self.set_xscale('log', nonposx='clip')\n            else:\n                self.set_yscale('log', nonposy='clip')\n        if align == 'left':\n            x -= 0.5 * (bins[1] - bins[0])\n        elif align == 'right':\n            x += 0.5 * (bins[1] - bins[0])\n        fill = histtype == 'stepfilled'\n        (xvals, yvals) = ([], [])\n        for m in tops:\n            if stacked:\n                y[2 * len(bins) - 1:] = y[1:2 * len(bins) - 1][::-1]\n            (y[1:2 * len(bins) - 1:2], y[2:2 * len(bins):2]) = (m + bottom, m + bottom)\n            y[0] = y[-1]\n            if orientation == 'horizontal':\n                xvals.append(y.copy())\n                yvals.append(x.copy())\n            else:\n                xvals.append(x.copy())\n                yvals.append(y.copy())\n        split = -1 if fill else 2 * len(bins)\n        for (x, y, c) in reversed(list(zip(xvals, yvals, color))):\n            patches.append(self.fill(x[:split], y[:split], closed=True if fill else None, facecolor=c, edgecolor=None if fill else c, fill=fill if fill else None))\n        for patch_list in patches:\n            for patch in patch_list:\n                if orientation == 'vertical':\n                    patch.sticky_edges.y.append(0)\n                elif orientation == 'horizontal':\n                    patch.sticky_edges.x.append(0)\n        patches.reverse()\n    self.set_autoscalex_on(_saved_autoscalex)\n    self.set_autoscaley_on(_saved_autoscaley)\n    self._request_autoscale_view()\n    if label is None:\n        labels = [None]\n    elif isinstance(label, str):\n        labels = [label]\n    elif not np.iterable(label):\n        labels = [str(label)]\n    else:\n        labels = [str(lab) for lab in label]\n    for (patch, lbl) in itertools.zip_longest(patches, labels):\n        if patch:\n            p = patch[0]\n            p.update(kwargs)\n            if lbl is not None:\n                p.set_label(lbl)\n            for p in patch[1:]:\n                p.update(kwargs)\n                p.set_label('_nolegend_')\n    if nx == 1:\n        return (tops[0], bins, cbook.silent_list('Patch', patches[0]))\n    else:\n        return (tops, bins, cbook.silent_list('Lists of Patches', patches))",
                            "@_preprocess_data(replace_names=['x', 'y', 'weights'])\n@cbook._rename_parameter('3.1', 'normed', 'density')\ndef hist2d(self, x, y, bins=10, range=None, density=False, weights=None, cmin=None, cmax=None, **kwargs):\n    \"\"\"\n    Make a 2D histogram plot.\n\n    Parameters\n    ----------\n    x, y : array-like, shape (n, )\n        Input values\n\n    bins : None or int or [int, int] or array-like or [array, array]\n\n        The bin specification:\n\n        - If int, the number of bins for the two dimensions\n          (nx=ny=bins).\n        - If ``[int, int]``, the number of bins in each dimension\n          (nx, ny = bins).\n        - If array-like, the bin edges for the two dimensions\n          (x_edges=y_edges=bins).\n        - If ``[array, array]``, the bin edges in each dimension\n          (x_edges, y_edges = bins).\n\n        The default value is 10.\n\n    range : array-like shape(2, 2), optional\n        The leftmost and rightmost edges of the bins along each dimension\n        (if not specified explicitly in the bins parameters): ``[[xmin,\n        xmax], [ymin, ymax]]``. All values outside of this range will be\n        considered outliers and not tallied in the histogram.\n\n    density : bool, default: False\n        Normalize histogram.  *normed* is a deprecated synonym for this\n        parameter.\n\n    weights : array-like, shape (n, ), optional\n        An array of values w_i weighing each sample (x_i, y_i).\n\n    cmin : scalar, optional, default: None\n        All bins that has count less than cmin will not be displayed (set\n        to NaN before passing to imshow) and these count values in the\n        return value count histogram will also be set to nan upon return.\n\n    cmax : scalar, optional, default: None\n        All bins that has count more than cmax will not be displayed (set\n        to NaN before passing to imshow) and these count values in the\n        return value count histogram will also be set to nan upon return.\n\n    Returns\n    -------\n    h : 2D array\n        The bi-dimensional histogram of samples x and y. Values in x are\n        histogrammed along the first dimension and values in y are\n        histogrammed along the second dimension.\n    xedges : 1D array\n        The bin edges along the x axis.\n    yedges : 1D array\n        The bin edges along the y axis.\n    image : `~.matplotlib.collections.QuadMesh`\n\n    Other Parameters\n    ----------------\n    cmap : Colormap or str, optional\n        A `.colors.Colormap` instance.  If not set, use rc settings.\n\n    norm : Normalize, optional\n        A `.colors.Normalize` instance is used to\n        scale luminance data to ``[0, 1]``. If not set, defaults to\n        `.colors.Normalize()`.\n\n    vmin/vmax : None or scalar, optional\n        Arguments passed to the `~.colors.Normalize` instance.\n\n    alpha : ``0 <= scalar <= 1`` or ``None``, optional\n        The alpha blending value.\n\n    See also\n    --------\n    hist : 1D histogram plotting\n\n    Notes\n    -----\n    - Currently ``hist2d`` calculates its own axis limits, and any limits\n      previously set are ignored.\n    - Rendering the histogram with a logarithmic color scale is\n      accomplished by passing a `.colors.LogNorm` instance to the *norm*\n      keyword argument. Likewise, power-law normalization (similar\n      in effect to gamma correction) can be accomplished with\n      `.colors.PowerNorm`.\n    \"\"\"\n    (h, xedges, yedges) = np.histogram2d(x, y, bins=bins, range=range, normed=density, weights=weights)\n    if cmin is not None:\n        h[h < cmin] = None\n    if cmax is not None:\n        h[h > cmax] = None\n    pc = self.pcolormesh(xedges, yedges, h.T, **kwargs)\n    self.set_xlim(xedges[0], xedges[-1])\n    self.set_ylim(yedges[0], yedges[-1])\n    return (h, xedges, yedges, pc)",
                            "@_preprocess_data(replace_names=['x'])\n@docstring.dedent_interpd\ndef psd(self, x, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, pad_to=None, sides=None, scale_by_freq=None, return_line=None, **kwargs):\n    \"\"\"\n    Plot the power spectral density.\n\n    The power spectral density :math:`P_{xx}` by Welch's average\n    periodogram method.  The vector *x* is divided into *NFFT* length\n    segments.  Each segment is detrended by function *detrend* and\n    windowed by function *window*.  *noverlap* gives the length of\n    the overlap between segments.  The :math:`|\\\\mathrm{fft}(i)|^2`\n    of each segment :math:`i` are averaged to compute :math:`P_{xx}`,\n    with a scaling to correct for power loss due to windowing.\n\n    If len(*x*) < *NFFT*, it will be zero padded to *NFFT*.\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data\n\n    %(Spectral)s\n\n    %(PSD)s\n\n    noverlap : int\n        The number of points of overlap between segments.\n        The default value is 0 (no overlap).\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    return_line : bool, default: False\n        Whether to include the line object plotted in the returned values.\n\n    Returns\n    -------\n    Pxx : 1-D array\n        The values for the power spectrum :math:`P_{xx}` before scaling\n        (real valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *Pxx*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n        Only returned if *return_line* is True.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`specgram`\n        :func:`specgram` differs in the default overlap; in not returning\n        the mean of the segment periodograms; in returning the times of the\n        segments; and in plotting a colormap instead of a line.\n\n    :func:`magnitude_spectrum`\n        :func:`magnitude_spectrum` plots the magnitude spectrum.\n\n    :func:`csd`\n        :func:`csd` plots the spectral density between two signals.\n\n    Notes\n    -----\n    For plotting, the power is plotted as\n    :math:`10\\\\log_{10}(P_{xx})` for decibels, though *Pxx* itself\n    is returned.\n\n    References\n    ----------\n    Bendat & Piersol -- Random Data: Analysis and Measurement Procedures,\n    John Wiley & Sons (1986)\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n    (pxx, freqs) = mlab.psd(x=x, NFFT=NFFT, Fs=Fs, detrend=detrend, window=window, noverlap=noverlap, pad_to=pad_to, sides=sides, scale_by_freq=scale_by_freq)\n    freqs += Fc\n    if scale_by_freq in (None, True):\n        psd_units = 'dB/Hz'\n    else:\n        psd_units = 'dB'\n    line = self.plot(freqs, 10 * np.log10(pxx), **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Power Spectral Density (%s)' % psd_units)\n    self.grid(True)\n    (vmin, vmax) = self.viewLim.intervaly\n    intv = vmax - vmin\n    logi = int(np.log10(intv))\n    if logi == 0:\n        logi = 0.1\n    step = 10 * logi\n    ticks = np.arange(math.floor(vmin), math.ceil(vmax) + 1, step)\n    self.set_yticks(ticks)\n    if return_line is None or not return_line:\n        return (pxx, freqs)\n    else:\n        return (pxx, freqs, line)",
                            "@_preprocess_data(replace_names=['x', 'y'], label_namer='y')\n@docstring.dedent_interpd\ndef csd(self, x, y, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, pad_to=None, sides=None, scale_by_freq=None, return_line=None, **kwargs):\n    \"\"\"\n    Plot the cross-spectral density.\n\n    The cross spectral density :math:`P_{xy}` by Welch's average\n    periodogram method.  The vectors *x* and *y* are divided into\n    *NFFT* length segments.  Each segment is detrended by function\n    *detrend* and windowed by function *window*.  *noverlap* gives\n    the length of the overlap between segments.  The product of\n    the direct FFTs of *x* and *y* are averaged over each segment\n    to compute :math:`P_{xy}`, with a scaling to correct for power\n    loss due to windowing.\n\n    If len(*x*) < *NFFT* or len(*y*) < *NFFT*, they will be zero\n    padded to *NFFT*.\n\n    Parameters\n    ----------\n    x, y : 1-D arrays or sequences\n        Arrays or sequences containing the data.\n\n    %(Spectral)s\n\n    %(PSD)s\n\n    noverlap : int\n        The number of points of overlap between segments.\n        The default value is 0 (no overlap).\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    return_line : bool, default: False\n        Whether to include the line object plotted in the returned values.\n\n    Returns\n    -------\n    Pxy : 1-D array\n        The values for the cross spectrum :math:`P_{xy}` before scaling\n        (complex valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *Pxy*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n        Only returned if *return_line* is True.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`psd`\n        :func:`psd` is the equivalent to setting y=x.\n\n    Notes\n    -----\n    For plotting, the power is plotted as\n    :math:`10 \\\\log_{10}(P_{xy})` for decibels, though :math:`P_{xy}` itself\n    is returned.\n\n    References\n    ----------\n    Bendat & Piersol -- Random Data: Analysis and Measurement Procedures,\n    John Wiley & Sons (1986)\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n    (pxy, freqs) = mlab.csd(x=x, y=y, NFFT=NFFT, Fs=Fs, detrend=detrend, window=window, noverlap=noverlap, pad_to=pad_to, sides=sides, scale_by_freq=scale_by_freq)\n    freqs += Fc\n    line = self.plot(freqs, 10 * np.log10(np.abs(pxy)), **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Cross Spectrum Magnitude (dB)')\n    self.grid(True)\n    (vmin, vmax) = self.viewLim.intervaly\n    intv = vmax - vmin\n    step = 10 * int(np.log10(intv))\n    ticks = np.arange(math.floor(vmin), math.ceil(vmax) + 1, step)\n    self.set_yticks(ticks)\n    if return_line is None or not return_line:\n        return (pxy, freqs)\n    else:\n        return (pxy, freqs, line)",
                            "@_preprocess_data(replace_names=['x'])\n@docstring.dedent_interpd\ndef magnitude_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, scale=None, **kwargs):\n    \"\"\"\n    Plot the magnitude spectrum.\n\n    Compute the magnitude spectrum of *x*.  Data is padded to a\n    length of *pad_to* and the windowing function *window* is applied to\n    the signal.\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data.\n\n    %(Spectral)s\n\n    %(Single_Spectrum)s\n\n    scale : {'default', 'linear', 'dB'}\n        The scaling of the values in the *spec*.  'linear' is no scaling.\n        'dB' returns the values in dB scale, i.e., the dB amplitude\n        (20 * log10). 'default' is 'linear'.\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    Returns\n    -------\n    spectrum : 1-D array\n        The values for the magnitude spectrum before scaling (real valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *spectrum*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`psd`\n        :func:`psd` plots the power spectral density.`.\n\n    :func:`angle_spectrum`\n        :func:`angle_spectrum` plots the angles of the corresponding\n        frequencies.\n\n    :func:`phase_spectrum`\n        :func:`phase_spectrum` plots the phase (unwrapped angle) of the\n        corresponding frequencies.\n\n    :func:`specgram`\n        :func:`specgram` can plot the magnitude spectrum of segments within\n        the signal in a colormap.\n\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n    (spec, freqs) = mlab.magnitude_spectrum(x=x, Fs=Fs, window=window, pad_to=pad_to, sides=sides)\n    freqs += Fc\n    yunits = cbook._check_getitem({None: 'energy', 'default': 'energy', 'linear': 'energy', 'dB': 'dB'}, scale=scale)\n    if yunits == 'energy':\n        Z = spec\n    else:\n        Z = 20.0 * np.log10(spec)\n    (line,) = self.plot(freqs, Z, **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Magnitude (%s)' % yunits)\n    return (spec, freqs, line)",
                            "@_preprocess_data(replace_names=['x'])\n@docstring.dedent_interpd\ndef angle_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, **kwargs):\n    \"\"\"\n    Plot the angle spectrum.\n\n    Compute the angle spectrum (wrapped phase spectrum) of *x*.\n    Data is padded to a length of *pad_to* and the windowing function\n    *window* is applied to the signal.\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data.\n\n    %(Spectral)s\n\n    %(Single_Spectrum)s\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    Returns\n    -------\n    spectrum : 1-D array\n        The values for the angle spectrum in radians (real valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *spectrum*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`magnitude_spectrum`\n        :func:`angle_spectrum` plots the magnitudes of the corresponding\n        frequencies.\n\n    :func:`phase_spectrum`\n        :func:`phase_spectrum` plots the unwrapped version of this\n        function.\n\n    :func:`specgram`\n        :func:`specgram` can plot the angle spectrum of segments within the\n        signal in a colormap.\n\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n    (spec, freqs) = mlab.angle_spectrum(x=x, Fs=Fs, window=window, pad_to=pad_to, sides=sides)\n    freqs += Fc\n    lines = self.plot(freqs, spec, **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Angle (radians)')\n    return (spec, freqs, lines[0])",
                            "@_preprocess_data(replace_names=['x'])\n@docstring.dedent_interpd\ndef phase_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, **kwargs):\n    \"\"\"\n    Plot the phase spectrum.\n\n    Compute the phase spectrum (unwrapped angle spectrum) of *x*.\n    Data is padded to a length of *pad_to* and the windowing function\n    *window* is applied to the signal.\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data\n\n    %(Spectral)s\n\n    %(Single_Spectrum)s\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    Returns\n    -------\n    spectrum : 1-D array\n        The values for the phase spectrum in radians (real valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *spectrum*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`magnitude_spectrum`\n        :func:`magnitude_spectrum` plots the magnitudes of the\n        corresponding frequencies.\n\n    :func:`angle_spectrum`\n        :func:`angle_spectrum` plots the wrapped version of this function.\n\n    :func:`specgram`\n        :func:`specgram` can plot the phase spectrum of segments within the\n        signal in a colormap.\n\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n    (spec, freqs) = mlab.phase_spectrum(x=x, Fs=Fs, window=window, pad_to=pad_to, sides=sides)\n    freqs += Fc\n    lines = self.plot(freqs, spec, **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Phase (radians)')\n    return (spec, freqs, lines[0])",
                            "@_preprocess_data(replace_names=['x', 'y'])\n@docstring.dedent_interpd\ndef cohere(self, x, y, NFFT=256, Fs=2, Fc=0, detrend=mlab.detrend_none, window=mlab.window_hanning, noverlap=0, pad_to=None, sides='default', scale_by_freq=None, **kwargs):\n    \"\"\"\n    Plot the coherence between *x* and *y*.\n\n    Plot the coherence between *x* and *y*.  Coherence is the\n    normalized cross spectral density:\n\n    .. math::\n\n      C_{xy} = \\\\frac{|P_{xy}|^2}{P_{xx}P_{yy}}\n\n    Parameters\n    ----------\n    %(Spectral)s\n\n    %(PSD)s\n\n    noverlap : int\n        The number of points of overlap between blocks.  The\n        default value is 0 (no overlap).\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n\n    Returns\n    -------\n    Cxy : 1-D array\n        The coherence vector.\n\n    freqs : 1-D array\n        The frequencies for the elements in *Cxy*.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    References\n    ----------\n    Bendat & Piersol -- Random Data: Analysis and Measurement Procedures,\n    John Wiley & Sons (1986)\n    \"\"\"\n    (cxy, freqs) = mlab.cohere(x=x, y=y, NFFT=NFFT, Fs=Fs, detrend=detrend, window=window, noverlap=noverlap, scale_by_freq=scale_by_freq)\n    freqs += Fc\n    self.plot(freqs, cxy, **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Coherence')\n    self.grid(True)\n    return (cxy, freqs)",
                            "@_preprocess_data(replace_names=['x'])\n@docstring.dedent_interpd\ndef specgram(self, x, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, cmap=None, xextent=None, pad_to=None, sides=None, scale_by_freq=None, mode=None, scale=None, vmin=None, vmax=None, **kwargs):\n    \"\"\"\n    Plot a spectrogram.\n\n    Compute and plot a spectrogram of data in *x*.  Data are split into\n    *NFFT* length segments and the spectrum of each section is\n    computed.  The windowing function *window* is applied to each\n    segment, and the amount of overlap of each segment is\n    specified with *noverlap*. The spectrogram is plotted as a colormap\n    (using imshow).\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data.\n\n    %(Spectral)s\n\n    %(PSD)s\n\n    mode : {'default', 'psd', 'magnitude', 'angle', 'phase'}\n        What sort of spectrum to use.  Default is 'psd', which takes the\n        power spectral density.  'magnitude' returns the magnitude\n        spectrum.  'angle' returns the phase spectrum without unwrapping.\n        'phase' returns the phase spectrum with unwrapping.\n\n    noverlap : int\n        The number of points of overlap between blocks.  The\n        default value is 128.\n\n    scale : {'default', 'linear', 'dB'}\n        The scaling of the values in the *spec*.  'linear' is no scaling.\n        'dB' returns the values in dB scale.  When *mode* is 'psd',\n        this is dB power (10 * log10).  Otherwise this is dB amplitude\n        (20 * log10). 'default' is 'dB' if *mode* is 'psd' or\n        'magnitude' and 'linear' otherwise.  This must be 'linear'\n        if *mode* is 'angle' or 'phase'.\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    cmap\n        A :class:`matplotlib.colors.Colormap` instance; if *None*, use\n        default determined by rc\n\n    xextent : *None* or (xmin, xmax)\n        The image extent along the x-axis. The default sets *xmin* to the\n        left border of the first bin (*spectrum* column) and *xmax* to the\n        right border of the last bin. Note that for *noverlap>0* the width\n        of the bins is smaller than those of the segments.\n\n    **kwargs\n        Additional keyword arguments are passed on to imshow which makes\n        the specgram image.\n\n    Returns\n    -------\n    spectrum : 2-D array\n        Columns are the periodograms of successive segments.\n\n    freqs : 1-D array\n        The frequencies corresponding to the rows in *spectrum*.\n\n    t : 1-D array\n        The times corresponding to midpoints of segments (i.e., the columns\n        in *spectrum*).\n\n    im : instance of class :class:`~matplotlib.image.AxesImage`\n        The image created by imshow containing the spectrogram\n\n    See Also\n    --------\n    :func:`psd`\n        :func:`psd` differs in the default overlap; in returning the mean\n        of the segment periodograms; in not returning times; and in\n        generating a line plot instead of colormap.\n\n    :func:`magnitude_spectrum`\n        A single spectrum, similar to having a single segment when *mode*\n        is 'magnitude'. Plots a line instead of a colormap.\n\n    :func:`angle_spectrum`\n        A single spectrum, similar to having a single segment when *mode*\n        is 'angle'. Plots a line instead of a colormap.\n\n    :func:`phase_spectrum`\n        A single spectrum, similar to having a single segment when *mode*\n        is 'phase'. Plots a line instead of a colormap.\n\n    Notes\n    -----\n    The parameters *detrend* and *scale_by_freq* do only apply when *mode*\n    is set to 'psd'.\n    \"\"\"\n    if NFFT is None:\n        NFFT = 256\n    if Fc is None:\n        Fc = 0\n    if noverlap is None:\n        noverlap = 128\n    if mode == 'complex':\n        raise ValueError('Cannot plot a complex specgram')\n    if scale is None or scale == 'default':\n        if mode in ['angle', 'phase']:\n            scale = 'linear'\n        else:\n            scale = 'dB'\n    elif mode in ['angle', 'phase'] and scale == 'dB':\n        raise ValueError('Cannot use dB scale with angle or phase mode')\n    (spec, freqs, t) = mlab.specgram(x=x, NFFT=NFFT, Fs=Fs, detrend=detrend, window=window, noverlap=noverlap, pad_to=pad_to, sides=sides, scale_by_freq=scale_by_freq, mode=mode)\n    if scale == 'linear':\n        Z = spec\n    elif scale == 'dB':\n        if mode is None or mode == 'default' or mode == 'psd':\n            Z = 10.0 * np.log10(spec)\n        else:\n            Z = 20.0 * np.log10(spec)\n    else:\n        raise ValueError('Unknown scale %s', scale)\n    Z = np.flipud(Z)\n    if xextent is None:\n        pad_xextent = (NFFT - noverlap) / Fs / 2\n        xextent = (np.min(t) - pad_xextent, np.max(t) + pad_xextent)\n    (xmin, xmax) = xextent\n    freqs += Fc\n    extent = (xmin, xmax, freqs[0], freqs[-1])\n    im = self.imshow(Z, cmap, extent=extent, vmin=vmin, vmax=vmax, **kwargs)\n    self.axis('auto')\n    return (spec, freqs, t, im)",
                            "@docstring.dedent_interpd\ndef spy(self, Z, precision=0, marker=None, markersize=None, aspect='equal', origin='upper', **kwargs):\n    \"\"\"\n    Plot the sparsity pattern of a 2D array.\n\n    This visualizes the non-zero values of the array.\n\n    Two plotting styles are available: image and marker. Both\n    are available for full arrays, but only the marker style\n    works for `scipy.sparse.spmatrix` instances.\n\n    **Image style**\n\n    If *marker* and *markersize* are *None*, `~.Axes.imshow` is used. Any\n    extra remaining keyword arguments are passed to this method.\n\n    **Marker style**\n\n    If *Z* is a `scipy.sparse.spmatrix` or *marker* or *markersize* are\n    *None*, a `.Line2D` object will be returned with the value of marker\n    determining the marker type, and any remaining keyword arguments\n    passed to `~.Axes.plot`.\n\n    Parameters\n    ----------\n    Z : array-like (M, N)\n        The array to be plotted.\n\n    precision : float or 'present', default: 0\n        If *precision* is 0, any non-zero value will be plotted. Otherwise,\n        values of :math:`|Z| > precision` will be plotted.\n\n        For :class:`scipy.sparse.spmatrix` instances, you can also\n        pass 'present'. In this case any value present in the array\n        will be plotted, even if it is identically zero.\n\n    origin : {'upper', 'lower'}, default: :rc:`image.origin`\n        Place the [0, 0] index of the array in the upper left or lower left\n        corner of the axes. The convention 'upper' is typically used for\n        matrices and images.\n\n    aspect : {'equal', 'auto', None} or float, default: 'equal'\n        The aspect ratio of the axes.  This parameter is particularly\n        relevant for images since it determines whether data pixels are\n        square.\n\n        This parameter is a shortcut for explicitly calling\n        `.Axes.set_aspect`. See there for further details.\n\n        - 'equal': Ensures an aspect ratio of 1. Pixels will be square.\n        - 'auto': The axes is kept fixed and the aspect is adjusted so\n          that the data fit in the axes. In general, this will result in\n          non-square pixels.\n        - *None*: Use :rc:`image.aspect`.\n\n    Returns\n    -------\n    ret : `~matplotlib.image.AxesImage` or `.Line2D`\n        The return type depends on the plotting style (see above).\n\n    Other Parameters\n    ----------------\n    **kwargs\n        The supported additional parameters depend on the plotting style.\n\n        For the image style, you can pass the following additional\n        parameters of `~.Axes.imshow`:\n\n        - *cmap*\n        - *alpha*\n        - *url*\n        - any `.Artist` properties (passed on to the `.AxesImage`)\n\n        For the marker style, you can pass any `.Line2D` property except\n        for *linestyle*:\n\n        %(_Line2D_docstr)s\n    \"\"\"\n    if marker is None and markersize is None and hasattr(Z, 'tocoo'):\n        marker = 's'\n    if marker is None and markersize is None:\n        Z = np.asarray(Z)\n        mask = np.abs(Z) > precision\n        if 'cmap' not in kwargs:\n            kwargs['cmap'] = mcolors.ListedColormap(['w', 'k'], name='binary')\n        if 'interpolation' in kwargs:\n            raise TypeError(\"spy() got an unexpected keyword argument 'interpolation'\")\n        ret = self.imshow(mask, interpolation='nearest', aspect=aspect, origin=origin, **kwargs)\n    else:\n        if hasattr(Z, 'tocoo'):\n            c = Z.tocoo()\n            if precision == 'present':\n                y = c.row\n                x = c.col\n            else:\n                nonzero = np.abs(c.data) > precision\n                y = c.row[nonzero]\n                x = c.col[nonzero]\n        else:\n            Z = np.asarray(Z)\n            nonzero = np.abs(Z) > precision\n            (y, x) = np.nonzero(nonzero)\n        if marker is None:\n            marker = 's'\n        if markersize is None:\n            markersize = 10\n        if 'linestyle' in kwargs:\n            raise TypeError(\"spy() got an unexpected keyword argument 'linestyle'\")\n        marks = mlines.Line2D(x, y, linestyle='None', marker=marker, markersize=markersize, **kwargs)\n        self.add_line(marks)\n        (nr, nc) = Z.shape\n        self.set_xlim(-0.5, nc - 0.5)\n        self.set_ylim(nr - 0.5, -0.5)\n        self.set_aspect(aspect)\n        ret = marks\n    self.title.set_y(1.05)\n    self.xaxis.tick_top()\n    self.xaxis.set_ticks_position('both')\n    self.xaxis.set_major_locator(mticker.MaxNLocator(nbins=9, steps=[1, 2, 5, 10], integer=True))\n    self.yaxis.set_major_locator(mticker.MaxNLocator(nbins=9, steps=[1, 2, 5, 10], integer=True))\n    return ret",
                            "def matshow(self, Z, **kwargs):\n    \"\"\"\n    Plot the values of a 2D matrix or array as color-coded image.\n\n    The matrix will be shown the way it would be printed, with the first\n    row at the top.  Row and column numbering is zero-based.\n\n    Parameters\n    ----------\n    Z : array-like(M, N)\n        The matrix to be displayed.\n\n    Returns\n    -------\n    image : `~matplotlib.image.AxesImage`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.axes.Axes.imshow` arguments\n\n    See Also\n    --------\n    imshow : More general function to plot data on a 2D regular raster.\n\n    Notes\n    -----\n    This is just a convenience function wrapping `.imshow` to set useful\n    defaults for displaying a matrix. In particular:\n\n    - Set ``origin='upper'``.\n    - Set ``interpolation='nearest'``.\n    - Set ``aspect='equal'``.\n    - Ticks are placed to the left and above.\n    - Ticks are formatted to show integer indices.\n\n    \"\"\"\n    Z = np.asanyarray(Z)\n    kw = {'origin': 'upper', 'interpolation': 'nearest', 'aspect': 'equal', **kwargs}\n    im = self.imshow(Z, **kw)\n    self.title.set_y(1.05)\n    self.xaxis.tick_top()\n    self.xaxis.set_ticks_position('both')\n    self.xaxis.set_major_locator(mticker.MaxNLocator(nbins=9, steps=[1, 2, 5, 10], integer=True))\n    self.yaxis.set_major_locator(mticker.MaxNLocator(nbins=9, steps=[1, 2, 5, 10], integer=True))\n    return im",
                            "@_preprocess_data(replace_names=['dataset'])\ndef violinplot(self, dataset, positions=None, vert=True, widths=0.5, showmeans=False, showextrema=True, showmedians=False, quantiles=None, points=100, bw_method=None):\n    \"\"\"\n    Make a violin plot.\n\n    Make a violin plot for each column of *dataset* or each vector in\n    sequence *dataset*.  Each filled area extends to represent the\n    entire data range, with optional lines at the mean, the median,\n    the minimum, the maximum, and user-specified quantiles.\n\n    Parameters\n    ----------\n    dataset : Array or a sequence of vectors.\n      The input data.\n\n    positions : array-like, default: [1, 2, ..., n]\n      Sets the positions of the violins. The ticks and limits are\n      automatically set to match the positions.\n\n    vert : bool, default: True.\n      If true, creates a vertical violin plot.\n      Otherwise, creates a horizontal violin plot.\n\n    widths : array-like, default: 0.5\n      Either a scalar or a vector that sets the maximal width of\n      each violin. The default is 0.5, which uses about half of the\n      available horizontal space.\n\n    showmeans : bool, default: False\n      If `True`, will toggle rendering of the means.\n\n    showextrema : bool, default: True\n      If `True`, will toggle rendering of the extrema.\n\n    showmedians : bool, default: False\n      If `True`, will toggle rendering of the medians.\n\n    quantiles : array-like, default: None\n      If not None, set a list of floats in interval [0, 1] for each violin,\n      which stands for the quantiles that will be rendered for that\n      violin.\n\n    points : scalar, default: 100\n      Defines the number of points to evaluate each of the\n      gaussian kernel density estimations at.\n\n    bw_method : str, scalar or callable, optional\n      The method used to calculate the estimator bandwidth.  This can be\n      'scott', 'silverman', a scalar constant or a callable.  If a\n      scalar, this will be used directly as `kde.factor`.  If a\n      callable, it should take a `GaussianKDE` instance as its only\n      parameter and return a scalar. If None (default), 'scott' is used.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the violinplot to a\n      list of the corresponding collection instances created. The\n      dictionary has the following keys:\n\n      - ``bodies``: A list of the `~.collections.PolyCollection`\n        instances containing the filled area of each violin.\n\n      - ``cmeans``: A `~.collections.LineCollection` instance that marks\n        the mean values of each of the violin's distribution.\n\n      - ``cmins``: A `~.collections.LineCollection` instance that marks\n        the bottom of each violin's distribution.\n\n      - ``cmaxes``: A `~.collections.LineCollection` instance that marks\n        the top of each violin's distribution.\n\n      - ``cbars``: A `~.collections.LineCollection` instance that marks\n        the centers of each violin's distribution.\n\n      - ``cmedians``: A `~.collections.LineCollection` instance that\n        marks the median values of each of the violin's distribution.\n\n      - ``cquantiles``: A `~.collections.LineCollection` instance created\n        to identify the quantile values of each of the violin's\n        distribution.\n\n    \"\"\"\n\n    def _kde_method(X, coords):\n        if np.all(X[0] == X):\n            return (X[0] == coords).astype(float)\n        kde = mlab.GaussianKDE(X, bw_method)\n        return kde.evaluate(coords)\n    vpstats = cbook.violin_stats(dataset, _kde_method, points=points, quantiles=quantiles)\n    return self.violin(vpstats, positions=positions, vert=vert, widths=widths, showmeans=showmeans, showextrema=showextrema, showmedians=showmedians)",
                            "def violin(self, vpstats, positions=None, vert=True, widths=0.5, showmeans=False, showextrema=True, showmedians=False):\n    \"\"\"Drawing function for violin plots.\n\n    Draw a violin plot for each column of *vpstats*. Each filled area\n    extends to represent the entire data range, with optional lines at the\n    mean, the median, the minimum, the maximum, and the quantiles values.\n\n    Parameters\n    ----------\n    vpstats : list of dicts\n      A list of dictionaries containing stats for each violin plot.\n      Required keys are:\n\n      - ``coords``: A list of scalars containing the coordinates that\n        the violin's kernel density estimate were evaluated at.\n\n      - ``vals``: A list of scalars containing the values of the\n        kernel density estimate at each of the coordinates given\n        in *coords*.\n\n      - ``mean``: The mean value for this violin's dataset.\n\n      - ``median``: The median value for this violin's dataset.\n\n      - ``min``: The minimum value for this violin's dataset.\n\n      - ``max``: The maximum value for this violin's dataset.\n\n      Optional keys are:\n\n      - ``quantiles``: A list of scalars containing the quantile values\n        for this violin's dataset.\n\n    positions : array-like, default: [1, 2, ..., n]\n      Sets the positions of the violins. The ticks and limits are\n      automatically set to match the positions.\n\n    vert : bool, default: True.\n      If true, plots the violins vertically.\n      Otherwise, plots the violins horizontally.\n\n    widths : array-like, default: 0.5\n      Either a scalar or a vector that sets the maximal width of\n      each violin. The default is 0.5, which uses about half of the\n      available horizontal space.\n\n    showmeans : bool, default: False\n      If true, will toggle rendering of the means.\n\n    showextrema : bool, default: True\n      If true, will toggle rendering of the extrema.\n\n    showmedians : bool, default: False\n      If true, will toggle rendering of the medians.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the violinplot to a\n      list of the corresponding collection instances created. The\n      dictionary has the following keys:\n\n      - ``bodies``: A list of the `~.collections.PolyCollection`\n        instances containing the filled area of each violin.\n\n      - ``cmeans``: A `~.collections.LineCollection` instance that marks\n        the mean values of each of the violin's distribution.\n\n      - ``cmins``: A `~.collections.LineCollection` instance that marks\n        the bottom of each violin's distribution.\n\n      - ``cmaxes``: A `~.collections.LineCollection` instance that marks\n        the top of each violin's distribution.\n\n      - ``cbars``: A `~.collections.LineCollection` instance that marks\n        the centers of each violin's distribution.\n\n      - ``cmedians``: A `~.collections.LineCollection` instance that\n        marks the median values of each of the violin's distribution.\n\n      - ``cquantiles``: A `~.collections.LineCollection` instance created\n        to identify the quantiles values of each of the violin's\n        distribution.\n\n    \"\"\"\n    means = []\n    mins = []\n    maxes = []\n    medians = []\n    quantiles = np.asarray([])\n    artists = {}\n    N = len(vpstats)\n    datashape_message = 'List of violinplot statistics and `{0}` values must have the same length'\n    if positions is None:\n        positions = range(1, N + 1)\n    elif len(positions) != N:\n        raise ValueError(datashape_message.format('positions'))\n    if np.isscalar(widths):\n        widths = [widths] * N\n    elif len(widths) != N:\n        raise ValueError(datashape_message.format('widths'))\n    pmins = -0.25 * np.array(widths) + positions\n    pmaxes = 0.25 * np.array(widths) + positions\n    if vert:\n        fill = self.fill_betweenx\n        perp_lines = self.hlines\n        par_lines = self.vlines\n    else:\n        fill = self.fill_between\n        perp_lines = self.vlines\n        par_lines = self.hlines\n    if rcParams['_internal.classic_mode']:\n        fillcolor = 'y'\n        edgecolor = 'r'\n    else:\n        fillcolor = edgecolor = self._get_lines.get_next_color()\n    bodies = []\n    for (stats, pos, width) in zip(vpstats, positions, widths):\n        vals = np.array(stats['vals'])\n        vals = 0.5 * width * vals / vals.max()\n        bodies += [fill(stats['coords'], -vals + pos, vals + pos, facecolor=fillcolor, alpha=0.3)]\n        means.append(stats['mean'])\n        mins.append(stats['min'])\n        maxes.append(stats['max'])\n        medians.append(stats['median'])\n        q = stats.get('quantiles')\n        if q is not None:\n            quantiles = np.concatenate((quantiles, q))\n    artists['bodies'] = bodies\n    if showmeans:\n        artists['cmeans'] = perp_lines(means, pmins, pmaxes, colors=edgecolor)\n    if showextrema:\n        artists['cmaxes'] = perp_lines(maxes, pmins, pmaxes, colors=edgecolor)\n        artists['cmins'] = perp_lines(mins, pmins, pmaxes, colors=edgecolor)\n        artists['cbars'] = par_lines(positions, mins, maxes, colors=edgecolor)\n    if showmedians:\n        artists['cmedians'] = perp_lines(medians, pmins, pmaxes, colors=edgecolor)\n    if quantiles.size > 0:\n        ppmins = np.asarray([])\n        ppmaxs = np.asarray([])\n        for (stats, cmin, cmax) in zip(vpstats, pmins, pmaxes):\n            q = stats.get('quantiles')\n            if q is not None:\n                ppmins = np.concatenate((ppmins, [cmin] * np.size(q)))\n                ppmaxs = np.concatenate((ppmaxs, [cmax] * np.size(q)))\n        artists['cquantiles'] = perp_lines(quantiles, ppmins, ppmaxs, colors=edgecolor)\n    return artists",
                            "def xywhere(xs, ys, mask):\n    \"\"\"\n    return xs[mask], ys[mask] where mask is True but xs and\n    ys are not arrays\n    \"\"\"\n    assert len(xs) == len(ys)\n    assert len(xs) == len(mask)\n    xs = [thisx for (thisx, b) in zip(xs, mask) if b]\n    ys = [thisy for (thisy, b) in zip(ys, mask) if b]\n    return (xs, ys)",
                            "def extract_err(err, data):\n    \"\"\"\n    Private function to parse *err* and subtract/add it to *data*.\n\n    Both *err* and *data* are already iterables at this point.\n    \"\"\"\n    try:\n        (a, b) = err\n        iter(a)\n        iter(b)\n    except (TypeError, ValueError):\n        a = b = err\n    a_sh = np.shape(a)\n    b_sh = np.shape(b)\n    if len(a_sh) > 2 or (len(a_sh) == 2 and a_sh[1] != 1) or len(b_sh) > 2 or (len(b_sh) == 2 and b_sh[1] != 1):\n        raise ValueError('err must be a scalar or a 1D or (2, n) array-like')\n    if len(a_sh) == 2 or len(b_sh) == 2:\n        cbook.warn_deprecated('3.1', message='Support for passing a (n, 1)-shaped error array to errorbar() is deprecated since Matplotlib %(since)s and will be removed %(removal)s; pass a 1D array instead.')\n    for e in [a, b]:\n        if len(data) != len(e):\n            raise ValueError(f'The lengths of the data ({len(data)}) and the error {len(e)} do not match')\n    low = [v - e for (v, e) in zip(data, a)]\n    high = [v + e for (v, e) in zip(data, b)]\n    return (low, high)",
                            "def line_props_with_rcdefaults(subkey, explicit, zdelta=0):\n    d = {k.split('.')[-1]: v for (k, v) in rcParams.items() if k.startswith(f'boxplot.{subkey}')}\n    d['zorder'] = zorder + zdelta\n    if explicit is not None:\n        d.update(cbook.normalize_kwargs(explicit, mlines.Line2D._alias_map))\n    return d",
                            "def to_vc(xs, ys):\n    verts = np.append(np.column_stack([xs, ys]), [(0, 0)], 0)\n    codes = [mpath.Path.MOVETO] + [mpath.Path.LINETO] * (len(verts) - 2) + [mpath.Path.CLOSEPOLY]\n    return (verts, codes)",
                            "def patch_list(xs, ys, **kwargs):\n    (verts, codes) = to_vc(xs, ys)\n    path = mpath.Path(verts, codes)\n    patch = mpatches.PathPatch(path, **kwargs)\n    self.add_artist(patch)\n    return [patch]",
                            "def invalid_shape_exception(csize, xsize):\n    return ValueError(f\"'c' argument has {csize} elements, which is inconsistent with 'x' and 'y' with size {xsize}.\")",
                            "def coarse_bin(x, y, coarse):\n    ind = coarse.searchsorted(x).clip(0, len(coarse) - 1)\n    mus = np.zeros(len(coarse))\n    for i in range(len(coarse)):\n        yi = y[ind == i]\n        if len(yi) > 0:\n            mu = reduce_C_function(yi)\n        else:\n            mu = np.nan\n        mus[i] = mu\n    return mus",
                            "def on_changed(collection):\n    hbar.set_cmap(collection.get_cmap())\n    hbar.set_clim(collection.get_clim())\n    vbar.set_cmap(collection.get_cmap())\n    vbar.set_clim(collection.get_clim())",
                            "def _kde_method(X, coords):\n    if np.all(X[0] == X):\n        return (X[0] == coords).astype(float)\n    kde = mlab.GaussianKDE(X, bw_method)\n    return kde.evaluate(coords)",
                            "def get_next_color():\n    return next(color_cycle)",
                            "def doplot(*args, **kwargs):\n    return self.plot(*args, **kwargs)",
                            "def dopatch(xs, ys, **kwargs):\n    return patch_list(xs, ys, **kwargs)",
                            "def doplot(*args, **kwargs):\n    shuffled = []\n    for i in range(0, len(args), 2):\n        shuffled.extend([args[i + 1], args[i]])\n    return self.plot(*shuffled, **kwargs)",
                            "def dopatch(xs, ys, **kwargs):\n    (xs, ys) = (ys, xs)\n    return patch_list(xs, ys, **kwargs)",
                            "def get_interp_point(ind):\n    im1 = max(ind - 1, 0)\n    x_values = x[im1:ind + 1]\n    diff_values = y1[im1:ind + 1] - y2[im1:ind + 1]\n    y1_values = y1[im1:ind + 1]\n    if len(diff_values) == 2:\n        if np.ma.is_masked(diff_values[1]):\n            return (x[im1], y1[im1])\n        elif np.ma.is_masked(diff_values[0]):\n            return (x[ind], y1[ind])\n    diff_order = diff_values.argsort()\n    diff_root_x = np.interp(0, diff_values[diff_order], x_values[diff_order])\n    x_order = x_values.argsort()\n    diff_root_y = np.interp(diff_root_x, x_values[x_order], y1_values[x_order])\n    return (diff_root_x, diff_root_y)",
                            "def get_interp_point(ind):\n    im1 = max(ind - 1, 0)\n    y_values = y[im1:ind + 1]\n    diff_values = x1[im1:ind + 1] - x2[im1:ind + 1]\n    x1_values = x1[im1:ind + 1]\n    if len(diff_values) == 2:\n        if np.ma.is_masked(diff_values[1]):\n            return (x1[im1], y[im1])\n        elif np.ma.is_masked(diff_values[0]):\n            return (x1[ind], y[ind])\n    diff_order = diff_values.argsort()\n    diff_root_y = np.interp(0, diff_values[diff_order], y_values[diff_order])\n    y_order = y_values.argsort()\n    diff_root_x = np.interp(diff_root_y, y_values[y_order], x1_values[y_order])\n    return (diff_root_x, diff_root_y)"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [
                            "annotate.__doc__ = mtext.Annotation.__init__.__doc__",
                            "quiver.__doc__ = mquiver.Quiver.quiver_doc",
                            "contour.__doc__ = mcontour.QuadContourSet._contour_doc",
                            "contourf.__doc__ = mcontour.QuadContourSet._contour_doc",
                            "clabel.__doc__ = mcontour.ContourSet.clabel.__doc__",
                            "table = mtable.table",
                            "stackplot = _preprocess_data()(mstack.stackplot)",
                            "streamplot = _preprocess_data(replace_names=['x', 'y', 'u', 'v', 'start_points'])(mstream.streamplot)",
                            "tricontour = mtri.tricontour",
                            "tricontourf = mtri.tricontourf",
                            "tripcolor = mtri.tripcolor",
                            "triplot = mtri.triplot"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "aname(self)",
                            "get_title(self, loc='center')",
                            "set_title(self, label, fontdict=None, loc=None, pad=None, **kwargs)",
                            "get_xlabel(self)",
                            "set_xlabel(self, xlabel, fontdict=None, labelpad=None, **kwargs)",
                            "get_ylabel(self)",
                            "set_ylabel(self, ylabel, fontdict=None, labelpad=None, **kwargs)",
                            "get_legend_handles_labels(self, legend_handler_map=None)",
                            "legend(self, *args, **kwargs)",
                            "_remove_legend(self, legend)",
                            "inset_axes(self, bounds, **kwargs)",
                            "indicate_inset(self, bounds, inset_ax=None, **kwargs)",
                            "indicate_inset_zoom(self, inset_ax, **kwargs)",
                            "secondary_xaxis(self, location, **kwargs)",
                            "secondary_yaxis(self, location, **kwargs)",
                            "text(self, x, y, s, fontdict=None, withdash=False, **kwargs)",
                            "annotate(self, s, xy, *args, **kwargs)",
                            "axhline(self, y=0, xmin=0, xmax=1, **kwargs)",
                            "axvline(self, x=0, ymin=0, ymax=1, **kwargs)",
                            "axline(self, xy1, xy2, **kwargs)",
                            "axhspan(self, ymin, ymax, xmin=0, xmax=1, **kwargs)",
                            "axvspan(self, xmin, xmax, ymin=0, ymax=1, **kwargs)",
                            "hlines(self, y, xmin, xmax, colors='k', linestyles='solid', label='', **kwargs)",
                            "vlines(self, x, ymin, ymax, colors='k', linestyles='solid', label='', **kwargs)",
                            "eventplot(self, positions, orientation='horizontal', lineoffsets=1, linelengths=1, linewidths=None, colors=None, linestyles='solid', **kwargs)",
                            "plot(self, *args, **kwargs)",
                            "plot_date(self, x, y, fmt='o', tz=None, xdate=True, ydate=False, **kwargs)",
                            "loglog(self, *args, **kwargs)",
                            "semilogx(self, *args, **kwargs)",
                            "semilogy(self, *args, **kwargs)",
                            "acorr(self, x, **kwargs)",
                            "xcorr(self, x, y, normed=True, detrend=mlab.detrend_none, usevlines=True, maxlags=10, **kwargs)",
                            "step(self, x, y, *args, **kwargs)",
                            "_convert_dx(dx, x0, xconv, convert)",
                            "bar(self, x, height, width=0.8, bottom=None, **kwargs)",
                            "barh(self, y, width, height=0.8, left=None, **kwargs)",
                            "broken_barh(self, xranges, yrange, **kwargs)",
                            "stem(self, *args)",
                            "pie(self, x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=None, radius=None, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False, rotatelabels=False)",
                            "errorbar(self, x, y, yerr=None, xerr=None, fmt='', ecolor=None, elinewidth=None, capsize=None, barsabove=False, lolims=False, uplims=False, xlolims=False, xuplims=False, errorevery=1, capthick=None, **kwargs)",
                            "boxplot(self, x, notch=None, sym=None, vert=None, whis=None, positions=None, widths=None, patch_artist=None, bootstrap=None, usermedians=None, conf_intervals=None, meanline=None, showmeans=None, showcaps=None, showbox=None, showfliers=None, boxprops=None, labels=None, flierprops=None, medianprops=None, meanprops=None, capprops=None, whiskerprops=None, manage_ticks=True, autorange=False, zorder=None)",
                            "bxp(self, bxpstats, positions=None, widths=None, vert=True, patch_artist=False, shownotches=False, showmeans=False, showcaps=True, showbox=True, showfliers=True, boxprops=None, whiskerprops=None, flierprops=None, medianprops=None, capprops=None, meanprops=None, meanline=False, manage_ticks=True, zorder=None)",
                            "_parse_scatter_color_args(c, edgecolors, kwargs, xsize, get_next_color_func)",
                            "scatter(self, x, y, s=None, c=None, marker=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, verts=None, edgecolors=None, **kwargs)",
                            "hexbin(self, x, y, C=None, gridsize=100, bins=None, xscale='linear', yscale='linear', extent=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, edgecolors='face', reduce_C_function=np.mean, mincnt=None, marginals=False, **kwargs)",
                            "arrow(self, x, y, dx, dy, **kwargs)",
                            "quiverkey(self, Q, X, Y, U, label, **kw)",
                            "_quiver_units(self, args, kw)",
                            "quiver(self, *args, **kw)",
                            "barbs(self, *args, **kw)",
                            "fill(self, *args, **kwargs)",
                            "fill_between(self, x, y1, y2=0, where=None, interpolate=False, step=None, **kwargs)",
                            "fill_betweenx(self, y, x1, x2=0, where=None, step=None, interpolate=False, **kwargs)",
                            "imshow(self, X, cmap=None, norm=None, aspect=None, interpolation=None, alpha=None, vmin=None, vmax=None, origin=None, extent=None, shape=None, filternorm=True, filterrad=4.0, imlim=None, resample=None, url=None, **kwargs)",
                            "_pcolorargs(funcname, *args)",
                            "pcolor(self, *args, **kwargs)",
                            "pcolormesh(self, *args, **kwargs)",
                            "pcolorfast(self, *args, **kwargs)",
                            "contour(self, *args, **kwargs)",
                            "contourf(self, *args, **kwargs)",
                            "clabel(self, CS, *args, **kwargs)",
                            "hist(self, x, bins=None, range=None, density=False, weights=None, cumulative=False, bottom=None, histtype='bar', align='mid', orientation='vertical', rwidth=None, log=False, color=None, label=None, stacked=False, **kwargs)",
                            "hist2d(self, x, y, bins=10, range=None, density=False, weights=None, cmin=None, cmax=None, **kwargs)",
                            "psd(self, x, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, pad_to=None, sides=None, scale_by_freq=None, return_line=None, **kwargs)",
                            "csd(self, x, y, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, pad_to=None, sides=None, scale_by_freq=None, return_line=None, **kwargs)",
                            "magnitude_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, scale=None, **kwargs)",
                            "angle_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, **kwargs)",
                            "phase_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, **kwargs)",
                            "cohere(self, x, y, NFFT=256, Fs=2, Fc=0, detrend=mlab.detrend_none, window=mlab.window_hanning, noverlap=0, pad_to=None, sides='default', scale_by_freq=None, **kwargs)",
                            "specgram(self, x, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, cmap=None, xextent=None, pad_to=None, sides=None, scale_by_freq=None, mode=None, scale=None, vmin=None, vmax=None, **kwargs)",
                            "spy(self, Z, precision=0, marker=None, markersize=None, aspect='equal', origin='upper', **kwargs)",
                            "matshow(self, Z, **kwargs)",
                            "violinplot(self, dataset, positions=None, vert=True, widths=0.5, showmeans=False, showextrema=True, showmedians=False, quantiles=None, points=100, bw_method=None)",
                            "violin(self, vpstats, positions=None, vert=True, widths=0.5, showmeans=False, showextrema=True, showmedians=False)",
                            "xywhere(xs, ys, mask)",
                            "extract_err(err, data)",
                            "line_props_with_rcdefaults(subkey, explicit, zdelta=0)",
                            "to_vc(xs, ys)",
                            "patch_list(xs, ys, **kwargs)",
                            "invalid_shape_exception(csize, xsize)",
                            "coarse_bin(x, y, coarse)",
                            "on_changed(collection)",
                            "_kde_method(X, coords)",
                            "get_next_color()",
                            "doplot(*args, **kwargs)",
                            "dopatch(xs, ys, **kwargs)",
                            "doplot(*args, **kwargs)",
                            "dopatch(xs, ys, **kwargs)",
                            "get_interp_point(ind)",
                            "get_interp_point(ind)"
                        ],
                        "class_level_variable_names": [
                            "table",
                            "stackplot",
                            "streamplot",
                            "tricontour",
                            "tricontourf",
                            "tripcolor",
                            "triplot"
                        ],
                        "constructor_variable_names": []
                    },
                    "used_imports": [
                        "from numbers import Number",
                        "import numpy as np",
                        "import matplotlib.cbook as cbook",
                        "import matplotlib.lines as mlines",
                        "import matplotlib.patches as mpatches",
                        "import matplotlib.path as mpath",
                        "import matplotlib.ticker as mticker",
                        "from matplotlib import _preprocess_data, rcParams",
                        "from builtins import range"
                    ],
                    "variable_values": [
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'boxprops'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'whiskerprops'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca59240>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'capprops'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca590c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'flierprops'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca59080>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'medianprops'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca67f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'meanprops'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca59a40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "([0.925, 1.075, 1.075, 0.925, 0.925], [24.75, 24.75, 74.25, 74.25, 24.75])",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([1., 1.]), array([24.75,  0.  ]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 24.75], [1.075, 74.25]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01df0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([1., 1.]), array([74.25, 98.  ]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 74.25]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01df0>, <matplotlib.lines.Line2D object at 0x7fe2fca011f0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([0.9625, 1.0375]), array([0., 0.]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01df0>, <matplotlib.lines.Line2D object at 0x7fe2fca011f0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca61b50>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([0.9625, 1.0375]), array([98., 98.]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01df0>, <matplotlib.lines.Line2D object at 0x7fe2fca011f0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca61b50>, <matplotlib.lines.Line2D object at 0x7fe2fca61520>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "([0.925, 1.075], [49.5, 49.5])",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01df0>, <matplotlib.lines.Line2D object at 0x7fe2fca011f0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca61b50>, <matplotlib.lines.Line2D object at 0x7fe2fca61520>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca366d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "([1], [50.01])",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01df0>, <matplotlib.lines.Line2D object at 0x7fe2fca011f0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca61b50>, <matplotlib.lines.Line2D object at 0x7fe2fca61520>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca366d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "means": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca36df0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([1.]), array([150]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": "array([1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": "array([150])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01df0>, <matplotlib.lines.Line2D object at 0x7fe2fca011f0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca61b50>, <matplotlib.lines.Line2D object at 0x7fe2fca61520>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca01670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca366d0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "means": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fca36df0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "fliers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7fe2fc9c7610>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7fe2fca592c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7fe2fca56670>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7fe2fca565e0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7fe2fca56550>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7fe2fd4f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7fe2fca4cc40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7fe2fcdc9340>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fcdb8e80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7fe2fca56c10>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7fe2fca56ca0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4ca00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50e40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca50300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": "array([1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": "array([150])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7fe2fca4cf00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": "'x'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "interval": {
                                    "variable_value": "array([0.5, 1.5])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.5, 0.0], [1.5, 150.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x7fe2fcdc23a0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": "<bound method Axis.convert_units of <matplotlib.axis.XAxis object at 0x7fe2fcdc23a0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": "<matplotlib.lines.Line2D object at 0x7fe2fca366d0>",
                                    "variable_type": "Line2D",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": "_XYPair(x=[0.5, 1.5], y=[])",
                                    "variable_type": "_XYPair",
                                    "variable_shape": "2"
                                },
                                "locator": {
                                    "variable_value": "<matplotlib.ticker.FixedLocator object at 0x7fe2fca61550>",
                                    "variable_type": "FixedLocator",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": "<bound method Axis.get_major_locator of <matplotlib.axis.XAxis object at 0x7fe2fcdc23a0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": "<bound method Axis.set_major_locator of <matplotlib.axis.XAxis object at 0x7fe2fcdc23a0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "formatter": {
                                    "variable_value": "<matplotlib.ticker.FixedFormatter object at 0x7fe2fcdc2af0>",
                                    "variable_type": "FixedFormatter",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": "<bound method Axis.get_major_formatter of <matplotlib.axis.XAxis object at 0x7fe2fcdc23a0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": "<bound method Axis.set_major_formatter of <matplotlib.axis.XAxis object at 0x7fe2fcdc23a0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7fe2fcdb35e0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'boxprops'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "use_marker": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'whiskerprops'",
                                    "variable_type": "str",
                                    "variable_shape": "12"
                                },
                                "use_marker": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5f40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'capprops'",
                                    "variable_type": "str",
                                    "variable_shape": "8"
                                },
                                "use_marker": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5dc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'flierprops'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "use_marker": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5d80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'medianprops'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "use_marker": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4c97f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": "'meanprops'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "use_marker": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "d.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4ca1880>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "([0.925, 1.075, 1.075, 0.925, 0.925], [24.75, 24.75, 74.25, 74.25, 24.75])",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775b20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([1., 1.]), array([24.75,  0.  ]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 24.75], [1.075, 74.25]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764670>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775b20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([1., 1.]), array([74.25, 98.  ]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 74.25]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764670>, <matplotlib.lines.Line2D object at 0x7ffbce7649a0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775b20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([0.9625, 1.0375]), array([0., 0.]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764670>, <matplotlib.lines.Line2D object at 0x7ffbce7649a0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764f40>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775b20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([0.9625, 1.0375]), array([98., 98.]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764670>, <matplotlib.lines.Line2D object at 0x7ffbce7649a0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764f40>, <matplotlib.lines.Line2D object at 0x7ffbce775a00>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775b20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "([0.925, 1.075], [49.5, 49.5])",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764670>, <matplotlib.lines.Line2D object at 0x7ffbce7649a0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764f40>, <matplotlib.lines.Line2D object at 0x7ffbce775a00>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775b20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775160>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "means": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "([1], [50.01])",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764670>, <matplotlib.lines.Line2D object at 0x7ffbce7649a0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764f40>, <matplotlib.lines.Line2D object at 0x7ffbce775a00>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775b20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775160>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "means": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbd4ca3f40>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "fliers": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "(array([1.]), array([150]))",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": "array([1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": "array([150])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.925, 0.0], [1.075, 98.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "whiskers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "caps": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "means": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zorder": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "positions": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "datashape_message.format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "datalabels.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerhi_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_lo": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cap_hi": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_left": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_right": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "box_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "med_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "fliers.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "interval": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[inf, inf], [-inf, -inf]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "whiskers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764670>, <matplotlib.lines.Line2D object at 0x7ffbce7649a0>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "caps": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce764f40>, <matplotlib.lines.Line2D object at 0x7ffbce775a00>]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "boxes": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775b20>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "medians": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce775160>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "means": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbd4ca3f40>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "fliers": {
                                    "variable_value": "[<matplotlib.lines.Line2D object at 0x7ffbce8232e0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datalabels": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "zorder": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "mlines.Line2D.zorder": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "zdelta": {
                                    "variable_value": "0.1",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "d": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams.items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcParams": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "k.startswith": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subkey": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "use_marker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "explicit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "d.update": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook.normalize_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cbook": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mlines.Line2D._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_artist": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "final_boxprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "boxprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_boxprops.update": {
                                    "variable_value": "<built-in method update of dict object at 0x7ffbd4cb5fc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch._alias_map": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches.PathPatch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpatches": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "line_props_with_rcdefaults": {
                                    "variable_value": "<function Axes.bxp.<locals>.line_props_with_rcdefaults at 0x7ffbd4ca51f0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "final_whiskerprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': '--', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "whiskerprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_capprops": {
                                    "variable_value": "{'color': 'k', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "capprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_flierprops": {
                                    "variable_value": "{'color': 'b', 'linestyle': 'none', 'linewidth': 1.0, 'marker': 'o', 'markeredgecolor': 'k', 'markeredgewidth': 1.0, 'markerfacecolor': 'auto', 'markersize': 6.0, 'zorder': 2}",
                                    "variable_type": "dict",
                                    "variable_shape": "9"
                                },
                                "flierprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_medianprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '-', 'linewidth': 1.0, 'zorder': 2.1, 'marker': ''}",
                                    "variable_type": "dict",
                                    "variable_shape": "5"
                                },
                                "medianprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "final_meanprops": {
                                    "variable_value": "{'color': 'r', 'linestyle': '', 'linewidth': 1.0, 'marker': '^', 'markeredgecolor': 'k', 'markerfacecolor': 'r', 'markersize': 6.0, 'zorder': 2.1}",
                                    "variable_type": "dict",
                                    "variable_shape": "8"
                                },
                                "meanprops": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "removed_prop": {
                                    "variable_value": "'linestyle'",
                                    "variable_type": "str",
                                    "variable_shape": "9"
                                },
                                "meanline": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "verts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.column_stack": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "xs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "codes": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.MOVETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.LINETO": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mpath.Path.CLOSEPOLY": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to_vc": {
                                    "variable_value": "<function Axes.bxp.<locals>.to_vc at 0x7ffbd4ca5310>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_artist": {
                                    "variable_value": "<bound method _AxesBase.add_artist of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>",
                                    "variable_type": "AxesSubplot",
                                    "variable_shape": null
                                },
                                "vert": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.plot": {
                                    "variable_value": "<bound method Axes.plot of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "patch_list": {
                                    "variable_value": "<function Axes.bxp.<locals>.patch_list at 0x7ffbd4ca5280>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "shuffled": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shuffled.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "N": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "bxpstats": {
                                    "variable_value": "[{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "datashape_message": {
                                    "variable_value": "'List of boxplot statistics and `{0}` values must have same the length'",
                                    "variable_type": "str",
                                    "variable_shape": "69"
                                },
                                "positions": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "datashape_message.format": {
                                    "variable_value": "<built-in method format of str object at 0x7ffbd58f48b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Number": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "widths": {
                                    "variable_value": "[0.15]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "np.clip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ptp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.isscalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pos": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "width": {
                                    "variable_value": "0.15",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "stats": {
                                    "variable_value": "{'mean': 50.01, 'iqr': 49.5, 'cilo': 41.7285, 'cihi': 57.2715, 'whishi': 98, 'whislo': 0, 'fliers': array([150]), 'q1': 24.75, 'med': 49.5, 'q3': 74.25}",
                                    "variable_type": "dict",
                                    "variable_shape": "10"
                                },
                                "datalabels.append": {
                                    "variable_value": "<built-in method append of list object at 0x7ffbd4ca8f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "stats.get": {
                                    "variable_value": "<built-in method get of dict object at 0x7ffbd4aeda80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "whisker_x": {
                                    "variable_value": "array([1., 1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "np.ones": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "whiskerlo_y": {
                                    "variable_value": "array([24.75,  0.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "whiskerhi_y": {
                                    "variable_value": "array([74.25, 98.  ])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_left": {
                                    "variable_value": "0.9625",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_right": {
                                    "variable_value": "1.0375",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "cap_x": {
                                    "variable_value": "array([0.9625, 1.0375])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_lo": {
                                    "variable_value": "array([0., 0.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "cap_hi": {
                                    "variable_value": "array([98., 98.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "box_left": {
                                    "variable_value": "0.925",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "box_right": {
                                    "variable_value": "1.075",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "med_y": {
                                    "variable_value": "[49.5, 49.5]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "shownotches": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "box_x": {
                                    "variable_value": "[0.925, 1.075, 1.075, 0.925, 0.925]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "box_y": {
                                    "variable_value": "[24.75, 24.75, 74.25, 74.25, 24.75]",
                                    "variable_type": "list",
                                    "variable_shape": "5"
                                },
                                "med_x": {
                                    "variable_value": "[0.925, 1.075]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "showbox": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "boxes.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4ad6ac0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "dopatch": {
                                    "variable_value": "<function Axes.bxp.<locals>.dopatch at 0x7ffbd4ca59d0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "doplot": {
                                    "variable_value": "<function Axes.bxp.<locals>.doplot at 0x7ffbd4ca53a0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "whiskers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0740>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showcaps": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "caps.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7680>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "medians.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb0b00>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showmeans": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "means.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7f80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "showfliers": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "flier_x": {
                                    "variable_value": "array([1.])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "np.full": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.float64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "flier_y": {
                                    "variable_value": "array([150])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "fliers.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x7ffbd4cb7bc0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "manage_ticks": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "axis_name": {
                                    "variable_value": "'x'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "interval": {
                                    "variable_value": "array([0.5, 1.5])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2,)"
                                },
                                "self.dataLim": {
                                    "variable_value": "Bbox([[0.5, 0.0], [1.5, 150.0]])",
                                    "variable_type": "Bbox",
                                    "variable_shape": null
                                },
                                "axis": {
                                    "variable_value": "<matplotlib.axis.XAxis object at 0x7ffbd4aea0d0>",
                                    "variable_type": "XAxis",
                                    "variable_shape": null
                                },
                                "axis.convert_units": {
                                    "variable_value": "<bound method Axis.convert_units of <matplotlib.axis.XAxis object at 0x7ffbd4aea0d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "median": {
                                    "variable_value": "<matplotlib.lines.Line2D object at 0x7ffbce775160>",
                                    "variable_type": "Line2D",
                                    "variable_shape": null
                                },
                                "position": {
                                    "variable_value": "1",
                                    "variable_type": "int64",
                                    "variable_shape": "()"
                                },
                                "extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "median.sticky_edges": {
                                    "variable_value": "_XYPair(x=[0.5, 1.5], y=[])",
                                    "variable_type": "_XYPair",
                                    "variable_shape": "2"
                                },
                                "locator": {
                                    "variable_value": "<matplotlib.ticker.FixedLocator object at 0x7ffbd4ca3a60>",
                                    "variable_type": "FixedLocator",
                                    "variable_shape": null
                                },
                                "axis.get_major_locator": {
                                    "variable_value": "<bound method Axis.get_major_locator of <matplotlib.axis.XAxis object at 0x7ffbd4aea0d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "mticker.FixedLocator": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mticker": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_locator": {
                                    "variable_value": "<bound method Axis.set_major_locator of <matplotlib.axis.XAxis object at 0x7ffbd4aea0d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "locator.locs": {
                                    "variable_value": "array([1])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(1,)"
                                },
                                "formatter": {
                                    "variable_value": "<matplotlib.ticker.FixedFormatter object at 0x7ffbd4aeaeb0>",
                                    "variable_type": "FixedFormatter",
                                    "variable_shape": null
                                },
                                "axis.get_major_formatter": {
                                    "variable_value": "<bound method Axis.get_major_formatter of <matplotlib.axis.XAxis object at 0x7ffbd4aea0d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "mticker.FixedFormatter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "axis.set_major_formatter": {
                                    "variable_value": "<bound method Axis.set_major_formatter of <matplotlib.axis.XAxis object at 0x7ffbd4aea0d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "formatter.seq": {
                                    "variable_value": "[1]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self._request_autoscale_view": {
                                    "variable_value": "<bound method _AxesBase._request_autoscale_view of <matplotlib.axes._subplots.AxesSubplot object at 0x7ffbd4aeff40>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._autoscaleXon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self._autoscaleYon": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "cbook._rename_parameter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _make_inset_locator(bounds, trans, parent):\n    \"\"\"\n    Helper function to locate inset axes, used in\n    `.Axes.inset_axes`.\n\n    A locator gets used in `Axes.set_aspect` to override the default\n    locations...  It is a function that takes an axes object and\n    a renderer and tells `set_aspect` where it is to be placed.\n\n    Here *rect* is a rectangle [l, b, w, h] that specifies the\n    location for the axes in the transform given by *trans* on the\n    *parent*.\n    \"\"\"\n    _bounds = mtransforms.Bbox.from_bounds(*bounds)\n    _trans = trans\n    _parent = parent\n\n    def inset_locator(ax, renderer):\n        bbox = _bounds\n        bb = mtransforms.TransformedBbox(bbox, _trans)\n        tr = _parent.figure.transFigure.inverted()\n        bb = mtransforms.TransformedBbox(bb, tr)\n        return bb\n\n    return inset_locator",
                "def inset_locator(ax, renderer):\n    bbox = _bounds\n    bb = mtransforms.TransformedBbox(bbox, _trans)\n    tr = _parent.figure.transFigure.inverted()\n    bb = mtransforms.TransformedBbox(bb, tr)\n    return bb",
                "@cbook.deprecated(\"3.1\")\n@property\ndef aname(self):\n    return 'Axes'",
                "def get_title(self, loc=\"center\"):\n    \"\"\"\n    Get an axes title.\n\n    Get one of the three available axes titles. The available titles\n    are positioned above the axes in the center, flush with the left\n    edge, and flush with the right edge.\n\n    Parameters\n    ----------\n    loc : {'center', 'left', 'right'}, str, default: 'center'\n        Which title to return.\n\n    Returns\n    -------\n    title : str\n        The title text string.\n\n    \"\"\"\n    titles = {'left': self._left_title,\n              'center': self.title,\n              'right': self._right_title}\n    title = cbook._check_getitem(titles, loc=loc.lower())\n    return title.get_text()",
                "def set_title(self, label, fontdict=None, loc=None, pad=None,\n                **kwargs):\n    \"\"\"\n    Set a title for the axes.\n\n    Set one of the three available axes titles. The available titles\n    are positioned above the axes in the center, flush with the left\n    edge, and flush with the right edge.\n\n    Parameters\n    ----------\n    label : str\n        Text to use for the title\n\n    fontdict : dict\n        A dictionary controlling the appearance of the title text,\n        the default *fontdict* is::\n\n           {'fontsize': rcParams['axes.titlesize'],\n            'fontweight' : rcParams['axes.titleweight'],\n            'color' : rcParams['axes.titlecolor'],\n            'verticalalignment': 'baseline',\n            'horizontalalignment': loc}\n\n    loc : {'center', 'left', 'right'}, str, optional\n        Which title to set.\n        If *None*, defaults to :rc:`axes.titlelocation`.\n\n    pad : float\n        The offset of the title from the top of the axes, in points.\n        If *None*, defaults to :rc:`axes.titlepad`.\n\n    Returns\n    -------\n    text : :class:`~matplotlib.text.Text`\n        The matplotlib text instance representing the title\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.text.Text` properties\n        Other keyword arguments are text properties, see\n        :class:`~matplotlib.text.Text` for a list of valid text\n        properties.\n    \"\"\"\n    if loc is None:\n        loc = rcParams['axes.titlelocation']\n\n    titles = {'left': self._left_title,\n              'center': self.title,\n              'right': self._right_title}\n    title = cbook._check_getitem(titles, loc=loc.lower())\n    default = {\n        'fontsize': rcParams['axes.titlesize'],\n        'fontweight': rcParams['axes.titleweight'],\n        'verticalalignment': 'baseline',\n        'horizontalalignment': loc.lower()}\n    titlecolor = rcParams['axes.titlecolor']\n    if not cbook._str_lower_equal(titlecolor, 'auto'):\n        default[\"color\"] = titlecolor\n    if pad is None:\n        pad = rcParams['axes.titlepad']\n    self._set_title_offset_trans(float(pad))\n    title.set_text(label)\n    title.update(default)\n    if fontdict is not None:\n        title.update(fontdict)\n    title.update(kwargs)\n    return title",
                "def get_xlabel(self):\n    \"\"\"\n    Get the xlabel text string.\n    \"\"\"\n    label = self.xaxis.get_label()\n    return label.get_text()",
                "def set_xlabel(self, xlabel, fontdict=None, labelpad=None, **kwargs):\n    \"\"\"\n    Set the label for the x-axis.\n\n    Parameters\n    ----------\n    xlabel : str\n        The label text.\n\n    labelpad : float, default: None\n        Spacing in points from the axes bounding box including ticks\n        and tick labels.\n\n    Other Parameters\n    ----------------\n    **kwargs : `.Text` properties\n        `.Text` properties control the appearance of the label.\n\n    See also\n    --------\n    text : for information on how override and the optional args work\n    \"\"\"\n    if labelpad is not None:\n        self.xaxis.labelpad = labelpad\n    return self.xaxis.set_label_text(xlabel, fontdict, **kwargs)",
                "def get_ylabel(self):\n    \"\"\"\n    Get the ylabel text string.\n    \"\"\"\n    label = self.yaxis.get_label()\n    return label.get_text()",
                "def set_ylabel(self, ylabel, fontdict=None, labelpad=None, **kwargs):\n    \"\"\"\n    Set the label for the y-axis.\n\n    Parameters\n    ----------\n    ylabel : str\n        The label text.\n\n    labelpad : float, default: None\n        Spacing in points from the axes bounding box including ticks\n        and tick labels.\n\n    Other Parameters\n    ----------------\n    **kwargs : `.Text` properties\n        `.Text` properties control the appearance of the label.\n\n    See also\n    --------\n    text : for information on how override and the optional args work\n\n    \"\"\"\n    if labelpad is not None:\n        self.yaxis.labelpad = labelpad\n    return self.yaxis.set_label_text(ylabel, fontdict, **kwargs)",
                "def get_legend_handles_labels(self, legend_handler_map=None):\n    \"\"\"\n    Return handles and labels for legend\n\n    ``ax.legend()`` is equivalent to ::\n\n      h, l = ax.get_legend_handles_labels()\n      ax.legend(h, l)\n\n    \"\"\"\n\n    # pass through to legend.\n    handles, labels = mlegend._get_legend_handles_labels([self],\n            legend_handler_map)\n    return handles, labels",
                "@docstring.dedent_interpd\ndef legend(self, *args, **kwargs):\n    \"\"\"\n    Place a legend on the axes.\n\n    Call signatures::\n\n        legend()\n        legend(labels)\n        legend(handles, labels)\n\n    The call signatures correspond to three different ways how to use\n    this method.\n\n    **1. Automatic detection of elements to be shown in the legend**\n\n    The elements to be added to the legend are automatically determined,\n    when you do not pass in any extra arguments.\n\n    In this case, the labels are taken from the artist. You can specify\n    them either at artist creation or by calling the\n    :meth:`~.Artist.set_label` method on the artist::\n\n        line, = ax.plot([1, 2, 3], label='Inline label')\n        ax.legend()\n\n    or::\n\n        line, = ax.plot([1, 2, 3])\n        line.set_label('Label via method')\n        ax.legend()\n\n    Specific lines can be excluded from the automatic legend element\n    selection by defining a label starting with an underscore.\n    This is default for all artists, so calling `Axes.legend` without\n    any arguments and without setting the labels manually will result in\n    no legend being drawn.\n\n\n    **2. Labeling existing plot elements**\n\n    To make a legend for lines which already exist on the axes\n    (via plot for instance), simply call this function with an iterable\n    of strings, one for each legend item. For example::\n\n        ax.plot([1, 2, 3])\n        ax.legend(['A simple line'])\n\n    Note: This way of using is discouraged, because the relation between\n    plot elements and labels is only implicit by their order and can\n    easily be mixed up.\n\n\n    **3. Explicitly defining the elements in the legend**\n\n    For full control of which artists have a legend entry, it is possible\n    to pass an iterable of legend artists followed by an iterable of\n    legend labels respectively::\n\n        legend((line1, line2, line3), ('label1', 'label2', 'label3'))\n\n    Parameters\n    ----------\n    handles : sequence of `.Artist`, optional\n        A list of Artists (lines, patches) to be added to the legend.\n        Use this together with *labels*, if you need full control on what\n        is shown in the legend and the automatic mechanism described above\n        is not sufficient.\n\n        The length of handles and labels should be the same in this\n        case. If they are not, they are truncated to the smaller length.\n\n    labels : list of str, optional\n        A list of labels to show next to the artists.\n        Use this together with *handles*, if you need full control on what\n        is shown in the legend and the automatic mechanism described above\n        is not sufficient.\n\n    Other Parameters\n    ----------------\n    %(_legend_kw_doc)s\n\n    Returns\n    -------\n    legend : `~matplotlib.legend.Legend`\n\n    Notes\n    -----\n    Not all kinds of artist are supported by the legend command. See\n    :doc:`/tutorials/intermediate/legend_guide` for details.\n\n    Examples\n    --------\n    .. plot:: gallery/text_labels_and_annotations/legend.py\n    \"\"\"\n    handles, labels, extra_args, kwargs = mlegend._parse_legend_args(\n            [self],\n            *args,\n            **kwargs)\n    if len(extra_args):\n        raise TypeError('legend only accepts two non-keyword arguments')\n    self.legend_ = mlegend.Legend(self, handles, labels, **kwargs)\n    self.legend_._remove_method = self._remove_legend\n    return self.legend_",
                "def _remove_legend(self, legend):\n    self.legend_ = None",
                "def inset_axes(self, bounds, *, transform=None, zorder=5, **kwargs):\n    \"\"\"\n    Add a child inset axes to this existing axes.\n\n    Warnings\n    --------\n    This method is experimental as of 3.0, and the API may change.\n\n    Parameters\n    ----------\n    bounds : [x0, y0, width, height]\n        Lower-left corner of inset axes, and its width and height.\n\n    transform : `.Transform`\n        Defaults to `ax.transAxes`, i.e. the units of *rect* are in\n        axes-relative coordinates.\n\n    zorder : number\n        Defaults to 5 (same as `.Axes.legend`).  Adjust higher or lower\n        to change whether it is above or below data plotted on the\n        parent axes.\n\n    **kwargs\n        Other keyword arguments are passed on to the `.Axes` child axes.\n\n    Returns\n    -------\n    ax\n        The created `~.axes.Axes` instance.\n\n    Examples\n    --------\n    This example makes two inset axes, the first is in axes-relative\n    coordinates, and the second in data-coordinates::\n\n        fig, ax = plt.subplots()\n        ax.plot(range(10))\n        axin1 = ax.inset_axes([0.8, 0.1, 0.15, 0.15])\n        axin2 = ax.inset_axes(\n                [5, 7, 2.3, 2.3], transform=ax.transData)\n\n    \"\"\"\n    if transform is None:\n        transform = self.transAxes\n    label = kwargs.pop('label', 'inset_axes')\n\n    # This puts the rectangle into figure-relative coordinates.\n    inset_locator = _make_inset_locator(bounds, transform, self)\n    bb = inset_locator(None, None)\n\n    inset_ax = Axes(self.figure, bb.bounds, zorder=zorder,\n            label=label, **kwargs)\n\n    # this locator lets the axes move if in data coordinates.\n    # it gets called in `ax.apply_aspect() (of all places)\n    inset_ax.set_axes_locator(inset_locator)\n\n    self.add_child_axes(inset_ax)\n\n    return inset_ax",
                "def indicate_inset(self, bounds, inset_ax=None, *, transform=None,\n        facecolor='none', edgecolor='0.5', alpha=0.5,\n        zorder=4.99, **kwargs):\n    \"\"\"\n    Add an inset indicator to the axes.  This is a rectangle on the plot\n    at the position indicated by *bounds* that optionally has lines that\n    connect the rectangle to an inset axes (`.Axes.inset_axes`).\n\n    Warnings\n    --------\n    This method is experimental as of 3.0, and the API may change.\n\n\n    Parameters\n    ----------\n    bounds : [x0, y0, width, height]\n        Lower-left corner of rectangle to be marked, and its width\n        and height.\n\n    inset_ax : `.Axes`\n        An optional inset axes to draw connecting lines to.  Two lines are\n        drawn connecting the indicator box to the inset axes on corners\n        chosen so as to not overlap with the indicator box.\n\n    transform : `.Transform`\n        Transform for the rectangle co-ordinates. Defaults to\n        `ax.transAxes`, i.e. the units of *rect* are in axes-relative\n        coordinates.\n\n    facecolor : color, default: 'none'\n        Facecolor of the rectangle.\n\n    edgecolor : color, default: '0.5'\n        Color of the rectangle and color of the connecting lines.\n\n    alpha : float\n        Transparency of the rectangle and connector lines.  Default is 0.5.\n\n    zorder : float\n        Drawing order of the rectangle and connector lines. Default is 4.99\n        (just below the default level of inset axes).\n\n    **kwargs\n        Other keyword arguments are passed on to the rectangle patch.\n\n    Returns\n    -------\n    rectangle_patch : `.patches.Rectangle`\n         The indicator frame.\n\n    connector_lines : 4-tuple of `.patches.ConnectionPatch`\n        The four connector lines connecting to (lower_left, upper_left,\n        lower_right upper_right) corners of *inset_ax*. Two lines are\n        set with visibility to *False*,  but the user can set the\n        visibility to True if the automatic choice is not deemed correct.\n\n    \"\"\"\n    # to make the axes connectors work, we need to apply the aspect to\n    # the parent axes.\n    self.apply_aspect()\n\n    if transform is None:\n        transform = self.transData\n    label = kwargs.pop('label', 'indicate_inset')\n\n    x, y, width, height = bounds\n    rectangle_patch = mpatches.Rectangle(\n        (x, y), width, height,\n        facecolor=facecolor, edgecolor=edgecolor, alpha=alpha,\n        zorder=zorder,  label=label, transform=transform, **kwargs)\n    self.add_patch(rectangle_patch)\n\n    connects = []\n\n    if inset_ax is not None:\n        # connect the inset_axes to the rectangle\n        for xy_inset_ax in [(0, 0), (0, 1), (1, 0), (1, 1)]:\n            # inset_ax positions are in axes coordinates\n            # The 0, 1 values define the four edges if the inset_ax\n            # lower_left, upper_left, lower_right upper_right.\n            ex, ey = xy_inset_ax\n            if self.xaxis.get_inverted():\n                ex = 1 - ex\n            if self.yaxis.get_inverted():\n                ey = 1 - ey\n            xy_data = x + ex * width, y + ey * height\n            p = mpatches.ConnectionPatch(\n                xyA=xy_inset_ax, coordsA=inset_ax.transAxes,\n                xyB=xy_data, coordsB=self.transData,\n                arrowstyle=\"-\", zorder=zorder,\n                edgecolor=edgecolor, alpha=alpha)\n            connects.append(p)\n            self.add_patch(p)\n\n        # decide which two of the lines to keep visible....\n        pos = inset_ax.get_position()\n        bboxins = pos.transformed(self.figure.transFigure)\n        rectbbox = mtransforms.Bbox.from_bounds(\n            *bounds\n        ).transformed(transform)\n        x0 = rectbbox.x0 < bboxins.x0\n        x1 = rectbbox.x1 < bboxins.x1\n        y0 = rectbbox.y0 < bboxins.y0\n        y1 = rectbbox.y1 < bboxins.y1\n        connects[0].set_visible(x0 ^ y0)\n        connects[1].set_visible(x0 == y1)\n        connects[2].set_visible(x1 == y0)\n        connects[3].set_visible(x1 ^ y1)\n\n    return rectangle_patch, tuple(connects) if connects else None",
                "def indicate_inset_zoom(self, inset_ax, **kwargs):\n    \"\"\"\n    Add an inset indicator rectangle to the axes based on the axis\n    limits for an *inset_ax* and draw connectors between *inset_ax*\n    and the rectangle.\n\n    Warnings\n    --------\n    This method is experimental as of 3.0, and the API may change.\n\n    Parameters\n    ----------\n    inset_ax : `.Axes`\n        Inset axes to draw connecting lines to.  Two lines are\n        drawn connecting the indicator box to the inset axes on corners\n        chosen so as to not overlap with the indicator box.\n\n    **kwargs\n        Other keyword arguments are passed on to `.Axes.indicate_inset`\n\n    Returns\n    -------\n    rectangle_patch : `.Patches.Rectangle`\n         Rectangle artist.\n\n    connector_lines : 4-tuple of `.Patches.ConnectionPatch`\n        Each of four connector lines coming from the rectangle drawn on\n        this axis, in the order lower left, upper left, lower right,\n        upper right.\n        Two are set with visibility to *False*,  but the user can\n        set the visibility to *True* if the automatic choice is not deemed\n        correct.\n    \"\"\"\n\n    xlim = inset_ax.get_xlim()\n    ylim = inset_ax.get_ylim()\n    rect = (xlim[0], ylim[0], xlim[1] - xlim[0], ylim[1] - ylim[0])\n    return self.indicate_inset(rect, inset_ax, **kwargs)",
                "@docstring.dedent_interpd\ndef secondary_xaxis(self, location, *, functions=None, **kwargs):\n    \"\"\"\n    Add a second x-axis to this axes.\n\n    For example if we want to have a second scale for the data plotted on\n    the xaxis.\n\n    %(_secax_docstring)s\n\n    Examples\n    --------\n    The main axis shows frequency, and the secondary axis shows period.\n\n    .. plot::\n\n        fig, ax = plt.subplots()\n        ax.loglog(range(1, 360, 5), range(1, 360, 5))\n        ax.set_xlabel('frequency [Hz]')\n\n        def invert(x):\n            return 1 / x\n\n        secax = ax.secondary_xaxis('top', functions=(invert, invert))\n        secax.set_xlabel('Period [s]')\n        plt.show()\n    \"\"\"\n    if (location in ['top', 'bottom'] or isinstance(location, Number)):\n        secondary_ax = SecondaryAxis(self, 'x', location, functions,\n                                     **kwargs)\n        self.add_child_axes(secondary_ax)\n        return secondary_ax\n    else:\n        raise ValueError('secondary_xaxis location must be either '\n                         'a float or \"top\"/\"bottom\"')",
                "def secondary_yaxis(self, location, *, functions=None, **kwargs):\n    \"\"\"\n    Add a second y-axis to this axes.\n\n    For example if we want to have a second scale for the data plotted on\n    the yaxis.\n\n    %(_secax_docstring)s\n\n    Examples\n    --------\n    Add a secondary axes that converts from radians to degrees\n\n    .. plot::\n\n        fig, ax = plt.subplots()\n        ax.plot(range(1, 360, 5), range(1, 360, 5))\n        ax.set_ylabel('degrees')\n        secax = ax.secondary_yaxis('right', functions=(np.deg2rad,\n                                                       np.rad2deg))\n        secax.set_ylabel('radians')\n    \"\"\"\n    if location in ['left', 'right'] or isinstance(location, Number):\n        secondary_ax = SecondaryAxis(self, 'y', location,\n                                     functions, **kwargs)\n        self.add_child_axes(secondary_ax)\n        return secondary_ax\n    else:\n        raise ValueError('secondary_yaxis location must be either '\n                         'a float or \"left\"/\"right\"')",
                "@cbook._delete_parameter(\"3.1\", \"withdash\")\ndef text(self, x, y, s, fontdict=None, withdash=False, **kwargs):\n    \"\"\"\n    Add text to the axes.\n\n    Add the text *s* to the axes at location *x*, *y* in data coordinates.\n\n    Parameters\n    ----------\n    x, y : scalars\n        The position to place the text. By default, this is in data\n        coordinates. The coordinate system can be changed using the\n        *transform* parameter.\n\n    s : str\n        The text.\n\n    fontdict : dict, default: None\n        A dictionary to override the default text properties. If fontdict\n        is None, the defaults are determined by your rc parameters.\n\n    withdash : bool, default: False\n        Creates a `~matplotlib.text.TextWithDash` instance instead of a\n        `~matplotlib.text.Text` instance.\n\n    Returns\n    -------\n    text : `.Text`\n        The created `.Text` instance.\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.text.Text` properties.\n        Other miscellaneous text parameters.\n\n    Examples\n    --------\n    Individual keyword arguments can be used to override any given\n    parameter::\n\n        >>> text(x, y, s, fontsize=12)\n\n    The default transform specifies that text is in data coords,\n    alternatively, you can specify text in axis coords ((0, 0) is\n    lower-left and (1, 1) is upper-right).  The example below places\n    text in the center of the axes::\n\n        >>> text(0.5, 0.5, 'matplotlib', horizontalalignment='center',\n        ...      verticalalignment='center', transform=ax.transAxes)\n\n    You can put a rectangular box around the text instance (e.g., to\n    set a background color) by using the keyword *bbox*.  *bbox* is\n    a dictionary of `~matplotlib.patches.Rectangle`\n    properties.  For example::\n\n        >>> text(x, y, s, bbox=dict(facecolor='red', alpha=0.5))\n    \"\"\"\n    if fontdict is None:\n        fontdict = {}\n\n    effective_kwargs = {\n        'verticalalignment': 'baseline',\n        'horizontalalignment': 'left',\n        'transform': self.transData,\n        'clip_on': False,\n        **fontdict,\n        **kwargs,\n    }\n\n    # At some point if we feel confident that TextWithDash\n    # is robust as a drop-in replacement for Text and that\n    # the performance impact of the heavier-weight class\n    # isn't too significant, it may make sense to eliminate\n    # the withdash kwarg and simply delegate whether there's\n    # a dash to TextWithDash and dashlength.\n\n    if (withdash\n            and withdash is not cbook.deprecation._deprecated_parameter):\n        t = mtext.TextWithDash(x, y, text=s)\n    else:\n        t = mtext.Text(x, y, text=s)\n    t.update(effective_kwargs)\n\n    t.set_clip_path(self.patch)\n    self._add_text(t)\n    return t",
                "@docstring.dedent_interpd\ndef annotate(self, s, xy, *args, **kwargs):\n    a = mtext.Annotation(s, xy, *args, **kwargs)\n    a.set_transform(mtransforms.IdentityTransform())\n    if 'clip_on' in kwargs:\n        a.set_clip_path(self.patch)\n    self._add_text(a)\n    return a",
                "@docstring.dedent_interpd\ndef axhline(self, y=0, xmin=0, xmax=1, **kwargs):\n    \"\"\"\n    Add a horizontal line across the axis.\n\n    Parameters\n    ----------\n    y : float, default: 0\n        y position in data coordinates of the horizontal line.\n\n    xmin : float, default: 0\n        Should be between 0 and 1, 0 being the far left of the plot, 1 the\n        far right of the plot.\n\n    xmax : float, default: 1\n        Should be between 0 and 1, 0 being the far left of the plot, 1 the\n        far right of the plot.\n\n    Returns\n    -------\n    line : `~matplotlib.lines.Line2D`\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Valid keyword arguments are `.Line2D` properties, with the\n        exception of 'transform':\n\n        %(_Line2D_docstr)s\n\n    See also\n    --------\n    hlines : Add horizontal lines in data coordinates.\n    axhspan : Add a horizontal span (rectangle) across the axis.\n    axline : Add a line with an arbitrary slope.\n\n    Examples\n    --------\n    * draw a thick red hline at 'y' = 0 that spans the xrange::\n\n        >>> axhline(linewidth=4, color='r')\n\n    * draw a default hline at 'y' = 1 that spans the xrange::\n\n        >>> axhline(y=1)\n\n    * draw a default hline at 'y' = .5 that spans the middle half of\n      the xrange::\n\n        >>> axhline(y=.5, xmin=0.25, xmax=0.75)\n    \"\"\"\n    if \"transform\" in kwargs:\n        raise ValueError(\n            \"'transform' is not allowed as a kwarg;\"\n            + \"axhline generates its own transform.\")\n    ymin, ymax = self.get_ybound()\n\n    # We need to strip away the units for comparison with\n    # non-unitized bounds\n    self._process_unit_info(ydata=y, kwargs=kwargs)\n    yy = self.convert_yunits(y)\n    scaley = (yy < ymin) or (yy > ymax)\n\n    trans = self.get_yaxis_transform(which='grid')\n    l = mlines.Line2D([xmin, xmax], [y, y], transform=trans, **kwargs)\n    self.add_line(l)\n    self._request_autoscale_view(scalex=False, scaley=scaley)\n    return l",
                "@docstring.dedent_interpd\ndef axvline(self, x=0, ymin=0, ymax=1, **kwargs):\n    \"\"\"\n    Add a vertical line across the axes.\n\n    Parameters\n    ----------\n    x : float, default: 0\n        x position in data coordinates of the vertical line.\n\n    ymin : float, default: 0\n        Should be between 0 and 1, 0 being the bottom of the plot, 1 the\n        top of the plot.\n\n    ymax : float, default: 1\n        Should be between 0 and 1, 0 being the bottom of the plot, 1 the\n        top of the plot.\n\n    Returns\n    -------\n    line : `~matplotlib.lines.Line2D`\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Valid keyword arguments are `.Line2D` properties, with the\n        exception of 'transform':\n\n        %(_Line2D_docstr)s\n\n    Examples\n    --------\n    * draw a thick red vline at *x* = 0 that spans the yrange::\n\n        >>> axvline(linewidth=4, color='r')\n\n    * draw a default vline at *x* = 1 that spans the yrange::\n\n        >>> axvline(x=1)\n\n    * draw a default vline at *x* = .5 that spans the middle half of\n      the yrange::\n\n        >>> axvline(x=.5, ymin=0.25, ymax=0.75)\n\n    See also\n    --------\n    vlines : Add vertical lines in data coordinates.\n    axvspan : Add a vertical span (rectangle) across the axis.\n    axline : Add a line with an abritrary slope.\n    \"\"\"\n\n    if \"transform\" in kwargs:\n        raise ValueError(\n            \"'transform' is not allowed as a kwarg;\"\n            + \"axvline generates its own transform.\")\n    xmin, xmax = self.get_xbound()\n\n    # We need to strip away the units for comparison with\n    # non-unitized bounds\n    self._process_unit_info(xdata=x, kwargs=kwargs)\n    xx = self.convert_xunits(x)\n    scalex = (xx < xmin) or (xx > xmax)\n\n    trans = self.get_xaxis_transform(which='grid')\n    l = mlines.Line2D([x, x], [ymin, ymax], transform=trans, **kwargs)\n    self.add_line(l)\n    self._request_autoscale_view(scalex=scalex, scaley=False)\n    return l",
                "@docstring.dedent_interpd\ndef axline(self, xy1, xy2, **kwargs):\n    \"\"\"\n    Add an infinitely long straight line that passes through two points.\n\n    This draws a straight line \"on the screen\", regardless of the x and y\n    scales, and is thus also suitable for drawing exponential decays in\n    semilog plots, power laws in loglog plots, etc.\n\n    Parameters\n    ----------\n    xy1, xy2 : (float, float)\n        Points for the line to pass through.\n\n    Returns\n    -------\n    :class:`~matplotlib.lines.Line2D`\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Valid kwargs are :class:`~matplotlib.lines.Line2D` properties,\n        with the exception of 'transform':\n\n        %(_Line2D_docstr)s\n\n    Examples\n    --------\n    Draw a thick red line passing through (0, 0) and (1, 1)::\n\n        >>> axline((0, 0), (1, 1), linewidth=4, color='r')\n\n    See Also\n    --------\n    axhline : for horizontal lines\n    axvline : for vertical lines\n    \"\"\"\n\n    if \"transform\" in kwargs:\n        raise TypeError(\"'transform' is not allowed as a kwarg; \"\n                        \"axline generates its own transform\")\n    x1, y1 = xy1\n    x2, y2 = xy2\n    line = mlines._AxLine([x1, x2], [y1, y2], **kwargs)\n    # Like add_line, but correctly handling data limits.\n    self._set_artist_props(line)\n    if line.get_clip_path() is None:\n        line.set_clip_path(self.patch)\n    if not line.get_label():\n        line.set_label(f\"_line{len(self.lines)}\")\n    self.lines.append(line)\n    line._remove_method = self.lines.remove\n    self.update_datalim([xy1, xy2])\n\n    self._request_autoscale_view()\n    return line",
                "@docstring.dedent_interpd\ndef axhspan(self, ymin, ymax, xmin=0, xmax=1, **kwargs):\n    \"\"\"\n    Add a horizontal span (rectangle) across the axis.\n\n    Draw a horizontal span (rectangle) from *ymin* to *ymax*.\n    With the default values of *xmin* = 0 and *xmax* = 1, this\n    always spans the xrange, regardless of the xlim settings, even\n    if you change them, e.g., with the :meth:`set_xlim` command.\n    That is, the horizontal extent is in axes coords: 0=left,\n    0.5=middle, 1.0=right but the *y* location is in data\n    coordinates.\n\n    Parameters\n    ----------\n    ymin : float\n        Lower y-coordinate of the span, in data units.\n    ymax : float\n        Upper y-coordinate of the span, in data units.\n    xmin : float, default: 0\n        Lower x-coordinate of the span, in x-axis (0-1) units.\n    xmax : float, default: 1\n        Upper x-coordinate of the span, in x-axis (0-1) units.\n\n    Returns\n    -------\n    Polygon : `~matplotlib.patches.Polygon`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.patches.Polygon` properties.\n\n    %(Polygon)s\n\n    See Also\n    --------\n    axvspan : Add a vertical span across the axes.\n    \"\"\"\n    trans = self.get_yaxis_transform(which='grid')\n\n    # process the unit information\n    self._process_unit_info([xmin, xmax], [ymin, ymax], kwargs=kwargs)\n\n    # first we need to strip away the units\n    xmin, xmax = self.convert_xunits([xmin, xmax])\n    ymin, ymax = self.convert_yunits([ymin, ymax])\n\n    verts = (xmin, ymin), (xmin, ymax), (xmax, ymax), (xmax, ymin)\n    p = mpatches.Polygon(verts, **kwargs)\n    p.set_transform(trans)\n    self.add_patch(p)\n    self._request_autoscale_view(scalex=False)\n    return p",
                "def axvspan(self, xmin, xmax, ymin=0, ymax=1, **kwargs):\n    \"\"\"\n    Add a vertical span (rectangle) across the axes.\n\n    Draw a vertical span (rectangle) from *xmin* to *xmax*.  With\n    the default values of *ymin* = 0 and *ymax* = 1. This always\n    spans the yrange, regardless of the ylim settings, even if you\n    change them, e.g., with the :meth:`set_ylim` command.  That is,\n    the vertical extent is in axes coords: 0=bottom, 0.5=middle,\n    1.0=top but the x location is in data coordinates.\n\n    Parameters\n    ----------\n    xmin : float\n        Lower x-coordinate of the span, in data units.\n    xmax : float\n        Upper x-coordinate of the span, in data units.\n    ymin : float, default: 0\n        Lower y-coordinate of the span, in y-axis units (0-1).\n    ymax : float, default: 1\n        Upper y-coordinate of the span, in y-axis units (0-1).\n\n    Returns\n    -------\n    rectangle : `~matplotlib.patches.Polygon`\n        Vertical span (rectangle) from (xmin, ymin) to (xmax, ymax).\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Optional parameters are properties of the class `.Polygon`.\n\n    See Also\n    --------\n    axhspan : Add a horizontal span across the axes.\n\n    Examples\n    --------\n    Draw a vertical, green, translucent rectangle from x = 1.25 to\n    x = 1.55 that spans the yrange of the axes.\n\n    >>> axvspan(1.25, 1.55, facecolor='g', alpha=0.5)\n\n    \"\"\"\n    trans = self.get_xaxis_transform(which='grid')\n\n    # process the unit information\n    self._process_unit_info([xmin, xmax], [ymin, ymax], kwargs=kwargs)\n\n    # first we need to strip away the units\n    xmin, xmax = self.convert_xunits([xmin, xmax])\n    ymin, ymax = self.convert_yunits([ymin, ymax])\n\n    verts = [(xmin, ymin), (xmin, ymax), (xmax, ymax), (xmax, ymin)]\n    p = mpatches.Polygon(verts, **kwargs)\n    p.set_transform(trans)\n    self.add_patch(p)\n    self._request_autoscale_view(scaley=False)\n    return p",
                "@_preprocess_data(replace_names=[\"y\", \"xmin\", \"xmax\", \"colors\"],\n                  label_namer=\"y\")\ndef hlines(self, y, xmin, xmax, colors='k', linestyles='solid',\n           label='', **kwargs):\n    \"\"\"\n    Plot horizontal lines at each *y* from *xmin* to *xmax*.\n\n    Parameters\n    ----------\n    y : scalar or sequence of scalar\n        y-indexes where to plot the lines.\n\n    xmin, xmax : scalar or 1D array-like\n        Respective beginning and end of each line. If scalars are\n        provided, all lines will have same length.\n\n    colors : array-like of colors, default: 'k'\n\n    linestyles : {'solid', 'dashed', 'dashdot', 'dotted'}, optional\n\n    label : str, default: ''\n\n    Returns\n    -------\n    lines : `~matplotlib.collections.LineCollection`\n\n    Other Parameters\n    ----------------\n    **kwargs :  `~matplotlib.collections.LineCollection` properties.\n\n    See also\n    --------\n    vlines : vertical lines\n    axhline: horizontal line across the axes\n    \"\"\"\n\n    # We do the conversion first since not all unitized data is uniform\n    # process the unit information\n    self._process_unit_info([xmin, xmax], y, kwargs=kwargs)\n    y = self.convert_yunits(y)\n    xmin = self.convert_xunits(xmin)\n    xmax = self.convert_xunits(xmax)\n\n    if not np.iterable(y):\n        y = [y]\n    if not np.iterable(xmin):\n        xmin = [xmin]\n    if not np.iterable(xmax):\n        xmax = [xmax]\n\n    y, xmin, xmax = cbook.delete_masked_points(y, xmin, xmax)\n\n    y = np.ravel(y)\n    xmin = np.resize(xmin, y.shape)\n    xmax = np.resize(xmax, y.shape)\n\n    verts = [((thisxmin, thisy), (thisxmax, thisy))\n             for thisxmin, thisxmax, thisy in zip(xmin, xmax, y)]\n    lines = mcoll.LineCollection(verts, colors=colors,\n                                 linestyles=linestyles, label=label)\n    self.add_collection(lines, autolim=False)\n    lines.update(kwargs)\n\n    if len(y) > 0:\n        minx = min(xmin.min(), xmax.min())\n        maxx = max(xmin.max(), xmax.max())\n        miny = y.min()\n        maxy = y.max()\n\n        corners = (minx, miny), (maxx, maxy)\n\n        self.update_datalim(corners)\n        self._request_autoscale_view()\n\n    return lines",
                "@_preprocess_data(replace_names=[\"x\", \"ymin\", \"ymax\", \"colors\"],\n                  label_namer=\"x\")\ndef vlines(self, x, ymin, ymax, colors='k', linestyles='solid',\n           label='', **kwargs):\n    \"\"\"\n    Plot vertical lines.\n\n    Plot vertical lines at each *x* from *ymin* to *ymax*.\n\n    Parameters\n    ----------\n    x : scalar or 1D array-like\n        x-indexes where to plot the lines.\n\n    ymin, ymax : scalar or 1D array-like\n        Respective beginning and end of each line. If scalars are\n        provided, all lines will have same length.\n\n    colors : array-like of colors, default: 'k'\n\n    linestyles : {'solid', 'dashed', 'dashdot', 'dotted'}, optional\n\n    label : str, default: ''\n\n    Returns\n    -------\n    lines : `~matplotlib.collections.LineCollection`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.collections.LineCollection` properties.\n\n    See also\n    --------\n    hlines : horizontal lines\n    axvline: vertical line across the axes\n    \"\"\"\n\n    self._process_unit_info(xdata=x, ydata=[ymin, ymax], kwargs=kwargs)\n\n    # We do the conversion first since not all unitized data is uniform\n    x = self.convert_xunits(x)\n    ymin = self.convert_yunits(ymin)\n    ymax = self.convert_yunits(ymax)\n\n    if not np.iterable(x):\n        x = [x]\n    if not np.iterable(ymin):\n        ymin = [ymin]\n    if not np.iterable(ymax):\n        ymax = [ymax]\n\n    x, ymin, ymax = cbook.delete_masked_points(x, ymin, ymax)\n\n    x = np.ravel(x)\n    ymin = np.resize(ymin, x.shape)\n    ymax = np.resize(ymax, x.shape)\n\n    verts = [((thisx, thisymin), (thisx, thisymax))\n             for thisx, thisymin, thisymax in zip(x, ymin, ymax)]\n    lines = mcoll.LineCollection(verts, colors=colors,\n                                 linestyles=linestyles, label=label)\n    self.add_collection(lines, autolim=False)\n    lines.update(kwargs)\n\n    if len(x) > 0:\n        minx = x.min()\n        maxx = x.max()\n        miny = min(ymin.min(), ymax.min())\n        maxy = max(ymin.max(), ymax.max())\n\n        corners = (minx, miny), (maxx, maxy)\n        self.update_datalim(corners)\n        self._request_autoscale_view()\n\n    return lines",
                "@_preprocess_data(replace_names=[\"positions\", \"lineoffsets\",\n                                 \"linelengths\", \"linewidths\",\n                                 \"colors\", \"linestyles\"])\n@docstring.dedent_interpd\ndef eventplot(self, positions, orientation='horizontal', lineoffsets=1,\n              linelengths=1, linewidths=None, colors=None,\n              linestyles='solid', **kwargs):\n    \"\"\"\n    Plot identical parallel lines at the given positions.\n\n    *positions* should be a 1D or 2D array-like object, with each row\n    corresponding to a row or column of lines.\n\n    This type of plot is commonly used in neuroscience for representing\n    neural events, where it is usually called a spike raster, dot raster,\n    or raster plot.\n\n    However, it is useful in any situation where you wish to show the\n    timing or position of multiple sets of discrete events, such as the\n    arrival times of people to a business on each day of the month or the\n    date of hurricanes each year of the last century.\n\n    Parameters\n    ----------\n    positions : 1D or 2D array-like object\n        Each value is an event. If *positions* is a 2D array-like, each\n        row corresponds to a row or a column of lines (depending on the\n        *orientation* parameter).\n\n    orientation : {'horizontal', 'vertical'}, optional\n        The direction of the event collections:\n\n        - 'horizontal': the lines are arranged horizontally in rows,\n          and are vertical.\n        - 'vertical': the lines are arranged vertically in columns,\n          and are horizontal.\n\n    lineoffsets : scalar or sequence of scalars, default: 1\n        The offset of the center of the lines from the origin, in the\n        direction orthogonal to *orientation*.\n\n    linelengths : scalar or sequence of scalars, default: 1\n        The total height of the lines (i.e. the lines stretches from\n        ``lineoffset - linelength/2`` to ``lineoffset + linelength/2``).\n\n    linewidths : scalar, scalar sequence or None, default: None\n        The line width(s) of the event lines, in points. If it is None,\n        defaults to its rcParams setting.\n\n    colors : color, sequence of colors or None, default: None\n        The color(s) of the event lines. If it is None, defaults to its\n        rcParams setting.\n\n    linestyles : str or tuple or a sequence of such values, optional\n        Default is 'solid'. Valid strings are ['solid', 'dashed',\n        'dashdot', 'dotted', '-', '--', '-.', ':']. Dash tuples\n        should be of the form::\n\n            (offset, onoffseq),\n\n        where *onoffseq* is an even length tuple of on and off ink\n        in points.\n\n    **kwargs : optional\n        Other keyword arguments are line collection properties.  See\n        :class:`~matplotlib.collections.LineCollection` for a list of\n        the valid properties.\n\n    Returns\n    -------\n    list : A list of :class:`~.collections.EventCollection` objects.\n        Contains the :class:`~.collections.EventCollection` that\n        were added.\n\n    Notes\n    -----\n    For *linelengths*, *linewidths*, *colors*, and *linestyles*, if only\n    a single value is given, that value is applied to all lines.  If an\n    array-like is given, it must have the same length as *positions*, and\n    each value will be applied to the corresponding row of the array.\n\n    Examples\n    --------\n    .. plot:: gallery/lines_bars_and_markers/eventplot_demo.py\n    \"\"\"\n    self._process_unit_info(xdata=positions,\n                            ydata=[lineoffsets, linelengths],\n                            kwargs=kwargs)\n\n    # We do the conversion first since not all unitized data is uniform\n    positions = self.convert_xunits(positions)\n    lineoffsets = self.convert_yunits(lineoffsets)\n    linelengths = self.convert_yunits(linelengths)\n\n    if not np.iterable(positions):\n        positions = [positions]\n    elif any(np.iterable(position) for position in positions):\n        positions = [np.asanyarray(position) for position in positions]\n    else:\n        positions = [np.asanyarray(positions)]\n\n    if len(positions) == 0:\n        return []\n\n    # prevent 'singular' keys from **kwargs dict from overriding the effect\n    # of 'plural' keyword arguments (e.g. 'color' overriding 'colors')\n    colors = cbook.local_over_kwdict(colors, kwargs, 'color')\n    linewidths = cbook.local_over_kwdict(linewidths, kwargs, 'linewidth')\n    linestyles = cbook.local_over_kwdict(linestyles, kwargs, 'linestyle')\n\n    if not np.iterable(lineoffsets):\n        lineoffsets = [lineoffsets]\n    if not np.iterable(linelengths):\n        linelengths = [linelengths]\n    if not np.iterable(linewidths):\n        linewidths = [linewidths]\n    if not np.iterable(colors):\n        colors = [colors]\n    if hasattr(linestyles, 'lower') or not np.iterable(linestyles):\n        linestyles = [linestyles]\n\n    lineoffsets = np.asarray(lineoffsets)\n    linelengths = np.asarray(linelengths)\n    linewidths = np.asarray(linewidths)\n\n    if len(lineoffsets) == 0:\n        lineoffsets = [None]\n    if len(linelengths) == 0:\n        linelengths = [None]\n    if len(linewidths) == 0:\n        lineoffsets = [None]\n    if len(linewidths) == 0:\n        lineoffsets = [None]\n    if len(colors) == 0:\n        colors = [None]\n    try:\n        # Early conversion of the colors into RGBA values to take care\n        # of cases like colors='0.5' or colors='C1'.  (Issue #8193)\n        colors = mcolors.to_rgba_array(colors)\n    except ValueError:\n        # Will fail if any element of *colors* is None. But as long\n        # as len(colors) == 1 or len(positions), the rest of the\n        # code should process *colors* properly.\n        pass\n\n    if len(lineoffsets) == 1 and len(positions) != 1:\n        lineoffsets = np.tile(lineoffsets, len(positions))\n        lineoffsets[0] = 0\n        lineoffsets = np.cumsum(lineoffsets)\n    if len(linelengths) == 1:\n        linelengths = np.tile(linelengths, len(positions))\n    if len(linewidths) == 1:\n        linewidths = np.tile(linewidths, len(positions))\n    if len(colors) == 1:\n        colors = list(colors)\n        colors = colors * len(positions)\n    if len(linestyles) == 1:\n        linestyles = [linestyles] * len(positions)\n\n    if len(lineoffsets) != len(positions):\n        raise ValueError('lineoffsets and positions are unequal sized '\n                         'sequences')\n    if len(linelengths) != len(positions):\n        raise ValueError('linelengths and positions are unequal sized '\n                         'sequences')\n    if len(linewidths) != len(positions):\n        raise ValueError('linewidths and positions are unequal sized '\n                         'sequences')\n    if len(colors) != len(positions):\n        raise ValueError('colors and positions are unequal sized '\n                         'sequences')\n    if len(linestyles) != len(positions):\n        raise ValueError('linestyles and positions are unequal sized '\n                         'sequences')\n\n    colls = []\n    for position, lineoffset, linelength, linewidth, color, linestyle in \\\n        zip(positions, lineoffsets, linelengths, linewidths,\n                       colors, linestyles):\n        coll = mcoll.EventCollection(position,\n                                     orientation=orientation,\n                                     lineoffset=lineoffset,\n                                     linelength=linelength,\n                                     linewidth=linewidth,\n                                     color=color,\n                                     linestyle=linestyle)\n        self.add_collection(coll, autolim=False)\n        coll.update(kwargs)\n        colls.append(coll)\n\n    if len(positions) > 0:\n        # try to get min/max\n        min_max = [(np.min(_p), np.max(_p)) for _p in positions\n                   if len(_p) > 0]\n        # if we have any non-empty positions, try to autoscale\n        if len(min_max) > 0:\n            mins, maxes = zip(*min_max)\n            minpos = np.min(mins)\n            maxpos = np.max(maxes)\n\n            minline = (lineoffsets - linelengths).min()\n            maxline = (lineoffsets + linelengths).max()\n\n            if (orientation is not None and\n                    orientation.lower() == \"vertical\"):\n                corners = (minline, minpos), (maxline, maxpos)\n            else:  # \"horizontal\", None or \"none\" (see EventCollection)\n                corners = (minpos, minline), (maxpos, maxline)\n            self.update_datalim(corners)\n            self._request_autoscale_view()\n\n    return colls",
                "@docstring.dedent_interpd\ndef plot(self, *args, scalex=True, scaley=True, data=None, **kwargs):\n    \"\"\"\n    Plot y versus x as lines and/or markers.\n\n    Call signatures::\n\n        plot([x], y, [fmt], *, data=None, **kwargs)\n        plot([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n\n    The coordinates of the points or line nodes are given by *x*, *y*.\n\n    The optional parameter *fmt* is a convenient way for defining basic\n    formatting like color, marker and linestyle. It's a shortcut string\n    notation described in the *Notes* section below.\n\n    >>> plot(x, y)        # plot x and y using default line style and color\n    >>> plot(x, y, 'bo')  # plot x and y using blue circle markers\n    >>> plot(y)           # plot y using x as index array 0..N-1\n    >>> plot(y, 'r+')     # ditto, but with red plusses\n\n    You can use `.Line2D` properties as keyword arguments for more\n    control on the appearance. Line properties and *fmt* can be mixed.\n    The following two calls yield identical results:\n\n    >>> plot(x, y, 'go--', linewidth=2, markersize=12)\n    >>> plot(x, y, color='green', marker='o', linestyle='dashed',\n    ...      linewidth=2, markersize=12)\n\n    When conflicting with *fmt*, keyword arguments take precedence.\n\n\n    **Plotting labelled data**\n\n    There's a convenient way for plotting objects with labelled data (i.e.\n    data that can be accessed by index ``obj['y']``). Instead of giving\n    the data in *x* and *y*, you can provide the object in the *data*\n    parameter and just give the labels for *x* and *y*::\n\n    >>> plot('xlabel', 'ylabel', data=obj)\n\n    All indexable objects are supported. This could e.g. be a `dict`, a\n    `pandas.DataFame` or a structured numpy array.\n\n\n    **Plotting multiple sets of data**\n\n    There are various ways to plot multiple sets of data.\n\n    - The most straight forward way is just to call `plot` multiple times.\n      Example:\n\n      >>> plot(x1, y1, 'bo')\n      >>> plot(x2, y2, 'go')\n\n    - Alternatively, if your data is already a 2d array, you can pass it\n      directly to *x*, *y*. A separate data set will be drawn for every\n      column.\n\n      Example: an array ``a`` where the first column represents the *x*\n      values and the other columns are the *y* columns::\n\n      >>> plot(a[0], a[1:])\n\n    - The third way is to specify multiple sets of *[x]*, *y*, *[fmt]*\n      groups::\n\n      >>> plot(x1, y1, 'g^', x2, y2, 'g-')\n\n      In this case, any additional keyword argument applies to all\n      datasets. Also this syntax cannot be combined with the *data*\n      parameter.\n\n    By default, each line is assigned a different style specified by a\n    'style cycle'. The *fmt* and line property parameters are only\n    necessary if you want explicit deviations from these defaults.\n    Alternatively, you can also change the style cycle using\n    :rc:`axes.prop_cycle`.\n\n\n    Parameters\n    ----------\n    x, y : array-like or scalar\n        The horizontal / vertical coordinates of the data points.\n        *x* values are optional and default to ``range(len(y))``.\n\n        Commonly, these parameters are 1D arrays.\n\n        They can also be scalars, or two-dimensional (in that case, the\n        columns represent separate data sets).\n\n        These arguments cannot be passed as keywords.\n\n    fmt : str, optional\n        A format string, e.g. 'ro' for red circles. See the *Notes*\n        section for a full description of the format strings.\n\n        Format strings are just an abbreviation for quickly setting\n        basic line properties. All of these and more can also be\n        controlled by keyword arguments.\n\n        This argument cannot be passed as keyword.\n\n    data : indexable object, optional\n        An object with labelled data. If given, provide the label names to\n        plot in *x* and *y*.\n\n        .. note::\n            Technically there's a slight ambiguity in calls where the\n            second label is a valid *fmt*. ``plot('n', 'o', data=obj)``\n            could be ``plt(x, y)`` or ``plt(y, fmt)``. In such cases,\n            the former interpretation is chosen, but a warning is issued.\n            You may suppress the warning by adding an empty format string\n            ``plot('n', 'o', '', data=obj)``.\n\n    Other Parameters\n    ----------------\n    scalex, scaley : bool, default: True\n        These parameters determined if the view limits are adapted to\n        the data limits. The values are passed on to `autoscale_view`.\n\n    **kwargs : `.Line2D` properties, optional\n        *kwargs* are used to specify properties like a line label (for\n        auto legends), linewidth, antialiasing, marker face color.\n        Example::\n\n        >>> plot([1, 2, 3], [1, 2, 3], 'go-', label='line 1', linewidth=2)\n        >>> plot([1, 2, 3], [1, 4, 9], 'rs', label='line 2')\n\n        If you make multiple lines with one plot command, the kwargs\n        apply to all those lines.\n\n        Here is a list of available `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    See Also\n    --------\n    scatter : XY scatter plot with markers of varying size and/or color (\n        sometimes also called bubble chart).\n\n    Notes\n    -----\n    **Format Strings**\n\n    A format string consists of a part for color, marker and line::\n\n        fmt = '[marker][line][color]'\n\n    Each of them is optional. If not provided, the value from the style\n    cycle is used. Exception: If ``line`` is given, but no ``marker``,\n    the data will be a line without markers.\n\n    Other combinations such as ``[color][marker][line]`` are also\n    supported, but note that their parsing may be ambiguous.\n\n    **Markers**\n\n    =============    ===============================\n    character        description\n    =============    ===============================\n    ``'.'``          point marker\n    ``','``          pixel marker\n    ``'o'``          circle marker\n    ``'v'``          triangle_down marker\n    ``'^'``          triangle_up marker\n    ``'<'``          triangle_left marker\n    ``'>'``          triangle_right marker\n    ``'1'``          tri_down marker\n    ``'2'``          tri_up marker\n    ``'3'``          tri_left marker\n    ``'4'``          tri_right marker\n    ``'s'``          square marker\n    ``'p'``          pentagon marker\n    ``'*'``          star marker\n    ``'h'``          hexagon1 marker\n    ``'H'``          hexagon2 marker\n    ``'+'``          plus marker\n    ``'x'``          x marker\n    ``'D'``          diamond marker\n    ``'d'``          thin_diamond marker\n    ``'|'``          vline marker\n    ``'_'``          hline marker\n    =============    ===============================\n\n    **Line Styles**\n\n    =============    ===============================\n    character        description\n    =============    ===============================\n    ``'-'``          solid line style\n    ``'--'``         dashed line style\n    ``'-.'``         dash-dot line style\n    ``':'``          dotted line style\n    =============    ===============================\n\n    Example format strings::\n\n        'b'    # blue markers with default shape\n        'or'   # red circles\n        '-g'   # green solid line\n        '--'   # dashed line with default color\n        '^k:'  # black triangle_up markers connected by a dotted line\n\n    **Colors**\n\n    The supported color abbreviations are the single letter codes\n\n    =============    ===============================\n    character        color\n    =============    ===============================\n    ``'b'``          blue\n    ``'g'``          green\n    ``'r'``          red\n    ``'c'``          cyan\n    ``'m'``          magenta\n    ``'y'``          yellow\n    ``'k'``          black\n    ``'w'``          white\n    =============    ===============================\n\n    and the ``'CN'`` colors that index into the default property cycle.\n\n    If the color is the only part of the format string, you can\n    additionally use any  `matplotlib.colors` spec, e.g. full names\n    (``'green'``) or hex strings (``'#008000'``).\n    \"\"\"\n    kwargs = cbook.normalize_kwargs(kwargs, mlines.Line2D)\n    lines = [*self._get_lines(*args, data=data, **kwargs)]\n    for line in lines:\n        self.add_line(line)\n    self._request_autoscale_view(scalex=scalex, scaley=scaley)\n    return lines",
                "@_preprocess_data(replace_names=[\"x\", \"y\"], label_namer=\"y\")\n@docstring.dedent_interpd\ndef plot_date(self, x, y, fmt='o', tz=None, xdate=True, ydate=False,\n              **kwargs):\n    \"\"\"\n    Plot data that contains dates.\n\n    Similar to `.plot`, this plots *y* vs. *x* as lines or markers.\n    However, the axis labels are formatted as dates depending on *xdate*\n    and *ydate*.\n\n    Parameters\n    ----------\n    x, y : array-like\n        The coordinates of the data points. If *xdate* or *ydate* is\n        *True*, the respective values *x* or *y* are interpreted as\n        :ref:`Matplotlib dates <date-format>`.\n\n    fmt : str, optional\n        The plot format string. For details, see the corresponding\n        parameter in `.plot`.\n\n    tz : timezone string or `tzinfo` or None\n        The time zone to use in labeling dates. If *None*, defaults to\n        :rc:`timezone`.\n\n    xdate : bool, default: True\n        If *True*, the *x*-axis will be interpreted as Matplotlib dates.\n\n    ydate : bool, default: False\n        If *True*, the *y*-axis will be interpreted as Matplotlib dates.\n\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    matplotlib.dates : Helper functions on dates.\n    matplotlib.dates.date2num : Convert dates to num.\n    matplotlib.dates.num2date : Convert num to dates.\n    matplotlib.dates.drange : Create an equally spaced sequence of dates.\n\n    Notes\n    -----\n    If you are using custom date tickers and formatters, it may be\n    necessary to set the formatters/locators after the call to\n    `.plot_date`. `.plot_date` will set the default tick locator to\n    `.AutoDateLocator` (if the tick locator is not already set to a\n    `.DateLocator` instance) and the default tick formatter to\n    `.AutoDateFormatter` (if the tick formatter is not already set to a\n    `.DateFormatter` instance).\n    \"\"\"\n    if xdate:\n        self.xaxis_date(tz)\n    if ydate:\n        self.yaxis_date(tz)\n\n    ret = self.plot(x, y, fmt, **kwargs)\n\n    self._request_autoscale_view()\n\n    return ret",
                "@docstring.dedent_interpd\ndef loglog(self, *args, **kwargs):\n    \"\"\"\n    Make a plot with log scaling on both the x and y axis.\n\n    Call signatures::\n\n        loglog([x], y, [fmt], data=None, **kwargs)\n        loglog([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n\n    This is just a thin wrapper around `.plot` which additionally changes\n    both the x-axis and the y-axis to log scaling. All of the concepts and\n    parameters of plot can be used here as well.\n\n    The additional parameters *basex/y*, *subsx/y* and *nonposx/y* control\n    the x/y-axis properties. They are just forwarded to `.Axes.set_xscale`\n    and `.Axes.set_yscale`.\n\n    Parameters\n    ----------\n    basex, basey : scalar, optional, default 10\n        Base of the x/y logarithm.\n\n    subsx, subsy : sequence, optional\n        The location of the minor x/y ticks. If *None*, reasonable\n        locations are automatically chosen depending on the number of\n        decades in the plot.\n        See `.Axes.set_xscale` / `.Axes.set_yscale` for details.\n\n    nonposx, nonposy : {'mask', 'clip'}, optional, default 'mask'\n        Non-positive values in x or y can be masked as invalid, or clipped\n        to a very small positive number.\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All parameters supported by `.plot`.\n    \"\"\"\n    dx = {k: kwargs.pop(k) for k in ['basex', 'subsx', 'nonposx']\n          if k in kwargs}\n    dy = {k: kwargs.pop(k) for k in ['basey', 'subsy', 'nonposy']\n          if k in kwargs}\n\n    self.set_xscale('log', **dx)\n    self.set_yscale('log', **dy)\n\n    l = self.plot(*args, **kwargs)\n    return l",
                "@docstring.dedent_interpd\ndef semilogx(self, *args, **kwargs):\n    \"\"\"\n    Make a plot with log scaling on the x axis.\n\n    Call signatures::\n\n        semilogx([x], y, [fmt], data=None, **kwargs)\n        semilogx([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n\n    This is just a thin wrapper around `.plot` which additionally changes\n    the x-axis to log scaling. All of the concepts and parameters of plot\n    can be used here as well.\n\n    The additional parameters *basex*, *subsx* and *nonposx* control the\n    x-axis properties. They are just forwarded to `.Axes.set_xscale`.\n\n    Parameters\n    ----------\n    basex : scalar, optional, default 10\n        Base of the x logarithm.\n\n    subsx : array-like, optional\n        The location of the minor xticks. If *None*, reasonable locations\n        are automatically chosen depending on the number of decades in the\n        plot. See `.Axes.set_xscale` for details.\n\n    nonposx : {'mask', 'clip'}, optional, default 'mask'\n        Non-positive values in x can be masked as invalid, or clipped to a\n        very small positive number.\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All parameters supported by `.plot`.\n    \"\"\"\n    d = {k: kwargs.pop(k) for k in ['basex', 'subsx', 'nonposx']\n         if k in kwargs}\n\n    self.set_xscale('log', **d)\n    l = self.plot(*args, **kwargs)\n    return l",
                "@docstring.dedent_interpd\ndef semilogy(self, *args, **kwargs):\n    \"\"\"\n    Make a plot with log scaling on the y axis.\n\n    Call signatures::\n\n        semilogy([x], y, [fmt], data=None, **kwargs)\n        semilogy([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)\n\n    This is just a thin wrapper around `.plot` which additionally changes\n    the y-axis to log scaling. All of the concepts and parameters of plot\n    can be used here as well.\n\n    The additional parameters *basey*, *subsy* and *nonposy* control the\n    y-axis properties. They are just forwarded to `.Axes.set_yscale`.\n\n    Parameters\n    ----------\n    basey : scalar, optional, default 10\n        Base of the y logarithm.\n\n    subsy : array-like, optional\n        The location of the minor yticks. If *None*, reasonable locations\n        are automatically chosen depending on the number of decades in the\n        plot. See `.Axes.set_yscale` for details.\n\n    nonposy : {'mask', 'clip'}, optional, default 'mask'\n        Non-positive values in y can be masked as invalid, or clipped to a\n        very small positive number.\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All parameters supported by `.plot`.\n    \"\"\"\n    d = {k: kwargs.pop(k) for k in ['basey', 'subsy', 'nonposy']\n         if k in kwargs}\n    self.set_yscale('log', **d)\n    l = self.plot(*args, **kwargs)\n\n    return l",
                "@_preprocess_data(replace_names=[\"x\"], label_namer=\"x\")\ndef acorr(self, x, **kwargs):\n    \"\"\"\n    Plot the autocorrelation of *x*.\n\n    Parameters\n    ----------\n    x : array-like\n\n    detrend : callable, default: `mlab.detrend_none`\n        *x* is detrended by the *detrend* callable. This must be a\n        function ``x = detrend(x)`` accepting and returning an\n        `numpy.array`. Default is no detrending.\n\n    normed : bool, default: True\n        If ``True``, input vectors are normalised to unit length.\n\n    usevlines : bool, default: True\n        Determines the plot style.\n\n        If ``True``, vertical lines are plotted from 0 to the acorr value\n        using `Axes.vlines`. Additionally, a horizontal line is plotted\n        at y=0 using `Axes.axhline`.\n\n        If ``False``, markers are plotted at the acorr values using\n        `Axes.plot`.\n\n    maxlags : int, default: 10\n        Number of lags to show. If ``None``, will return all\n        ``2 * len(x) - 1`` lags.\n\n    Returns\n    -------\n    lags : array (length ``2*maxlags+1``)\n        The lag vector.\n    c : array  (length ``2*maxlags+1``)\n        The auto correlation vector.\n    line : `.LineCollection` or `.Line2D`\n        `.Artist` added to the axes of the correlation:\n\n        - `.LineCollection` if *usevlines* is True.\n        - `.Line2D` if *usevlines* is False.\n    b : `.Line2D` or None\n        Horizontal line at 0 if *usevlines* is True\n        None *usevlines* is False.\n\n    Other Parameters\n    ----------------\n    linestyle : `.Line2D` property, optional\n        The linestyle for plotting the data points.\n        Only used if *usevlines* is ``False``.\n\n    marker : str, default: 'o'\n        The marker for plotting the data points.\n        Only used if *usevlines* is ``False``.\n\n    Notes\n    -----\n    The cross correlation is performed with :func:`numpy.correlate` with\n    ``mode = \"full\"``.\n    \"\"\"\n    return self.xcorr(x, x, **kwargs)",
                "@_preprocess_data(replace_names=[\"x\", \"y\"], label_namer=\"y\")\ndef xcorr(self, x, y, normed=True, detrend=mlab.detrend_none,\n          usevlines=True, maxlags=10, **kwargs):\n    r\"\"\"\n    Plot the cross correlation between *x* and *y*.\n\n    The correlation with lag k is defined as\n    :math:`\\sum_n x[n+k] \\cdot y^*[n]`, where :math:`y^*` is the complex\n    conjugate of :math:`y`.\n\n    Parameters\n    ----------\n    x : array-like of length n\n\n    y : array-like of length n\n\n    detrend : callable, default: `mlab.detrend_none`\n        *x* and *y* are detrended by the *detrend* callable. This must be a\n        function ``x = detrend(x)`` accepting and returning an\n        `numpy.array`. Default is no detrending.\n\n    normed : bool, default: True\n        If ``True``, input vectors are normalised to unit length.\n\n    usevlines : bool, default: True\n        Determines the plot style.\n\n        If ``True``, vertical lines are plotted from 0 to the xcorr value\n        using `Axes.vlines`. Additionally, a horizontal line is plotted\n        at y=0 using `Axes.axhline`.\n\n        If ``False``, markers are plotted at the xcorr values using\n        `Axes.plot`.\n\n    maxlags : int, default: 10\n        Number of lags to show. If None, will return all ``2 * len(x) - 1``\n        lags.\n\n    Returns\n    -------\n    lags : array (length ``2*maxlags+1``)\n        The lag vector.\n    c : array  (length ``2*maxlags+1``)\n        The auto correlation vector.\n    line : `.LineCollection` or `.Line2D`\n        `.Artist` added to the axes of the correlation:\n\n        - `.LineCollection` if *usevlines* is True.\n        - `.Line2D` if *usevlines* is False.\n    b : `.Line2D` or None\n        Horizontal line at 0 if *usevlines* is True\n        None *usevlines* is False.\n\n    Other Parameters\n    ----------------\n    linestyle : `.Line2D` property, optional\n        The linestyle for plotting the data points.\n        Only used if *usevlines* is ``False``.\n\n    marker : str, default: 'o'\n        The marker for plotting the data points.\n        Only used if *usevlines* is ``False``.\n\n    Notes\n    -----\n    The cross correlation is performed with :func:`numpy.correlate` with\n    ``mode = \"full\"``.\n    \"\"\"\n    Nx = len(x)\n    if Nx != len(y):\n        raise ValueError('x and y must be equal length')\n\n    x = detrend(np.asarray(x))\n    y = detrend(np.asarray(y))\n\n    correls = np.correlate(x, y, mode=\"full\")\n\n    if normed:\n        correls /= np.sqrt(np.dot(x, x) * np.dot(y, y))\n\n    if maxlags is None:\n        maxlags = Nx - 1\n\n    if maxlags >= Nx or maxlags < 1:\n        raise ValueError('maxlags must be None or strictly '\n                         'positive < %d' % Nx)\n\n    lags = np.arange(-maxlags, maxlags + 1)\n    correls = correls[Nx - 1 - maxlags:Nx + maxlags]\n\n    if usevlines:\n        a = self.vlines(lags, [0], correls, **kwargs)\n        # Make label empty so only vertical lines get a legend entry\n        kwargs.pop('label', '')\n        b = self.axhline(**kwargs)\n    else:\n        kwargs.setdefault('marker', 'o')\n        kwargs.setdefault('linestyle', 'None')\n        a, = self.plot(lags, correls, **kwargs)\n        b = None\n    return lags, correls, a, b",
                "def step(self, x, y, *args, where='pre', data=None, **kwargs):\n    \"\"\"\n    Make a step plot.\n\n    Call signatures::\n\n        step(x, y, [fmt], *, data=None, where='pre', **kwargs)\n        step(x, y, [fmt], x2, y2, [fmt2], ..., *, where='pre', **kwargs)\n\n    This is just a thin wrapper around `.plot` which changes some\n    formatting options. Most of the concepts and parameters of plot can be\n    used here as well.\n\n    Parameters\n    ----------\n    x : array-like\n        1-D sequence of x positions. It is assumed, but not checked, that\n        it is uniformly increasing.\n\n    y : array-like\n        1-D sequence of y levels.\n\n    fmt : str, optional\n        A format string, e.g. 'g' for a green line. See `.plot` for a more\n        detailed description.\n\n        Note: While full format strings are accepted, it is recommended to\n        only specify the color. Line styles are currently ignored (use\n        the keyword argument *linestyle* instead). Markers are accepted\n        and plotted on the given positions, however, this is a rarely\n        needed feature for step plots.\n\n    data : indexable object, optional\n        An object with labelled data. If given, provide the label names to\n        plot in *x* and *y*.\n\n    where : {'pre', 'post', 'mid'}, default: 'pre'\n        Define where the steps should be placed:\n\n        - 'pre': The y value is continued constantly to the left from\n          every *x* position, i.e. the interval ``(x[i-1], x[i]]`` has the\n          value ``y[i]``.\n        - 'post': The y value is continued constantly to the right from\n          every *x* position, i.e. the interval ``[x[i], x[i+1])`` has the\n          value ``y[i]``.\n        - 'mid': Steps occur half-way between the *x* positions.\n\n    Returns\n    -------\n    lines\n        A list of `.Line2D` objects representing the plotted data.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Additional parameters are the same as those for `.plot`.\n\n    Notes\n    -----\n    .. [notes section required to get data note injection right]\n    \"\"\"\n    cbook._check_in_list(('pre', 'post', 'mid'), where=where)\n    kwargs['drawstyle'] = 'steps-' + where\n    return self.plot(x, y, *args, data=data, **kwargs)",
                "@staticmethod\ndef _convert_dx(dx, x0, xconv, convert):\n    \"\"\"\n    Small helper to do logic of width conversion flexibly.\n\n    *dx* and *x0* have units, but *xconv* has already been converted\n    to unitless (and is an ndarray).  This allows the *dx* to have units\n    that are different from *x0*, but are still accepted by the\n    ``__add__`` operator of *x0*.\n    \"\"\"\n\n    # x should be an array...\n    assert type(xconv) is np.ndarray\n\n    if xconv.size == 0:\n        # xconv has already been converted, but maybe empty...\n        return convert(dx)\n\n    try:\n        # attempt to add the width to x0; this works for\n        # datetime+timedelta, for instance\n\n        # only use the first element of x and x0.  This saves\n        # having to be sure addition works across the whole\n        # vector.  This is particularly an issue if\n        # x0 and dx are lists so x0 + dx just concatenates the lists.\n        # We can't just cast x0 and dx to numpy arrays because that\n        # removes the units from unit packages like `pint` that\n        # wrap numpy arrays.\n        try:\n            x0 = cbook.safe_first_element(x0)\n        except (TypeError, IndexError, KeyError):\n            x0 = x0\n\n        try:\n            x = cbook.safe_first_element(xconv)\n        except (TypeError, IndexError, KeyError):\n            x = xconv\n\n        delist = False\n        if not np.iterable(dx):\n            dx = [dx]\n            delist = True\n        dx = [convert(x0 + ddx) - x for ddx in dx]\n        if delist:\n            dx = dx[0]\n    except (ValueError, TypeError, AttributeError):\n        # if the above fails (for any reason) just fallback to what\n        # we do by default and convert dx by itself.\n        dx = convert(dx)\n    return dx",
                "@_preprocess_data()\n@docstring.dedent_interpd\ndef bar(self, x, height, width=0.8, bottom=None, *, align=\"center\",\n        **kwargs):\n    r\"\"\"\n    Make a bar plot.\n\n    The bars are positioned at *x* with the given *align*\\ment. Their\n    dimensions are given by *width* and *height*. The vertical baseline\n    is *bottom* (default 0).\n\n    Each of *x*, *height*, *width*, and *bottom* may either be a scalar\n    applying to all bars, or it may be a sequence of length N providing a\n    separate value for each bar.\n\n    Parameters\n    ----------\n    x : sequence of scalars\n        The x coordinates of the bars. See also *align* for the\n        alignment of the bars to the coordinates.\n\n    height : scalar or sequence of scalars\n        The height(s) of the bars.\n\n    width : scalar or array-like, default: 0.8\n        The width(s) of the bars.\n\n    bottom : scalar or array-like, default: 0\n        The y coordinate(s) of the bars bases.\n\n    align : {'center', 'edge'}, default: 'center'\n        Alignment of the bars to the *x* coordinates:\n\n        - 'center': Center the base on the *x* positions.\n        - 'edge': Align the left edges of the bars with the *x* positions.\n\n        To align the bars on the right edge pass a negative *width* and\n        ``align='edge'``.\n\n    Returns\n    -------\n    container : `.BarContainer`\n        Container with all the bars and optionally errorbars.\n\n    Other Parameters\n    ----------------\n    color : scalar or array-like, optional\n        The colors of the bar faces.\n\n    edgecolor : scalar or array-like, optional\n        The colors of the bar edges.\n\n    linewidth : scalar or array-like, optional\n        Width of the bar edge(s). If 0, don't draw edges.\n\n    tick_label : str or array-like, optional\n        The tick labels of the bars.\n        Default: None (Use default numeric labels.)\n\n    xerr, yerr : scalar or array-like of shape(N,) or shape(2, N), optional\n        If not *None*, add horizontal / vertical errorbars to the bar tips.\n        The values are +/- sizes relative to the data:\n\n        - scalar: symmetric +/- values for all bars\n        - shape(N,): symmetric +/- values for each bar\n        - shape(2, N): Separate - and + values for each bar. First row\n          contains the lower errors, the second row contains the upper\n          errors.\n        - *None*: No errorbar. (Default)\n\n        See :doc:`/gallery/statistics/errorbar_features`\n        for an example on the usage of ``xerr`` and ``yerr``.\n\n    ecolor : scalar or array-like, default: 'black'\n        The line color of the errorbars.\n\n    capsize : scalar, optional\n       The length of the error bar caps in points.\n       Default: None, which will take the value from\n       :rc:`errorbar.capsize`.\n\n    error_kw : dict, optional\n        Dictionary of kwargs to be passed to the `~.Axes.errorbar`\n        method. Values of *ecolor* or *capsize* defined here take\n        precedence over the independent kwargs.\n\n    log : bool, default: False\n        If *True*, set the y-axis to be log scale.\n\n    orientation : {'vertical',  'horizontal'}, optional\n        *This is for internal use only.* Please use `barh` for\n        horizontal bar plots. Default: 'vertical'.\n\n    See also\n    --------\n    barh: Plot a horizontal bar plot.\n\n    Notes\n    -----\n    The optional arguments *color*, *edgecolor*, *linewidth*,\n    *xerr*, and *yerr* can be either scalars or sequences of\n    length equal to the number of bars.  This enables you to use\n    bar as the basis for stacked bar charts, or candlestick plots.\n    Detail: *xerr* and *yerr* are passed directly to\n    :meth:`errorbar`, so they can also have shape 2xN for\n    independent specification of lower and upper errors.\n\n    Other optional kwargs:\n\n    %(Rectangle)s\n    \"\"\"\n    kwargs = cbook.normalize_kwargs(kwargs, mpatches.Patch)\n    color = kwargs.pop('color', None)\n    if color is None:\n        color = self._get_patches_for_fill.get_next_color()\n    edgecolor = kwargs.pop('edgecolor', None)\n    linewidth = kwargs.pop('linewidth', None)\n\n    # Because xerr and yerr will be passed to errorbar, most dimension\n    # checking and processing will be left to the errorbar method.\n    xerr = kwargs.pop('xerr', None)\n    yerr = kwargs.pop('yerr', None)\n    error_kw = kwargs.pop('error_kw', {})\n    ezorder = error_kw.pop('zorder', None)\n    if ezorder is None:\n        ezorder = kwargs.get('zorder', None)\n        if ezorder is not None:\n            # If using the bar zorder, increment slightly to make sure\n            # errorbars are drawn on top of bars\n            ezorder += 0.01\n    error_kw.setdefault('zorder', ezorder)\n    ecolor = kwargs.pop('ecolor', 'k')\n    capsize = kwargs.pop('capsize', rcParams[\"errorbar.capsize\"])\n    error_kw.setdefault('ecolor', ecolor)\n    error_kw.setdefault('capsize', capsize)\n\n    orientation = kwargs.pop('orientation', 'vertical')\n    cbook._check_in_list(['vertical', 'horizontal'],\n                         orientation=orientation)\n    log = kwargs.pop('log', False)\n    label = kwargs.pop('label', '')\n    tick_labels = kwargs.pop('tick_label', None)\n\n    y = bottom  # Matches barh call signature.\n    if orientation == 'vertical':\n        if y is None:\n            y = 0\n    elif orientation == 'horizontal':\n        if x is None:\n            x = 0\n\n    if orientation == 'vertical':\n        self._process_unit_info(xdata=x, ydata=height, kwargs=kwargs)\n        if log:\n            self.set_yscale('log', nonposy='clip')\n    elif orientation == 'horizontal':\n        self._process_unit_info(xdata=width, ydata=y, kwargs=kwargs)\n        if log:\n            self.set_xscale('log', nonposx='clip')\n\n    # lets do some conversions now since some types cannot be\n    # subtracted uniformly\n    if self.xaxis is not None:\n        x0 = x\n        x = np.asarray(self.convert_xunits(x))\n        width = self._convert_dx(width, x0, x, self.convert_xunits)\n        if xerr is not None:\n            xerr = self._convert_dx(xerr, x0, x, self.convert_xunits)\n    if self.yaxis is not None:\n        y0 = y\n        y = np.asarray(self.convert_yunits(y))\n        height = self._convert_dx(height, y0, y, self.convert_yunits)\n        if yerr is not None:\n            yerr = self._convert_dx(yerr, y0, y, self.convert_yunits)\n\n    x, height, width, y, linewidth = np.broadcast_arrays(\n        # Make args iterable too.\n        np.atleast_1d(x), height, width, y, linewidth)\n\n    # Now that units have been converted, set the tick locations.\n    if orientation == 'vertical':\n        tick_label_axis = self.xaxis\n        tick_label_position = x\n    elif orientation == 'horizontal':\n        tick_label_axis = self.yaxis\n        tick_label_position = y\n\n    linewidth = itertools.cycle(np.atleast_1d(linewidth))\n    color = itertools.chain(itertools.cycle(mcolors.to_rgba_array(color)),\n                            # Fallback if color == \"none\".\n                            itertools.repeat('none'))\n    if edgecolor is None:\n        edgecolor = itertools.repeat(None)\n    else:\n        edgecolor = itertools.chain(\n            itertools.cycle(mcolors.to_rgba_array(edgecolor)),\n            # Fallback if edgecolor == \"none\".\n            itertools.repeat('none'))\n\n    # We will now resolve the alignment and really have\n    # left, bottom, width, height vectors\n    cbook._check_in_list(['center', 'edge'], align=align)\n    if align == 'center':\n        if orientation == 'vertical':\n            try:\n                left = x - width / 2\n            except TypeError as e:\n                raise TypeError(f'the dtypes of parameters x ({x.dtype}) '\n                                f'and width ({width.dtype}) '\n                                f'are incompatible') from e\n            bottom = y\n        elif orientation == 'horizontal':\n            try:\n                bottom = y - height / 2\n            except TypeError as e:\n                raise TypeError(f'the dtypes of parameters y ({y.dtype}) '\n                                f'and height ({height.dtype}) '\n                                f'are incompatible') from e\n            left = x\n    elif align == 'edge':\n        left = x\n        bottom = y\n\n    patches = []\n    args = zip(left, bottom, width, height, color, edgecolor, linewidth)\n    for l, b, w, h, c, e, lw in args:\n        r = mpatches.Rectangle(\n            xy=(l, b), width=w, height=h,\n            facecolor=c,\n            edgecolor=e,\n            linewidth=lw,\n            label='_nolegend_',\n            )\n        r.update(kwargs)\n        r.get_path()._interpolation_steps = 100\n        if orientation == 'vertical':\n            r.sticky_edges.y.append(b)\n        elif orientation == 'horizontal':\n            r.sticky_edges.x.append(l)\n        self.add_patch(r)\n        patches.append(r)\n\n    if xerr is not None or yerr is not None:\n        if orientation == 'vertical':\n            # using list comps rather than arrays to preserve unit info\n            ex = [l + 0.5 * w for l, w in zip(left, width)]\n            ey = [b + h for b, h in zip(bottom, height)]\n\n        elif orientation == 'horizontal':\n            # using list comps rather than arrays to preserve unit info\n            ex = [l + w for l, w in zip(left, width)]\n            ey = [b + 0.5 * h for b, h in zip(bottom, height)]\n\n        error_kw.setdefault(\"label\", '_nolegend_')\n\n        errorbar = self.errorbar(ex, ey,\n                                 yerr=yerr, xerr=xerr,\n                                 fmt='none', **error_kw)\n    else:\n        errorbar = None\n\n    self._request_autoscale_view()\n\n    bar_container = BarContainer(patches, errorbar, label=label)\n    self.add_container(bar_container)\n\n    if tick_labels is not None:\n        tick_labels = np.broadcast_to(tick_labels, len(patches))\n        tick_label_axis.set_ticks(tick_label_position)\n        tick_label_axis.set_ticklabels(tick_labels)\n\n    return bar_container",
                "@docstring.dedent_interpd\ndef barh(self, y, width, height=0.8, left=None, *, align=\"center\",\n         **kwargs):\n    r\"\"\"\n    Make a horizontal bar plot.\n\n    The bars are positioned at *y* with the given *align*\\ment. Their\n    dimensions are given by *width* and *height*. The horizontal baseline\n    is *left* (default 0).\n\n    Each of *y*, *width*, *height*, and *left* may either be a scalar\n    applying to all bars, or it may be a sequence of length N providing a\n    separate value for each bar.\n\n    Parameters\n    ----------\n    y : scalar or array-like\n        The y coordinates of the bars. See also *align* for the\n        alignment of the bars to the coordinates.\n\n    width : scalar or array-like\n        The width(s) of the bars.\n\n    height : sequence of scalars, default: 0.8\n        The heights of the bars.\n\n    left : sequence of scalars, default: 0\n        The x coordinates of the left sides of the bars.\n\n    align : {'center', 'edge'}, default: 'center'\n        Alignment of the base to the *y* coordinates*:\n\n        - 'center': Center the bars on the *y* positions.\n        - 'edge': Align the bottom edges of the bars with the *y*\n          positions.\n\n        To align the bars on the top edge pass a negative *height* and\n        ``align='edge'``.\n\n    Returns\n    -------\n    container : `.BarContainer`\n        Container with all the bars and optionally errorbars.\n\n    Other Parameters\n    ----------------\n    color : scalar or array-like, optional\n        The colors of the bar faces.\n\n    edgecolor : scalar or array-like, optional\n        The colors of the bar edges.\n\n    linewidth : scalar or array-like, optional\n        Width of the bar edge(s). If 0, don't draw edges.\n\n    tick_label : str or array-like, optional\n        The tick labels of the bars.\n        Default: None (Use default numeric labels.)\n\n    xerr, yerr : scalar or array-like of shape(N,) or shape(2, N), optional\n        If not ``None``, add horizontal / vertical errorbars to the\n        bar tips. The values are +/- sizes relative to the data:\n\n        - scalar: symmetric +/- values for all bars\n        - shape(N,): symmetric +/- values for each bar\n        - shape(2, N): Separate - and + values for each bar. First row\n          contains the lower errors, the second row contains the upper\n          errors.\n        - *None*: No errorbar. (default)\n\n        See :doc:`/gallery/statistics/errorbar_features`\n        for an example on the usage of ``xerr`` and ``yerr``.\n\n    ecolor : scalar or array-like, default: 'black'\n        The line color of the errorbars.\n\n    capsize : scalar, optional\n       The length of the error bar caps in points.\n       Default: None, which will take the value from\n       :rc:`errorbar.capsize`.\n\n    error_kw : dict, optional\n        Dictionary of kwargs to be passed to the `~.Axes.errorbar`\n        method. Values of *ecolor* or *capsize* defined here take\n        precedence over the independent kwargs.\n\n    log : bool, default: False\n        If ``True``, set the x-axis to be log scale.\n\n    See also\n    --------\n    bar: Plot a vertical bar plot.\n\n    Notes\n    -----\n    The optional arguments *color*, *edgecolor*, *linewidth*,\n    *xerr*, and *yerr* can be either scalars or sequences of\n    length equal to the number of bars.  This enables you to use\n    bar as the basis for stacked bar charts, or candlestick plots.\n    Detail: *xerr* and *yerr* are passed directly to\n    :meth:`errorbar`, so they can also have shape 2xN for\n    independent specification of lower and upper errors.\n\n    Other optional kwargs:\n\n    %(Rectangle)s\n    \"\"\"\n    kwargs.setdefault('orientation', 'horizontal')\n    patches = self.bar(x=left, height=height, width=width, bottom=y,\n                       align=align, **kwargs)\n    return patches",
                "@_preprocess_data()\n@docstring.dedent_interpd\ndef broken_barh(self, xranges, yrange, **kwargs):\n    \"\"\"\n    Plot a horizontal sequence of rectangles.\n\n    A rectangle is drawn for each element of *xranges*. All rectangles\n    have the same vertical position and size defined by *yrange*.\n\n    This is a convenience function for instantiating a\n    `.BrokenBarHCollection`, adding it to the axes and autoscaling the\n    view.\n\n    Parameters\n    ----------\n    xranges : sequence of tuples (*xmin*, *xwidth*)\n        The x-positions and extends of the rectangles. For each tuple\n        (*xmin*, *xwidth*) a rectangle is drawn from *xmin* to *xmin* +\n        *xwidth*.\n    yrange : (*ymin*, *yheight*)\n        The y-position and extend for all the rectangles.\n\n    Other Parameters\n    ----------------\n    **kwargs : :class:`.BrokenBarHCollection` properties\n\n        Each *kwarg* can be either a single argument applying to all\n        rectangles, e.g.::\n\n            facecolors='black'\n\n        or a sequence of arguments over which is cycled, e.g.::\n\n            facecolors=('black', 'blue')\n\n        would create interleaving black and blue rectangles.\n\n        Supported keywords:\n\n        %(BrokenBarHCollection)s\n\n    Returns\n    -------\n    collection : A :class:`~.collections.BrokenBarHCollection`\n    \"\"\"\n    # process the unit information\n    if len(xranges):\n        xdata = cbook.safe_first_element(xranges)\n    else:\n        xdata = None\n    if len(yrange):\n        ydata = cbook.safe_first_element(yrange)\n    else:\n        ydata = None\n    self._process_unit_info(xdata=xdata,\n                            ydata=ydata,\n                            kwargs=kwargs)\n    xranges_conv = []\n    for xr in xranges:\n        if len(xr) != 2:\n            raise ValueError('each range in xrange must be a sequence '\n                             'with two elements (i.e. an Nx2 array)')\n        # convert the absolute values, not the x and dx...\n        x_conv = np.asarray(self.convert_xunits(xr[0]))\n        x1 = self._convert_dx(xr[1], xr[0], x_conv, self.convert_xunits)\n        xranges_conv.append((x_conv, x1))\n\n    yrange_conv = self.convert_yunits(yrange)\n\n    col = mcoll.BrokenBarHCollection(xranges_conv, yrange_conv, **kwargs)\n    self.add_collection(col, autolim=True)\n    self._request_autoscale_view()\n\n    return col",
                "@_preprocess_data()\ndef stem(self, *args, linefmt=None, markerfmt=None, basefmt=None, bottom=0,\n         label=None, use_line_collection=False):\n    \"\"\"\n    Create a stem plot.\n\n    A stem plot plots vertical lines at each *x* location from the baseline\n    to *y*, and places a marker there.\n\n    Call signature::\n\n      stem([x,] y, linefmt=None, markerfmt=None, basefmt=None)\n\n    The x-positions are optional. The formats may be provided either as\n    positional or as keyword-arguments.\n\n    Parameters\n    ----------\n    x : array-like, optional\n        The x-positions of the stems. Default: (0, 1, ..., len(y) - 1).\n\n    y : array-like\n        The y-values of the stem heads.\n\n    linefmt : str, optional\n        A string defining the properties of the vertical lines. Usually,\n        this will be a color or a color and a linestyle:\n\n        =========  =============\n        Character  Line Style\n        =========  =============\n        ``'-'``    solid line\n        ``'--'``   dashed line\n        ``'-.'``   dash-dot line\n        ``':'``    dotted line\n        =========  =============\n\n        Default: 'C0-', i.e. solid line with the first color of the color\n        cycle.\n\n        Note: While it is technically possible to specify valid formats\n        other than color or color and linestyle (e.g. 'rx' or '-.'), this\n        is beyond the intention of the method and will most likely not\n        result in a reasonable reasonable plot.\n\n    markerfmt : str, optional\n        A string defining the properties of the markers at the stem heads.\n        Default: 'C0o', i.e. filled circles with the first color of the\n        color cycle.\n\n    basefmt : str, default: 'C3-' ('C2-' in classic mode)\n        A format string defining the properties of the baseline.\n\n    bottom : float, default: 0\n        The y-position of the baseline.\n\n    label : str, default: None\n        The label to use for the stems in legends.\n\n    use_line_collection : bool, default: False\n        If ``True``, store and plot the stem lines as a\n        `~.collections.LineCollection` instead of individual lines. This\n        significantly increases performance, and will become the default\n        option in Matplotlib 3.3. If ``False``, defaults to the old\n        behavior of using a list of `.Line2D` objects.\n\n    Returns\n    -------\n    container : :class:`~matplotlib.container.StemContainer`\n        The container may be treated like a tuple\n        (*markerline*, *stemlines*, *baseline*)\n\n    Notes\n    -----\n    .. seealso::\n        The MATLAB function\n        `stem <http://www.mathworks.com/help/techdoc/ref/stem.html>`_\n        which inspired this method.\n    \"\"\"\n    if not 1 <= len(args) <= 5:\n        raise TypeError('stem expected between 1 and 5 positional '\n                        'arguments, got {}'.format(args))\n\n    if len(args) == 1:\n        y, = args\n        x = np.arange(len(y))\n        args = ()\n    else:\n        x, y, *args = args\n\n    self._process_unit_info(xdata=x, ydata=y)\n    x = self.convert_xunits(x)\n    y = self.convert_yunits(y)\n\n    # defaults for formats\n    if linefmt is None:\n        try:\n            # fallback to positional argument\n            linefmt = args[0]\n        except IndexError:\n            linecolor = 'C0'\n            linemarker = 'None'\n            linestyle = '-'\n        else:\n            linestyle, linemarker, linecolor = \\\n                _process_plot_format(linefmt)\n    else:\n        linestyle, linemarker, linecolor = _process_plot_format(linefmt)\n\n    if markerfmt is None:\n        try:\n            # fallback to positional argument\n            markerfmt = args[1]\n        except IndexError:\n            markercolor = 'C0'\n            markermarker = 'o'\n            markerstyle = 'None'\n        else:\n            markerstyle, markermarker, markercolor = \\\n                _process_plot_format(markerfmt)\n    else:\n        markerstyle, markermarker, markercolor = \\\n            _process_plot_format(markerfmt)\n\n    if basefmt is None:\n        try:\n            # fallback to positional argument\n            basefmt = args[2]\n        except IndexError:\n            if rcParams['_internal.classic_mode']:\n                basecolor = 'C2'\n            else:\n                basecolor = 'C3'\n            basemarker = 'None'\n            basestyle = '-'\n        else:\n            basestyle, basemarker, basecolor = \\\n                _process_plot_format(basefmt)\n    else:\n        basestyle, basemarker, basecolor = _process_plot_format(basefmt)\n\n    # New behaviour in 3.1 is to use a LineCollection for the stemlines\n    if use_line_collection:\n        stemlines = [((xi, bottom), (xi, yi)) for xi, yi in zip(x, y)]\n        if linestyle is None:\n            linestyle = rcParams['lines.linestyle']\n        stemlines = mcoll.LineCollection(stemlines, linestyles=linestyle,\n                                         colors=linecolor,\n                                         label='_nolegend_')\n        self.add_collection(stemlines)\n    # Old behaviour is to plot each of the lines individually\n    else:\n        cbook._warn_external(\n            'In Matplotlib 3.3 individual lines on a stem plot will be '\n            'added as a LineCollection instead of individual lines. '\n            'This significantly improves the performance of a stem plot. '\n            'To remove this warning and switch to the new behaviour, '\n            'set the \"use_line_collection\" keyword argument to True.')\n        stemlines = []\n        for xi, yi in zip(x, y):\n            l, = self.plot([xi, xi], [bottom, yi],\n                           color=linecolor, linestyle=linestyle,\n                           marker=linemarker, label=\"_nolegend_\")\n            stemlines.append(l)\n\n    markerline, = self.plot(x, y, color=markercolor, linestyle=markerstyle,\n                            marker=markermarker, label=\"_nolegend_\")\n\n    baseline, = self.plot([np.min(x), np.max(x)], [bottom, bottom],\n                          color=basecolor, linestyle=basestyle,\n                          marker=basemarker, label=\"_nolegend_\")\n\n    stem_container = StemContainer((markerline, stemlines, baseline),\n                                   label=label)\n    self.add_container(stem_container)\n    return stem_container",
                "@_preprocess_data(replace_names=[\"x\", \"explode\", \"labels\", \"colors\"])\ndef pie(self, x, explode=None, labels=None, colors=None,\n        autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1,\n        startangle=None, radius=None, counterclock=True,\n        wedgeprops=None, textprops=None, center=(0, 0),\n        frame=False, rotatelabels=False):\n    \"\"\"\n    Plot a pie chart.\n\n    Make a pie chart of array *x*.  The fractional area of each wedge is\n    given by ``x/sum(x)``.  If ``sum(x) < 1``, then the values of *x* give\n    the fractional area directly and the array will not be normalized. The\n    resulting pie will have an empty wedge of size ``1 - sum(x)``.\n\n    The wedges are plotted counterclockwise, by default starting from the\n    x-axis.\n\n    Parameters\n    ----------\n    x : array-like\n        The wedge sizes.\n\n    explode : array-like, default: None\n        If not *None*, is a ``len(x)`` array which specifies the fraction\n        of the radius with which to offset each wedge.\n\n    labels : list, default: None\n        A sequence of strings providing the labels for each wedge\n\n    colors : array-like, default: None\n        A sequence of colors through which the pie chart will cycle.  If\n        *None*, will use the colors in the currently active cycle.\n\n    autopct : None or str or callable, default: None\n        If not *None*, is a string or function used to label the wedges\n        with their numeric value.  The label will be placed inside the\n        wedge.  If it is a format string, the label will be ``fmt%pct``.\n        If it is a function, it will be called.\n\n    pctdistance : float, default: 0.6\n        The ratio between the center of each pie slice and the start of\n        the text generated by *autopct*.  Ignored if *autopct* is *None*.\n\n    shadow : bool, default: False\n        Draw a shadow beneath the pie.\n\n    labeldistance : float or None, default: 1.1\n        The radial distance at which the pie labels are drawn.\n        If set to ``None``, label are not drawn, but are stored for use in\n        ``legend()``\n\n    startangle : float, default: None\n        If not *None*, rotates the start of the pie chart by *angle*\n        degrees counterclockwise from the x-axis.\n\n    radius : float, default: None\n        The radius of the pie, if *radius* is *None* it will be set to 1.\n\n    counterclock : bool, default: True\n        Specify fractions direction, clockwise or counterclockwise.\n\n    wedgeprops : dict, default: None\n        Dict of arguments passed to the wedge objects making the pie.\n        For example, you can pass in ``wedgeprops = {'linewidth': 3}``\n        to set the width of the wedge border lines equal to 3.\n        For more details, look at the doc/arguments of the wedge object.\n        By default ``clip_on=False``.\n\n    textprops : dict, default: None\n        Dict of arguments to pass to the text objects.\n\n    center : (float, float), default: (0, 0)\n        The coordinates of the center of the chart.\n\n    frame : bool, default: False\n        Plot axes frame with the chart if true.\n\n    rotatelabels : bool, default: False\n        Rotate each label to the angle of the corresponding slice if true.\n\n    Returns\n    -------\n    patches : list\n        A sequence of :class:`matplotlib.patches.Wedge` instances\n\n    texts : list\n        A list of the label :class:`matplotlib.text.Text` instances.\n\n    autotexts : list\n        A list of :class:`~matplotlib.text.Text` instances for the numeric\n        labels. This will only be returned if the parameter *autopct* is\n        not *None*.\n\n    Notes\n    -----\n    The pie chart will probably look best if the figure and axes are\n    square, or the Axes aspect is equal.\n    This method sets the aspect ratio of the axis to \"equal\".\n    The axes aspect ratio can be controlled with `Axes.set_aspect`.\n    \"\"\"\n    self.set_aspect('equal')\n    # The use of float32 is \"historical\", but can't be changed without\n    # regenerating the test baselines.\n    x = np.asarray(x, np.float32)\n    if x.ndim != 1 and x.squeeze().ndim <= 1:\n        cbook.warn_deprecated(\n            \"3.1\", message=\"Non-1D inputs to pie() are currently \"\n            \"squeeze()d, but this behavior is deprecated since %(since)s \"\n            \"and will be removed %(removal)s; pass a 1D array instead.\")\n        x = np.atleast_1d(x.squeeze())\n\n    sx = x.sum()\n    if sx > 1:\n        x = x / sx\n\n    if labels is None:\n        labels = [''] * len(x)\n    if explode is None:\n        explode = [0] * len(x)\n    if len(x) != len(labels):\n        raise ValueError(\"'label' must be of length 'x'\")\n    if len(x) != len(explode):\n        raise ValueError(\"'explode' must be of length 'x'\")\n    if colors is None:\n        get_next_color = self._get_patches_for_fill.get_next_color\n    else:\n        color_cycle = itertools.cycle(colors)\n\n        def get_next_color():\n            return next(color_cycle)\n\n    if radius is None:\n        radius = 1\n\n    # Starting theta1 is the start fraction of the circle\n    if startangle is None:\n        theta1 = 0\n    else:\n        theta1 = startangle / 360.0\n\n    # set default values in wedge_prop\n    if wedgeprops is None:\n        wedgeprops = {}\n    wedgeprops.setdefault('clip_on', False)\n\n    if textprops is None:\n        textprops = {}\n    textprops.setdefault('clip_on', False)\n\n    texts = []\n    slices = []\n    autotexts = []\n\n    for frac, label, expl in zip(x, labels, explode):\n        x, y = center\n        theta2 = (theta1 + frac) if counterclock else (theta1 - frac)\n        thetam = 2 * np.pi * 0.5 * (theta1 + theta2)\n        x += expl * math.cos(thetam)\n        y += expl * math.sin(thetam)\n\n        w = mpatches.Wedge((x, y), radius, 360. * min(theta1, theta2),\n                           360. * max(theta1, theta2),\n                           facecolor=get_next_color(),\n                           **wedgeprops)\n        slices.append(w)\n        self.add_patch(w)\n        w.set_label(label)\n\n        if shadow:\n            # make sure to add a shadow after the call to\n            # add_patch so the figure and transform props will be\n            # set\n            shad = mpatches.Shadow(w, -0.02, -0.02)\n            shad.set_zorder(0.9 * w.get_zorder())\n            shad.set_label('_nolegend_')\n            self.add_patch(shad)\n\n        if labeldistance is not None:\n            xt = x + labeldistance * radius * math.cos(thetam)\n            yt = y + labeldistance * radius * math.sin(thetam)\n            label_alignment_h = 'left' if xt > 0 else 'right'\n            label_alignment_v = 'center'\n            label_rotation = 'horizontal'\n            if rotatelabels:\n                label_alignment_v = 'bottom' if yt > 0 else 'top'\n                label_rotation = (np.rad2deg(thetam)\n                                  + (0 if xt > 0 else 180))\n            props = dict(horizontalalignment=label_alignment_h,\n                         verticalalignment=label_alignment_v,\n                         rotation=label_rotation,\n                         size=rcParams['xtick.labelsize'])\n            props.update(textprops)\n\n            t = self.text(xt, yt, label, **props)\n\n            texts.append(t)\n\n        if autopct is not None:\n            xt = x + pctdistance * radius * math.cos(thetam)\n            yt = y + pctdistance * radius * math.sin(thetam)\n            if isinstance(autopct, str):\n                s = autopct % (100. * frac)\n            elif callable(autopct):\n                s = autopct(100. * frac)\n            else:\n                raise TypeError(\n                    'autopct must be callable or a format string')\n\n            props = dict(horizontalalignment='center',\n                         verticalalignment='center')\n            props.update(textprops)\n            t = self.text(xt, yt, s, **props)\n\n            autotexts.append(t)\n\n        theta1 = theta2\n\n    if not frame:\n        self.set_frame_on(False)\n\n        self.set_xlim((-1.25 + center[0],\n                       1.25 + center[0]))\n        self.set_ylim((-1.25 + center[1],\n                       1.25 + center[1]))\n        self.set_xticks([])\n        self.set_yticks([])\n\n    if autopct is None:\n        return slices, texts\n    else:\n        return slices, texts, autotexts",
                "@_preprocess_data(replace_names=[\"x\", \"y\", \"xerr\", \"yerr\"],\n                  label_namer=\"y\")\n@docstring.dedent_interpd\ndef errorbar(self, x, y, yerr=None, xerr=None,\n             fmt='', ecolor=None, elinewidth=None, capsize=None,\n             barsabove=False, lolims=False, uplims=False,\n             xlolims=False, xuplims=False, errorevery=1, capthick=None,\n             **kwargs):\n    \"\"\"\n    Plot y versus x as lines and/or markers with attached errorbars.\n\n    *x*, *y* define the data locations, *xerr*, *yerr* define the errorbar\n    sizes. By default, this draws the data markers/lines as well the\n    errorbars. Use fmt='none' to draw errorbars without any data markers.\n\n    Parameters\n    ----------\n    x, y : scalar or array-like\n        The data positions.\n\n    xerr, yerr : scalar or array-like, shape(N,) or shape(2, N), optional\n        The errorbar sizes:\n\n        - scalar: Symmetric +/- values for all data points.\n        - shape(N,): Symmetric +/-values for each data point.\n        - shape(2, N): Separate - and + values for each bar. First row\n          contains the lower errors, the second row contains the upper\n          errors.\n        - *None*: No errorbar.\n\n        Note that all error arrays should have *positive* values.\n\n        See :doc:`/gallery/statistics/errorbar_features`\n        for an example on the usage of ``xerr`` and ``yerr``.\n\n    fmt : str, default: ''\n        The format for the data points / data lines. See `.plot` for\n        details.\n\n        Use 'none' (case insensitive) to plot errorbars without any data\n        markers.\n\n    ecolor : color, default: None\n        The color of the errorbar lines.  If None, use the color of the\n        line connecting the markers.\n\n    elinewidth : scalar, default: None\n        The linewidth of the errorbar lines. If None, the linewidth of\n        the current style is used.\n\n    capsize : scalar, default: None\n        The length of the error bar caps in points. If None, it will take\n        the value from :rc:`errorbar.capsize`.\n\n    capthick : scalar, default: None\n        An alias to the keyword argument *markeredgewidth* (a.k.a. *mew*).\n        This setting is a more sensible name for the property that\n        controls the thickness of the error bar cap in points. For\n        backwards compatibility, if *mew* or *markeredgewidth* are given,\n        then they will over-ride *capthick*. This may change in future\n        releases.\n\n    barsabove : bool, default: False\n        If True, will plot the errorbars above the plot\n        symbols. Default is below.\n\n    lolims, uplims, xlolims, xuplims : bool, default: False\n        These arguments can be used to indicate that a value gives only\n        upper/lower limits. In that case a caret symbol is used to\n        indicate this. *lims*-arguments may be of the same type as *xerr*\n        and *yerr*.  To use limits with inverted axes, :meth:`set_xlim`\n        or :meth:`set_ylim` must be called before :meth:`errorbar`.\n\n    errorevery : int or (int, int), default: 1\n        draws error bars on a subset of the data. *errorevery* =N draws\n        error bars on the points (x[::N], y[::N]).\n        *errorevery* =(start, N) draws error bars on the points\n        (x[start::N], y[start::N]). e.g. errorevery=(6, 3)\n        adds error bars to the data at (x[6], x[9], x[12], x[15], ...).\n        Used to avoid overlapping error bars when two series share x-axis\n        values.\n\n    Returns\n    -------\n    container : :class:`~.container.ErrorbarContainer`\n        The container contains:\n\n        - plotline: `.Line2D` instance of x, y plot markers and/or line.\n        - caplines: A tuple of `.Line2D` instances of the error bar caps.\n        - barlinecols: A tuple of\n          :class:`~matplotlib.collections.LineCollection` with the\n          horizontal and vertical error ranges.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All other keyword arguments are passed on to the plot\n        command for the markers. For example, this code makes big red\n        squares with thick green edges::\n\n            x, y, yerr = rand(3, 10)\n            errorbar(x, y, yerr, marker='s', mfc='red',\n                     mec='green', ms=20, mew=4)\n\n        where *mfc*, *mec*, *ms* and *mew* are aliases for the longer\n        property names, *markerfacecolor*, *markeredgecolor*, *markersize*\n        and *markeredgewidth*.\n\n        Valid kwargs for the marker properties are `.Lines2D` properties:\n\n        %(_Line2D_docstr)s\n    \"\"\"\n    kwargs = cbook.normalize_kwargs(kwargs, mlines.Line2D)\n    # anything that comes in as 'None', drop so the default thing\n    # happens down stream\n    kwargs = {k: v for k, v in kwargs.items() if v is not None}\n    kwargs.setdefault('zorder', 2)\n\n    try:\n        offset, errorevery = errorevery\n    except TypeError:\n        offset = 0\n\n    if errorevery < 1 or int(errorevery) != errorevery:\n        raise ValueError(\n            'errorevery must be positive integer or tuple of integers')\n    if int(offset) != offset:\n        raise ValueError(\"errorevery's starting index must be an integer\")\n\n    self._process_unit_info(xdata=x, ydata=y, kwargs=kwargs)\n\n    plot_line = (fmt.lower() != 'none')\n    label = kwargs.pop(\"label\", None)\n\n    if fmt == '':\n        fmt_style_kwargs = {}\n    else:\n        fmt_style_kwargs = {k: v for k, v in\n                            zip(('linestyle', 'marker', 'color'),\n                                _process_plot_format(fmt))\n                            if v is not None}\n    if fmt == 'none':\n        # Remove alpha=0 color that _process_plot_format returns\n        fmt_style_kwargs.pop('color')\n\n    if ('color' in kwargs or 'color' in fmt_style_kwargs or\n            ecolor is not None):\n        base_style = {}\n        if 'color' in kwargs:\n            base_style['color'] = kwargs.pop('color')\n    else:\n        base_style = next(self._get_lines.prop_cycler)\n\n    base_style['label'] = '_nolegend_'\n    base_style.update(fmt_style_kwargs)\n    if 'color' not in base_style:\n        base_style['color'] = 'C0'\n    if ecolor is None:\n        ecolor = base_style['color']\n    # make sure all the args are iterable; use lists not arrays to\n    # preserve units\n    if not np.iterable(x):\n        x = [x]\n\n    if not np.iterable(y):\n        y = [y]\n\n    if xerr is not None:\n        if not np.iterable(xerr):\n            xerr = [xerr] * len(x)\n\n    if yerr is not None:\n        if not np.iterable(yerr):\n            yerr = [yerr] * len(y)\n\n    # make the style dict for the 'normal' plot line\n    plot_line_style = {\n        **base_style,\n        **kwargs,\n        'zorder': (kwargs['zorder'] - .1 if barsabove else\n                   kwargs['zorder'] + .1),\n    }\n\n    # make the style dict for the line collections (the bars)\n    eb_lines_style = dict(base_style)\n    eb_lines_style.pop('marker', None)\n    eb_lines_style.pop('linestyle', None)\n    eb_lines_style['color'] = ecolor\n\n    if elinewidth:\n        eb_lines_style['linewidth'] = elinewidth\n    elif 'linewidth' in kwargs:\n        eb_lines_style['linewidth'] = kwargs['linewidth']\n\n    for key in ('transform', 'alpha', 'zorder', 'rasterized'):\n        if key in kwargs:\n            eb_lines_style[key] = kwargs[key]\n\n    # set up cap style dictionary\n    eb_cap_style = dict(base_style)\n    # eject any marker information from format string\n    eb_cap_style.pop('marker', None)\n    eb_lines_style.pop('markerfacecolor', None)\n    eb_lines_style.pop('markeredgewidth', None)\n    eb_lines_style.pop('markeredgecolor', None)\n    eb_cap_style.pop('ls', None)\n    eb_cap_style['linestyle'] = 'none'\n    if capsize is None:\n        capsize = rcParams[\"errorbar.capsize\"]\n    if capsize > 0:\n        eb_cap_style['markersize'] = 2. * capsize\n    if capthick is not None:\n        eb_cap_style['markeredgewidth'] = capthick\n\n    # For backwards-compat, allow explicit setting of\n    # 'markeredgewidth' to over-ride capthick.\n    for key in ('markeredgewidth', 'transform', 'alpha',\n                'zorder', 'rasterized'):\n        if key in kwargs:\n            eb_cap_style[key] = kwargs[key]\n    eb_cap_style['color'] = ecolor\n\n    data_line = None\n    if plot_line:\n        data_line = mlines.Line2D(x, y, **plot_line_style)\n        self.add_line(data_line)\n\n    barcols = []\n    caplines = []\n\n    # arrays fine here, they are booleans and hence not units\n    lolims = np.broadcast_to(lolims, len(x)).astype(bool)\n    uplims = np.broadcast_to(uplims, len(x)).astype(bool)\n    xlolims = np.broadcast_to(xlolims, len(x)).astype(bool)\n    xuplims = np.broadcast_to(xuplims, len(x)).astype(bool)\n\n    everymask = np.zeros(len(x), bool)\n    everymask[offset::errorevery] = True\n\n    def xywhere(xs, ys, mask):\n        \"\"\"\n        return xs[mask], ys[mask] where mask is True but xs and\n        ys are not arrays\n        \"\"\"\n        assert len(xs) == len(ys)\n        assert len(xs) == len(mask)\n        xs = [thisx for thisx, b in zip(xs, mask) if b]\n        ys = [thisy for thisy, b in zip(ys, mask) if b]\n        return xs, ys\n\n    def extract_err(err, data):\n        \"\"\"\n        Private function to parse *err* and subtract/add it to *data*.\n\n        Both *err* and *data* are already iterables at this point.\n        \"\"\"\n        try:  # Asymmetric error: pair of 1D iterables.\n            a, b = err\n            iter(a)\n            iter(b)\n        except (TypeError, ValueError):\n            a = b = err  # Symmetric error: 1D iterable.\n        # This could just be `np.ndim(a) > 1 and np.ndim(b) > 1`, except\n        # for the (undocumented, but tested) support for (n, 1) arrays.\n        a_sh = np.shape(a)\n        b_sh = np.shape(b)\n        if (len(a_sh) > 2 or (len(a_sh) == 2 and a_sh[1] != 1)\n                or len(b_sh) > 2 or (len(b_sh) == 2 and b_sh[1] != 1)):\n            raise ValueError(\n                \"err must be a scalar or a 1D or (2, n) array-like\")\n        if len(a_sh) == 2 or len(b_sh) == 2:\n            cbook.warn_deprecated(\n                \"3.1\", message=\"Support for passing a (n, 1)-shaped error \"\n                \"array to errorbar() is deprecated since Matplotlib \"\n                \"%(since)s and will be removed %(removal)s; pass a 1D \"\n                \"array instead.\")\n        # Using list comprehensions rather than arrays to preserve units.\n        for e in [a, b]:\n            if len(data) != len(e):\n                raise ValueError(\n                    f\"The lengths of the data ({len(data)}) and the \"\n                    f\"error {len(e)} do not match\")\n        low = [v - e for v, e in zip(data, a)]\n        high = [v + e for v, e in zip(data, b)]\n        return low, high\n\n    if xerr is not None:\n        left, right = extract_err(xerr, x)\n        # select points without upper/lower limits in x and\n        # draw normal errorbars for these points\n        noxlims = ~(xlolims | xuplims)\n        if noxlims.any() or len(noxlims) == 0:\n            yo, _ = xywhere(y, right, noxlims & everymask)\n            lo, ro = xywhere(left, right, noxlims & everymask)\n            barcols.append(self.hlines(yo, lo, ro, **eb_lines_style))\n            if capsize > 0:\n                caplines.append(mlines.Line2D(lo, yo, marker='|',\n                                              **eb_cap_style))\n                caplines.append(mlines.Line2D(ro, yo, marker='|',\n                                              **eb_cap_style))\n\n        if xlolims.any():\n            yo, _ = xywhere(y, right, xlolims & everymask)\n            lo, ro = xywhere(x, right, xlolims & everymask)\n            barcols.append(self.hlines(yo, lo, ro, **eb_lines_style))\n            rightup, yup = xywhere(right, y, xlolims & everymask)\n            if self.xaxis_inverted():\n                marker = mlines.CARETLEFTBASE\n            else:\n                marker = mlines.CARETRIGHTBASE\n            caplines.append(\n                mlines.Line2D(rightup, yup, ls='None', marker=marker,\n                              **eb_cap_style))\n            if capsize > 0:\n                xlo, ylo = xywhere(x, y, xlolims & everymask)\n                caplines.append(mlines.Line2D(xlo, ylo, marker='|',\n                                              **eb_cap_style))\n\n        if xuplims.any():\n            yo, _ = xywhere(y, right, xuplims & everymask)\n            lo, ro = xywhere(left, x, xuplims & everymask)\n            barcols.append(self.hlines(yo, lo, ro, **eb_lines_style))\n            leftlo, ylo = xywhere(left, y, xuplims & everymask)\n            if self.xaxis_inverted():\n                marker = mlines.CARETRIGHTBASE\n            else:\n                marker = mlines.CARETLEFTBASE\n            caplines.append(\n                mlines.Line2D(leftlo, ylo, ls='None', marker=marker,\n                              **eb_cap_style))\n            if capsize > 0:\n                xup, yup = xywhere(x, y, xuplims & everymask)\n                caplines.append(mlines.Line2D(xup, yup, marker='|',\n                                              **eb_cap_style))\n\n    if yerr is not None:\n        lower, upper = extract_err(yerr, y)\n        # select points without upper/lower limits in y and\n        # draw normal errorbars for these points\n        noylims = ~(lolims | uplims)\n        if noylims.any() or len(noylims) == 0:\n            xo, _ = xywhere(x, lower, noylims & everymask)\n            lo, uo = xywhere(lower, upper, noylims & everymask)\n            barcols.append(self.vlines(xo, lo, uo, **eb_lines_style))\n            if capsize > 0:\n                caplines.append(mlines.Line2D(xo, lo, marker='_',\n                                              **eb_cap_style))\n                caplines.append(mlines.Line2D(xo, uo, marker='_',\n                                              **eb_cap_style))\n\n        if lolims.any():\n            xo, _ = xywhere(x, lower, lolims & everymask)\n            lo, uo = xywhere(y, upper, lolims & everymask)\n            barcols.append(self.vlines(xo, lo, uo, **eb_lines_style))\n            xup, upperup = xywhere(x, upper, lolims & everymask)\n            if self.yaxis_inverted():\n                marker = mlines.CARETDOWNBASE\n            else:\n                marker = mlines.CARETUPBASE\n            caplines.append(\n                mlines.Line2D(xup, upperup, ls='None', marker=marker,\n                              **eb_cap_style))\n            if capsize > 0:\n                xlo, ylo = xywhere(x, y, lolims & everymask)\n                caplines.append(mlines.Line2D(xlo, ylo, marker='_',\n                                              **eb_cap_style))\n\n        if uplims.any():\n            xo, _ = xywhere(x, lower, uplims & everymask)\n            lo, uo = xywhere(lower, y, uplims & everymask)\n            barcols.append(self.vlines(xo, lo, uo, **eb_lines_style))\n            xlo, lowerlo = xywhere(x, lower, uplims & everymask)\n            if self.yaxis_inverted():\n                marker = mlines.CARETUPBASE\n            else:\n                marker = mlines.CARETDOWNBASE\n            caplines.append(\n                mlines.Line2D(xlo, lowerlo, ls='None', marker=marker,\n                              **eb_cap_style))\n            if capsize > 0:\n                xup, yup = xywhere(x, y, uplims & everymask)\n                caplines.append(mlines.Line2D(xup, yup, marker='_',\n                                              **eb_cap_style))\n    for l in caplines:\n        self.add_line(l)\n\n    self._request_autoscale_view()\n    errorbar_container = ErrorbarContainer((data_line, tuple(caplines),\n                                            tuple(barcols)),\n                                           has_xerr=(xerr is not None),\n                                           has_yerr=(yerr is not None),\n                                           label=label)\n    self.containers.append(errorbar_container)\n\n    return errorbar_container  # (l0, caplines, barcols)",
                "@cbook._rename_parameter(\"3.1\", \"manage_xticks\", \"manage_ticks\")\n@_preprocess_data()\ndef boxplot(self, x, notch=None, sym=None, vert=None, whis=None,\n            positions=None, widths=None, patch_artist=None,\n            bootstrap=None, usermedians=None, conf_intervals=None,\n            meanline=None, showmeans=None, showcaps=None,\n            showbox=None, showfliers=None, boxprops=None,\n            labels=None, flierprops=None, medianprops=None,\n            meanprops=None, capprops=None, whiskerprops=None,\n            manage_ticks=True, autorange=False, zorder=None):\n    \"\"\"\n    Make a box and whisker plot.\n\n    Make a box and whisker plot for each column of ``x`` or each\n    vector in sequence ``x``.  The box extends from the lower to\n    upper quartile values of the data, with a line at the median.\n    The whiskers extend from the box to show the range of the\n    data.  Flier points are those past the end of the whiskers.\n\n    Parameters\n    ----------\n    x : Array or a sequence of vectors.\n        The input data.\n\n    notch : bool, default: False\n        If `True`, will produce a notched box plot. Otherwise, a\n        rectangular boxplot is produced. The notches represent the\n        confidence interval (CI) around the median. See the entry\n        for the ``bootstrap`` parameter for information regarding\n        how the locations of the notches are computed.\n\n        .. note::\n\n            In cases where the values of the CI are less than the\n            lower quartile or greater than the upper quartile, the\n            notches will extend beyond the box, giving it a\n            distinctive \"flipped\" appearance. This is expected\n            behavior and consistent with other statistical\n            visualization packages.\n\n    sym : str, optional\n        The default symbol for flier points. Enter an empty string\n        ('') if you don't want to show fliers. If `None`, then the\n        fliers default to 'b+'  If you want more control use the\n        flierprops kwarg.\n\n    vert : bool, default: True\n        If `True`, draws vertical boxes.\n        If `False`, draw horizontal boxes.\n\n    whis : float or (float, float), default: 1.5\n        The position of the whiskers.\n\n        If a float, the lower whisker is at the lowest datum above\n        ``Q1 - whis*(Q3-Q1)``, and the upper whisker at the highest datum\n        below ``Q3 + whis*(Q3-Q1)``, where Q1 and Q3 are the first and\n        third quartiles.  The default value of ``whis = 1.5`` corresponds\n        to Tukey's original definition of boxplots.\n\n        If a pair of floats, they indicate the percentiles at which to\n        draw the whiskers (e.g., (5, 95)).  In particular, setting this to\n        (0, 100) results in whiskers covering the whole range of the data.\n        \"range\" is a deprecated synonym for (0, 100).\n\n        In the edge case where ``Q1 == Q3``, *whis* is automatically set\n        to (0, 100) (cover the whole range of the data) if *autorange* is\n        True.\n\n        Beyond the whiskers, data are considered outliers and are plotted\n        as individual points.\n\n    bootstrap : int, optional\n        Specifies whether to bootstrap the confidence intervals\n        around the median for notched boxplots. If ``bootstrap`` is\n        None, no bootstrapping is performed, and notches are\n        calculated using a Gaussian-based asymptotic approximation\n        (see McGill, R., Tukey, J.W., and Larsen, W.A., 1978, and\n        Kendall and Stuart, 1967). Otherwise, bootstrap specifies\n        the number of times to bootstrap the median to determine its\n        95% confidence intervals. Values between 1000 and 10000 are\n        recommended.\n\n    usermedians : array-like, optional\n        An array or sequence whose first dimension (or length) is\n        compatible with ``x``. This overrides the medians computed\n        by matplotlib for each element of ``usermedians`` that is not\n        `None`. When an element of ``usermedians`` is None, the median\n        will be computed by matplotlib as normal.\n\n    conf_intervals : array-like, optional\n        Array or sequence whose first dimension (or length) is\n        compatible with ``x`` and whose second dimension is 2. When\n        the an element of ``conf_intervals`` is not None, the\n        notch locations computed by matplotlib are overridden\n        (provided ``notch`` is `True`). When an element of\n        ``conf_intervals`` is `None`, the notches are computed by the\n        method specified by the other kwargs (e.g., ``bootstrap``).\n\n    positions : array-like, optional\n        Sets the positions of the boxes. The ticks and limits are\n        automatically set to match the positions. Defaults to\n        `range(1, N+1)` where N is the number of boxes to be drawn.\n\n    widths : scalar or array-like\n        Sets the width of each box either with a scalar or a\n        sequence. The default is 0.5, or ``0.15*(distance between\n        extreme positions)``, if that is smaller.\n\n    patch_artist : bool, default: False\n        If `False` produces boxes with the Line2D artist. Otherwise,\n        boxes and drawn with Patch artists.\n\n    labels : sequence, optional\n        Labels for each dataset. Length must be compatible with\n        dimensions of ``x``.\n\n    manage_ticks : bool, default: True\n        If True, the tick locations and labels will be adjusted to match\n        the boxplot positions.\n\n    autorange : bool, default: False\n        When `True` and the data are distributed such that the 25th and\n        75th percentiles are equal, ``whis`` is set to (0, 100) such\n        that the whisker ends are at the minimum and maximum of the data.\n\n    meanline : bool, default: False\n        If `True` (and ``showmeans`` is `True`), will try to render\n        the mean as a line spanning the full width of the box\n        according to ``meanprops`` (see below). Not recommended if\n        ``shownotches`` is also True. Otherwise, means will be shown\n        as points.\n\n    zorder : scalar, default: None\n        Sets the zorder of the boxplot.\n\n    Other Parameters\n    ----------------\n    showcaps : bool, default: True\n        Show the caps on the ends of whiskers.\n    showbox : bool, default: True\n        Show the central box.\n    showfliers : bool, default: True\n        Show the outliers beyond the caps.\n    showmeans : bool, default: False\n        Show the arithmetic means.\n    capprops : dict, default: None\n        The style of the caps.\n    boxprops : dict, default: None\n        The style of the box.\n    whiskerprops : dict, default: None\n        The style of the whiskers.\n    flierprops : dict, default: None\n        The style of the fliers.\n    medianprops : dict, default: None\n        The style of the median.\n    meanprops : dict, default: None\n        The style of the mean.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the boxplot to a list\n      of the `.Line2D` instances created. That dictionary has the\n      following keys (assuming vertical boxplots):\n\n      - ``boxes``: the main body of the boxplot showing the\n        quartiles and the median's confidence intervals if\n        enabled.\n\n      - ``medians``: horizontal lines at the median of each box.\n\n      - ``whiskers``: the vertical lines extending to the most\n        extreme, non-outlier data points.\n\n      - ``caps``: the horizontal lines at the ends of the\n        whiskers.\n\n      - ``fliers``: points representing data that extend beyond\n        the whiskers (fliers).\n\n      - ``means``: points or lines representing the means.\n\n    \"\"\"\n\n    # Missing arguments default to rcParams.\n    if whis is None:\n        whis = rcParams['boxplot.whiskers']\n    if bootstrap is None:\n        bootstrap = rcParams['boxplot.bootstrap']\n\n    bxpstats = cbook.boxplot_stats(x, whis=whis, bootstrap=bootstrap,\n                                   labels=labels, autorange=autorange)\n    if notch is None:\n        notch = rcParams['boxplot.notch']\n    if vert is None:\n        vert = rcParams['boxplot.vertical']\n    if patch_artist is None:\n        patch_artist = rcParams['boxplot.patchartist']\n    if meanline is None:\n        meanline = rcParams['boxplot.meanline']\n    if showmeans is None:\n        showmeans = rcParams['boxplot.showmeans']\n    if showcaps is None:\n        showcaps = rcParams['boxplot.showcaps']\n    if showbox is None:\n        showbox = rcParams['boxplot.showbox']\n    if showfliers is None:\n        showfliers = rcParams['boxplot.showfliers']\n\n    if boxprops is None:\n        boxprops = {}\n    if whiskerprops is None:\n        whiskerprops = {}\n    if capprops is None:\n        capprops = {}\n    if medianprops is None:\n        medianprops = {}\n    if meanprops is None:\n        meanprops = {}\n    if flierprops is None:\n        flierprops = {}\n\n    if patch_artist:\n        boxprops['linestyle'] = 'solid'  # Not consistent with bxp.\n        if 'color' in boxprops:\n            boxprops['edgecolor'] = boxprops.pop('color')\n\n    # if non-default sym value, put it into the flier dictionary\n    # the logic for providing the default symbol ('b+') now lives\n    # in bxp in the initial value of final_flierprops\n    # handle all of the *sym* related logic here so we only have to pass\n    # on the flierprops dict.\n    if sym is not None:\n        # no-flier case, which should really be done with\n        # 'showfliers=False' but none-the-less deal with it to keep back\n        # compatibility\n        if sym == '':\n            # blow away existing dict and make one for invisible markers\n            flierprops = dict(linestyle='none', marker='', color='none')\n            # turn the fliers off just to be safe\n            showfliers = False\n        # now process the symbol string\n        else:\n            # process the symbol string\n            # discarded linestyle\n            _, marker, color = _process_plot_format(sym)\n            # if we have a marker, use it\n            if marker is not None:\n                flierprops['marker'] = marker\n            # if we have a color, use it\n            if color is not None:\n                # assume that if color is passed in the user want\n                # filled symbol, if the users want more control use\n                # flierprops\n                flierprops['color'] = color\n                flierprops['markerfacecolor'] = color\n                flierprops['markeredgecolor'] = color\n\n    # replace medians if necessary:\n    if usermedians is not None:\n        if (len(np.ravel(usermedians)) != len(bxpstats) or\n                np.shape(usermedians)[0] != len(bxpstats)):\n            raise ValueError('usermedians length not compatible with x')\n        else:\n            # reassign medians as necessary\n            for stats, med in zip(bxpstats, usermedians):\n                if med is not None:\n                    stats['med'] = med\n\n    if conf_intervals is not None:\n        if np.shape(conf_intervals)[0] != len(bxpstats):\n            err_mess = 'conf_intervals length not compatible with x'\n            raise ValueError(err_mess)\n        else:\n            for stats, ci in zip(bxpstats, conf_intervals):\n                if ci is not None:\n                    if len(ci) != 2:\n                        raise ValueError('each confidence interval must '\n                                         'have two values')\n                    else:\n                        if ci[0] is not None:\n                            stats['cilo'] = ci[0]\n                        if ci[1] is not None:\n                            stats['cihi'] = ci[1]\n\n    artists = self.bxp(bxpstats, positions=positions, widths=widths,\n                       vert=vert, patch_artist=patch_artist,\n                       shownotches=notch, showmeans=showmeans,\n                       showcaps=showcaps, showbox=showbox,\n                       boxprops=boxprops, flierprops=flierprops,\n                       medianprops=medianprops, meanprops=meanprops,\n                       meanline=meanline, showfliers=showfliers,\n                       capprops=capprops, whiskerprops=whiskerprops,\n                       manage_ticks=manage_ticks, zorder=zorder)\n    return artists",
                "@cbook._rename_parameter(\"3.1\", \"manage_xticks\", \"manage_ticks\")\ndef bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n    \"\"\"\n    Drawing function for box and whisker plots.\n\n    Make a box and whisker plot for each column of *x* or each\n    vector in sequence *x*.  The box extends from the lower to\n    upper quartile values of the data, with a line at the median.\n    The whiskers extend from the box to show the range of the\n    data.  Flier points are those past the end of the whiskers.\n\n    Parameters\n    ----------\n    bxpstats : list of dicts\n      A list of dictionaries containing stats for each boxplot.\n      Required keys are:\n\n      - ``med``: The median (scalar float).\n\n      - ``q1``: The first quartile (25th percentile) (scalar\n        float).\n\n      - ``q3``: The third quartile (75th percentile) (scalar\n        float).\n\n      - ``whislo``: Lower bound of the lower whisker (scalar\n        float).\n\n      - ``whishi``: Upper bound of the upper whisker (scalar\n        float).\n\n      Optional keys are:\n\n      - ``mean``: The mean (scalar float). Needed if\n        ``showmeans=True``.\n\n      - ``fliers``: Data beyond the whiskers (sequence of floats).\n        Needed if ``showfliers=True``.\n\n      - ``cilo`` & ``cihi``: Lower and upper confidence intervals\n        about the median. Needed if ``shownotches=True``.\n\n      - ``label``: Name of the dataset (string). If available,\n        this will be used a tick label for the boxplot\n\n    positions : array-like, default: [1, 2, ..., n]\n      Sets the positions of the boxes. The ticks and limits\n      are automatically set to match the positions.\n\n    widths : array-like, default: None\n      Either a scalar or a vector and sets the width of each\n      box. The default is ``0.15*(distance between extreme\n      positions)``, clipped to no less than 0.15 and no more than\n      0.5.\n\n    vert : bool, default: True\n      If `True` (default), makes the boxes vertical.  If `False`,\n      makes horizontal boxes.\n\n    patch_artist : bool, default: False\n      If `False` produces boxes with the `.Line2D` artist.\n      If `True` produces boxes with the `~matplotlib.patches.Patch` artist.\n\n    shownotches : bool, default: False\n      If `False` (default), produces a rectangular box plot.\n      If `True`, will produce a notched box plot\n\n    showmeans : bool, default: False\n      If `True`, will toggle on the rendering of the means\n\n    showcaps  : bool, default: True\n      If `True`, will toggle on the rendering of the caps\n\n    showbox  : bool, default: True\n      If `True`, will toggle on the rendering of the box\n\n    showfliers : bool, default: True\n      If `True`, will toggle on the rendering of the fliers\n\n    boxprops : dict or None (default)\n      If provided, will set the plotting style of the boxes\n\n    whiskerprops : dict or None (default)\n      If provided, will set the plotting style of the whiskers\n\n    capprops : dict or None (default)\n      If provided, will set the plotting style of the caps\n\n    flierprops : dict or None (default)\n      If provided will set the plotting style of the fliers\n\n    medianprops : dict or None (default)\n      If provided, will set the plotting style of the medians\n\n    meanprops : dict or None (default)\n      If provided, will set the plotting style of the means\n\n    meanline : bool, default: False\n      If `True` (and *showmeans* is `True`), will try to render the mean\n      as a line spanning the full width of the box according to\n      *meanprops*. Not recommended if *shownotches* is also True.\n      Otherwise, means will be shown as points.\n\n    manage_ticks : bool, default: True\n      If True, the tick locations and labels will be adjusted to match the\n      boxplot positions.\n\n    zorder : scalar, default: None\n      The zorder of the resulting boxplot.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the boxplot to a list\n      of the `.Line2D` instances created. That dictionary has the\n      following keys (assuming vertical boxplots):\n\n      - ``boxes``: the main body of the boxplot showing the\n        quartiles and the median's confidence intervals if\n        enabled.\n\n      - ``medians``: horizontal lines at the median of each box.\n\n      - ``whiskers``: the vertical lines extending to the most\n        extreme, non-outlier data points.\n\n      - ``caps``: the horizontal lines at the ends of the\n        whiskers.\n\n      - ``fliers``: points representing data that extend beyond\n        the whiskers (fliers).\n\n      - ``means``: points or lines representing the means.\n\n    Examples\n    --------\n    .. plot:: gallery/statistics/bxp.py\n\n    \"\"\"\n    # lists of artists to be output\n    whiskers = []\n    caps = []\n    boxes = []\n    medians = []\n    means = []\n    fliers = []\n\n    # empty list of xticklabels\n    datalabels = []\n\n    # Use default zorder if none specified\n    if zorder is None:\n        zorder = mlines.Line2D.zorder\n\n    zdelta = 0.1\n\n    def line_props_with_rcdefaults(subkey, explicit, zdelta=0):\n        d = {k.split('.')[-1]: v for k, v in rcParams.items()\n             if k.startswith(f'boxplot.{subkey}')}\n        d['zorder'] = zorder + zdelta\n        if explicit is not None:\n            d.update(\n                cbook.normalize_kwargs(explicit, mlines.Line2D._alias_map))\n        return d\n\n    # box properties\n    if patch_artist:\n        final_boxprops = dict(\n            linestyle=rcParams['boxplot.boxprops.linestyle'],\n            linewidth=rcParams['boxplot.boxprops.linewidth'],\n            edgecolor=rcParams['boxplot.boxprops.color'],\n            facecolor=('white' if rcParams['_internal.classic_mode'] else\n                       rcParams['patch.facecolor']),\n            zorder=zorder,\n        )\n        if boxprops is not None:\n            final_boxprops.update(\n                cbook.normalize_kwargs(\n                    boxprops, mpatches.PathPatch._alias_map))\n    else:\n        final_boxprops = line_props_with_rcdefaults('boxprops', boxprops)\n    final_whiskerprops = line_props_with_rcdefaults(\n        'whiskerprops', whiskerprops)\n    final_capprops = line_props_with_rcdefaults(\n        'capprops', capprops)\n    final_flierprops = line_props_with_rcdefaults(\n        'flierprops', flierprops)\n    final_medianprops = line_props_with_rcdefaults(\n        'medianprops', medianprops, zdelta)\n    final_meanprops = line_props_with_rcdefaults(\n        'meanprops', meanprops, zdelta)\n    removed_prop = 'marker' if meanline else 'linestyle'\n    # Only remove the property if it's not set explicitly as a parameter.\n    if meanprops is None or removed_prop not in meanprops:\n        final_meanprops[removed_prop] = ''\n\n    def to_vc(xs, ys):\n        # convert arguments to verts and codes, append (0, 0) (ignored).\n        verts = np.append(np.column_stack([xs, ys]), [(0, 0)], 0)\n        codes = ([mpath.Path.MOVETO]\n                 + [mpath.Path.LINETO] * (len(verts) - 2)\n                 + [mpath.Path.CLOSEPOLY])\n        return verts, codes\n\n    def patch_list(xs, ys, **kwargs):\n        verts, codes = to_vc(xs, ys)\n        path = mpath.Path(verts, codes)\n        patch = mpatches.PathPatch(path, **kwargs)\n        self.add_artist(patch)\n        return [patch]\n\n    # vertical or horizontal plot?\n    if vert:\n        def doplot(*args, **kwargs):\n            return self.plot(*args, **kwargs)\n\n        def dopatch(xs, ys, **kwargs):\n            return patch_list(xs, ys, **kwargs)\n\n    else:\n        def doplot(*args, **kwargs):\n            shuffled = []\n            for i in range(0, len(args), 2):\n                shuffled.extend([args[i + 1], args[i]])\n            return self.plot(*shuffled, **kwargs)\n\n        def dopatch(xs, ys, **kwargs):\n            xs, ys = ys, xs  # flip X, Y\n            return patch_list(xs, ys, **kwargs)\n\n    # input validation\n    N = len(bxpstats)\n    datashape_message = (\"List of boxplot statistics and `{0}` \"\n                         \"values must have same the length\")\n    # check position\n    if positions is None:\n        positions = list(range(1, N + 1))\n    elif len(positions) != N:\n        raise ValueError(datashape_message.format(\"positions\"))\n\n    positions = np.array(positions)\n    if len(positions) > 0 and not isinstance(positions[0], Number):\n        raise TypeError(\"positions should be an iterable of numbers\")\n\n    # width\n    if widths is None:\n        widths = [np.clip(0.15 * np.ptp(positions), 0.15, 0.5)] * N\n    elif np.isscalar(widths):\n        widths = [widths] * N\n    elif len(widths) != N:\n        raise ValueError(datashape_message.format(\"widths\"))\n\n    for pos, width, stats in zip(positions, widths, bxpstats):\n        # try to find a new label\n        datalabels.append(stats.get('label', pos))\n\n        # whisker coords\n        whisker_x = np.ones(2) * pos\n        whiskerlo_y = np.array([stats['q1'], stats['whislo']])\n        whiskerhi_y = np.array([stats['q3'], stats['whishi']])\n\n        # cap coords\n        cap_left = pos - width * 0.25\n        cap_right = pos + width * 0.25\n        cap_x = np.array([cap_left, cap_right])\n        cap_lo = np.ones(2) * stats['whislo']\n        cap_hi = np.ones(2) * stats['whishi']\n\n        # box and median coords\n        box_left = pos - width * 0.5\n        box_right = pos + width * 0.5\n        med_y = [stats['med'], stats['med']]\n\n        # notched boxes\n        if shownotches:\n            box_x = [box_left, box_right, box_right, cap_right, box_right,\n                     box_right, box_left, box_left, cap_left, box_left,\n                     box_left]\n            box_y = [stats['q1'], stats['q1'], stats['cilo'],\n                     stats['med'], stats['cihi'], stats['q3'],\n                     stats['q3'], stats['cihi'], stats['med'],\n                     stats['cilo'], stats['q1']]\n            med_x = cap_x\n\n        # plain boxes\n        else:\n            box_x = [box_left, box_right, box_right, box_left, box_left]\n            box_y = [stats['q1'], stats['q1'], stats['q3'], stats['q3'],\n                     stats['q1']]\n            med_x = [box_left, box_right]\n\n        # maybe draw the box:\n        if showbox:\n            if patch_artist:\n                boxes.extend(dopatch(box_x, box_y, **final_boxprops))\n            else:\n                boxes.extend(doplot(box_x, box_y, **final_boxprops))\n\n        # draw the whiskers\n        whiskers.extend(doplot(\n            whisker_x, whiskerlo_y, **final_whiskerprops\n        ))\n        whiskers.extend(doplot(\n            whisker_x, whiskerhi_y, **final_whiskerprops\n        ))\n\n        # maybe draw the caps:\n        if showcaps:\n            caps.extend(doplot(cap_x, cap_lo, **final_capprops))\n            caps.extend(doplot(cap_x, cap_hi, **final_capprops))\n\n        # draw the medians\n        medians.extend(doplot(med_x, med_y, **final_medianprops))\n\n        # maybe draw the means\n        if showmeans:\n            if meanline:\n                means.extend(doplot(\n                    [box_left, box_right], [stats['mean'], stats['mean']],\n                    **final_meanprops\n                ))\n            else:\n                means.extend(doplot(\n                    [pos], [stats['mean']], **final_meanprops\n                ))\n\n        # maybe draw the fliers\n        if showfliers:\n            # fliers coords\n            flier_x = np.full(len(stats['fliers']), pos, dtype=np.float64)\n            flier_y = stats['fliers']\n\n            fliers.extend(doplot(\n                flier_x, flier_y, **final_flierprops\n            ))\n\n    if manage_ticks:\n        axis_name = \"x\" if vert else \"y\"\n        interval = getattr(self.dataLim, f\"interval{axis_name}\")\n        axis = getattr(self, f\"{axis_name}axis\")\n        positions = axis.convert_units(positions)\n        # The 0.5 additional padding ensures reasonable-looking boxes\n        # even when drawing a single box.  We set the sticky edge to\n        # prevent margins expansion, in order to match old behavior (back\n        # when separate calls to boxplot() would completely reset the axis\n        # limits regardless of what was drawn before).  The sticky edges\n        # are attached to the median lines, as they are always present.\n        interval[:] = (min(interval[0], min(positions) - .5),\n                       max(interval[1], max(positions) + .5))\n        for median, position in zip(medians, positions):\n            getattr(median.sticky_edges, axis_name).extend(\n                [position - .5, position + .5])\n        # Modified from Axis.set_ticks and Axis.set_ticklabels.\n        locator = axis.get_major_locator()\n        if not isinstance(axis.get_major_locator(),\n                          mticker.FixedLocator):\n            locator = mticker.FixedLocator([])\n            axis.set_major_locator(locator)\n        locator.locs = np.array([*locator.locs, *positions])\n        formatter = axis.get_major_formatter()\n        if not isinstance(axis.get_major_formatter(),\n                          mticker.FixedFormatter):\n            formatter = mticker.FixedFormatter([])\n            axis.set_major_formatter(formatter)\n        formatter.seq = [*formatter.seq, *datalabels]\n\n        self._request_autoscale_view(\n            scalex=self._autoscaleXon, scaley=self._autoscaleYon)\n\n    return dict(whiskers=whiskers, caps=caps, boxes=boxes,\n                medians=medians, fliers=fliers, means=means)",
                "@staticmethod\ndef _parse_scatter_color_args(c, edgecolors, kwargs, xsize,\n                              get_next_color_func):\n    \"\"\"\n    Helper function to process color related arguments of `.Axes.scatter`.\n\n    Argument precedence for facecolors:\n\n    - c (if not None)\n    - kwargs['facecolors']\n    - kwargs['facecolor']\n    - kwargs['color'] (==kwcolor)\n    - 'b' if in classic mode else the result of ``get_next_color_func()``\n\n    Argument precedence for edgecolors:\n\n    - edgecolors (is an explicit kw argument in scatter())\n    - kwargs['edgecolor']\n    - kwargs['color'] (==kwcolor)\n    - 'face' if not in classic mode else None\n\n    Parameters\n    ----------\n    c : color or sequence or sequence of color or None\n        See argument description of `.Axes.scatter`.\n    edgecolors : color or sequence of color or {'face', 'none'} or None\n        See argument description of `.Axes.scatter`.\n    kwargs : dict\n        Additional kwargs. If these keys exist, we pop and process them:\n        'facecolors', 'facecolor', 'edgecolor', 'color'\n        Note: The dict is modified by this function.\n    xsize : int\n        The size of the x and y arrays passed to `.Axes.scatter`.\n    get_next_color_func : callable\n        A callable that returns a color. This color is used as facecolor\n        if no other color is provided.\n\n        Note, that this is a function rather than a fixed color value to\n        support conditional evaluation of the next color.  As of the\n        current implementation obtaining the next color from the\n        property cycle advances the cycle. This must only happen if we\n        actually use the color, which will only be decided within this\n        method.\n\n    Returns\n    -------\n    c\n        The input *c* if it was not *None*, else a color derived from the\n        other inputs or defaults.\n    colors : array(N, 4) or None\n        The facecolors as RGBA values, or *None* if a colormap is used.\n    edgecolors\n        The edgecolor.\n\n    \"\"\"\n    facecolors = kwargs.pop('facecolors', None)\n    facecolors = kwargs.pop('facecolor', facecolors)\n    edgecolors = kwargs.pop('edgecolor', edgecolors)\n\n    kwcolor = kwargs.pop('color', None)\n\n    if kwcolor is not None and c is not None:\n        raise ValueError(\"Supply a 'c' argument or a 'color'\"\n                         \" kwarg but not both; they differ but\"\n                         \" their functionalities overlap.\")\n\n    if kwcolor is not None:\n        try:\n            mcolors.to_rgba_array(kwcolor)\n        except ValueError:\n            raise ValueError(\n                \"'color' kwarg must be an color or sequence of color \"\n                \"specs.  For a sequence of values to be color-mapped, use \"\n                \"the 'c' argument instead.\")\n        if edgecolors is None:\n            edgecolors = kwcolor\n        if facecolors is None:\n            facecolors = kwcolor\n\n    if edgecolors is None and not rcParams['_internal.classic_mode']:\n        edgecolors = rcParams['scatter.edgecolors']\n\n    c_was_none = c is None\n    if c is None:\n        c = (facecolors if facecolors is not None\n             else \"b\" if rcParams['_internal.classic_mode']\n             else get_next_color_func())\n    c_is_string_or_strings = (\n        isinstance(c, str)\n        or (isinstance(c, collections.abc.Iterable) and len(c) > 0\n            and isinstance(cbook.safe_first_element(c), str)))\n\n    def invalid_shape_exception(csize, xsize):\n        return ValueError(\n            f\"'c' argument has {csize} elements, which is inconsistent \"\n            f\"with 'x' and 'y' with size {xsize}.\")\n\n    c_is_mapped = False  # Unless proven otherwise below.\n    valid_shape = True  # Unless proven otherwise below.\n    if not c_was_none and kwcolor is None and not c_is_string_or_strings:\n        try:  # First, does 'c' look suitable for value-mapping?\n            c = np.asanyarray(c, dtype=float)\n        except ValueError:\n            pass  # Failed to convert to float array; must be color specs.\n        else:\n            # If c can be either mapped values or a RGB(A) color, prefer\n            # the former if shapes match, the latter otherwise.\n            if c.size == xsize:\n                c = c.ravel()\n                c_is_mapped = True\n            else:  # Wrong size; it must not be intended for mapping.\n                if c.shape in ((3,), (4,)):\n                    _log.warning(\n                        \"'c' argument looks like a single numeric RGB or \"\n                        \"RGBA sequence, which should be avoided as value-\"\n                        \"mapping will have precedence in case its length \"\n                        \"matches with 'x' & 'y'.  Please use a 2-D array \"\n                        \"with a single row if you really want to specify \"\n                        \"the same RGB or RGBA value for all points.\")\n                valid_shape = False\n    if not c_is_mapped:\n        try:  # Is 'c' acceptable as PathCollection facecolors?\n            colors = mcolors.to_rgba_array(c)\n        except ValueError:\n            if not valid_shape:\n                raise invalid_shape_exception(c.size, xsize)\n            # Both the mapping *and* the RGBA conversion failed: pretty\n            # severe failure => one may appreciate a verbose feedback.\n            raise ValueError(\n                f\"'c' argument must be a color, a sequence of colors, or \"\n                f\"a sequence of numbers, not {c}\")\n        else:\n            if len(colors) not in (0, 1, xsize):\n                # NB: remember that a single color is also acceptable.\n                # Besides *colors* will be an empty array if c == 'none'.\n                raise invalid_shape_exception(len(colors), xsize)\n    else:\n        colors = None  # use cmap, norm after collection is created\n    return c, colors, edgecolors",
                "    @_preprocess_data(replace_names=[\"x\", \"y\", \"s\", \"linewidths\",\n                                     \"edgecolors\", \"c\", \"facecolor\",\n                                     \"facecolors\", \"color\"],\n                      label_namer=\"y\")\n    @cbook._delete_parameter(\"3.2\", \"verts\")\n    def scatter(self, x, y, s=None, c=None, marker=None, cmap=None, norm=None,\n                vmin=None, vmax=None, alpha=None, linewidths=None,\n                verts=None, edgecolors=None, *, plotnonfinite=False,\n                **kwargs):\n        \"\"\"\n        A scatter plot of *y* vs. *x* with varying marker size and/or color.\n\n        Parameters\n        ----------\n        x, y : scalar or array-like, shape (n, )\n            The data positions.\n\n        s : scalar or array-like, shape (n, ), optional\n            The marker size in points**2.\n            Default is ``rcParams['lines.markersize'] ** 2``.\n\n        c : color, sequence, or sequence of colors, optional\n            The marker color. Possible values:\n\n            - A single color format string.\n            - A sequence of colors of length n.\n            - A scalar or sequence of n numbers to be mapped to colors using\n              *cmap* and *norm*.\n            - A 2-D array in which the rows are RGB or RGBA.\n\n            Note that *c* should not be a single numeric RGB or RGBA sequence\n            because that is indistinguishable from an array of values to be\n            colormapped. If you want to specify the same RGB or RGBA value for\n            all points, use a 2-D array with a single row.  Otherwise, value-\n            matching will have precedence in case of a size matching with *x*\n            and *y*.\n\n            Defaults to ``None``. In that case the marker color is determined\n            by the value of ``color``, ``facecolor`` or ``facecolors``. In case\n            those are not specified or ``None``, the marker color is determined\n            by the next color of the ``Axes``' current \"shape and fill\" color\n            cycle. This cycle defaults to :rc:`axes.prop_cycle`.\n\n        marker : `~matplotlib.markers.MarkerStyle`, optional\n            The marker style. *marker* can be either an instance of the class\n            or the text shorthand for a particular marker.\n            Defaults to ``None``, in which case it takes the value of\n            :rc:`scatter.marker` = 'o'.\n            See `~matplotlib.markers` for more information about marker styles.\n\n        cmap : `~matplotlib.colors.Colormap`, optional\n            A `.Colormap` instance or registered colormap name. *cmap* is only\n            used if *c* is an array of floats. If ``None``, defaults to\n            :rc:`image.cmap`.\n\n        norm : `~matplotlib.colors.Normalize`, default: None\n            A `.Normalize` instance is used to scale luminance data to 0, 1.\n            *norm* is only used if *c* is an array of floats. If *None*, use\n            the default `.colors.Normalize`.\n\n        vmin, vmax : scalar, default: None\n            *vmin* and *vmax* are used in conjunction with *norm* to normalize\n            luminance data. If None, the respective min and max of the color\n            array is used. *vmin* and *vmax* are ignored if you pass a *norm*\n            instance.\n\n        alpha : scalar, default: None\n            The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n        linewidths : scalar or array-like, default: None\n            The linewidth of the marker edges. Note: The default *edgecolors*\n            is 'face'. You may want to change this as well.\n            If *None*, defaults to :rc:`lines.linewidth`.\n\n        edgecolors : {'face', 'none', *None*} or color or sequence of color, \\\noptional.\n            The edge color of the marker. Possible values:\n\n            - 'face': The edge color will always be the same as the face color.\n            - 'none': No patch boundary will be drawn.\n            - A color or sequence of colors.\n\n            Defaults to ``None``, in which case it takes the value of\n            :rc:`scatter.edgecolors` = 'face'.\n\n            For non-filled markers, the *edgecolors* kwarg is ignored and\n            forced to 'face' internally.\n\n        plotnonfinite : bool, default: False\n            Set to plot points with nonfinite *c*, in conjunction with\n            `~matplotlib.colors.Colormap.set_bad`.\n\n        Returns\n        -------\n        paths : `~matplotlib.collections.PathCollection`\n\n        Other Parameters\n        ----------------\n        **kwargs : `~matplotlib.collections.Collection` properties\n\n        See Also\n        --------\n        plot : To plot scatter plots when markers are identical in size and\n            color.\n\n        Notes\n        -----\n        * The `.plot` function will be faster for scatterplots where markers\n          don't vary in size or color.\n\n        * Any or all of *x*, *y*, *s*, and *c* may be masked arrays, in which\n          case all masks will be combined and only unmasked points will be\n          plotted.\n\n        * Fundamentally, scatter works with 1-D arrays; *x*, *y*, *s*, and *c*\n          may be input as N-D arrays, but within scatter they will be\n          flattened. The exception is *c*, which will be flattened only if its\n          size matches the size of *x* and *y*.\n\n        \"\"\"\n        # Process **kwargs to handle aliases, conflicts with explicit kwargs:\n\n        self._process_unit_info(xdata=x, ydata=y, kwargs=kwargs)\n        x = self.convert_xunits(x)\n        y = self.convert_yunits(y)\n\n        # np.ma.ravel yields an ndarray, not a masked array,\n        # unless its argument is a masked array.\n        x = np.ma.ravel(x)\n        y = np.ma.ravel(y)\n        if x.size != y.size:\n            raise ValueError(\"x and y must be the same size\")\n\n        if s is None:\n            s = (20 if rcParams['_internal.classic_mode'] else\n                 rcParams['lines.markersize'] ** 2.0)\n        s = np.ma.ravel(s)\n        if len(s) not in (1, x.size):\n            raise ValueError(\"s must be a scalar, or the same size as x and y\")\n\n        c, colors, edgecolors = \\\n            self._parse_scatter_color_args(\n                c, edgecolors, kwargs, x.size,\n                get_next_color_func=self._get_patches_for_fill.get_next_color)\n\n        if plotnonfinite and colors is None:\n            c = np.ma.masked_invalid(c)\n            x, y, s, edgecolors, linewidths = \\\n                cbook._combine_masks(x, y, s, edgecolors, linewidths)\n        else:\n            x, y, s, c, colors, edgecolors, linewidths = \\\n                cbook._combine_masks(\n                    x, y, s, c, colors, edgecolors, linewidths)\n\n        scales = s   # Renamed for readability below.\n\n        # load default marker from rcParams\n        if marker is None:\n            marker = rcParams['scatter.marker']\n\n        if isinstance(marker, mmarkers.MarkerStyle):\n            marker_obj = marker\n        else:\n            marker_obj = mmarkers.MarkerStyle(marker)\n\n        path = marker_obj.get_path().transformed(\n            marker_obj.get_transform())\n        if not marker_obj.is_filled():\n            edgecolors = 'face'\n            linewidths = rcParams['lines.linewidth']\n\n        offsets = np.ma.column_stack([x, y])\n\n        collection = mcoll.PathCollection(\n                (path,), scales,\n                facecolors=colors,\n                edgecolors=edgecolors,\n                linewidths=linewidths,\n                offsets=offsets,\n                transOffset=kwargs.pop('transform', self.transData),\n                alpha=alpha\n                )\n        collection.set_transform(mtransforms.IdentityTransform())\n        collection.update(kwargs)\n\n        if colors is None:\n            collection.set_array(c)\n            collection.set_cmap(cmap)\n            collection.set_norm(norm)\n\n            if vmin is not None or vmax is not None:\n                collection.set_clim(vmin, vmax)\n            else:\n                collection.autoscale_None()\n\n        # Classic mode only:\n        # ensure there are margins to allow for the\n        # finite size of the symbols.  In v2.x, margins\n        # are present by default, so we disable this\n        # scatter-specific override.\n        if rcParams['_internal.classic_mode']:\n            if self._xmargin < 0.05 and x.size > 0:\n                self.set_xmargin(0.05)\n            if self._ymargin < 0.05 and x.size > 0:\n                self.set_ymargin(0.05)\n\n        self.add_collection(collection)\n        self._request_autoscale_view()\n\n        return collection",
                "@_preprocess_data(replace_names=[\"x\", \"y\"], label_namer=\"y\")\n@docstring.dedent_interpd\ndef hexbin(self, x, y, C=None, gridsize=100, bins=None,\n           xscale='linear', yscale='linear', extent=None,\n           cmap=None, norm=None, vmin=None, vmax=None,\n           alpha=None, linewidths=None, edgecolors='face',\n           reduce_C_function=np.mean, mincnt=None, marginals=False,\n           **kwargs):\n    \"\"\"\n    Make a 2D hexagonal binning plot of points *x*, *y*.\n\n    If *C* is *None*, the value of the hexagon is determined by the number\n    of points in the hexagon. Otherwise, *C* specifies values at the\n    coordinate (x[i], y[i]). For each hexagon, these values are reduced\n    using *reduce_C_function*.\n\n    Parameters\n    ----------\n    x, y : array-like\n        The data positions. *x* and *y* must be of the same length.\n\n    C : array-like, optional\n        If given, these values are accumulated in the bins. Otherwise,\n        every point has a value of 1. Must be of the same length as *x*\n        and *y*.\n\n    gridsize : int or (int, int), default: 100\n        If a single int, the number of hexagons in the *x*-direction.\n        The number of hexagons in the *y*-direction is chosen such that\n        the hexagons are approximately regular.\n\n        Alternatively, if a tuple (*nx*, *ny*), the number of hexagons\n        in the *x*-direction and the *y*-direction.\n\n    bins : 'log' or int or sequence, default: None\n        Discretization of the hexagon values.\n\n        - If *None*, no binning is applied; the color of each hexagon\n          directly corresponds to its count value.\n        - If 'log', use a logarithmic scale for the color map.\n          Internally, :math:`log_{10}(i+1)` is used to determine the\n          hexagon color. This is equivalent to ``norm=LogNorm()``.\n        - If an integer, divide the counts in the specified number\n          of bins, and color the hexagons accordingly.\n        - If a sequence of values, the values of the lower bound of\n          the bins to be used.\n\n    xscale : {'linear', 'log'}, default: 'linear'\n        Use a linear or log10 scale on the horizontal axis.\n\n    yscale : {'linear', 'log'}, default: 'linear'\n        Use a linear or log10 scale on the vertical axis.\n\n    mincnt : int > 0, default: *None*\n        If not *None*, only display cells with more than *mincnt*\n        number of points in the cell.\n\n    marginals : bool, default: *False*\n        If marginals is *True*, plot the marginal density as\n        colormapped rectangles along the bottom of the x-axis and\n        left of the y-axis.\n\n    extent : float, default: *None*\n        The limits of the bins. The default assigns the limits\n        based on *gridsize*, *x*, *y*, *xscale* and *yscale*.\n\n        If *xscale* or *yscale* is set to 'log', the limits are\n        expected to be the exponent for a power of 10. E.g. for\n        x-limits of 1 and 50 in 'linear' scale and y-limits\n        of 10 and 1000 in 'log' scale, enter (1, 50, 1, 3).\n\n        Order of scalars is (left, right, bottom, top).\n\n    Other Parameters\n    ----------------\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        The Colormap instance or registered colormap name used to map\n        the bin values to colors. Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The Normalize instance scales the bin values to the canonical\n        colormap range [0, 1] for mapping to colors. By default, the data\n        range is mapped to the colorbar range using linear scaling.\n\n    vmin, vmax : float, default: None\n        The colorbar range. If *None*, suitable min/max values are\n        automatically chosen by the `~.Normalize` instance (defaults to\n        the respective min/max values of the bins in case of the default\n        linear scaling). This is ignored if *norm* is given.\n\n    alpha : float between 0 and 1, optional\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n    linewidths : float, default: *None*\n        If *None*, defaults to 1.0.\n\n    edgecolors : {'face', 'none', *None*} or color, default: 'face'\n        The color of the hexagon edges. Possible values are:\n\n        - 'face': Draw the edges in the same color as the fill color.\n        - 'none': No edges are drawn. This can sometimes lead to unsightly\n          unpainted pixels between the hexagons.\n        - *None*: Draw outlines in the default color.\n        - An explicit color.\n\n    reduce_C_function : callable, default: `numpy.mean`\n        The function to aggregate *C* within the bins. It is ignored if\n        *C* is not given. This must have the signature::\n\n            def reduce_C_function(C: array) -> float\n\n        Commonly used functions are:\n\n        - `numpy.mean`: average of the points\n        - `numpy.sum`: integral of the point values\n        - `numpy.max`: value taken from the largest point\n\n    **kwargs : `~matplotlib.collections.PolyCollection` properties\n        All other keyword arguments are passed on to `.PolyCollection`:\n\n        %(PolyCollection)s\n\n    Returns\n    -------\n    polycollection : `~matplotlib.collections.PolyCollection`\n        A `.PolyCollection` defining the hexagonal bins.\n\n        - `.PolyCollection.get_offset` contains a Mx2 array containing\n          the x, y positions of the M hexagon centers.\n        - `.PolyCollection.get_array` contains the values of the M\n          hexagons.\n\n        If *marginals* is *True*, horizontal\n        bar and vertical bar (both PolyCollections) will be attached\n        to the return collection as attributes *hbar* and *vbar*.\n\n    \"\"\"\n    self._process_unit_info(xdata=x, ydata=y, kwargs=kwargs)\n\n    x, y, C = cbook.delete_masked_points(x, y, C)\n\n    # Set the size of the hexagon grid\n    if np.iterable(gridsize):\n        nx, ny = gridsize\n    else:\n        nx = gridsize\n        ny = int(nx / math.sqrt(3))\n    # Count the number of data in each hexagon\n    x = np.array(x, float)\n    y = np.array(y, float)\n    if xscale == 'log':\n        if np.any(x <= 0.0):\n            raise ValueError(\"x contains non-positive values, so can not\"\n                             \" be log-scaled\")\n        x = np.log10(x)\n    if yscale == 'log':\n        if np.any(y <= 0.0):\n            raise ValueError(\"y contains non-positive values, so can not\"\n                             \" be log-scaled\")\n        y = np.log10(y)\n    if extent is not None:\n        xmin, xmax, ymin, ymax = extent\n    else:\n        xmin, xmax = (np.min(x), np.max(x)) if len(x) else (0, 1)\n        ymin, ymax = (np.min(y), np.max(y)) if len(y) else (0, 1)\n\n        # to avoid issues with singular data, expand the min/max pairs\n        xmin, xmax = mtransforms.nonsingular(xmin, xmax, expander=0.1)\n        ymin, ymax = mtransforms.nonsingular(ymin, ymax, expander=0.1)\n\n    # In the x-direction, the hexagons exactly cover the region from\n    # xmin to xmax. Need some padding to avoid roundoff errors.\n    padding = 1.e-9 * (xmax - xmin)\n    xmin -= padding\n    xmax += padding\n    sx = (xmax - xmin) / nx\n    sy = (ymax - ymin) / ny\n\n    if marginals:\n        xorig = x.copy()\n        yorig = y.copy()\n\n    x = (x - xmin) / sx\n    y = (y - ymin) / sy\n    ix1 = np.round(x).astype(int)\n    iy1 = np.round(y).astype(int)\n    ix2 = np.floor(x).astype(int)\n    iy2 = np.floor(y).astype(int)\n\n    nx1 = nx + 1\n    ny1 = ny + 1\n    nx2 = nx\n    ny2 = ny\n    n = nx1 * ny1 + nx2 * ny2\n\n    d1 = (x - ix1) ** 2 + 3.0 * (y - iy1) ** 2\n    d2 = (x - ix2 - 0.5) ** 2 + 3.0 * (y - iy2 - 0.5) ** 2\n    bdist = (d1 < d2)\n    if C is None:\n        lattice1 = np.zeros((nx1, ny1))\n        lattice2 = np.zeros((nx2, ny2))\n        c1 = (0 <= ix1) & (ix1 < nx1) & (0 <= iy1) & (iy1 < ny1) & bdist\n        c2 = (0 <= ix2) & (ix2 < nx2) & (0 <= iy2) & (iy2 < ny2) & ~bdist\n        np.add.at(lattice1, (ix1[c1], iy1[c1]), 1)\n        np.add.at(lattice2, (ix2[c2], iy2[c2]), 1)\n        if mincnt is not None:\n            lattice1[lattice1 < mincnt] = np.nan\n            lattice2[lattice2 < mincnt] = np.nan\n        accum = np.concatenate([lattice1.ravel(), lattice2.ravel()])\n        good_idxs = ~np.isnan(accum)\n\n    else:\n        if mincnt is None:\n            mincnt = 0\n\n        # create accumulation arrays\n        lattice1 = np.empty((nx1, ny1), dtype=object)\n        for i in range(nx1):\n            for j in range(ny1):\n                lattice1[i, j] = []\n        lattice2 = np.empty((nx2, ny2), dtype=object)\n        for i in range(nx2):\n            for j in range(ny2):\n                lattice2[i, j] = []\n\n        for i in range(len(x)):\n            if bdist[i]:\n                if 0 <= ix1[i] < nx1 and 0 <= iy1[i] < ny1:\n                    lattice1[ix1[i], iy1[i]].append(C[i])\n            else:\n                if 0 <= ix2[i] < nx2 and 0 <= iy2[i] < ny2:\n                    lattice2[ix2[i], iy2[i]].append(C[i])\n\n        for i in range(nx1):\n            for j in range(ny1):\n                vals = lattice1[i, j]\n                if len(vals) > mincnt:\n                    lattice1[i, j] = reduce_C_function(vals)\n                else:\n                    lattice1[i, j] = np.nan\n        for i in range(nx2):\n            for j in range(ny2):\n                vals = lattice2[i, j]\n                if len(vals) > mincnt:\n                    lattice2[i, j] = reduce_C_function(vals)\n                else:\n                    lattice2[i, j] = np.nan\n\n        accum = np.hstack((lattice1.astype(float).ravel(),\n                           lattice2.astype(float).ravel()))\n        good_idxs = ~np.isnan(accum)\n\n    offsets = np.zeros((n, 2), float)\n    offsets[:nx1 * ny1, 0] = np.repeat(np.arange(nx1), ny1)\n    offsets[:nx1 * ny1, 1] = np.tile(np.arange(ny1), nx1)\n    offsets[nx1 * ny1:, 0] = np.repeat(np.arange(nx2) + 0.5, ny2)\n    offsets[nx1 * ny1:, 1] = np.tile(np.arange(ny2), nx2) + 0.5\n    offsets[:, 0] *= sx\n    offsets[:, 1] *= sy\n    offsets[:, 0] += xmin\n    offsets[:, 1] += ymin\n    # remove accumulation bins with no data\n    offsets = offsets[good_idxs, :]\n    accum = accum[good_idxs]\n\n    polygon = [sx, sy / 3] * np.array(\n        [[.5, -.5], [.5, .5], [0., 1.], [-.5, .5], [-.5, -.5], [0., -1.]])\n\n    if linewidths is None:\n        linewidths = [1.0]\n\n    if xscale == 'log' or yscale == 'log':\n        polygons = np.expand_dims(polygon, 0) + np.expand_dims(offsets, 1)\n        if xscale == 'log':\n            polygons[:, :, 0] = 10.0 ** polygons[:, :, 0]\n            xmin = 10.0 ** xmin\n            xmax = 10.0 ** xmax\n            self.set_xscale(xscale)\n        if yscale == 'log':\n            polygons[:, :, 1] = 10.0 ** polygons[:, :, 1]\n            ymin = 10.0 ** ymin\n            ymax = 10.0 ** ymax\n            self.set_yscale(yscale)\n        collection = mcoll.PolyCollection(\n            polygons,\n            edgecolors=edgecolors,\n            linewidths=linewidths,\n            )\n    else:\n        collection = mcoll.PolyCollection(\n            [polygon],\n            edgecolors=edgecolors,\n            linewidths=linewidths,\n            offsets=offsets,\n            transOffset=mtransforms.IdentityTransform(),\n            offset_position=\"data\"\n            )\n\n    # Set normalizer if bins is 'log'\n    if bins == 'log':\n        if norm is not None:\n            cbook._warn_external(\"Only one of 'bins' and 'norm' \"\n                                 \"arguments can be supplied, ignoring \"\n                                 \"bins={}\".format(bins))\n        else:\n            norm = mcolors.LogNorm()\n        bins = None\n\n    if isinstance(norm, mcolors.LogNorm):\n        if (accum == 0).any():\n            # make sure we have no zeros\n            accum += 1\n\n    # autoscale the norm with curren accum values if it hasn't\n    # been set\n    if norm is not None:\n        if norm.vmin is None and norm.vmax is None:\n            norm.autoscale(accum)\n\n    if bins is not None:\n        if not np.iterable(bins):\n            minimum, maximum = min(accum), max(accum)\n            bins -= 1  # one less edge than bins\n            bins = minimum + (maximum - minimum) * np.arange(bins) / bins\n        bins = np.sort(bins)\n        accum = bins.searchsorted(accum)\n\n    collection.set_array(accum)\n    collection.set_cmap(cmap)\n    collection.set_norm(norm)\n    collection.set_alpha(alpha)\n    collection.update(kwargs)\n\n    if vmin is not None or vmax is not None:\n        collection.set_clim(vmin, vmax)\n    else:\n        collection.autoscale_None()\n\n    corners = ((xmin, ymin), (xmax, ymax))\n    self.update_datalim(corners)\n    self._request_autoscale_view(tight=True)\n\n    # add the collection last\n    self.add_collection(collection, autolim=False)\n    if not marginals:\n        return collection\n\n    if C is None:\n        C = np.ones(len(x))\n\n    def coarse_bin(x, y, coarse):\n        ind = coarse.searchsorted(x).clip(0, len(coarse) - 1)\n        mus = np.zeros(len(coarse))\n        for i in range(len(coarse)):\n            yi = y[ind == i]\n            if len(yi) > 0:\n                mu = reduce_C_function(yi)\n            else:\n                mu = np.nan\n            mus[i] = mu\n        return mus\n\n    coarse = np.linspace(xmin, xmax, gridsize)\n\n    xcoarse = coarse_bin(xorig, C, coarse)\n    valid = ~np.isnan(xcoarse)\n    verts, values = [], []\n    for i, val in enumerate(xcoarse):\n        thismin = coarse[i]\n        if i < len(coarse) - 1:\n            thismax = coarse[i + 1]\n        else:\n            thismax = thismin + np.diff(coarse)[-1]\n\n        if not valid[i]:\n            continue\n\n        verts.append([(thismin, 0),\n                      (thismin, 0.05),\n                      (thismax, 0.05),\n                      (thismax, 0)])\n        values.append(val)\n\n    values = np.array(values)\n    trans = self.get_xaxis_transform(which='grid')\n\n    hbar = mcoll.PolyCollection(verts, transform=trans, edgecolors='face')\n\n    hbar.set_array(values)\n    hbar.set_cmap(cmap)\n    hbar.set_norm(norm)\n    hbar.set_alpha(alpha)\n    hbar.update(kwargs)\n    self.add_collection(hbar, autolim=False)\n\n    coarse = np.linspace(ymin, ymax, gridsize)\n    ycoarse = coarse_bin(yorig, C, coarse)\n    valid = ~np.isnan(ycoarse)\n    verts, values = [], []\n    for i, val in enumerate(ycoarse):\n        thismin = coarse[i]\n        if i < len(coarse) - 1:\n            thismax = coarse[i + 1]\n        else:\n            thismax = thismin + np.diff(coarse)[-1]\n        if not valid[i]:\n            continue\n        verts.append([(0, thismin), (0.0, thismax),\n                      (0.05, thismax), (0.05, thismin)])\n        values.append(val)\n\n    values = np.array(values)\n\n    trans = self.get_yaxis_transform(which='grid')\n\n    vbar = mcoll.PolyCollection(verts, transform=trans, edgecolors='face')\n    vbar.set_array(values)\n    vbar.set_cmap(cmap)\n    vbar.set_norm(norm)\n    vbar.set_alpha(alpha)\n    vbar.update(kwargs)\n    self.add_collection(vbar, autolim=False)\n\n    collection.hbar = hbar\n    collection.vbar = vbar\n\n    def on_changed(collection):\n        hbar.set_cmap(collection.get_cmap())\n        hbar.set_clim(collection.get_clim())\n        vbar.set_cmap(collection.get_cmap())\n        vbar.set_clim(collection.get_clim())\n\n    collection.callbacksSM.connect('changed', on_changed)\n\n    return collection",
                "@docstring.dedent_interpd\ndef arrow(self, x, y, dx, dy, **kwargs):\n    \"\"\"\n    Add an arrow to the axes.\n\n    This draws an arrow from ``(x, y)`` to ``(x+dx, y+dy)``.\n\n    Parameters\n    ----------\n    x, y : float\n        The x and y coordinates of the arrow base.\n\n    dx, dy : float\n        The length of the arrow along x and y direction.\n\n    %(FancyArrow)s\n\n    Returns\n    -------\n    arrow : `.FancyArrow`\n        The created `.FancyArrow` object.\n\n    Notes\n    -----\n    The resulting arrow is affected by the axes aspect ratio and limits.\n    This may produce an arrow whose head is not square with its stem. To\n    create an arrow whose head is square with its stem,\n    use :meth:`annotate` for example:\n\n    >>> ax.annotate(\"\", xy=(0.5, 0.5), xytext=(0, 0),\n    ...             arrowprops=dict(arrowstyle=\"->\"))\n\n    \"\"\"\n    # Strip away units for the underlying patch since units\n    # do not make sense to most patch-like code\n    x = self.convert_xunits(x)\n    y = self.convert_yunits(y)\n    dx = self.convert_xunits(dx)\n    dy = self.convert_yunits(dy)\n\n    a = mpatches.FancyArrow(x, y, dx, dy, **kwargs)\n    self.add_artist(a)\n    return a",
                "@docstring.copy(mquiver.QuiverKey.__init__)\ndef quiverkey(self, Q, X, Y, U, label, **kw):\n    qk = mquiver.QuiverKey(Q, X, Y, U, label, **kw)\n    self.add_artist(qk)\n    return qk",
                "def _quiver_units(self, args, kw):\n    if len(args) > 3:\n        x, y = args[0:2]\n        self._process_unit_info(xdata=x, ydata=y, kwargs=kw)\n        x = self.convert_xunits(x)\n        y = self.convert_yunits(y)\n        return (x, y) + args[2:]\n    return args",
                "@_preprocess_data()\ndef quiver(self, *args, **kw):\n    # Make sure units are handled for x and y values\n    args = self._quiver_units(args, kw)\n\n    q = mquiver.Quiver(self, *args, **kw)\n\n    self.add_collection(q, autolim=True)\n    self._request_autoscale_view()\n    return q",
                "@_preprocess_data()\n@docstring.dedent_interpd\ndef barbs(self, *args, **kw):\n    \"\"\"\n    %(barbs_doc)s\n    \"\"\"\n    # Make sure units are handled for x and y values\n    args = self._quiver_units(args, kw)\n\n    b = mquiver.Barbs(self, *args, **kw)\n    self.add_collection(b, autolim=True)\n    self._request_autoscale_view()\n    return b",
                "def fill(self, *args, data=None, **kwargs):\n    \"\"\"\n    Plot filled polygons.\n\n    Parameters\n    ----------\n    *args : sequence of x, y, [color]\n        Each polygon is defined by the lists of *x* and *y* positions of\n        its nodes, optionally followed by a *color* specifier. See\n        :mod:`matplotlib.colors` for supported color specifiers. The\n        standard color cycle is used for polygons without a color\n        specifier.\n\n        You can plot multiple polygons by providing multiple *x*, *y*,\n        *[color]* groups.\n\n        For example, each of the following is legal::\n\n            ax.fill(x, y)                    # a polygon with default color\n            ax.fill(x, y, \"b\")               # a blue polygon\n            ax.fill(x, y, x2, y2)            # two polygons\n            ax.fill(x, y, \"b\", x2, y2, \"r\")  # a blue and a red polygon\n\n    data : indexable object, optional\n        An object with labelled data. If given, provide the label names to\n        plot in *x* and *y*, e.g.::\n\n            ax.fill(\"time\", \"signal\",\n                    data={\"time\": [0, 1, 2], \"signal\": [0, 1, 0]})\n\n    Returns\n    -------\n    a list of :class:`~matplotlib.patches.Polygon`\n\n    Other Parameters\n    ----------------\n    **kwargs : :class:`~matplotlib.patches.Polygon` properties\n\n    Notes\n    -----\n    Use :meth:`fill_between` if you would like to fill the region between\n    two curves.\n    \"\"\"\n    # For compatibility(!), get aliases from Line2D rather than Patch.\n    kwargs = cbook.normalize_kwargs(kwargs, mlines.Line2D)\n    # _get_patches_for_fill returns a generator, convert it to a list.\n    patches = [*self._get_patches_for_fill(*args, data=data, **kwargs)]\n    for poly in patches:\n        self.add_patch(poly)\n    self._request_autoscale_view()\n    return patches",
                "@_preprocess_data(replace_names=[\"x\", \"y1\", \"y2\", \"where\"])\n@docstring.dedent_interpd\ndef fill_between(self, x, y1, y2=0, where=None, interpolate=False,\n                 step=None, **kwargs):\n    \"\"\"\n    Fill the area between two horizontal curves.\n\n    The curves are defined by the points (*x*, *y1*) and (*x*, *y2*). This\n    creates one or multiple polygons describing the filled area.\n\n    You may exclude some horizontal sections from filling using *where*.\n\n    By default, the edges connect the given points directly. Use *step* if\n    the filling should be a step function, i.e. constant in between *x*.\n\n\n    Parameters\n    ----------\n    x : array (length N)\n        The x coordinates of the nodes defining the curves.\n\n    y1 : array (length N) or scalar\n        The y coordinates of the nodes defining the first curve.\n\n    y2 : array (length N) or scalar, default: 0\n        The y coordinates of the nodes defining the second curve.\n\n    where : array of bool (length N), optional\n        Define *where* to exclude some horizontal regions from being\n        filled. The filled regions are defined by the coordinates\n        ``x[where]``.  More precisely, fill between ``x[i]`` and ``x[i+1]``\n        if ``where[i] and where[i+1]``.  Note that this definition implies\n        that an isolated *True* value between two *False* values in\n        *where* will not result in filling.  Both sides of the *True*\n        position remain unfilled due to the adjacent *False* values.\n\n    interpolate : bool, default: False\n        This option is only relevant if *where* is used and the two curves\n        are crossing each other.\n\n        Semantically, *where* is often used for *y1* > *y2* or similar.\n        By default, the nodes of the polygon defining the filled region\n        will only be placed at the positions in the *x* array.  Such a\n        polygon cannot describe the above semantics close to the\n        intersection.  The x-sections containing the intersection are\n        simply clipped.\n\n        Setting *interpolate* to *True* will calculate the actual\n        intersection point and extend the filled region up to this point.\n\n    step : {'pre', 'post', 'mid'}, optional\n        Define *step* if the filling should be a step function,\n        i.e. constant in between *x*. The value determines where the\n        step will occur:\n\n        - 'pre': The y value is continued constantly to the left from\n          every *x* position, i.e. the interval ``(x[i-1], x[i]]`` has the\n          value ``y[i]``.\n        - 'post': The y value is continued constantly to the right from\n          every *x* position, i.e. the interval ``[x[i], x[i+1])`` has the\n          value ``y[i]``.\n        - 'mid': Steps occur half-way between the *x* positions.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All other keyword arguments are passed on to `.PolyCollection`.\n        They control the `.Polygon` properties:\n\n        %(PolyCollection)s\n\n    Returns\n    -------\n    `.PolyCollection`\n        A `.PolyCollection` containing the plotted polygons.\n\n    See Also\n    --------\n    fill_betweenx : Fill between two sets of x-values.\n\n    Notes\n    -----\n    .. [notes section required to get data note injection right]\n\n    \"\"\"\n    if not rcParams['_internal.classic_mode']:\n        kwargs = cbook.normalize_kwargs(kwargs, mcoll.Collection)\n        if not any(c in kwargs for c in ('color', 'facecolor')):\n            kwargs['facecolor'] = \\\n                self._get_patches_for_fill.get_next_color()\n\n    # Handle united data, such as dates\n    self._process_unit_info(xdata=x, ydata=y1, kwargs=kwargs)\n    self._process_unit_info(ydata=y2)\n\n    # Convert the arrays so we can work with them\n    x = ma.masked_invalid(self.convert_xunits(x))\n    y1 = ma.masked_invalid(self.convert_yunits(y1))\n    y2 = ma.masked_invalid(self.convert_yunits(y2))\n\n    for name, array in [('x', x), ('y1', y1), ('y2', y2)]:\n        if array.ndim > 1:\n            raise ValueError('Input passed into argument \"%r\"' % name +\n                             'is not 1-dimensional.')\n\n    if where is None:\n        where = True\n    else:\n        where = np.asarray(where, dtype=bool)\n        if where.size != x.size:\n            cbook.warn_deprecated(\n                \"3.2\",\n                message=\"The parameter where must have the same size as x \"\n                        \"in fill_between(). This will become an error in \"\n                        \"future versions of Matplotlib.\")\n    where = where & ~functools.reduce(np.logical_or,\n                                      map(np.ma.getmask, [x, y1, y2]))\n\n    x, y1, y2 = np.broadcast_arrays(np.atleast_1d(x), y1, y2)\n\n    polys = []\n    for ind0, ind1 in cbook.contiguous_regions(where):\n        xslice = x[ind0:ind1]\n        y1slice = y1[ind0:ind1]\n        y2slice = y2[ind0:ind1]\n        if step is not None:\n            step_func = cbook.STEP_LOOKUP_MAP[\"steps-\" + step]\n            xslice, y1slice, y2slice = step_func(xslice, y1slice, y2slice)\n\n        if not len(xslice):\n            continue\n\n        N = len(xslice)\n        X = np.zeros((2 * N + 2, 2), float)\n\n        if interpolate:\n            def get_interp_point(ind):\n                im1 = max(ind - 1, 0)\n                x_values = x[im1:ind + 1]\n                diff_values = y1[im1:ind + 1] - y2[im1:ind + 1]\n                y1_values = y1[im1:ind + 1]\n\n                if len(diff_values) == 2:\n                    if np.ma.is_masked(diff_values[1]):\n                        return x[im1], y1[im1]\n                    elif np.ma.is_masked(diff_values[0]):\n                        return x[ind], y1[ind]\n\n                diff_order = diff_values.argsort()\n                diff_root_x = np.interp(\n                    0, diff_values[diff_order], x_values[diff_order])\n                x_order = x_values.argsort()\n                diff_root_y = np.interp(diff_root_x, x_values[x_order],\n                                        y1_values[x_order])\n                return diff_root_x, diff_root_y\n\n            start = get_interp_point(ind0)\n            end = get_interp_point(ind1)\n        else:\n            # the purpose of the next two lines is for when y2 is a\n            # scalar like 0 and we want the fill to go all the way\n            # down to 0 even if none of the y1 sample points do\n            start = xslice[0], y2slice[0]\n            end = xslice[-1], y2slice[-1]\n\n        X[0] = start\n        X[N + 1] = end\n\n        X[1:N + 1, 0] = xslice\n        X[1:N + 1, 1] = y1slice\n        X[N + 2:, 0] = xslice[::-1]\n        X[N + 2:, 1] = y2slice[::-1]\n\n        polys.append(X)\n\n    collection = mcoll.PolyCollection(polys, **kwargs)\n\n    # now update the datalim and autoscale\n    XY1 = np.array([x[where], y1[where]]).T\n    XY2 = np.array([x[where], y2[where]]).T\n    self.dataLim.update_from_data_xy(XY1, self.ignore_existing_data_limits,\n                                     updatex=True, updatey=True)\n    self.ignore_existing_data_limits = False\n    self.dataLim.update_from_data_xy(XY2, self.ignore_existing_data_limits,\n                                     updatex=False, updatey=True)\n    self.add_collection(collection, autolim=False)\n    self._request_autoscale_view()\n    return collection",
                "@_preprocess_data(replace_names=[\"y\", \"x1\", \"x2\", \"where\"])\n@docstring.dedent_interpd\ndef fill_betweenx(self, y, x1, x2=0, where=None,\n                  step=None, interpolate=False, **kwargs):\n    \"\"\"\n    Fill the area between two vertical curves.\n\n    The curves are defined by the points (*x1*, *y*) and (*x2*, *y*). This\n    creates one or multiple polygons describing the filled area.\n\n    You may exclude some vertical sections from filling using *where*.\n\n    By default, the edges connect the given points directly. Use *step* if\n    the filling should be a step function, i.e. constant in between *y*.\n\n\n    Parameters\n    ----------\n    y : array (length N)\n        The y coordinates of the nodes defining the curves.\n\n    x1 : array (length N) or scalar\n        The x coordinates of the nodes defining the first curve.\n\n    x2 : array (length N) or scalar, default: 0\n        The x coordinates of the nodes defining the second curve.\n\n    where : array of bool (length N), optional\n        Define *where* to exclude some vertical regions from being\n        filled. The filled regions are defined by the coordinates\n        ``y[where]``.  More precisely, fill between ``y[i]`` and ``y[i+1]``\n        if ``where[i] and where[i+1]``.  Note that this definition implies\n        that an isolated *True* value between two *False* values in\n        *where* will not result in filling.  Both sides of the *True*\n        position remain unfilled due to the adjacent *False* values.\n\n    interpolate : bool, optional\n        This option is only relevant if *where* is used and the two curves\n        are crossing each other.\n\n        Semantically, *where* is often used for *x1* > *x2* or similar.\n        By default, the nodes of the polygon defining the filled region\n        will only be placed at the positions in the *y* array.  Such a\n        polygon cannot describe the above semantics close to the\n        intersection.  The y-sections containing the intersection are\n        simply clipped.\n\n        Setting *interpolate* to *True* will calculate the actual\n        intersection point and extend the filled region up to this point.\n\n    step : {'pre', 'post', 'mid'}, optional\n        Define *step* if the filling should be a step function,\n        i.e. constant in between *y*. The value determines where the\n        step will occur:\n\n        - 'pre': The y value is continued constantly to the left from\n          every *x* position, i.e. the interval ``(x[i-1], x[i]]`` has the\n          value ``y[i]``.\n        - 'post': The y value is continued constantly to the right from\n          every *x* position, i.e. the interval ``[x[i], x[i+1])`` has the\n          value ``y[i]``.\n        - 'mid': Steps occur half-way between the *x* positions.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        All other keyword arguments are passed on to `.PolyCollection`.\n        They control the `.Polygon` properties:\n\n        %(PolyCollection)s\n\n    Returns\n    -------\n    `.PolyCollection`\n        A `.PolyCollection` containing the plotted polygons.\n\n    See Also\n    --------\n    fill_between : Fill between two sets of y-values.\n\n    Notes\n    -----\n    .. [notes section required to get data note injection right]\n\n    \"\"\"\n    if not rcParams['_internal.classic_mode']:\n        kwargs = cbook.normalize_kwargs(kwargs, mcoll.Collection)\n        if not any(c in kwargs for c in ('color', 'facecolor')):\n            kwargs['facecolor'] = \\\n                self._get_patches_for_fill.get_next_color()\n\n    # Handle united data, such as dates\n    self._process_unit_info(ydata=y, xdata=x1, kwargs=kwargs)\n    self._process_unit_info(xdata=x2)\n\n    # Convert the arrays so we can work with them\n    y = ma.masked_invalid(self.convert_yunits(y))\n    x1 = ma.masked_invalid(self.convert_xunits(x1))\n    x2 = ma.masked_invalid(self.convert_xunits(x2))\n\n    for name, array in [('y', y), ('x1', x1), ('x2', x2)]:\n        if array.ndim > 1:\n            raise ValueError('Input passed into argument \"%r\"' % name +\n                             'is not 1-dimensional.')\n\n    if where is None:\n        where = True\n    else:\n        where = np.asarray(where, dtype=bool)\n        if where.size != y.size:\n            cbook.warn_deprecated(\n                \"3.2\",\n                message=\"The parameter where must have the same size as y \"\n                        \"in fill_between(). This will become an error in \"\n                        \"future versions of Matplotlib.\")\n    where = where & ~functools.reduce(np.logical_or,\n                                      map(np.ma.getmask, [y, x1, x2]))\n\n    y, x1, x2 = np.broadcast_arrays(np.atleast_1d(y), x1, x2)\n\n    polys = []\n    for ind0, ind1 in cbook.contiguous_regions(where):\n        yslice = y[ind0:ind1]\n        x1slice = x1[ind0:ind1]\n        x2slice = x2[ind0:ind1]\n        if step is not None:\n            step_func = cbook.STEP_LOOKUP_MAP[\"steps-\" + step]\n            yslice, x1slice, x2slice = step_func(yslice, x1slice, x2slice)\n\n        if not len(yslice):\n            continue\n\n        N = len(yslice)\n        Y = np.zeros((2 * N + 2, 2), float)\n        if interpolate:\n            def get_interp_point(ind):\n                im1 = max(ind - 1, 0)\n                y_values = y[im1:ind + 1]\n                diff_values = x1[im1:ind + 1] - x2[im1:ind + 1]\n                x1_values = x1[im1:ind + 1]\n\n                if len(diff_values) == 2:\n                    if np.ma.is_masked(diff_values[1]):\n                        return x1[im1], y[im1]\n                    elif np.ma.is_masked(diff_values[0]):\n                        return x1[ind], y[ind]\n\n                diff_order = diff_values.argsort()\n                diff_root_y = np.interp(\n                    0, diff_values[diff_order], y_values[diff_order])\n                y_order = y_values.argsort()\n                diff_root_x = np.interp(diff_root_y, y_values[y_order],\n                                        x1_values[y_order])\n                return diff_root_x, diff_root_y\n\n            start = get_interp_point(ind0)\n            end = get_interp_point(ind1)\n        else:\n            # the purpose of the next two lines is for when x2 is a\n            # scalar like 0 and we want the fill to go all the way\n            # down to 0 even if none of the x1 sample points do\n            start = x2slice[0], yslice[0]\n            end = x2slice[-1], yslice[-1]\n\n        Y[0] = start\n        Y[N + 1] = end\n\n        Y[1:N + 1, 0] = x1slice\n        Y[1:N + 1, 1] = yslice\n        Y[N + 2:, 0] = x2slice[::-1]\n        Y[N + 2:, 1] = yslice[::-1]\n\n        polys.append(Y)\n\n    collection = mcoll.PolyCollection(polys, **kwargs)\n\n    # now update the datalim and autoscale\n    X1Y = np.array([x1[where], y[where]]).T\n    X2Y = np.array([x2[where], y[where]]).T\n    self.dataLim.update_from_data_xy(X1Y, self.ignore_existing_data_limits,\n                                     updatex=True, updatey=True)\n    self.ignore_existing_data_limits = False\n    self.dataLim.update_from_data_xy(X2Y, self.ignore_existing_data_limits,\n                                     updatex=True, updatey=False)\n    self.add_collection(collection, autolim=False)\n    self._request_autoscale_view()\n    return collection",
                "@_preprocess_data()\n@cbook._delete_parameter(\"3.1\", \"shape\")\n@cbook._delete_parameter(\"3.1\", \"imlim\")\ndef imshow(self, X, cmap=None, norm=None, aspect=None,\n           interpolation=None, alpha=None, vmin=None, vmax=None,\n           origin=None, extent=None, shape=None, filternorm=True,\n           filterrad=4.0, imlim=None, resample=None, url=None, **kwargs):\n    \"\"\"\n    Display data as an image; i.e. on a 2D regular raster.\n\n    The input may either be actual RGB(A) data, or 2D scalar data, which\n    will be rendered as a pseudocolor image. Note: For actually displaying\n    a grayscale image set up the color mapping using the parameters\n    ``cmap='gray', vmin=0, vmax=255``.\n\n    Parameters\n    ----------\n    X : array-like or PIL image\n        The image data. Supported array shapes are:\n\n        - (M, N): an image with scalar data. The values are mapped to\n          colors using normalization and a colormap. See parameters *norm*,\n          *cmap*, *vmin*, *vmax*.\n        - (M, N, 3): an image with RGB values (0-1 float or 0-255 int).\n        - (M, N, 4): an image with RGBA values (0-1 float or 0-255 int),\n          i.e. including transparency.\n\n        The first two dimensions (M, N) define the rows and columns of\n        the image.\n\n        Out-of-range RGB(A) values are clipped.\n\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        The Colormap instance or registered colormap name used to map\n        scalar data to colors. This parameter is ignored for RGB(A) data.\n        Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The `Normalize` instance used to scale scalar data to the [0, 1]\n        range before mapping to colors using *cmap*. By default, a linear\n        scaling mapping the lowest value to 0 and the highest to 1 is used.\n        This parameter is ignored for RGB(A) data.\n\n    aspect : {'equal', 'auto'} or float, optional\n        The aspect ratio of the axes.  This parameter is particularly\n        relevant for images since it determines whether data pixels are\n        square.\n\n        This parameter is a shortcut for explicitly calling\n        `.Axes.set_aspect`. See there for further details.\n\n        - 'equal': Ensures an aspect ratio of 1. Pixels will be square\n          (unless pixel sizes are explicitly made non-square in data\n          coordinates using *extent*).\n        - 'auto': The axes is kept fixed and the aspect is adjusted so\n          that the data fit in the axes. In general, this will result in\n          non-square pixels.\n\n        If not given, use :rc:`image.aspect`.\n\n    interpolation : str, optional\n        The interpolation method used. If *None*, :rc:`image.interpolation`\n        is used.\n\n        Supported values are 'none', 'antialiased', 'nearest', 'bilinear',\n        'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite',\n        'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell',\n        'sinc', 'lanczos'.\n\n        If *interpolation* is 'none', then no interpolation is performed\n        on the Agg, ps, pdf and svg backends. Other backends will fall back\n        to 'nearest'. Note that most SVG renders perform interpolation at\n        rendering and that the default interpolation method they implement\n        may differ.\n\n        If *interpolation* is the default 'antialiased', then 'nearest'\n        interpolation is used if the image is upsampled by more than a\n        factor of three (i.e. the number of display pixels is at least\n        three times the size of the data array).  If the upsampling rate is\n        smaller than 3, or the image is downsampled, then 'hanning'\n        interpolation is used to act as an anti-aliasing filter, unless the\n        image happens to be upsampled by exactly a factor of two or one.\n\n        See\n        :doc:`/gallery/images_contours_and_fields/interpolation_methods`\n        for an overview of the supported interpolation methods, and\n        :doc:`/gallery/images_contours_and_fields/image_antialiasing` for\n        a discussion of image antialiasing.\n\n        Some interpolation methods require an additional radius parameter,\n        which can be set by *filterrad*. Additionally, the antigrain image\n        resize filter is controlled by the parameter *filternorm*.\n\n    alpha : scalar or array-like, optional\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n        If *alpha* is an array, the alpha blending values are applied pixel\n        by pixel, and *alpha* must have the same shape as *X*.\n\n    vmin, vmax : scalar, optional\n        When using scalar data and no explicit *norm*, *vmin* and *vmax*\n        define the data range that the colormap covers. By default,\n        the colormap covers the complete value range of the supplied\n        data. *vmin*, *vmax* are ignored if the *norm* parameter is used.\n\n    origin : {'upper', 'lower'}, optional\n        Place the [0, 0] index of the array in the upper left or lower left\n        corner of the axes. The convention 'upper' is typically used for\n        matrices and images.\n        If not given, :rc:`image.origin` is used, defaulting to 'upper'.\n\n        Note that the vertical axes points upward for 'lower'\n        but downward for 'upper'.\n\n        See the :doc:`/tutorials/intermediate/imshow_extent` tutorial for\n        examples and a more detailed description.\n\n    extent : scalars (left, right, bottom, top), optional\n        The bounding box in data coordinates that the image will fill.\n        The image is stretched individually along x and y to fill the box.\n\n        The default extent is determined by the following conditions.\n        Pixels have unit size in data coordinates. Their centers are on\n        integer coordinates, and their center coordinates range from 0 to\n        columns-1 horizontally and from 0 to rows-1 vertically.\n\n        Note that the direction of the vertical axis and thus the default\n        values for top and bottom depend on *origin*:\n\n        - For ``origin == 'upper'`` the default is\n          ``(-0.5, numcols-0.5, numrows-0.5, -0.5)``.\n        - For ``origin == 'lower'`` the default is\n          ``(-0.5, numcols-0.5, -0.5, numrows-0.5)``.\n\n        See the :doc:`/tutorials/intermediate/imshow_extent` tutorial for\n        examples and a more detailed description.\n\n    filternorm : bool, default: True\n        A parameter for the antigrain image resize filter (see the\n        antigrain documentation).  If *filternorm* is set, the filter\n        normalizes integer values and corrects the rounding errors. It\n        doesn't do anything with the source floating point values, it\n        corrects only integers according to the rule of 1.0 which means\n        that any sum of pixel weights must be equal to 1.0.  So, the\n        filter function must produce a graph of the proper shape.\n\n    filterrad : float > 0, default: 4.0\n        The filter radius for filters that have a radius parameter, i.e.\n        when interpolation is one of: 'sinc', 'lanczos' or 'blackman'.\n\n    resample : bool, optional\n        When *True*, use a full resampling method.  When *False*, only\n        resample when the output image is larger than the input image.\n\n    url : str, optional\n        Set the url of the created `.AxesImage`. See `.Artist.set_url`.\n\n    Returns\n    -------\n    image : `~matplotlib.image.AxesImage`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.artist.Artist` properties\n        These parameters are passed on to the constructor of the\n        `.AxesImage` artist.\n\n    See also\n    --------\n    matshow : Plot a matrix or an array as an image.\n\n    Notes\n    -----\n    Unless *extent* is used, pixel centers will be located at integer\n    coordinates. In other words: the origin will coincide with the center\n    of pixel (0, 0).\n\n    There are two common representations for RGB images with an alpha\n    channel:\n\n    -   Straight (unassociated) alpha: R, G, and B channels represent the\n        color of the pixel, disregarding its opacity.\n    -   Premultiplied (associated) alpha: R, G, and B channels represent\n        the color of the pixel, adjusted for its opacity by multiplication.\n\n    `~matplotlib.pyplot.imshow` expects RGB images adopting the straight\n    (unassociated) alpha representation.\n    \"\"\"\n    if aspect is None:\n        aspect = rcParams['image.aspect']\n    self.set_aspect(aspect)\n    im = mimage.AxesImage(self, cmap, norm, interpolation, origin, extent,\n                          filternorm=filternorm, filterrad=filterrad,\n                          resample=resample, **kwargs)\n\n    im.set_data(X)\n    im.set_alpha(alpha)\n    if im.get_clip_path() is None:\n        # image does not already have clipping set, clip to axes patch\n        im.set_clip_path(self.patch)\n    if vmin is not None or vmax is not None:\n        im.set_clim(vmin, vmax)\n    else:\n        im.autoscale_None()\n    im.set_url(url)\n\n    # update ax.dataLim, and, if autoscaling, set viewLim\n    # to tightly fit the image, regardless of dataLim.\n    im.set_extent(im.get_extent())\n\n    self.add_image(im)\n    return im",
                "@staticmethod\ndef _pcolorargs(funcname, *args, allmatch=False):\n    # If allmatch is True, then the incoming X, Y, C must have matching\n    # dimensions, taking into account that X and Y can be 1-D rather than\n    # 2-D.  This perfect match is required for Gouraud shading.  For flat\n    # shading, X and Y specify boundaries, so we need one more boundary\n    # than color in each direction.  For convenience, and consistent with\n    # Matlab, we discard the last row and/or column of C if necessary to\n    # meet this condition.  This is done if allmatch is False.\n\n    if len(args) == 1:\n        C = np.asanyarray(args[0])\n        nrows, ncols = C.shape\n        if allmatch:\n            X, Y = np.meshgrid(np.arange(ncols), np.arange(nrows))\n        else:\n            X, Y = np.meshgrid(np.arange(ncols + 1), np.arange(nrows + 1))\n        C = cbook.safe_masked_invalid(C)\n        return X, Y, C\n\n    if len(args) == 3:\n        # Check x and y for bad data...\n        C = np.asanyarray(args[2])\n        X, Y = [cbook.safe_masked_invalid(a) for a in args[:2]]\n        if funcname == 'pcolormesh':\n            if np.ma.is_masked(X) or np.ma.is_masked(Y):\n                raise ValueError(\n                    'x and y arguments to pcolormesh cannot have '\n                    'non-finite values or be of type '\n                    'numpy.ma.core.MaskedArray with masked values')\n            # safe_masked_invalid() returns an ndarray for dtypes other\n            # than floating point.\n            if isinstance(X, np.ma.core.MaskedArray):\n                X = X.data  # strip mask as downstream doesn't like it...\n            if isinstance(Y, np.ma.core.MaskedArray):\n                Y = Y.data\n        nrows, ncols = C.shape\n    else:\n        raise TypeError(\n            'Illegal arguments to %s; see help(%s)' % (funcname, funcname))\n\n    Nx = X.shape[-1]\n    Ny = Y.shape[0]\n    if X.ndim != 2 or X.shape[0] == 1:\n        x = X.reshape(1, Nx)\n        X = x.repeat(Ny, axis=0)\n    if Y.ndim != 2 or Y.shape[1] == 1:\n        y = Y.reshape(Ny, 1)\n        Y = y.repeat(Nx, axis=1)\n    if X.shape != Y.shape:\n        raise TypeError(\n            'Incompatible X, Y inputs to %s; see help(%s)' % (\n            funcname, funcname))\n    if allmatch:\n        if (Nx, Ny) != (ncols, nrows):\n            raise TypeError('Dimensions of C %s are incompatible with'\n                            ' X (%d) and/or Y (%d); see help(%s)' % (\n                                C.shape, Nx, Ny, funcname))\n    else:\n        if not (ncols in (Nx, Nx - 1) and nrows in (Ny, Ny - 1)):\n            raise TypeError('Dimensions of C %s are incompatible with'\n                            ' X (%d) and/or Y (%d); see help(%s)' % (\n                                C.shape, Nx, Ny, funcname))\n        C = C[:Ny - 1, :Nx - 1]\n    C = cbook.safe_masked_invalid(C)\n    return X, Y, C",
                "@_preprocess_data()\n@docstring.dedent_interpd\ndef pcolor(self, *args, alpha=None, norm=None, cmap=None, vmin=None,\n           vmax=None, **kwargs):\n    r\"\"\"\n    Create a pseudocolor plot with a non-regular rectangular grid.\n\n    Call signature::\n\n        pcolor([X, Y,] C, **kwargs)\n\n    *X* and *Y* can be used to specify the corners of the quadrilaterals.\n\n    .. hint::\n\n        ``pcolor()`` can be very slow for large arrays. In most\n        cases you should use the similar but much faster\n        `~.Axes.pcolormesh` instead. See there for a discussion of the\n        differences.\n\n    Parameters\n    ----------\n    C : array-like\n        A scalar 2-D array. The values will be color-mapped.\n\n    X, Y : array-like, optional\n        The coordinates of the quadrilateral corners. The quadrilateral\n        for ``C[i, j]`` has corners at::\n\n            (X[i+1, j], Y[i+1, j])           (X[i+1, j+1], Y[i+1, j+1])\n                                  +---------+\n                                  | C[i, j] |\n                                  +---------+\n                (X[i, j], Y[i, j])           (X[i, j+1], Y[i, j+1])\n\n        Note that the column index corresponds to the\n        x-coordinate, and the row index corresponds to y. For\n        details, see the :ref:`Notes <axes-pcolor-grid-orientation>`\n        section below.\n\n        The dimensions of *X* and *Y* should be one greater than those of\n        *C*. Alternatively, *X*, *Y* and *C* may have equal dimensions, in\n        which case the last row and column of *C* will be ignored.\n\n        If *X* and/or *Y* are 1-D arrays or column vectors they will be\n        expanded as needed into the appropriate 2-D arrays, making a\n        rectangular grid.\n\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        A Colormap instance or registered colormap name. The colormap\n        maps the *C* values to colors. Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The Normalize instance scales the data values to the canonical\n        colormap range [0, 1] for mapping to colors. By default, the data\n        range is mapped to the colorbar range using linear scaling.\n\n    vmin, vmax : scalar, default: None\n        The colorbar range. If *None*, suitable min/max values are\n        automatically chosen by the `~.Normalize` instance (defaults to\n        the respective min/max values of *C* in case of the default linear\n        scaling).\n\n    edgecolors : {'none', None, 'face', color, color sequence}, optional\n        The color of the edges. Defaults to 'none'. Possible values:\n\n        - 'none' or '': No edge.\n        - *None*: :rc:`patch.edgecolor` will be used. Note that currently\n          :rc:`patch.force_edgecolor` has to be True for this to work.\n        - 'face': Use the adjacent face color.\n        - A color or sequence of colors will set the edge color.\n\n        The singular form *edgecolor* works as an alias.\n\n    alpha : scalar, default: None\n        The alpha blending value of the face color, between 0 (transparent)\n        and 1 (opaque). Note: The edgecolor is currently not affected by\n        this.\n\n    snap : bool, default: False\n        Whether to snap the mesh to pixel boundaries.\n\n    Returns\n    -------\n    collection : `matplotlib.collections.Collection`\n\n    Other Parameters\n    ----------------\n    antialiaseds : bool, default: False\n        The default *antialiaseds* is False if the default\n        *edgecolors*\\ =\"none\" is used.  This eliminates artificial lines\n        at patch boundaries, and works regardless of the value of alpha.\n        If *edgecolors* is not \"none\", then the default *antialiaseds*\n        is taken from :rc:`patch.antialiased`.\n        Stroking the edges may be preferred if *alpha* is 1, but will\n        cause artifacts otherwise.\n\n    **kwargs\n        Additionally, the following arguments are allowed. They are passed\n        along to the `~matplotlib.collections.PolyCollection` constructor:\n\n    %(PolyCollection)s\n\n    See Also\n    --------\n    pcolormesh : for an explanation of the differences between\n        pcolor and pcolormesh.\n    imshow : If *X* and *Y* are each equidistant, `~.Axes.imshow` can be a\n        faster alternative.\n\n    Notes\n    -----\n    **Masked arrays**\n\n    *X*, *Y* and *C* may be masked arrays. If either ``C[i, j]``, or one\n    of the vertices surrounding ``C[i, j]`` (*X* or *Y* at\n    ``[i, j], [i+1, j], [i, j+1], [i+1, j+1]``) is masked, nothing is\n    plotted.\n\n    .. _axes-pcolor-grid-orientation:\n\n    **Grid orientation**\n\n    The grid orientation follows the standard matrix convention: An array\n    *C* with shape (nrows, ncolumns) is plotted with the column number as\n    *X* and the row number as *Y*.\n\n    **Handling of pcolor() end-cases**\n\n    ``pcolor()`` displays all columns of *C* if *X* and *Y* are not\n    specified, or if *X* and *Y* have one more column than *C*.\n    If *X* and *Y* have the same number of columns as *C* then the last\n    column of *C* is dropped. Similarly for the rows.\n\n    Note: This behavior is different from MATLAB's ``pcolor()``, which\n    always discards the last row and column of *C*.\n    \"\"\"\n    X, Y, C = self._pcolorargs('pcolor', *args, allmatch=False)\n    Ny, Nx = X.shape\n\n    # unit conversion allows e.g. datetime objects as axis values\n    self._process_unit_info(xdata=X, ydata=Y, kwargs=kwargs)\n    X = self.convert_xunits(X)\n    Y = self.convert_yunits(Y)\n\n    # convert to MA, if necessary.\n    C = ma.asarray(C)\n    X = ma.asarray(X)\n    Y = ma.asarray(Y)\n\n    mask = ma.getmaskarray(X) + ma.getmaskarray(Y)\n    xymask = (mask[0:-1, 0:-1] + mask[1:, 1:] +\n              mask[0:-1, 1:] + mask[1:, 0:-1])\n    # don't plot if C or any of the surrounding vertices are masked.\n    mask = ma.getmaskarray(C) + xymask\n\n    unmask = ~mask\n    X1 = ma.filled(X[:-1, :-1])[unmask]\n    Y1 = ma.filled(Y[:-1, :-1])[unmask]\n    X2 = ma.filled(X[1:, :-1])[unmask]\n    Y2 = ma.filled(Y[1:, :-1])[unmask]\n    X3 = ma.filled(X[1:, 1:])[unmask]\n    Y3 = ma.filled(Y[1:, 1:])[unmask]\n    X4 = ma.filled(X[:-1, 1:])[unmask]\n    Y4 = ma.filled(Y[:-1, 1:])[unmask]\n    npoly = len(X1)\n\n    xy = np.stack([X1, Y1, X2, Y2, X3, Y3, X4, Y4, X1, Y1], axis=-1)\n    verts = xy.reshape((npoly, 5, 2))\n\n    C = ma.filled(C[:Ny - 1, :Nx - 1])[unmask]\n\n    linewidths = (0.25,)\n    if 'linewidth' in kwargs:\n        kwargs['linewidths'] = kwargs.pop('linewidth')\n    kwargs.setdefault('linewidths', linewidths)\n\n    if 'edgecolor' in kwargs:\n        kwargs['edgecolors'] = kwargs.pop('edgecolor')\n    ec = kwargs.setdefault('edgecolors', 'none')\n\n    # aa setting will default via collections to patch.antialiased\n    # unless the boundary is not stroked, in which case the\n    # default will be False; with unstroked boundaries, aa\n    # makes artifacts that are often disturbing.\n    if 'antialiased' in kwargs:\n        kwargs['antialiaseds'] = kwargs.pop('antialiased')\n    if 'antialiaseds' not in kwargs and cbook._str_lower_equal(ec, \"none\"):\n        kwargs['antialiaseds'] = False\n\n    kwargs.setdefault('snap', False)\n\n    collection = mcoll.PolyCollection(verts, **kwargs)\n\n    collection.set_alpha(alpha)\n    collection.set_array(C)\n    collection.set_cmap(cmap)\n    collection.set_norm(norm)\n    collection.set_clim(vmin, vmax)\n    collection.autoscale_None()\n    self.grid(False)\n\n    x = X.compressed()\n    y = Y.compressed()\n\n    # Transform from native to data coordinates?\n    t = collection._transform\n    if (not isinstance(t, mtransforms.Transform) and\n        hasattr(t, '_as_mpl_transform')):\n        t = t._as_mpl_transform(self.axes)\n\n    if t and any(t.contains_branch_seperately(self.transData)):\n        trans_to_data = t - self.transData\n        pts = np.vstack([x, y]).T.astype(float)\n        transformed_pts = trans_to_data.transform(pts)\n        x = transformed_pts[..., 0]\n        y = transformed_pts[..., 1]\n\n    self.add_collection(collection, autolim=False)\n\n    minx = np.min(x)\n    maxx = np.max(x)\n    miny = np.min(y)\n    maxy = np.max(y)\n    collection.sticky_edges.x[:] = [minx, maxx]\n    collection.sticky_edges.y[:] = [miny, maxy]\n    corners = (minx, miny), (maxx, maxy)\n    self.update_datalim(corners)\n    self._request_autoscale_view()\n    return collection",
                "@_preprocess_data()\n@docstring.dedent_interpd\ndef pcolormesh(self, *args, alpha=None, norm=None, cmap=None, vmin=None,\n               vmax=None, shading='flat', antialiased=False, **kwargs):\n    \"\"\"\n    Create a pseudocolor plot with a non-regular rectangular grid.\n\n    Call signature::\n\n        pcolor([X, Y,] C, **kwargs)\n\n    *X* and *Y* can be used to specify the corners of the quadrilaterals.\n\n    .. note::\n\n       `~Axes.pcolormesh` is similar to `~Axes.pcolor`. It's much faster\n       and preferred in most cases. For a detailed discussion on the\n       differences see :ref:`Differences between pcolor() and pcolormesh()\n       <differences-pcolor-pcolormesh>`.\n\n    Parameters\n    ----------\n    C : array-like\n        A scalar 2-D array. The values will be color-mapped.\n\n    X, Y : array-like, optional\n        The coordinates of the quadrilateral corners. The quadrilateral\n        for ``C[i, j]`` has corners at::\n\n            (X[i+1, j], Y[i+1, j])           (X[i+1, j+1], Y[i+1, j+1])\n                                  +---------+\n                                  | C[i, j] |\n                                  +---------+\n                (X[i, j], Y[i, j])           (X[i, j+1], Y[i, j+1])\n\n        Note that the column index corresponds to the\n        x-coordinate, and the row index corresponds to y. For\n        details, see the :ref:`Notes <axes-pcolormesh-grid-orientation>`\n        section below.\n\n        The dimensions of *X* and *Y* should be one greater than those of\n        *C*. Alternatively, *X*, *Y* and *C* may have equal dimensions, in\n        which case the last row and column of *C* will be ignored.\n\n        If *X* and/or *Y* are 1-D arrays or column vectors they will be\n        expanded as needed into the appropriate 2-D arrays, making a\n        rectangular grid.\n\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        A Colormap instance or registered colormap name. The colormap\n        maps the *C* values to colors. Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The Normalize instance scales the data values to the canonical\n        colormap range [0, 1] for mapping to colors. By default, the data\n        range is mapped to the colorbar range using linear scaling.\n\n    vmin, vmax : scalar, default: None\n        The colorbar range. If *None*, suitable min/max values are\n        automatically chosen by the `~.Normalize` instance (defaults to\n        the respective min/max values of *C* in case of the default linear\n        scaling).\n\n    edgecolors : {'none', None, 'face', color, color sequence}, optional\n        The color of the edges. Defaults to 'none'. Possible values:\n\n        - 'none' or '': No edge.\n        - *None*: :rc:`patch.edgecolor` will be used. Note that currently\n          :rc:`patch.force_edgecolor` has to be True for this to work.\n        - 'face': Use the adjacent face color.\n        - A color or sequence of colors will set the edge color.\n\n        The singular form *edgecolor* works as an alias.\n\n    alpha : scalar, default: None\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n    shading : {'flat', 'gouraud'}, optional\n        The fill style, Possible values:\n\n        - 'flat': A solid color is used for each quad. The color of the\n          quad (i, j), (i+1, j), (i, j+1), (i+1, j+1) is given by\n          ``C[i, j]``.\n        - 'gouraud': Each quad will be Gouraud shaded: The color of the\n          corners (i', j') are given by ``C[i',j']``. The color values of\n          the area in between is interpolated from the corner values.\n          When Gouraud shading is used, *edgecolors* is ignored.\n\n    snap : bool, default: False\n        Whether to snap the mesh to pixel boundaries.\n\n    Returns\n    -------\n    mesh : `matplotlib.collections.QuadMesh`\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Additionally, the following arguments are allowed. They are passed\n        along to the `~matplotlib.collections.QuadMesh` constructor:\n\n    %(QuadMesh)s\n\n    See Also\n    --------\n    pcolor : An alternative implementation with slightly different\n        features. For a detailed discussion on the differences see\n        :ref:`Differences between pcolor() and pcolormesh()\n        <differences-pcolor-pcolormesh>`.\n    imshow : If *X* and *Y* are each equidistant, `~.Axes.imshow` can be a\n        faster alternative.\n\n    Notes\n    -----\n    **Masked arrays**\n\n    *C* may be a masked array. If ``C[i, j]`` is masked, the corresponding\n    quadrilateral will be transparent. Masking of *X* and *Y* is not\n    supported. Use `~.Axes.pcolor` if you need this functionality.\n\n    .. _axes-pcolormesh-grid-orientation:\n\n    **Grid orientation**\n\n    The grid orientation follows the standard matrix convention: An array\n    *C* with shape (nrows, ncolumns) is plotted with the column number as\n    *X* and the row number as *Y*.\n\n    .. _differences-pcolor-pcolormesh:\n\n    **Differences between pcolor() and pcolormesh()**\n\n    Both methods are used to create a pseudocolor plot of a 2-D array\n    using quadrilaterals.\n\n    The main difference lies in the created object and internal data\n    handling:\n    While `~.Axes.pcolor` returns a `.PolyCollection`, `~.Axes.pcolormesh`\n    returns a `.QuadMesh`. The latter is more specialized for the given\n    purpose and thus is faster. It should almost always be preferred.\n\n    There is also a slight difference in the handling of masked arrays.\n    Both `~.Axes.pcolor` and `~.Axes.pcolormesh` support masked arrays\n    for *C*. However, only `~.Axes.pcolor` supports masked arrays for *X*\n    and *Y*. The reason lies in the internal handling of the masked values.\n    `~.Axes.pcolor` leaves out the respective polygons from the\n    PolyCollection. `~.Axes.pcolormesh` sets the facecolor of the masked\n    elements to transparent. You can see the difference when using\n    edgecolors. While all edges are drawn irrespective of masking in a\n    QuadMesh, the edge between two adjacent masked quadrilaterals in\n    `~.Axes.pcolor` is not drawn as the corresponding polygons do not\n    exist in the PolyCollection.\n\n    Another difference is the support of Gouraud shading in\n    `~.Axes.pcolormesh`, which is not available with `~.Axes.pcolor`.\n\n    \"\"\"\n    shading = shading.lower()\n    kwargs.setdefault('edgecolors', 'None')\n\n    allmatch = (shading == 'gouraud')\n\n    X, Y, C = self._pcolorargs('pcolormesh', *args, allmatch=allmatch)\n    Ny, Nx = X.shape\n    X = X.ravel()\n    Y = Y.ravel()\n    # unit conversion allows e.g. datetime objects as axis values\n    self._process_unit_info(xdata=X, ydata=Y, kwargs=kwargs)\n    X = self.convert_xunits(X)\n    Y = self.convert_yunits(Y)\n\n    # convert to one dimensional arrays\n    C = C.ravel()\n    coords = np.column_stack((X, Y)).astype(float, copy=False)\n    collection = mcoll.QuadMesh(Nx - 1, Ny - 1, coords,\n                                antialiased=antialiased, shading=shading,\n                                **kwargs)\n    collection.set_alpha(alpha)\n    collection.set_array(C)\n    collection.set_cmap(cmap)\n    collection.set_norm(norm)\n    collection.set_clim(vmin, vmax)\n    collection.autoscale_None()\n\n    self.grid(False)\n\n    # Transform from native to data coordinates?\n    t = collection._transform\n    if (not isinstance(t, mtransforms.Transform) and\n        hasattr(t, '_as_mpl_transform')):\n        t = t._as_mpl_transform(self.axes)\n\n    if t and any(t.contains_branch_seperately(self.transData)):\n        trans_to_data = t - self.transData\n        coords = trans_to_data.transform(coords)\n\n    self.add_collection(collection, autolim=False)\n\n    minx, miny = np.min(coords, axis=0)\n    maxx, maxy = np.max(coords, axis=0)\n    collection.sticky_edges.x[:] = [minx, maxx]\n    collection.sticky_edges.y[:] = [miny, maxy]\n    corners = (minx, miny), (maxx, maxy)\n    self.update_datalim(corners)\n    self._request_autoscale_view()\n    return collection",
                "@_preprocess_data()\n@docstring.dedent_interpd\ndef pcolorfast(self, *args, alpha=None, norm=None, cmap=None, vmin=None,\n               vmax=None, **kwargs):\n    \"\"\"\n    Create a pseudocolor plot with a non-regular rectangular grid.\n\n    Call signature::\n\n      ax.pcolorfast([X, Y], C, /, **kwargs)\n\n    This method is similar to ~.Axes.pcolor` and `~.Axes.pcolormesh`.\n    It's designed to provide the fastest pcolor-type plotting with the\n    Agg backend. To achieve this, it uses different algorithms internally\n    depending on the complexity of the input grid (regular rectangular,\n    non-regular rectangular or arbitrary quadrilateral).\n\n    .. warning::\n\n       This method is experimental. Compared to `~.Axes.pcolor` or\n       `~.Axes.pcolormesh` it has some limitations:\n\n       - It supports only flat shading (no outlines)\n       - It lacks support for log scaling of the axes.\n       - It does not have a have a pyplot wrapper.\n\n    Parameters\n    ----------\n    C : array-like(M, N)\n        The image data. Supported array shapes are:\n\n        - (M, N): an image with scalar data. The data is visualized\n          using a colormap.\n        - (M, N, 3): an image with RGB values (0-1 float or 0-255 int).\n        - (M, N, 4): an image with RGBA values (0-1 float or 0-255 int),\n          i.e. including transparency.\n\n        The first two dimensions (M, N) define the rows and columns of\n        the image.\n\n        This parameter can only be passed positionally.\n\n    X, Y : tuple or array-like, default: ``(0, N)``, ``(0, M)``\n        *X* and *Y* are used to specify the coordinates of the\n        quadrilaterals. There are different ways to do this:\n\n        - Use tuples ``X=(xmin, xmax)`` and ``Y=(ymin, ymax)`` to define\n          a *uniform rectangular grid*.\n\n          The tuples define the outer edges of the grid. All individual\n          quadrilaterals will be of the same size. This is the fastest\n          version.\n\n        - Use 1D arrays *X*, *Y* to specify a *non-uniform rectangular\n          grid*.\n\n          In this case *X* and *Y* have to be monotonic 1D arrays of length\n          *N+1* and *M+1*, specifying the x and y boundaries of the cells.\n\n          The speed is intermediate. Note: The grid is checked, and if\n          found to be uniform the fast version is used.\n\n        - Use 2D arrays *X*, *Y* if you need an *arbitrary quadrilateral\n          grid* (i.e. if the quadrilaterals are not rectangular).\n\n          In this case *X* and *Y* are 2D arrays with shape (M + 1, N + 1),\n          specifying the x and y coordinates of the corners of the colored\n          quadrilaterals.\n\n          This is the most general, but the slowest to render.  It may\n          produce faster and more compact output using ps, pdf, and\n          svg backends, however.\n\n        These arguments can only be passed positionally.\n\n    cmap : str or `~matplotlib.colors.Colormap`, optional\n        A Colormap instance or registered colormap name. The colormap\n        maps the *C* values to colors. Defaults to :rc:`image.cmap`.\n\n    norm : `~matplotlib.colors.Normalize`, optional\n        The Normalize instance scales the data values to the canonical\n        colormap range [0, 1] for mapping to colors. By default, the data\n        range is mapped to the colorbar range using linear scaling.\n\n    vmin, vmax : scalar, default: None\n        The colorbar range. If *None*, suitable min/max values are\n        automatically chosen by the `~.Normalize` instance (defaults to\n        the respective min/max values of *C* in case of the default linear\n        scaling).\n\n    alpha : scalar, default: None\n        The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n    snap : bool, default: False\n        Whether to snap the mesh to pixel boundaries.\n\n    Returns\n    -------\n    image : `.AxesImage` or `.PcolorImage` or `.QuadMesh`\n        The return type depends on the type of grid:\n\n        - `.AxesImage` for a regular rectangular grid.\n        - `.PcolorImage` for a non-regular rectangular grid.\n        - `.QuadMesh` for a non-rectangular grid.\n\n    Notes\n    -----\n    .. [notes section required to get data note injection right]\n    \"\"\"\n\n    C = args[-1]\n    nr, nc = np.shape(C)[:2]\n    if len(args) == 1:\n        style = \"image\"\n        x = [0, nc]\n        y = [0, nr]\n    elif len(args) == 3:\n        x, y = args[:2]\n        x = np.asarray(x)\n        y = np.asarray(y)\n        if x.ndim == 1 and y.ndim == 1:\n            if x.size == 2 and y.size == 2:\n                style = \"image\"\n            else:\n                dx = np.diff(x)\n                dy = np.diff(y)\n                if (np.ptp(dx) < 0.01 * np.abs(dx.mean()) and\n                    np.ptp(dy) < 0.01 * np.abs(dy.mean())):\n                    style = \"image\"\n                else:\n                    style = \"pcolorimage\"\n        elif x.ndim == 2 and y.ndim == 2:\n            style = \"quadmesh\"\n        else:\n            raise TypeError(\"arguments do not match valid signatures\")\n    else:\n        raise TypeError(\"need 1 argument or 3 arguments\")\n\n    if style == \"quadmesh\":\n        # data point in each cell is value at lower left corner\n        coords = np.stack([x, y], axis=-1)\n        if np.ndim(C) == 2:\n            qm_kwargs = {\"array\": np.ma.ravel(C)}\n        elif np.ndim(C) == 3:\n            qm_kwargs = {\"color\": np.ma.reshape(C, (-1, C.shape[-1]))}\n        else:\n            raise ValueError(\"C must be 2D or 3D\")\n        collection = mcoll.QuadMesh(\n            nc, nr, coords, **qm_kwargs,\n            alpha=alpha, cmap=cmap, norm=norm,\n            antialiased=False, edgecolors=\"none\")\n        self.add_collection(collection, autolim=False)\n        xl, xr, yb, yt = x.min(), x.max(), y.min(), y.max()\n        ret = collection\n\n    else:  # It's one of the two image styles.\n        extent = xl, xr, yb, yt = x[0], x[-1], y[0], y[-1]\n        if style == \"image\":\n            im = mimage.AxesImage(\n                self, cmap, norm,\n                data=C, alpha=alpha, extent=extent,\n                interpolation='nearest', origin='lower',\n                **kwargs)\n        elif style == \"pcolorimage\":\n            im = mimage.PcolorImage(\n                self, x, y, C,\n                cmap=cmap, norm=norm, alpha=alpha, extent=extent,\n                **kwargs)\n        self.add_image(im)\n        ret = im\n\n    if vmin is not None or vmax is not None:\n        ret.set_clim(vmin, vmax)\n    elif np.ndim(C) == 2:  # C.ndim == 3 is RGB(A) so doesn't need scaling.\n        ret.autoscale_None()\n    if ret.get_clip_path() is None:\n        # image does not already have clipping set, clip to axes patch\n        ret.set_clip_path(self.patch)\n\n    ret.sticky_edges.x[:] = [xl, xr]\n    ret.sticky_edges.y[:] = [yb, yt]\n    self.update_datalim(np.array([[xl, yb], [xr, yt]]))\n    self._request_autoscale_view(tight=True)\n    return ret",
                "@_preprocess_data()\ndef contour(self, *args, **kwargs):\n    kwargs['filled'] = False\n    contours = mcontour.QuadContourSet(self, *args, **kwargs)\n    self._request_autoscale_view()\n    return contours",
                "@_preprocess_data()\ndef contourf(self, *args, **kwargs):\n    kwargs['filled'] = True\n    contours = mcontour.QuadContourSet(self, *args, **kwargs)\n    self._request_autoscale_view()\n    return contours",
                "def clabel(self, CS, *args, **kwargs):\n    return CS.clabel(*args, **kwargs)",
                "@_preprocess_data(replace_names=[\"x\", 'weights'], label_namer=\"x\")\ndef hist(self, x, bins=None, range=None, density=False, weights=None,\n         cumulative=False, bottom=None, histtype='bar', align='mid',\n         orientation='vertical', rwidth=None, log=False,\n         color=None, label=None, stacked=False, **kwargs):\n    \"\"\"\n    Plot a histogram.\n\n    Compute and draw the histogram of *x*.  The return value is a tuple\n    (*n*, *bins*, *patches*) or ([*n0*, *n1*, ...], *bins*, [*patches0*,\n    *patches1*,...]) if the input contains multiple data.  See the\n    documentation of the *weights* parameter to draw a histogram of\n    already-binned data.\n\n    Multiple data can be provided via *x* as a list of datasets\n    of potentially different length ([*x0*, *x1*, ...]), or as\n    a 2-D ndarray in which each column is a dataset.  Note that\n    the ndarray form is transposed relative to the list form.\n\n    Masked arrays are not supported.\n\n    The *bins*, *range*, *weights*, and *density* parameters behave as in\n    `numpy.histogram`.\n\n    Parameters\n    ----------\n    x : (n,) array or sequence of (n,) arrays\n        Input values, this takes either a single array or a sequence of\n        arrays which are not required to be of the same length.\n\n    bins : int or sequence or str, optional\n        If *bins* is an integer, it defines the number of equal-width bins\n        in the range.\n\n        If *bins* is a sequence, it defines the bin edges, including the\n        left edge of the first bin and the right edge of the last bin;\n        in this case, bins may be unequally spaced.  All but the last\n        (righthand-most) bin is half-open.  In other words, if *bins* is::\n\n            [1, 2, 3, 4]\n\n        then the first bin is ``[1, 2)`` (including 1, but excluding 2) and\n        the second ``[2, 3)``.  The last bin, however, is ``[3, 4]``, which\n        *includes* 4.\n\n        If *bins* is a string, it is one of the binning strategies\n        supported by `numpy.histogram_bin_edges`: 'auto', 'fd', 'doane',\n        'scott', 'stone', 'rice', 'sturges', or 'sqrt'.\n\n        The default is :rc:`hist.bins`.\n\n    range : tuple or None, optional\n        The lower and upper range of the bins. Lower and upper outliers\n        are ignored. If not provided, *range* is ``(x.min(), x.max())``.\n        Range has no effect if *bins* is a sequence.\n\n        If *bins* is a sequence or *range* is specified, autoscaling\n        is based on the specified bin range instead of the\n        range of x.\n\n        Default is ``None``\n\n    density : bool, optional\n        If ``True``, the first element of the return tuple will\n        be the counts normalized to form a probability density, i.e.,\n        the area (or integral) under the histogram will sum to 1.\n        This is achieved by dividing the count by the number of\n        observations times the bin width and not dividing by the total\n        number of observations. If *stacked* is also ``True``, the sum of\n        the histograms is normalized to 1.\n\n        Default is ``False``.\n\n    weights : (n, ) array-like or None, optional\n        An array of weights, of the same shape as *x*.  Each value in *x*\n        only contributes its associated weight towards the bin count\n        (instead of 1).  If *normed* or *density* is ``True``,\n        the weights are normalized, so that the integral of the density\n        over the range remains 1.\n\n        Default is ``None``.\n\n        This parameter can be used to draw a histogram of data that has\n        already been binned, e.g. using `np.histogram` (by treating each\n        bin as a single point with a weight equal to its count) ::\n\n            counts, bins = np.histogram(data)\n            plt.hist(bins[:-1], bins, weights=counts)\n\n        (or you may alternatively use `~.bar()`).\n\n    cumulative : bool or -1, optional\n        If ``True``, then a histogram is computed where each bin gives the\n        counts in that bin plus all bins for smaller values. The last bin\n        gives the total number of datapoints.\n\n        If *density* is also ``True`` then the histogram is normalized such\n        that the last bin equals 1.\n\n        If *cumulative* is a number less than 0 (e.g., -1), the direction\n        of accumulation is reversed.  In this case, if *density* is also\n        ``True``, then the histogram is normalized such that the first bin\n        equals 1.\n\n        Default is ``False``\n\n    bottom : array-like, scalar, or None\n        Location of the bottom baseline of each bin.  If a scalar,\n        the base line for each bin is shifted by the same amount.\n        If an array, each bin is shifted independently and the length\n        of bottom must match the number of bins.  If None, defaults to 0.\n\n        Default is ``None``\n\n    histtype : {'bar', 'barstacked', 'step',  'stepfilled'}, optional\n        The type of histogram to draw.\n\n        - 'bar' is a traditional bar-type histogram.  If multiple data\n          are given the bars are arranged side by side.\n        - 'barstacked' is a bar-type histogram where multiple\n          data are stacked on top of each other.\n        - 'step' generates a lineplot that is by default unfilled.\n        - 'stepfilled' generates a lineplot that is by default filled.\n\n        Default is 'bar'\n\n    align : {'left', 'mid', 'right'}, optional\n        The horizontal alignment of the histogram bars.\n\n        - 'left': bars are centered on the left bin edges.\n        - 'mid': bars are centered between the bin edges.\n        - 'right': bars are centered on the right bin edges.\n\n        Default is 'mid'\n\n    orientation : {'horizontal', 'vertical'}, optional\n        If 'horizontal', `~matplotlib.pyplot.barh` will be used for\n        bar-type histograms and the *bottom* kwarg will be the left edges.\n\n    rwidth : scalar or None, optional\n        The relative width of the bars as a fraction of the bin width.  If\n        ``None``, automatically compute the width.\n\n        Ignored if *histtype* is 'step' or 'stepfilled'.\n\n        Default is ``None``\n\n    log : bool, optional\n        If ``True``, the histogram axis will be set to a log scale. If\n        *log* is ``True`` and *x* is a 1D array, empty bins will be\n        filtered out and only the non-empty ``(n, bins, patches)``\n        will be returned.\n\n        Default is ``False``\n\n    color : color or array-like of colors or None, optional\n        Color or sequence of colors, one per dataset.  Default (``None``)\n        uses the standard line color sequence.\n\n        Default is ``None``\n\n    label : str or None, optional\n        String, or sequence of strings to match multiple datasets.  Bar\n        charts yield multiple patches per dataset, but only the first gets\n        the label, so that the legend command will work as expected.\n\n        default is ``None``\n\n    stacked : bool, optional\n        If ``True``, multiple data are stacked on top of each other If\n        ``False`` multiple data are arranged side by side if histtype is\n        'bar' or on top of each other if histtype is 'step'\n\n        Default is ``False``\n\n    Returns\n    -------\n    n : array or list of arrays\n        The values of the histogram bins. See *density* and *weights* for a\n        description of the possible semantics.  If input *x* is an array,\n        then this is an array of length *nbins*. If input is a sequence of\n        arrays ``[data1, data2, ...]``, then this is a list of arrays with\n        the values of the histograms for each of the arrays in the same\n        order.  The dtype of the array *n* (or of its element arrays) will\n        always be float even if no weighting or normalization is used.\n\n    bins : array\n        The edges of the bins. Length nbins + 1 (nbins left edges and right\n        edge of last bin).  Always a single array even when multiple data\n        sets are passed in.\n\n    patches : list or list of lists\n        Silent list of individual patches used to create the histogram\n        or list of such list if multiple input datasets.\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.patches.Patch` properties\n\n    See also\n    --------\n    hist2d : 2D histograms\n\n    Notes\n    -----\n    For large numbers of bins (>1000), 'step' and 'stepfilled' can be\n    significantly faster than 'bar' and 'barstacked'.\n\n    \"\"\"\n    # Avoid shadowing the builtin.\n    bin_range = range\n    from builtins import range\n\n    if np.isscalar(x):\n        x = [x]\n\n    if bins is None:\n        bins = rcParams['hist.bins']\n\n    # Validate string inputs here to avoid cluttering subsequent code.\n    cbook._check_in_list(['bar', 'barstacked', 'step', 'stepfilled'],\n                         histtype=histtype)\n    cbook._check_in_list(['left', 'mid', 'right'], align=align)\n    cbook._check_in_list(['horizontal', 'vertical'],\n                         orientation=orientation)\n\n    if histtype == 'barstacked' and not stacked:\n        stacked = True\n\n    # basic input validation\n    input_empty = np.size(x) == 0\n    # Massage 'x' for processing.\n    x = cbook._reshape_2D(x, 'x')\n    nx = len(x)  # number of datasets\n\n    # Process unit information\n    # Unit conversion is done individually on each dataset\n    self._process_unit_info(xdata=x[0], kwargs=kwargs)\n    x = [self.convert_xunits(xi) for xi in x]\n\n    if bin_range is not None:\n        bin_range = self.convert_xunits(bin_range)\n\n    if not cbook.is_scalar_or_string(bins):\n        bins = self.convert_xunits(bins)\n\n    # We need to do to 'weights' what was done to 'x'\n    if weights is not None:\n        w = cbook._reshape_2D(weights, 'weights')\n    else:\n        w = [None] * nx\n\n    if len(w) != nx:\n        raise ValueError('weights should have the same shape as x')\n\n    for xi, wi in zip(x, w):\n        if wi is not None and len(wi) != len(xi):\n            raise ValueError(\n                'weights should have the same shape as x')\n\n    if color is None:\n        color = [self._get_lines.get_next_color() for i in range(nx)]\n    else:\n        color = mcolors.to_rgba_array(color)\n        if len(color) != nx:\n            error_message = (\n                \"color kwarg must have one color per data set. %d data \"\n                \"sets and %d colors were provided\" % (nx, len(color)))\n            raise ValueError(error_message)\n\n    hist_kwargs = dict()\n\n    # if the bin_range is not given, compute without nan numpy\n    # does not do this for us when guessing the range (but will\n    # happily ignore nans when computing the histogram).\n    if bin_range is None:\n        xmin = np.inf\n        xmax = -np.inf\n        for xi in x:\n            if len(xi):\n                # python's min/max ignore nan,\n                # np.minnan returns nan for all nan input\n                xmin = min(xmin, np.nanmin(xi))\n                xmax = max(xmax, np.nanmax(xi))\n        # make sure we have seen at least one non-nan and finite\n        # value before we reset the bin range\n        if not np.isnan([xmin, xmax]).any() and not (xmin > xmax):\n            bin_range = (xmin, xmax)\n\n    # If bins are not specified either explicitly or via range,\n    # we need to figure out the range required for all datasets,\n    # and supply that to np.histogram.\n    if not input_empty and len(x) > 1:\n        if weights is not None:\n            _w = np.concatenate(w)\n        else:\n            _w = None\n        bins = np.histogram_bin_edges(\n            np.concatenate(x), bins, bin_range, _w)\n    else:\n        hist_kwargs['range'] = bin_range\n\n    density = bool(density)\n    if density and not stacked:\n        hist_kwargs['density'] = density\n\n    # List to store all the top coordinates of the histograms\n    tops = []  # Will have shape (n_datasets, n_bins).\n    # Loop through datasets\n    for i in range(nx):\n        # this will automatically overwrite bins,\n        # so that each histogram uses the same bins\n        m, bins = np.histogram(x[i], bins, weights=w[i], **hist_kwargs)\n        tops.append(m)\n    tops = np.array(tops, float)  # causes problems later if it's an int\n    if stacked:\n        tops = tops.cumsum(axis=0)\n        # If a stacked density plot, normalize so the area of all the\n        # stacked histograms together is 1\n        if density:\n            tops = (tops / np.diff(bins)) / tops[-1].sum()\n    if cumulative:\n        slc = slice(None)\n        if isinstance(cumulative, Number) and cumulative < 0:\n            slc = slice(None, None, -1)\n        if density:\n            tops = (tops * np.diff(bins))[:, slc].cumsum(axis=1)[:, slc]\n        else:\n            tops = tops[:, slc].cumsum(axis=1)[:, slc]\n\n    patches = []\n\n    # Save autoscale state for later restoration; turn autoscaling\n    # off so we can do it all a single time at the end, instead\n    # of having it done by bar or fill and then having to be redone.\n    _saved_autoscalex = self.get_autoscalex_on()\n    _saved_autoscaley = self.get_autoscaley_on()\n    self.set_autoscalex_on(False)\n    self.set_autoscaley_on(False)\n\n    if histtype.startswith('bar'):\n\n        totwidth = np.diff(bins)\n\n        if rwidth is not None:\n            dr = np.clip(rwidth, 0, 1)\n        elif (len(tops) > 1 and\n              ((not stacked) or rcParams['_internal.classic_mode'])):\n            dr = 0.8\n        else:\n            dr = 1.0\n\n        if histtype == 'bar' and not stacked:\n            width = dr * totwidth / nx\n            dw = width\n            boffset = -0.5 * dr * totwidth * (1 - 1 / nx)\n        elif histtype == 'barstacked' or stacked:\n            width = dr * totwidth\n            boffset, dw = 0.0, 0.0\n\n        if align == 'mid':\n            boffset += 0.5 * totwidth\n        elif align == 'right':\n            boffset += totwidth\n\n        if orientation == 'horizontal':\n            _barfunc = self.barh\n            bottom_kwarg = 'left'\n        else:  # orientation == 'vertical'\n            _barfunc = self.bar\n            bottom_kwarg = 'bottom'\n\n        for m, c in zip(tops, color):\n            if bottom is None:\n                bottom = np.zeros(len(m))\n            if stacked:\n                height = m - bottom\n            else:\n                height = m\n            patch = _barfunc(bins[:-1]+boffset, height, width,\n                             align='center', log=log,\n                             color=c, **{bottom_kwarg: bottom})\n            patches.append(patch)\n            if stacked:\n                bottom[:] = m\n            boffset += dw\n\n    elif histtype.startswith('step'):\n        # these define the perimeter of the polygon\n        x = np.zeros(4 * len(bins) - 3)\n        y = np.zeros(4 * len(bins) - 3)\n\n        x[0:2*len(bins)-1:2], x[1:2*len(bins)-1:2] = bins, bins[:-1]\n        x[2*len(bins)-1:] = x[1:2*len(bins)-1][::-1]\n\n        if bottom is None:\n            bottom = np.zeros(len(bins) - 1)\n\n        y[1:2*len(bins)-1:2], y[2:2*len(bins):2] = bottom, bottom\n        y[2*len(bins)-1:] = y[1:2*len(bins)-1][::-1]\n\n        if log:\n            if orientation == 'horizontal':\n                self.set_xscale('log', nonposx='clip')\n            else:  # orientation == 'vertical'\n                self.set_yscale('log', nonposy='clip')\n\n        if align == 'left':\n            x -= 0.5*(bins[1]-bins[0])\n        elif align == 'right':\n            x += 0.5*(bins[1]-bins[0])\n\n        # If fill kwarg is set, it will be passed to the patch collection,\n        # overriding this\n        fill = (histtype == 'stepfilled')\n\n        xvals, yvals = [], []\n        for m in tops:\n            if stacked:\n                # top of the previous polygon becomes the bottom\n                y[2*len(bins)-1:] = y[1:2*len(bins)-1][::-1]\n            # set the top of this polygon\n            y[1:2*len(bins)-1:2], y[2:2*len(bins):2] = (m + bottom,\n                                                        m + bottom)\n\n            # The starting point of the polygon has not yet been\n            # updated. So far only the endpoint was adjusted. This\n            # assignment closes the polygon. The redundant endpoint is\n            # later discarded (for step and stepfilled).\n            y[0] = y[-1]\n\n            if orientation == 'horizontal':\n                xvals.append(y.copy())\n                yvals.append(x.copy())\n            else:\n                xvals.append(x.copy())\n                yvals.append(y.copy())\n\n        # stepfill is closed, step is not\n        split = -1 if fill else 2 * len(bins)\n        # add patches in reverse order so that when stacking,\n        # items lower in the stack are plotted on top of\n        # items higher in the stack\n        for x, y, c in reversed(list(zip(xvals, yvals, color))):\n            patches.append(self.fill(\n                x[:split], y[:split],\n                closed=True if fill else None,\n                facecolor=c,\n                edgecolor=None if fill else c,\n                fill=fill if fill else None))\n        for patch_list in patches:\n            for patch in patch_list:\n                if orientation == 'vertical':\n                    patch.sticky_edges.y.append(0)\n                elif orientation == 'horizontal':\n                    patch.sticky_edges.x.append(0)\n\n        # we return patches, so put it back in the expected order\n        patches.reverse()\n\n    self.set_autoscalex_on(_saved_autoscalex)\n    self.set_autoscaley_on(_saved_autoscaley)\n    self._request_autoscale_view()\n\n    if label is None:\n        labels = [None]\n    elif isinstance(label, str):\n        labels = [label]\n    elif not np.iterable(label):\n        labels = [str(label)]\n    else:\n        labels = [str(lab) for lab in label]\n\n    for patch, lbl in itertools.zip_longest(patches, labels):\n        if patch:\n            p = patch[0]\n            p.update(kwargs)\n            if lbl is not None:\n                p.set_label(lbl)\n\n            for p in patch[1:]:\n                p.update(kwargs)\n                p.set_label('_nolegend_')\n\n    if nx == 1:\n        return tops[0], bins, cbook.silent_list('Patch', patches[0])\n    else:\n        return tops, bins, cbook.silent_list('Lists of Patches', patches)",
                "@_preprocess_data(replace_names=[\"x\", \"y\", \"weights\"])\n@cbook._rename_parameter(\"3.1\", \"normed\", \"density\")\ndef hist2d(self, x, y, bins=10, range=None, density=False, weights=None,\n           cmin=None, cmax=None, **kwargs):\n    \"\"\"\n    Make a 2D histogram plot.\n\n    Parameters\n    ----------\n    x, y : array-like, shape (n, )\n        Input values\n\n    bins : None or int or [int, int] or array-like or [array, array]\n\n        The bin specification:\n\n        - If int, the number of bins for the two dimensions\n          (nx=ny=bins).\n        - If ``[int, int]``, the number of bins in each dimension\n          (nx, ny = bins).\n        - If array-like, the bin edges for the two dimensions\n          (x_edges=y_edges=bins).\n        - If ``[array, array]``, the bin edges in each dimension\n          (x_edges, y_edges = bins).\n\n        The default value is 10.\n\n    range : array-like shape(2, 2), optional\n        The leftmost and rightmost edges of the bins along each dimension\n        (if not specified explicitly in the bins parameters): ``[[xmin,\n        xmax], [ymin, ymax]]``. All values outside of this range will be\n        considered outliers and not tallied in the histogram.\n\n    density : bool, default: False\n        Normalize histogram.  *normed* is a deprecated synonym for this\n        parameter.\n\n    weights : array-like, shape (n, ), optional\n        An array of values w_i weighing each sample (x_i, y_i).\n\n    cmin : scalar, optional, default: None\n        All bins that has count less than cmin will not be displayed (set\n        to NaN before passing to imshow) and these count values in the\n        return value count histogram will also be set to nan upon return.\n\n    cmax : scalar, optional, default: None\n        All bins that has count more than cmax will not be displayed (set\n        to NaN before passing to imshow) and these count values in the\n        return value count histogram will also be set to nan upon return.\n\n    Returns\n    -------\n    h : 2D array\n        The bi-dimensional histogram of samples x and y. Values in x are\n        histogrammed along the first dimension and values in y are\n        histogrammed along the second dimension.\n    xedges : 1D array\n        The bin edges along the x axis.\n    yedges : 1D array\n        The bin edges along the y axis.\n    image : `~.matplotlib.collections.QuadMesh`\n\n    Other Parameters\n    ----------------\n    cmap : Colormap or str, optional\n        A `.colors.Colormap` instance.  If not set, use rc settings.\n\n    norm : Normalize, optional\n        A `.colors.Normalize` instance is used to\n        scale luminance data to ``[0, 1]``. If not set, defaults to\n        `.colors.Normalize()`.\n\n    vmin/vmax : None or scalar, optional\n        Arguments passed to the `~.colors.Normalize` instance.\n\n    alpha : ``0 <= scalar <= 1`` or ``None``, optional\n        The alpha blending value.\n\n    See also\n    --------\n    hist : 1D histogram plotting\n\n    Notes\n    -----\n    - Currently ``hist2d`` calculates its own axis limits, and any limits\n      previously set are ignored.\n    - Rendering the histogram with a logarithmic color scale is\n      accomplished by passing a `.colors.LogNorm` instance to the *norm*\n      keyword argument. Likewise, power-law normalization (similar\n      in effect to gamma correction) can be accomplished with\n      `.colors.PowerNorm`.\n    \"\"\"\n\n    h, xedges, yedges = np.histogram2d(x, y, bins=bins, range=range,\n                                       normed=density, weights=weights)\n\n    if cmin is not None:\n        h[h < cmin] = None\n    if cmax is not None:\n        h[h > cmax] = None\n\n    pc = self.pcolormesh(xedges, yedges, h.T, **kwargs)\n    self.set_xlim(xedges[0], xedges[-1])\n    self.set_ylim(yedges[0], yedges[-1])\n\n    return h, xedges, yedges, pc",
                "@_preprocess_data(replace_names=[\"x\"])\n@docstring.dedent_interpd\ndef psd(self, x, NFFT=None, Fs=None, Fc=None, detrend=None,\n        window=None, noverlap=None, pad_to=None,\n        sides=None, scale_by_freq=None, return_line=None, **kwargs):\n    r\"\"\"\n    Plot the power spectral density.\n\n    The power spectral density :math:`P_{xx}` by Welch's average\n    periodogram method.  The vector *x* is divided into *NFFT* length\n    segments.  Each segment is detrended by function *detrend* and\n    windowed by function *window*.  *noverlap* gives the length of\n    the overlap between segments.  The :math:`|\\mathrm{fft}(i)|^2`\n    of each segment :math:`i` are averaged to compute :math:`P_{xx}`,\n    with a scaling to correct for power loss due to windowing.\n\n    If len(*x*) < *NFFT*, it will be zero padded to *NFFT*.\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data\n\n    %(Spectral)s\n\n    %(PSD)s\n\n    noverlap : int\n        The number of points of overlap between segments.\n        The default value is 0 (no overlap).\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    return_line : bool, default: False\n        Whether to include the line object plotted in the returned values.\n\n    Returns\n    -------\n    Pxx : 1-D array\n        The values for the power spectrum :math:`P_{xx}` before scaling\n        (real valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *Pxx*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n        Only returned if *return_line* is True.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`specgram`\n        :func:`specgram` differs in the default overlap; in not returning\n        the mean of the segment periodograms; in returning the times of the\n        segments; and in plotting a colormap instead of a line.\n\n    :func:`magnitude_spectrum`\n        :func:`magnitude_spectrum` plots the magnitude spectrum.\n\n    :func:`csd`\n        :func:`csd` plots the spectral density between two signals.\n\n    Notes\n    -----\n    For plotting, the power is plotted as\n    :math:`10\\log_{10}(P_{xx})` for decibels, though *Pxx* itself\n    is returned.\n\n    References\n    ----------\n    Bendat & Piersol -- Random Data: Analysis and Measurement Procedures,\n    John Wiley & Sons (1986)\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n\n    pxx, freqs = mlab.psd(x=x, NFFT=NFFT, Fs=Fs, detrend=detrend,\n                          window=window, noverlap=noverlap, pad_to=pad_to,\n                          sides=sides, scale_by_freq=scale_by_freq)\n    freqs += Fc\n\n    if scale_by_freq in (None, True):\n        psd_units = 'dB/Hz'\n    else:\n        psd_units = 'dB'\n\n    line = self.plot(freqs, 10 * np.log10(pxx), **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Power Spectral Density (%s)' % psd_units)\n    self.grid(True)\n    vmin, vmax = self.viewLim.intervaly\n    intv = vmax - vmin\n    logi = int(np.log10(intv))\n    if logi == 0:\n        logi = .1\n    step = 10 * logi\n    ticks = np.arange(math.floor(vmin), math.ceil(vmax) + 1, step)\n    self.set_yticks(ticks)\n\n    if return_line is None or not return_line:\n        return pxx, freqs\n    else:\n        return pxx, freqs, line",
                "@_preprocess_data(replace_names=[\"x\", \"y\"], label_namer=\"y\")\n@docstring.dedent_interpd\ndef csd(self, x, y, NFFT=None, Fs=None, Fc=None, detrend=None,\n        window=None, noverlap=None, pad_to=None,\n        sides=None, scale_by_freq=None, return_line=None, **kwargs):\n    r\"\"\"\n    Plot the cross-spectral density.\n\n    The cross spectral density :math:`P_{xy}` by Welch's average\n    periodogram method.  The vectors *x* and *y* are divided into\n    *NFFT* length segments.  Each segment is detrended by function\n    *detrend* and windowed by function *window*.  *noverlap* gives\n    the length of the overlap between segments.  The product of\n    the direct FFTs of *x* and *y* are averaged over each segment\n    to compute :math:`P_{xy}`, with a scaling to correct for power\n    loss due to windowing.\n\n    If len(*x*) < *NFFT* or len(*y*) < *NFFT*, they will be zero\n    padded to *NFFT*.\n\n    Parameters\n    ----------\n    x, y : 1-D arrays or sequences\n        Arrays or sequences containing the data.\n\n    %(Spectral)s\n\n    %(PSD)s\n\n    noverlap : int\n        The number of points of overlap between segments.\n        The default value is 0 (no overlap).\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    return_line : bool, default: False\n        Whether to include the line object plotted in the returned values.\n\n    Returns\n    -------\n    Pxy : 1-D array\n        The values for the cross spectrum :math:`P_{xy}` before scaling\n        (complex valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *Pxy*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n        Only returned if *return_line* is True.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`psd`\n        :func:`psd` is the equivalent to setting y=x.\n\n    Notes\n    -----\n    For plotting, the power is plotted as\n    :math:`10 \\log_{10}(P_{xy})` for decibels, though :math:`P_{xy}` itself\n    is returned.\n\n    References\n    ----------\n    Bendat & Piersol -- Random Data: Analysis and Measurement Procedures,\n    John Wiley & Sons (1986)\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n\n    pxy, freqs = mlab.csd(x=x, y=y, NFFT=NFFT, Fs=Fs, detrend=detrend,\n                          window=window, noverlap=noverlap, pad_to=pad_to,\n                          sides=sides, scale_by_freq=scale_by_freq)\n    # pxy is complex\n    freqs += Fc\n\n    line = self.plot(freqs, 10 * np.log10(np.abs(pxy)), **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Cross Spectrum Magnitude (dB)')\n    self.grid(True)\n    vmin, vmax = self.viewLim.intervaly\n\n    intv = vmax - vmin\n    step = 10 * int(np.log10(intv))\n\n    ticks = np.arange(math.floor(vmin), math.ceil(vmax) + 1, step)\n    self.set_yticks(ticks)\n\n    if return_line is None or not return_line:\n        return pxy, freqs\n    else:\n        return pxy, freqs, line",
                "@_preprocess_data(replace_names=[\"x\"])\n@docstring.dedent_interpd\ndef magnitude_spectrum(self, x, Fs=None, Fc=None, window=None,\n                       pad_to=None, sides=None, scale=None,\n                       **kwargs):\n    \"\"\"\n    Plot the magnitude spectrum.\n\n    Compute the magnitude spectrum of *x*.  Data is padded to a\n    length of *pad_to* and the windowing function *window* is applied to\n    the signal.\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data.\n\n    %(Spectral)s\n\n    %(Single_Spectrum)s\n\n    scale : {'default', 'linear', 'dB'}\n        The scaling of the values in the *spec*.  'linear' is no scaling.\n        'dB' returns the values in dB scale, i.e., the dB amplitude\n        (20 * log10). 'default' is 'linear'.\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    Returns\n    -------\n    spectrum : 1-D array\n        The values for the magnitude spectrum before scaling (real valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *spectrum*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`psd`\n        :func:`psd` plots the power spectral density.`.\n\n    :func:`angle_spectrum`\n        :func:`angle_spectrum` plots the angles of the corresponding\n        frequencies.\n\n    :func:`phase_spectrum`\n        :func:`phase_spectrum` plots the phase (unwrapped angle) of the\n        corresponding frequencies.\n\n    :func:`specgram`\n        :func:`specgram` can plot the magnitude spectrum of segments within\n        the signal in a colormap.\n\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n\n    spec, freqs = mlab.magnitude_spectrum(x=x, Fs=Fs, window=window,\n                                          pad_to=pad_to, sides=sides)\n    freqs += Fc\n\n    yunits = cbook._check_getitem(\n        {None: 'energy', 'default': 'energy', 'linear': 'energy',\n         'dB': 'dB'},\n        scale=scale)\n    if yunits == 'energy':\n        Z = spec\n    else:  # yunits == 'dB'\n        Z = 20. * np.log10(spec)\n\n    line, = self.plot(freqs, Z, **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Magnitude (%s)' % yunits)\n\n    return spec, freqs, line",
                "@_preprocess_data(replace_names=[\"x\"])\n@docstring.dedent_interpd\ndef angle_spectrum(self, x, Fs=None, Fc=None, window=None,\n                   pad_to=None, sides=None, **kwargs):\n    \"\"\"\n    Plot the angle spectrum.\n\n    Compute the angle spectrum (wrapped phase spectrum) of *x*.\n    Data is padded to a length of *pad_to* and the windowing function\n    *window* is applied to the signal.\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data.\n\n    %(Spectral)s\n\n    %(Single_Spectrum)s\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    Returns\n    -------\n    spectrum : 1-D array\n        The values for the angle spectrum in radians (real valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *spectrum*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`magnitude_spectrum`\n        :func:`angle_spectrum` plots the magnitudes of the corresponding\n        frequencies.\n\n    :func:`phase_spectrum`\n        :func:`phase_spectrum` plots the unwrapped version of this\n        function.\n\n    :func:`specgram`\n        :func:`specgram` can plot the angle spectrum of segments within the\n        signal in a colormap.\n\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n\n    spec, freqs = mlab.angle_spectrum(x=x, Fs=Fs, window=window,\n                                      pad_to=pad_to, sides=sides)\n    freqs += Fc\n\n    lines = self.plot(freqs, spec, **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Angle (radians)')\n\n    return spec, freqs, lines[0]",
                "@_preprocess_data(replace_names=[\"x\"])\n@docstring.dedent_interpd\ndef phase_spectrum(self, x, Fs=None, Fc=None, window=None,\n                   pad_to=None, sides=None, **kwargs):\n    \"\"\"\n    Plot the phase spectrum.\n\n    Compute the phase spectrum (unwrapped angle spectrum) of *x*.\n    Data is padded to a length of *pad_to* and the windowing function\n    *window* is applied to the signal.\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data\n\n    %(Spectral)s\n\n    %(Single_Spectrum)s\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    Returns\n    -------\n    spectrum : 1-D array\n        The values for the phase spectrum in radians (real valued).\n\n    freqs : 1-D array\n        The frequencies corresponding to the elements in *spectrum*.\n\n    line : `~matplotlib.lines.Line2D`\n        The line created by this function.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    See Also\n    --------\n    :func:`magnitude_spectrum`\n        :func:`magnitude_spectrum` plots the magnitudes of the\n        corresponding frequencies.\n\n    :func:`angle_spectrum`\n        :func:`angle_spectrum` plots the wrapped version of this function.\n\n    :func:`specgram`\n        :func:`specgram` can plot the phase spectrum of segments within the\n        signal in a colormap.\n\n    \"\"\"\n    if Fc is None:\n        Fc = 0\n\n    spec, freqs = mlab.phase_spectrum(x=x, Fs=Fs, window=window,\n                                      pad_to=pad_to, sides=sides)\n    freqs += Fc\n\n    lines = self.plot(freqs, spec, **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Phase (radians)')\n\n    return spec, freqs, lines[0]",
                "@_preprocess_data(replace_names=[\"x\", \"y\"])\n@docstring.dedent_interpd\ndef cohere(self, x, y, NFFT=256, Fs=2, Fc=0, detrend=mlab.detrend_none,\n           window=mlab.window_hanning, noverlap=0, pad_to=None,\n           sides='default', scale_by_freq=None, **kwargs):\n    r\"\"\"\n    Plot the coherence between *x* and *y*.\n\n    Plot the coherence between *x* and *y*.  Coherence is the\n    normalized cross spectral density:\n\n    .. math::\n\n      C_{xy} = \\frac{|P_{xy}|^2}{P_{xx}P_{yy}}\n\n    Parameters\n    ----------\n    %(Spectral)s\n\n    %(PSD)s\n\n    noverlap : int\n        The number of points of overlap between blocks.  The\n        default value is 0 (no overlap).\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n\n    Returns\n    -------\n    Cxy : 1-D array\n        The coherence vector.\n\n    freqs : 1-D array\n        The frequencies for the elements in *Cxy*.\n\n    Other Parameters\n    ----------------\n    **kwargs\n        Keyword arguments control the `.Line2D` properties:\n\n        %(_Line2D_docstr)s\n\n    References\n    ----------\n    Bendat & Piersol -- Random Data: Analysis and Measurement Procedures,\n    John Wiley & Sons (1986)\n    \"\"\"\n    cxy, freqs = mlab.cohere(x=x, y=y, NFFT=NFFT, Fs=Fs, detrend=detrend,\n                             window=window, noverlap=noverlap,\n                             scale_by_freq=scale_by_freq)\n    freqs += Fc\n\n    self.plot(freqs, cxy, **kwargs)\n    self.set_xlabel('Frequency')\n    self.set_ylabel('Coherence')\n    self.grid(True)\n\n    return cxy, freqs",
                "@_preprocess_data(replace_names=[\"x\"])\n@docstring.dedent_interpd\ndef specgram(self, x, NFFT=None, Fs=None, Fc=None, detrend=None,\n             window=None, noverlap=None,\n             cmap=None, xextent=None, pad_to=None, sides=None,\n             scale_by_freq=None, mode=None, scale=None,\n             vmin=None, vmax=None, **kwargs):\n    \"\"\"\n    Plot a spectrogram.\n\n    Compute and plot a spectrogram of data in *x*.  Data are split into\n    *NFFT* length segments and the spectrum of each section is\n    computed.  The windowing function *window* is applied to each\n    segment, and the amount of overlap of each segment is\n    specified with *noverlap*. The spectrogram is plotted as a colormap\n    (using imshow).\n\n    Parameters\n    ----------\n    x : 1-D array or sequence\n        Array or sequence containing the data.\n\n    %(Spectral)s\n\n    %(PSD)s\n\n    mode : {'default', 'psd', 'magnitude', 'angle', 'phase'}\n        What sort of spectrum to use.  Default is 'psd', which takes the\n        power spectral density.  'magnitude' returns the magnitude\n        spectrum.  'angle' returns the phase spectrum without unwrapping.\n        'phase' returns the phase spectrum with unwrapping.\n\n    noverlap : int\n        The number of points of overlap between blocks.  The\n        default value is 128.\n\n    scale : {'default', 'linear', 'dB'}\n        The scaling of the values in the *spec*.  'linear' is no scaling.\n        'dB' returns the values in dB scale.  When *mode* is 'psd',\n        this is dB power (10 * log10).  Otherwise this is dB amplitude\n        (20 * log10). 'default' is 'dB' if *mode* is 'psd' or\n        'magnitude' and 'linear' otherwise.  This must be 'linear'\n        if *mode* is 'angle' or 'phase'.\n\n    Fc : int\n        The center frequency of *x* (defaults to 0), which offsets\n        the x extents of the plot to reflect the frequency range used\n        when a signal is acquired and then filtered and downsampled to\n        baseband.\n\n    cmap\n        A :class:`matplotlib.colors.Colormap` instance; if *None*, use\n        default determined by rc\n\n    xextent : *None* or (xmin, xmax)\n        The image extent along the x-axis. The default sets *xmin* to the\n        left border of the first bin (*spectrum* column) and *xmax* to the\n        right border of the last bin. Note that for *noverlap>0* the width\n        of the bins is smaller than those of the segments.\n\n    **kwargs\n        Additional keyword arguments are passed on to imshow which makes\n        the specgram image.\n\n    Returns\n    -------\n    spectrum : 2-D array\n        Columns are the periodograms of successive segments.\n\n    freqs : 1-D array\n        The frequencies corresponding to the rows in *spectrum*.\n\n    t : 1-D array\n        The times corresponding to midpoints of segments (i.e., the columns\n        in *spectrum*).\n\n    im : instance of class :class:`~matplotlib.image.AxesImage`\n        The image created by imshow containing the spectrogram\n\n    See Also\n    --------\n    :func:`psd`\n        :func:`psd` differs in the default overlap; in returning the mean\n        of the segment periodograms; in not returning times; and in\n        generating a line plot instead of colormap.\n\n    :func:`magnitude_spectrum`\n        A single spectrum, similar to having a single segment when *mode*\n        is 'magnitude'. Plots a line instead of a colormap.\n\n    :func:`angle_spectrum`\n        A single spectrum, similar to having a single segment when *mode*\n        is 'angle'. Plots a line instead of a colormap.\n\n    :func:`phase_spectrum`\n        A single spectrum, similar to having a single segment when *mode*\n        is 'phase'. Plots a line instead of a colormap.\n\n    Notes\n    -----\n    The parameters *detrend* and *scale_by_freq* do only apply when *mode*\n    is set to 'psd'.\n    \"\"\"\n    if NFFT is None:\n        NFFT = 256  # same default as in mlab.specgram()\n    if Fc is None:\n        Fc = 0  # same default as in mlab._spectral_helper()\n    if noverlap is None:\n        noverlap = 128  # same default as in mlab.specgram()\n\n    if mode == 'complex':\n        raise ValueError('Cannot plot a complex specgram')\n\n    if scale is None or scale == 'default':\n        if mode in ['angle', 'phase']:\n            scale = 'linear'\n        else:\n            scale = 'dB'\n    elif mode in ['angle', 'phase'] and scale == 'dB':\n        raise ValueError('Cannot use dB scale with angle or phase mode')\n\n    spec, freqs, t = mlab.specgram(x=x, NFFT=NFFT, Fs=Fs,\n                                   detrend=detrend, window=window,\n                                   noverlap=noverlap, pad_to=pad_to,\n                                   sides=sides,\n                                   scale_by_freq=scale_by_freq,\n                                   mode=mode)\n\n    if scale == 'linear':\n        Z = spec\n    elif scale == 'dB':\n        if mode is None or mode == 'default' or mode == 'psd':\n            Z = 10. * np.log10(spec)\n        else:\n            Z = 20. * np.log10(spec)\n    else:\n        raise ValueError('Unknown scale %s', scale)\n\n    Z = np.flipud(Z)\n\n    if xextent is None:\n        # padding is needed for first and last segment:\n        pad_xextent = (NFFT-noverlap) / Fs / 2\n        xextent = np.min(t) - pad_xextent, np.max(t) + pad_xextent\n    xmin, xmax = xextent\n    freqs += Fc\n    extent = xmin, xmax, freqs[0], freqs[-1]\n    im = self.imshow(Z, cmap, extent=extent, vmin=vmin, vmax=vmax,\n                     **kwargs)\n    self.axis('auto')\n\n    return spec, freqs, t, im",
                "@docstring.dedent_interpd\ndef spy(self, Z, precision=0, marker=None, markersize=None,\n        aspect='equal', origin=\"upper\", **kwargs):\n    \"\"\"\n    Plot the sparsity pattern of a 2D array.\n\n    This visualizes the non-zero values of the array.\n\n    Two plotting styles are available: image and marker. Both\n    are available for full arrays, but only the marker style\n    works for `scipy.sparse.spmatrix` instances.\n\n    **Image style**\n\n    If *marker* and *markersize* are *None*, `~.Axes.imshow` is used. Any\n    extra remaining keyword arguments are passed to this method.\n\n    **Marker style**\n\n    If *Z* is a `scipy.sparse.spmatrix` or *marker* or *markersize* are\n    *None*, a `.Line2D` object will be returned with the value of marker\n    determining the marker type, and any remaining keyword arguments\n    passed to `~.Axes.plot`.\n\n    Parameters\n    ----------\n    Z : array-like (M, N)\n        The array to be plotted.\n\n    precision : float or 'present', default: 0\n        If *precision* is 0, any non-zero value will be plotted. Otherwise,\n        values of :math:`|Z| > precision` will be plotted.\n\n        For :class:`scipy.sparse.spmatrix` instances, you can also\n        pass 'present'. In this case any value present in the array\n        will be plotted, even if it is identically zero.\n\n    origin : {'upper', 'lower'}, default: :rc:`image.origin`\n        Place the [0, 0] index of the array in the upper left or lower left\n        corner of the axes. The convention 'upper' is typically used for\n        matrices and images.\n\n    aspect : {'equal', 'auto', None} or float, default: 'equal'\n        The aspect ratio of the axes.  This parameter is particularly\n        relevant for images since it determines whether data pixels are\n        square.\n\n        This parameter is a shortcut for explicitly calling\n        `.Axes.set_aspect`. See there for further details.\n\n        - 'equal': Ensures an aspect ratio of 1. Pixels will be square.\n        - 'auto': The axes is kept fixed and the aspect is adjusted so\n          that the data fit in the axes. In general, this will result in\n          non-square pixels.\n        - *None*: Use :rc:`image.aspect`.\n\n    Returns\n    -------\n    ret : `~matplotlib.image.AxesImage` or `.Line2D`\n        The return type depends on the plotting style (see above).\n\n    Other Parameters\n    ----------------\n    **kwargs\n        The supported additional parameters depend on the plotting style.\n\n        For the image style, you can pass the following additional\n        parameters of `~.Axes.imshow`:\n\n        - *cmap*\n        - *alpha*\n        - *url*\n        - any `.Artist` properties (passed on to the `.AxesImage`)\n\n        For the marker style, you can pass any `.Line2D` property except\n        for *linestyle*:\n\n        %(_Line2D_docstr)s\n    \"\"\"\n    if marker is None and markersize is None and hasattr(Z, 'tocoo'):\n        marker = 's'\n    if marker is None and markersize is None:\n        Z = np.asarray(Z)\n        mask = np.abs(Z) > precision\n\n        if 'cmap' not in kwargs:\n            kwargs['cmap'] = mcolors.ListedColormap(['w', 'k'],\n                                                    name='binary')\n        if 'interpolation' in kwargs:\n            raise TypeError(\n                \"spy() got an unexpected keyword argument 'interpolation'\")\n        ret = self.imshow(mask, interpolation='nearest', aspect=aspect,\n                          origin=origin, **kwargs)\n    else:\n        if hasattr(Z, 'tocoo'):\n            c = Z.tocoo()\n            if precision == 'present':\n                y = c.row\n                x = c.col\n            else:\n                nonzero = np.abs(c.data) > precision\n                y = c.row[nonzero]\n                x = c.col[nonzero]\n        else:\n            Z = np.asarray(Z)\n            nonzero = np.abs(Z) > precision\n            y, x = np.nonzero(nonzero)\n        if marker is None:\n            marker = 's'\n        if markersize is None:\n            markersize = 10\n        if 'linestyle' in kwargs:\n            raise TypeError(\n                \"spy() got an unexpected keyword argument 'linestyle'\")\n        marks = mlines.Line2D(x, y, linestyle='None',\n                     marker=marker, markersize=markersize, **kwargs)\n        self.add_line(marks)\n        nr, nc = Z.shape\n        self.set_xlim(-0.5, nc - 0.5)\n        self.set_ylim(nr - 0.5, -0.5)\n        self.set_aspect(aspect)\n        ret = marks\n    self.title.set_y(1.05)\n    self.xaxis.tick_top()\n    self.xaxis.set_ticks_position('both')\n    self.xaxis.set_major_locator(mticker.MaxNLocator(nbins=9,\n                                             steps=[1, 2, 5, 10],\n                                             integer=True))\n    self.yaxis.set_major_locator(mticker.MaxNLocator(nbins=9,\n                                             steps=[1, 2, 5, 10],\n                                             integer=True))\n    return ret",
                "def matshow(self, Z, **kwargs):\n    \"\"\"\n    Plot the values of a 2D matrix or array as color-coded image.\n\n    The matrix will be shown the way it would be printed, with the first\n    row at the top.  Row and column numbering is zero-based.\n\n    Parameters\n    ----------\n    Z : array-like(M, N)\n        The matrix to be displayed.\n\n    Returns\n    -------\n    image : `~matplotlib.image.AxesImage`\n\n    Other Parameters\n    ----------------\n    **kwargs : `~matplotlib.axes.Axes.imshow` arguments\n\n    See Also\n    --------\n    imshow : More general function to plot data on a 2D regular raster.\n\n    Notes\n    -----\n    This is just a convenience function wrapping `.imshow` to set useful\n    defaults for displaying a matrix. In particular:\n\n    - Set ``origin='upper'``.\n    - Set ``interpolation='nearest'``.\n    - Set ``aspect='equal'``.\n    - Ticks are placed to the left and above.\n    - Ticks are formatted to show integer indices.\n\n    \"\"\"\n    Z = np.asanyarray(Z)\n    kw = {'origin': 'upper',\n          'interpolation': 'nearest',\n          'aspect': 'equal',          # (already the imshow default)\n          **kwargs}\n    im = self.imshow(Z, **kw)\n    self.title.set_y(1.05)\n    self.xaxis.tick_top()\n    self.xaxis.set_ticks_position('both')\n    self.xaxis.set_major_locator(mticker.MaxNLocator(nbins=9,\n                                             steps=[1, 2, 5, 10],\n                                             integer=True))\n    self.yaxis.set_major_locator(mticker.MaxNLocator(nbins=9,\n                                             steps=[1, 2, 5, 10],\n                                             integer=True))\n    return im",
                "@_preprocess_data(replace_names=[\"dataset\"])\ndef violinplot(self, dataset, positions=None, vert=True, widths=0.5,\n               showmeans=False, showextrema=True, showmedians=False,\n               quantiles=None, points=100, bw_method=None):\n    \"\"\"\n    Make a violin plot.\n\n    Make a violin plot for each column of *dataset* or each vector in\n    sequence *dataset*.  Each filled area extends to represent the\n    entire data range, with optional lines at the mean, the median,\n    the minimum, the maximum, and user-specified quantiles.\n\n    Parameters\n    ----------\n    dataset : Array or a sequence of vectors.\n      The input data.\n\n    positions : array-like, default: [1, 2, ..., n]\n      Sets the positions of the violins. The ticks and limits are\n      automatically set to match the positions.\n\n    vert : bool, default: True.\n      If true, creates a vertical violin plot.\n      Otherwise, creates a horizontal violin plot.\n\n    widths : array-like, default: 0.5\n      Either a scalar or a vector that sets the maximal width of\n      each violin. The default is 0.5, which uses about half of the\n      available horizontal space.\n\n    showmeans : bool, default: False\n      If `True`, will toggle rendering of the means.\n\n    showextrema : bool, default: True\n      If `True`, will toggle rendering of the extrema.\n\n    showmedians : bool, default: False\n      If `True`, will toggle rendering of the medians.\n\n    quantiles : array-like, default: None\n      If not None, set a list of floats in interval [0, 1] for each violin,\n      which stands for the quantiles that will be rendered for that\n      violin.\n\n    points : scalar, default: 100\n      Defines the number of points to evaluate each of the\n      gaussian kernel density estimations at.\n\n    bw_method : str, scalar or callable, optional\n      The method used to calculate the estimator bandwidth.  This can be\n      'scott', 'silverman', a scalar constant or a callable.  If a\n      scalar, this will be used directly as `kde.factor`.  If a\n      callable, it should take a `GaussianKDE` instance as its only\n      parameter and return a scalar. If None (default), 'scott' is used.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the violinplot to a\n      list of the corresponding collection instances created. The\n      dictionary has the following keys:\n\n      - ``bodies``: A list of the `~.collections.PolyCollection`\n        instances containing the filled area of each violin.\n\n      - ``cmeans``: A `~.collections.LineCollection` instance that marks\n        the mean values of each of the violin's distribution.\n\n      - ``cmins``: A `~.collections.LineCollection` instance that marks\n        the bottom of each violin's distribution.\n\n      - ``cmaxes``: A `~.collections.LineCollection` instance that marks\n        the top of each violin's distribution.\n\n      - ``cbars``: A `~.collections.LineCollection` instance that marks\n        the centers of each violin's distribution.\n\n      - ``cmedians``: A `~.collections.LineCollection` instance that\n        marks the median values of each of the violin's distribution.\n\n      - ``cquantiles``: A `~.collections.LineCollection` instance created\n        to identify the quantile values of each of the violin's\n        distribution.\n\n    \"\"\"\n\n    def _kde_method(X, coords):\n        # fallback gracefully if the vector contains only one value\n        if np.all(X[0] == X):\n            return (X[0] == coords).astype(float)\n        kde = mlab.GaussianKDE(X, bw_method)\n        return kde.evaluate(coords)\n\n    vpstats = cbook.violin_stats(dataset, _kde_method, points=points,\n                                 quantiles=quantiles)\n    return self.violin(vpstats, positions=positions, vert=vert,\n                       widths=widths, showmeans=showmeans,\n                       showextrema=showextrema, showmedians=showmedians)",
                "def violin(self, vpstats, positions=None, vert=True, widths=0.5,\n           showmeans=False, showextrema=True, showmedians=False):\n    \"\"\"Drawing function for violin plots.\n\n    Draw a violin plot for each column of *vpstats*. Each filled area\n    extends to represent the entire data range, with optional lines at the\n    mean, the median, the minimum, the maximum, and the quantiles values.\n\n    Parameters\n    ----------\n    vpstats : list of dicts\n      A list of dictionaries containing stats for each violin plot.\n      Required keys are:\n\n      - ``coords``: A list of scalars containing the coordinates that\n        the violin's kernel density estimate were evaluated at.\n\n      - ``vals``: A list of scalars containing the values of the\n        kernel density estimate at each of the coordinates given\n        in *coords*.\n\n      - ``mean``: The mean value for this violin's dataset.\n\n      - ``median``: The median value for this violin's dataset.\n\n      - ``min``: The minimum value for this violin's dataset.\n\n      - ``max``: The maximum value for this violin's dataset.\n\n      Optional keys are:\n\n      - ``quantiles``: A list of scalars containing the quantile values\n        for this violin's dataset.\n\n    positions : array-like, default: [1, 2, ..., n]\n      Sets the positions of the violins. The ticks and limits are\n      automatically set to match the positions.\n\n    vert : bool, default: True.\n      If true, plots the violins vertically.\n      Otherwise, plots the violins horizontally.\n\n    widths : array-like, default: 0.5\n      Either a scalar or a vector that sets the maximal width of\n      each violin. The default is 0.5, which uses about half of the\n      available horizontal space.\n\n    showmeans : bool, default: False\n      If true, will toggle rendering of the means.\n\n    showextrema : bool, default: True\n      If true, will toggle rendering of the extrema.\n\n    showmedians : bool, default: False\n      If true, will toggle rendering of the medians.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the violinplot to a\n      list of the corresponding collection instances created. The\n      dictionary has the following keys:\n\n      - ``bodies``: A list of the `~.collections.PolyCollection`\n        instances containing the filled area of each violin.\n\n      - ``cmeans``: A `~.collections.LineCollection` instance that marks\n        the mean values of each of the violin's distribution.\n\n      - ``cmins``: A `~.collections.LineCollection` instance that marks\n        the bottom of each violin's distribution.\n\n      - ``cmaxes``: A `~.collections.LineCollection` instance that marks\n        the top of each violin's distribution.\n\n      - ``cbars``: A `~.collections.LineCollection` instance that marks\n        the centers of each violin's distribution.\n\n      - ``cmedians``: A `~.collections.LineCollection` instance that\n        marks the median values of each of the violin's distribution.\n\n      - ``cquantiles``: A `~.collections.LineCollection` instance created\n        to identify the quantiles values of each of the violin's\n        distribution.\n\n    \"\"\"\n\n    # Statistical quantities to be plotted on the violins\n    means = []\n    mins = []\n    maxes = []\n    medians = []\n    quantiles = np.asarray([])\n\n    # Collections to be returned\n    artists = {}\n\n    N = len(vpstats)\n    datashape_message = (\"List of violinplot statistics and `{0}` \"\n                         \"values must have the same length\")\n\n    # Validate positions\n    if positions is None:\n        positions = range(1, N + 1)\n    elif len(positions) != N:\n        raise ValueError(datashape_message.format(\"positions\"))\n\n    # Validate widths\n    if np.isscalar(widths):\n        widths = [widths] * N\n    elif len(widths) != N:\n        raise ValueError(datashape_message.format(\"widths\"))\n\n    # Calculate ranges for statistics lines\n    pmins = -0.25 * np.array(widths) + positions\n    pmaxes = 0.25 * np.array(widths) + positions\n\n    # Check whether we are rendering vertically or horizontally\n    if vert:\n        fill = self.fill_betweenx\n        perp_lines = self.hlines\n        par_lines = self.vlines\n    else:\n        fill = self.fill_between\n        perp_lines = self.vlines\n        par_lines = self.hlines\n\n    if rcParams['_internal.classic_mode']:\n        fillcolor = 'y'\n        edgecolor = 'r'\n    else:\n        fillcolor = edgecolor = self._get_lines.get_next_color()\n\n    # Render violins\n    bodies = []\n    for stats, pos, width in zip(vpstats, positions, widths):\n        # The 0.5 factor reflects the fact that we plot from v-p to\n        # v+p\n        vals = np.array(stats['vals'])\n        vals = 0.5 * width * vals / vals.max()\n        bodies += [fill(stats['coords'],\n                        -vals + pos,\n                        vals + pos,\n                        facecolor=fillcolor,\n                        alpha=0.3)]\n        means.append(stats['mean'])\n        mins.append(stats['min'])\n        maxes.append(stats['max'])\n        medians.append(stats['median'])\n        q = stats.get('quantiles')\n        if q is not None:\n            # If exist key quantiles, assume it's a list of floats\n            quantiles = np.concatenate((quantiles, q))\n    artists['bodies'] = bodies\n\n    # Render means\n    if showmeans:\n        artists['cmeans'] = perp_lines(means, pmins, pmaxes,\n                                       colors=edgecolor)\n\n    # Render extrema\n    if showextrema:\n        artists['cmaxes'] = perp_lines(maxes, pmins, pmaxes,\n                                       colors=edgecolor)\n        artists['cmins'] = perp_lines(mins, pmins, pmaxes,\n                                      colors=edgecolor)\n        artists['cbars'] = par_lines(positions, mins, maxes,\n                                     colors=edgecolor)\n\n    # Render medians\n    if showmedians:\n        artists['cmedians'] = perp_lines(medians,\n                                         pmins,\n                                         pmaxes,\n                                         colors=edgecolor)\n\n    # Render quantile values\n    if quantiles.size > 0:\n        # Recalculate ranges for statistics lines for quantiles.\n        # ppmins are the left end of quantiles lines\n        ppmins = np.asarray([])\n        # pmaxes are the right end of quantiles lines\n        ppmaxs = np.asarray([])\n        for stats, cmin, cmax in zip(vpstats, pmins, pmaxes):\n            q = stats.get('quantiles')\n            if q is not None:\n                ppmins = np.concatenate((ppmins, [cmin] * np.size(q)))\n                ppmaxs = np.concatenate((ppmaxs, [cmax] * np.size(q)))\n        # Start rendering\n        artists['cquantiles'] = perp_lines(quantiles, ppmins, ppmaxs,\n                                             colors=edgecolor)\n\n    return artists",
                "def xywhere(xs, ys, mask):\n    \"\"\"\n    return xs[mask], ys[mask] where mask is True but xs and\n    ys are not arrays\n    \"\"\"\n    assert len(xs) == len(ys)\n    assert len(xs) == len(mask)\n    xs = [thisx for thisx, b in zip(xs, mask) if b]\n    ys = [thisy for thisy, b in zip(ys, mask) if b]\n    return xs, ys",
                "def extract_err(err, data):\n    \"\"\"\n    Private function to parse *err* and subtract/add it to *data*.\n\n    Both *err* and *data* are already iterables at this point.\n    \"\"\"\n    try:  # Asymmetric error: pair of 1D iterables.\n        a, b = err\n        iter(a)\n        iter(b)\n    except (TypeError, ValueError):\n        a = b = err  # Symmetric error: 1D iterable.\n    # This could just be `np.ndim(a) > 1 and np.ndim(b) > 1`, except\n    # for the (undocumented, but tested) support for (n, 1) arrays.\n    a_sh = np.shape(a)\n    b_sh = np.shape(b)\n    if (len(a_sh) > 2 or (len(a_sh) == 2 and a_sh[1] != 1)\n            or len(b_sh) > 2 or (len(b_sh) == 2 and b_sh[1] != 1)):\n        raise ValueError(\n            \"err must be a scalar or a 1D or (2, n) array-like\")\n    if len(a_sh) == 2 or len(b_sh) == 2:\n        cbook.warn_deprecated(\n            \"3.1\", message=\"Support for passing a (n, 1)-shaped error \"\n            \"array to errorbar() is deprecated since Matplotlib \"\n            \"%(since)s and will be removed %(removal)s; pass a 1D \"\n            \"array instead.\")\n    # Using list comprehensions rather than arrays to preserve units.\n    for e in [a, b]:\n        if len(data) != len(e):\n            raise ValueError(\n                f\"The lengths of the data ({len(data)}) and the \"\n                f\"error {len(e)} do not match\")\n    low = [v - e for v, e in zip(data, a)]\n    high = [v + e for v, e in zip(data, b)]\n    return low, high",
                "def line_props_with_rcdefaults(subkey, explicit, zdelta=0):\n    d = {k.split('.')[-1]: v for k, v in rcParams.items()\n         if k.startswith(f'boxplot.{subkey}')}\n    d['zorder'] = zorder + zdelta\n    if explicit is not None:\n        d.update(\n            cbook.normalize_kwargs(explicit, mlines.Line2D._alias_map))\n    return d",
                "def to_vc(xs, ys):\n    # convert arguments to verts and codes, append (0, 0) (ignored).\n    verts = np.append(np.column_stack([xs, ys]), [(0, 0)], 0)\n    codes = ([mpath.Path.MOVETO]\n             + [mpath.Path.LINETO] * (len(verts) - 2)\n             + [mpath.Path.CLOSEPOLY])\n    return verts, codes",
                "def patch_list(xs, ys, **kwargs):\n    verts, codes = to_vc(xs, ys)\n    path = mpath.Path(verts, codes)\n    patch = mpatches.PathPatch(path, **kwargs)\n    self.add_artist(patch)\n    return [patch]",
                "def invalid_shape_exception(csize, xsize):\n    return ValueError(\n        f\"'c' argument has {csize} elements, which is inconsistent \"\n        f\"with 'x' and 'y' with size {xsize}.\")",
                "def coarse_bin(x, y, coarse):\n    ind = coarse.searchsorted(x).clip(0, len(coarse) - 1)\n    mus = np.zeros(len(coarse))\n    for i in range(len(coarse)):\n        yi = y[ind == i]\n        if len(yi) > 0:\n            mu = reduce_C_function(yi)\n        else:\n            mu = np.nan\n        mus[i] = mu\n    return mus",
                "def on_changed(collection):\n    hbar.set_cmap(collection.get_cmap())\n    hbar.set_clim(collection.get_clim())\n    vbar.set_cmap(collection.get_cmap())\n    vbar.set_clim(collection.get_clim())",
                "def _kde_method(X, coords):\n    # fallback gracefully if the vector contains only one value\n    if np.all(X[0] == X):\n        return (X[0] == coords).astype(float)\n    kde = mlab.GaussianKDE(X, bw_method)\n    return kde.evaluate(coords)",
                "def get_next_color():\n    return next(color_cycle)",
                "def doplot(*args, **kwargs):\n    return self.plot(*args, **kwargs)",
                "def dopatch(xs, ys, **kwargs):\n    return patch_list(xs, ys, **kwargs)",
                "def doplot(*args, **kwargs):\n    shuffled = []\n    for i in range(0, len(args), 2):\n        shuffled.extend([args[i + 1], args[i]])\n    return self.plot(*shuffled, **kwargs)",
                "def dopatch(xs, ys, **kwargs):\n    xs, ys = ys, xs  # flip X, Y\n    return patch_list(xs, ys, **kwargs)",
                "def get_interp_point(ind):\n    im1 = max(ind - 1, 0)\n    x_values = x[im1:ind + 1]\n    diff_values = y1[im1:ind + 1] - y2[im1:ind + 1]\n    y1_values = y1[im1:ind + 1]\n\n    if len(diff_values) == 2:\n        if np.ma.is_masked(diff_values[1]):\n            return x[im1], y1[im1]\n        elif np.ma.is_masked(diff_values[0]):\n            return x[ind], y1[ind]\n\n    diff_order = diff_values.argsort()\n    diff_root_x = np.interp(\n        0, diff_values[diff_order], x_values[diff_order])\n    x_order = x_values.argsort()\n    diff_root_y = np.interp(diff_root_x, x_values[x_order],\n                            y1_values[x_order])\n    return diff_root_x, diff_root_y",
                "def get_interp_point(ind):\n    im1 = max(ind - 1, 0)\n    y_values = y[im1:ind + 1]\n    diff_values = x1[im1:ind + 1] - x2[im1:ind + 1]\n    x1_values = x1[im1:ind + 1]\n\n    if len(diff_values) == 2:\n        if np.ma.is_masked(diff_values[1]):\n            return x1[im1], y[im1]\n        elif np.ma.is_masked(diff_values[0]):\n            return x1[ind], y[ind]\n\n    diff_order = diff_values.argsort()\n    diff_root_y = np.interp(\n        0, diff_values[diff_order], y_values[diff_order])\n    y_order = y_values.argsort()\n    diff_root_x = np.interp(diff_root_y, y_values[y_order],\n                            x1_values[y_order])\n    return diff_root_x, diff_root_y"
            ],
            "inscope_function_signatures": [
                "_make_inset_locator(bounds, trans, parent)",
                "inset_locator(ax, renderer)",
                "aname(self)",
                "get_title(self, loc='center')",
                "set_title(self, label, fontdict=None, loc=None, pad=None, **kwargs)",
                "get_xlabel(self)",
                "set_xlabel(self, xlabel, fontdict=None, labelpad=None, **kwargs)",
                "get_ylabel(self)",
                "set_ylabel(self, ylabel, fontdict=None, labelpad=None, **kwargs)",
                "get_legend_handles_labels(self, legend_handler_map=None)",
                "legend(self, *args, **kwargs)",
                "_remove_legend(self, legend)",
                "inset_axes(self, bounds, **kwargs)",
                "indicate_inset(self, bounds, inset_ax=None, **kwargs)",
                "indicate_inset_zoom(self, inset_ax, **kwargs)",
                "secondary_xaxis(self, location, **kwargs)",
                "secondary_yaxis(self, location, **kwargs)",
                "text(self, x, y, s, fontdict=None, withdash=False, **kwargs)",
                "annotate(self, s, xy, *args, **kwargs)",
                "axhline(self, y=0, xmin=0, xmax=1, **kwargs)",
                "axvline(self, x=0, ymin=0, ymax=1, **kwargs)",
                "axline(self, xy1, xy2, **kwargs)",
                "axhspan(self, ymin, ymax, xmin=0, xmax=1, **kwargs)",
                "axvspan(self, xmin, xmax, ymin=0, ymax=1, **kwargs)",
                "hlines(self, y, xmin, xmax, colors='k', linestyles='solid', label='', **kwargs)",
                "vlines(self, x, ymin, ymax, colors='k', linestyles='solid', label='', **kwargs)",
                "eventplot(self, positions, orientation='horizontal', lineoffsets=1, linelengths=1, linewidths=None, colors=None, linestyles='solid', **kwargs)",
                "plot(self, *args, **kwargs)",
                "plot_date(self, x, y, fmt='o', tz=None, xdate=True, ydate=False, **kwargs)",
                "loglog(self, *args, **kwargs)",
                "semilogx(self, *args, **kwargs)",
                "semilogy(self, *args, **kwargs)",
                "acorr(self, x, **kwargs)",
                "xcorr(self, x, y, normed=True, detrend=mlab.detrend_none, usevlines=True, maxlags=10, **kwargs)",
                "step(self, x, y, *args, **kwargs)",
                "_convert_dx(dx, x0, xconv, convert)",
                "bar(self, x, height, width=0.8, bottom=None, **kwargs)",
                "barh(self, y, width, height=0.8, left=None, **kwargs)",
                "broken_barh(self, xranges, yrange, **kwargs)",
                "stem(self, *args)",
                "pie(self, x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=None, radius=None, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False, rotatelabels=False)",
                "errorbar(self, x, y, yerr=None, xerr=None, fmt='', ecolor=None, elinewidth=None, capsize=None, barsabove=False, lolims=False, uplims=False, xlolims=False, xuplims=False, errorevery=1, capthick=None, **kwargs)",
                "boxplot(self, x, notch=None, sym=None, vert=None, whis=None, positions=None, widths=None, patch_artist=None, bootstrap=None, usermedians=None, conf_intervals=None, meanline=None, showmeans=None, showcaps=None, showbox=None, showfliers=None, boxprops=None, labels=None, flierprops=None, medianprops=None, meanprops=None, capprops=None, whiskerprops=None, manage_ticks=True, autorange=False, zorder=None)",
                "bxp(self, bxpstats, positions=None, widths=None, vert=True, patch_artist=False, shownotches=False, showmeans=False, showcaps=True, showbox=True, showfliers=True, boxprops=None, whiskerprops=None, flierprops=None, medianprops=None, capprops=None, meanprops=None, meanline=False, manage_ticks=True, zorder=None)",
                "_parse_scatter_color_args(c, edgecolors, kwargs, xsize, get_next_color_func)",
                "scatter(self, x, y, s=None, c=None, marker=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, verts=None, edgecolors=None, **kwargs)",
                "hexbin(self, x, y, C=None, gridsize=100, bins=None, xscale='linear', yscale='linear', extent=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, edgecolors='face', reduce_C_function=np.mean, mincnt=None, marginals=False, **kwargs)",
                "arrow(self, x, y, dx, dy, **kwargs)",
                "quiverkey(self, Q, X, Y, U, label, **kw)",
                "_quiver_units(self, args, kw)",
                "quiver(self, *args, **kw)",
                "barbs(self, *args, **kw)",
                "fill(self, *args, **kwargs)",
                "fill_between(self, x, y1, y2=0, where=None, interpolate=False, step=None, **kwargs)",
                "fill_betweenx(self, y, x1, x2=0, where=None, step=None, interpolate=False, **kwargs)",
                "imshow(self, X, cmap=None, norm=None, aspect=None, interpolation=None, alpha=None, vmin=None, vmax=None, origin=None, extent=None, shape=None, filternorm=True, filterrad=4.0, imlim=None, resample=None, url=None, **kwargs)",
                "_pcolorargs(funcname, *args)",
                "pcolor(self, *args, **kwargs)",
                "pcolormesh(self, *args, **kwargs)",
                "pcolorfast(self, *args, **kwargs)",
                "contour(self, *args, **kwargs)",
                "contourf(self, *args, **kwargs)",
                "clabel(self, CS, *args, **kwargs)",
                "hist(self, x, bins=None, range=None, density=False, weights=None, cumulative=False, bottom=None, histtype='bar', align='mid', orientation='vertical', rwidth=None, log=False, color=None, label=None, stacked=False, **kwargs)",
                "hist2d(self, x, y, bins=10, range=None, density=False, weights=None, cmin=None, cmax=None, **kwargs)",
                "psd(self, x, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, pad_to=None, sides=None, scale_by_freq=None, return_line=None, **kwargs)",
                "csd(self, x, y, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, pad_to=None, sides=None, scale_by_freq=None, return_line=None, **kwargs)",
                "magnitude_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, scale=None, **kwargs)",
                "angle_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, **kwargs)",
                "phase_spectrum(self, x, Fs=None, Fc=None, window=None, pad_to=None, sides=None, **kwargs)",
                "cohere(self, x, y, NFFT=256, Fs=2, Fc=0, detrend=mlab.detrend_none, window=mlab.window_hanning, noverlap=0, pad_to=None, sides='default', scale_by_freq=None, **kwargs)",
                "specgram(self, x, NFFT=None, Fs=None, Fc=None, detrend=None, window=None, noverlap=None, cmap=None, xextent=None, pad_to=None, sides=None, scale_by_freq=None, mode=None, scale=None, vmin=None, vmax=None, **kwargs)",
                "spy(self, Z, precision=0, marker=None, markersize=None, aspect='equal', origin='upper', **kwargs)",
                "matshow(self, Z, **kwargs)",
                "violinplot(self, dataset, positions=None, vert=True, widths=0.5, showmeans=False, showextrema=True, showmedians=False, quantiles=None, points=100, bw_method=None)",
                "violin(self, vpstats, positions=None, vert=True, widths=0.5, showmeans=False, showextrema=True, showmedians=False)",
                "xywhere(xs, ys, mask)",
                "extract_err(err, data)",
                "line_props_with_rcdefaults(subkey, explicit, zdelta=0)",
                "to_vc(xs, ys)",
                "patch_list(xs, ys, **kwargs)",
                "invalid_shape_exception(csize, xsize)",
                "coarse_bin(x, y, coarse)",
                "on_changed(collection)",
                "_kde_method(X, coords)",
                "get_next_color()",
                "doplot(*args, **kwargs)",
                "dopatch(xs, ys, **kwargs)",
                "doplot(*args, **kwargs)",
                "dopatch(xs, ys, **kwargs)",
                "get_interp_point(ind)",
                "get_interp_point(ind)"
            ],
            "variables_in_file": {
                "_log": [
                    4241,
                    39
                ],
                "logging.getLogger": [
                    39
                ],
                "logging": [
                    39
                ],
                "__name__": [
                    39
                ],
                "_bounds": [
                    60,
                    55
                ],
                "mtransforms.Bbox.from_bounds": [
                    542,
                    55
                ],
                "mtransforms.Bbox": [
                    542,
                    55
                ],
                "mtransforms": [
                    5922,
                    4451,
                    4774,
                    4647,
                    4648,
                    752,
                    6134,
                    55,
                    61,
                    542,
                    63
                ],
                "bounds": [
                    431,
                    543,
                    510,
                    55
                ],
                "_trans": [
                    56,
                    61
                ],
                "trans": [
                    4864,
                    994,
                    4866,
                    1065,
                    4893,
                    1005,
                    824,
                    1054,
                    823,
                    56,
                    893,
                    894,
                    4895
                ],
                "_parent": [
                    57,
                    62
                ],
                "parent": [
                    57
                ],
                "bbox": [
                    60,
                    61
                ],
                "bb": [
                    64,
                    432,
                    434,
                    61,
                    63
                ],
                "mtransforms.TransformedBbox": [
                    61,
                    63
                ],
                "tr": [
                    62,
                    63
                ],
                "_parent.figure.transFigure.inverted": [
                    62
                ],
                "_parent.figure.transFigure": [
                    62
                ],
                "_parent.figure": [
                    62
                ],
                "inset_locator": [
                    432,
                    439,
                    66,
                    431
                ],
                "_AxesBase": [
                    73
                ],
                "cbook.deprecated": [
                    94
                ],
                "cbook": [
                    3456,
                    3331,
                    1672,
                    4619,
                    5902,
                    662,
                    2328,
                    5144,
                    5665,
                    5671,
                    3752,
                    4781,
                    174,
                    1198,
                    5168,
                    1329,
                    1330,
                    1331,
                    4273,
                    181,
                    6580,
                    6582,
                    6583,
                    2174,
                    5050,
                    5179,
                    5437,
                    3646,
                    2623,
                    5184,
                    4417,
                    5438,
                    2627,
                    4420,
                    6592,
                    6845,
                    6847,
                    6850,
                    6603,
                    3919,
                    5712,
                    6608,
                    7250,
                    5333,
                    2135,
                    2392,
                    94,
                    3934,
                    1120,
                    121,
                    7904,
                    739,
                    3172,
                    5357,
                    2803,
                    2933,
                    5368,
                    2169,
                    4219,
                    5373,
                    2302
                ],
                "property": [
                    95
                ],
                "titles": [
                    121,
                    171,
                    174,
                    118
                ],
                "self._left_title": [
                    171,
                    118
                ],
                "self": [
                    4096,
                    6149,
                    6150,
                    2060,
                    2063,
                    2067,
                    4123,
                    4124,
                    2137,
                    118,
                    119,
                    120,
                    6304,
                    6312,
                    171,
                    172,
                    173,
                    6318,
                    6321,
                    185,
                    6330,
                    6334,
                    6335,
                    197,
                    6341,
                    6342,
                    6349,
                    6350,
                    223,
                    224,
                    230,
                    257,
                    258,
                    2305,
                    272,
                    2343,
                    4391,
                    2345,
                    4392,
                    2347,
                    4393,
                    2349,
                    2353,
                    2355,
                    2356,
                    2358,
                    2359,
                    2361,
                    2362,
                    4410,
                    2364,
                    4412,
                    2372,
                    2375,
                    4448,
                    372,
                    4470,
                    4471,
                    4472,
                    377,
                    378,
                    379,
                    4476,
                    4473,
                    382,
                    2430,
                    4475,
                    2446,
                    2452,
                    2455,
                    427,
                    431,
                    434,
                    441,
                    6597,
                    6598,
                    6601,
                    6604,
                    6621,
                    504,
                    507,
                    515,
                    4617,
                    2572,
                    526,
                    528,
                    533,
                    537,
                    541,
                    6695,
                    6696,
                    6697,
                    6698,
                    2630,
                    6726,
                    6729,
                    2639,
                    2640,
                    593,
                    2643,
                    2646,
                    2647,
                    6763,
                    6765,
                    623,
                    625,
                    654,
                    656,
                    6804,
                    4757,
                    4762,
                    6820,
                    6821,
                    6822,
                    2741,
                    2742,
                    2743,
                    4819,
                    4820,
                    725,
                    4823,
                    745,
                    746,
                    2800,
                    754,
                    755,
                    2811,
                    2816,
                    4864,
                    2819,
                    2825,
                    4873,
                    4893,
                    4901,
                    6950,
                    6951,
                    6952,
                    815,
                    819,
                    820,
                    823,
                    825,
                    826,
                    4951,
                    4952,
                    4953,
                    4954,
                    4957,
                    4963,
                    4970,
                    4971,
                    4972,
                    2928,
                    4980,
                    885,
                    4982,
                    4984,
                    889,
                    890,
                    4985,
                    893,
                    895,
                    896,
                    4997,
                    4999,
                    2952,
                    5000,
                    5001,
                    7053,
                    7054,
                    7055,
                    7056,
                    7057,
                    7064,
                    944,
                    2993,
                    946,
                    948,
                    949,
                    950,
                    951,
                    953,
                    3003,
                    5052,
                    5054,
                    5055,
                    3021,
                    3039,
                    994,
                    997,
                    3046,
                    1000,
                    1001,
                    3048,
                    3050,
                    3052,
                    3053,
                    1006,
                    1007,
                    7158,
                    7159,
                    7160,
                    7161,
                    7162,
                    7168,
                    5147,
                    1054,
                    5150,
                    5151,
                    1057,
                    5154,
                    5155,
                    1060,
                    1061,
                    5156,
                    1066,
                    1067,
                    1108,
                    1109,
                    1110,
                    1111,
                    7259,
                    7260,
                    7261,
                    1130,
                    1141,
                    1142,
                    3189,
                    5238,
                    5240,
                    5241,
                    5243,
                    5244,
                    3211,
                    1184,
                    1187,
                    1188,
                    1189,
                    7331,
                    7332,
                    7333,
                    1208,
                    1218,
                    1219,
                    3285,
                    5336,
                    5339,
                    5340,
                    5343,
                    5344,
                    5345,
                    7402,
                    7403,
                    7404,
                    3354,
                    1308,
                    1313,
                    1314,
                    1315,
                    3364,
                    3366,
                    7465,
                    7466,
                    7467,
                    7468,
                    5426,
                    5428,
                    3381,
                    5429,
                    3383,
                    5431,
                    5432,
                    3403,
                    3413,
                    3415,
                    3430,
                    3432,
                    3444,
                    3446,
                    3452,
                    1409,
                    1431,
                    1432,
                    7619,
                    7621,
                    5625,
                    5626,
                    5634,
                    5645,
                    7716,
                    7741,
                    7743,
                    7744,
                    7745,
                    7747,
                    7748,
                    7749,
                    7750,
                    7753,
                    7799,
                    7800,
                    7801,
                    7802,
                    7803,
                    7806,
                    1673,
                    1675,
                    1676,
                    3741,
                    1743,
                    1745,
                    1747,
                    1749,
                    5852,
                    5856,
                    5857,
                    5858,
                    7906,
                    1802,
                    1803,
                    1805,
                    5915,
                    5924,
                    5926,
                    5927,
                    5933,
                    5942,
                    5943,
                    1853,
                    1854,
                    8029,
                    8030,
                    8031,
                    8033,
                    8034,
                    8035,
                    8041,
                    1901,
                    1902,
                    3965,
                    3971,
                    3981,
                    1967,
                    6108,
                    6113,
                    6114,
                    6115,
                    6130,
                    6136,
                    6138,
                    6139,
                    6142,
                    4095
                ],
                "self.title": [
                    7800,
                    7747,
                    172,
                    119
                ],
                "self._right_title": [
                    120,
                    173
                ],
                "title": [
                    122,
                    174,
                    121,
                    186,
                    187,
                    189,
                    190,
                    191
                ],
                "cbook._check_getitem": [
                    121,
                    7250,
                    174
                ],
                "loc.lower": [
                    121,
                    179,
                    174
                ],
                "loc": [
                    168,
                    169,
                    174,
                    179,
                    121
                ],
                "title.get_text": [
                    122
                ],
                "rcParams": [
                    2323,
                    5143,
                    169,
                    176,
                    177,
                    6577,
                    4403,
                    180,
                    4404,
                    6707,
                    184,
                    3642,
                    3644,
                    3649,
                    3651,
                    3268,
                    3653,
                    3655,
                    3657,
                    3018,
                    3659,
                    3914,
                    3661,
                    4427,
                    3663,
                    5332,
                    3925,
                    3926,
                    3927,
                    3928,
                    3929,
                    4438,
                    2780,
                    8037,
                    2796,
                    4208,
                    4209,
                    4469,
                    4214,
                    5624
                ],
                "default": [
                    187,
                    182,
                    175
                ],
                "titlecolor": [
                    180,
                    181,
                    182
                ],
                "cbook._str_lower_equal": [
                    181,
                    5902
                ],
                "pad": [
                    184,
                    185,
                    183
                ],
                "self._set_title_offset_trans": [
                    185
                ],
                "float": [
                    7900,
                    5380,
                    4230,
                    5191,
                    5928,
                    6119,
                    4729,
                    6674,
                    4628,
                    4629,
                    4728,
                    185,
                    4732
                ],
                "title.set_text": [
                    186
                ],
                "label": [
                    514,
                    2824,
                    2454,
                    2331,
                    2981,
                    6824,
                    6826,
                    6827,
                    428,
                    6828,
                    6829,
                    6831,
                    2994,
                    435,
                    1207,
                    186,
                    197,
                    198,
                    3021,
                    4962,
                    230,
                    231,
                    1129,
                    3192,
                    3451,
                    508
                ],
                "title.update": [
                    187,
                    189,
                    190
                ],
                "fontdict": [
                    224,
                    258,
                    719,
                    720,
                    727,
                    188,
                    189
                ],
                "kwargs": [
                    514,
                    4617,
                    2571,
                    2060,
                    2573,
                    2062,
                    2063,
                    2065,
                    2066,
                    2067,
                    5144,
                    5145,
                    5146,
                    5150,
                    7710,
                    7711,
                    1057,
                    7713,
                    7717,
                    1064,
                    7736,
                    7740,
                    2632,
                    593,
                    1108,
                    2645,
                    2136,
                    2137,
                    4184,
                    4185,
                    4186,
                    4188,
                    7259,
                    3172,
                    3175,
                    3176,
                    1131,
                    624,
                    5233,
                    3189,
                    7798,
                    3192,
                    3205,
                    1672,
                    1673,
                    3208,
                    3209,
                    655,
                    5628,
                    1184,
                    7331,
                    3238,
                    3239,
                    3240,
                    6315,
                    6320,
                    3251,
                    3252,
                    6836,
                    3255,
                    3256,
                    1209,
                    6841,
                    190,
                    6340,
                    6341,
                    4811,
                    6348,
                    6349,
                    3278,
                    3279,
                    1747,
                    6355,
                    5333,
                    5334,
                    5335,
                    728,
                    5339,
                    224,
                    5856,
                    7402,
                    751,
                    753,
                    2302,
                    2303,
                    5888,
                    5889,
                    258,
                    2306,
                    2307,
                    1797,
                    1798,
                    1799,
                    1800,
                    2311,
                    2312,
                    2313,
                    2316,
                    1805,
                    4872,
                    5894,
                    5900,
                    5901,
                    2322,
                    2323,
                    5902,
                    5903,
                    5905,
                    2327,
                    5907,
                    2330,
                    2331,
                    2332,
                    1310,
                    4900,
                    6950,
                    2343,
                    4391,
                    7465,
                    811,
                    2347,
                    5421,
                    1329,
                    1330,
                    819,
                    1331,
                    824,
                    1850,
                    1851,
                    4411,
                    1854,
                    4956,
                    4448,
                    4452,
                    1899,
                    1900,
                    1902,
                    881,
                    371,
                    374,
                    2424,
                    889,
                    377,
                    3964,
                    894,
                    1410,
                    3971,
                    3974,
                    3981,
                    7053,
                    3985,
                    937,
                    428,
                    942,
                    1967,
                    435,
                    5050,
                    5052,
                    5890,
                    7620,
                    6597,
                    5892,
                    5893,
                    6104,
                    6113,
                    997,
                    6122,
                    1004,
                    7158,
                    508
                ],
                "self.xaxis.get_label": [
                    197
                ],
                "self.xaxis": [
                    224,
                    2372,
                    197,
                    7748,
                    7749,
                    7750,
                    526,
                    2353,
                    7801,
                    7802,
                    7803,
                    223
                ],
                "label.get_text": [
                    198,
                    231
                ],
                "labelpad": [
                    256,
                    257,
                    222,
                    223
                ],
                "self.xaxis.labelpad": [
                    223
                ],
                "self.xaxis.set_label_text": [
                    224
                ],
                "xlabel": [
                    224
                ],
                "self.yaxis.get_label": [
                    230
                ],
                "self.yaxis": [
                    257,
                    258,
                    230,
                    2375,
                    7753,
                    528,
                    2359,
                    7806
                ],
                "self.yaxis.labelpad": [
                    257
                ],
                "self.yaxis.set_label_text": [
                    258
                ],
                "ylabel": [
                    258
                ],
                "handles": [
                    272,
                    377,
                    274,
                    371
                ],
                "labels": [
                    2944,
                    2947,
                    2981,
                    6825,
                    6827,
                    3647,
                    6829,
                    6831,
                    272,
                    6833,
                    274,
                    371,
                    377,
                    2943
                ],
                "mlegend._get_legend_handles_labels": [
                    272
                ],
                "mlegend": [
                    272,
                    377,
                    371
                ],
                "legend_handler_map": [
                    273
                ],
                "extra_args": [
                    371,
                    375
                ],
                "mlegend._parse_legend_args": [
                    371
                ],
                "args": [
                    3971,
                    4997,
                    4999,
                    1673,
                    3979,
                    3980,
                    1805,
                    5658,
                    5659,
                    5668,
                    5670,
                    5671,
                    2730,
                    2732,
                    2734,
                    2735,
                    2737,
                    2739,
                    5052,
                    2749,
                    1854,
                    6341,
                    2763,
                    6349,
                    6355,
                    2137,
                    2778,
                    5852,
                    6108,
                    4968,
                    4969,
                    4973,
                    1902,
                    751,
                    2415,
                    2416,
                    4974,
                    4980,
                    373,
                    4982,
                    6263,
                    6265,
                    6269,
                    6270
                ],
                "len": [
                    5658,
                    4643,
                    4644,
                    5668,
                    6706,
                    2622,
                    2626,
                    5187,
                    5190,
                    2635,
                    6734,
                    5200,
                    6749,
                    6750,
                    6752,
                    4705,
                    6753,
                    6756,
                    6758,
                    6759,
                    4716,
                    1133,
                    4723,
                    6265,
                    4218,
                    6780,
                    6269,
                    6782,
                    3716,
                    3717,
                    3726,
                    6799,
                    3732,
                    3229,
                    3233,
                    4261,
                    4264,
                    2730,
                    2734,
                    2736,
                    1211,
                    3291,
                    3292,
                    3293,
                    3294,
                    4828,
                    3296,
                    4831,
                    4832,
                    4833,
                    4835,
                    3304,
                    3305,
                    4849,
                    5880,
                    3326,
                    3327,
                    5376,
                    3330,
                    5379,
                    3338,
                    3340,
                    3341,
                    5388,
                    4881,
                    3351,
                    1324,
                    4406,
                    1348,
                    1350,
                    8007,
                    1352,
                    3400,
                    1354,
                    1356,
                    8014,
                    8020,
                    1368,
                    1369,
                    1372,
                    1373,
                    1374,
                    1375,
                    1376,
                    1378,
                    1379,
                    1380,
                    1382,
                    4968,
                    1385,
                    1388,
                    1391,
                    1394,
                    3957,
                    375,
                    2944,
                    2946,
                    2947,
                    1413,
                    2949,
                    1416,
                    1418,
                    3979,
                    3988,
                    2458,
                    3994,
                    3998,
                    4006,
                    948,
                    6593,
                    6612,
                    6616,
                    6624,
                    6627,
                    6639,
                    2037,
                    2038,
                    4086,
                    6652
                ],
                "TypeError": [
                    2185,
                    6287,
                    6289,
                    3999,
                    7714,
                    938,
                    2731,
                    5686,
                    7737,
                    5698,
                    5703,
                    5708,
                    3033,
                    2397,
                    2398,
                    376,
                    2405,
                    2406,
                    3180,
                    3320,
                    2170,
                    2175
                ],
                "self.legend_": [
                    377,
                    378,
                    379,
                    382
                ],
                "mlegend.Legend": [
                    377
                ],
                "self.legend_._remove_method": [
                    378
                ],
                "self._remove_legend": [
                    378
                ],
                "docstring.dedent_interpd": [
                    5248,
                    4481,
                    899,
                    7176,
                    6154,
                    1680,
                    1809,
                    2192,
                    2577,
                    276,
                    1440,
                    2464,
                    7072,
                    7338,
                    6957,
                    7473,
                    4916,
                    5947,
                    956,
                    829,
                    1858,
                    5059,
                    7625,
                    1226,
                    595,
                    5716,
                    1754,
                    7266,
                    749,
                    7409,
                    3062,
                    760,
                    4991
                ],
                "docstring": [
                    5248,
                    4481,
                    899,
                    7176,
                    6154,
                    1680,
                    1809,
                    2192,
                    2577,
                    276,
                    1440,
                    2464,
                    7072,
                    7338,
                    6957,
                    7473,
                    4916,
                    5947,
                    956,
                    829,
                    1858,
                    5059,
                    7625,
                    1226,
                    595,
                    5716,
                    1754,
                    4960,
                    7266,
                    749,
                    7409,
                    3062,
                    760,
                    4991
                ],
                "transform": [
                    544,
                    514,
                    426,
                    427,
                    431,
                    506,
                    507
                ],
                "self.transAxes": [
                    427
                ],
                "kwargs.pop": [
                    5889,
                    2306,
                    2307,
                    1797,
                    5893,
                    1799,
                    2311,
                    2312,
                    2313,
                    3209,
                    5901,
                    2062,
                    2322,
                    2323,
                    2327,
                    2330,
                    2331,
                    2332,
                    428,
                    1850,
                    4184,
                    4185,
                    4186,
                    4188,
                    4448,
                    1899,
                    3192,
                    508,
                    2303
                ],
                "_make_inset_locator": [
                    431
                ],
                "inset_ax": [
                    519,
                    590,
                    591,
                    593,
                    434,
                    532,
                    439,
                    441,
                    443,
                    540
                ],
                "Axes": [
                    434
                ],
                "self.figure": [
                    434,
                    541
                ],
                "bb.bounds": [
                    434
                ],
                "zorder": [
                    514,
                    3908,
                    3749,
                    3909,
                    3916,
                    434,
                    534,
                    3930
                ],
                "inset_ax.set_axes_locator": [
                    439
                ],
                "self.add_child_axes": [
                    656,
                    441,
                    625
                ],
                "self.apply_aspect": [
                    504
                ],
                "self.transData": [
                    4448,
                    5926,
                    5927,
                    6139,
                    725,
                    533,
                    6138,
                    507
                ],
                "x": [
                    512,
                    6658,
                    4617,
                    4619,
                    6672,
                    530,
                    4628,
                    4631,
                    4634,
                    5150,
                    5154,
                    4643,
                    5158,
                    7723,
                    5167,
                    7727,
                    4659,
                    7731,
                    4662,
                    5174,
                    4664,
                    5176,
                    4666,
                    7739,
                    5180,
                    5692,
                    3646,
                    5693,
                    4675,
                    4676,
                    5196,
                    7246,
                    5202,
                    5204,
                    2137,
                    6749,
                    6752,
                    4705,
                    6753,
                    6768,
                    6770,
                    5236,
                    3189,
                    5237,
                    6267,
                    2174,
                    6270,
                    2176,
                    6271,
                    6273,
                    6274,
                    6277,
                    2182,
                    6793,
                    6795,
                    6284,
                    6803,
                    3221,
                    3222,
                    6293,
                    6805,
                    3229,
                    7327,
                    1184,
                    6305,
                    1187,
                    6309,
                    1191,
                    1192,
                    1198,
                    6318,
                    1200,
                    1201,
                    1202,
                    2736,
                    2739,
                    1205,
                    2742,
                    2741,
                    1211,
                    1212,
                    1213,
                    6652,
                    1747,
                    3284,
                    3291,
                    3292,
                    3293,
                    3294,
                    4828,
                    3296,
                    4831,
                    740,
                    742,
                    7398,
                    2794,
                    2810,
                    2816,
                    2819,
                    3347,
                    5917,
                    6942,
                    2339,
                    2340,
                    3363,
                    7460,
                    2343,
                    4391,
                    4392,
                    5928,
                    5930,
                    4397,
                    3374,
                    4399,
                    5935,
                    5936,
                    2354,
                    2355,
                    2356,
                    3380,
                    2358,
                    4406,
                    4411,
                    2366,
                    3391,
                    2368,
                    4416,
                    4417,
                    4419,
                    2373,
                    4421,
                    3401,
                    3411,
                    3414,
                    4951,
                    4440,
                    2396,
                    4956,
                    2398,
                    3423,
                    3428,
                    3431,
                    2409,
                    4969,
                    2411,
                    4970,
                    4971,
                    4973,
                    3440,
                    2931,
                    2932,
                    4470,
                    4472,
                    2937,
                    889,
                    890,
                    2939,
                    2941,
                    894,
                    2944,
                    2946,
                    2947,
                    7043,
                    2949,
                    2981,
                    2982,
                    2985,
                    7593,
                    2988,
                    6573,
                    6574,
                    1967,
                    3006,
                    6590,
                    6592,
                    6593,
                    6597,
                    6598,
                    3026,
                    6615,
                    6638,
                    7152,
                    2037,
                    2041,
                    2044,
                    510,
                    2047
                ],
                "y": [
                    512,
                    4617,
                    4619,
                    2572,
                    530,
                    4629,
                    4636,
                    4639,
                    4644,
                    7722,
                    7726,
                    7731,
                    4660,
                    4663,
                    4665,
                    4667,
                    7739,
                    5695,
                    5696,
                    4675,
                    4676,
                    1108,
                    1109,
                    1113,
                    1114,
                    2137,
                    6750,
                    1120,
                    1122,
                    1123,
                    1124,
                    6758,
                    1127,
                    6759,
                    1133,
                    1136,
                    1137,
                    3189,
                    6268,
                    6780,
                    6270,
                    6782,
                    6272,
                    6273,
                    6274,
                    6789,
                    6278,
                    6792,
                    6284,
                    6796,
                    6803,
                    6293,
                    6805,
                    3224,
                    3225,
                    3233,
                    6305,
                    6309,
                    6318,
                    2735,
                    2736,
                    2739,
                    5938,
                    2741,
                    2743,
                    1747,
                    3284,
                    5339,
                    5343,
                    4834,
                    5347,
                    740,
                    742,
                    2794,
                    5356,
                    5363,
                    5365,
                    5369,
                    2810,
                    2816,
                    5384,
                    5390,
                    5392,
                    3352,
                    2334,
                    5918,
                    2336,
                    2337,
                    3362,
                    6942,
                    7460,
                    3365,
                    4391,
                    5928,
                    4393,
                    2347,
                    5931,
                    3374,
                    4398,
                    4399,
                    5424,
                    5425,
                    819,
                    820,
                    3379,
                    3382,
                    5937,
                    824,
                    2360,
                    2361,
                    2362,
                    2364,
                    2366,
                    3391,
                    2368,
                    4416,
                    4417,
                    4419,
                    3396,
                    4421,
                    2376,
                    3412,
                    4440,
                    4952,
                    4956,
                    3423,
                    2401,
                    2404,
                    3429,
                    2406,
                    4969,
                    4970,
                    2412,
                    4972,
                    4973,
                    3440,
                    2982,
                    2986,
                    2988,
                    3007,
                    3027,
                    7152,
                    2038,
                    2042,
                    2044,
                    510,
                    2047
                ],
                "width": [
                    512,
                    2436,
                    2441,
                    2572,
                    530,
                    4009,
                    2347,
                    4019,
                    2356,
                    4020,
                    6713,
                    4026,
                    4027,
                    6714,
                    6717,
                    2366,
                    2368,
                    6739,
                    2396,
                    2399,
                    8045,
                    2415,
                    8049,
                    510
                ],
                "height": [
                    512,
                    2366,
                    2368,
                    2404,
                    2437,
                    2343,
                    2407,
                    2442,
                    2572,
                    2415,
                    6736,
                    530,
                    6738,
                    6739,
                    2362,
                    510
                ],
                "rectangle_patch": [
                    554,
                    515,
                    511
                ],
                "mpatches.Rectangle": [
                    2417,
                    511
                ],
                "mpatches": [
                    4956,
                    1064,
                    1004,
                    2988,
                    2417,
                    531,
                    3935,
                    3000,
                    3964,
                    2302,
                    511
                ],
                "facecolor": [
                    513
                ],
                "edgecolor": [
                    513,
                    2306,
                    8068,
                    8100,
                    8039,
                    8041,
                    8073,
                    8075,
                    8077,
                    2382,
                    2383,
                    2415,
                    2385,
                    2386,
                    8084,
                    535
                ],
                "alpha": [
                    513,
                    4449,
                    4899,
                    4871,
                    6313,
                    4810,
                    6123,
                    6319,
                    5909,
                    535,
                    6302,
                    5631
                ],
                "self.add_patch": [
                    515,
                    1066,
                    1006,
                    2993,
                    5054,
                    537,
                    3003,
                    2430
                ],
                "connects": [
                    549,
                    517,
                    550,
                    551,
                    552,
                    554,
                    536
                ],
                "xy_inset_ax": [
                    521,
                    532,
                    525
                ],
                "ex": [
                    2436,
                    2441,
                    525,
                    2446,
                    527,
                    530
                ],
                "ey": [
                    2437,
                    2442,
                    525,
                    2446,
                    529,
                    530
                ],
                "self.xaxis.get_inverted": [
                    526
                ],
                "self.yaxis.get_inverted": [
                    528
                ],
                "xy_data": [
                    530,
                    533
                ],
                "p": [
                    1064,
                    1065,
                    1066,
                    1004,
                    1005,
                    1006,
                    1068,
                    1008,
                    6840,
                    531,
                    6835,
                    6836,
                    6838,
                    6841,
                    536,
                    537,
                    6842
                ],
                "mpatches.ConnectionPatch": [
                    531
                ],
                "inset_ax.transAxes": [
                    532
                ],
                "connects.append": [
                    536
                ],
                "pos": [
                    4009,
                    4011,
                    8045,
                    4014,
                    4080,
                    4019,
                    4020,
                    8051,
                    4086,
                    8052,
                    4026,
                    4027,
                    540,
                    541
                ],
                "inset_ax.get_position": [
                    540
                ],
                "bboxins": [
                    545,
                    546,
                    547,
                    548,
                    541
                ],
                "pos.transformed": [
                    541
                ],
                "self.figure.transFigure": [
                    541
                ],
                "rectbbox": [
                    545,
                    546,
                    547,
                    548,
                    542
                ],
                "transformed": [
                    4434,
                    542
                ],
                "x0": [
                    545,
                    549,
                    550,
                    2182,
                    2354,
                    2356,
                    2358,
                    2169,
                    2171
                ],
                "rectbbox.x0": [
                    545
                ],
                "bboxins.x0": [
                    545
                ],
                "x1": [
                    5344,
                    546,
                    5347,
                    551,
                    552,
                    5385,
                    5386,
                    940,
                    942,
                    5390,
                    2640,
                    2641,
                    5392,
                    5363,
                    5424,
                    5365,
                    5370,
                    5339
                ],
                "rectbbox.x1": [
                    546
                ],
                "bboxins.x1": [
                    546
                ],
                "y0": [
                    547,
                    549,
                    551,
                    2360,
                    2362,
                    2364
                ],
                "rectbbox.y0": [
                    547
                ],
                "bboxins.y0": [
                    547
                ],
                "y1": [
                    5155,
                    548,
                    550,
                    5158,
                    552,
                    940,
                    5197,
                    942,
                    5198,
                    5202,
                    5204,
                    5236,
                    5174,
                    5176,
                    5181,
                    5150
                ],
                "rectbbox.y1": [
                    548
                ],
                "bboxins.y1": [
                    548
                ],
                "set_visible": [
                    552,
                    549,
                    550,
                    551
                ],
                "tuple": [
                    3448,
                    554,
                    3447
                ],
                "xlim": [
                    592,
                    590
                ],
                "inset_ax.get_xlim": [
                    590
                ],
                "ylim": [
                    592,
                    591
                ],
                "inset_ax.get_ylim": [
                    591
                ],
                "rect": [
                    592,
                    593
                ],
                "self.indicate_inset": [
                    593
                ],
                "location": [
                    654,
                    653,
                    622,
                    623
                ],
                "isinstance": [
                    5922,
                    6826,
                    653,
                    622,
                    4111,
                    4429,
                    5680,
                    5682,
                    3028,
                    4117,
                    4788,
                    6134,
                    6683,
                    4217,
                    4218,
                    4219,
                    3998
                ],
                "Number": [
                    6683,
                    3998,
                    653,
                    622
                ],
                "secondary_ax": [
                    654,
                    623,
                    656,
                    625,
                    626,
                    657
                ],
                "SecondaryAxis": [
                    654,
                    623
                ],
                "functions": [
                    655,
                    623
                ],
                "ValueError": [
                    3328,
                    2948,
                    2053,
                    2950,
                    3718,
                    4231,
                    2185,
                    3339,
                    3728,
                    659,
                    3733,
                    4632,
                    3995,
                    4252,
                    4637,
                    6299,
                    7583,
                    4257,
                    4007,
                    5160,
                    7591,
                    5674,
                    812,
                    4400,
                    4407,
                    7608,
                    2636,
                    8015,
                    1362,
                    6613,
                    8021,
                    6617,
                    4191,
                    6628,
                    5349,
                    4198,
                    1383,
                    4199,
                    1386,
                    1389,
                    1392,
                    3184,
                    882,
                    1395,
                    628,
                    3187,
                    2039,
                    3320,
                    4222
                ],
                "effective_kwargs": [
                    722,
                    743
                ],
                "withdash": [
                    738,
                    739
                ],
                "cbook.deprecation._deprecated_parameter": [
                    739
                ],
                "cbook.deprecation": [
                    739
                ],
                "t": [
                    5921,
                    5922,
                    5923,
                    5924,
                    5926,
                    5927,
                    7593,
                    7615,
                    7623,
                    3021,
                    3023,
                    3039,
                    3041,
                    740,
                    742,
                    743,
                    745,
                    746,
                    747,
                    6133,
                    6134,
                    6135,
                    6136,
                    6138,
                    6139
                ],
                "mtext.TextWithDash": [
                    740
                ],
                "mtext": [
                    740,
                    757,
                    742,
                    751
                ],
                "s": [
                    4416,
                    4417,
                    4419,
                    740,
                    4421,
                    742,
                    4423,
                    751,
                    4402,
                    4403,
                    3029,
                    4405,
                    3031,
                    4406,
                    3039
                ],
                "mtext.Text": [
                    742
                ],
                "t.update": [
                    743
                ],
                "t.set_clip_path": [
                    745
                ],
                "self.patch": [
                    5634,
                    745,
                    946,
                    754,
                    6330
                ],
                "self._add_text": [
                    746,
                    755
                ],
                "cbook._delete_parameter": [
                    5438,
                    4273,
                    5437,
                    662
                ],
                "a": [
                    4956,
                    5671,
                    3337,
                    2060,
                    3342,
                    751,
                    752,
                    754,
                    755,
                    756,
                    2067,
                    2069,
                    3317,
                    3318,
                    3321,
                    3324,
                    4957,
                    4958
                ],
                "mtext.Annotation": [
                    757,
                    751
                ],
                "xy": [
                    5882,
                    5883,
                    751
                ],
                "a.set_transform": [
                    752
                ],
                "mtransforms.IdentityTransform": [
                    752,
                    4451,
                    4774
                ],
                "a.set_clip_path": [
                    754
                ],
                "annotate.__doc__": [
                    757
                ],
                "annotate": [
                    757
                ],
                "mtext.Annotation.__init__.__doc__": [
                    757
                ],
                "mtext.Annotation.__init__": [
                    757
                ],
                "ymin": [
                    4740,
                    4875,
                    4760,
                    1184,
                    1057,
                    4641,
                    1188,
                    1061,
                    4644,
                    1063,
                    4648,
                    1193,
                    1194,
                    1198,
                    815,
                    4656,
                    1201,
                    821,
                    1205,
                    4663,
                    1214,
                    1215,
                    4818,
                    997,
                    1001,
                    1003,
                    894
                ],
                "ymax": [
                    4875,
                    4761,
                    1184,
                    1057,
                    4641,
                    4644,
                    1061,
                    1189,
                    1063,
                    4648,
                    1195,
                    1196,
                    1198,
                    815,
                    4656,
                    1202,
                    821,
                    1205,
                    1214,
                    1215,
                    4818,
                    997,
                    1001,
                    1003,
                    894
                ],
                "self.get_ybound": [
                    815
                ],
                "self._process_unit_info": [
                    4617,
                    1308,
                    5150,
                    5151,
                    1184,
                    1057,
                    2343,
                    4391,
                    2347,
                    819,
                    2741,
                    6597,
                    2630,
                    1108,
                    5339,
                    5340,
                    5856,
                    6113,
                    997,
                    4970,
                    3189,
                    889
                ],
                "yy": [
                    820,
                    821
                ],
                "self.convert_yunits": [
                    1314,
                    1315,
                    1188,
                    1061,
                    1189,
                    5155,
                    5156,
                    4393,
                    820,
                    2743,
                    2361,
                    2362,
                    2364,
                    2643,
                    1109,
                    4952,
                    4954,
                    5343,
                    5858,
                    6115,
                    1001,
                    4972
                ],
                "scaley": [
                    826,
                    1676,
                    821
                ],
                "self.get_yaxis_transform": [
                    994,
                    4893,
                    823
                ],
                "l": [
                    897,
                    2436,
                    2441,
                    1805,
                    1806,
                    894,
                    824,
                    825,
                    827,
                    1854,
                    1855,
                    1902,
                    1904,
                    2416,
                    2418,
                    3443,
                    3444,
                    2811,
                    2429,
                    2814,
                    895
                ],
                "mlines.Line2D": [
                    1672,
                    3356,
                    3358,
                    3371,
                    3375,
                    824,
                    5050,
                    7739,
                    3388,
                    3392,
                    3909,
                    3405,
                    3407,
                    3919,
                    3284,
                    3420,
                    3424,
                    3172,
                    3437,
                    3441,
                    894
                ],
                "mlines": [
                    1672,
                    3356,
                    3358,
                    3367,
                    3369,
                    3371,
                    942,
                    3375,
                    3384,
                    824,
                    3386,
                    5050,
                    3388,
                    7739,
                    3392,
                    3909,
                    3405,
                    3407,
                    3919,
                    3284,
                    3416,
                    3418,
                    3420,
                    3424,
                    3172,
                    3433,
                    3435,
                    3437,
                    3441,
                    894
                ],
                "xmin": [
                    4739,
                    4755,
                    1057,
                    4641,
                    4643,
                    1060,
                    1063,
                    4647,
                    4652,
                    4653,
                    4655,
                    4662,
                    824,
                    7616,
                    7618,
                    4818,
                    1108,
                    1110,
                    1115,
                    1116,
                    1120,
                    1123,
                    997,
                    1127,
                    1000,
                    4842,
                    1003,
                    6636,
                    1134,
                    1135,
                    6642,
                    885,
                    6646,
                    6647,
                    891
                ],
                "xmax": [
                    4756,
                    1057,
                    4641,
                    4643,
                    1060,
                    1063,
                    4647,
                    4652,
                    4654,
                    4655,
                    824,
                    7616,
                    7618,
                    4818,
                    1108,
                    1111,
                    1117,
                    1118,
                    1120,
                    1124,
                    997,
                    1127,
                    1000,
                    4842,
                    1003,
                    6637,
                    1134,
                    1135,
                    6643,
                    885,
                    6646,
                    6647,
                    891
                ],
                "self.add_line": [
                    1675,
                    3444,
                    3285,
                    825,
                    7741,
                    895
                ],
                "self._request_autoscale_view": [
                    896,
                    6150,
                    5001,
                    1676,
                    5244,
                    2452,
                    1432,
                    4123,
                    6822,
                    1067,
                    5943,
                    5432,
                    953,
                    826,
                    5055,
                    6335,
                    1219,
                    6342,
                    6350,
                    4820,
                    1749,
                    2647,
                    1007,
                    1142,
                    3446,
                    4985,
                    4476
                ],
                "self.get_xbound": [
                    885
                ],
                "xx": [
                    890,
                    891
                ],
                "self.convert_xunits": [
                    1313,
                    5154,
                    1187,
                    1060,
                    4392,
                    2355,
                    2356,
                    2358,
                    2742,
                    6598,
                    6601,
                    6604,
                    2639,
                    2640,
                    1110,
                    4951,
                    1111,
                    4953,
                    5344,
                    5345,
                    5857,
                    6114,
                    1000,
                    4971,
                    890
                ],
                "scalex": [
                    896,
                    891,
                    1676
                ],
                "self.get_xaxis_transform": [
                    4864,
                    893,
                    1054
                ],
                "xy1": [
                    940,
                    951
                ],
                "x2": [
                    5345,
                    5347,
                    5385,
                    941,
                    942,
                    5425,
                    5363,
                    5365,
                    5371,
                    5340
                ],
                "y2": [
                    5156,
                    5158,
                    941,
                    942,
                    5197,
                    5237,
                    5174,
                    5176,
                    5182,
                    5151
                ],
                "xy2": [
                    941,
                    951
                ],
                "line": [
                    7173,
                    1674,
                    1675,
                    7053,
                    942,
                    944,
                    945,
                    946,
                    947,
                    948,
                    949,
                    950,
                    7158,
                    954,
                    7259,
                    7069,
                    7263
                ],
                "mlines._AxLine": [
                    942
                ],
                "self._set_artist_props": [
                    944
                ],
                "line.get_clip_path": [
                    945
                ],
                "line.set_clip_path": [
                    946
                ],
                "line.get_label": [
                    947
                ],
                "line.set_label": [
                    948
                ],
                "self.lines": [
                    948,
                    949,
                    950
                ],
                "self.lines.append": [
                    949
                ],
                "line._remove_method": [
                    950
                ],
                "self.lines.remove": [
                    950
                ],
                "self.update_datalim": [
                    1218,
                    6149,
                    951,
                    4819,
                    1141,
                    5942,
                    1431,
                    6334
                ],
                "verts": [
                    4866,
                    4878,
                    5907,
                    4887,
                    4895,
                    5883,
                    1063,
                    1064,
                    1204,
                    1206,
                    1126,
                    1128,
                    1003,
                    1004,
                    4846,
                    3955,
                    3957,
                    3959,
                    4857,
                    3962,
                    3963
                ],
                "mpatches.Polygon": [
                    1064,
                    1004
                ],
                "p.set_transform": [
                    1065,
                    1005
                ],
                "np.iterable": [
                    2179,
                    4622,
                    3221,
                    3224,
                    3228,
                    3232,
                    1317,
                    1191,
                    1319,
                    1193,
                    1195,
                    6828,
                    1333,
                    1335,
                    1337,
                    1339,
                    1341,
                    4800,
                    1113,
                    1115,
                    1117
                ],
                "np": [
                    6144,
                    6145,
                    6657,
                    6658,
                    2056,
                    4622,
                    6672,
                    6674,
                    4115,
                    4628,
                    4629,
                    4631,
                    6680,
                    4634,
                    5659,
                    4636,
                    7707,
                    5662,
                    4639,
                    5664,
                    6686,
                    7708,
                    4643,
                    4644,
                    5670,
                    5673,
                    7725,
                    5166,
                    6702,
                    5680,
                    6705,
                    5682,
                    7729,
                    7730,
                    5173,
                    5174,
                    7731,
                    4664,
                    4665,
                    4666,
                    4667,
                    5176,
                    4679,
                    4680,
                    5191,
                    4683,
                    4684,
                    4686,
                    2639,
                    4687,
                    4688,
                    4689,
                    5201,
                    5203,
                    6734,
                    5207,
                    4696,
                    1113,
                    5210,
                    1115,
                    4700,
                    1117,
                    6749,
                    6750,
                    7257,
                    1122,
                    1123,
                    1124,
                    6756,
                    2151,
                    4719,
                    7794,
                    5236,
                    5237,
                    4726,
                    4728,
                    6264,
                    4730,
                    4732,
                    4733,
                    4734,
                    4735,
                    4736,
                    6271,
                    6272,
                    2179,
                    3716,
                    3717,
                    4230,
                    6277,
                    6278,
                    4745,
                    6279,
                    6280,
                    3726,
                    4752,
                    3221,
                    6293,
                    6294,
                    3224,
                    6295,
                    6296,
                    6297,
                    3228,
                    3232,
                    1191,
                    1193,
                    1195,
                    6828,
                    1200,
                    1201,
                    1202,
                    2736,
                    6326,
                    6334,
                    4800,
                    4803,
                    4804,
                    3291,
                    3292,
                    3293,
                    3294,
                    4828,
                    3296,
                    4832,
                    7167,
                    7899,
                    4838,
                    4842,
                    5355,
                    4845,
                    5362,
                    5363,
                    4852,
                    5365,
                    5882,
                    3324,
                    3325,
                    4863,
                    2819,
                    5380,
                    4875,
                    4877,
                    5389,
                    5391,
                    5395,
                    4884,
                    5398,
                    4891,
                    6942,
                    1317,
                    1319,
                    1320,
                    5928,
                    1322,
                    4397,
                    4398,
                    5935,
                    5424,
                    5425,
                    5936,
                    2355,
                    5937,
                    1333,
                    4405,
                    1335,
                    5938,
                    1337,
                    2361,
                    1339,
                    1341,
                    2366,
                    4415,
                    1344,
                    1345,
                    1346,
                    2368,
                    8002,
                    2378,
                    8018,
                    4440,
                    1369,
                    8024,
                    1371,
                    8025,
                    1373,
                    1375,
                    8048,
                    2931,
                    3955,
                    2937,
                    8062,
                    4486,
                    1415,
                    1420,
                    1421,
                    7053,
                    7059,
                    7063,
                    2458,
                    8090,
                    8092,
                    3997,
                    8096,
                    8097,
                    4003,
                    4004,
                    2984,
                    6573,
                    4014,
                    4015,
                    4016,
                    7604,
                    4021,
                    4022,
                    4023,
                    7606,
                    7610,
                    6590,
                    7615,
                    3013,
                    6119,
                    6636,
                    6637,
                    6642,
                    6643,
                    4086,
                    6646,
                    7158,
                    2041,
                    2042,
                    2044,
                    7165,
                    6654,
                    2047
                ],
                "cbook.delete_masked_points": [
                    1120,
                    4619,
                    1198
                ],
                "np.ravel": [
                    1200,
                    1122,
                    3716
                ],
                "np.resize": [
                    1201,
                    1202,
                    1123,
                    1124
                ],
                "y.shape": [
                    1123,
                    1124
                ],
                "thisxmin": [
                    1126,
                    1127
                ],
                "thisy": [
                    3307,
                    1126,
                    1127
                ],
                "thisxmax": [
                    1126,
                    1127
                ],
                "zip": [
                    2436,
                    2437,
                    2441,
                    2442,
                    1419,
                    3721,
                    4106,
                    3342,
                    3343,
                    3730,
                    6803,
                    8093,
                    2981,
                    4009,
                    1205,
                    6732,
                    6615,
                    1127,
                    2794,
                    3306,
                    3307,
                    8045,
                    2415,
                    1400,
                    2810,
                    3198
                ],
                "lines": [
                    7331,
                    1221,
                    7335,
                    1128,
                    1673,
                    1130,
                    1131,
                    1674,
                    1677,
                    7402,
                    7406,
                    1206,
                    1144,
                    1209,
                    1208
                ],
                "mcoll.LineCollection": [
                    1128,
                    2797,
                    1206
                ],
                "mcoll": [
                    4769,
                    4866,
                    1128,
                    6120,
                    2797,
                    4442,
                    5421,
                    5233,
                    5907,
                    2645,
                    1206,
                    5333,
                    5144,
                    1402,
                    4763,
                    6300,
                    4895
                ],
                "colors": [
                    2951,
                    2954,
                    4251,
                    4261,
                    4264,
                    4266,
                    4267,
                    1329,
                    1206,
                    4409,
                    1339,
                    1340,
                    4414,
                    4419,
                    4421,
                    1356,
                    1357,
                    1361,
                    4444,
                    1376,
                    1377,
                    1378,
                    4454,
                    1128,
                    1391,
                    1401
                ],
                "linestyles": [
                    1379,
                    1380,
                    1129,
                    1394,
                    1331,
                    1207,
                    1401,
                    1341,
                    1342
                ],
                "self.add_collection": [
                    6304,
                    1409,
                    4901,
                    5000,
                    4873,
                    1130,
                    5243,
                    5933,
                    2800,
                    4984,
                    2646,
                    4823,
                    1208,
                    4475,
                    5431,
                    6142
                ],
                "lines.update": [
                    1209,
                    1131
                ],
                "minx": [
                    6144,
                    1217,
                    6146,
                    6148,
                    1134,
                    5935,
                    1139,
                    5939,
                    5941,
                    1212
                ],
                "min": [
                    4801,
                    4104,
                    2988,
                    1134,
                    1423,
                    6642,
                    1214
                ],
                "xmin.min": [
                    1134
                ],
                "xmax.min": [
                    1134
                ],
                "maxx": [
                    1217,
                    6145,
                    6146,
                    6148,
                    1135,
                    5936,
                    1139,
                    5939,
                    5941,
                    1213
                ],
                "max": [
                    4801,
                    5383,
                    4105,
                    5195,
                    2989,
                    1135,
                    1424,
                    6643,
                    1215
                ],
                "xmin.max": [
                    1135
                ],
                "xmax.max": [
                    1135
                ],
                "miny": [
                    6144,
                    1217,
                    6147,
                    6148,
                    1136,
                    5937,
                    1139,
                    5940,
                    5941,
                    1214
                ],
                "y.min": [
                    1136,
                    6305
                ],
                "maxy": [
                    1217,
                    6145,
                    6147,
                    6148,
                    1137,
                    5938,
                    1139,
                    5940,
                    5941,
                    1215
                ],
                "y.max": [
                    1137,
                    6305
                ],
                "corners": [
                    1217,
                    1218,
                    6148,
                    6149,
                    4818,
                    1139,
                    1428,
                    1141,
                    1430,
                    1431,
                    4819,
                    5941,
                    5942
                ],
                "_preprocess_data": [
                    4480,
                    3457,
                    7811,
                    7175,
                    6153,
                    2828,
                    1679,
                    2191,
                    2576,
                    7071,
                    7337,
                    6956,
                    4269,
                    1070,
                    8109,
                    7472,
                    1969,
                    8111,
                    5946,
                    5436,
                    6849,
                    5058,
                    6338,
                    1223,
                    6346,
                    5715,
                    6360,
                    2651,
                    7265,
                    7408,
                    4977,
                    1906,
                    3060,
                    1146,
                    4990,
                    5247
                ],
                "x.shape": [
                    1201,
                    1202
                ],
                "thisx": [
                    3306,
                    1204,
                    1205
                ],
                "thisymin": [
                    1204,
                    1205
                ],
                "thisymax": [
                    1204,
                    1205
                ],
                "x.min": [
                    6305,
                    1212
                ],
                "x.max": [
                    6305,
                    1213
                ],
                "ymin.min": [
                    1214
                ],
                "ymax.min": [
                    1214
                ],
                "ymin.max": [
                    1215
                ],
                "ymax.max": [
                    1215
                ],
                "positions": [
                    4097,
                    1413,
                    1415,
                    4104,
                    4105,
                    4106,
                    8076,
                    4115,
                    3992,
                    3993,
                    3994,
                    1308,
                    3741,
                    3997,
                    3998,
                    1313,
                    4003,
                    1317,
                    1318,
                    1319,
                    1320,
                    4009,
                    1322,
                    1324,
                    8012,
                    8013,
                    8014,
                    1368,
                    1369,
                    8024,
                    8025,
                    1373,
                    1375,
                    1378,
                    7906,
                    1380,
                    1382,
                    1385,
                    1388,
                    8045,
                    1391,
                    1394,
                    1400
                ],
                "lineoffsets": [
                    1344,
                    1314,
                    1348,
                    1349,
                    1382,
                    1400,
                    1353,
                    1355,
                    1423,
                    1424,
                    1333,
                    1334,
                    1368,
                    1369,
                    1370,
                    1371,
                    1309
                ],
                "linelengths": [
                    1345,
                    1315,
                    1400,
                    1350,
                    1351,
                    1385,
                    1373,
                    1423,
                    1424,
                    1335,
                    1336,
                    1372,
                    1309
                ],
                "any": [
                    5926,
                    1319,
                    4789,
                    5334,
                    6646,
                    5145,
                    6138
                ],
                "position": [
                    1319,
                    1320,
                    4106,
                    4108,
                    1399,
                    1402
                ],
                "np.asanyarray": [
                    4230,
                    5670,
                    1320,
                    1322,
                    7794,
                    5659
                ],
                "cbook.local_over_kwdict": [
                    1329,
                    1330,
                    1331
                ],
                "linewidths": [
                    5890,
                    4748,
                    4749,
                    4766,
                    4772,
                    1330,
                    1337,
                    1338,
                    4416,
                    4417,
                    1346,
                    4419,
                    4421,
                    1352,
                    1354,
                    4438,
                    4446,
                    1374,
                    1375,
                    1388,
                    1400,
                    5887
                ],
                "hasattr": [
                    5923,
                    7719,
                    6135,
                    7704,
                    1341
                ],
                "np.asarray": [
                    1344,
                    1345,
                    1346,
                    6272,
                    8002,
                    8090,
                    2361,
                    5355,
                    5166,
                    2639,
                    7729,
                    2355,
                    2931,
                    2041,
                    2042,
                    7707,
                    8092,
                    6271
                ],
                "mcolors.to_rgba_array": [
                    4197,
                    2379,
                    1361,
                    2386,
                    4251,
                    6623
                ],
                "mcolors": [
                    4197,
                    2379,
                    7711,
                    1361,
                    2386,
                    4785,
                    4788,
                    4251,
                    6623
                ],
                "np.tile": [
                    4736,
                    1369,
                    1373,
                    4734,
                    1375
                ],
                "np.cumsum": [
                    1371
                ],
                "list": [
                    1377,
                    3993,
                    6803
                ],
                "colls": [
                    1434,
                    1411,
                    1398
                ],
                "lineoffset": [
                    1404,
                    1399
                ],
                "linelength": [
                    1405,
                    1399
                ],
                "linewidth": [
                    2368,
                    1406,
                    2307,
                    2378,
                    2415,
                    1399,
                    2366
                ],
                "color": [
                    2304,
                    2305,
                    3712,
                    6803,
                    2303,
                    2379,
                    6732,
                    6620,
                    6621,
                    6623,
                    6624,
                    6627,
                    2415,
                    3711,
                    3701,
                    1399,
                    3706,
                    3710,
                    1407
                ],
                "linestyle": [
                    1408,
                    2753,
                    2755,
                    2758,
                    2795,
                    2796,
                    2797,
                    1399,
                    2812
                ],
                "coll": [
                    1409,
                    1402,
                    1411,
                    1410
                ],
                "mcoll.EventCollection": [
                    1402
                ],
                "orientation": [
                    2434,
                    2439,
                    6791,
                    1426,
                    1427,
                    2327,
                    2329,
                    6812,
                    6814,
                    2335,
                    2338,
                    2342,
                    2346,
                    6584,
                    2371,
                    6725,
                    2374,
                    2394,
                    2402,
                    6762,
                    2426,
                    1403,
                    2428
                ],
                "coll.update": [
                    1410
                ],
                "colls.append": [
                    1411
                ],
                "min_max": [
                    1418,
                    1419,
                    1415
                ],
                "np.min": [
                    6144,
                    4643,
                    2819,
                    4644,
                    1415,
                    1420,
                    5935,
                    5937,
                    7615
                ],
                "_p": [
                    1416,
                    1415
                ],
                "np.max": [
                    6145,
                    4643,
                    2819,
                    4644,
                    1415,
                    1421,
                    5936,
                    5938,
                    7615
                ],
                "mins": [
                    8074,
                    1419,
                    1420,
                    8076,
                    8056,
                    7999
                ],
                "maxes": [
                    8000,
                    8072,
                    1419,
                    8076,
                    1421,
                    8057
                ],
                "minpos": [
                    1428,
                    1420,
                    1430
                ],
                "maxpos": [
                    1428,
                    1421,
                    1430
                ],
                "minline": [
                    1428,
                    1430,
                    1423
                ],
                "maxline": [
                    1424,
                    1428,
                    1430
                ],
                "orientation.lower": [
                    1427
                ],
                "cbook.normalize_kwargs": [
                    3172,
                    1672,
                    3919,
                    5333,
                    5144,
                    2302,
                    5050,
                    3934
                ],
                "self._get_lines": [
                    1673,
                    8041,
                    3211,
                    6621
                ],
                "data": [
                    1673,
                    3338,
                    3340,
                    3342,
                    3343,
                    2137,
                    5052
                ],
                "xdate": [
                    1742
                ],
                "self.xaxis_date": [
                    1743
                ],
                "tz": [
                    1745,
                    1743
                ],
                "ydate": [
                    1744
                ],
                "self.yaxis_date": [
                    1745
                ],
                "ret": [
                    6336,
                    6306,
                    7746,
                    7716,
                    7756,
                    6322,
                    1747,
                    6325,
                    1751,
                    6328,
                    6327,
                    6330,
                    6332,
                    6333
                ],
                "self.plot": [
                    2816,
                    2819,
                    3971,
                    7331,
                    7465,
                    7259,
                    7402,
                    1805,
                    1902,
                    3981,
                    7053,
                    2067,
                    1747,
                    7158,
                    2137,
                    2811,
                    1854
                ],
                "fmt": [
                    3201,
                    1747,
                    3191,
                    3194,
                    3199
                ],
                "dx": [
                    2179,
                    2180,
                    1797,
                    2182,
                    6277,
                    2184,
                    6279,
                    1802,
                    2155,
                    2188,
                    2189,
                    4953,
                    4956
                ],
                "k": [
                    1797,
                    1798,
                    1799,
                    1800,
                    3175,
                    3914,
                    1899,
                    1900,
                    3915,
                    1850,
                    1851,
                    3197
                ],
                "dy": [
                    6278,
                    1799,
                    6280,
                    1803,
                    4954,
                    4956
                ],
                "self.set_xscale": [
                    1802,
                    6763,
                    2349,
                    4757,
                    1853
                ],
                "self.set_yscale": [
                    2345,
                    1803,
                    6765,
                    1901,
                    4762
                ],
                "d": [
                    3914,
                    1899,
                    3916,
                    1901,
                    3918,
                    3920,
                    1850,
                    1853
                ],
                "self.xcorr": [
                    1967
                ],
                "mlab.detrend_none": [
                    1970,
                    7410
                ],
                "mlab": [
                    7043,
                    7460,
                    7398,
                    7593,
                    7246,
                    7152,
                    1970,
                    7410,
                    7411,
                    7901,
                    7327
                ],
                "Nx": [
                    5696,
                    2050,
                    2052,
                    2054,
                    5702,
                    6120,
                    2057,
                    5705,
                    5707,
                    5885,
                    5710,
                    5711,
                    6109,
                    2037,
                    2038,
                    5689,
                    5692,
                    5853
                ],
                "detrend": [
                    7043,
                    7460,
                    7594,
                    7152,
                    2041,
                    2042
                ],
                "correls": [
                    2057,
                    2060,
                    2067,
                    2069,
                    2044,
                    2047
                ],
                "np.correlate": [
                    2044
                ],
                "normed": [
                    2046
                ],
                "np.sqrt": [
                    2047
                ],
                "np.dot": [
                    2047
                ],
                "maxlags": [
                    2049,
                    2050,
                    2052,
                    2056,
                    2057
                ],
                "lags": [
                    2056,
                    2067,
                    2060,
                    2069
                ],
                "np.arange": [
                    4736,
                    5664,
                    4803,
                    5662,
                    2056,
                    2736,
                    7063,
                    7167,
                    4733,
                    4734,
                    4735
                ],
                "usevlines": [
                    2059
                ],
                "self.vlines": [
                    8034,
                    3430,
                    3403,
                    2060,
                    3413,
                    8031
                ],
                "b": [
                    2437,
                    4999,
                    5000,
                    3337,
                    2442,
                    5002,
                    2063,
                    3343,
                    2068,
                    2069,
                    3306,
                    3307,
                    2416,
                    2418,
                    3317,
                    3319,
                    3321,
                    2427,
                    3325
                ],
                "self.axhline": [
                    2063
                ],
                "kwargs.setdefault": [
                    5890,
                    5894,
                    3176,
                    2571,
                    2065,
                    2066,
                    5905,
                    6104
                ],
                "cbook._check_in_list": [
                    6583,
                    2392,
                    6580,
                    6582,
                    2135,
                    2328
                ],
                "where": [
                    5368,
                    5352,
                    5353,
                    5163,
                    5164,
                    5355,
                    5166,
                    5167,
                    5356,
                    5424,
                    5362,
                    5425,
                    5236,
                    5173,
                    5237,
                    2135,
                    2136,
                    5179
                ],
                "type": [
                    2151
                ],
                "xconv": [
                    2176,
                    2153,
                    2174,
                    2151
                ],
                "np.ndarray": [
                    2151
                ],
                "xconv.size": [
                    2153
                ],
                "convert": [
                    2155,
                    2188,
                    2182
                ],
                "cbook.safe_first_element": [
                    2627,
                    2169,
                    4219,
                    2174,
                    2623
                ],
                "IndexError": [
                    2764,
                    2170,
                    2779,
                    2750,
                    2175
                ],
                "KeyError": [
                    2170,
                    2175
                ],
                "delist": [
                    2178,
                    2181,
                    2183
                ],
                "ddx": [
                    2182
                ],
                "AttributeError": [
                    2185
                ],
                "staticmethod": [
                    5648,
                    4129,
                    2139
                ],
                "mpatches.Patch": [
                    2302
                ],
                "self._get_patches_for_fill.get_next_color": [
                    2305,
                    2952,
                    5336,
                    5147,
                    4412
                ],
                "self._get_patches_for_fill": [
                    2305,
                    2952,
                    4412,
                    5336,
                    5147,
                    5052
                ],
                "xerr": [
                    2433,
                    2311,
                    2447,
                    3346,
                    3347,
                    2357,
                    2358,
                    3449,
                    3227,
                    3228,
                    3229
                ],
                "yerr": [
                    3232,
                    2433,
                    3233,
                    3395,
                    3396,
                    2312,
                    2447,
                    3450,
                    2363,
                    2364,
                    3231
                ],
                "error_kw": [
                    2313,
                    2314,
                    2444,
                    2448,
                    2321,
                    2324,
                    2325
                ],
                "ezorder": [
                    2314,
                    2315,
                    2316,
                    2317,
                    2320,
                    2321
                ],
                "error_kw.pop": [
                    2314
                ],
                "kwargs.get": [
                    2316
                ],
                "error_kw.setdefault": [
                    2444,
                    2321,
                    2324,
                    2325
                ],
                "ecolor": [
                    3206,
                    3247,
                    3280,
                    3217,
                    2322,
                    3218,
                    2324
                ],
                "capsize": [
                    3422,
                    3267,
                    3268,
                    3269,
                    3270,
                    3404,
                    3373,
                    3439,
                    2323,
                    2325,
                    3355,
                    3390
                ],
                "log": [
                    2344,
                    6761,
                    2348,
                    6740,
                    2330
                ],
                "tick_labels": [
                    2460,
                    2457,
                    2458,
                    2332
                ],
                "bottom": [
                    2819,
                    2437,
                    2442,
                    2334,
                    6733,
                    6734,
                    6736,
                    6741,
                    6744,
                    2401,
                    6755,
                    2404,
                    6756,
                    6758,
                    2794,
                    2412,
                    2415,
                    2811,
                    6782,
                    6783
                ],
                "self._convert_dx": [
                    2640,
                    2356,
                    2358,
                    2362,
                    2364
                ],
                "np.broadcast_arrays": [
                    5176,
                    5365,
                    2366
                ],
                "np.atleast_1d": [
                    2368,
                    2378,
                    5365,
                    5176,
                    2937
                ],
                "tick_label_axis": [
                    2460,
                    2459,
                    2372,
                    2375
                ],
                "tick_label_position": [
                    2376,
                    2459,
                    2373
                ],
                "itertools.cycle": [
                    2378,
                    2379,
                    2386,
                    2954
                ],
                "itertools": [
                    2378,
                    2379,
                    2954,
                    2381,
                    2383,
                    2385,
                    2386,
                    6833,
                    2388
                ],
                "itertools.chain": [
                    2385,
                    2379
                ],
                "itertools.repeat": [
                    2388,
                    2381,
                    2383
                ],
                "align": [
                    6720,
                    6722,
                    2410,
                    2573,
                    6767,
                    6769,
                    6582,
                    2392,
                    2393
                ],
                "left": [
                    2436,
                    2409,
                    2441,
                    2411,
                    2572,
                    2415,
                    3347,
                    3380,
                    3382,
                    3353,
                    2396
                ],
                "x.dtype": [
                    2398
                ],
                "width.dtype": [
                    2399
                ],
                "e": [
                    2400,
                    2408,
                    3337,
                    3338,
                    3341,
                    3342,
                    3343,
                    2416,
                    2420
                ],
                "y.dtype": [
                    2406
                ],
                "height.dtype": [
                    2407
                ],
                "patches": [
                    5056,
                    6690,
                    6810,
                    6818,
                    6845,
                    2572,
                    2414,
                    2574,
                    6833,
                    6847,
                    6804,
                    2454,
                    6742,
                    2458,
                    5052,
                    5053,
                    2431
                ],
                "w": [
                    6672,
                    6615,
                    2436,
                    2441,
                    2988,
                    2416,
                    2992,
                    2418,
                    2993,
                    2994,
                    6608,
                    6610,
                    6612,
                    3000,
                    3001,
                    6654
                ],
                "h": [
                    6946,
                    6948,
                    2437,
                    6950,
                    2442,
                    6954,
                    2416,
                    2418,
                    6942
                ],
                "c": [
                    4230,
                    4236,
                    4237,
                    4240,
                    6803,
                    6807,
                    6808,
                    5145,
                    4251,
                    4254,
                    4259,
                    7720,
                    7722,
                    4267,
                    7723,
                    7725,
                    7726,
                    7727,
                    4409,
                    4411,
                    4415,
                    4419,
                    4421,
                    6732,
                    6741,
                    5334,
                    4190,
                    4455,
                    2416,
                    2419,
                    4211,
                    4212,
                    4213,
                    4217,
                    4218,
                    4219
                ],
                "lw": [
                    2416,
                    2421
                ],
                "r": [
                    2417,
                    2424,
                    2425,
                    2427,
                    2429,
                    2430,
                    2431
                ],
                "r.update": [
                    2424
                ],
                "_interpolation_steps": [
                    2425
                ],
                "r.get_path": [
                    2425
                ],
                "r.sticky_edges.y.append": [
                    2427
                ],
                "r.sticky_edges.y": [
                    2427
                ],
                "r.sticky_edges": [
                    2427,
                    2429
                ],
                "r.sticky_edges.x.append": [
                    2429
                ],
                "r.sticky_edges.x": [
                    2429
                ],
                "patches.append": [
                    6804,
                    6742,
                    2431
                ],
                "errorbar": [
                    2450,
                    2454,
                    2446
                ],
                "self.errorbar": [
                    2446
                ],
                "bar_container": [
                    2462,
                    2454,
                    2455
                ],
                "BarContainer": [
                    2454
                ],
                "self.add_container": [
                    2825,
                    2455
                ],
                "np.broadcast_to": [
                    2458,
                    3291,
                    3292,
                    3293,
                    3294
                ],
                "tick_label_axis.set_ticks": [
                    2459
                ],
                "tick_label_axis.set_ticklabels": [
                    2460
                ],
                "self.bar": [
                    6729,
                    2572
                ],
                "xranges": [
                    2634,
                    2622,
                    2623
                ],
                "xdata": [
                    2625,
                    2630,
                    2623
                ],
                "yrange": [
                    2626,
                    2627,
                    2643
                ],
                "ydata": [
                    2627,
                    2629,
                    2631
                ],
                "xranges_conv": [
                    2641,
                    2633,
                    2645
                ],
                "xr": [
                    6305,
                    6309,
                    2634,
                    2635,
                    2639,
                    2640,
                    6332,
                    6334
                ],
                "x_conv": [
                    2640,
                    2641,
                    2639
                ],
                "xranges_conv.append": [
                    2641
                ],
                "yrange_conv": [
                    2643,
                    2645
                ],
                "col": [
                    2649,
                    2645,
                    2646
                ],
                "mcoll.BrokenBarHCollection": [
                    2645
                ],
                "format": [
                    2731,
                    4781
                ],
                "linefmt": [
                    2746,
                    2756,
                    2749,
                    2758
                ],
                "linecolor": [
                    2755,
                    2758,
                    2798,
                    2812,
                    2751
                ],
                "linemarker": [
                    2752,
                    2755,
                    2813,
                    2758
                ],
                "_process_plot_format": [
                    2756,
                    2788,
                    2758,
                    2790,
                    2770,
                    2773,
                    3701,
                    3199
                ],
                "markerfmt": [
                    2760,
                    2770,
                    2763,
                    2773
                ],
                "markercolor": [
                    2816,
                    2769,
                    2772,
                    2765
                ],
                "markermarker": [
                    2769,
                    2772,
                    2766,
                    2817
                ],
                "markerstyle": [
                    2816,
                    2769,
                    2772,
                    2767
                ],
                "basefmt": [
                    2778,
                    2788,
                    2790,
                    2775
                ],
                "basecolor": [
                    2787,
                    2820,
                    2790,
                    2781,
                    2783
                ],
                "basemarker": [
                    2784,
                    2787,
                    2821,
                    2790
                ],
                "basestyle": [
                    2785,
                    2787,
                    2820,
                    2790
                ],
                "use_line_collection": [
                    2793
                ],
                "stemlines": [
                    2823,
                    2794,
                    2797,
                    2800,
                    2809,
                    2814
                ],
                "xi": [
                    6598,
                    2794,
                    6638,
                    6639,
                    6642,
                    6643,
                    6615,
                    6616,
                    2810,
                    2811
                ],
                "yi": [
                    4834,
                    4835,
                    4836,
                    2794,
                    2810,
                    2811
                ],
                "cbook._warn_external": [
                    2803,
                    4781
                ],
                "stemlines.append": [
                    2814
                ],
                "markerline": [
                    2816,
                    2823
                ],
                "baseline": [
                    2819,
                    2823
                ],
                "stem_container": [
                    2825,
                    2826,
                    2823
                ],
                "StemContainer": [
                    2823
                ],
                "self.set_aspect": [
                    2928,
                    5625,
                    7745
                ],
                "np.float32": [
                    2931
                ],
                "x.ndim": [
                    6273,
                    2932,
                    6284
                ],
                "ndim": [
                    2932
                ],
                "x.squeeze": [
                    2937,
                    2932
                ],
                "cbook.warn_deprecated": [
                    5168,
                    5357,
                    3331,
                    2933
                ],
                "sx": [
                    4737,
                    4745,
                    4655,
                    4662,
                    2939,
                    2940,
                    2941
                ],
                "x.sum": [
                    2939
                ],
                "explode": [
                    2945,
                    2946,
                    2949,
                    2981
                ],
                "get_next_color": [
                    2952,
                    2990
                ],
                "color_cycle": [
                    2954,
                    2957
                ],
                "next": [
                    3211,
                    2957
                ],
                "radius": [
                    2988,
                    2959,
                    2960,
                    3026,
                    3027,
                    3006,
                    3007
                ],
                "startangle": [
                    2963,
                    2966
                ],
                "theta1": [
                    3043,
                    2983,
                    2984,
                    2988,
                    2989,
                    2964,
                    2966
                ],
                "wedgeprops": [
                    2969,
                    2970,
                    2971,
                    2991
                ],
                "wedgeprops.setdefault": [
                    2971
                ],
                "textprops": [
                    3019,
                    2974,
                    2973,
                    3038,
                    2975
                ],
                "textprops.setdefault": [
                    2975
                ],
                "texts": [
                    3056,
                    2977,
                    3058,
                    3023
                ],
                "slices": [
                    2992,
                    2978,
                    3056,
                    3058
                ],
                "autotexts": [
                    3041,
                    3058,
                    2979
                ],
                "frac": [
                    3029,
                    3031,
                    2981,
                    2983
                ],
                "expl": [
                    2985,
                    2986,
                    2981
                ],
                "center": [
                    2982,
                    3048,
                    3049,
                    3050,
                    3051
                ],
                "theta2": [
                    3043,
                    2983,
                    2984,
                    2988,
                    2989
                ],
                "counterclock": [
                    2983
                ],
                "thetam": [
                    3013,
                    2984,
                    2985,
                    2986,
                    3026,
                    3027,
                    3006,
                    3007
                ],
                "np.pi": [
                    2984
                ],
                "math.cos": [
                    2985,
                    3026,
                    3006
                ],
                "math": [
                    2985,
                    2986,
                    3026,
                    3027,
                    4626,
                    7063,
                    7167,
                    3006,
                    3007
                ],
                "math.sin": [
                    2986,
                    3027,
                    3007
                ],
                "mpatches.Wedge": [
                    2988
                ],
                "slices.append": [
                    2992
                ],
                "w.set_label": [
                    2994
                ],
                "shadow": [
                    2996
                ],
                "shad": [
                    3000,
                    3001,
                    3002,
                    3003
                ],
                "mpatches.Shadow": [
                    3000
                ],
                "shad.set_zorder": [
                    3001
                ],
                "w.get_zorder": [
                    3001
                ],
                "shad.set_label": [
                    3002
                ],
                "labeldistance": [
                    3005,
                    3006,
                    3007
                ],
                "xt": [
                    3008,
                    3014,
                    3021,
                    3026,
                    3006,
                    3039
                ],
                "yt": [
                    6305,
                    3012,
                    6309,
                    3021,
                    3027,
                    3007,
                    6333,
                    6334,
                    3039
                ],
                "label_alignment_h": [
                    3008,
                    3015
                ],
                "label_alignment_v": [
                    3016,
                    3009,
                    3012
                ],
                "label_rotation": [
                    3017,
                    3010,
                    3013
                ],
                "rotatelabels": [
                    3011
                ],
                "np.rad2deg": [
                    3013
                ],
                "props": [
                    3015,
                    3019,
                    3021,
                    3036,
                    3038,
                    3039
                ],
                "dict": [
                    6630,
                    3015,
                    3244,
                    3694,
                    3924,
                    3259,
                    3036,
                    4126
                ],
                "props.update": [
                    3019,
                    3038
                ],
                "self.text": [
                    3021,
                    3039
                ],
                "texts.append": [
                    3023
                ],
                "autopct": [
                    3055,
                    3025,
                    3028,
                    3029,
                    3030,
                    3031
                ],
                "pctdistance": [
                    3026,
                    3027
                ],
                "str": [
                    6826,
                    6829,
                    6831,
                    3028,
                    4217,
                    4219
                ],
                "callable": [
                    3030
                ],
                "autotexts.append": [
                    3041
                ],
                "frame": [
                    3045
                ],
                "self.set_frame_on": [
                    3046
                ],
                "self.set_xlim": [
                    3048,
                    7743,
                    6951
                ],
                "self.set_ylim": [
                    6952,
                    3050,
                    7744
                ],
                "self.set_xticks": [
                    3052
                ],
                "self.set_yticks": [
                    7064,
                    7168,
                    3053
                ],
                "v": [
                    3200,
                    3175,
                    3914,
                    3342,
                    3343,
                    3197
                ],
                "kwargs.items": [
                    3175
                ],
                "offset": [
                    3297,
                    3186,
                    3179,
                    3181
                ],
                "errorevery": [
                    3297,
                    3179,
                    3183
                ],
                "int": [
                    3183,
                    3186,
                    4626,
                    7059,
                    4664,
                    4665,
                    4666,
                    4667,
                    7165
                ],
                "plot_line": [
                    3283,
                    3191
                ],
                "fmt.lower": [
                    3191
                ],
                "fmt_style_kwargs": [
                    3203,
                    3205,
                    3214,
                    3195,
                    3197
                ],
                "fmt_style_kwargs.pop": [
                    3203
                ],
                "base_style": [
                    3237,
                    3207,
                    3209,
                    3211,
                    3244,
                    3213,
                    3214,
                    3215,
                    3216,
                    3218,
                    3259
                ],
                "self._get_lines.prop_cycler": [
                    3211
                ],
                "base_style.update": [
                    3214
                ],
                "plot_line_style": [
                    3284,
                    3236
                ],
                "barsabove": [
                    3239
                ],
                "eb_lines_style": [
                    3264,
                    3364,
                    3430,
                    3403,
                    3244,
                    3245,
                    3246,
                    3247,
                    3250,
                    3252,
                    3381,
                    3413,
                    3256,
                    3354,
                    3262,
                    3263
                ],
                "eb_lines_style.pop": [
                    3264,
                    3245,
                    3246,
                    3262,
                    3263
                ],
                "elinewidth": [
                    3249,
                    3250
                ],
                "key": [
                    3276,
                    3278,
                    3279,
                    3254,
                    3255,
                    3256
                ],
                "eb_cap_style": [
                    3357,
                    3359,
                    3372,
                    3376,
                    3259,
                    3389,
                    3261,
                    3265,
                    3266,
                    3393,
                    3270,
                    3272,
                    3406,
                    3279,
                    3280,
                    3408,
                    3421,
                    3425,
                    3438,
                    3442
                ],
                "eb_cap_style.pop": [
                    3265,
                    3261
                ],
                "capthick": [
                    3272,
                    3271
                ],
                "data_line": [
                    3282,
                    3284,
                    3285,
                    3447
                ],
                "barcols": [
                    3364,
                    3430,
                    3403,
                    3381,
                    3413,
                    3287,
                    3448,
                    3354
                ],
                "caplines": [
                    3392,
                    3424,
                    3370,
                    3436,
                    3405,
                    3375,
                    3407,
                    3441,
                    3419,
                    3443,
                    3447,
                    3288,
                    3387,
                    3356,
                    3358
                ],
                "lolims": [
                    3399,
                    3410,
                    3411,
                    3412,
                    3414,
                    3291,
                    3423
                ],
                "astype": [
                    4667,
                    7900,
                    6119,
                    4664,
                    4665,
                    4666,
                    3291,
                    3292,
                    3293,
                    3294
                ],
                "bool": [
                    3296,
                    6662,
                    5355,
                    5166,
                    3291,
                    3292,
                    3293,
                    3294
                ],
                "uplims": [
                    3427,
                    3428,
                    3429,
                    3399,
                    3431,
                    3440,
                    3292
                ],
                "xlolims": [
                    3361,
                    3362,
                    3363,
                    3365,
                    3374,
                    3350,
                    3293
                ],
                "xuplims": [
                    3378,
                    3379,
                    3380,
                    3350,
                    3382,
                    3294,
                    3391
                ],
                "everymask": [
                    3352,
                    3353,
                    3362,
                    3363,
                    3365,
                    3374,
                    3379,
                    3380,
                    3382,
                    3391,
                    3401,
                    3402,
                    3411,
                    3412,
                    3414,
                    3423,
                    3296,
                    3297,
                    3428,
                    3429,
                    3431,
                    3440
                ],
                "np.zeros": [
                    3296,
                    4832,
                    5380,
                    6756,
                    4679,
                    4680,
                    5191,
                    6734,
                    4732,
                    6749,
                    6750
                ],
                "xs": [
                    3974,
                    3304,
                    3305,
                    3306,
                    3308,
                    3984,
                    3985,
                    3955,
                    3962
                ],
                "ys": [
                    3974,
                    3304,
                    3307,
                    3308,
                    3984,
                    3985,
                    3955,
                    3962
                ],
                "mask": [
                    7716,
                    3305,
                    5866,
                    3306,
                    3307,
                    5865,
                    5867,
                    5869,
                    5871,
                    7708
                ],
                "err": [
                    3321,
                    3317
                ],
                "iter": [
                    3318,
                    3319
                ],
                "a_sh": [
                    3330,
                    3324,
                    3326
                ],
                "np.shape": [
                    3717,
                    3726,
                    6264,
                    3324,
                    3325
                ],
                "b_sh": [
                    3330,
                    3325,
                    3327
                ],
                "low": [
                    3344,
                    3342
                ],
                "high": [
                    3344,
                    3343
                ],
                "right": [
                    3362,
                    3363,
                    3365,
                    3347,
                    3379,
                    3352,
                    3353
                ],
                "extract_err": [
                    3347,
                    3396
                ],
                "noxlims": [
                    3352,
                    3353,
                    3350,
                    3351
                ],
                "noxlims.any": [
                    3351
                ],
                "yo": [
                    3362,
                    3364,
                    3379,
                    3381,
                    3352,
                    3354,
                    3356,
                    3358
                ],
                "_": [
                    3362,
                    3428,
                    3401,
                    3379,
                    3411,
                    3701,
                    3352
                ],
                "xywhere": [
                    3352,
                    3353,
                    3362,
                    3363,
                    3365,
                    3374,
                    3379,
                    3380,
                    3382,
                    3391,
                    3401,
                    3402,
                    3411,
                    3412,
                    3414,
                    3423,
                    3428,
                    3429,
                    3431,
                    3440
                ],
                "lo": [
                    3363,
                    3364,
                    3429,
                    3430,
                    3402,
                    3403,
                    3405,
                    3380,
                    3381,
                    3412,
                    3413,
                    3353,
                    3354,
                    3356
                ],
                "ro": [
                    3363,
                    3364,
                    3380,
                    3381,
                    3353,
                    3354,
                    3358
                ],
                "barcols.append": [
                    3364,
                    3430,
                    3403,
                    3413,
                    3381,
                    3354
                ],
                "self.hlines": [
                    8035,
                    3364,
                    3381,
                    3354,
                    8030
                ],
                "caplines.append": [
                    3392,
                    3424,
                    3370,
                    3436,
                    3405,
                    3375,
                    3407,
                    3441,
                    3419,
                    3387,
                    3356,
                    3358
                ],
                "xlolims.any": [
                    3361
                ],
                "rightup": [
                    3371,
                    3365
                ],
                "yup": [
                    3392,
                    3365,
                    3371,
                    3440,
                    3441,
                    3391
                ],
                "self.xaxis_inverted": [
                    3366,
                    3383
                ],
                "marker": [
                    7704,
                    7705,
                    7706,
                    3367,
                    3369,
                    3371,
                    7732,
                    7733,
                    3384,
                    3386,
                    3388,
                    7740,
                    4426,
                    4427,
                    4429,
                    4430,
                    4432,
                    3416,
                    3418,
                    3420,
                    3433,
                    3435,
                    3437,
                    3701,
                    3703,
                    3704
                ],
                "mlines.CARETLEFTBASE": [
                    3386,
                    3367
                ],
                "mlines.CARETRIGHTBASE": [
                    3384,
                    3369
                ],
                "xlo": [
                    3424,
                    3431,
                    3437,
                    3374,
                    3375,
                    3423
                ],
                "ylo": [
                    3424,
                    3374,
                    3375,
                    3382,
                    3388,
                    3423
                ],
                "xuplims.any": [
                    3378
                ],
                "leftlo": [
                    3388,
                    3382
                ],
                "xup": [
                    3392,
                    3440,
                    3441,
                    3414,
                    3420,
                    3391
                ],
                "lower": [
                    3428,
                    3396,
                    3429,
                    3431,
                    3401,
                    3402,
                    3411
                ],
                "upper": [
                    3402,
                    3396,
                    3414,
                    3412
                ],
                "noylims": [
                    3400,
                    3401,
                    3402,
                    3399
                ],
                "noylims.any": [
                    3400
                ],
                "xo": [
                    3428,
                    3430,
                    3401,
                    3403,
                    3405,
                    3407,
                    3411,
                    3413
                ],
                "uo": [
                    3429,
                    3430,
                    3402,
                    3403,
                    3407,
                    3412,
                    3413
                ],
                "lolims.any": [
                    3410
                ],
                "upperup": [
                    3420,
                    3414
                ],
                "self.yaxis_inverted": [
                    3432,
                    3415
                ],
                "mlines.CARETDOWNBASE": [
                    3416,
                    3435
                ],
                "mlines.CARETUPBASE": [
                    3433,
                    3418
                ],
                "uplims.any": [
                    3427
                ],
                "lowerlo": [
                    3437,
                    3431
                ],
                "errorbar_container": [
                    3452,
                    3454,
                    3447
                ],
                "ErrorbarContainer": [
                    3447
                ],
                "self.containers.append": [
                    3452
                ],
                "self.containers": [
                    3452
                ],
                "whis": [
                    3641,
                    3642,
                    3646
                ],
                "bootstrap": [
                    3643,
                    3644,
                    3646
                ],
                "bxpstats": [
                    3716,
                    3717,
                    3721,
                    4009,
                    3726,
                    3730,
                    3988,
                    3741,
                    3646
                ],
                "cbook.boxplot_stats": [
                    3646
                ],
                "autorange": [
                    3647
                ],
                "notch": [
                    3648,
                    3649,
                    3743
                ],
                "vert": [
                    3969,
                    3650,
                    3651,
                    7906,
                    3742,
                    8028,
                    4094
                ],
                "patch_artist": [
                    3652,
                    3653,
                    3678,
                    4050,
                    3923,
                    3742
                ],
                "meanline": [
                    3747,
                    3654,
                    3655,
                    4073,
                    3948
                ],
                "showmeans": [
                    8066,
                    7907,
                    3656,
                    3657,
                    4072,
                    3743
                ],
                "showcaps": [
                    3744,
                    3658,
                    3659,
                    4064
                ],
                "showbox": [
                    3744,
                    4049,
                    3660,
                    3661
                ],
                "showfliers": [
                    3747,
                    3662,
                    3663,
                    3696,
                    4084
                ],
                "boxprops": [
                    3680,
                    3681,
                    3745,
                    3937,
                    3665,
                    3666,
                    3935,
                    3932,
                    3679
                ],
                "whiskerprops": [
                    3939,
                    3748,
                    3667,
                    3668
                ],
                "capprops": [
                    3941,
                    3748,
                    3669,
                    3670
                ],
                "medianprops": [
                    3672,
                    3945,
                    3746,
                    3671
                ],
                "meanprops": [
                    3746,
                    3947,
                    3950,
                    3673,
                    3674
                ],
                "flierprops": [
                    3712,
                    3745,
                    3943,
                    3694,
                    3704,
                    3675,
                    3676,
                    3710,
                    3711
                ],
                "boxprops.pop": [
                    3681
                ],
                "sym": [
                    3688,
                    3692,
                    3701
                ],
                "usermedians": [
                    3721,
                    3715,
                    3716,
                    3717
                ],
                "stats": [
                    3721,
                    3723,
                    3730,
                    3737,
                    3739,
                    8093,
                    8094,
                    4009,
                    4011,
                    4015,
                    4016,
                    4022,
                    4023,
                    4028,
                    4035,
                    4036,
                    4037,
                    4038,
                    4044,
                    4045,
                    8055,
                    4075,
                    8045,
                    4080,
                    8048,
                    8050,
                    4086,
                    4087,
                    8056,
                    8057,
                    8058,
                    8059
                ],
                "med": [
                    3721,
                    3722,
                    3723
                ],
                "conf_intervals": [
                    3730,
                    3725,
                    3726
                ],
                "err_mess": [
                    3728,
                    3727
                ],
                "ci": [
                    3730,
                    3731,
                    3732,
                    3736,
                    3737,
                    3738,
                    3739
                ],
                "artists": [
                    8067,
                    8099,
                    8005,
                    3750,
                    8102,
                    8072,
                    8074,
                    8076,
                    8081,
                    3741,
                    8063
                ],
                "self.bxp": [
                    3741
                ],
                "widths": [
                    4002,
                    4003,
                    4004,
                    4005,
                    4006,
                    7907,
                    4009,
                    8045,
                    8018,
                    8019,
                    8020,
                    8024,
                    8025,
                    3741
                ],
                "manage_ticks": [
                    4093,
                    3749
                ],
                "cbook._rename_parameter": [
                    3456,
                    6850,
                    3752
                ],
                "whiskers": [
                    4056,
                    3897,
                    4059,
                    4126
                ],
                "caps": [
                    4065,
                    3898,
                    4066,
                    4126
                ],
                "boxes": [
                    3899,
                    4053,
                    4051,
                    4126
                ],
                "medians": [
                    8001,
                    4069,
                    4106,
                    8081,
                    8058,
                    3900,
                    4127
                ],
                "means": [
                    8067,
                    4074,
                    4079,
                    8055,
                    3901,
                    7998,
                    4127
                ],
                "fliers": [
                    4089,
                    3902,
                    4127
                ],
                "datalabels": [
                    3905,
                    4011,
                    4121
                ],
                "mlines.Line2D.zorder": [
                    3909
                ],
                "zdelta": [
                    3945,
                    3947,
                    3916,
                    3911
                ],
                "k.split": [
                    3914
                ],
                "rcParams.items": [
                    3914
                ],
                "k.startswith": [
                    3915
                ],
                "subkey": [
                    3915
                ],
                "explicit": [
                    3917,
                    3919
                ],
                "d.update": [
                    3918
                ],
                "mlines.Line2D._alias_map": [
                    3919
                ],
                "final_boxprops": [
                    3937,
                    4051,
                    3924,
                    4053,
                    3933
                ],
                "final_boxprops.update": [
                    3933
                ],
                "mpatches.PathPatch._alias_map": [
                    3935
                ],
                "mpatches.PathPatch": [
                    3964,
                    3935
                ],
                "line_props_with_rcdefaults": [
                    3937,
                    3938,
                    3940,
                    3942,
                    3944,
                    3946
                ],
                "final_whiskerprops": [
                    4057,
                    3938,
                    4060
                ],
                "final_capprops": [
                    4065,
                    4066,
                    3940
                ],
                "final_flierprops": [
                    4090,
                    3942
                ],
                "final_medianprops": [
                    3944,
                    4069
                ],
                "final_meanprops": [
                    4080,
                    3946,
                    4076,
                    3951
                ],
                "removed_prop": [
                    3948,
                    3950,
                    3951
                ],
                "np.append": [
                    3955
                ],
                "np.column_stack": [
                    3955,
                    6119
                ],
                "codes": [
                    3962,
                    3963,
                    3956,
                    3959
                ],
                "mpath.Path.MOVETO": [
                    3956
                ],
                "mpath.Path": [
                    3963,
                    3956,
                    3957,
                    3958
                ],
                "mpath": [
                    3963,
                    3956,
                    3957,
                    3958
                ],
                "mpath.Path.LINETO": [
                    3957
                ],
                "mpath.Path.CLOSEPOLY": [
                    3958
                ],
                "to_vc": [
                    3962
                ],
                "path": [
                    4434,
                    3963,
                    3964,
                    4443
                ],
                "patch": [
                    6813,
                    6833,
                    6834,
                    6739,
                    6835,
                    6742,
                    6840,
                    6811,
                    3964,
                    3965,
                    3966,
                    6815
                ],
                "self.add_artist": [
                    4963,
                    4957,
                    3965
                ],
                "patch_list": [
                    3985,
                    6810,
                    6811,
                    3974
                ],
                "shuffled": [
                    3978,
                    3980,
                    3981
                ],
                "i": [
                    3979,
                    3980,
                    6669,
                    4879,
                    4880,
                    4881,
                    4882,
                    6672,
                    4885,
                    4697,
                    4699,
                    4701,
                    6621,
                    4703,
                    4705,
                    4706,
                    4707,
                    4708,
                    4833,
                    4710,
                    4711,
                    4834,
                    4713,
                    4839,
                    4715,
                    4717,
                    4719,
                    4720,
                    4847,
                    4722,
                    4848,
                    4724,
                    4849,
                    4726,
                    4850,
                    4854
                ],
                "range": [
                    6621,
                    4705,
                    4833,
                    4713,
                    4714,
                    3979,
                    6570,
                    6669,
                    8013,
                    6942,
                    4720,
                    4721,
                    4698,
                    4697,
                    3993,
                    4701,
                    4702
                ],
                "shuffled.extend": [
                    3980
                ],
                "N": [
                    5379,
                    5380,
                    3988,
                    3993,
                    3994,
                    4003,
                    5412,
                    4005,
                    4006,
                    5414,
                    5415,
                    5416,
                    5417,
                    5190,
                    5191,
                    8007,
                    8013,
                    8014,
                    8019,
                    8020,
                    5224,
                    5226,
                    5227,
                    5228,
                    5229
                ],
                "datashape_message": [
                    4007,
                    8008,
                    8015,
                    3989,
                    8021,
                    3995
                ],
                "datashape_message.format": [
                    3995,
                    8021,
                    8015,
                    4007
                ],
                "np.array": [
                    4745,
                    6674,
                    4115,
                    4628,
                    4629,
                    4891,
                    3997,
                    4015,
                    4016,
                    5424,
                    5425,
                    4021,
                    6334,
                    8024,
                    8025,
                    8048,
                    5236,
                    5237,
                    4863
                ],
                "np.clip": [
                    6705,
                    4003
                ],
                "np.ptp": [
                    6280,
                    4003,
                    6279
                ],
                "np.isscalar": [
                    8018,
                    4004,
                    6573
                ],
                "datalabels.append": [
                    4011
                ],
                "stats.get": [
                    4011,
                    8094,
                    8059
                ],
                "whisker_x": [
                    4057,
                    4060,
                    4014
                ],
                "np.ones": [
                    4828,
                    4022,
                    4014,
                    4023
                ],
                "whiskerlo_y": [
                    4057,
                    4015
                ],
                "whiskerhi_y": [
                    4016,
                    4060
                ],
                "cap_left": [
                    4033,
                    4019,
                    4021
                ],
                "cap_right": [
                    4032,
                    4020,
                    4021
                ],
                "cap_x": [
                    4065,
                    4066,
                    4021,
                    4039
                ],
                "cap_lo": [
                    4065,
                    4022
                ],
                "cap_hi": [
                    4066,
                    4023
                ],
                "box_left": [
                    4032,
                    4033,
                    4034,
                    4043,
                    4075,
                    4046,
                    4026
                ],
                "box_right": [
                    4032,
                    4033,
                    4043,
                    4075,
                    4046,
                    4027
                ],
                "med_y": [
                    4028,
                    4069
                ],
                "shownotches": [
                    4031
                ],
                "box_x": [
                    4032,
                    4043,
                    4053,
                    4051
                ],
                "box_y": [
                    4035,
                    4044,
                    4053,
                    4051
                ],
                "med_x": [
                    4069,
                    4046,
                    4039
                ],
                "boxes.extend": [
                    4051,
                    4053
                ],
                "dopatch": [
                    4051
                ],
                "doplot": [
                    4065,
                    4066,
                    4069,
                    4074,
                    4079,
                    4053,
                    4056,
                    4089,
                    4059
                ],
                "whiskers.extend": [
                    4056,
                    4059
                ],
                "caps.extend": [
                    4065,
                    4066
                ],
                "medians.extend": [
                    4069
                ],
                "means.extend": [
                    4074,
                    4079
                ],
                "flier_x": [
                    4090,
                    4086
                ],
                "np.full": [
                    4086
                ],
                "np.float64": [
                    4086
                ],
                "flier_y": [
                    4090,
                    4087
                ],
                "fliers.extend": [
                    4089
                ],
                "axis_name": [
                    4096,
                    4107,
                    4094,
                    4095
                ],
                "interval": [
                    4104,
                    4105,
                    4095
                ],
                "getattr": [
                    4096,
                    4107,
                    4095
                ],
                "self.dataLim": [
                    5426,
                    5429,
                    5238,
                    5241,
                    4095
                ],
                "axis": [
                    4096,
                    4097,
                    4110,
                    4111,
                    4114,
                    4116,
                    4117,
                    4120
                ],
                "axis.convert_units": [
                    4097
                ],
                "median": [
                    4106,
                    4107
                ],
                "extend": [
                    4107
                ],
                "median.sticky_edges": [
                    4107
                ],
                "locator": [
                    4113,
                    4114,
                    4115,
                    4110
                ],
                "axis.get_major_locator": [
                    4110,
                    4111
                ],
                "mticker.FixedLocator": [
                    4112,
                    4113
                ],
                "mticker": [
                    7750,
                    7753,
                    4112,
                    4113,
                    4118,
                    4119,
                    7803,
                    7806
                ],
                "axis.set_major_locator": [
                    4114
                ],
                "locator.locs": [
                    4115
                ],
                "formatter": [
                    4120,
                    4121,
                    4116,
                    4119
                ],
                "axis.get_major_formatter": [
                    4116,
                    4117
                ],
                "mticker.FixedFormatter": [
                    4118,
                    4119
                ],
                "axis.set_major_formatter": [
                    4120
                ],
                "formatter.seq": [
                    4121
                ],
                "self._autoscaleXon": [
                    4124
                ],
                "self._autoscaleYon": [
                    4124
                ],
                "facecolors": [
                    4205,
                    4206,
                    4213,
                    4184,
                    4185
                ],
                "edgecolors": [
                    4416,
                    4417,
                    4419,
                    4771,
                    4421,
                    4765,
                    4203,
                    4204,
                    4267,
                    4208,
                    4209,
                    4437,
                    4409,
                    4186,
                    4411,
                    4445
                ],
                "kwcolor": [
                    4195,
                    4228,
                    4197,
                    4204,
                    4206,
                    4188,
                    4190
                ],
                "c_was_none": [
                    4211,
                    4228
                ],
                "get_next_color_func": [
                    4215
                ],
                "c_is_string_or_strings": [
                    4216,
                    4228
                ],
                "collections.abc.Iterable": [
                    4218
                ],
                "collections.abc": [
                    4218
                ],
                "collections": [
                    4218
                ],
                "csize": [
                    4223
                ],
                "xsize": [
                    4224,
                    4261,
                    4264,
                    4236,
                    4254
                ],
                "c_is_mapped": [
                    4249,
                    4226,
                    4238
                ],
                "valid_shape": [
                    4248,
                    4227,
                    4253
                ],
                "c.size": [
                    4236,
                    4254
                ],
                "c.ravel": [
                    4237
                ],
                "c.shape": [
                    4240
                ],
                "_log.warning": [
                    4241
                ],
                "invalid_shape_exception": [
                    4264,
                    4254
                ],
                "np.ma.ravel": [
                    4405,
                    4397,
                    4398,
                    6295
                ],
                "np.ma": [
                    5673,
                    4397,
                    4398,
                    5389,
                    5391,
                    5201,
                    5680,
                    5203,
                    5363,
                    4405,
                    5174,
                    5682,
                    4440,
                    6297,
                    6295,
                    4415
                ],
                "x.size": [
                    6274,
                    4399,
                    5167,
                    4470,
                    4406,
                    4472,
                    4411
                ],
                "y.size": [
                    6274,
                    5356,
                    4399
                ],
                "self._parse_scatter_color_args": [
                    4410
                ],
                "plotnonfinite": [
                    4414
                ],
                "np.ma.masked_invalid": [
                    4415
                ],
                "cbook._combine_masks": [
                    4417,
                    4420
                ],
                "scales": [
                    4443,
                    4423
                ],
                "mmarkers.MarkerStyle": [
                    4432,
                    4429
                ],
                "mmarkers": [
                    4432,
                    4429
                ],
                "marker_obj": [
                    4430,
                    4432,
                    4434,
                    4435,
                    4436
                ],
                "marker_obj.get_path": [
                    4434
                ],
                "marker_obj.get_transform": [
                    4435
                ],
                "marker_obj.is_filled": [
                    4436
                ],
                "offsets": [
                    4736,
                    4737,
                    4738,
                    4739,
                    4740,
                    4773,
                    4742,
                    4735,
                    4752,
                    4440,
                    4732,
                    4733,
                    4734,
                    4447
                ],
                "np.ma.column_stack": [
                    4440
                ],
                "collection": [
                    6146,
                    6147,
                    6151,
                    5243,
                    5907,
                    5909,
                    5910,
                    5911,
                    5912,
                    5913,
                    5914,
                    4763,
                    6300,
                    6304,
                    4769,
                    5921,
                    6306,
                    4903,
                    4904,
                    4907,
                    4908,
                    4909,
                    4910,
                    5421,
                    4912,
                    5933,
                    4914,
                    5939,
                    5940,
                    6142,
                    5431,
                    5944,
                    5433,
                    4807,
                    4808,
                    4809,
                    4810,
                    4811,
                    4814,
                    4816,
                    4823,
                    4825,
                    4442,
                    4451,
                    4452,
                    4455,
                    4456,
                    4457,
                    6120,
                    6123,
                    4460,
                    6124,
                    4462,
                    6125,
                    6126,
                    5233,
                    6127,
                    6128,
                    6133,
                    4475,
                    5245,
                    4478
                ],
                "mcoll.PathCollection": [
                    4442
                ],
                "collection.set_transform": [
                    4451
                ],
                "collection.update": [
                    4811,
                    4452
                ],
                "collection.set_array": [
                    4807,
                    6124,
                    5910,
                    4455
                ],
                "collection.set_cmap": [
                    4456,
                    5911,
                    6125,
                    4808
                ],
                "cmap": [
                    4897,
                    7619,
                    4869,
                    4456,
                    4808,
                    6312,
                    6125,
                    6319,
                    5911,
                    5626,
                    6302
                ],
                "collection.set_norm": [
                    5912,
                    4457,
                    4809,
                    6126
                ],
                "norm": [
                    4898,
                    4870,
                    6312,
                    4457,
                    4809,
                    4780,
                    6126,
                    6319,
                    4785,
                    4788,
                    5912,
                    5626,
                    4795,
                    4796,
                    4797,
                    6302
                ],
                "vmin": [
                    5635,
                    5636,
                    7619,
                    4459,
                    4460,
                    4813,
                    4814,
                    6127,
                    7057,
                    7058,
                    6324,
                    6325,
                    7063,
                    5913,
                    7162,
                    7164,
                    7167
                ],
                "vmax": [
                    5635,
                    5636,
                    7619,
                    4459,
                    4460,
                    4813,
                    4814,
                    6127,
                    7057,
                    7058,
                    6324,
                    6325,
                    7063,
                    5913,
                    7162,
                    7164,
                    7167
                ],
                "collection.set_clim": [
                    5913,
                    4460,
                    4814,
                    6127
                ],
                "collection.autoscale_None": [
                    4816,
                    5914,
                    4462,
                    6128
                ],
                "self._xmargin": [
                    4470
                ],
                "self.set_xmargin": [
                    4471
                ],
                "self._ymargin": [
                    4472
                ],
                "self.set_ymargin": [
                    4473
                ],
                "np.mean": [
                    4486
                ],
                "C": [
                    4619,
                    4876,
                    5910,
                    6294,
                    6295,
                    6296,
                    6297,
                    5659,
                    5660,
                    5665,
                    5666,
                    5670,
                    6313,
                    6318,
                    5684,
                    6326,
                    4678,
                    5705,
                    5710,
                    5711,
                    5712,
                    5713,
                    4827,
                    4828,
                    5852,
                    6108,
                    4708,
                    5861,
                    6118,
                    4711,
                    4844,
                    5869,
                    6124,
                    6263,
                    6264,
                    5885
                ],
                "gridsize": [
                    4842,
                    4875,
                    4622,
                    4623,
                    4625
                ],
                "nx": [
                    6621,
                    6593,
                    6624,
                    6627,
                    6669,
                    4655,
                    4623,
                    4625,
                    4626,
                    6610,
                    6612,
                    6713,
                    6715,
                    6844,
                    4669,
                    4671
                ],
                "ny": [
                    4672,
                    4623,
                    4656,
                    4626,
                    4670
                ],
                "math.sqrt": [
                    4626
                ],
                "xscale": [
                    4753,
                    4757,
                    4630,
                    4751
                ],
                "np.any": [
                    4636,
                    4631
                ],
                "np.log10": [
                    7053,
                    7059,
                    7604,
                    7158,
                    7606,
                    7257,
                    4634,
                    7165,
                    4639
                ],
                "yscale": [
                    4762,
                    4635,
                    4758,
                    4751
                ],
                "extent": [
                    4640,
                    4641,
                    7618,
                    7619,
                    6309,
                    6313,
                    6319,
                    5626
                ],
                "mtransforms.nonsingular": [
                    4648,
                    4647
                ],
                "padding": [
                    4652,
                    4653,
                    4654
                ],
                "sy": [
                    4656,
                    4745,
                    4738,
                    4663
                ],
                "marginals": [
                    4824,
                    4658
                ],
                "xorig": [
                    4659,
                    4844
                ],
                "x.copy": [
                    6793,
                    4659,
                    6795
                ],
                "yorig": [
                    4660,
                    4876
                ],
                "y.copy": [
                    6792,
                    6796,
                    4660
                ],
                "ix1": [
                    4675,
                    4707,
                    4708,
                    4681,
                    4683,
                    4664
                ],
                "np.round": [
                    4664,
                    4665
                ],
                "iy1": [
                    4675,
                    4707,
                    4708,
                    4681,
                    4683,
                    4665
                ],
                "ix2": [
                    4676,
                    4710,
                    4711,
                    4682,
                    4684,
                    4666
                ],
                "np.floor": [
                    4666,
                    4667
                ],
                "iy2": [
                    4676,
                    4710,
                    4711,
                    4682,
                    4684,
                    4667
                ],
                "nx1": [
                    4736,
                    4673,
                    4707,
                    4733,
                    4679,
                    4681,
                    4713,
                    4696,
                    4697,
                    4669,
                    4734,
                    4735
                ],
                "ny1": [
                    4736,
                    4673,
                    4707,
                    4679,
                    4681,
                    4714,
                    4734,
                    4696,
                    4698,
                    4733,
                    4670,
                    4735
                ],
                "nx2": [
                    4736,
                    4673,
                    4710,
                    4680,
                    4682,
                    4735,
                    4720,
                    4700,
                    4701,
                    4671
                ],
                "ny2": [
                    4672,
                    4673,
                    4736,
                    4710,
                    4680,
                    4682,
                    4721,
                    4700,
                    4702,
                    4735
                ],
                "n": [
                    4673,
                    4732
                ],
                "d1": [
                    4675,
                    4677
                ],
                "d2": [
                    4676,
                    4677
                ],
                "bdist": [
                    4681,
                    4682,
                    4677,
                    4706
                ],
                "lattice1": [
                    4708,
                    4679,
                    4683,
                    4715,
                    4717,
                    4686,
                    4719,
                    4688,
                    4728,
                    4696,
                    4699
                ],
                "lattice2": [
                    4711,
                    4680,
                    4684,
                    4687,
                    4688,
                    4722,
                    4724,
                    4726,
                    4729,
                    4700,
                    4703
                ],
                "c1": [
                    4681,
                    4683
                ],
                "c2": [
                    4682,
                    4684
                ],
                "np.add.at": [
                    4683,
                    4684
                ],
                "np.add": [
                    4683,
                    4684
                ],
                "mincnt": [
                    4716,
                    4685,
                    4686,
                    4687,
                    4723,
                    4692,
                    4693
                ],
                "np.nan": [
                    4838,
                    4686,
                    4719,
                    4687,
                    4726
                ],
                "accum": [
                    4801,
                    4805,
                    4743,
                    4807,
                    4688,
                    4689,
                    4789,
                    4791,
                    4728,
                    4730,
                    4797
                ],
                "np.concatenate": [
                    8096,
                    8097,
                    6658,
                    6654,
                    4688,
                    8062
                ],
                "lattice1.ravel": [
                    4688
                ],
                "lattice2.ravel": [
                    4688
                ],
                "good_idxs": [
                    4689,
                    4730,
                    4742,
                    4743
                ],
                "np.isnan": [
                    4845,
                    4877,
                    4689,
                    6646,
                    4730
                ],
                "np.empty": [
                    4696,
                    4700
                ],
                "object": [
                    4696,
                    4700
                ],
                "j": [
                    4714,
                    4715,
                    4717,
                    4719,
                    4721,
                    4722,
                    4724,
                    4726,
                    4698,
                    4699,
                    4702,
                    4703
                ],
                "append": [
                    4708,
                    4711
                ],
                "vals": [
                    4715,
                    4716,
                    4717,
                    8048,
                    8049,
                    4722,
                    4723,
                    4724,
                    8051,
                    8052
                ],
                "reduce_C_function": [
                    4836,
                    4724,
                    4717
                ],
                "np.hstack": [
                    4728
                ],
                "ravel": [
                    4728,
                    4729
                ],
                "lattice1.astype": [
                    4728
                ],
                "lattice2.astype": [
                    4729
                ],
                "np.repeat": [
                    4733,
                    4735
                ],
                "polygon": [
                    4752,
                    4745,
                    4770
                ],
                "polygons": [
                    4752,
                    4754,
                    4764,
                    4759
                ],
                "np.expand_dims": [
                    4752
                ],
                "mcoll.PolyCollection": [
                    4769,
                    4866,
                    5421,
                    5233,
                    5907,
                    4763,
                    4895
                ],
                "bins": [
                    6657,
                    6658,
                    6799,
                    6672,
                    6680,
                    6686,
                    6942,
                    4779,
                    6702,
                    4783,
                    6576,
                    6577,
                    4786,
                    6845,
                    4799,
                    4800,
                    6847,
                    4802,
                    4803,
                    4804,
                    4805,
                    6603,
                    6604,
                    6739,
                    6749,
                    6750,
                    6752,
                    6753,
                    6756,
                    6758,
                    6759,
                    6768,
                    6770,
                    6780,
                    6782
                ],
                "mcolors.LogNorm": [
                    4785,
                    4788
                ],
                "norm.vmin": [
                    4796
                ],
                "norm.vmax": [
                    4796
                ],
                "norm.autoscale": [
                    4797
                ],
                "minimum": [
                    4801,
                    4803
                ],
                "maximum": [
                    4801,
                    4803
                ],
                "np.sort": [
                    4804
                ],
                "bins.searchsorted": [
                    4805
                ],
                "collection.set_alpha": [
                    4810,
                    6123,
                    5909
                ],
                "ind": [
                    4834,
                    5383,
                    5384,
                    5385,
                    5386,
                    5195,
                    5196,
                    5197,
                    5198,
                    5392,
                    5204,
                    4831
                ],
                "clip": [
                    4831
                ],
                "coarse.searchsorted": [
                    4831
                ],
                "coarse": [
                    4832,
                    4833,
                    4842,
                    4875,
                    4844,
                    4876,
                    4848,
                    4849,
                    4850,
                    4880,
                    4852,
                    4881,
                    4882,
                    4884,
                    4831
                ],
                "mus": [
                    4832,
                    4840,
                    4839
                ],
                "mu": [
                    4836,
                    4838,
                    4839
                ],
                "np.linspace": [
                    4842,
                    4875
                ],
                "xcoarse": [
                    4844,
                    4845,
                    4847
                ],
                "coarse_bin": [
                    4844,
                    4876
                ],
                "valid": [
                    4877,
                    4845,
                    4854,
                    4885
                ],
                "values": [
                    4896,
                    4868,
                    4878,
                    4846,
                    4889,
                    4891,
                    4861,
                    4863
                ],
                "val": [
                    4889,
                    4879,
                    4861,
                    4847
                ],
                "enumerate": [
                    4879,
                    4847
                ],
                "thismin": [
                    4848,
                    4880,
                    4852,
                    4884,
                    4887,
                    4888,
                    4857,
                    4858
                ],
                "thismax": [
                    4850,
                    4882,
                    4852,
                    4884,
                    4887,
                    4888,
                    4859,
                    4860
                ],
                "np.diff": [
                    6277,
                    6278,
                    6702,
                    4852,
                    4884,
                    6680,
                    6686
                ],
                "verts.append": [
                    4857,
                    4887
                ],
                "values.append": [
                    4889,
                    4861
                ],
                "hbar": [
                    4866,
                    4868,
                    4869,
                    4870,
                    4871,
                    4872,
                    4873,
                    4903,
                    4907,
                    4908
                ],
                "hbar.set_array": [
                    4868
                ],
                "hbar.set_cmap": [
                    4907,
                    4869
                ],
                "hbar.set_norm": [
                    4870
                ],
                "hbar.set_alpha": [
                    4871
                ],
                "hbar.update": [
                    4872
                ],
                "ycoarse": [
                    4876,
                    4877,
                    4879
                ],
                "vbar": [
                    4896,
                    4897,
                    4898,
                    4899,
                    4900,
                    4901,
                    4904,
                    4909,
                    4910,
                    4895
                ],
                "vbar.set_array": [
                    4896
                ],
                "vbar.set_cmap": [
                    4897,
                    4909
                ],
                "vbar.set_norm": [
                    4898
                ],
                "vbar.set_alpha": [
                    4899
                ],
                "vbar.update": [
                    4900
                ],
                "collection.hbar": [
                    4903
                ],
                "collection.vbar": [
                    4904
                ],
                "collection.get_cmap": [
                    4907,
                    4909
                ],
                "hbar.set_clim": [
                    4908
                ],
                "collection.get_clim": [
                    4908,
                    4910
                ],
                "vbar.set_clim": [
                    4910
                ],
                "collection.callbacksSM.connect": [
                    4912
                ],
                "collection.callbacksSM": [
                    4912
                ],
                "on_changed": [
                    4912
                ],
                "mpatches.FancyArrow": [
                    4956
                ],
                "qk": [
                    4962,
                    4963,
                    4964
                ],
                "mquiver.QuiverKey": [
                    4960,
                    4962
                ],
                "mquiver": [
                    4960,
                    4962,
                    4999,
                    4982,
                    4987
                ],
                "Q": [
                    4962
                ],
                "X": [
                    5917,
                    5662,
                    5664,
                    5666,
                    5671,
                    5673,
                    5680,
                    5681,
                    5689,
                    5691,
                    5692,
                    5693,
                    5697,
                    7900,
                    5191,
                    7901,
                    5713,
                    7899,
                    5852,
                    5853,
                    6108,
                    6109,
                    5856,
                    5857,
                    4962,
                    6110,
                    6113,
                    6114,
                    5862,
                    5223,
                    5224,
                    5865,
                    5226,
                    5227,
                    5228,
                    5229,
                    6119,
                    5231,
                    5872,
                    5874,
                    5876,
                    5878,
                    5630
                ],
                "Y": [
                    5380,
                    5662,
                    5918,
                    5664,
                    5666,
                    5411,
                    5412,
                    5414,
                    5415,
                    5416,
                    5417,
                    5671,
                    5419,
                    5673,
                    5682,
                    5683,
                    5690,
                    5694,
                    5695,
                    5696,
                    5697,
                    5713,
                    5852,
                    6108,
                    6111,
                    5856,
                    6113,
                    4962,
                    5858,
                    6115,
                    5863,
                    6119,
                    5865,
                    5873,
                    5875,
                    5877,
                    5879
                ],
                "U": [
                    4962
                ],
                "kw": [
                    4962,
                    4997,
                    4999,
                    4970,
                    7795,
                    4980,
                    4982,
                    7799
                ],
                "docstring.copy": [
                    4960
                ],
                "mquiver.QuiverKey.__init__": [
                    4960
                ],
                "self._quiver_units": [
                    4980,
                    4997
                ],
                "q": [
                    8096,
                    8097,
                    8094,
                    4982,
                    4984,
                    4986,
                    8059,
                    8060,
                    8062,
                    8095
                ],
                "mquiver.Quiver": [
                    4987,
                    4982
                ],
                "quiver.__doc__": [
                    4987
                ],
                "quiver": [
                    4987
                ],
                "mquiver.Quiver.quiver_doc": [
                    4987
                ],
                "mquiver.Barbs": [
                    4999
                ],
                "poly": [
                    5053,
                    5054
                ],
                "mcoll.Collection": [
                    5144,
                    5333
                ],
                "ma.masked_invalid": [
                    5344,
                    5345,
                    5154,
                    5155,
                    5156,
                    5343
                ],
                "ma": [
                    5154,
                    5155,
                    5156,
                    5343,
                    5344,
                    5345,
                    5861,
                    5862,
                    5863,
                    5865,
                    5869,
                    5872,
                    5873,
                    5874,
                    5875,
                    5876,
                    5877,
                    5878,
                    5879,
                    5885
                ],
                "name": [
                    5160,
                    5347,
                    5349,
                    5158
                ],
                "array": [
                    5347,
                    5348,
                    5158,
                    5159
                ],
                "array.ndim": [
                    5348,
                    5159
                ],
                "where.size": [
                    5356,
                    5167
                ],
                "functools.reduce": [
                    5362,
                    5173
                ],
                "functools": [
                    5362,
                    5173
                ],
                "np.logical_or": [
                    5362,
                    5173
                ],
                "map": [
                    5363,
                    5174
                ],
                "np.ma.getmask": [
                    5363,
                    5174
                ],
                "polys": [
                    5419,
                    5421,
                    5231,
                    5233,
                    5367,
                    5178
                ],
                "ind0": [
                    5368,
                    5402,
                    5371,
                    5182,
                    5369,
                    5370,
                    5179,
                    5180,
                    5181,
                    5214
                ],
                "ind1": [
                    5371,
                    5403,
                    5368,
                    5369,
                    5370,
                    5179,
                    5180,
                    5181,
                    5182,
                    5215
                ],
                "cbook.contiguous_regions": [
                    5368,
                    5179
                ],
                "xslice": [
                    5185,
                    5187,
                    5220,
                    5221,
                    5190,
                    5226,
                    5228,
                    5180
                ],
                "y1slice": [
                    5185,
                    5227,
                    5181
                ],
                "y2slice": [
                    5185,
                    5220,
                    5221,
                    5229,
                    5182
                ],
                "step": [
                    5184,
                    7165,
                    7062,
                    7063,
                    7167,
                    5372,
                    5373,
                    5183
                ],
                "step_func": [
                    5184,
                    5185,
                    5373,
                    5374
                ],
                "cbook.STEP_LOOKUP_MAP": [
                    5184,
                    5373
                ],
                "interpolate": [
                    5193,
                    5381
                ],
                "im1": [
                    5383,
                    5384,
                    5385,
                    5386,
                    5195,
                    5196,
                    5197,
                    5198,
                    5390,
                    5202
                ],
                "x_values": [
                    5208,
                    5209,
                    5210,
                    5196
                ],
                "diff_values": [
                    5385,
                    5388,
                    5197,
                    5389,
                    5391,
                    5200,
                    5201,
                    5394,
                    5203,
                    5396,
                    5206,
                    5208
                ],
                "y1_values": [
                    5211,
                    5198
                ],
                "np.ma.is_masked": [
                    5673,
                    5389,
                    5391,
                    5201,
                    5203
                ],
                "diff_order": [
                    5208,
                    5394,
                    5396,
                    5206
                ],
                "diff_values.argsort": [
                    5394,
                    5206
                ],
                "diff_root_x": [
                    5398,
                    5207,
                    5400,
                    5210,
                    5212
                ],
                "np.interp": [
                    5210,
                    5395,
                    5398,
                    5207
                ],
                "x_order": [
                    5209,
                    5210,
                    5211
                ],
                "x_values.argsort": [
                    5209
                ],
                "diff_root_y": [
                    5395,
                    5398,
                    5400,
                    5210,
                    5212
                ],
                "start": [
                    5408,
                    5411,
                    5220,
                    5223,
                    5402,
                    5214
                ],
                "get_interp_point": [
                    5402,
                    5403,
                    5214,
                    5215
                ],
                "end": [
                    5409,
                    5412,
                    5221,
                    5224,
                    5403,
                    5215
                ],
                "polys.append": [
                    5419,
                    5231
                ],
                "XY1": [
                    5236,
                    5238
                ],
                "T": [
                    5928,
                    5424,
                    5425,
                    5236,
                    5237
                ],
                "XY2": [
                    5241,
                    5237
                ],
                "self.dataLim.update_from_data_xy": [
                    5241,
                    5426,
                    5429,
                    5238
                ],
                "self.ignore_existing_data_limits": [
                    5426,
                    5428,
                    5429,
                    5238,
                    5240,
                    5241
                ],
                "yslice": [
                    5376,
                    5408,
                    5409,
                    5379,
                    5415,
                    5417,
                    5369,
                    5374
                ],
                "x1slice": [
                    5414,
                    5370,
                    5374
                ],
                "x2slice": [
                    5408,
                    5409,
                    5416,
                    5371,
                    5374
                ],
                "y_values": [
                    5384,
                    5396,
                    5397,
                    5398
                ],
                "x1_values": [
                    5386,
                    5399
                ],
                "y_order": [
                    5397,
                    5398,
                    5399
                ],
                "y_values.argsort": [
                    5397
                ],
                "X1Y": [
                    5424,
                    5426
                ],
                "X2Y": [
                    5425,
                    5429
                ],
                "aspect": [
                    7745,
                    7716,
                    5623,
                    5624,
                    5625
                ],
                "im": [
                    5632,
                    7809,
                    5634,
                    5636,
                    5638,
                    5639,
                    5643,
                    5645,
                    5646,
                    6311,
                    6317,
                    6321,
                    6322,
                    7619,
                    7623,
                    7799,
                    5626,
                    5630,
                    5631
                ],
                "mimage.AxesImage": [
                    5626,
                    6311
                ],
                "mimage": [
                    5626,
                    6317,
                    6311
                ],
                "interpolation": [
                    5626
                ],
                "origin": [
                    5626,
                    7717
                ],
                "filternorm": [
                    5627
                ],
                "filterrad": [
                    5627
                ],
                "resample": [
                    5628
                ],
                "im.set_data": [
                    5630
                ],
                "im.set_alpha": [
                    5631
                ],
                "im.get_clip_path": [
                    5632
                ],
                "im.set_clip_path": [
                    5634
                ],
                "im.set_clim": [
                    5636
                ],
                "im.autoscale_None": [
                    5638
                ],
                "im.set_url": [
                    5639
                ],
                "url": [
                    5639
                ],
                "im.set_extent": [
                    5643
                ],
                "im.get_extent": [
                    5643
                ],
                "self.add_image": [
                    6321,
                    5645
                ],
                "nrows": [
                    5664,
                    5702,
                    5707,
                    5684,
                    5660,
                    5662
                ],
                "ncols": [
                    5664,
                    5702,
                    5707,
                    5684,
                    5660,
                    5662
                ],
                "C.shape": [
                    5705,
                    5710,
                    5684,
                    6297,
                    5660
                ],
                "allmatch": [
                    6106,
                    6108,
                    5701,
                    5661
                ],
                "np.meshgrid": [
                    5664,
                    5662
                ],
                "cbook.safe_masked_invalid": [
                    5712,
                    5665,
                    5671
                ],
                "funcname": [
                    5700,
                    5672,
                    5705,
                    5710,
                    5687
                ],
                "np.ma.core.MaskedArray": [
                    5680,
                    5682
                ],
                "np.ma.core": [
                    5680,
                    5682
                ],
                "X.data": [
                    5681
                ],
                "Y.data": [
                    5683
                ],
                "X.shape": [
                    5697,
                    6109,
                    5689,
                    5691,
                    5853
                ],
                "Ny": [
                    5702,
                    5853,
                    5705,
                    5885,
                    5707,
                    6120,
                    5710,
                    5711,
                    6109,
                    5690,
                    5693,
                    5695
                ],
                "Y.shape": [
                    5697,
                    5690,
                    5694
                ],
                "X.ndim": [
                    5691
                ],
                "X.reshape": [
                    5692
                ],
                "x.repeat": [
                    5693
                ],
                "Y.ndim": [
                    5694
                ],
                "Y.reshape": [
                    5695
                ],
                "y.repeat": [
                    5696
                ],
                "self._pcolorargs": [
                    6108,
                    5852
                ],
                "ma.asarray": [
                    5861,
                    5862,
                    5863
                ],
                "ma.getmaskarray": [
                    5865,
                    5869
                ],
                "xymask": [
                    5866,
                    5869
                ],
                "unmask": [
                    5871,
                    5872,
                    5873,
                    5874,
                    5875,
                    5876,
                    5877,
                    5878,
                    5879,
                    5885
                ],
                "X1": [
                    5872,
                    5882,
                    5880
                ],
                "ma.filled": [
                    5872,
                    5873,
                    5874,
                    5875,
                    5876,
                    5877,
                    5878,
                    5879,
                    5885
                ],
                "Y1": [
                    5873,
                    5882
                ],
                "X2": [
                    5882,
                    5874
                ],
                "Y2": [
                    5882,
                    5875
                ],
                "X3": [
                    5882,
                    5876
                ],
                "Y3": [
                    5882,
                    5877
                ],
                "X4": [
                    5882,
                    5878
                ],
                "Y4": [
                    5882,
                    5879
                ],
                "npoly": [
                    5880,
                    5883
                ],
                "np.stack": [
                    5882,
                    6293
                ],
                "xy.reshape": [
                    5883
                ],
                "ec": [
                    5894,
                    5902
                ],
                "self.grid": [
                    7468,
                    7056,
                    6130,
                    7161,
                    5915
                ],
                "X.compressed": [
                    5917
                ],
                "Y.compressed": [
                    5918
                ],
                "collection._transform": [
                    5921,
                    6133
                ],
                "mtransforms.Transform": [
                    5922,
                    6134
                ],
                "t._as_mpl_transform": [
                    6136,
                    5924
                ],
                "self.axes": [
                    6136,
                    5924
                ],
                "t.contains_branch_seperately": [
                    6138,
                    5926
                ],
                "trans_to_data": [
                    5929,
                    6139,
                    6140,
                    5927
                ],
                "pts": [
                    5928,
                    5929
                ],
                "T.astype": [
                    5928
                ],
                "np.vstack": [
                    5928
                ],
                "transformed_pts": [
                    5929,
                    5930,
                    5931
                ],
                "trans_to_data.transform": [
                    5929,
                    6140
                ],
                "collection.sticky_edges.x": [
                    6146,
                    5939
                ],
                "collection.sticky_edges": [
                    6147,
                    6146,
                    5939,
                    5940
                ],
                "collection.sticky_edges.y": [
                    6147,
                    5940
                ],
                "shading": [
                    6121,
                    6106,
                    6103
                ],
                "shading.lower": [
                    6103
                ],
                "X.ravel": [
                    6110
                ],
                "Y.ravel": [
                    6111
                ],
                "C.ravel": [
                    6118
                ],
                "coords": [
                    6144,
                    6145,
                    7900,
                    6119,
                    6120,
                    6293,
                    6140,
                    6301,
                    7902
                ],
                "mcoll.QuadMesh": [
                    6120,
                    6300
                ],
                "antialiased": [
                    6121
                ],
                "nr": [
                    7744,
                    6264,
                    6268,
                    6301,
                    7742
                ],
                "nc": [
                    6264,
                    6267,
                    6301,
                    7742,
                    7743
                ],
                "style": [
                    6275,
                    6310,
                    6281,
                    6283,
                    6316,
                    6285,
                    6291,
                    6266
                ],
                "y.ndim": [
                    6273,
                    6284
                ],
                "np.abs": [
                    6279,
                    6280,
                    7725,
                    7730,
                    7158,
                    7708
                ],
                "dx.mean": [
                    6279
                ],
                "dy.mean": [
                    6280
                ],
                "np.ndim": [
                    6296,
                    6326,
                    6294
                ],
                "qm_kwargs": [
                    6297,
                    6301,
                    6295
                ],
                "np.ma.reshape": [
                    6297
                ],
                "xl": [
                    6305,
                    6332,
                    6309,
                    6334
                ],
                "yb": [
                    6305,
                    6309,
                    6334,
                    6333
                ],
                "mimage.PcolorImage": [
                    6317
                ],
                "ret.set_clim": [
                    6325
                ],
                "ret.autoscale_None": [
                    6327
                ],
                "ret.get_clip_path": [
                    6328
                ],
                "ret.set_clip_path": [
                    6330
                ],
                "ret.sticky_edges.x": [
                    6332
                ],
                "ret.sticky_edges": [
                    6332,
                    6333
                ],
                "ret.sticky_edges.y": [
                    6333
                ],
                "contours": [
                    6349,
                    6351,
                    6341,
                    6343
                ],
                "mcontour.QuadContourSet": [
                    6344,
                    6352,
                    6341,
                    6349
                ],
                "mcontour": [
                    6341,
                    6344,
                    6349,
                    6352,
                    6356
                ],
                "contour.__doc__": [
                    6344
                ],
                "contour": [
                    6344
                ],
                "mcontour.QuadContourSet._contour_doc": [
                    6344,
                    6352
                ],
                "contourf.__doc__": [
                    6352
                ],
                "contourf": [
                    6352
                ],
                "CS.clabel": [
                    6355
                ],
                "CS": [
                    6355
                ],
                "clabel.__doc__": [
                    6356
                ],
                "clabel": [
                    6356
                ],
                "mcontour.ContourSet.clabel.__doc__": [
                    6356
                ],
                "mcontour.ContourSet.clabel": [
                    6356
                ],
                "mcontour.ContourSet": [
                    6356
                ],
                "bin_range": [
                    6658,
                    6660,
                    6600,
                    6601,
                    6570,
                    6635,
                    6647
                ],
                "histtype": [
                    6700,
                    6581,
                    6774,
                    6712,
                    6586,
                    6747,
                    6716
                ],
                "stacked": [
                    6663,
                    6735,
                    6675,
                    6707,
                    6778,
                    6743,
                    6712,
                    6586,
                    6587,
                    6716
                ],
                "input_empty": [
                    6652,
                    6590
                ],
                "np.size": [
                    8096,
                    8097,
                    6590
                ],
                "cbook._reshape_2D": [
                    6592,
                    6608
                ],
                "cbook.is_scalar_or_string": [
                    6603
                ],
                "weights": [
                    6608,
                    6943,
                    6653,
                    6607
                ],
                "wi": [
                    6616,
                    6615
                ],
                "self._get_lines.get_next_color": [
                    8041,
                    6621
                ],
                "error_message": [
                    6625,
                    6628
                ],
                "hist_kwargs": [
                    6664,
                    6672,
                    6660,
                    6630
                ],
                "np.inf": [
                    6636,
                    6637
                ],
                "np.nanmin": [
                    6642
                ],
                "np.nanmax": [
                    6643
                ],
                "_w": [
                    6656,
                    6658,
                    6654
                ],
                "np.histogram_bin_edges": [
                    6657
                ],
                "density": [
                    6662,
                    6663,
                    6664,
                    6679,
                    6685,
                    6943
                ],
                "tops": [
                    6688,
                    6667,
                    6732,
                    6673,
                    6674,
                    6706,
                    6676,
                    6680,
                    6777,
                    6845,
                    6686,
                    6847
                ],
                "m": [
                    6732,
                    6734,
                    6672,
                    6673,
                    6736,
                    6738,
                    6744,
                    6777,
                    6782,
                    6783
                ],
                "np.histogram": [
                    6672
                ],
                "tops.append": [
                    6673
                ],
                "tops.cumsum": [
                    6676
                ],
                "sum": [
                    6680
                ],
                "cumulative": [
                    6681,
                    6683
                ],
                "slc": [
                    6688,
                    6682,
                    6684,
                    6686
                ],
                "slice": [
                    6682,
                    6684
                ],
                "cumsum": [
                    6688,
                    6686
                ],
                "_saved_autoscalex": [
                    6820,
                    6695
                ],
                "self.get_autoscalex_on": [
                    6695
                ],
                "_saved_autoscaley": [
                    6696,
                    6821
                ],
                "self.get_autoscaley_on": [
                    6696
                ],
                "self.set_autoscalex_on": [
                    6697,
                    6820
                ],
                "self.set_autoscaley_on": [
                    6698,
                    6821
                ],
                "histtype.startswith": [
                    6747,
                    6700
                ],
                "totwidth": [
                    6721,
                    6723,
                    6702,
                    6713,
                    6715,
                    6717
                ],
                "rwidth": [
                    6704,
                    6705
                ],
                "dr": [
                    6705,
                    6708,
                    6710,
                    6713,
                    6715,
                    6717
                ],
                "dw": [
                    6745,
                    6714,
                    6718
                ],
                "boffset": [
                    6721,
                    6723,
                    6739,
                    6745,
                    6715,
                    6718
                ],
                "_barfunc": [
                    6729,
                    6739,
                    6726
                ],
                "self.barh": [
                    6726
                ],
                "bottom_kwarg": [
                    6730,
                    6741,
                    6727
                ],
                "fill": [
                    8033,
                    6799,
                    8050,
                    6806,
                    6774,
                    6808,
                    6809,
                    8029
                ],
                "xvals": [
                    6776,
                    6795,
                    6803,
                    6792
                ],
                "yvals": [
                    6776,
                    6793,
                    6803,
                    6796
                ],
                "xvals.append": [
                    6792,
                    6795
                ],
                "yvals.append": [
                    6793,
                    6796
                ],
                "split": [
                    6805,
                    6799
                ],
                "reversed": [
                    6803
                ],
                "self.fill": [
                    6804
                ],
                "patch.sticky_edges.y.append": [
                    6813
                ],
                "patch.sticky_edges.y": [
                    6813
                ],
                "patch.sticky_edges": [
                    6813,
                    6815
                ],
                "patch.sticky_edges.x.append": [
                    6815
                ],
                "patch.sticky_edges.x": [
                    6815
                ],
                "patches.reverse": [
                    6818
                ],
                "lab": [
                    6831
                ],
                "lbl": [
                    6833,
                    6837,
                    6838
                ],
                "itertools.zip_longest": [
                    6833
                ],
                "p.update": [
                    6841,
                    6836
                ],
                "p.set_label": [
                    6842,
                    6838
                ],
                "cbook.silent_list": [
                    6845,
                    6847
                ],
                "xedges": [
                    6950,
                    6954,
                    6942,
                    6951
                ],
                "yedges": [
                    6950,
                    6952,
                    6954,
                    6942
                ],
                "np.histogram2d": [
                    6942
                ],
                "cmin": [
                    8096,
                    6945,
                    6946,
                    8093
                ],
                "cmax": [
                    8097,
                    6947,
                    6948,
                    8093
                ],
                "pc": [
                    6954,
                    6950
                ],
                "self.pcolormesh": [
                    6950
                ],
                "h.T": [
                    6950
                ],
                "Fc": [
                    7040,
                    7041,
                    7046,
                    7577,
                    7578,
                    7324,
                    7325,
                    7329,
                    7463,
                    7617,
                    7243,
                    7244,
                    7248,
                    7395,
                    7396,
                    7400,
                    7149,
                    7150,
                    7156
                ],
                "pxx": [
                    7043,
                    7067,
                    7053,
                    7069
                ],
                "freqs": [
                    7043,
                    7171,
                    7173,
                    7046,
                    7053,
                    7067,
                    7069,
                    7327,
                    7329,
                    7331,
                    7460,
                    7335,
                    7463,
                    7465,
                    7593,
                    7470,
                    7617,
                    7618,
                    7623,
                    7246,
                    7248,
                    7259,
                    7263,
                    7398,
                    7400,
                    7402,
                    7406,
                    7152,
                    7156,
                    7158
                ],
                "mlab.psd": [
                    7043
                ],
                "NFFT": [
                    7043,
                    7460,
                    7593,
                    7152,
                    7575,
                    7576,
                    7614
                ],
                "Fs": [
                    7043,
                    7460,
                    7398,
                    7593,
                    7246,
                    7152,
                    7614,
                    7327
                ],
                "window": [
                    7044,
                    7461,
                    7398,
                    7594,
                    7246,
                    7153,
                    7327
                ],
                "noverlap": [
                    7044,
                    7461,
                    7595,
                    7153,
                    7579,
                    7580,
                    7614
                ],
                "pad_to": [
                    7328,
                    7044,
                    7399,
                    7595,
                    7247,
                    7153
                ],
                "sides": [
                    7328,
                    7045,
                    7399,
                    7596,
                    7247,
                    7154
                ],
                "scale_by_freq": [
                    7045,
                    7462,
                    7048,
                    7597,
                    7154
                ],
                "psd_units": [
                    7049,
                    7051,
                    7055
                ],
                "self.set_xlabel": [
                    7332,
                    7466,
                    7403,
                    7054,
                    7159,
                    7260
                ],
                "self.set_ylabel": [
                    7333,
                    7467,
                    7404,
                    7055,
                    7160,
                    7261
                ],
                "self.viewLim.intervaly": [
                    7057,
                    7162
                ],
                "self.viewLim": [
                    7057,
                    7162
                ],
                "intv": [
                    7058,
                    7059,
                    7164,
                    7165
                ],
                "logi": [
                    7059,
                    7060,
                    7061,
                    7062
                ],
                "ticks": [
                    7064,
                    7168,
                    7167,
                    7063
                ],
                "math.floor": [
                    7167,
                    7063
                ],
                "math.ceil": [
                    7167,
                    7063
                ],
                "return_line": [
                    7066,
                    7170
                ],
                "pxy": [
                    7152,
                    7171,
                    7173,
                    7158
                ],
                "mlab.csd": [
                    7152
                ],
                "spec": [
                    7331,
                    7398,
                    7335,
                    7623,
                    7593,
                    7402,
                    7246,
                    7406,
                    7601,
                    7604,
                    7606,
                    7255,
                    7257,
                    7263,
                    7327
                ],
                "mlab.magnitude_spectrum": [
                    7246
                ],
                "yunits": [
                    7250,
                    7261,
                    7254
                ],
                "scale": [
                    7585,
                    7587,
                    7589,
                    7590,
                    7600,
                    7602,
                    7253,
                    7608
                ],
                "Z": [
                    7707,
                    7619,
                    7719,
                    7720,
                    7799,
                    7601,
                    7729,
                    7730,
                    7604,
                    7794,
                    7606,
                    7255,
                    7704,
                    7257,
                    7610,
                    7259,
                    7708,
                    7742
                ],
                "mlab.angle_spectrum": [
                    7327
                ],
                "mlab.phase_spectrum": [
                    7398
                ],
                "mlab.window_hanning": [
                    7411
                ],
                "cxy": [
                    7465,
                    7460,
                    7470
                ],
                "mlab.cohere": [
                    7460
                ],
                "mode": [
                    7586,
                    7590,
                    7598,
                    7603,
                    7582
                ],
                "mlab.specgram": [
                    7593
                ],
                "np.flipud": [
                    7610
                ],
                "xextent": [
                    7616,
                    7612,
                    7615
                ],
                "pad_xextent": [
                    7614,
                    7615
                ],
                "self.imshow": [
                    7619,
                    7716,
                    7799
                ],
                "self.axis": [
                    7621
                ],
                "markersize": [
                    7734,
                    7735,
                    7704,
                    7706,
                    7740
                ],
                "precision": [
                    7721,
                    7730,
                    7708,
                    7725
                ],
                "mcolors.ListedColormap": [
                    7711
                ],
                "Z.tocoo": [
                    7720
                ],
                "c.row": [
                    7722,
                    7726
                ],
                "c.col": [
                    7723,
                    7727
                ],
                "nonzero": [
                    7725,
                    7726,
                    7727,
                    7730,
                    7731
                ],
                "c.data": [
                    7725
                ],
                "np.nonzero": [
                    7731
                ],
                "marks": [
                    7746,
                    7739,
                    7741
                ],
                "Z.shape": [
                    7742
                ],
                "self.title.set_y": [
                    7800,
                    7747
                ],
                "self.xaxis.tick_top": [
                    7801,
                    7748
                ],
                "self.xaxis.set_ticks_position": [
                    7802,
                    7749
                ],
                "self.xaxis.set_major_locator": [
                    7803,
                    7750
                ],
                "mticker.MaxNLocator": [
                    7753,
                    7806,
                    7803,
                    7750
                ],
                "self.yaxis.set_major_locator": [
                    7753,
                    7806
                ],
                "np.all": [
                    7899
                ],
                "kde": [
                    7901,
                    7902
                ],
                "mlab.GaussianKDE": [
                    7901
                ],
                "bw_method": [
                    7901
                ],
                "kde.evaluate": [
                    7902
                ],
                "vpstats": [
                    7904,
                    7906,
                    8007,
                    8045,
                    8093
                ],
                "cbook.violin_stats": [
                    7904
                ],
                "dataset": [
                    7904
                ],
                "_kde_method": [
                    7904
                ],
                "points": [
                    7904
                ],
                "quantiles": [
                    7905,
                    8002,
                    8099,
                    8087,
                    8062
                ],
                "self.violin": [
                    7906
                ],
                "showextrema": [
                    7908,
                    8071
                ],
                "showmedians": [
                    8080,
                    7908
                ],
                "pmins": [
                    8067,
                    8072,
                    8074,
                    8082,
                    8024,
                    8093
                ],
                "pmaxes": [
                    8067,
                    8072,
                    8074,
                    8083,
                    8025,
                    8093
                ],
                "self.fill_betweenx": [
                    8029
                ],
                "perp_lines": [
                    8034,
                    8067,
                    8099,
                    8072,
                    8074,
                    8081,
                    8030
                ],
                "par_lines": [
                    8035,
                    8076,
                    8031
                ],
                "self.fill_between": [
                    8033
                ],
                "fillcolor": [
                    8041,
                    8053,
                    8038
                ],
                "bodies": [
                    8050,
                    8044,
                    8063
                ],
                "vals.max": [
                    8049
                ],
                "means.append": [
                    8055
                ],
                "mins.append": [
                    8056
                ],
                "maxes.append": [
                    8057
                ],
                "medians.append": [
                    8058
                ],
                "quantiles.size": [
                    8087
                ],
                "ppmins": [
                    8096,
                    8090,
                    8099
                ],
                "ppmaxs": [
                    8097,
                    8099,
                    8092
                ],
                "table": [
                    8106
                ],
                "mtable.table": [
                    8106
                ],
                "mtable": [
                    8106
                ],
                "stackplot": [
                    8109
                ],
                "mstack.stackplot": [
                    8109
                ],
                "mstack": [
                    8109
                ],
                "streamplot": [
                    8111
                ],
                "mstream.streamplot": [
                    8112
                ],
                "mstream": [
                    8112
                ],
                "tricontour": [
                    8114
                ],
                "mtri.tricontour": [
                    8114
                ],
                "mtri": [
                    8114,
                    8115,
                    8116,
                    8117
                ],
                "tricontourf": [
                    8115
                ],
                "mtri.tricontourf": [
                    8115
                ],
                "tripcolor": [
                    8116
                ],
                "mtri.tripcolor": [
                    8116
                ],
                "triplot": [
                    8117
                ],
                "mtri.triplot": [
                    8117
                ]
            },
            "filtered_variables_in_file": {
                "_log": [
                    4241,
                    39
                ],
                "logging.getLogger": [
                    39
                ],
                "logging": [
                    39
                ],
                "_bounds": [
                    60,
                    55
                ],
                "mtransforms.Bbox.from_bounds": [
                    542,
                    55
                ],
                "mtransforms.Bbox": [
                    542,
                    55
                ],
                "mtransforms": [
                    5922,
                    4451,
                    4774,
                    4647,
                    4648,
                    752,
                    6134,
                    55,
                    61,
                    542,
                    63
                ],
                "bounds": [
                    431,
                    543,
                    510,
                    55
                ],
                "_trans": [
                    56,
                    61
                ],
                "trans": [
                    4864,
                    994,
                    4866,
                    1065,
                    4893,
                    1005,
                    824,
                    1054,
                    823,
                    56,
                    893,
                    894,
                    4895
                ],
                "_parent": [
                    57,
                    62
                ],
                "parent": [
                    57
                ],
                "bbox": [
                    60,
                    61
                ],
                "bb": [
                    64,
                    432,
                    434,
                    61,
                    63
                ],
                "mtransforms.TransformedBbox": [
                    61,
                    63
                ],
                "tr": [
                    62,
                    63
                ],
                "_parent.figure.transFigure.inverted": [
                    62
                ],
                "_parent.figure.transFigure": [
                    62
                ],
                "_parent.figure": [
                    62
                ],
                "inset_locator": [
                    432,
                    439,
                    66,
                    431
                ],
                "_AxesBase": [
                    73
                ],
                "cbook.deprecated": [
                    94
                ],
                "cbook": [
                    3456,
                    3331,
                    1672,
                    4619,
                    5902,
                    662,
                    2328,
                    5144,
                    5665,
                    5671,
                    3752,
                    4781,
                    174,
                    1198,
                    5168,
                    1329,
                    1330,
                    1331,
                    4273,
                    181,
                    6580,
                    6582,
                    6583,
                    2174,
                    5050,
                    5179,
                    5437,
                    3646,
                    2623,
                    5184,
                    4417,
                    5438,
                    2627,
                    4420,
                    6592,
                    6845,
                    6847,
                    6850,
                    6603,
                    3919,
                    5712,
                    6608,
                    7250,
                    5333,
                    2135,
                    2392,
                    94,
                    3934,
                    1120,
                    121,
                    7904,
                    739,
                    3172,
                    5357,
                    2803,
                    2933,
                    5368,
                    2169,
                    4219,
                    5373,
                    2302
                ],
                "titles": [
                    121,
                    171,
                    174,
                    118
                ],
                "self._left_title": [
                    171,
                    118
                ],
                "self": [
                    4096,
                    6149,
                    6150,
                    2060,
                    2063,
                    2067,
                    4123,
                    4124,
                    2137,
                    118,
                    119,
                    120,
                    6304,
                    6312,
                    171,
                    172,
                    173,
                    6318,
                    6321,
                    185,
                    6330,
                    6334,
                    6335,
                    197,
                    6341,
                    6342,
                    6349,
                    6350,
                    223,
                    224,
                    230,
                    257,
                    258,
                    2305,
                    272,
                    2343,
                    4391,
                    2345,
                    4392,
                    2347,
                    4393,
                    2349,
                    2353,
                    2355,
                    2356,
                    2358,
                    2359,
                    2361,
                    2362,
                    4410,
                    2364,
                    4412,
                    2372,
                    2375,
                    4448,
                    372,
                    4470,
                    4471,
                    4472,
                    377,
                    378,
                    379,
                    4476,
                    4473,
                    382,
                    2430,
                    4475,
                    2446,
                    2452,
                    2455,
                    427,
                    431,
                    434,
                    441,
                    6597,
                    6598,
                    6601,
                    6604,
                    6621,
                    504,
                    507,
                    515,
                    4617,
                    2572,
                    526,
                    528,
                    533,
                    537,
                    541,
                    6695,
                    6696,
                    6697,
                    6698,
                    2630,
                    6726,
                    6729,
                    2639,
                    2640,
                    593,
                    2643,
                    2646,
                    2647,
                    6763,
                    6765,
                    623,
                    625,
                    654,
                    656,
                    6804,
                    4757,
                    4762,
                    6820,
                    6821,
                    6822,
                    2741,
                    2742,
                    2743,
                    4819,
                    4820,
                    725,
                    4823,
                    745,
                    746,
                    2800,
                    754,
                    755,
                    2811,
                    2816,
                    4864,
                    2819,
                    2825,
                    4873,
                    4893,
                    4901,
                    6950,
                    6951,
                    6952,
                    815,
                    819,
                    820,
                    823,
                    825,
                    826,
                    4951,
                    4952,
                    4953,
                    4954,
                    4957,
                    4963,
                    4970,
                    4971,
                    4972,
                    2928,
                    4980,
                    885,
                    4982,
                    4984,
                    889,
                    890,
                    4985,
                    893,
                    895,
                    896,
                    4997,
                    4999,
                    2952,
                    5000,
                    5001,
                    7053,
                    7054,
                    7055,
                    7056,
                    7057,
                    7064,
                    944,
                    2993,
                    946,
                    948,
                    949,
                    950,
                    951,
                    953,
                    3003,
                    5052,
                    5054,
                    5055,
                    3021,
                    3039,
                    994,
                    997,
                    3046,
                    1000,
                    1001,
                    3048,
                    3050,
                    3052,
                    3053,
                    1006,
                    1007,
                    7158,
                    7159,
                    7160,
                    7161,
                    7162,
                    7168,
                    5147,
                    1054,
                    5150,
                    5151,
                    1057,
                    5154,
                    5155,
                    1060,
                    1061,
                    5156,
                    1066,
                    1067,
                    1108,
                    1109,
                    1110,
                    1111,
                    7259,
                    7260,
                    7261,
                    1130,
                    1141,
                    1142,
                    3189,
                    5238,
                    5240,
                    5241,
                    5243,
                    5244,
                    3211,
                    1184,
                    1187,
                    1188,
                    1189,
                    7331,
                    7332,
                    7333,
                    1208,
                    1218,
                    1219,
                    3285,
                    5336,
                    5339,
                    5340,
                    5343,
                    5344,
                    5345,
                    7402,
                    7403,
                    7404,
                    3354,
                    1308,
                    1313,
                    1314,
                    1315,
                    3364,
                    3366,
                    7465,
                    7466,
                    7467,
                    7468,
                    5426,
                    5428,
                    3381,
                    5429,
                    3383,
                    5431,
                    5432,
                    3403,
                    3413,
                    3415,
                    3430,
                    3432,
                    3444,
                    3446,
                    3452,
                    1409,
                    1431,
                    1432,
                    7619,
                    7621,
                    5625,
                    5626,
                    5634,
                    5645,
                    7716,
                    7741,
                    7743,
                    7744,
                    7745,
                    7747,
                    7748,
                    7749,
                    7750,
                    7753,
                    7799,
                    7800,
                    7801,
                    7802,
                    7803,
                    7806,
                    1673,
                    1675,
                    1676,
                    3741,
                    1743,
                    1745,
                    1747,
                    1749,
                    5852,
                    5856,
                    5857,
                    5858,
                    7906,
                    1802,
                    1803,
                    1805,
                    5915,
                    5924,
                    5926,
                    5927,
                    5933,
                    5942,
                    5943,
                    1853,
                    1854,
                    8029,
                    8030,
                    8031,
                    8033,
                    8034,
                    8035,
                    8041,
                    1901,
                    1902,
                    3965,
                    3971,
                    3981,
                    1967,
                    6108,
                    6113,
                    6114,
                    6115,
                    6130,
                    6136,
                    6138,
                    6139,
                    6142,
                    4095
                ],
                "self.title": [
                    7800,
                    7747,
                    172,
                    119
                ],
                "self._right_title": [
                    120,
                    173
                ],
                "title": [
                    122,
                    174,
                    121,
                    186,
                    187,
                    189,
                    190,
                    191
                ],
                "cbook._check_getitem": [
                    121,
                    7250,
                    174
                ],
                "loc.lower": [
                    121,
                    179,
                    174
                ],
                "loc": [
                    168,
                    169,
                    174,
                    179,
                    121
                ],
                "title.get_text": [
                    122
                ],
                "rcParams": [
                    2323,
                    5143,
                    169,
                    176,
                    177,
                    6577,
                    4403,
                    180,
                    4404,
                    6707,
                    184,
                    3642,
                    3644,
                    3649,
                    3651,
                    3268,
                    3653,
                    3655,
                    3657,
                    3018,
                    3659,
                    3914,
                    3661,
                    4427,
                    3663,
                    5332,
                    3925,
                    3926,
                    3927,
                    3928,
                    3929,
                    4438,
                    2780,
                    8037,
                    2796,
                    4208,
                    4209,
                    4469,
                    4214,
                    5624
                ],
                "default": [
                    187,
                    182,
                    175
                ],
                "titlecolor": [
                    180,
                    181,
                    182
                ],
                "cbook._str_lower_equal": [
                    181,
                    5902
                ],
                "pad": [
                    184,
                    185,
                    183
                ],
                "self._set_title_offset_trans": [
                    185
                ],
                "title.set_text": [
                    186
                ],
                "label": [
                    514,
                    2824,
                    2454,
                    2331,
                    2981,
                    6824,
                    6826,
                    6827,
                    428,
                    6828,
                    6829,
                    6831,
                    2994,
                    435,
                    1207,
                    186,
                    197,
                    198,
                    3021,
                    4962,
                    230,
                    231,
                    1129,
                    3192,
                    3451,
                    508
                ],
                "title.update": [
                    187,
                    189,
                    190
                ],
                "fontdict": [
                    224,
                    258,
                    719,
                    720,
                    727,
                    188,
                    189
                ],
                "kwargs": [
                    514,
                    4617,
                    2571,
                    2060,
                    2573,
                    2062,
                    2063,
                    2065,
                    2066,
                    2067,
                    5144,
                    5145,
                    5146,
                    5150,
                    7710,
                    7711,
                    1057,
                    7713,
                    7717,
                    1064,
                    7736,
                    7740,
                    2632,
                    593,
                    1108,
                    2645,
                    2136,
                    2137,
                    4184,
                    4185,
                    4186,
                    4188,
                    7259,
                    3172,
                    3175,
                    3176,
                    1131,
                    624,
                    5233,
                    3189,
                    7798,
                    3192,
                    3205,
                    1672,
                    1673,
                    3208,
                    3209,
                    655,
                    5628,
                    1184,
                    7331,
                    3238,
                    3239,
                    3240,
                    6315,
                    6320,
                    3251,
                    3252,
                    6836,
                    3255,
                    3256,
                    1209,
                    6841,
                    190,
                    6340,
                    6341,
                    4811,
                    6348,
                    6349,
                    3278,
                    3279,
                    1747,
                    6355,
                    5333,
                    5334,
                    5335,
                    728,
                    5339,
                    224,
                    5856,
                    7402,
                    751,
                    753,
                    2302,
                    2303,
                    5888,
                    5889,
                    258,
                    2306,
                    2307,
                    1797,
                    1798,
                    1799,
                    1800,
                    2311,
                    2312,
                    2313,
                    2316,
                    1805,
                    4872,
                    5894,
                    5900,
                    5901,
                    2322,
                    2323,
                    5902,
                    5903,
                    5905,
                    2327,
                    5907,
                    2330,
                    2331,
                    2332,
                    1310,
                    4900,
                    6950,
                    2343,
                    4391,
                    7465,
                    811,
                    2347,
                    5421,
                    1329,
                    1330,
                    819,
                    1331,
                    824,
                    1850,
                    1851,
                    4411,
                    1854,
                    4956,
                    4448,
                    4452,
                    1899,
                    1900,
                    1902,
                    881,
                    371,
                    374,
                    2424,
                    889,
                    377,
                    3964,
                    894,
                    1410,
                    3971,
                    3974,
                    3981,
                    7053,
                    3985,
                    937,
                    428,
                    942,
                    1967,
                    435,
                    5050,
                    5052,
                    5890,
                    7620,
                    6597,
                    5892,
                    5893,
                    6104,
                    6113,
                    997,
                    6122,
                    1004,
                    7158,
                    508
                ],
                "self.xaxis.get_label": [
                    197
                ],
                "self.xaxis": [
                    224,
                    2372,
                    197,
                    7748,
                    7749,
                    7750,
                    526,
                    2353,
                    7801,
                    7802,
                    7803,
                    223
                ],
                "label.get_text": [
                    198,
                    231
                ],
                "labelpad": [
                    256,
                    257,
                    222,
                    223
                ],
                "self.xaxis.labelpad": [
                    223
                ],
                "self.xaxis.set_label_text": [
                    224
                ],
                "xlabel": [
                    224
                ],
                "self.yaxis.get_label": [
                    230
                ],
                "self.yaxis": [
                    257,
                    258,
                    230,
                    2375,
                    7753,
                    528,
                    2359,
                    7806
                ],
                "self.yaxis.labelpad": [
                    257
                ],
                "self.yaxis.set_label_text": [
                    258
                ],
                "ylabel": [
                    258
                ],
                "handles": [
                    272,
                    377,
                    274,
                    371
                ],
                "labels": [
                    2944,
                    2947,
                    2981,
                    6825,
                    6827,
                    3647,
                    6829,
                    6831,
                    272,
                    6833,
                    274,
                    371,
                    377,
                    2943
                ],
                "mlegend._get_legend_handles_labels": [
                    272
                ],
                "mlegend": [
                    272,
                    377,
                    371
                ],
                "legend_handler_map": [
                    273
                ],
                "extra_args": [
                    371,
                    375
                ],
                "mlegend._parse_legend_args": [
                    371
                ],
                "args": [
                    3971,
                    4997,
                    4999,
                    1673,
                    3979,
                    3980,
                    1805,
                    5658,
                    5659,
                    5668,
                    5670,
                    5671,
                    2730,
                    2732,
                    2734,
                    2735,
                    2737,
                    2739,
                    5052,
                    2749,
                    1854,
                    6341,
                    2763,
                    6349,
                    6355,
                    2137,
                    2778,
                    5852,
                    6108,
                    4968,
                    4969,
                    4973,
                    1902,
                    751,
                    2415,
                    2416,
                    4974,
                    4980,
                    373,
                    4982,
                    6263,
                    6265,
                    6269,
                    6270
                ],
                "self.legend_": [
                    377,
                    378,
                    379,
                    382
                ],
                "mlegend.Legend": [
                    377
                ],
                "self.legend_._remove_method": [
                    378
                ],
                "self._remove_legend": [
                    378
                ],
                "docstring.dedent_interpd": [
                    5248,
                    4481,
                    899,
                    7176,
                    6154,
                    1680,
                    1809,
                    2192,
                    2577,
                    276,
                    1440,
                    2464,
                    7072,
                    7338,
                    6957,
                    7473,
                    4916,
                    5947,
                    956,
                    829,
                    1858,
                    5059,
                    7625,
                    1226,
                    595,
                    5716,
                    1754,
                    7266,
                    749,
                    7409,
                    3062,
                    760,
                    4991
                ],
                "docstring": [
                    5248,
                    4481,
                    899,
                    7176,
                    6154,
                    1680,
                    1809,
                    2192,
                    2577,
                    276,
                    1440,
                    2464,
                    7072,
                    7338,
                    6957,
                    7473,
                    4916,
                    5947,
                    956,
                    829,
                    1858,
                    5059,
                    7625,
                    1226,
                    595,
                    5716,
                    1754,
                    4960,
                    7266,
                    749,
                    7409,
                    3062,
                    760,
                    4991
                ],
                "transform": [
                    544,
                    514,
                    426,
                    427,
                    431,
                    506,
                    507
                ],
                "self.transAxes": [
                    427
                ],
                "kwargs.pop": [
                    5889,
                    2306,
                    2307,
                    1797,
                    5893,
                    1799,
                    2311,
                    2312,
                    2313,
                    3209,
                    5901,
                    2062,
                    2322,
                    2323,
                    2327,
                    2330,
                    2331,
                    2332,
                    428,
                    1850,
                    4184,
                    4185,
                    4186,
                    4188,
                    4448,
                    1899,
                    3192,
                    508,
                    2303
                ],
                "_make_inset_locator": [
                    431
                ],
                "inset_ax": [
                    519,
                    590,
                    591,
                    593,
                    434,
                    532,
                    439,
                    441,
                    443,
                    540
                ],
                "Axes": [
                    434
                ],
                "self.figure": [
                    434,
                    541
                ],
                "bb.bounds": [
                    434
                ],
                "zorder": [
                    514,
                    3908,
                    3749,
                    3909,
                    3916,
                    434,
                    534,
                    3930
                ],
                "inset_ax.set_axes_locator": [
                    439
                ],
                "self.add_child_axes": [
                    656,
                    441,
                    625
                ],
                "self.apply_aspect": [
                    504
                ],
                "self.transData": [
                    4448,
                    5926,
                    5927,
                    6139,
                    725,
                    533,
                    6138,
                    507
                ],
                "x": [
                    512,
                    6658,
                    4617,
                    4619,
                    6672,
                    530,
                    4628,
                    4631,
                    4634,
                    5150,
                    5154,
                    4643,
                    5158,
                    7723,
                    5167,
                    7727,
                    4659,
                    7731,
                    4662,
                    5174,
                    4664,
                    5176,
                    4666,
                    7739,
                    5180,
                    5692,
                    3646,
                    5693,
                    4675,
                    4676,
                    5196,
                    7246,
                    5202,
                    5204,
                    2137,
                    6749,
                    6752,
                    4705,
                    6753,
                    6768,
                    6770,
                    5236,
                    3189,
                    5237,
                    6267,
                    2174,
                    6270,
                    2176,
                    6271,
                    6273,
                    6274,
                    6277,
                    2182,
                    6793,
                    6795,
                    6284,
                    6803,
                    3221,
                    3222,
                    6293,
                    6805,
                    3229,
                    7327,
                    1184,
                    6305,
                    1187,
                    6309,
                    1191,
                    1192,
                    1198,
                    6318,
                    1200,
                    1201,
                    1202,
                    2736,
                    2739,
                    1205,
                    2742,
                    2741,
                    1211,
                    1212,
                    1213,
                    6652,
                    1747,
                    3284,
                    3291,
                    3292,
                    3293,
                    3294,
                    4828,
                    3296,
                    4831,
                    740,
                    742,
                    7398,
                    2794,
                    2810,
                    2816,
                    2819,
                    3347,
                    5917,
                    6942,
                    2339,
                    2340,
                    3363,
                    7460,
                    2343,
                    4391,
                    4392,
                    5928,
                    5930,
                    4397,
                    3374,
                    4399,
                    5935,
                    5936,
                    2354,
                    2355,
                    2356,
                    3380,
                    2358,
                    4406,
                    4411,
                    2366,
                    3391,
                    2368,
                    4416,
                    4417,
                    4419,
                    2373,
                    4421,
                    3401,
                    3411,
                    3414,
                    4951,
                    4440,
                    2396,
                    4956,
                    2398,
                    3423,
                    3428,
                    3431,
                    2409,
                    4969,
                    2411,
                    4970,
                    4971,
                    4973,
                    3440,
                    2931,
                    2932,
                    4470,
                    4472,
                    2937,
                    889,
                    890,
                    2939,
                    2941,
                    894,
                    2944,
                    2946,
                    2947,
                    7043,
                    2949,
                    2981,
                    2982,
                    2985,
                    7593,
                    2988,
                    6573,
                    6574,
                    1967,
                    3006,
                    6590,
                    6592,
                    6593,
                    6597,
                    6598,
                    3026,
                    6615,
                    6638,
                    7152,
                    2037,
                    2041,
                    2044,
                    510,
                    2047
                ],
                "y": [
                    512,
                    4617,
                    4619,
                    2572,
                    530,
                    4629,
                    4636,
                    4639,
                    4644,
                    7722,
                    7726,
                    7731,
                    4660,
                    4663,
                    4665,
                    4667,
                    7739,
                    5695,
                    5696,
                    4675,
                    4676,
                    1108,
                    1109,
                    1113,
                    1114,
                    2137,
                    6750,
                    1120,
                    1122,
                    1123,
                    1124,
                    6758,
                    1127,
                    6759,
                    1133,
                    1136,
                    1137,
                    3189,
                    6268,
                    6780,
                    6270,
                    6782,
                    6272,
                    6273,
                    6274,
                    6789,
                    6278,
                    6792,
                    6284,
                    6796,
                    6803,
                    6293,
                    6805,
                    3224,
                    3225,
                    3233,
                    6305,
                    6309,
                    6318,
                    2735,
                    2736,
                    2739,
                    5938,
                    2741,
                    2743,
                    1747,
                    3284,
                    5339,
                    5343,
                    4834,
                    5347,
                    740,
                    742,
                    2794,
                    5356,
                    5363,
                    5365,
                    5369,
                    2810,
                    2816,
                    5384,
                    5390,
                    5392,
                    3352,
                    2334,
                    5918,
                    2336,
                    2337,
                    3362,
                    6942,
                    7460,
                    3365,
                    4391,
                    5928,
                    4393,
                    2347,
                    5931,
                    3374,
                    4398,
                    4399,
                    5424,
                    5425,
                    819,
                    820,
                    3379,
                    3382,
                    5937,
                    824,
                    2360,
                    2361,
                    2362,
                    2364,
                    2366,
                    3391,
                    2368,
                    4416,
                    4417,
                    4419,
                    3396,
                    4421,
                    2376,
                    3412,
                    4440,
                    4952,
                    4956,
                    3423,
                    2401,
                    2404,
                    3429,
                    2406,
                    4969,
                    4970,
                    2412,
                    4972,
                    4973,
                    3440,
                    2982,
                    2986,
                    2988,
                    3007,
                    3027,
                    7152,
                    2038,
                    2042,
                    2044,
                    510,
                    2047
                ],
                "width": [
                    512,
                    2436,
                    2441,
                    2572,
                    530,
                    4009,
                    2347,
                    4019,
                    2356,
                    4020,
                    6713,
                    4026,
                    4027,
                    6714,
                    6717,
                    2366,
                    2368,
                    6739,
                    2396,
                    2399,
                    8045,
                    2415,
                    8049,
                    510
                ],
                "height": [
                    512,
                    2366,
                    2368,
                    2404,
                    2437,
                    2343,
                    2407,
                    2442,
                    2572,
                    2415,
                    6736,
                    530,
                    6738,
                    6739,
                    2362,
                    510
                ],
                "rectangle_patch": [
                    554,
                    515,
                    511
                ],
                "mpatches.Rectangle": [
                    2417,
                    511
                ],
                "mpatches": [
                    4956,
                    1064,
                    1004,
                    2988,
                    2417,
                    531,
                    3935,
                    3000,
                    3964,
                    2302,
                    511
                ],
                "facecolor": [
                    513
                ],
                "edgecolor": [
                    513,
                    2306,
                    8068,
                    8100,
                    8039,
                    8041,
                    8073,
                    8075,
                    8077,
                    2382,
                    2383,
                    2415,
                    2385,
                    2386,
                    8084,
                    535
                ],
                "alpha": [
                    513,
                    4449,
                    4899,
                    4871,
                    6313,
                    4810,
                    6123,
                    6319,
                    5909,
                    535,
                    6302,
                    5631
                ],
                "self.add_patch": [
                    515,
                    1066,
                    1006,
                    2993,
                    5054,
                    537,
                    3003,
                    2430
                ],
                "connects": [
                    549,
                    517,
                    550,
                    551,
                    552,
                    554,
                    536
                ],
                "xy_inset_ax": [
                    521,
                    532,
                    525
                ],
                "ex": [
                    2436,
                    2441,
                    525,
                    2446,
                    527,
                    530
                ],
                "ey": [
                    2437,
                    2442,
                    525,
                    2446,
                    529,
                    530
                ],
                "self.xaxis.get_inverted": [
                    526
                ],
                "self.yaxis.get_inverted": [
                    528
                ],
                "xy_data": [
                    530,
                    533
                ],
                "p": [
                    1064,
                    1065,
                    1066,
                    1004,
                    1005,
                    1006,
                    1068,
                    1008,
                    6840,
                    531,
                    6835,
                    6836,
                    6838,
                    6841,
                    536,
                    537,
                    6842
                ],
                "mpatches.ConnectionPatch": [
                    531
                ],
                "inset_ax.transAxes": [
                    532
                ],
                "connects.append": [
                    536
                ],
                "pos": [
                    4009,
                    4011,
                    8045,
                    4014,
                    4080,
                    4019,
                    4020,
                    8051,
                    4086,
                    8052,
                    4026,
                    4027,
                    540,
                    541
                ],
                "inset_ax.get_position": [
                    540
                ],
                "bboxins": [
                    545,
                    546,
                    547,
                    548,
                    541
                ],
                "pos.transformed": [
                    541
                ],
                "self.figure.transFigure": [
                    541
                ],
                "rectbbox": [
                    545,
                    546,
                    547,
                    548,
                    542
                ],
                "transformed": [
                    4434,
                    542
                ],
                "x0": [
                    545,
                    549,
                    550,
                    2182,
                    2354,
                    2356,
                    2358,
                    2169,
                    2171
                ],
                "rectbbox.x0": [
                    545
                ],
                "bboxins.x0": [
                    545
                ],
                "x1": [
                    5344,
                    546,
                    5347,
                    551,
                    552,
                    5385,
                    5386,
                    940,
                    942,
                    5390,
                    2640,
                    2641,
                    5392,
                    5363,
                    5424,
                    5365,
                    5370,
                    5339
                ],
                "rectbbox.x1": [
                    546
                ],
                "bboxins.x1": [
                    546
                ],
                "y0": [
                    547,
                    549,
                    551,
                    2360,
                    2362,
                    2364
                ],
                "rectbbox.y0": [
                    547
                ],
                "bboxins.y0": [
                    547
                ],
                "y1": [
                    5155,
                    548,
                    550,
                    5158,
                    552,
                    940,
                    5197,
                    942,
                    5198,
                    5202,
                    5204,
                    5236,
                    5174,
                    5176,
                    5181,
                    5150
                ],
                "rectbbox.y1": [
                    548
                ],
                "bboxins.y1": [
                    548
                ],
                "set_visible": [
                    552,
                    549,
                    550,
                    551
                ],
                "xlim": [
                    592,
                    590
                ],
                "inset_ax.get_xlim": [
                    590
                ],
                "ylim": [
                    592,
                    591
                ],
                "inset_ax.get_ylim": [
                    591
                ],
                "rect": [
                    592,
                    593
                ],
                "self.indicate_inset": [
                    593
                ],
                "location": [
                    654,
                    653,
                    622,
                    623
                ],
                "Number": [
                    6683,
                    3998,
                    653,
                    622
                ],
                "secondary_ax": [
                    654,
                    623,
                    656,
                    625,
                    626,
                    657
                ],
                "SecondaryAxis": [
                    654,
                    623
                ],
                "functions": [
                    655,
                    623
                ],
                "effective_kwargs": [
                    722,
                    743
                ],
                "withdash": [
                    738,
                    739
                ],
                "cbook.deprecation._deprecated_parameter": [
                    739
                ],
                "cbook.deprecation": [
                    739
                ],
                "t": [
                    5921,
                    5922,
                    5923,
                    5924,
                    5926,
                    5927,
                    7593,
                    7615,
                    7623,
                    3021,
                    3023,
                    3039,
                    3041,
                    740,
                    742,
                    743,
                    745,
                    746,
                    747,
                    6133,
                    6134,
                    6135,
                    6136,
                    6138,
                    6139
                ],
                "mtext.TextWithDash": [
                    740
                ],
                "mtext": [
                    740,
                    757,
                    742,
                    751
                ],
                "s": [
                    4416,
                    4417,
                    4419,
                    740,
                    4421,
                    742,
                    4423,
                    751,
                    4402,
                    4403,
                    3029,
                    4405,
                    3031,
                    4406,
                    3039
                ],
                "mtext.Text": [
                    742
                ],
                "t.update": [
                    743
                ],
                "t.set_clip_path": [
                    745
                ],
                "self.patch": [
                    5634,
                    745,
                    946,
                    754,
                    6330
                ],
                "self._add_text": [
                    746,
                    755
                ],
                "cbook._delete_parameter": [
                    5438,
                    4273,
                    5437,
                    662
                ],
                "a": [
                    4956,
                    5671,
                    3337,
                    2060,
                    3342,
                    751,
                    752,
                    754,
                    755,
                    756,
                    2067,
                    2069,
                    3317,
                    3318,
                    3321,
                    3324,
                    4957,
                    4958
                ],
                "mtext.Annotation": [
                    757,
                    751
                ],
                "xy": [
                    5882,
                    5883,
                    751
                ],
                "a.set_transform": [
                    752
                ],
                "mtransforms.IdentityTransform": [
                    752,
                    4451,
                    4774
                ],
                "a.set_clip_path": [
                    754
                ],
                "annotate.__doc__": [
                    757
                ],
                "annotate": [
                    757
                ],
                "mtext.Annotation.__init__.__doc__": [
                    757
                ],
                "mtext.Annotation.__init__": [
                    757
                ],
                "ymin": [
                    4740,
                    4875,
                    4760,
                    1184,
                    1057,
                    4641,
                    1188,
                    1061,
                    4644,
                    1063,
                    4648,
                    1193,
                    1194,
                    1198,
                    815,
                    4656,
                    1201,
                    821,
                    1205,
                    4663,
                    1214,
                    1215,
                    4818,
                    997,
                    1001,
                    1003,
                    894
                ],
                "ymax": [
                    4875,
                    4761,
                    1184,
                    1057,
                    4641,
                    4644,
                    1061,
                    1189,
                    1063,
                    4648,
                    1195,
                    1196,
                    1198,
                    815,
                    4656,
                    1202,
                    821,
                    1205,
                    1214,
                    1215,
                    4818,
                    997,
                    1001,
                    1003,
                    894
                ],
                "self.get_ybound": [
                    815
                ],
                "self._process_unit_info": [
                    4617,
                    1308,
                    5150,
                    5151,
                    1184,
                    1057,
                    2343,
                    4391,
                    2347,
                    819,
                    2741,
                    6597,
                    2630,
                    1108,
                    5339,
                    5340,
                    5856,
                    6113,
                    997,
                    4970,
                    3189,
                    889
                ],
                "yy": [
                    820,
                    821
                ],
                "self.convert_yunits": [
                    1314,
                    1315,
                    1188,
                    1061,
                    1189,
                    5155,
                    5156,
                    4393,
                    820,
                    2743,
                    2361,
                    2362,
                    2364,
                    2643,
                    1109,
                    4952,
                    4954,
                    5343,
                    5858,
                    6115,
                    1001,
                    4972
                ],
                "scaley": [
                    826,
                    1676,
                    821
                ],
                "self.get_yaxis_transform": [
                    994,
                    4893,
                    823
                ],
                "l": [
                    897,
                    2436,
                    2441,
                    1805,
                    1806,
                    894,
                    824,
                    825,
                    827,
                    1854,
                    1855,
                    1902,
                    1904,
                    2416,
                    2418,
                    3443,
                    3444,
                    2811,
                    2429,
                    2814,
                    895
                ],
                "mlines.Line2D": [
                    1672,
                    3356,
                    3358,
                    3371,
                    3375,
                    824,
                    5050,
                    7739,
                    3388,
                    3392,
                    3909,
                    3405,
                    3407,
                    3919,
                    3284,
                    3420,
                    3424,
                    3172,
                    3437,
                    3441,
                    894
                ],
                "mlines": [
                    1672,
                    3356,
                    3358,
                    3367,
                    3369,
                    3371,
                    942,
                    3375,
                    3384,
                    824,
                    3386,
                    5050,
                    3388,
                    7739,
                    3392,
                    3909,
                    3405,
                    3407,
                    3919,
                    3284,
                    3416,
                    3418,
                    3420,
                    3424,
                    3172,
                    3433,
                    3435,
                    3437,
                    3441,
                    894
                ],
                "xmin": [
                    4739,
                    4755,
                    1057,
                    4641,
                    4643,
                    1060,
                    1063,
                    4647,
                    4652,
                    4653,
                    4655,
                    4662,
                    824,
                    7616,
                    7618,
                    4818,
                    1108,
                    1110,
                    1115,
                    1116,
                    1120,
                    1123,
                    997,
                    1127,
                    1000,
                    4842,
                    1003,
                    6636,
                    1134,
                    1135,
                    6642,
                    885,
                    6646,
                    6647,
                    891
                ],
                "xmax": [
                    4756,
                    1057,
                    4641,
                    4643,
                    1060,
                    1063,
                    4647,
                    4652,
                    4654,
                    4655,
                    824,
                    7616,
                    7618,
                    4818,
                    1108,
                    1111,
                    1117,
                    1118,
                    1120,
                    1124,
                    997,
                    1127,
                    1000,
                    4842,
                    1003,
                    6637,
                    1134,
                    1135,
                    6643,
                    885,
                    6646,
                    6647,
                    891
                ],
                "self.add_line": [
                    1675,
                    3444,
                    3285,
                    825,
                    7741,
                    895
                ],
                "self._request_autoscale_view": [
                    896,
                    6150,
                    5001,
                    1676,
                    5244,
                    2452,
                    1432,
                    4123,
                    6822,
                    1067,
                    5943,
                    5432,
                    953,
                    826,
                    5055,
                    6335,
                    1219,
                    6342,
                    6350,
                    4820,
                    1749,
                    2647,
                    1007,
                    1142,
                    3446,
                    4985,
                    4476
                ],
                "self.get_xbound": [
                    885
                ],
                "xx": [
                    890,
                    891
                ],
                "self.convert_xunits": [
                    1313,
                    5154,
                    1187,
                    1060,
                    4392,
                    2355,
                    2356,
                    2358,
                    2742,
                    6598,
                    6601,
                    6604,
                    2639,
                    2640,
                    1110,
                    4951,
                    1111,
                    4953,
                    5344,
                    5345,
                    5857,
                    6114,
                    1000,
                    4971,
                    890
                ],
                "scalex": [
                    896,
                    891,
                    1676
                ],
                "self.get_xaxis_transform": [
                    4864,
                    893,
                    1054
                ],
                "xy1": [
                    940,
                    951
                ],
                "x2": [
                    5345,
                    5347,
                    5385,
                    941,
                    942,
                    5425,
                    5363,
                    5365,
                    5371,
                    5340
                ],
                "y2": [
                    5156,
                    5158,
                    941,
                    942,
                    5197,
                    5237,
                    5174,
                    5176,
                    5182,
                    5151
                ],
                "xy2": [
                    941,
                    951
                ],
                "line": [
                    7173,
                    1674,
                    1675,
                    7053,
                    942,
                    944,
                    945,
                    946,
                    947,
                    948,
                    949,
                    950,
                    7158,
                    954,
                    7259,
                    7069,
                    7263
                ],
                "mlines._AxLine": [
                    942
                ],
                "self._set_artist_props": [
                    944
                ],
                "line.get_clip_path": [
                    945
                ],
                "line.set_clip_path": [
                    946
                ],
                "line.get_label": [
                    947
                ],
                "line.set_label": [
                    948
                ],
                "self.lines": [
                    948,
                    949,
                    950
                ],
                "self.lines.append": [
                    949
                ],
                "line._remove_method": [
                    950
                ],
                "self.lines.remove": [
                    950
                ],
                "self.update_datalim": [
                    1218,
                    6149,
                    951,
                    4819,
                    1141,
                    5942,
                    1431,
                    6334
                ],
                "verts": [
                    4866,
                    4878,
                    5907,
                    4887,
                    4895,
                    5883,
                    1063,
                    1064,
                    1204,
                    1206,
                    1126,
                    1128,
                    1003,
                    1004,
                    4846,
                    3955,
                    3957,
                    3959,
                    4857,
                    3962,
                    3963
                ],
                "mpatches.Polygon": [
                    1064,
                    1004
                ],
                "p.set_transform": [
                    1065,
                    1005
                ],
                "np.iterable": [
                    2179,
                    4622,
                    3221,
                    3224,
                    3228,
                    3232,
                    1317,
                    1191,
                    1319,
                    1193,
                    1195,
                    6828,
                    1333,
                    1335,
                    1337,
                    1339,
                    1341,
                    4800,
                    1113,
                    1115,
                    1117
                ],
                "np": [
                    6144,
                    6145,
                    6657,
                    6658,
                    2056,
                    4622,
                    6672,
                    6674,
                    4115,
                    4628,
                    4629,
                    4631,
                    6680,
                    4634,
                    5659,
                    4636,
                    7707,
                    5662,
                    4639,
                    5664,
                    6686,
                    7708,
                    4643,
                    4644,
                    5670,
                    5673,
                    7725,
                    5166,
                    6702,
                    5680,
                    6705,
                    5682,
                    7729,
                    7730,
                    5173,
                    5174,
                    7731,
                    4664,
                    4665,
                    4666,
                    4667,
                    5176,
                    4679,
                    4680,
                    5191,
                    4683,
                    4684,
                    4686,
                    2639,
                    4687,
                    4688,
                    4689,
                    5201,
                    5203,
                    6734,
                    5207,
                    4696,
                    1113,
                    5210,
                    1115,
                    4700,
                    1117,
                    6749,
                    6750,
                    7257,
                    1122,
                    1123,
                    1124,
                    6756,
                    2151,
                    4719,
                    7794,
                    5236,
                    5237,
                    4726,
                    4728,
                    6264,
                    4730,
                    4732,
                    4733,
                    4734,
                    4735,
                    4736,
                    6271,
                    6272,
                    2179,
                    3716,
                    3717,
                    4230,
                    6277,
                    6278,
                    4745,
                    6279,
                    6280,
                    3726,
                    4752,
                    3221,
                    6293,
                    6294,
                    3224,
                    6295,
                    6296,
                    6297,
                    3228,
                    3232,
                    1191,
                    1193,
                    1195,
                    6828,
                    1200,
                    1201,
                    1202,
                    2736,
                    6326,
                    6334,
                    4800,
                    4803,
                    4804,
                    3291,
                    3292,
                    3293,
                    3294,
                    4828,
                    3296,
                    4832,
                    7167,
                    7899,
                    4838,
                    4842,
                    5355,
                    4845,
                    5362,
                    5363,
                    4852,
                    5365,
                    5882,
                    3324,
                    3325,
                    4863,
                    2819,
                    5380,
                    4875,
                    4877,
                    5389,
                    5391,
                    5395,
                    4884,
                    5398,
                    4891,
                    6942,
                    1317,
                    1319,
                    1320,
                    5928,
                    1322,
                    4397,
                    4398,
                    5935,
                    5424,
                    5425,
                    5936,
                    2355,
                    5937,
                    1333,
                    4405,
                    1335,
                    5938,
                    1337,
                    2361,
                    1339,
                    1341,
                    2366,
                    4415,
                    1344,
                    1345,
                    1346,
                    2368,
                    8002,
                    2378,
                    8018,
                    4440,
                    1369,
                    8024,
                    1371,
                    8025,
                    1373,
                    1375,
                    8048,
                    2931,
                    3955,
                    2937,
                    8062,
                    4486,
                    1415,
                    1420,
                    1421,
                    7053,
                    7059,
                    7063,
                    2458,
                    8090,
                    8092,
                    3997,
                    8096,
                    8097,
                    4003,
                    4004,
                    2984,
                    6573,
                    4014,
                    4015,
                    4016,
                    7604,
                    4021,
                    4022,
                    4023,
                    7606,
                    7610,
                    6590,
                    7615,
                    3013,
                    6119,
                    6636,
                    6637,
                    6642,
                    6643,
                    4086,
                    6646,
                    7158,
                    2041,
                    2042,
                    2044,
                    7165,
                    6654,
                    2047
                ],
                "cbook.delete_masked_points": [
                    1120,
                    4619,
                    1198
                ],
                "np.ravel": [
                    1200,
                    1122,
                    3716
                ],
                "np.resize": [
                    1201,
                    1202,
                    1123,
                    1124
                ],
                "y.shape": [
                    1123,
                    1124
                ],
                "thisxmin": [
                    1126,
                    1127
                ],
                "thisy": [
                    3307,
                    1126,
                    1127
                ],
                "thisxmax": [
                    1126,
                    1127
                ],
                "lines": [
                    7331,
                    1221,
                    7335,
                    1128,
                    1673,
                    1130,
                    1131,
                    1674,
                    1677,
                    7402,
                    7406,
                    1206,
                    1144,
                    1209,
                    1208
                ],
                "mcoll.LineCollection": [
                    1128,
                    2797,
                    1206
                ],
                "mcoll": [
                    4769,
                    4866,
                    1128,
                    6120,
                    2797,
                    4442,
                    5421,
                    5233,
                    5907,
                    2645,
                    1206,
                    5333,
                    5144,
                    1402,
                    4763,
                    6300,
                    4895
                ],
                "colors": [
                    2951,
                    2954,
                    4251,
                    4261,
                    4264,
                    4266,
                    4267,
                    1329,
                    1206,
                    4409,
                    1339,
                    1340,
                    4414,
                    4419,
                    4421,
                    1356,
                    1357,
                    1361,
                    4444,
                    1376,
                    1377,
                    1378,
                    4454,
                    1128,
                    1391,
                    1401
                ],
                "linestyles": [
                    1379,
                    1380,
                    1129,
                    1394,
                    1331,
                    1207,
                    1401,
                    1341,
                    1342
                ],
                "self.add_collection": [
                    6304,
                    1409,
                    4901,
                    5000,
                    4873,
                    1130,
                    5243,
                    5933,
                    2800,
                    4984,
                    2646,
                    4823,
                    1208,
                    4475,
                    5431,
                    6142
                ],
                "lines.update": [
                    1209,
                    1131
                ],
                "minx": [
                    6144,
                    1217,
                    6146,
                    6148,
                    1134,
                    5935,
                    1139,
                    5939,
                    5941,
                    1212
                ],
                "xmin.min": [
                    1134
                ],
                "xmax.min": [
                    1134
                ],
                "maxx": [
                    1217,
                    6145,
                    6146,
                    6148,
                    1135,
                    5936,
                    1139,
                    5939,
                    5941,
                    1213
                ],
                "xmin.max": [
                    1135
                ],
                "xmax.max": [
                    1135
                ],
                "miny": [
                    6144,
                    1217,
                    6147,
                    6148,
                    1136,
                    5937,
                    1139,
                    5940,
                    5941,
                    1214
                ],
                "y.min": [
                    1136,
                    6305
                ],
                "maxy": [
                    1217,
                    6145,
                    6147,
                    6148,
                    1137,
                    5938,
                    1139,
                    5940,
                    5941,
                    1215
                ],
                "y.max": [
                    1137,
                    6305
                ],
                "corners": [
                    1217,
                    1218,
                    6148,
                    6149,
                    4818,
                    1139,
                    1428,
                    1141,
                    1430,
                    1431,
                    4819,
                    5941,
                    5942
                ],
                "_preprocess_data": [
                    4480,
                    3457,
                    7811,
                    7175,
                    6153,
                    2828,
                    1679,
                    2191,
                    2576,
                    7071,
                    7337,
                    6956,
                    4269,
                    1070,
                    8109,
                    7472,
                    1969,
                    8111,
                    5946,
                    5436,
                    6849,
                    5058,
                    6338,
                    1223,
                    6346,
                    5715,
                    6360,
                    2651,
                    7265,
                    7408,
                    4977,
                    1906,
                    3060,
                    1146,
                    4990,
                    5247
                ],
                "x.shape": [
                    1201,
                    1202
                ],
                "thisx": [
                    3306,
                    1204,
                    1205
                ],
                "thisymin": [
                    1204,
                    1205
                ],
                "thisymax": [
                    1204,
                    1205
                ],
                "x.min": [
                    6305,
                    1212
                ],
                "x.max": [
                    6305,
                    1213
                ],
                "ymin.min": [
                    1214
                ],
                "ymax.min": [
                    1214
                ],
                "ymin.max": [
                    1215
                ],
                "ymax.max": [
                    1215
                ],
                "positions": [
                    4097,
                    1413,
                    1415,
                    4104,
                    4105,
                    4106,
                    8076,
                    4115,
                    3992,
                    3993,
                    3994,
                    1308,
                    3741,
                    3997,
                    3998,
                    1313,
                    4003,
                    1317,
                    1318,
                    1319,
                    1320,
                    4009,
                    1322,
                    1324,
                    8012,
                    8013,
                    8014,
                    1368,
                    1369,
                    8024,
                    8025,
                    1373,
                    1375,
                    1378,
                    7906,
                    1380,
                    1382,
                    1385,
                    1388,
                    8045,
                    1391,
                    1394,
                    1400
                ],
                "lineoffsets": [
                    1344,
                    1314,
                    1348,
                    1349,
                    1382,
                    1400,
                    1353,
                    1355,
                    1423,
                    1424,
                    1333,
                    1334,
                    1368,
                    1369,
                    1370,
                    1371,
                    1309
                ],
                "linelengths": [
                    1345,
                    1315,
                    1400,
                    1350,
                    1351,
                    1385,
                    1373,
                    1423,
                    1424,
                    1335,
                    1336,
                    1372,
                    1309
                ],
                "position": [
                    1319,
                    1320,
                    4106,
                    4108,
                    1399,
                    1402
                ],
                "np.asanyarray": [
                    4230,
                    5670,
                    1320,
                    1322,
                    7794,
                    5659
                ],
                "cbook.local_over_kwdict": [
                    1329,
                    1330,
                    1331
                ],
                "linewidths": [
                    5890,
                    4748,
                    4749,
                    4766,
                    4772,
                    1330,
                    1337,
                    1338,
                    4416,
                    4417,
                    1346,
                    4419,
                    4421,
                    1352,
                    1354,
                    4438,
                    4446,
                    1374,
                    1375,
                    1388,
                    1400,
                    5887
                ],
                "np.asarray": [
                    1344,
                    1345,
                    1346,
                    6272,
                    8002,
                    8090,
                    2361,
                    5355,
                    5166,
                    2639,
                    7729,
                    2355,
                    2931,
                    2041,
                    2042,
                    7707,
                    8092,
                    6271
                ],
                "mcolors.to_rgba_array": [
                    4197,
                    2379,
                    1361,
                    2386,
                    4251,
                    6623
                ],
                "mcolors": [
                    4197,
                    2379,
                    7711,
                    1361,
                    2386,
                    4785,
                    4788,
                    4251,
                    6623
                ],
                "np.tile": [
                    4736,
                    1369,
                    1373,
                    4734,
                    1375
                ],
                "np.cumsum": [
                    1371
                ],
                "colls": [
                    1434,
                    1411,
                    1398
                ],
                "lineoffset": [
                    1404,
                    1399
                ],
                "linelength": [
                    1405,
                    1399
                ],
                "linewidth": [
                    2368,
                    1406,
                    2307,
                    2378,
                    2415,
                    1399,
                    2366
                ],
                "color": [
                    2304,
                    2305,
                    3712,
                    6803,
                    2303,
                    2379,
                    6732,
                    6620,
                    6621,
                    6623,
                    6624,
                    6627,
                    2415,
                    3711,
                    3701,
                    1399,
                    3706,
                    3710,
                    1407
                ],
                "linestyle": [
                    1408,
                    2753,
                    2755,
                    2758,
                    2795,
                    2796,
                    2797,
                    1399,
                    2812
                ],
                "coll": [
                    1409,
                    1402,
                    1411,
                    1410
                ],
                "mcoll.EventCollection": [
                    1402
                ],
                "orientation": [
                    2434,
                    2439,
                    6791,
                    1426,
                    1427,
                    2327,
                    2329,
                    6812,
                    6814,
                    2335,
                    2338,
                    2342,
                    2346,
                    6584,
                    2371,
                    6725,
                    2374,
                    2394,
                    2402,
                    6762,
                    2426,
                    1403,
                    2428
                ],
                "coll.update": [
                    1410
                ],
                "colls.append": [
                    1411
                ],
                "min_max": [
                    1418,
                    1419,
                    1415
                ],
                "np.min": [
                    6144,
                    4643,
                    2819,
                    4644,
                    1415,
                    1420,
                    5935,
                    5937,
                    7615
                ],
                "_p": [
                    1416,
                    1415
                ],
                "np.max": [
                    6145,
                    4643,
                    2819,
                    4644,
                    1415,
                    1421,
                    5936,
                    5938,
                    7615
                ],
                "mins": [
                    8074,
                    1419,
                    1420,
                    8076,
                    8056,
                    7999
                ],
                "maxes": [
                    8000,
                    8072,
                    1419,
                    8076,
                    1421,
                    8057
                ],
                "minpos": [
                    1428,
                    1420,
                    1430
                ],
                "maxpos": [
                    1428,
                    1421,
                    1430
                ],
                "minline": [
                    1428,
                    1430,
                    1423
                ],
                "maxline": [
                    1424,
                    1428,
                    1430
                ],
                "orientation.lower": [
                    1427
                ],
                "cbook.normalize_kwargs": [
                    3172,
                    1672,
                    3919,
                    5333,
                    5144,
                    2302,
                    5050,
                    3934
                ],
                "self._get_lines": [
                    1673,
                    8041,
                    3211,
                    6621
                ],
                "data": [
                    1673,
                    3338,
                    3340,
                    3342,
                    3343,
                    2137,
                    5052
                ],
                "xdate": [
                    1742
                ],
                "self.xaxis_date": [
                    1743
                ],
                "tz": [
                    1745,
                    1743
                ],
                "ydate": [
                    1744
                ],
                "self.yaxis_date": [
                    1745
                ],
                "ret": [
                    6336,
                    6306,
                    7746,
                    7716,
                    7756,
                    6322,
                    1747,
                    6325,
                    1751,
                    6328,
                    6327,
                    6330,
                    6332,
                    6333
                ],
                "self.plot": [
                    2816,
                    2819,
                    3971,
                    7331,
                    7465,
                    7259,
                    7402,
                    1805,
                    1902,
                    3981,
                    7053,
                    2067,
                    1747,
                    7158,
                    2137,
                    2811,
                    1854
                ],
                "fmt": [
                    3201,
                    1747,
                    3191,
                    3194,
                    3199
                ],
                "dx": [
                    2179,
                    2180,
                    1797,
                    2182,
                    6277,
                    2184,
                    6279,
                    1802,
                    2155,
                    2188,
                    2189,
                    4953,
                    4956
                ],
                "k": [
                    1797,
                    1798,
                    1799,
                    1800,
                    3175,
                    3914,
                    1899,
                    1900,
                    3915,
                    1850,
                    1851,
                    3197
                ],
                "dy": [
                    6278,
                    1799,
                    6280,
                    1803,
                    4954,
                    4956
                ],
                "self.set_xscale": [
                    1802,
                    6763,
                    2349,
                    4757,
                    1853
                ],
                "self.set_yscale": [
                    2345,
                    1803,
                    6765,
                    1901,
                    4762
                ],
                "d": [
                    3914,
                    1899,
                    3916,
                    1901,
                    3918,
                    3920,
                    1850,
                    1853
                ],
                "self.xcorr": [
                    1967
                ],
                "mlab.detrend_none": [
                    1970,
                    7410
                ],
                "mlab": [
                    7043,
                    7460,
                    7398,
                    7593,
                    7246,
                    7152,
                    1970,
                    7410,
                    7411,
                    7901,
                    7327
                ],
                "Nx": [
                    5696,
                    2050,
                    2052,
                    2054,
                    5702,
                    6120,
                    2057,
                    5705,
                    5707,
                    5885,
                    5710,
                    5711,
                    6109,
                    2037,
                    2038,
                    5689,
                    5692,
                    5853
                ],
                "detrend": [
                    7043,
                    7460,
                    7594,
                    7152,
                    2041,
                    2042
                ],
                "correls": [
                    2057,
                    2060,
                    2067,
                    2069,
                    2044,
                    2047
                ],
                "np.correlate": [
                    2044
                ],
                "normed": [
                    2046
                ],
                "np.sqrt": [
                    2047
                ],
                "np.dot": [
                    2047
                ],
                "maxlags": [
                    2049,
                    2050,
                    2052,
                    2056,
                    2057
                ],
                "lags": [
                    2056,
                    2067,
                    2060,
                    2069
                ],
                "np.arange": [
                    4736,
                    5664,
                    4803,
                    5662,
                    2056,
                    2736,
                    7063,
                    7167,
                    4733,
                    4734,
                    4735
                ],
                "usevlines": [
                    2059
                ],
                "self.vlines": [
                    8034,
                    3430,
                    3403,
                    2060,
                    3413,
                    8031
                ],
                "b": [
                    2437,
                    4999,
                    5000,
                    3337,
                    2442,
                    5002,
                    2063,
                    3343,
                    2068,
                    2069,
                    3306,
                    3307,
                    2416,
                    2418,
                    3317,
                    3319,
                    3321,
                    2427,
                    3325
                ],
                "self.axhline": [
                    2063
                ],
                "kwargs.setdefault": [
                    5890,
                    5894,
                    3176,
                    2571,
                    2065,
                    2066,
                    5905,
                    6104
                ],
                "cbook._check_in_list": [
                    6583,
                    2392,
                    6580,
                    6582,
                    2135,
                    2328
                ],
                "where": [
                    5368,
                    5352,
                    5353,
                    5163,
                    5164,
                    5355,
                    5166,
                    5167,
                    5356,
                    5424,
                    5362,
                    5425,
                    5236,
                    5173,
                    5237,
                    2135,
                    2136,
                    5179
                ],
                "xconv": [
                    2176,
                    2153,
                    2174,
                    2151
                ],
                "np.ndarray": [
                    2151
                ],
                "xconv.size": [
                    2153
                ],
                "convert": [
                    2155,
                    2188,
                    2182
                ],
                "cbook.safe_first_element": [
                    2627,
                    2169,
                    4219,
                    2174,
                    2623
                ],
                "delist": [
                    2178,
                    2181,
                    2183
                ],
                "ddx": [
                    2182
                ],
                "mpatches.Patch": [
                    2302
                ],
                "self._get_patches_for_fill.get_next_color": [
                    2305,
                    2952,
                    5336,
                    5147,
                    4412
                ],
                "self._get_patches_for_fill": [
                    2305,
                    2952,
                    4412,
                    5336,
                    5147,
                    5052
                ],
                "xerr": [
                    2433,
                    2311,
                    2447,
                    3346,
                    3347,
                    2357,
                    2358,
                    3449,
                    3227,
                    3228,
                    3229
                ],
                "yerr": [
                    3232,
                    2433,
                    3233,
                    3395,
                    3396,
                    2312,
                    2447,
                    3450,
                    2363,
                    2364,
                    3231
                ],
                "error_kw": [
                    2313,
                    2314,
                    2444,
                    2448,
                    2321,
                    2324,
                    2325
                ],
                "ezorder": [
                    2314,
                    2315,
                    2316,
                    2317,
                    2320,
                    2321
                ],
                "error_kw.pop": [
                    2314
                ],
                "kwargs.get": [
                    2316
                ],
                "error_kw.setdefault": [
                    2444,
                    2321,
                    2324,
                    2325
                ],
                "ecolor": [
                    3206,
                    3247,
                    3280,
                    3217,
                    2322,
                    3218,
                    2324
                ],
                "capsize": [
                    3422,
                    3267,
                    3268,
                    3269,
                    3270,
                    3404,
                    3373,
                    3439,
                    2323,
                    2325,
                    3355,
                    3390
                ],
                "log": [
                    2344,
                    6761,
                    2348,
                    6740,
                    2330
                ],
                "tick_labels": [
                    2460,
                    2457,
                    2458,
                    2332
                ],
                "bottom": [
                    2819,
                    2437,
                    2442,
                    2334,
                    6733,
                    6734,
                    6736,
                    6741,
                    6744,
                    2401,
                    6755,
                    2404,
                    6756,
                    6758,
                    2794,
                    2412,
                    2415,
                    2811,
                    6782,
                    6783
                ],
                "self._convert_dx": [
                    2640,
                    2356,
                    2358,
                    2362,
                    2364
                ],
                "np.broadcast_arrays": [
                    5176,
                    5365,
                    2366
                ],
                "np.atleast_1d": [
                    2368,
                    2378,
                    5365,
                    5176,
                    2937
                ],
                "tick_label_axis": [
                    2460,
                    2459,
                    2372,
                    2375
                ],
                "tick_label_position": [
                    2376,
                    2459,
                    2373
                ],
                "itertools.cycle": [
                    2378,
                    2379,
                    2386,
                    2954
                ],
                "itertools": [
                    2378,
                    2379,
                    2954,
                    2381,
                    2383,
                    2385,
                    2386,
                    6833,
                    2388
                ],
                "itertools.chain": [
                    2385,
                    2379
                ],
                "itertools.repeat": [
                    2388,
                    2381,
                    2383
                ],
                "align": [
                    6720,
                    6722,
                    2410,
                    2573,
                    6767,
                    6769,
                    6582,
                    2392,
                    2393
                ],
                "left": [
                    2436,
                    2409,
                    2441,
                    2411,
                    2572,
                    2415,
                    3347,
                    3380,
                    3382,
                    3353,
                    2396
                ],
                "x.dtype": [
                    2398
                ],
                "width.dtype": [
                    2399
                ],
                "e": [
                    2400,
                    2408,
                    3337,
                    3338,
                    3341,
                    3342,
                    3343,
                    2416,
                    2420
                ],
                "y.dtype": [
                    2406
                ],
                "height.dtype": [
                    2407
                ],
                "patches": [
                    5056,
                    6690,
                    6810,
                    6818,
                    6845,
                    2572,
                    2414,
                    2574,
                    6833,
                    6847,
                    6804,
                    2454,
                    6742,
                    2458,
                    5052,
                    5053,
                    2431
                ],
                "w": [
                    6672,
                    6615,
                    2436,
                    2441,
                    2988,
                    2416,
                    2992,
                    2418,
                    2993,
                    2994,
                    6608,
                    6610,
                    6612,
                    3000,
                    3001,
                    6654
                ],
                "h": [
                    6946,
                    6948,
                    2437,
                    6950,
                    2442,
                    6954,
                    2416,
                    2418,
                    6942
                ],
                "c": [
                    4230,
                    4236,
                    4237,
                    4240,
                    6803,
                    6807,
                    6808,
                    5145,
                    4251,
                    4254,
                    4259,
                    7720,
                    7722,
                    4267,
                    7723,
                    7725,
                    7726,
                    7727,
                    4409,
                    4411,
                    4415,
                    4419,
                    4421,
                    6732,
                    6741,
                    5334,
                    4190,
                    4455,
                    2416,
                    2419,
                    4211,
                    4212,
                    4213,
                    4217,
                    4218,
                    4219
                ],
                "lw": [
                    2416,
                    2421
                ],
                "r": [
                    2417,
                    2424,
                    2425,
                    2427,
                    2429,
                    2430,
                    2431
                ],
                "r.update": [
                    2424
                ],
                "_interpolation_steps": [
                    2425
                ],
                "r.get_path": [
                    2425
                ],
                "r.sticky_edges.y.append": [
                    2427
                ],
                "r.sticky_edges.y": [
                    2427
                ],
                "r.sticky_edges": [
                    2427,
                    2429
                ],
                "r.sticky_edges.x.append": [
                    2429
                ],
                "r.sticky_edges.x": [
                    2429
                ],
                "patches.append": [
                    6804,
                    6742,
                    2431
                ],
                "errorbar": [
                    2450,
                    2454,
                    2446
                ],
                "self.errorbar": [
                    2446
                ],
                "bar_container": [
                    2462,
                    2454,
                    2455
                ],
                "BarContainer": [
                    2454
                ],
                "self.add_container": [
                    2825,
                    2455
                ],
                "np.broadcast_to": [
                    2458,
                    3291,
                    3292,
                    3293,
                    3294
                ],
                "tick_label_axis.set_ticks": [
                    2459
                ],
                "tick_label_axis.set_ticklabels": [
                    2460
                ],
                "self.bar": [
                    6729,
                    2572
                ],
                "xranges": [
                    2634,
                    2622,
                    2623
                ],
                "xdata": [
                    2625,
                    2630,
                    2623
                ],
                "yrange": [
                    2626,
                    2627,
                    2643
                ],
                "ydata": [
                    2627,
                    2629,
                    2631
                ],
                "xranges_conv": [
                    2641,
                    2633,
                    2645
                ],
                "xr": [
                    6305,
                    6309,
                    2634,
                    2635,
                    2639,
                    2640,
                    6332,
                    6334
                ],
                "x_conv": [
                    2640,
                    2641,
                    2639
                ],
                "xranges_conv.append": [
                    2641
                ],
                "yrange_conv": [
                    2643,
                    2645
                ],
                "col": [
                    2649,
                    2645,
                    2646
                ],
                "mcoll.BrokenBarHCollection": [
                    2645
                ],
                "linefmt": [
                    2746,
                    2756,
                    2749,
                    2758
                ],
                "linecolor": [
                    2755,
                    2758,
                    2798,
                    2812,
                    2751
                ],
                "linemarker": [
                    2752,
                    2755,
                    2813,
                    2758
                ],
                "_process_plot_format": [
                    2756,
                    2788,
                    2758,
                    2790,
                    2770,
                    2773,
                    3701,
                    3199
                ],
                "markerfmt": [
                    2760,
                    2770,
                    2763,
                    2773
                ],
                "markercolor": [
                    2816,
                    2769,
                    2772,
                    2765
                ],
                "markermarker": [
                    2769,
                    2772,
                    2766,
                    2817
                ],
                "markerstyle": [
                    2816,
                    2769,
                    2772,
                    2767
                ],
                "basefmt": [
                    2778,
                    2788,
                    2790,
                    2775
                ],
                "basecolor": [
                    2787,
                    2820,
                    2790,
                    2781,
                    2783
                ],
                "basemarker": [
                    2784,
                    2787,
                    2821,
                    2790
                ],
                "basestyle": [
                    2785,
                    2787,
                    2820,
                    2790
                ],
                "use_line_collection": [
                    2793
                ],
                "stemlines": [
                    2823,
                    2794,
                    2797,
                    2800,
                    2809,
                    2814
                ],
                "xi": [
                    6598,
                    2794,
                    6638,
                    6639,
                    6642,
                    6643,
                    6615,
                    6616,
                    2810,
                    2811
                ],
                "yi": [
                    4834,
                    4835,
                    4836,
                    2794,
                    2810,
                    2811
                ],
                "cbook._warn_external": [
                    2803,
                    4781
                ],
                "stemlines.append": [
                    2814
                ],
                "markerline": [
                    2816,
                    2823
                ],
                "baseline": [
                    2819,
                    2823
                ],
                "stem_container": [
                    2825,
                    2826,
                    2823
                ],
                "StemContainer": [
                    2823
                ],
                "self.set_aspect": [
                    2928,
                    5625,
                    7745
                ],
                "np.float32": [
                    2931
                ],
                "x.ndim": [
                    6273,
                    2932,
                    6284
                ],
                "ndim": [
                    2932
                ],
                "x.squeeze": [
                    2937,
                    2932
                ],
                "cbook.warn_deprecated": [
                    5168,
                    5357,
                    3331,
                    2933
                ],
                "sx": [
                    4737,
                    4745,
                    4655,
                    4662,
                    2939,
                    2940,
                    2941
                ],
                "x.sum": [
                    2939
                ],
                "explode": [
                    2945,
                    2946,
                    2949,
                    2981
                ],
                "get_next_color": [
                    2952,
                    2990
                ],
                "color_cycle": [
                    2954,
                    2957
                ],
                "radius": [
                    2988,
                    2959,
                    2960,
                    3026,
                    3027,
                    3006,
                    3007
                ],
                "startangle": [
                    2963,
                    2966
                ],
                "theta1": [
                    3043,
                    2983,
                    2984,
                    2988,
                    2989,
                    2964,
                    2966
                ],
                "wedgeprops": [
                    2969,
                    2970,
                    2971,
                    2991
                ],
                "wedgeprops.setdefault": [
                    2971
                ],
                "textprops": [
                    3019,
                    2974,
                    2973,
                    3038,
                    2975
                ],
                "textprops.setdefault": [
                    2975
                ],
                "texts": [
                    3056,
                    2977,
                    3058,
                    3023
                ],
                "slices": [
                    2992,
                    2978,
                    3056,
                    3058
                ],
                "autotexts": [
                    3041,
                    3058,
                    2979
                ],
                "frac": [
                    3029,
                    3031,
                    2981,
                    2983
                ],
                "expl": [
                    2985,
                    2986,
                    2981
                ],
                "center": [
                    2982,
                    3048,
                    3049,
                    3050,
                    3051
                ],
                "theta2": [
                    3043,
                    2983,
                    2984,
                    2988,
                    2989
                ],
                "counterclock": [
                    2983
                ],
                "thetam": [
                    3013,
                    2984,
                    2985,
                    2986,
                    3026,
                    3027,
                    3006,
                    3007
                ],
                "np.pi": [
                    2984
                ],
                "math.cos": [
                    2985,
                    3026,
                    3006
                ],
                "math": [
                    2985,
                    2986,
                    3026,
                    3027,
                    4626,
                    7063,
                    7167,
                    3006,
                    3007
                ],
                "math.sin": [
                    2986,
                    3027,
                    3007
                ],
                "mpatches.Wedge": [
                    2988
                ],
                "slices.append": [
                    2992
                ],
                "w.set_label": [
                    2994
                ],
                "shadow": [
                    2996
                ],
                "shad": [
                    3000,
                    3001,
                    3002,
                    3003
                ],
                "mpatches.Shadow": [
                    3000
                ],
                "shad.set_zorder": [
                    3001
                ],
                "w.get_zorder": [
                    3001
                ],
                "shad.set_label": [
                    3002
                ],
                "labeldistance": [
                    3005,
                    3006,
                    3007
                ],
                "xt": [
                    3008,
                    3014,
                    3021,
                    3026,
                    3006,
                    3039
                ],
                "yt": [
                    6305,
                    3012,
                    6309,
                    3021,
                    3027,
                    3007,
                    6333,
                    6334,
                    3039
                ],
                "label_alignment_h": [
                    3008,
                    3015
                ],
                "label_alignment_v": [
                    3016,
                    3009,
                    3012
                ],
                "label_rotation": [
                    3017,
                    3010,
                    3013
                ],
                "rotatelabels": [
                    3011
                ],
                "np.rad2deg": [
                    3013
                ],
                "props": [
                    3015,
                    3019,
                    3021,
                    3036,
                    3038,
                    3039
                ],
                "props.update": [
                    3019,
                    3038
                ],
                "self.text": [
                    3021,
                    3039
                ],
                "texts.append": [
                    3023
                ],
                "autopct": [
                    3055,
                    3025,
                    3028,
                    3029,
                    3030,
                    3031
                ],
                "pctdistance": [
                    3026,
                    3027
                ],
                "autotexts.append": [
                    3041
                ],
                "frame": [
                    3045
                ],
                "self.set_frame_on": [
                    3046
                ],
                "self.set_xlim": [
                    3048,
                    7743,
                    6951
                ],
                "self.set_ylim": [
                    6952,
                    3050,
                    7744
                ],
                "self.set_xticks": [
                    3052
                ],
                "self.set_yticks": [
                    7064,
                    7168,
                    3053
                ],
                "v": [
                    3200,
                    3175,
                    3914,
                    3342,
                    3343,
                    3197
                ],
                "kwargs.items": [
                    3175
                ],
                "offset": [
                    3297,
                    3186,
                    3179,
                    3181
                ],
                "errorevery": [
                    3297,
                    3179,
                    3183
                ],
                "plot_line": [
                    3283,
                    3191
                ],
                "fmt.lower": [
                    3191
                ],
                "fmt_style_kwargs": [
                    3203,
                    3205,
                    3214,
                    3195,
                    3197
                ],
                "fmt_style_kwargs.pop": [
                    3203
                ],
                "base_style": [
                    3237,
                    3207,
                    3209,
                    3211,
                    3244,
                    3213,
                    3214,
                    3215,
                    3216,
                    3218,
                    3259
                ],
                "self._get_lines.prop_cycler": [
                    3211
                ],
                "base_style.update": [
                    3214
                ],
                "plot_line_style": [
                    3284,
                    3236
                ],
                "barsabove": [
                    3239
                ],
                "eb_lines_style": [
                    3264,
                    3364,
                    3430,
                    3403,
                    3244,
                    3245,
                    3246,
                    3247,
                    3250,
                    3252,
                    3381,
                    3413,
                    3256,
                    3354,
                    3262,
                    3263
                ],
                "eb_lines_style.pop": [
                    3264,
                    3245,
                    3246,
                    3262,
                    3263
                ],
                "elinewidth": [
                    3249,
                    3250
                ],
                "key": [
                    3276,
                    3278,
                    3279,
                    3254,
                    3255,
                    3256
                ],
                "eb_cap_style": [
                    3357,
                    3359,
                    3372,
                    3376,
                    3259,
                    3389,
                    3261,
                    3265,
                    3266,
                    3393,
                    3270,
                    3272,
                    3406,
                    3279,
                    3280,
                    3408,
                    3421,
                    3425,
                    3438,
                    3442
                ],
                "eb_cap_style.pop": [
                    3265,
                    3261
                ],
                "capthick": [
                    3272,
                    3271
                ],
                "data_line": [
                    3282,
                    3284,
                    3285,
                    3447
                ],
                "barcols": [
                    3364,
                    3430,
                    3403,
                    3381,
                    3413,
                    3287,
                    3448,
                    3354
                ],
                "caplines": [
                    3392,
                    3424,
                    3370,
                    3436,
                    3405,
                    3375,
                    3407,
                    3441,
                    3419,
                    3443,
                    3447,
                    3288,
                    3387,
                    3356,
                    3358
                ],
                "lolims": [
                    3399,
                    3410,
                    3411,
                    3412,
                    3414,
                    3291,
                    3423
                ],
                "astype": [
                    4667,
                    7900,
                    6119,
                    4664,
                    4665,
                    4666,
                    3291,
                    3292,
                    3293,
                    3294
                ],
                "uplims": [
                    3427,
                    3428,
                    3429,
                    3399,
                    3431,
                    3440,
                    3292
                ],
                "xlolims": [
                    3361,
                    3362,
                    3363,
                    3365,
                    3374,
                    3350,
                    3293
                ],
                "xuplims": [
                    3378,
                    3379,
                    3380,
                    3350,
                    3382,
                    3294,
                    3391
                ],
                "everymask": [
                    3352,
                    3353,
                    3362,
                    3363,
                    3365,
                    3374,
                    3379,
                    3380,
                    3382,
                    3391,
                    3401,
                    3402,
                    3411,
                    3412,
                    3414,
                    3423,
                    3296,
                    3297,
                    3428,
                    3429,
                    3431,
                    3440
                ],
                "np.zeros": [
                    3296,
                    4832,
                    5380,
                    6756,
                    4679,
                    4680,
                    5191,
                    6734,
                    4732,
                    6749,
                    6750
                ],
                "xs": [
                    3974,
                    3304,
                    3305,
                    3306,
                    3308,
                    3984,
                    3985,
                    3955,
                    3962
                ],
                "ys": [
                    3974,
                    3304,
                    3307,
                    3308,
                    3984,
                    3985,
                    3955,
                    3962
                ],
                "mask": [
                    7716,
                    3305,
                    5866,
                    3306,
                    3307,
                    5865,
                    5867,
                    5869,
                    5871,
                    7708
                ],
                "err": [
                    3321,
                    3317
                ],
                "a_sh": [
                    3330,
                    3324,
                    3326
                ],
                "np.shape": [
                    3717,
                    3726,
                    6264,
                    3324,
                    3325
                ],
                "b_sh": [
                    3330,
                    3325,
                    3327
                ],
                "low": [
                    3344,
                    3342
                ],
                "high": [
                    3344,
                    3343
                ],
                "right": [
                    3362,
                    3363,
                    3365,
                    3347,
                    3379,
                    3352,
                    3353
                ],
                "extract_err": [
                    3347,
                    3396
                ],
                "noxlims": [
                    3352,
                    3353,
                    3350,
                    3351
                ],
                "noxlims.any": [
                    3351
                ],
                "yo": [
                    3362,
                    3364,
                    3379,
                    3381,
                    3352,
                    3354,
                    3356,
                    3358
                ],
                "_": [
                    3362,
                    3428,
                    3401,
                    3379,
                    3411,
                    3701,
                    3352
                ],
                "xywhere": [
                    3352,
                    3353,
                    3362,
                    3363,
                    3365,
                    3374,
                    3379,
                    3380,
                    3382,
                    3391,
                    3401,
                    3402,
                    3411,
                    3412,
                    3414,
                    3423,
                    3428,
                    3429,
                    3431,
                    3440
                ],
                "lo": [
                    3363,
                    3364,
                    3429,
                    3430,
                    3402,
                    3403,
                    3405,
                    3380,
                    3381,
                    3412,
                    3413,
                    3353,
                    3354,
                    3356
                ],
                "ro": [
                    3363,
                    3364,
                    3380,
                    3381,
                    3353,
                    3354,
                    3358
                ],
                "barcols.append": [
                    3364,
                    3430,
                    3403,
                    3413,
                    3381,
                    3354
                ],
                "self.hlines": [
                    8035,
                    3364,
                    3381,
                    3354,
                    8030
                ],
                "caplines.append": [
                    3392,
                    3424,
                    3370,
                    3436,
                    3405,
                    3375,
                    3407,
                    3441,
                    3419,
                    3387,
                    3356,
                    3358
                ],
                "xlolims.any": [
                    3361
                ],
                "rightup": [
                    3371,
                    3365
                ],
                "yup": [
                    3392,
                    3365,
                    3371,
                    3440,
                    3441,
                    3391
                ],
                "self.xaxis_inverted": [
                    3366,
                    3383
                ],
                "marker": [
                    7704,
                    7705,
                    7706,
                    3367,
                    3369,
                    3371,
                    7732,
                    7733,
                    3384,
                    3386,
                    3388,
                    7740,
                    4426,
                    4427,
                    4429,
                    4430,
                    4432,
                    3416,
                    3418,
                    3420,
                    3433,
                    3435,
                    3437,
                    3701,
                    3703,
                    3704
                ],
                "mlines.CARETLEFTBASE": [
                    3386,
                    3367
                ],
                "mlines.CARETRIGHTBASE": [
                    3384,
                    3369
                ],
                "xlo": [
                    3424,
                    3431,
                    3437,
                    3374,
                    3375,
                    3423
                ],
                "ylo": [
                    3424,
                    3374,
                    3375,
                    3382,
                    3388,
                    3423
                ],
                "xuplims.any": [
                    3378
                ],
                "leftlo": [
                    3388,
                    3382
                ],
                "xup": [
                    3392,
                    3440,
                    3441,
                    3414,
                    3420,
                    3391
                ],
                "lower": [
                    3428,
                    3396,
                    3429,
                    3431,
                    3401,
                    3402,
                    3411
                ],
                "upper": [
                    3402,
                    3396,
                    3414,
                    3412
                ],
                "noylims": [
                    3400,
                    3401,
                    3402,
                    3399
                ],
                "noylims.any": [
                    3400
                ],
                "xo": [
                    3428,
                    3430,
                    3401,
                    3403,
                    3405,
                    3407,
                    3411,
                    3413
                ],
                "uo": [
                    3429,
                    3430,
                    3402,
                    3403,
                    3407,
                    3412,
                    3413
                ],
                "lolims.any": [
                    3410
                ],
                "upperup": [
                    3420,
                    3414
                ],
                "self.yaxis_inverted": [
                    3432,
                    3415
                ],
                "mlines.CARETDOWNBASE": [
                    3416,
                    3435
                ],
                "mlines.CARETUPBASE": [
                    3433,
                    3418
                ],
                "uplims.any": [
                    3427
                ],
                "lowerlo": [
                    3437,
                    3431
                ],
                "errorbar_container": [
                    3452,
                    3454,
                    3447
                ],
                "ErrorbarContainer": [
                    3447
                ],
                "self.containers.append": [
                    3452
                ],
                "self.containers": [
                    3452
                ],
                "whis": [
                    3641,
                    3642,
                    3646
                ],
                "bootstrap": [
                    3643,
                    3644,
                    3646
                ],
                "bxpstats": [
                    3716,
                    3717,
                    3721,
                    4009,
                    3726,
                    3730,
                    3988,
                    3741,
                    3646
                ],
                "cbook.boxplot_stats": [
                    3646
                ],
                "autorange": [
                    3647
                ],
                "notch": [
                    3648,
                    3649,
                    3743
                ],
                "vert": [
                    3969,
                    3650,
                    3651,
                    7906,
                    3742,
                    8028,
                    4094
                ],
                "patch_artist": [
                    3652,
                    3653,
                    3678,
                    4050,
                    3923,
                    3742
                ],
                "meanline": [
                    3747,
                    3654,
                    3655,
                    4073,
                    3948
                ],
                "showmeans": [
                    8066,
                    7907,
                    3656,
                    3657,
                    4072,
                    3743
                ],
                "showcaps": [
                    3744,
                    3658,
                    3659,
                    4064
                ],
                "showbox": [
                    3744,
                    4049,
                    3660,
                    3661
                ],
                "showfliers": [
                    3747,
                    3662,
                    3663,
                    3696,
                    4084
                ],
                "boxprops": [
                    3680,
                    3681,
                    3745,
                    3937,
                    3665,
                    3666,
                    3935,
                    3932,
                    3679
                ],
                "whiskerprops": [
                    3939,
                    3748,
                    3667,
                    3668
                ],
                "capprops": [
                    3941,
                    3748,
                    3669,
                    3670
                ],
                "medianprops": [
                    3672,
                    3945,
                    3746,
                    3671
                ],
                "meanprops": [
                    3746,
                    3947,
                    3950,
                    3673,
                    3674
                ],
                "flierprops": [
                    3712,
                    3745,
                    3943,
                    3694,
                    3704,
                    3675,
                    3676,
                    3710,
                    3711
                ],
                "boxprops.pop": [
                    3681
                ],
                "sym": [
                    3688,
                    3692,
                    3701
                ],
                "usermedians": [
                    3721,
                    3715,
                    3716,
                    3717
                ],
                "stats": [
                    3721,
                    3723,
                    3730,
                    3737,
                    3739,
                    8093,
                    8094,
                    4009,
                    4011,
                    4015,
                    4016,
                    4022,
                    4023,
                    4028,
                    4035,
                    4036,
                    4037,
                    4038,
                    4044,
                    4045,
                    8055,
                    4075,
                    8045,
                    4080,
                    8048,
                    8050,
                    4086,
                    4087,
                    8056,
                    8057,
                    8058,
                    8059
                ],
                "med": [
                    3721,
                    3722,
                    3723
                ],
                "conf_intervals": [
                    3730,
                    3725,
                    3726
                ],
                "err_mess": [
                    3728,
                    3727
                ],
                "ci": [
                    3730,
                    3731,
                    3732,
                    3736,
                    3737,
                    3738,
                    3739
                ],
                "artists": [
                    8067,
                    8099,
                    8005,
                    3750,
                    8102,
                    8072,
                    8074,
                    8076,
                    8081,
                    3741,
                    8063
                ],
                "self.bxp": [
                    3741
                ],
                "widths": [
                    4002,
                    4003,
                    4004,
                    4005,
                    4006,
                    7907,
                    4009,
                    8045,
                    8018,
                    8019,
                    8020,
                    8024,
                    8025,
                    3741
                ],
                "manage_ticks": [
                    4093,
                    3749
                ],
                "cbook._rename_parameter": [
                    3456,
                    6850,
                    3752
                ],
                "whiskers": [
                    4056,
                    3897,
                    4059,
                    4126
                ],
                "caps": [
                    4065,
                    3898,
                    4066,
                    4126
                ],
                "boxes": [
                    3899,
                    4053,
                    4051,
                    4126
                ],
                "medians": [
                    8001,
                    4069,
                    4106,
                    8081,
                    8058,
                    3900,
                    4127
                ],
                "means": [
                    8067,
                    4074,
                    4079,
                    8055,
                    3901,
                    7998,
                    4127
                ],
                "fliers": [
                    4089,
                    3902,
                    4127
                ],
                "datalabels": [
                    3905,
                    4011,
                    4121
                ],
                "mlines.Line2D.zorder": [
                    3909
                ],
                "zdelta": [
                    3945,
                    3947,
                    3916,
                    3911
                ],
                "k.split": [
                    3914
                ],
                "rcParams.items": [
                    3914
                ],
                "k.startswith": [
                    3915
                ],
                "subkey": [
                    3915
                ],
                "explicit": [
                    3917,
                    3919
                ],
                "d.update": [
                    3918
                ],
                "mlines.Line2D._alias_map": [
                    3919
                ],
                "final_boxprops": [
                    3937,
                    4051,
                    3924,
                    4053,
                    3933
                ],
                "final_boxprops.update": [
                    3933
                ],
                "mpatches.PathPatch._alias_map": [
                    3935
                ],
                "mpatches.PathPatch": [
                    3964,
                    3935
                ],
                "line_props_with_rcdefaults": [
                    3937,
                    3938,
                    3940,
                    3942,
                    3944,
                    3946
                ],
                "final_whiskerprops": [
                    4057,
                    3938,
                    4060
                ],
                "final_capprops": [
                    4065,
                    4066,
                    3940
                ],
                "final_flierprops": [
                    4090,
                    3942
                ],
                "final_medianprops": [
                    3944,
                    4069
                ],
                "final_meanprops": [
                    4080,
                    3946,
                    4076,
                    3951
                ],
                "removed_prop": [
                    3948,
                    3950,
                    3951
                ],
                "np.append": [
                    3955
                ],
                "np.column_stack": [
                    3955,
                    6119
                ],
                "codes": [
                    3962,
                    3963,
                    3956,
                    3959
                ],
                "mpath.Path.MOVETO": [
                    3956
                ],
                "mpath.Path": [
                    3963,
                    3956,
                    3957,
                    3958
                ],
                "mpath": [
                    3963,
                    3956,
                    3957,
                    3958
                ],
                "mpath.Path.LINETO": [
                    3957
                ],
                "mpath.Path.CLOSEPOLY": [
                    3958
                ],
                "to_vc": [
                    3962
                ],
                "path": [
                    4434,
                    3963,
                    3964,
                    4443
                ],
                "patch": [
                    6813,
                    6833,
                    6834,
                    6739,
                    6835,
                    6742,
                    6840,
                    6811,
                    3964,
                    3965,
                    3966,
                    6815
                ],
                "self.add_artist": [
                    4963,
                    4957,
                    3965
                ],
                "patch_list": [
                    3985,
                    6810,
                    6811,
                    3974
                ],
                "shuffled": [
                    3978,
                    3980,
                    3981
                ],
                "i": [
                    3979,
                    3980,
                    6669,
                    4879,
                    4880,
                    4881,
                    4882,
                    6672,
                    4885,
                    4697,
                    4699,
                    4701,
                    6621,
                    4703,
                    4705,
                    4706,
                    4707,
                    4708,
                    4833,
                    4710,
                    4711,
                    4834,
                    4713,
                    4839,
                    4715,
                    4717,
                    4719,
                    4720,
                    4847,
                    4722,
                    4848,
                    4724,
                    4849,
                    4726,
                    4850,
                    4854
                ],
                "shuffled.extend": [
                    3980
                ],
                "N": [
                    5379,
                    5380,
                    3988,
                    3993,
                    3994,
                    4003,
                    5412,
                    4005,
                    4006,
                    5414,
                    5415,
                    5416,
                    5417,
                    5190,
                    5191,
                    8007,
                    8013,
                    8014,
                    8019,
                    8020,
                    5224,
                    5226,
                    5227,
                    5228,
                    5229
                ],
                "datashape_message": [
                    4007,
                    8008,
                    8015,
                    3989,
                    8021,
                    3995
                ],
                "datashape_message.format": [
                    3995,
                    8021,
                    8015,
                    4007
                ],
                "np.array": [
                    4745,
                    6674,
                    4115,
                    4628,
                    4629,
                    4891,
                    3997,
                    4015,
                    4016,
                    5424,
                    5425,
                    4021,
                    6334,
                    8024,
                    8025,
                    8048,
                    5236,
                    5237,
                    4863
                ],
                "np.clip": [
                    6705,
                    4003
                ],
                "np.ptp": [
                    6280,
                    4003,
                    6279
                ],
                "np.isscalar": [
                    8018,
                    4004,
                    6573
                ],
                "datalabels.append": [
                    4011
                ],
                "stats.get": [
                    4011,
                    8094,
                    8059
                ],
                "whisker_x": [
                    4057,
                    4060,
                    4014
                ],
                "np.ones": [
                    4828,
                    4022,
                    4014,
                    4023
                ],
                "whiskerlo_y": [
                    4057,
                    4015
                ],
                "whiskerhi_y": [
                    4016,
                    4060
                ],
                "cap_left": [
                    4033,
                    4019,
                    4021
                ],
                "cap_right": [
                    4032,
                    4020,
                    4021
                ],
                "cap_x": [
                    4065,
                    4066,
                    4021,
                    4039
                ],
                "cap_lo": [
                    4065,
                    4022
                ],
                "cap_hi": [
                    4066,
                    4023
                ],
                "box_left": [
                    4032,
                    4033,
                    4034,
                    4043,
                    4075,
                    4046,
                    4026
                ],
                "box_right": [
                    4032,
                    4033,
                    4043,
                    4075,
                    4046,
                    4027
                ],
                "med_y": [
                    4028,
                    4069
                ],
                "shownotches": [
                    4031
                ],
                "box_x": [
                    4032,
                    4043,
                    4053,
                    4051
                ],
                "box_y": [
                    4035,
                    4044,
                    4053,
                    4051
                ],
                "med_x": [
                    4069,
                    4046,
                    4039
                ],
                "boxes.extend": [
                    4051,
                    4053
                ],
                "dopatch": [
                    4051
                ],
                "doplot": [
                    4065,
                    4066,
                    4069,
                    4074,
                    4079,
                    4053,
                    4056,
                    4089,
                    4059
                ],
                "whiskers.extend": [
                    4056,
                    4059
                ],
                "caps.extend": [
                    4065,
                    4066
                ],
                "medians.extend": [
                    4069
                ],
                "means.extend": [
                    4074,
                    4079
                ],
                "flier_x": [
                    4090,
                    4086
                ],
                "np.full": [
                    4086
                ],
                "np.float64": [
                    4086
                ],
                "flier_y": [
                    4090,
                    4087
                ],
                "fliers.extend": [
                    4089
                ],
                "axis_name": [
                    4096,
                    4107,
                    4094,
                    4095
                ],
                "interval": [
                    4104,
                    4105,
                    4095
                ],
                "self.dataLim": [
                    5426,
                    5429,
                    5238,
                    5241,
                    4095
                ],
                "axis": [
                    4096,
                    4097,
                    4110,
                    4111,
                    4114,
                    4116,
                    4117,
                    4120
                ],
                "axis.convert_units": [
                    4097
                ],
                "median": [
                    4106,
                    4107
                ],
                "extend": [
                    4107
                ],
                "median.sticky_edges": [
                    4107
                ],
                "locator": [
                    4113,
                    4114,
                    4115,
                    4110
                ],
                "axis.get_major_locator": [
                    4110,
                    4111
                ],
                "mticker.FixedLocator": [
                    4112,
                    4113
                ],
                "mticker": [
                    7750,
                    7753,
                    4112,
                    4113,
                    4118,
                    4119,
                    7803,
                    7806
                ],
                "axis.set_major_locator": [
                    4114
                ],
                "locator.locs": [
                    4115
                ],
                "formatter": [
                    4120,
                    4121,
                    4116,
                    4119
                ],
                "axis.get_major_formatter": [
                    4116,
                    4117
                ],
                "mticker.FixedFormatter": [
                    4118,
                    4119
                ],
                "axis.set_major_formatter": [
                    4120
                ],
                "formatter.seq": [
                    4121
                ],
                "self._autoscaleXon": [
                    4124
                ],
                "self._autoscaleYon": [
                    4124
                ],
                "facecolors": [
                    4205,
                    4206,
                    4213,
                    4184,
                    4185
                ],
                "edgecolors": [
                    4416,
                    4417,
                    4419,
                    4771,
                    4421,
                    4765,
                    4203,
                    4204,
                    4267,
                    4208,
                    4209,
                    4437,
                    4409,
                    4186,
                    4411,
                    4445
                ],
                "kwcolor": [
                    4195,
                    4228,
                    4197,
                    4204,
                    4206,
                    4188,
                    4190
                ],
                "c_was_none": [
                    4211,
                    4228
                ],
                "get_next_color_func": [
                    4215
                ],
                "c_is_string_or_strings": [
                    4216,
                    4228
                ],
                "collections.abc.Iterable": [
                    4218
                ],
                "collections.abc": [
                    4218
                ],
                "collections": [
                    4218
                ],
                "csize": [
                    4223
                ],
                "xsize": [
                    4224,
                    4261,
                    4264,
                    4236,
                    4254
                ],
                "c_is_mapped": [
                    4249,
                    4226,
                    4238
                ],
                "valid_shape": [
                    4248,
                    4227,
                    4253
                ],
                "c.size": [
                    4236,
                    4254
                ],
                "c.ravel": [
                    4237
                ],
                "c.shape": [
                    4240
                ],
                "_log.warning": [
                    4241
                ],
                "invalid_shape_exception": [
                    4264,
                    4254
                ],
                "np.ma.ravel": [
                    4405,
                    4397,
                    4398,
                    6295
                ],
                "np.ma": [
                    5673,
                    4397,
                    4398,
                    5389,
                    5391,
                    5201,
                    5680,
                    5203,
                    5363,
                    4405,
                    5174,
                    5682,
                    4440,
                    6297,
                    6295,
                    4415
                ],
                "x.size": [
                    6274,
                    4399,
                    5167,
                    4470,
                    4406,
                    4472,
                    4411
                ],
                "y.size": [
                    6274,
                    5356,
                    4399
                ],
                "self._parse_scatter_color_args": [
                    4410
                ],
                "plotnonfinite": [
                    4414
                ],
                "np.ma.masked_invalid": [
                    4415
                ],
                "cbook._combine_masks": [
                    4417,
                    4420
                ],
                "scales": [
                    4443,
                    4423
                ],
                "mmarkers.MarkerStyle": [
                    4432,
                    4429
                ],
                "mmarkers": [
                    4432,
                    4429
                ],
                "marker_obj": [
                    4430,
                    4432,
                    4434,
                    4435,
                    4436
                ],
                "marker_obj.get_path": [
                    4434
                ],
                "marker_obj.get_transform": [
                    4435
                ],
                "marker_obj.is_filled": [
                    4436
                ],
                "offsets": [
                    4736,
                    4737,
                    4738,
                    4739,
                    4740,
                    4773,
                    4742,
                    4735,
                    4752,
                    4440,
                    4732,
                    4733,
                    4734,
                    4447
                ],
                "np.ma.column_stack": [
                    4440
                ],
                "collection": [
                    6146,
                    6147,
                    6151,
                    5243,
                    5907,
                    5909,
                    5910,
                    5911,
                    5912,
                    5913,
                    5914,
                    4763,
                    6300,
                    6304,
                    4769,
                    5921,
                    6306,
                    4903,
                    4904,
                    4907,
                    4908,
                    4909,
                    4910,
                    5421,
                    4912,
                    5933,
                    4914,
                    5939,
                    5940,
                    6142,
                    5431,
                    5944,
                    5433,
                    4807,
                    4808,
                    4809,
                    4810,
                    4811,
                    4814,
                    4816,
                    4823,
                    4825,
                    4442,
                    4451,
                    4452,
                    4455,
                    4456,
                    4457,
                    6120,
                    6123,
                    4460,
                    6124,
                    4462,
                    6125,
                    6126,
                    5233,
                    6127,
                    6128,
                    6133,
                    4475,
                    5245,
                    4478
                ],
                "mcoll.PathCollection": [
                    4442
                ],
                "collection.set_transform": [
                    4451
                ],
                "collection.update": [
                    4811,
                    4452
                ],
                "collection.set_array": [
                    4807,
                    6124,
                    5910,
                    4455
                ],
                "collection.set_cmap": [
                    4456,
                    5911,
                    6125,
                    4808
                ],
                "cmap": [
                    4897,
                    7619,
                    4869,
                    4456,
                    4808,
                    6312,
                    6125,
                    6319,
                    5911,
                    5626,
                    6302
                ],
                "collection.set_norm": [
                    5912,
                    4457,
                    4809,
                    6126
                ],
                "norm": [
                    4898,
                    4870,
                    6312,
                    4457,
                    4809,
                    4780,
                    6126,
                    6319,
                    4785,
                    4788,
                    5912,
                    5626,
                    4795,
                    4796,
                    4797,
                    6302
                ],
                "vmin": [
                    5635,
                    5636,
                    7619,
                    4459,
                    4460,
                    4813,
                    4814,
                    6127,
                    7057,
                    7058,
                    6324,
                    6325,
                    7063,
                    5913,
                    7162,
                    7164,
                    7167
                ],
                "vmax": [
                    5635,
                    5636,
                    7619,
                    4459,
                    4460,
                    4813,
                    4814,
                    6127,
                    7057,
                    7058,
                    6324,
                    6325,
                    7063,
                    5913,
                    7162,
                    7164,
                    7167
                ],
                "collection.set_clim": [
                    5913,
                    4460,
                    4814,
                    6127
                ],
                "collection.autoscale_None": [
                    4816,
                    5914,
                    4462,
                    6128
                ],
                "self._xmargin": [
                    4470
                ],
                "self.set_xmargin": [
                    4471
                ],
                "self._ymargin": [
                    4472
                ],
                "self.set_ymargin": [
                    4473
                ],
                "np.mean": [
                    4486
                ],
                "C": [
                    4619,
                    4876,
                    5910,
                    6294,
                    6295,
                    6296,
                    6297,
                    5659,
                    5660,
                    5665,
                    5666,
                    5670,
                    6313,
                    6318,
                    5684,
                    6326,
                    4678,
                    5705,
                    5710,
                    5711,
                    5712,
                    5713,
                    4827,
                    4828,
                    5852,
                    6108,
                    4708,
                    5861,
                    6118,
                    4711,
                    4844,
                    5869,
                    6124,
                    6263,
                    6264,
                    5885
                ],
                "gridsize": [
                    4842,
                    4875,
                    4622,
                    4623,
                    4625
                ],
                "nx": [
                    6621,
                    6593,
                    6624,
                    6627,
                    6669,
                    4655,
                    4623,
                    4625,
                    4626,
                    6610,
                    6612,
                    6713,
                    6715,
                    6844,
                    4669,
                    4671
                ],
                "ny": [
                    4672,
                    4623,
                    4656,
                    4626,
                    4670
                ],
                "math.sqrt": [
                    4626
                ],
                "xscale": [
                    4753,
                    4757,
                    4630,
                    4751
                ],
                "np.any": [
                    4636,
                    4631
                ],
                "np.log10": [
                    7053,
                    7059,
                    7604,
                    7158,
                    7606,
                    7257,
                    4634,
                    7165,
                    4639
                ],
                "yscale": [
                    4762,
                    4635,
                    4758,
                    4751
                ],
                "extent": [
                    4640,
                    4641,
                    7618,
                    7619,
                    6309,
                    6313,
                    6319,
                    5626
                ],
                "mtransforms.nonsingular": [
                    4648,
                    4647
                ],
                "padding": [
                    4652,
                    4653,
                    4654
                ],
                "sy": [
                    4656,
                    4745,
                    4738,
                    4663
                ],
                "marginals": [
                    4824,
                    4658
                ],
                "xorig": [
                    4659,
                    4844
                ],
                "x.copy": [
                    6793,
                    4659,
                    6795
                ],
                "yorig": [
                    4660,
                    4876
                ],
                "y.copy": [
                    6792,
                    6796,
                    4660
                ],
                "ix1": [
                    4675,
                    4707,
                    4708,
                    4681,
                    4683,
                    4664
                ],
                "np.round": [
                    4664,
                    4665
                ],
                "iy1": [
                    4675,
                    4707,
                    4708,
                    4681,
                    4683,
                    4665
                ],
                "ix2": [
                    4676,
                    4710,
                    4711,
                    4682,
                    4684,
                    4666
                ],
                "np.floor": [
                    4666,
                    4667
                ],
                "iy2": [
                    4676,
                    4710,
                    4711,
                    4682,
                    4684,
                    4667
                ],
                "nx1": [
                    4736,
                    4673,
                    4707,
                    4733,
                    4679,
                    4681,
                    4713,
                    4696,
                    4697,
                    4669,
                    4734,
                    4735
                ],
                "ny1": [
                    4736,
                    4673,
                    4707,
                    4679,
                    4681,
                    4714,
                    4734,
                    4696,
                    4698,
                    4733,
                    4670,
                    4735
                ],
                "nx2": [
                    4736,
                    4673,
                    4710,
                    4680,
                    4682,
                    4735,
                    4720,
                    4700,
                    4701,
                    4671
                ],
                "ny2": [
                    4672,
                    4673,
                    4736,
                    4710,
                    4680,
                    4682,
                    4721,
                    4700,
                    4702,
                    4735
                ],
                "n": [
                    4673,
                    4732
                ],
                "d1": [
                    4675,
                    4677
                ],
                "d2": [
                    4676,
                    4677
                ],
                "bdist": [
                    4681,
                    4682,
                    4677,
                    4706
                ],
                "lattice1": [
                    4708,
                    4679,
                    4683,
                    4715,
                    4717,
                    4686,
                    4719,
                    4688,
                    4728,
                    4696,
                    4699
                ],
                "lattice2": [
                    4711,
                    4680,
                    4684,
                    4687,
                    4688,
                    4722,
                    4724,
                    4726,
                    4729,
                    4700,
                    4703
                ],
                "c1": [
                    4681,
                    4683
                ],
                "c2": [
                    4682,
                    4684
                ],
                "np.add.at": [
                    4683,
                    4684
                ],
                "np.add": [
                    4683,
                    4684
                ],
                "mincnt": [
                    4716,
                    4685,
                    4686,
                    4687,
                    4723,
                    4692,
                    4693
                ],
                "np.nan": [
                    4838,
                    4686,
                    4719,
                    4687,
                    4726
                ],
                "accum": [
                    4801,
                    4805,
                    4743,
                    4807,
                    4688,
                    4689,
                    4789,
                    4791,
                    4728,
                    4730,
                    4797
                ],
                "np.concatenate": [
                    8096,
                    8097,
                    6658,
                    6654,
                    4688,
                    8062
                ],
                "lattice1.ravel": [
                    4688
                ],
                "lattice2.ravel": [
                    4688
                ],
                "good_idxs": [
                    4689,
                    4730,
                    4742,
                    4743
                ],
                "np.isnan": [
                    4845,
                    4877,
                    4689,
                    6646,
                    4730
                ],
                "np.empty": [
                    4696,
                    4700
                ],
                "j": [
                    4714,
                    4715,
                    4717,
                    4719,
                    4721,
                    4722,
                    4724,
                    4726,
                    4698,
                    4699,
                    4702,
                    4703
                ],
                "append": [
                    4708,
                    4711
                ],
                "vals": [
                    4715,
                    4716,
                    4717,
                    8048,
                    8049,
                    4722,
                    4723,
                    4724,
                    8051,
                    8052
                ],
                "reduce_C_function": [
                    4836,
                    4724,
                    4717
                ],
                "np.hstack": [
                    4728
                ],
                "ravel": [
                    4728,
                    4729
                ],
                "lattice1.astype": [
                    4728
                ],
                "lattice2.astype": [
                    4729
                ],
                "np.repeat": [
                    4733,
                    4735
                ],
                "polygon": [
                    4752,
                    4745,
                    4770
                ],
                "polygons": [
                    4752,
                    4754,
                    4764,
                    4759
                ],
                "np.expand_dims": [
                    4752
                ],
                "mcoll.PolyCollection": [
                    4769,
                    4866,
                    5421,
                    5233,
                    5907,
                    4763,
                    4895
                ],
                "bins": [
                    6657,
                    6658,
                    6799,
                    6672,
                    6680,
                    6686,
                    6942,
                    4779,
                    6702,
                    4783,
                    6576,
                    6577,
                    4786,
                    6845,
                    4799,
                    4800,
                    6847,
                    4802,
                    4803,
                    4804,
                    4805,
                    6603,
                    6604,
                    6739,
                    6749,
                    6750,
                    6752,
                    6753,
                    6756,
                    6758,
                    6759,
                    6768,
                    6770,
                    6780,
                    6782
                ],
                "mcolors.LogNorm": [
                    4785,
                    4788
                ],
                "norm.vmin": [
                    4796
                ],
                "norm.vmax": [
                    4796
                ],
                "norm.autoscale": [
                    4797
                ],
                "minimum": [
                    4801,
                    4803
                ],
                "maximum": [
                    4801,
                    4803
                ],
                "np.sort": [
                    4804
                ],
                "bins.searchsorted": [
                    4805
                ],
                "collection.set_alpha": [
                    4810,
                    6123,
                    5909
                ],
                "ind": [
                    4834,
                    5383,
                    5384,
                    5385,
                    5386,
                    5195,
                    5196,
                    5197,
                    5198,
                    5392,
                    5204,
                    4831
                ],
                "clip": [
                    4831
                ],
                "coarse.searchsorted": [
                    4831
                ],
                "coarse": [
                    4832,
                    4833,
                    4842,
                    4875,
                    4844,
                    4876,
                    4848,
                    4849,
                    4850,
                    4880,
                    4852,
                    4881,
                    4882,
                    4884,
                    4831
                ],
                "mus": [
                    4832,
                    4840,
                    4839
                ],
                "mu": [
                    4836,
                    4838,
                    4839
                ],
                "np.linspace": [
                    4842,
                    4875
                ],
                "xcoarse": [
                    4844,
                    4845,
                    4847
                ],
                "coarse_bin": [
                    4844,
                    4876
                ],
                "valid": [
                    4877,
                    4845,
                    4854,
                    4885
                ],
                "values": [
                    4896,
                    4868,
                    4878,
                    4846,
                    4889,
                    4891,
                    4861,
                    4863
                ],
                "val": [
                    4889,
                    4879,
                    4861,
                    4847
                ],
                "thismin": [
                    4848,
                    4880,
                    4852,
                    4884,
                    4887,
                    4888,
                    4857,
                    4858
                ],
                "thismax": [
                    4850,
                    4882,
                    4852,
                    4884,
                    4887,
                    4888,
                    4859,
                    4860
                ],
                "np.diff": [
                    6277,
                    6278,
                    6702,
                    4852,
                    4884,
                    6680,
                    6686
                ],
                "verts.append": [
                    4857,
                    4887
                ],
                "values.append": [
                    4889,
                    4861
                ],
                "hbar": [
                    4866,
                    4868,
                    4869,
                    4870,
                    4871,
                    4872,
                    4873,
                    4903,
                    4907,
                    4908
                ],
                "hbar.set_array": [
                    4868
                ],
                "hbar.set_cmap": [
                    4907,
                    4869
                ],
                "hbar.set_norm": [
                    4870
                ],
                "hbar.set_alpha": [
                    4871
                ],
                "hbar.update": [
                    4872
                ],
                "ycoarse": [
                    4876,
                    4877,
                    4879
                ],
                "vbar": [
                    4896,
                    4897,
                    4898,
                    4899,
                    4900,
                    4901,
                    4904,
                    4909,
                    4910,
                    4895
                ],
                "vbar.set_array": [
                    4896
                ],
                "vbar.set_cmap": [
                    4897,
                    4909
                ],
                "vbar.set_norm": [
                    4898
                ],
                "vbar.set_alpha": [
                    4899
                ],
                "vbar.update": [
                    4900
                ],
                "collection.hbar": [
                    4903
                ],
                "collection.vbar": [
                    4904
                ],
                "collection.get_cmap": [
                    4907,
                    4909
                ],
                "hbar.set_clim": [
                    4908
                ],
                "collection.get_clim": [
                    4908,
                    4910
                ],
                "vbar.set_clim": [
                    4910
                ],
                "collection.callbacksSM.connect": [
                    4912
                ],
                "collection.callbacksSM": [
                    4912
                ],
                "on_changed": [
                    4912
                ],
                "mpatches.FancyArrow": [
                    4956
                ],
                "qk": [
                    4962,
                    4963,
                    4964
                ],
                "mquiver.QuiverKey": [
                    4960,
                    4962
                ],
                "mquiver": [
                    4960,
                    4962,
                    4999,
                    4982,
                    4987
                ],
                "Q": [
                    4962
                ],
                "X": [
                    5917,
                    5662,
                    5664,
                    5666,
                    5671,
                    5673,
                    5680,
                    5681,
                    5689,
                    5691,
                    5692,
                    5693,
                    5697,
                    7900,
                    5191,
                    7901,
                    5713,
                    7899,
                    5852,
                    5853,
                    6108,
                    6109,
                    5856,
                    5857,
                    4962,
                    6110,
                    6113,
                    6114,
                    5862,
                    5223,
                    5224,
                    5865,
                    5226,
                    5227,
                    5228,
                    5229,
                    6119,
                    5231,
                    5872,
                    5874,
                    5876,
                    5878,
                    5630
                ],
                "Y": [
                    5380,
                    5662,
                    5918,
                    5664,
                    5666,
                    5411,
                    5412,
                    5414,
                    5415,
                    5416,
                    5417,
                    5671,
                    5419,
                    5673,
                    5682,
                    5683,
                    5690,
                    5694,
                    5695,
                    5696,
                    5697,
                    5713,
                    5852,
                    6108,
                    6111,
                    5856,
                    6113,
                    4962,
                    5858,
                    6115,
                    5863,
                    6119,
                    5865,
                    5873,
                    5875,
                    5877,
                    5879
                ],
                "U": [
                    4962
                ],
                "kw": [
                    4962,
                    4997,
                    4999,
                    4970,
                    7795,
                    4980,
                    4982,
                    7799
                ],
                "docstring.copy": [
                    4960
                ],
                "mquiver.QuiverKey.__init__": [
                    4960
                ],
                "self._quiver_units": [
                    4980,
                    4997
                ],
                "q": [
                    8096,
                    8097,
                    8094,
                    4982,
                    4984,
                    4986,
                    8059,
                    8060,
                    8062,
                    8095
                ],
                "mquiver.Quiver": [
                    4987,
                    4982
                ],
                "quiver.__doc__": [
                    4987
                ],
                "quiver": [
                    4987
                ],
                "mquiver.Quiver.quiver_doc": [
                    4987
                ],
                "mquiver.Barbs": [
                    4999
                ],
                "poly": [
                    5053,
                    5054
                ],
                "mcoll.Collection": [
                    5144,
                    5333
                ],
                "ma.masked_invalid": [
                    5344,
                    5345,
                    5154,
                    5155,
                    5156,
                    5343
                ],
                "ma": [
                    5154,
                    5155,
                    5156,
                    5343,
                    5344,
                    5345,
                    5861,
                    5862,
                    5863,
                    5865,
                    5869,
                    5872,
                    5873,
                    5874,
                    5875,
                    5876,
                    5877,
                    5878,
                    5879,
                    5885
                ],
                "name": [
                    5160,
                    5347,
                    5349,
                    5158
                ],
                "array": [
                    5347,
                    5348,
                    5158,
                    5159
                ],
                "array.ndim": [
                    5348,
                    5159
                ],
                "where.size": [
                    5356,
                    5167
                ],
                "functools.reduce": [
                    5362,
                    5173
                ],
                "functools": [
                    5362,
                    5173
                ],
                "np.logical_or": [
                    5362,
                    5173
                ],
                "np.ma.getmask": [
                    5363,
                    5174
                ],
                "polys": [
                    5419,
                    5421,
                    5231,
                    5233,
                    5367,
                    5178
                ],
                "ind0": [
                    5368,
                    5402,
                    5371,
                    5182,
                    5369,
                    5370,
                    5179,
                    5180,
                    5181,
                    5214
                ],
                "ind1": [
                    5371,
                    5403,
                    5368,
                    5369,
                    5370,
                    5179,
                    5180,
                    5181,
                    5182,
                    5215
                ],
                "cbook.contiguous_regions": [
                    5368,
                    5179
                ],
                "xslice": [
                    5185,
                    5187,
                    5220,
                    5221,
                    5190,
                    5226,
                    5228,
                    5180
                ],
                "y1slice": [
                    5185,
                    5227,
                    5181
                ],
                "y2slice": [
                    5185,
                    5220,
                    5221,
                    5229,
                    5182
                ],
                "step": [
                    5184,
                    7165,
                    7062,
                    7063,
                    7167,
                    5372,
                    5373,
                    5183
                ],
                "step_func": [
                    5184,
                    5185,
                    5373,
                    5374
                ],
                "cbook.STEP_LOOKUP_MAP": [
                    5184,
                    5373
                ],
                "interpolate": [
                    5193,
                    5381
                ],
                "im1": [
                    5383,
                    5384,
                    5385,
                    5386,
                    5195,
                    5196,
                    5197,
                    5198,
                    5390,
                    5202
                ],
                "x_values": [
                    5208,
                    5209,
                    5210,
                    5196
                ],
                "diff_values": [
                    5385,
                    5388,
                    5197,
                    5389,
                    5391,
                    5200,
                    5201,
                    5394,
                    5203,
                    5396,
                    5206,
                    5208
                ],
                "y1_values": [
                    5211,
                    5198
                ],
                "np.ma.is_masked": [
                    5673,
                    5389,
                    5391,
                    5201,
                    5203
                ],
                "diff_order": [
                    5208,
                    5394,
                    5396,
                    5206
                ],
                "diff_values.argsort": [
                    5394,
                    5206
                ],
                "diff_root_x": [
                    5398,
                    5207,
                    5400,
                    5210,
                    5212
                ],
                "np.interp": [
                    5210,
                    5395,
                    5398,
                    5207
                ],
                "x_order": [
                    5209,
                    5210,
                    5211
                ],
                "x_values.argsort": [
                    5209
                ],
                "diff_root_y": [
                    5395,
                    5398,
                    5400,
                    5210,
                    5212
                ],
                "start": [
                    5408,
                    5411,
                    5220,
                    5223,
                    5402,
                    5214
                ],
                "get_interp_point": [
                    5402,
                    5403,
                    5214,
                    5215
                ],
                "end": [
                    5409,
                    5412,
                    5221,
                    5224,
                    5403,
                    5215
                ],
                "polys.append": [
                    5419,
                    5231
                ],
                "XY1": [
                    5236,
                    5238
                ],
                "T": [
                    5928,
                    5424,
                    5425,
                    5236,
                    5237
                ],
                "XY2": [
                    5241,
                    5237
                ],
                "self.dataLim.update_from_data_xy": [
                    5241,
                    5426,
                    5429,
                    5238
                ],
                "self.ignore_existing_data_limits": [
                    5426,
                    5428,
                    5429,
                    5238,
                    5240,
                    5241
                ],
                "yslice": [
                    5376,
                    5408,
                    5409,
                    5379,
                    5415,
                    5417,
                    5369,
                    5374
                ],
                "x1slice": [
                    5414,
                    5370,
                    5374
                ],
                "x2slice": [
                    5408,
                    5409,
                    5416,
                    5371,
                    5374
                ],
                "y_values": [
                    5384,
                    5396,
                    5397,
                    5398
                ],
                "x1_values": [
                    5386,
                    5399
                ],
                "y_order": [
                    5397,
                    5398,
                    5399
                ],
                "y_values.argsort": [
                    5397
                ],
                "X1Y": [
                    5424,
                    5426
                ],
                "X2Y": [
                    5425,
                    5429
                ],
                "aspect": [
                    7745,
                    7716,
                    5623,
                    5624,
                    5625
                ],
                "im": [
                    5632,
                    7809,
                    5634,
                    5636,
                    5638,
                    5639,
                    5643,
                    5645,
                    5646,
                    6311,
                    6317,
                    6321,
                    6322,
                    7619,
                    7623,
                    7799,
                    5626,
                    5630,
                    5631
                ],
                "mimage.AxesImage": [
                    5626,
                    6311
                ],
                "mimage": [
                    5626,
                    6317,
                    6311
                ],
                "interpolation": [
                    5626
                ],
                "origin": [
                    5626,
                    7717
                ],
                "filternorm": [
                    5627
                ],
                "filterrad": [
                    5627
                ],
                "resample": [
                    5628
                ],
                "im.set_data": [
                    5630
                ],
                "im.set_alpha": [
                    5631
                ],
                "im.get_clip_path": [
                    5632
                ],
                "im.set_clip_path": [
                    5634
                ],
                "im.set_clim": [
                    5636
                ],
                "im.autoscale_None": [
                    5638
                ],
                "im.set_url": [
                    5639
                ],
                "url": [
                    5639
                ],
                "im.set_extent": [
                    5643
                ],
                "im.get_extent": [
                    5643
                ],
                "self.add_image": [
                    6321,
                    5645
                ],
                "nrows": [
                    5664,
                    5702,
                    5707,
                    5684,
                    5660,
                    5662
                ],
                "ncols": [
                    5664,
                    5702,
                    5707,
                    5684,
                    5660,
                    5662
                ],
                "C.shape": [
                    5705,
                    5710,
                    5684,
                    6297,
                    5660
                ],
                "allmatch": [
                    6106,
                    6108,
                    5701,
                    5661
                ],
                "np.meshgrid": [
                    5664,
                    5662
                ],
                "cbook.safe_masked_invalid": [
                    5712,
                    5665,
                    5671
                ],
                "funcname": [
                    5700,
                    5672,
                    5705,
                    5710,
                    5687
                ],
                "np.ma.core.MaskedArray": [
                    5680,
                    5682
                ],
                "np.ma.core": [
                    5680,
                    5682
                ],
                "X.data": [
                    5681
                ],
                "Y.data": [
                    5683
                ],
                "X.shape": [
                    5697,
                    6109,
                    5689,
                    5691,
                    5853
                ],
                "Ny": [
                    5702,
                    5853,
                    5705,
                    5885,
                    5707,
                    6120,
                    5710,
                    5711,
                    6109,
                    5690,
                    5693,
                    5695
                ],
                "Y.shape": [
                    5697,
                    5690,
                    5694
                ],
                "X.ndim": [
                    5691
                ],
                "X.reshape": [
                    5692
                ],
                "x.repeat": [
                    5693
                ],
                "Y.ndim": [
                    5694
                ],
                "Y.reshape": [
                    5695
                ],
                "y.repeat": [
                    5696
                ],
                "self._pcolorargs": [
                    6108,
                    5852
                ],
                "ma.asarray": [
                    5861,
                    5862,
                    5863
                ],
                "ma.getmaskarray": [
                    5865,
                    5869
                ],
                "xymask": [
                    5866,
                    5869
                ],
                "unmask": [
                    5871,
                    5872,
                    5873,
                    5874,
                    5875,
                    5876,
                    5877,
                    5878,
                    5879,
                    5885
                ],
                "X1": [
                    5872,
                    5882,
                    5880
                ],
                "ma.filled": [
                    5872,
                    5873,
                    5874,
                    5875,
                    5876,
                    5877,
                    5878,
                    5879,
                    5885
                ],
                "Y1": [
                    5873,
                    5882
                ],
                "X2": [
                    5882,
                    5874
                ],
                "Y2": [
                    5882,
                    5875
                ],
                "X3": [
                    5882,
                    5876
                ],
                "Y3": [
                    5882,
                    5877
                ],
                "X4": [
                    5882,
                    5878
                ],
                "Y4": [
                    5882,
                    5879
                ],
                "npoly": [
                    5880,
                    5883
                ],
                "np.stack": [
                    5882,
                    6293
                ],
                "xy.reshape": [
                    5883
                ],
                "ec": [
                    5894,
                    5902
                ],
                "self.grid": [
                    7468,
                    7056,
                    6130,
                    7161,
                    5915
                ],
                "X.compressed": [
                    5917
                ],
                "Y.compressed": [
                    5918
                ],
                "collection._transform": [
                    5921,
                    6133
                ],
                "mtransforms.Transform": [
                    5922,
                    6134
                ],
                "t._as_mpl_transform": [
                    6136,
                    5924
                ],
                "self.axes": [
                    6136,
                    5924
                ],
                "t.contains_branch_seperately": [
                    6138,
                    5926
                ],
                "trans_to_data": [
                    5929,
                    6139,
                    6140,
                    5927
                ],
                "pts": [
                    5928,
                    5929
                ],
                "T.astype": [
                    5928
                ],
                "np.vstack": [
                    5928
                ],
                "transformed_pts": [
                    5929,
                    5930,
                    5931
                ],
                "trans_to_data.transform": [
                    5929,
                    6140
                ],
                "collection.sticky_edges.x": [
                    6146,
                    5939
                ],
                "collection.sticky_edges": [
                    6147,
                    6146,
                    5939,
                    5940
                ],
                "collection.sticky_edges.y": [
                    6147,
                    5940
                ],
                "shading": [
                    6121,
                    6106,
                    6103
                ],
                "shading.lower": [
                    6103
                ],
                "X.ravel": [
                    6110
                ],
                "Y.ravel": [
                    6111
                ],
                "C.ravel": [
                    6118
                ],
                "coords": [
                    6144,
                    6145,
                    7900,
                    6119,
                    6120,
                    6293,
                    6140,
                    6301,
                    7902
                ],
                "mcoll.QuadMesh": [
                    6120,
                    6300
                ],
                "antialiased": [
                    6121
                ],
                "nr": [
                    7744,
                    6264,
                    6268,
                    6301,
                    7742
                ],
                "nc": [
                    6264,
                    6267,
                    6301,
                    7742,
                    7743
                ],
                "style": [
                    6275,
                    6310,
                    6281,
                    6283,
                    6316,
                    6285,
                    6291,
                    6266
                ],
                "y.ndim": [
                    6273,
                    6284
                ],
                "np.abs": [
                    6279,
                    6280,
                    7725,
                    7730,
                    7158,
                    7708
                ],
                "dx.mean": [
                    6279
                ],
                "dy.mean": [
                    6280
                ],
                "np.ndim": [
                    6296,
                    6326,
                    6294
                ],
                "qm_kwargs": [
                    6297,
                    6301,
                    6295
                ],
                "np.ma.reshape": [
                    6297
                ],
                "xl": [
                    6305,
                    6332,
                    6309,
                    6334
                ],
                "yb": [
                    6305,
                    6309,
                    6334,
                    6333
                ],
                "mimage.PcolorImage": [
                    6317
                ],
                "ret.set_clim": [
                    6325
                ],
                "ret.autoscale_None": [
                    6327
                ],
                "ret.get_clip_path": [
                    6328
                ],
                "ret.set_clip_path": [
                    6330
                ],
                "ret.sticky_edges.x": [
                    6332
                ],
                "ret.sticky_edges": [
                    6332,
                    6333
                ],
                "ret.sticky_edges.y": [
                    6333
                ],
                "contours": [
                    6349,
                    6351,
                    6341,
                    6343
                ],
                "mcontour.QuadContourSet": [
                    6344,
                    6352,
                    6341,
                    6349
                ],
                "mcontour": [
                    6341,
                    6344,
                    6349,
                    6352,
                    6356
                ],
                "contour.__doc__": [
                    6344
                ],
                "contour": [
                    6344
                ],
                "mcontour.QuadContourSet._contour_doc": [
                    6344,
                    6352
                ],
                "contourf.__doc__": [
                    6352
                ],
                "contourf": [
                    6352
                ],
                "CS.clabel": [
                    6355
                ],
                "CS": [
                    6355
                ],
                "clabel.__doc__": [
                    6356
                ],
                "clabel": [
                    6356
                ],
                "mcontour.ContourSet.clabel.__doc__": [
                    6356
                ],
                "mcontour.ContourSet.clabel": [
                    6356
                ],
                "mcontour.ContourSet": [
                    6356
                ],
                "bin_range": [
                    6658,
                    6660,
                    6600,
                    6601,
                    6570,
                    6635,
                    6647
                ],
                "histtype": [
                    6700,
                    6581,
                    6774,
                    6712,
                    6586,
                    6747,
                    6716
                ],
                "stacked": [
                    6663,
                    6735,
                    6675,
                    6707,
                    6778,
                    6743,
                    6712,
                    6586,
                    6587,
                    6716
                ],
                "input_empty": [
                    6652,
                    6590
                ],
                "np.size": [
                    8096,
                    8097,
                    6590
                ],
                "cbook._reshape_2D": [
                    6592,
                    6608
                ],
                "cbook.is_scalar_or_string": [
                    6603
                ],
                "weights": [
                    6608,
                    6943,
                    6653,
                    6607
                ],
                "wi": [
                    6616,
                    6615
                ],
                "self._get_lines.get_next_color": [
                    8041,
                    6621
                ],
                "error_message": [
                    6625,
                    6628
                ],
                "hist_kwargs": [
                    6664,
                    6672,
                    6660,
                    6630
                ],
                "np.inf": [
                    6636,
                    6637
                ],
                "np.nanmin": [
                    6642
                ],
                "np.nanmax": [
                    6643
                ],
                "_w": [
                    6656,
                    6658,
                    6654
                ],
                "np.histogram_bin_edges": [
                    6657
                ],
                "density": [
                    6662,
                    6663,
                    6664,
                    6679,
                    6685,
                    6943
                ],
                "tops": [
                    6688,
                    6667,
                    6732,
                    6673,
                    6674,
                    6706,
                    6676,
                    6680,
                    6777,
                    6845,
                    6686,
                    6847
                ],
                "m": [
                    6732,
                    6734,
                    6672,
                    6673,
                    6736,
                    6738,
                    6744,
                    6777,
                    6782,
                    6783
                ],
                "np.histogram": [
                    6672
                ],
                "tops.append": [
                    6673
                ],
                "tops.cumsum": [
                    6676
                ],
                "cumulative": [
                    6681,
                    6683
                ],
                "slc": [
                    6688,
                    6682,
                    6684,
                    6686
                ],
                "cumsum": [
                    6688,
                    6686
                ],
                "_saved_autoscalex": [
                    6820,
                    6695
                ],
                "self.get_autoscalex_on": [
                    6695
                ],
                "_saved_autoscaley": [
                    6696,
                    6821
                ],
                "self.get_autoscaley_on": [
                    6696
                ],
                "self.set_autoscalex_on": [
                    6697,
                    6820
                ],
                "self.set_autoscaley_on": [
                    6698,
                    6821
                ],
                "histtype.startswith": [
                    6747,
                    6700
                ],
                "totwidth": [
                    6721,
                    6723,
                    6702,
                    6713,
                    6715,
                    6717
                ],
                "rwidth": [
                    6704,
                    6705
                ],
                "dr": [
                    6705,
                    6708,
                    6710,
                    6713,
                    6715,
                    6717
                ],
                "dw": [
                    6745,
                    6714,
                    6718
                ],
                "boffset": [
                    6721,
                    6723,
                    6739,
                    6745,
                    6715,
                    6718
                ],
                "_barfunc": [
                    6729,
                    6739,
                    6726
                ],
                "self.barh": [
                    6726
                ],
                "bottom_kwarg": [
                    6730,
                    6741,
                    6727
                ],
                "fill": [
                    8033,
                    6799,
                    8050,
                    6806,
                    6774,
                    6808,
                    6809,
                    8029
                ],
                "xvals": [
                    6776,
                    6795,
                    6803,
                    6792
                ],
                "yvals": [
                    6776,
                    6793,
                    6803,
                    6796
                ],
                "xvals.append": [
                    6792,
                    6795
                ],
                "yvals.append": [
                    6793,
                    6796
                ],
                "split": [
                    6805,
                    6799
                ],
                "self.fill": [
                    6804
                ],
                "patch.sticky_edges.y.append": [
                    6813
                ],
                "patch.sticky_edges.y": [
                    6813
                ],
                "patch.sticky_edges": [
                    6813,
                    6815
                ],
                "patch.sticky_edges.x.append": [
                    6815
                ],
                "patch.sticky_edges.x": [
                    6815
                ],
                "patches.reverse": [
                    6818
                ],
                "lab": [
                    6831
                ],
                "lbl": [
                    6833,
                    6837,
                    6838
                ],
                "itertools.zip_longest": [
                    6833
                ],
                "p.update": [
                    6841,
                    6836
                ],
                "p.set_label": [
                    6842,
                    6838
                ],
                "cbook.silent_list": [
                    6845,
                    6847
                ],
                "xedges": [
                    6950,
                    6954,
                    6942,
                    6951
                ],
                "yedges": [
                    6950,
                    6952,
                    6954,
                    6942
                ],
                "np.histogram2d": [
                    6942
                ],
                "cmin": [
                    8096,
                    6945,
                    6946,
                    8093
                ],
                "cmax": [
                    8097,
                    6947,
                    6948,
                    8093
                ],
                "pc": [
                    6954,
                    6950
                ],
                "self.pcolormesh": [
                    6950
                ],
                "h.T": [
                    6950
                ],
                "Fc": [
                    7040,
                    7041,
                    7046,
                    7577,
                    7578,
                    7324,
                    7325,
                    7329,
                    7463,
                    7617,
                    7243,
                    7244,
                    7248,
                    7395,
                    7396,
                    7400,
                    7149,
                    7150,
                    7156
                ],
                "pxx": [
                    7043,
                    7067,
                    7053,
                    7069
                ],
                "freqs": [
                    7043,
                    7171,
                    7173,
                    7046,
                    7053,
                    7067,
                    7069,
                    7327,
                    7329,
                    7331,
                    7460,
                    7335,
                    7463,
                    7465,
                    7593,
                    7470,
                    7617,
                    7618,
                    7623,
                    7246,
                    7248,
                    7259,
                    7263,
                    7398,
                    7400,
                    7402,
                    7406,
                    7152,
                    7156,
                    7158
                ],
                "mlab.psd": [
                    7043
                ],
                "NFFT": [
                    7043,
                    7460,
                    7593,
                    7152,
                    7575,
                    7576,
                    7614
                ],
                "Fs": [
                    7043,
                    7460,
                    7398,
                    7593,
                    7246,
                    7152,
                    7614,
                    7327
                ],
                "window": [
                    7044,
                    7461,
                    7398,
                    7594,
                    7246,
                    7153,
                    7327
                ],
                "noverlap": [
                    7044,
                    7461,
                    7595,
                    7153,
                    7579,
                    7580,
                    7614
                ],
                "pad_to": [
                    7328,
                    7044,
                    7399,
                    7595,
                    7247,
                    7153
                ],
                "sides": [
                    7328,
                    7045,
                    7399,
                    7596,
                    7247,
                    7154
                ],
                "scale_by_freq": [
                    7045,
                    7462,
                    7048,
                    7597,
                    7154
                ],
                "psd_units": [
                    7049,
                    7051,
                    7055
                ],
                "self.set_xlabel": [
                    7332,
                    7466,
                    7403,
                    7054,
                    7159,
                    7260
                ],
                "self.set_ylabel": [
                    7333,
                    7467,
                    7404,
                    7055,
                    7160,
                    7261
                ],
                "self.viewLim.intervaly": [
                    7057,
                    7162
                ],
                "self.viewLim": [
                    7057,
                    7162
                ],
                "intv": [
                    7058,
                    7059,
                    7164,
                    7165
                ],
                "logi": [
                    7059,
                    7060,
                    7061,
                    7062
                ],
                "ticks": [
                    7064,
                    7168,
                    7167,
                    7063
                ],
                "math.floor": [
                    7167,
                    7063
                ],
                "math.ceil": [
                    7167,
                    7063
                ],
                "return_line": [
                    7066,
                    7170
                ],
                "pxy": [
                    7152,
                    7171,
                    7173,
                    7158
                ],
                "mlab.csd": [
                    7152
                ],
                "spec": [
                    7331,
                    7398,
                    7335,
                    7623,
                    7593,
                    7402,
                    7246,
                    7406,
                    7601,
                    7604,
                    7606,
                    7255,
                    7257,
                    7263,
                    7327
                ],
                "mlab.magnitude_spectrum": [
                    7246
                ],
                "yunits": [
                    7250,
                    7261,
                    7254
                ],
                "scale": [
                    7585,
                    7587,
                    7589,
                    7590,
                    7600,
                    7602,
                    7253,
                    7608
                ],
                "Z": [
                    7707,
                    7619,
                    7719,
                    7720,
                    7799,
                    7601,
                    7729,
                    7730,
                    7604,
                    7794,
                    7606,
                    7255,
                    7704,
                    7257,
                    7610,
                    7259,
                    7708,
                    7742
                ],
                "mlab.angle_spectrum": [
                    7327
                ],
                "mlab.phase_spectrum": [
                    7398
                ],
                "mlab.window_hanning": [
                    7411
                ],
                "cxy": [
                    7465,
                    7460,
                    7470
                ],
                "mlab.cohere": [
                    7460
                ],
                "mode": [
                    7586,
                    7590,
                    7598,
                    7603,
                    7582
                ],
                "mlab.specgram": [
                    7593
                ],
                "np.flipud": [
                    7610
                ],
                "xextent": [
                    7616,
                    7612,
                    7615
                ],
                "pad_xextent": [
                    7614,
                    7615
                ],
                "self.imshow": [
                    7619,
                    7716,
                    7799
                ],
                "self.axis": [
                    7621
                ],
                "markersize": [
                    7734,
                    7735,
                    7704,
                    7706,
                    7740
                ],
                "precision": [
                    7721,
                    7730,
                    7708,
                    7725
                ],
                "mcolors.ListedColormap": [
                    7711
                ],
                "Z.tocoo": [
                    7720
                ],
                "c.row": [
                    7722,
                    7726
                ],
                "c.col": [
                    7723,
                    7727
                ],
                "nonzero": [
                    7725,
                    7726,
                    7727,
                    7730,
                    7731
                ],
                "c.data": [
                    7725
                ],
                "np.nonzero": [
                    7731
                ],
                "marks": [
                    7746,
                    7739,
                    7741
                ],
                "Z.shape": [
                    7742
                ],
                "self.title.set_y": [
                    7800,
                    7747
                ],
                "self.xaxis.tick_top": [
                    7801,
                    7748
                ],
                "self.xaxis.set_ticks_position": [
                    7802,
                    7749
                ],
                "self.xaxis.set_major_locator": [
                    7803,
                    7750
                ],
                "mticker.MaxNLocator": [
                    7753,
                    7806,
                    7803,
                    7750
                ],
                "self.yaxis.set_major_locator": [
                    7753,
                    7806
                ],
                "np.all": [
                    7899
                ],
                "kde": [
                    7901,
                    7902
                ],
                "mlab.GaussianKDE": [
                    7901
                ],
                "bw_method": [
                    7901
                ],
                "kde.evaluate": [
                    7902
                ],
                "vpstats": [
                    7904,
                    7906,
                    8007,
                    8045,
                    8093
                ],
                "cbook.violin_stats": [
                    7904
                ],
                "dataset": [
                    7904
                ],
                "_kde_method": [
                    7904
                ],
                "points": [
                    7904
                ],
                "quantiles": [
                    7905,
                    8002,
                    8099,
                    8087,
                    8062
                ],
                "self.violin": [
                    7906
                ],
                "showextrema": [
                    7908,
                    8071
                ],
                "showmedians": [
                    8080,
                    7908
                ],
                "pmins": [
                    8067,
                    8072,
                    8074,
                    8082,
                    8024,
                    8093
                ],
                "pmaxes": [
                    8067,
                    8072,
                    8074,
                    8083,
                    8025,
                    8093
                ],
                "self.fill_betweenx": [
                    8029
                ],
                "perp_lines": [
                    8034,
                    8067,
                    8099,
                    8072,
                    8074,
                    8081,
                    8030
                ],
                "par_lines": [
                    8035,
                    8076,
                    8031
                ],
                "self.fill_between": [
                    8033
                ],
                "fillcolor": [
                    8041,
                    8053,
                    8038
                ],
                "bodies": [
                    8050,
                    8044,
                    8063
                ],
                "vals.max": [
                    8049
                ],
                "means.append": [
                    8055
                ],
                "mins.append": [
                    8056
                ],
                "maxes.append": [
                    8057
                ],
                "medians.append": [
                    8058
                ],
                "quantiles.size": [
                    8087
                ],
                "ppmins": [
                    8096,
                    8090,
                    8099
                ],
                "ppmaxs": [
                    8097,
                    8099,
                    8092
                ],
                "table": [
                    8106
                ],
                "mtable.table": [
                    8106
                ],
                "mtable": [
                    8106
                ],
                "stackplot": [
                    8109
                ],
                "mstack.stackplot": [
                    8109
                ],
                "mstack": [
                    8109
                ],
                "streamplot": [
                    8111
                ],
                "mstream.streamplot": [
                    8112
                ],
                "mstream": [
                    8112
                ],
                "tricontour": [
                    8114
                ],
                "mtri.tricontour": [
                    8114
                ],
                "mtri": [
                    8114,
                    8115,
                    8116,
                    8117
                ],
                "tricontourf": [
                    8115
                ],
                "mtri.tricontourf": [
                    8115
                ],
                "tripcolor": [
                    8116
                ],
                "mtri.tripcolor": [
                    8116
                ],
                "triplot": [
                    8117
                ],
                "mtri.triplot": [
                    8117
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/matplotlib_21/lib/matplotlib/tests/test_axes.py",
                "test_function": "test_boxplot_marker_behavior",
                "test_function_code": "def test_boxplot_marker_behavior():\n    plt.rcParams['lines.marker'] = 's'\n    plt.rcParams['boxplot.flierprops.marker'] = 'o'\n    plt.rcParams['boxplot.meanprops.marker'] = '^'\n    fig, ax = plt.subplots()\n    test_data = np.arange(100)\n    test_data[-1] = 150  # a flier point\n    bxp_handle = ax.boxplot(test_data, showmeans=True)\n    for bxp_lines in ['whiskers', 'caps', 'boxes', 'medians']:\n        for each_line in bxp_handle[bxp_lines]:\n            # Ensure that the rcParams['lines.marker'] is overridden by ''\n            assert each_line.get_marker() == ''\n\n    # Ensure that markers for fliers and means aren't overridden with ''\n    assert bxp_handle['fliers'][0].get_marker() == 'o'\n    assert bxp_handle['means'][0].get_marker() == '^'",
                "test_error": "AssertionError: assert 's' == ''\n  + s",
                "full_test_error": "def test_boxplot_marker_behavior():\n        plt.rcParams['lines.marker'] = 's'\n        plt.rcParams['boxplot.flierprops.marker'] = 'o'\n        plt.rcParams['boxplot.meanprops.marker'] = '^'\n        fig, ax = plt.subplots()\n        test_data = np.arange(100)\n        test_data[-1] = 150  # a flier point\n        bxp_handle = ax.boxplot(test_data, showmeans=True)\n        for bxp_lines in ['whiskers', 'caps', 'boxes', 'medians']:\n            for each_line in bxp_handle[bxp_lines]:\n                # Ensure that the rcParams['lines.marker'] is overridden by ''\n>               assert each_line.get_marker() == ''\nE               AssertionError: assert 's' == ''\nE                 + s\n\nlib/matplotlib/tests/test_axes.py:2715: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}