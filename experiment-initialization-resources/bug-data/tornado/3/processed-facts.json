{
    "1.1.1": "def close(self) -> None:\n    \n    if self._closed:\n        return\n    self._closed = True\n    if self._instance_cache is not None:\n        if self._instance_cache.get(self.io_loop) is not self:\n            raise RuntimeError(\"inconsistent AsyncHTTPClient cache\")\n        del self._instance_cache[self.io_loop]\n",
    "1.1.2": "Destroys this HTTP client, freeing any file descriptors used.\n\nThis method is **not needed in normal use** due to the way\nthat `AsyncHTTPClient` objects are transparently reused.\n``close()`` is generally only necessary when either the\n`.IOLoop` is also being closed, or the ``force_instance=True``\nargument was used when creating the `AsyncHTTPClient`.\n\nNo other methods may be called on the `AsyncHTTPClient` after\n``close()``.",
    "1.2.1": "tornado/httpclient.py",
    "1.2.2": null,
    "1.3.1": "class AsyncHTTPClient(Configurable)",
    "1.3.2": "An non-blocking HTTP client.\n\nExample usage::\n\n    async def f():\n        http_client = AsyncHTTPClient()\n        try:\n            response = await http_client.fetch(\"http://www.google.com\")\n        except Exception as e:\n            print(\"Error: %s\" % e)\n        else:\n            print(response.body)\n\nThe constructor for this class is magic in several respects: It\nactually creates an instance of an implementation-specific\nsubclass, and instances are reused as a kind of pseudo-singleton\n(one per `.IOLoop`). The keyword argument ``force_instance=True``\ncan be used to suppress this singleton behavior. Unless\n``force_instance=True`` is used, no arguments should be passed to\nthe `AsyncHTTPClient` constructor. The implementation subclass as\nwell as arguments to its constructor can be set with the static\nmethod `configure()`\n\nAll `AsyncHTTPClient` implementations support a ``defaults``\nkeyword argument, which can be used to set default values for\n`HTTPRequest` attributes.  For example::\n\n    AsyncHTTPClient.configure(\n        None, defaults=dict(user_agent=\"MyUserAgent\"))\n    # or with force_instance:\n    client = AsyncHTTPClient(force_instance=True,\n        defaults=dict(user_agent=\"MyUserAgent\"))\n\n.. versionchanged:: 5.0\n   The ``io_loop`` argument (deprecated since version 4.1) has been removed.",
    "1.4.1": null,
    "1.4.2": null,
    "1.5.1": [
        "    def test_destructor_log(self):\n        # Regression test for\n        # https://github.com/tornadoweb/tornado/issues/2539\n        #\n        # In the past, the following program would log an\n        # \"inconsistent AsyncHTTPClient cache\" error from a destructor\n        # when the process is shutting down. The shutdown process is\n        # subtle and I don't fully understand it; the failure does not\n        # manifest if that lambda isn't there or is a simpler object\n        # like an int (nor does it manifest in the tornado test suite\n        # as a whole, which is why we use this subprocess).\n        proc = subprocess.run(\n            [\n                sys.executable,\n                \"-c\",\n                \"from tornado.httpclient import HTTPClient; f = lambda: None; c = HTTPClient()\",\n            ],\n            stdout=subprocess.PIPE,\n            stderr=subprocess.STDOUT,\n            check=True,\n        )\n        if proc.stdout:\n            print(\"STDOUT:\")\n            print(to_unicode(proc.stdout))\n        if proc.stdout:\n            self.fail(\"subprocess produced unexpected output\")"
    ],
    "1.5.2": [
        "tornado/test/httpclient_test.py"
    ],
    "2.1.1": [
        [
            "E           AssertionError: subprocess produced unexpected output"
        ]
    ],
    "2.1.2": [
        [
            "self = <tornado.test.httpclient_test.SyncHTTPClientSubprocessTest testMethod=test_destructor_log>\n\n    def test_destructor_log(self):\n        # Regression test for\n        # https://github.com/tornadoweb/tornado/issues/2539\n        #\n        # In the past, the following program would log an\n        # \"inconsistent AsyncHTTPClient cache\" error from a destructor\n        # when the process is shutting down. The shutdown process is\n        # subtle and I don't fully understand it; the failure does not\n        # manifest if that lambda isn't there or is a simpler object\n        # like an int (nor does it manifest in the tornado test suite\n        # as a whole, which is why we use this subprocess).\n        proc = subprocess.run(\n            [\n                sys.executable,\n                \"-c\",\n                \"from tornado.httpclient import HTTPClient; f = lambda: None; c = HTTPClient()\",\n            ],\n            stdout=subprocess.PIPE,\n            stderr=subprocess.STDOUT,\n            check=True,\n        )\n        if proc.stdout:\n            print(\"STDOUT:\")\n            print(to_unicode(proc.stdout))\n        if proc.stdout:\n>           self.fail(\"subprocess produced unexpected output\")",
            "\ntornado/test/httpclient_test.py:707: AssertionError"
        ]
    ],
    "2.2.1": null,
    "2.2.2": null,
    "2.3.1": null,
    "2.3.2": null,
    "3.1.1": [
        "RuntimeError: inconsistent AsyncHTTPClient cache\n"
    ],
    "3.1.2": [
        "Tornado version: 5.1.1\n\nRunning the following code causes RuntimeError: inconsistent AsyncHTTPClient cache\n\nfrom tornado import httpclient\n\n\ndef f():\n    pass\n\n\nc = httpclient.HTTPClient()\nError log:\n\nException ignored in: <bound method HTTPClient.__del__ of <tornado.httpclient.HTTPClient object at 0x7fef4def84a8>>\nTraceback (most recent call last):\n  File \"/\u2588\u2588\u2588\u2588/lib/python3.5/site-packages/tornado/httpclient.py\", line 99, in __del__\n  File \"/\u2588\u2588\u2588\u2588/lib/python3.5/site-packages/tornado/httpclient.py\", line 104, in close\n  File \"/\u2588\u2588\u2588\u2588/lib/python3.5/site-packages/tornado/simple_httpclient.py\", line 139, in close\n  File \"/\u2588\u2588\u2588\u2588/lib/python3.5/site-packages/tornado/httpclient.py\", line 220, in close\nRuntimeError: inconsistent AsyncHTTPClient cache\nSince the error is ignored, it may be harmless to the program. But the error message may confuse some new users, so I think it should be fixed.\n"
    ]
}