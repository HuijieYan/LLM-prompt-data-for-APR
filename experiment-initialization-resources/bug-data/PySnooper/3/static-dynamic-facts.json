{
    "PySnooper:3": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/PySnooper_3/pysnooper/pysnooper.py": {
            "buggy_functions": [
                {
                    "function_name": "get_write_function",
                    "function_code": "def get_write_function(output):\n    if output is None:\n        def write(s):\n            stderr = sys.stderr\n            stderr.write(s)\n    elif isinstance(output, (pycompat.PathLike, str)):\n        def write(s):\n            with open(output_path, 'a') as output_file:\n                output_file.write(s)\n    else:\n        assert isinstance(output, utils.WritableStream)\n        def write(s):\n            output.write(s)\n\n    return write\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 19,
                    "end_line": 33,
                    "variables": {
                        "output": [
                            24,
                            20,
                            29,
                            31
                        ],
                        "stderr": [
                            22,
                            23
                        ],
                        "sys.stderr": [
                            22
                        ],
                        "sys": [
                            22
                        ],
                        "stderr.write": [
                            23
                        ],
                        "s": [
                            27,
                            31,
                            23
                        ],
                        "isinstance": [
                            24,
                            29
                        ],
                        "pycompat.PathLike": [
                            24
                        ],
                        "pycompat": [
                            24
                        ],
                        "str": [
                            24
                        ],
                        "open": [
                            26
                        ],
                        "output_path": [
                            26
                        ],
                        "output_file": [
                            26,
                            27
                        ],
                        "output_file.write": [
                            27
                        ],
                        "utils.WritableStream": [
                            29
                        ],
                        "utils": [
                            29
                        ],
                        "output.write": [
                            31
                        ],
                        "write": [
                            33
                        ]
                    },
                    "filtered_variables": {
                        "output": [
                            24,
                            20,
                            29,
                            31
                        ],
                        "stderr": [
                            22,
                            23
                        ],
                        "sys.stderr": [
                            22
                        ],
                        "sys": [
                            22
                        ],
                        "stderr.write": [
                            23
                        ],
                        "s": [
                            27,
                            31,
                            23
                        ],
                        "pycompat.PathLike": [
                            24
                        ],
                        "pycompat": [
                            24
                        ],
                        "output_path": [
                            26
                        ],
                        "output_file": [
                            26,
                            27
                        ],
                        "output_file.write": [
                            27
                        ],
                        "utils.WritableStream": [
                            29
                        ],
                        "utils": [
                            29
                        ],
                        "output.write": [
                            31
                        ],
                        "write": [
                            33
                        ]
                    },
                    "diff_line_number": 26,
                    "class_data": null,
                    "used_imports": [
                        "import sys",
                        "from . import utils",
                        "from . import pycompat"
                    ],
                    "variable_values": [
                        [
                            {
                                "output": {
                                    "variable_value": "'/tmp/pysnooperghlnabz6/foo.log'",
                                    "variable_type": "str",
                                    "variable_shape": "30"
                                },
                                "stderr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stderr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stderr.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "s": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pycompat.PathLike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pycompat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_file": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_file.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "utils.WritableStream": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "utils": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output.write": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "output": {
                                    "variable_value": "'/tmp/pysnooperghlnabz6/foo.log'",
                                    "variable_type": "str",
                                    "variable_shape": "30"
                                },
                                "stderr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stderr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stderr.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "s": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pycompat.PathLike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pycompat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_file": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_file.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "utils.WritableStream": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "utils": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output.write": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "write": {
                                    "variable_value": "<function get_write_function.<locals>.write at 0x7f2c9ab91d30>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "output": {
                                    "variable_value": "'/tmp/pysnooperfn85zrdi/foo.log'",
                                    "variable_type": "str",
                                    "variable_shape": "30"
                                },
                                "stderr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stderr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stderr.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "s": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pycompat.PathLike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pycompat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_file": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_file.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "utils.WritableStream": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "utils": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output.write": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "output": {
                                    "variable_value": "'/tmp/pysnooperfn85zrdi/foo.log'",
                                    "variable_type": "str",
                                    "variable_shape": "30"
                                },
                                "stderr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stderr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "stderr.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "s": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pycompat.PathLike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "pycompat": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_file": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output_file.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "utils.WritableStream": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "utils": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output.write": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "write": {
                                    "variable_value": "<function get_write_function.<locals>.write at 0x7efe87b25d30>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": {
                "file_scope_functions": [
                    {
                        "code": "def get_write_function(output):\n    if output is None:\n        def write(s):\n            stderr = sys.stderr\n            stderr.write(s)\n    elif isinstance(output, (pycompat.PathLike, str)):\n        def write(s):\n            with open(output_path, 'a') as output_file:\n                output_file.write(s)\n    else:\n        assert isinstance(output, utils.WritableStream)\n        def write(s):\n            output.write(s)\n\n    return write",
                        "signature": "get_write_function(output)"
                    },
                    {
                        "code": "def snoop(output=None, variables=(), depth=1, prefix=''):\n    '''\n    Snoop on the function, writing everything it's doing to stderr.\n\n    This is useful for debugging.\n\n    When you decorate a function with `@pysnooper.snoop()`, you'll get a log of\n    every line that ran in the function and a play-by-play of every local\n    variable that changed.\n\n    If stderr is not easily accessible for you, you can redirect the output to\n    a file::\n\n        @pysnooper.snoop('/my/log/file.log')\n\n    See values of some variables that aren't local variables::\n\n        @pysnooper.snoop(variables=('foo.bar', 'self.whatever'))\n\n    Show snoop lines for functions that your function calls::\n\n        @pysnooper.snoop(depth=2)\n\n    Start all snoop lines with a prefix, to grep for them easily::\n\n        @pysnooper.snoop(prefix='ZZZ ')\n\n    '''\n    write = get_write_function(output)\n    @decorator.decorator\n    def decorate(function, *args, **kwargs):\n        target_code_object = function.__code__\n        with Tracer(target_code_object=target_code_object,\n                    write=write, variables=variables,\n                    depth=depth, prefix=prefix):\n            return function(*args, **kwargs)\n\n    return decorate",
                        "signature": "snoop(output=None, variables=(), depth=1, prefix='')"
                    },
                    {
                        "code": "def write(s):\n    stderr = sys.stderr\n    stderr.write(s)",
                        "signature": "write(s)"
                    },
                    {
                        "code": "def write(s):\n    with open(output_path, 'a') as output_file:\n        output_file.write(s)",
                        "signature": "write(s)"
                    },
                    {
                        "code": "def write(s):\n    output.write(s)",
                        "signature": "write(s)"
                    }
                ],
                "file_scope_classes": []
            },
            "variables_in_file": {
                "output": [
                    65,
                    20,
                    24,
                    29,
                    31
                ],
                "stderr": [
                    22,
                    23
                ],
                "sys.stderr": [
                    22
                ],
                "sys": [
                    22
                ],
                "stderr.write": [
                    23
                ],
                "s": [
                    27,
                    31,
                    23
                ],
                "isinstance": [
                    24,
                    29
                ],
                "pycompat.PathLike": [
                    24
                ],
                "pycompat": [
                    24
                ],
                "str": [
                    24
                ],
                "open": [
                    26
                ],
                "output_path": [
                    26
                ],
                "output_file": [
                    26,
                    27
                ],
                "output_file.write": [
                    27
                ],
                "utils.WritableStream": [
                    29
                ],
                "utils": [
                    29
                ],
                "output.write": [
                    31
                ],
                "write": [
                    65,
                    33,
                    70
                ],
                "get_write_function": [
                    65
                ],
                "target_code_object": [
                    68,
                    69
                ],
                "function.__code__": [
                    68
                ],
                "function": [
                    72,
                    68
                ],
                "Tracer": [
                    69
                ],
                "variables": [
                    70
                ],
                "depth": [
                    71
                ],
                "prefix": [
                    71
                ],
                "args": [
                    72
                ],
                "kwargs": [
                    72
                ],
                "decorator.decorator": [
                    66
                ],
                "decorator": [
                    66
                ],
                "decorate": [
                    74
                ]
            },
            "filtered_variables_in_file": {
                "output": [
                    65,
                    20,
                    24,
                    29,
                    31
                ],
                "stderr": [
                    22,
                    23
                ],
                "sys.stderr": [
                    22
                ],
                "sys": [
                    22
                ],
                "stderr.write": [
                    23
                ],
                "s": [
                    27,
                    31,
                    23
                ],
                "pycompat.PathLike": [
                    24
                ],
                "pycompat": [
                    24
                ],
                "output_path": [
                    26
                ],
                "output_file": [
                    26,
                    27
                ],
                "output_file.write": [
                    27
                ],
                "utils.WritableStream": [
                    29
                ],
                "utils": [
                    29
                ],
                "output.write": [
                    31
                ],
                "write": [
                    65,
                    33,
                    70
                ],
                "get_write_function": [
                    65
                ],
                "target_code_object": [
                    68,
                    69
                ],
                "function.__code__": [
                    68
                ],
                "function": [
                    72,
                    68
                ],
                "Tracer": [
                    69
                ],
                "variables": [
                    70
                ],
                "depth": [
                    71
                ],
                "prefix": [
                    71
                ],
                "args": [
                    72
                ],
                "kwargs": [
                    72
                ],
                "decorator.decorator": [
                    66
                ],
                "decorator": [
                    66
                ],
                "decorate": [
                    74
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/PySnooper_3/tests/test_pysnooper.py",
                "test_function": "test_file_output",
                "test_function_code": "def test_file_output():\n\n    with temp_file_tools.create_temp_folder(prefix='pysnooper') as folder:\n        path = folder / 'foo.log'\n        @pysnooper.snoop(str(path))\n        def my_function(foo):\n            x = 7\n            y = 8\n            return y + x\n        result = my_function('baba')\n        assert result == 15\n        output = path.open().read()\n        assert_output(\n            output,\n            (\n                VariableEntry('foo', value_regex=\"u?'baba'\"),\n                CallEntry(),\n                LineEntry('x = 7'),\n                VariableEntry('x', '7'),\n                LineEntry('y = 8'),\n                VariableEntry('y', '8'),\n                LineEntry('return y + x'),\n                ReturnEntry('return y + x'),\n            )\n        )",
                "test_error": "NameError: name 'output_path' is not defined",
                "full_test_error": "def test_file_output():\n    \n        with temp_file_tools.create_temp_folder(prefix='pysnooper') as folder:\n            path = folder / 'foo.log'\n            @pysnooper.snoop(str(path))\n            def my_function(foo):\n                x = 7\n                y = 8\n                return y + x\n>           result = my_function('baba')\n\ntests/test_pysnooper.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/PySnooper_3/lib/python3.8/site-packages/decorator.py:232: in fun\n    return caller(func, *(extras + args), **kw)\npysnooper/pysnooper.py:72: in decorate\n    return function(*args, **kwargs)\ntests/test_pysnooper.py:178: in my_function\n    @pysnooper.snoop(str(path))\npysnooper/tracer.py:173: in trace\n    self.write('{indent}{newish_string}{name} = {value_repr}'.format(\npysnooper/tracer.py:114: in write\n    self._write(s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = \"Starting var:.. foo = 'baba'\\n\"\n\n    def write(s):\n>       with open(output_path, 'a') as output_file:\nE       NameError: name 'output_path' is not defined\n\npysnooper/pysnooper.py:26: NameError",
                "traceback": "../../envs/PySnooper_3/lib/python3.8/site-packages/decorator.py:232: in fun\n    return caller(func, *(extras + args), **kw)\npysnooper/pysnooper.py:72: in decorate\n    return function(*args, **kwargs)\ntests/test_pysnooper.py:178: in my_function\n    @pysnooper.snoop(str(path))\npysnooper/tracer.py:173: in trace\n    self.write('{indent}{newish_string}{name} = {value_repr}'.format(\npysnooper/tracer.py:114: in write\n    self._write(s)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = \"Starting var:.. foo = 'baba'\\n\"\n\n    def write(s):\n>       with open(output_path, 'a') as output_file:\nE       NameError: name 'output_path' is not defined\n\npysnooper/pysnooper.py:26: NameError",
                "test_function_decorators": []
            }
        ]
    }
}