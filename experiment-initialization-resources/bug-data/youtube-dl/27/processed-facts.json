{
    "1.1.1": "def parse_dfxp_time_expr(time_expr):\n    if not time_expr:\n        return\n\n    mobj = re.match(r'^(?P<time_offset>\\d+(?:\\.\\d+)?)s?$', time_expr)\n    if mobj:\n        return float(mobj.group('time_offset'))\n\n    mobj = re.match(r'^(\\d+):(\\d\\d):(\\d\\d(?:\\.\\d+)?)$', time_expr)\n    if mobj:\n        return 3600 * int(mobj.group(1)) + 60 * int(mobj.group(2)) + float(mobj.group(3))\n",
    "1.1.2": null,
    "1.2.1": "youtube_dl/utils.py",
    "1.2.2": "import re",
    "1.3.1": null,
    "1.3.2": null,
    "1.4.1": null,
    "1.4.2": null,
    "1.5.1": [
        "    def test_parse_dfxp_time_expr(self):\n        self.assertEqual(parse_dfxp_time_expr(None), None)\n        self.assertEqual(parse_dfxp_time_expr(''), None)\n        self.assertEqual(parse_dfxp_time_expr('0.1'), 0.1)\n        self.assertEqual(parse_dfxp_time_expr('0.1s'), 0.1)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01'), 1.0)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01.100'), 1.1)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01:100'), 1.1)"
    ],
    "1.5.2": [
        "test/test_utils.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: None != 1.1"
        ]
    ],
    "2.1.2": [
        [
            "self = <test.test_utils.TestUtil testMethod=test_parse_dfxp_time_expr>\n\n    def test_parse_dfxp_time_expr(self):\n        self.assertEqual(parse_dfxp_time_expr(None), None)\n        self.assertEqual(parse_dfxp_time_expr(''), None)\n        self.assertEqual(parse_dfxp_time_expr('0.1'), 0.1)\n        self.assertEqual(parse_dfxp_time_expr('0.1s'), 0.1)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01'), 1.0)\n        self.assertEqual(parse_dfxp_time_expr('00:00:01.100'), 1.1)\n>       self.assertEqual(parse_dfxp_time_expr('00:00:01:100'), 1.1)",
            "\ntest/test_utils.py:670: AssertionError"
        ]
    ],
    "2.2.1": [
        [
            {
                "time_expr": {
                    "value": "''",
                    "shape": "0",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "time_expr": {
                    "value": "'0.1'",
                    "shape": "3",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 3), match='0.1'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "time_expr": {
                    "value": "'0.1s'",
                    "shape": "4",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 4), match='0.1s'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "time_expr": {
                    "value": "'00:00:01'",
                    "shape": "8",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 8), match='00:00:01'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "time_expr": {
                    "value": "'00:00:01.100'",
                    "shape": "12",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 12), match='00:00:01.100'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ]
    ],
    "2.2.2": [
        [
            {
                "time_expr": "str"
            },
            {}
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ]
    ],
    "2.3.1": [
        [
            {
                "time_expr": {
                    "value": "''",
                    "shape": "0",
                    "omitted": false
                }
            },
            {}
        ],
        [
            {
                "time_expr": {
                    "value": "'0.1'",
                    "shape": "3",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 3), match='0.1'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "time_expr": {
                    "value": "'0.1s'",
                    "shape": "4",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 4), match='0.1s'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "time_expr": {
                    "value": "'00:00:01'",
                    "shape": "8",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 8), match='00:00:01'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "time_expr": {
                    "value": "'00:00:01.100'",
                    "shape": "12",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 12), match='00:00:01.100'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "time_expr": {
                    "value": "'00:00:01:100'",
                    "shape": "12",
                    "omitted": false
                }
            },
            {
                "mobj": {
                    "value": "<re.Match object; span=(0, 12), match='00:00:01:100'>",
                    "shape": null,
                    "omitted": false
                }
            }
        ]
    ],
    "2.3.2": [
        [
            {
                "time_expr": "str"
            },
            {}
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ],
        [
            {
                "time_expr": "str"
            },
            {
                "mobj": "Match"
            }
        ]
    ],
    "3.1.1": [
        "TTML to SRT conversion error\n"
    ],
    "3.1.2": [
        "When running the command:\n\nyoutube-dl.py -f hls-English-2 --write-sub --convert-subtitles srt http://www.nbc.com/undateable/video/west-coast-an-origin-story-walks-into-a-bar/2932364?onid=190056#vc190056=1\nThe video and subtitle download fine but the TTML to SRT conversion errors out with:\n\nWARNING: You have requested to convert dfxp (TTML) subtitles into another format\n, which results in style information loss\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"C:\\Python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"D:\\you\\youtube-dl.py\\__main__.py\", line 19, in <module>\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\__init__.py\", line 410, in main\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\__init__.py\", line 400, in _real_main\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\YoutubeDL.py\", line 1667, in download\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\YoutubeDL.py\", line 672, in extract_info\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\YoutubeDL.py\", line 725, in process_ie_result\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\YoutubeDL.py\", line 672, in extract_info\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\YoutubeDL.py\", line 718, in process_ie_result\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\YoutubeDL.py\", line 1337, in process_video_result\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\YoutubeDL.py\", line 1649, in process_info\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\YoutubeDL.py\", line 1713, in post_process\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\postprocessor\\ffmpeg.py\", line 499,in run\n  File \"D:\\you\\youtube-dl.py\\youtube_dl\\utils.py\", line 1987, in dfxp2srt\nKeyError: u'dur'\n"
    ]
}