{
    "keras:7": {
        "github_issue_title": [
            "Scikit Learn wrapper predict() inappropriately squashes size-1 batch dimension\n"
        ],
        "github_issue_description": [
            "Please make sure that the boxes below are checked before you submit your issue.\nIf your issue is an implementation question, please ask your question on StackOverflow or on the Keras Slack channel instead of opening a GitHub issue.\n\nThank you!\n\n Check that you are up-to-date with the master branch of Keras. You can update with:\npip install git+git://github.com/keras-team/keras.git --upgrade --no-deps\nUsing Keras version 2.2.4\n\n Check that your version of TensorFlow is up-to-date. The installation instructions can be found here.\nUsing Tensorflow version 1.12.0\n\n Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\n\nIf predict() is called on input with shape (1, num_features), then the output is a 0-dimensional array instead of a 1-dimensional array with 1 element.\n\nimport keras\nimport keras.wrappers.scikit_learn\nimport numpy as np\nimport sklearn.linear_model\nimport sklearn.metrics\n\ndef build_net():\n    model = keras.models.Sequential([keras.layers.Dense(units=1, input_dim=2)])\n    model.compile(loss=keras.losses.mean_squared_error, optimizer=\"sgd\")\n    return model\n\nregressor = keras.wrappers.scikit_learn.KerasRegressor(build_fn=build_net)\n# Works with the sklearn regressors\n# regressor = sklearn.linear_model.LinearRegression()\nX = np.zeros((1, 2))\nY = np.zeros((1,))\nregressor.fit(X, Y)\nY_pred = regressor.predict(X)\nprint(Y_pred.shape)  # Is (), should be (1,)\n# As a result, this fails with an exception\n# TypeError: Singleton array array(0., dtype=float32) cannot be considered a valid collection.\nprint(sklearn.metrics.mean_squared_error(y_true=Y, y_pred=Y_pred))\n"
        ]
    }
}