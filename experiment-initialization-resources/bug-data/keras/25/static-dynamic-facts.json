{
    "keras:25": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/keras_25/keras/applications/imagenet_utils.py": {
            "buggy_functions": [
                {
                    "function_name": "_preprocess_numpy_input",
                    "function_code": "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        if x.ndim == 3:\n            x[0, :, :] -= mean[0]\n            x[1, :, :] -= mean[1]\n            x[2, :, :] -= mean[2]\n            if std is not None:\n                x[0, :, :] /= std[0]\n                x[1, :, :] /= std[1]\n                x[2, :, :] /= std[2]\n        else:\n            x[:, 0, :, :] -= mean[0]\n            x[:, 1, :, :] -= mean[1]\n            x[:, 2, :, :] -= mean[2]\n            if std is not None:\n                x[:, 0, :, :] /= std[0]\n                x[:, 1, :, :] /= std[1]\n                x[:, 2, :, :] /= std[2]\n    else:\n        x[..., 0] -= mean[0]\n        x[..., 1] -= mean[1]\n        x[..., 2] -= mean[2]\n        if std is not None:\n            x[..., 0] /= std[0]\n            x[..., 1] /= std[1]\n            x[..., 2] /= std[2]\n    return x\n",
                    "decorators": [],
                    "docstring": "Preprocesses a Numpy array encoding a batch of images.\n\n# Arguments\n    x: Input array, 3D or 4D.\n    data_format: Data format of the image array.\n    mode: One of \"caffe\", \"tf\" or \"torch\".\n        - caffe: will convert the images from RGB to BGR,\n            then will zero-center each color channel with\n            respect to the ImageNet dataset,\n            without scaling.\n        - tf: will scale pixels between -1 and 1,\n            sample-wise.\n        - torch: will scale pixels between 0 and 1 and then\n            will normalize each channel with respect to the\n            ImageNet dataset.\n\n# Returns\n    Preprocessed Numpy array.",
                    "start_line": 21,
                    "end_line": 89,
                    "variables": {
                        "mode": [
                            41,
                            46
                        ],
                        "x": [
                            42,
                            43,
                            44,
                            47,
                            53,
                            54,
                            56,
                            59,
                            65,
                            66,
                            67,
                            68,
                            70,
                            71,
                            72,
                            74,
                            75,
                            76,
                            78,
                            79,
                            80,
                            82,
                            83,
                            84,
                            86,
                            87,
                            88,
                            89
                        ],
                        "mean": [
                            66,
                            67,
                            68,
                            74,
                            75,
                            76,
                            48,
                            82,
                            83,
                            84,
                            60
                        ],
                        "std": [
                            69,
                            70,
                            71,
                            72,
                            77,
                            78,
                            79,
                            80,
                            49,
                            85,
                            86,
                            87,
                            88,
                            61
                        ],
                        "data_format": [
                            64,
                            51
                        ],
                        "x.ndim": [
                            65,
                            53
                        ]
                    },
                    "filtered_variables": {
                        "mode": [
                            41,
                            46
                        ],
                        "x": [
                            42,
                            43,
                            44,
                            47,
                            53,
                            54,
                            56,
                            59,
                            65,
                            66,
                            67,
                            68,
                            70,
                            71,
                            72,
                            74,
                            75,
                            76,
                            78,
                            79,
                            80,
                            82,
                            83,
                            84,
                            86,
                            87,
                            88,
                            89
                        ],
                        "mean": [
                            66,
                            67,
                            68,
                            74,
                            75,
                            76,
                            48,
                            82,
                            83,
                            84,
                            60
                        ],
                        "std": [
                            69,
                            70,
                            71,
                            72,
                            77,
                            78,
                            79,
                            80,
                            49,
                            85,
                            86,
                            87,
                            88,
                            61
                        ],
                        "data_format": [
                            64,
                            51
                        ],
                        "x.ndim": [
                            65,
                            53
                        ]
                    },
                    "diff_line_number": 40,
                    "class_data": null,
                    "used_imports": [],
                    "variable_values": [
                        [
                            {
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "x": {
                                    "variable_value": "array([[[[2.41663406e+02, 2.03615904e+02, 1.23041871e+02],\n         [2.15152637e+02, 2.08487649e+02, 2.16815144e+02],\n         [3.79058542e+00, 2.49232382e+02, 8.73933703e+01],\n         [1.70196961e+02, 1.03808698e+02, 1.48046374e+02],\n         [6.24325820e+01, 1.27759493e+02, 6.36177753e+01],\n         [2.30945994e+02, 7.51293416e+00, 8.10752398e+01],\n         [8.36304052e+01, 2.37704447e+02, 1.22703933e+02],\n         [1.22633475e+01, 5.61721626e+01, 2.32771940e+02],\n         [2.27487144e+02, 1.16136299e+02, 3.17366258e+00],\n         [1.61820815e+01, 3.15959816e+01, 1.22898122e+02]],\n\n        [[3.80391170e+01, 2.73671249e+01, 2.31031509e+02],\n         [2.02836915e+01, 2.17484915e+02, 2.29566057e+02],\n         [1.71827649e+02, 7.71114366e+01, 2.07391680e+02],\n         [8.90508810e+01, 1.38608334e+02, 9.27233783e+01],\n         [8.36671195e+01, 2.26078757e+02, 1.25717388e+02],\n         [1.08952998e+02, 1.50811552e+02, 1.02770126e+02],\n         [1.97547412e+02, 9.24559186e+01, 4.81105984e+01],\n         [1.32331046e+02, 2.54399568e+02, 1.58468488e+02],\n         [2.36455155e+02, 1.49923688e+02, 6.73507002e+01],\n         [2.47137771e+02, 1.25434890e+01, 3.88480545e+01]],\n\n        [[5.85464902e+01, 6.78864645e+01, 1.62598232e+02],\n         [8.79373451e+01, 1.70375412e+02, 1.76474450e+02],\n         [1.03702102e+02, 1.13249898e+02, 5.09899535e+01],\n         [1.86391824e+02, 8.26242042e+01, 4.09171004e+00],\n         [1.94204794e+02, 1.93266804e+00, 8.75795228e+01],\n         [1.68102559e+02, 7.73265158e+01, 4.91335216e+01],\n         [8.73151205e+01, 2.49627467e+02, 2.17882231e+02],\n         [2.15232082e+02, 2.37454181e+02, 5.83880959e+01],\n         [2.49021269e+02, 1.33488963e+02, 1.02243606e+02],\n         [2.44815112e+00, 1.42668436e+02, 1.39295409e+02]],\n\n        [[1.51545810e+02, 4.67342590e+01, 2.18076133e+02],\n         [1.73180561e+02, 9.04688798e+01, 1.18482821e+02],\n         [7.69935874e+00, 1.85520443e+02, 1.44125883e+02],\n         [1.37174605e+02, 2.33810987e+02, 2.41029577e+02],\n         [7.60234794e+01, 1.96867563e+02, 1.08412026e+02],\n         [2.46954815e+02, 1.33280553e+02, 7.64590640e+01],\n         [9.82262042e+01, 1.48115282e+02, 1.35052898e+02],\n         [2.22781081e+02, 9.00437830e+01, 1.04055946e+02],\n         [1.17633326e+02, 2.01450791e+02, 9.73888291e+00],\n         [2.44438112e+02, 2.01114539e+02, 2.00125456e+02]],\n\n        [[4.11833383e+01, 4.52329496e+01, 3.89976623e+00],\n         [1.93190558e+02, 9.82971671e+01, 2.18072749e+02],\n         [1.28803369e+02, 1.27502868e+02, 1.22856485e+02],\n         [5.17837921e+01, 1.82143682e+02, 1.12160802e+02],\n         [1.35454860e+01, 2.45092769e+00, 1.56536121e+02],\n         [2.04477329e+02, 1.89122553e+02, 8.88060904e+01],\n         [1.93783840e+02, 1.58011310e+02, 1.74958876e+02],\n         [1.88423832e+02, 2.08784022e+01, 1.05822616e+01],\n         [5.15136427e+01, 8.30971073e+01, 2.52819048e+02],\n         [2.32530159e+02, 8.62054800e-01, 1.35000355e+02]],\n\n        [[1.06047046e+01, 3.18632940e+01, 1.51297953e+02],\n         [1.22138253e+01, 1.93907520e+02, 1.97540743e+02],\n         [9.55800786e+01, 2.21292850e+02, 1.36022419e+02],\n         [2.54274939e+02, 1.48925588e+02, 1.96331159e+02],\n         [4.53581182e+01, 1.29957023e+02, 3.23200720e+01],\n         [1.50977988e+02, 4.72790729e+01, 2.42006612e+02],\n         [1.98778418e+02, 1.29118838e+02, 1.05779293e+02],\n         [1.59703533e+01, 9.22751935e+00, 1.98985976e+02],\n         [2.38434902e+02, 1.71486685e+02, 2.25210448e+02],\n         [2.63425668e+01, 2.11846326e+02, 2.34812738e+02]],\n\n        [[9.05936404e+01, 1.09886191e+02, 1.59693864e+02],\n         [8.25665131e+01, 1.98068748e+02, 2.14728512e+01],\n         [1.52847735e+02, 1.32934048e+02, 2.23454154e+02],\n         [1.47050005e+01, 1.60280411e+02, 1.44632623e+02],\n         [1.10852959e+02, 8.87244471e+01, 2.19176335e+02],\n         [2.35624245e+02, 1.54937333e+02, 1.20170508e+02],\n         [8.11022214e+01, 1.37977531e+02, 2.04974264e+02],\n         [7.10442541e+01, 2.04407116e+02, 1.87942000e+02],\n         [1.67715642e+02, 1.72271738e+02, 1.94056109e+02],\n         [2.19939923e+02, 2.47995613e+02, 5.02941462e+01]],\n\n        [[1.80637345e+00, 1.90929761e+02, 2.05572172e+02],\n         [2.31059200e+02, 1.38436438e+02, 9.79303256e+01],\n         [2.15278119e+02, 8.58775673e+01, 2.29022086e+02],\n         [1.27121625e+02, 4.22711718e+01, 1.95998351e+01],\n         [2.20781210e+02, 2.41314087e+02, 1.00964055e+02],\n         [8.11357304e+01, 2.15045193e+02, 1.05315793e+01],\n         [2.49928948e+01, 6.79232932e+01, 6.45915316e+01],\n         [1.06164339e+02, 1.16961862e+02, 1.83123168e+02],\n         [1.53897458e+02, 1.61068263e+02, 2.53971259e+02],\n         [2.42641662e+02, 2.25928618e+02, 1.03430054e+02]],\n\n        [[6.04644744e+01, 1.89833603e+02, 2.53726236e+02],\n         [9.90120593e+01, 1.38564662e+02, 2.42912718e+01],\n         [8.91276648e+01, 6.46580567e+01, 1.33545660e+02],\n         [1.06980425e+02, 1.88945746e+02, 1.73754320e+02],\n         [2.02665560e+02, 6.46797326e+01, 1.51239487e+02],\n         [2.00164440e-01, 4.01867732e+01, 4.36162380e+01],\n         [1.92301065e+02, 1.57141966e+02, 1.87191478e+02],\n         [1.69152544e+02, 2.37467007e+01, 6.78505092e+00],\n         [9.36080408e+00, 5.04502118e+01, 1.85864525e+01],\n         [5.67963098e+01, 1.83669262e+02, 1.95530900e+02]],\n\n        [[1.45124513e+02, 6.94692701e+01, 1.30026242e+02],\n         [2.52424233e+02, 4.93688309e+00, 3.24898898e+01],\n         [4.15722730e+01, 1.65409602e+02, 3.73231701e+01],\n         [2.54204036e+02, 1.73036660e+02, 1.61341606e+02],\n         [2.09614572e+02, 1.86439227e+01, 8.13309778e+01],\n         [1.21685514e+01, 2.10881438e+02, 1.26238203e+02],\n         [3.29506492e+01, 1.36092804e+02, 1.19386423e+02],\n         [1.49570030e+02, 1.78614319e+02, 4.55908383e+00],\n         [2.04328831e+02, 6.89178765e+01, 1.29098704e+02],\n         [1.40635206e+02, 8.94596776e+01, 2.32848681e+02]]],\n\n\n       [[[2.06430884e+02, 6.54103928e+01, 2.28555036e+02],\n         [2.16769508e+02, 1.47436030e+02, 4.47066494e+01],\n         [3.85374175e+01, 1.72006684e+02, 1.77803224e+02],\n         [1.40081136e+02, 1.38487109e+02, 1.56164995e+02],\n         [9.89391041e+01, 2.34393133e+02, 1.61199092e+02],\n         [2.19571361e+02, 2.53867013e+01, 2.41217871e+02],\n         [4.96187609e+01, 5.70851144e+01, 1.75317518e+02],\n         [1.79338671e+02, 9.58482224e+01, 8.16841682e+01],\n         [1.05501206e+02, 6.11665750e+01, 2.35875055e+02],\n         [2.31399970e+02, 1.79085261e+00, 1.86131721e+02]],\n\n        [[1.67402866e+02, 9.76236748e+01, 9.79232260e+01],\n         [7.89623895e+01, 1.42734735e+02, 3.95514131e+01],\n         [5.63507543e+01, 2.14348334e+02, 2.39689939e+02],\n         [2.70117699e+01, 1.26545431e+02, 2.32468651e+01],\n         [2.12231523e+02, 3.88660625e+01, 7.82508737e+01],\n         [2.01144849e+02, 1.93338726e+02, 2.44964931e+02],\n         [2.15669674e+02, 2.35619735e+02, 1.05443482e+01],\n         [2.09015220e+02, 1.69197697e+02, 1.83757680e+02],\n         [1.15547382e+02, 1.68977515e+02, 8.35709797e+01],\n         [2.51477457e+02, 1.31395658e+02, 7.73528184e+01]],\n\n        [[1.68985504e+02, 8.15947974e+01, 1.79970759e+02],\n         [8.09945708e+01, 5.61016290e+01, 1.57719384e+02],\n         [1.53016656e+02, 3.01554186e+01, 7.14287649e+00],\n         [1.63888072e+02, 2.46331891e+02, 1.22318708e-01],\n         [2.40636341e+01, 8.81094700e+01, 1.50941627e+02],\n         [3.93895146e+01, 1.63127317e+02, 1.05060911e+02],\n         [2.28609495e+02, 1.32173818e+02, 8.85498930e+01],\n         [6.03612963e+01, 1.93605390e+02, 6.18963649e+01],\n         [3.23784785e+01, 2.96908267e+01, 1.12093550e+02],\n         [1.63282371e+02, 1.51932455e+02, 8.04246258e+00]],\n\n        [[2.02416685e+02, 2.46114262e+02, 1.92933434e+01],\n         [7.16237575e+01, 1.84056637e+02, 9.54456331e+01],\n         [3.39483224e+01, 1.72491151e+02, 1.21968680e+02],\n         [5.48687098e+01, 1.37323849e+01, 2.41673018e+02],\n         [2.89108094e+01, 6.68660490e+01, 1.49997545e+02],\n         [3.36455812e+01, 1.17652388e+02, 5.52555242e+01],\n         [7.83125047e+01, 9.46990072e+01, 2.42809156e+02],\n         [8.99899679e+01, 2.08633844e+02, 2.31630684e+02],\n         [4.00592635e+01, 1.42061724e+02, 1.04368368e+02],\n         [1.65995669e+02, 7.80223437e+00, 5.36981327e+01]],\n\n        [[1.75703505e+02, 2.19266089e+02, 1.89745230e+02],\n         [1.66333334e+01, 6.56831615e+01, 7.01521470e+00],\n         [4.56280268e+01, 1.33883313e+02, 1.85363019e+01],\n         [1.16392024e+02, 1.61670654e+02, 1.05671287e+02],\n         [4.82124525e+01, 1.52923863e+01, 1.00692632e+00],\n         [1.95764568e+02, 2.04074439e+02, 2.52279808e+02],\n         [2.25291534e+02, 1.69338778e+02, 1.37522840e+02],\n         [1.88447183e+02, 9.78101337e+01, 1.18845392e+02],\n         [5.53870763e+01, 8.26370725e+01, 8.42582639e+01],\n         [1.67877993e+02, 6.12615538e+01, 1.42412043e+02]],\n\n        [[2.27783963e+02, 1.83517735e+01, 8.66520077e+01],\n         [2.07358213e+02, 1.01304480e+01, 2.18409960e+02],\n         [1.48922439e+02, 1.42344430e+02, 9.42655416e+01],\n         [2.47183051e+02, 2.40924913e+02, 2.35519391e+02],\n         [9.11438012e+00, 1.05278785e+02, 2.21241332e+02],\n         [1.27098733e+02, 2.74152094e+01, 1.13663938e+00],\n         [6.13884692e+01, 2.08271477e+02, 1.36703593e+02],\n         [1.02344182e+02, 3.85275078e+01, 1.18087003e+02],\n         [1.23106846e+02, 1.37993035e+02, 2.64319857e+01],\n         [6.14150502e+01, 5.42802277e+01, 6.46179095e+01]],\n\n        [[3.10208778e+01, 4.43996148e+01, 7.51836226e+01],\n         [1.72914511e+02, 1.60740839e+02, 4.89583168e+01],\n         [9.94720189e+01, 2.60707304e+01, 4.67021987e+01],\n         [4.06031848e+01, 4.91058801e+00, 2.48224459e+02],\n         [1.93358651e+02, 2.28329347e+02, 2.20712798e+02],\n         [2.44063226e+02, 1.20596408e+02, 2.36473027e+02],\n         [1.14743843e+02, 8.93143668e+01, 7.44585259e+01],\n         [8.45436738e+01, 1.44133284e+02, 7.77973171e+01],\n         [2.20498281e+02, 5.11632798e+01, 8.47073559e+01],\n         [3.76837886e+01, 6.32768212e+01, 1.70675453e+02]],\n\n        [[1.21407263e+02, 2.25032431e+02, 8.27438904e+01],\n         [3.73995000e+01, 2.42816755e+02, 2.33199219e+02],\n         [2.29847187e+02, 1.12634727e+02, 1.84687862e+02],\n         [4.68175482e+01, 2.38402733e+02, 9.95028244e+01],\n         [1.66416464e+02, 5.70375306e+01, 1.52967235e+02],\n         [1.38808171e+02, 1.85377846e+02, 1.65419610e+02],\n         [1.68640017e+02, 6.90514256e+01, 1.35906362e+02],\n         [2.50119204e+02, 1.83432861e+02, 1.89070278e+02],\n         [1.42766583e+02, 2.41812421e+02, 6.62445438e+01],\n         [1.68878780e+01, 2.45228121e+02, 1.70124010e+02]],\n\n        [[4.59693715e+00, 1.75892145e+02, 6.19181345e+01],\n         [5.44313609e+01, 1.39617834e+02, 3.30898562e+01],\n         [2.09942020e+02, 1.72817235e+02, 1.61525268e+02],\n         [2.38466248e+02, 5.56784223e+01, 1.61080621e+02],\n         [6.56925732e+01, 1.25548595e+02, 2.24546189e+02],\n         [1.25776007e+02, 1.63155037e+01, 1.21234682e+02],\n         [6.23847908e+01, 1.78154400e+01, 1.30750118e+02],\n         [8.03500041e+01, 2.34123099e+02, 1.53803697e+02],\n         [2.40823592e+02, 3.65365206e+01, 1.46218142e+01],\n         [1.03504542e+02, 2.30489319e+02, 1.79538058e+02]],\n\n        [[2.25289634e+00, 1.78396074e+02, 1.48334228e+02],\n         [1.18444968e+01, 2.20867183e+02, 2.52305832e+02],\n         [2.32220119e+02, 7.22526902e+01, 2.17966841e+02],\n         [1.47082575e+02, 2.54583082e+02, 2.29973026e+02],\n         [2.09777420e+02, 8.04909600e+01, 5.99592284e+01],\n         [2.06103359e+02, 8.11454077e+01, 1.21246529e+02],\n         [2.06504922e+02, 2.20015953e+02, 2.21327608e+02],\n         [8.90199198e+01, 1.83387933e+02, 5.40606005e+01],\n         [8.54980661e+01, 1.81832226e+02, 1.02133440e+02],\n         [1.83974028e+02, 2.11950768e+02, 7.47029975e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "x": {
                                    "variable_value": "array([[[[ 1.91028712e+01,  8.68369035e+01,  1.17983406e+02],\n         [ 1.12876144e+02,  9.17086488e+01,  9.14726368e+01],\n         [-1.65456297e+01,  1.32453382e+02, -1.19889415e+02],\n         [ 4.41073740e+01, -1.29703024e+01,  4.65169611e+01],\n         [-4.03212247e+01,  1.09804929e+01, -6.12474180e+01],\n         [-2.28637602e+01, -1.09266066e+02,  1.07265994e+02],\n         [ 1.87649333e+01,  1.20925447e+02, -4.00495948e+01],\n         [ 1.28832940e+02, -6.06068374e+01, -1.11416652e+02],\n         [-1.00765337e+02, -6.42701463e-01,  1.03807144e+02],\n         [ 1.89591221e+01, -8.51830184e+01, -1.07497919e+02]],\n\n        [[ 1.27092509e+02, -8.94118751e+01, -8.56408830e+01],\n         [ 1.25627057e+02,  1.00705915e+02, -1.03396309e+02],\n         [ 1.03452680e+02, -3.96675634e+01,  4.81476485e+01],\n         [-1.12156217e+01,  2.18293337e+01, -3.46291190e+01],\n         [ 2.17783877e+01,  1.09299757e+02, -4.00128805e+01],\n         [-1.16887438e+00,  3.40325522e+01, -1.47270019e+01],\n         [-5.58284016e+01, -2.43230814e+01,  7.38674116e+01],\n         [ 5.45294883e+01,  1.37620568e+02,  8.65104626e+00],\n         [-3.65882998e+01,  3.31446878e+01,  1.12775155e+02],\n         [-6.50909455e+01, -1.04235511e+02,  1.23457771e+02]],\n\n        [[ 5.86592320e+01, -4.88925355e+01, -6.51335098e+01],\n         [ 7.25354497e+01,  5.35964124e+01, -3.57426549e+01],\n         [-5.29490465e+01, -3.52910195e+00, -1.99778976e+01],\n         [-9.98472900e+01, -3.41547958e+01,  6.27118236e+01],\n         [-1.63594772e+01, -1.14846332e+02,  7.05247937e+01],\n         [-5.48054784e+01, -3.94524842e+01,  4.44225588e+01],\n         [ 1.13943231e+02,  1.32848467e+02, -3.63648795e+01],\n         [-4.55509041e+01,  1.20675181e+02,  9.15520818e+01],\n         [-1.69539395e+00,  1.67099631e+01,  1.25341269e+02],\n         [ 3.53564094e+01,  2.58894360e+01, -1.21231849e+02]],\n\n        [[ 1.14137133e+02, -7.00447410e+01,  2.78658098e+01],\n         [ 1.45438214e+01, -2.63101202e+01,  4.95005613e+01],\n         [ 4.01868830e+01,  6.87414433e+01, -1.15980641e+02],\n         [ 1.37090577e+02,  1.17031987e+02,  1.34946053e+01],\n         [ 4.47302608e+00,  8.00885627e+01, -4.76565206e+01],\n         [-2.74799360e+01,  1.65015528e+01,  1.23274815e+02],\n         [ 3.11138981e+01,  3.13362819e+01, -2.54537958e+01],\n         [ 1.16946155e-01, -2.67352170e+01,  9.91010815e+01],\n         [-9.42001171e+01,  8.46717909e+01, -6.04667389e+00],\n         [ 9.61864557e+01,  8.43355394e+01,  1.20758112e+02]],\n\n        [[-1.00039234e+02, -7.15460504e+01, -8.24966617e+01],\n         [ 1.14133749e+02, -1.84818329e+01,  6.95105579e+01],\n         [ 1.89174850e+01,  1.07238677e+01,  5.12336899e+00],\n         [ 8.22180222e+00,  6.53646820e+01, -7.18962079e+01],\n         [ 5.25971213e+01, -1.14328072e+02, -1.10134514e+02],\n         [-1.51329096e+01,  7.23435534e+01,  8.07973292e+01],\n         [ 7.10198756e+01,  4.12323097e+01,  7.01038397e+01],\n         [-9.33567384e+01, -9.59005978e+01,  6.47438325e+01],\n         [ 1.48880048e+02, -3.36818927e+01, -7.21663573e+01],\n         [ 3.10613553e+01, -1.15916945e+02,  1.08850159e+02]],\n\n        [[ 4.73589532e+01, -8.49157060e+01, -1.13075295e+02],\n         [ 9.36017427e+01,  7.71285205e+01, -1.11466175e+02],\n         [ 3.20834191e+01,  1.04513850e+02, -2.80999214e+01],\n         [ 9.23921591e+01,  3.21465882e+01,  1.30594939e+02],\n         [-7.16189280e+01,  1.31780230e+01, -7.83218818e+01],\n         [ 1.38067612e+02, -6.94999271e+01,  2.72979882e+01],\n         [ 1.84029262e+00,  1.23398375e+01,  7.50984180e+01],\n         [ 9.50469756e+01, -1.07551481e+02, -1.07709647e+02],\n         [ 1.21271448e+02,  5.47076854e+01,  1.14754902e+02],\n         [ 1.30873738e+02,  9.50673260e+01, -9.73374332e+01]],\n\n        [[ 5.57548639e+01, -6.89280872e+00, -3.30863596e+01],\n         [-8.24661488e+01,  8.12897476e+01, -4.11134869e+01],\n         [ 1.19515154e+02,  1.61550478e+01,  2.91677350e+01],\n         [ 4.06936234e+01,  4.35014110e+01, -1.08975000e+02],\n         [ 1.15237335e+02, -2.80545529e+01, -1.28270407e+01],\n         [ 1.62315077e+01,  3.81583333e+01,  1.11944245e+02],\n         [ 1.01035264e+02,  2.11985307e+01, -4.25777786e+01],\n         [ 8.40030002e+01,  8.76281164e+01, -5.26357459e+01],\n         [ 9.01171091e+01,  5.54927384e+01,  4.40356422e+01],\n         [-5.36448538e+01,  1.31216613e+02,  9.62599225e+01]],\n\n        [[ 1.01633172e+02,  7.41507606e+01, -1.21873627e+02],\n         [-6.00867441e+00,  2.16574375e+01,  1.07379200e+02],\n         [ 1.25083086e+02, -3.09014327e+01,  9.15981186e+01],\n         [-8.43391649e+01, -7.45078282e+01,  3.44162522e+00],\n         [-2.97494509e+00,  1.24535087e+02,  9.71012101e+01],\n         [-9.34074207e+01,  9.82661933e+01, -4.25442696e+01],\n         [-3.93474684e+01, -4.88557068e+01, -9.86871052e+01],\n         [ 7.91841678e+01,  1.82861657e-01, -1.75156614e+01],\n         [ 1.50032259e+02,  4.42892625e+01,  3.02174582e+01],\n         [-5.08945887e-01,  1.09149618e+02,  1.18961662e+02]],\n\n        [[ 1.49787236e+02,  7.30546034e+01, -6.32155256e+01],\n         [-7.96477282e+01,  2.17856621e+01, -2.46679407e+01],\n         [ 2.96066604e+01, -5.21209433e+01, -3.45523352e+01],\n         [ 6.98153202e+01,  7.21667458e+01, -1.66995752e+01],\n         [ 4.73004869e+01, -5.20992674e+01,  7.89855604e+01],\n         [-6.03227620e+01, -7.65922268e+01, -1.23479836e+02],\n         [ 8.32524776e+01,  4.03629659e+01,  6.86210648e+01],\n         [-9.71539491e+01, -9.30322993e+01,  4.54725443e+01],\n         [-8.53525475e+01, -6.63287882e+01, -1.14319196e+02],\n         [ 9.15919002e+01,  6.68902618e+01, -6.68836902e+01]],\n\n        [[ 2.60872423e+01, -4.73097299e+01,  2.14445126e+01],\n         [-7.14491102e+01, -1.11842117e+02,  1.28744233e+02],\n         [-6.66158299e+01,  4.86306019e+01, -8.21077270e+01],\n         [ 5.74026058e+01,  5.62576598e+01,  1.30524036e+02],\n         [-2.26080222e+01, -9.81350773e+01,  8.59345724e+01],\n         [ 2.22992027e+01,  9.41024385e+01, -1.11511449e+02],\n         [ 1.54474232e+01,  1.93138044e+01, -9.07293508e+01],\n         [-9.93799162e+01,  6.18353185e+01,  2.58900297e+01],\n         [ 2.51597042e+01, -4.78611235e+01,  8.06488315e+01],\n         [ 1.28909681e+02, -2.73193224e+01,  1.69552059e+01]]],\n\n\n       [[[ 1.24616036e+02, -5.13686072e+01,  8.27508838e+01],\n         [-5.92323506e+01,  3.06570301e+01,  9.30895077e+01],\n         [ 7.38642239e+01,  5.52276840e+01, -8.51425825e+01],\n         [ 5.22259949e+01,  2.17081095e+01,  1.64011361e+01],\n         [ 5.72600917e+01,  1.17614133e+02, -2.47408959e+01],\n         [ 1.37278871e+02, -9.13922987e+01,  9.58913615e+01],\n         [ 7.13785176e+01, -5.96938856e+01, -7.40612391e+01],\n         [-2.22548318e+01, -2.09307776e+01,  5.56586709e+01],\n         [ 1.31936055e+02, -5.56124250e+01, -1.81787938e+01],\n         [ 8.21927209e+01, -1.14988147e+02,  1.07719970e+02]],\n\n        [[-6.01577396e+00, -1.91553252e+01,  4.37228662e+01],\n         [-6.43875869e+01,  2.59557355e+01, -4.47176105e+01],\n         [ 1.35750939e+02,  9.75693343e+01, -6.73292457e+01],\n         [-8.06921349e+01,  9.76643142e+00, -9.66682301e+01],\n         [-2.56881263e+01, -7.79129375e+01,  8.85515226e+01],\n         [ 1.41025931e+02,  7.65597261e+01,  7.74648491e+01],\n         [-9.33946518e+01,  1.18840735e+02,  9.19896741e+01],\n         [ 7.98186802e+01,  5.24186972e+01,  8.53352195e+01],\n         [-2.03680203e+01,  5.21985147e+01, -8.13261849e+00],\n         [-2.65861816e+01,  1.46166582e+01,  1.27797457e+02]],\n\n        [[ 7.60317589e+01, -3.51842026e+01,  4.53055036e+01],\n         [ 5.37803836e+01, -6.06773710e+01, -4.26854292e+01],\n         [-9.67961235e+01, -8.66235814e+01,  2.93366562e+01],\n         [-1.03816681e+02,  1.29552891e+02,  4.02080724e+01],\n         [ 4.70026273e+01, -2.86695300e+01, -9.96163659e+01],\n         [ 1.12191106e+00,  4.63483175e+01, -8.42904854e+01],\n         [-1.53891070e+01,  1.53948182e+01,  1.04929495e+02],\n         [-4.20426351e+01,  7.68263903e+01, -6.33187037e+01],\n         [ 8.15455044e+00, -8.70881733e+01, -9.13015215e+01],\n         [-9.58965374e+01,  3.51534546e+01,  3.96023711e+01]],\n\n        [[-8.46456566e+01,  1.29335262e+02,  7.87366851e+01],\n         [-8.49336690e+00,  6.72776368e+01, -5.20562425e+01],\n         [ 1.80296802e+01,  5.57121511e+01, -8.97316776e+01],\n         [ 1.37734018e+02, -1.03046615e+02, -6.88112902e+01],\n         [ 4.60585447e+01, -4.99129510e+01, -9.47691906e+01],\n         [-4.86834758e+01,  8.73387542e-01, -9.00344188e+01],\n         [ 1.38870156e+02, -2.20799928e+01, -4.53674953e+01],\n         [ 1.27691684e+02,  9.18548439e+01, -3.36900321e+01],\n         [ 4.29368272e-01,  2.52827241e+01, -8.36207365e+01],\n         [-5.02408673e+01, -1.08976766e+02,  4.23156685e+01]],\n\n        [[ 8.58062304e+01,  1.02487089e+02,  5.20235050e+01],\n         [-9.69237853e+01, -5.10958385e+01, -1.07046667e+02],\n         [-8.54026981e+01,  1.71043129e+01, -7.80519732e+01],\n         [ 1.73228687e+00,  4.48916541e+01, -7.28797637e+00],\n         [-1.02932074e+02, -1.01486614e+02, -7.54675475e+01],\n         [ 1.48340808e+02,  8.72954394e+01,  7.20845685e+01],\n         [ 3.35838398e+01,  5.25597779e+01,  1.01611534e+02],\n         [ 1.49063917e+01, -1.89688663e+01,  6.47671830e+01],\n         [-1.96807361e+01, -3.41419275e+01, -6.82929237e+01],\n         [ 3.84730427e+01, -5.55174462e+01,  4.41979934e+01]],\n\n        [[-1.72869923e+01, -9.84272265e+01,  1.04103963e+02],\n         [ 1.14470960e+02, -1.06648552e+02,  8.36782126e+01],\n         [-9.67345844e+00,  2.55654297e+01,  2.52424389e+01],\n         [ 1.31580391e+02,  1.24145913e+02,  1.23503051e+02],\n         [ 1.17302332e+02, -1.15002153e+01, -1.14565620e+02],\n         [-1.02802361e+02, -8.93637906e+01,  3.41873304e+00],\n         [ 3.27645932e+01,  9.14924769e+01, -6.22915308e+01],\n         [ 1.41480027e+01, -7.82514922e+01, -2.13358181e+01],\n         [-7.75070143e+01,  2.12140348e+01, -5.73154424e-01],\n         [-3.93210905e+01, -6.24987723e+01, -6.22649498e+01]],\n\n        [[-2.87553774e+01, -7.23793852e+01, -9.26591222e+01],\n         [-5.49806832e+01,  4.39618390e+01,  4.92345112e+01],\n         [-5.72368013e+01, -9.07082696e+01, -2.42079811e+01],\n         [ 1.44285459e+02, -1.11868412e+02, -8.30768152e+01],\n         [ 1.16773798e+02,  1.11550347e+02,  6.96786511e+01],\n         [ 1.32534027e+02,  3.81740847e+00,  1.20383226e+02],\n         [-2.94804741e+01, -2.74646332e+01, -8.93615748e+00],\n         [-2.61416829e+01,  2.73542842e+01, -3.91363262e+01],\n         [-1.92316441e+01, -6.56157202e+01,  9.68182809e+01],\n         [ 6.67364534e+01, -5.35021788e+01, -8.59962114e+01]],\n\n        [[-2.11951096e+01,  1.08253431e+02, -2.27273675e+00],\n         [ 1.29260219e+02,  1.26037755e+02, -8.62805000e+01],\n         [ 8.07488620e+01, -4.14427255e+00,  1.06167187e+02],\n         [-4.43617563e+00,  1.21623733e+02, -7.68624518e+01],\n         [ 4.90282346e+01, -5.97414694e+01,  4.27364644e+01],\n         [ 6.14806099e+01,  6.85988456e+01,  1.51281708e+01],\n         [ 3.19673616e+01, -4.77275744e+01,  4.49600174e+01],\n         [ 8.51312775e+01,  6.66538611e+01,  1.26439204e+02],\n         [-3.76944562e+01,  1.25033421e+02,  1.90865828e+01],\n         [ 6.61850099e+01,  1.28449121e+02, -1.06792122e+02]],\n\n        [[-4.20208655e+01,  5.91131453e+01, -1.19083063e+02],\n         [-7.08491438e+01,  2.28388340e+01, -6.92486391e+01],\n         [ 5.75862676e+01,  5.60382353e+01,  8.62620202e+01],\n         [ 5.71416207e+01, -6.11005777e+01,  1.14786248e+02],\n         [ 1.20607189e+02,  8.76959455e+00, -5.79874268e+01],\n         [ 1.72956818e+01, -1.00463496e+02,  2.09600670e+00],\n         [ 2.68111181e+01, -9.89635600e+01, -6.12952092e+01],\n         [ 4.98646965e+01,  1.17344099e+02, -4.33299959e+01],\n         [-8.93171858e+01, -8.02424794e+01,  1.17143592e+02],\n         [ 7.55990582e+01,  1.13710319e+02, -2.01754585e+01]],\n\n        [[ 4.43952280e+01,  6.16170743e+01, -1.21427104e+02],\n         [ 1.48366832e+02,  1.04088183e+02, -1.11835503e+02],\n         [ 1.14027841e+02, -4.45263098e+01,  1.08540119e+02],\n         [ 1.26034026e+02,  1.37804082e+02,  2.34025748e+01],\n         [-4.39797716e+01, -3.62880400e+01,  8.60974197e+01],\n         [ 1.73075288e+01, -3.56335923e+01,  8.24233592e+01],\n         [ 1.17388608e+02,  1.03236953e+02,  8.28249220e+01],\n         [-4.98783995e+01,  6.66089326e+01, -3.46600802e+01],\n         [-1.80556025e+00,  6.50532255e+01, -3.81819339e+01],\n         [-2.92360025e+01,  9.51717684e+01,  6.02940276e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[8.32939097e+01, 1.58826939e+02, 7.11201740e+01],\n         [2.12570344e+02, 8.12816532e+01, 1.08115499e+02],\n         [1.00949471e+02, 1.45571563e+02, 5.52501279e+01],\n         [5.76643430e+01, 1.82750210e+02, 2.01354084e+02],\n         [8.17956587e+00, 1.44864018e+02, 1.94543959e+02],\n         [6.18931883e+01, 7.95939616e+01, 2.52472131e+02],\n         [2.19722055e+02, 1.91902512e+02, 8.42259063e+01],\n         [2.45664731e+02, 1.79469673e+02, 6.10420054e+01],\n         [1.57249748e+02, 3.76921889e+01, 7.11695633e+00],\n         [1.58486588e+02, 1.69843766e+02, 6.82272067e+01]],\n\n        [[7.41588745e+01, 1.47735276e+02, 2.16915336e+02],\n         [8.06814117e+01, 2.35773665e+02, 1.66306120e+01],\n         [2.50083418e+02, 1.19505114e+02, 2.18595520e+02],\n         [2.01894447e+02, 5.04923547e+01, 2.54989726e+02],\n         [1.25957612e+02, 5.87114596e+01, 9.83767651e+01],\n         [1.92293558e+02, 3.15090520e+00, 6.85355295e+01],\n         [7.01852869e+01, 1.90956137e+02, 3.16784672e+01],\n         [2.41445836e+02, 3.31370839e+01, 6.12323510e+01],\n         [5.91224431e+01, 4.68511718e+01, 2.52293980e+01],\n         [1.93763536e+02, 9.96484558e+00, 3.50428357e+00]],\n\n        [[6.36247879e+01, 1.53036435e+02, 1.01352075e+02],\n         [1.63673209e+02, 9.25395631e+01, 2.42178073e+02],\n         [1.44209413e+00, 8.33718771e+01, 2.48003900e+02],\n         [8.59777969e+01, 1.89690113e+02, 2.38718649e+02],\n         [1.49194284e+00, 4.15898406e+01, 1.40549142e+02],\n         [1.83352825e+02, 2.43015957e+02, 5.14076920e+01],\n         [1.45798828e+02, 2.21457378e+02, 2.15407526e+02],\n         [4.13744707e+01, 5.02642714e+00, 1.99284968e+02],\n         [6.25148687e+01, 1.02213343e+02, 1.63619448e+02],\n         [1.38280469e+02, 2.31347533e+02, 1.42720418e+02]],\n\n        [[2.26284947e+02, 2.34294185e+02, 5.33828973e+01],\n         [2.30347062e+02, 2.47942970e+02, 2.37227402e+02],\n         [2.00516240e+02, 6.83728375e+01, 6.81649988e+01],\n         [2.21013281e+02, 2.36321624e+02, 1.52823951e+02],\n         [9.41833489e+01, 1.30868433e+02, 1.99747449e+02],\n         [2.47930235e+02, 3.22147062e+01, 2.24011772e+02],\n         [2.88926995e+01, 3.53298019e+01, 2.18867190e+02],\n         [1.24246753e+02, 1.49067494e+02, 1.07749480e+02],\n         [7.54923501e+01, 1.60586197e+02, 7.62605643e+00],\n         [2.41053467e+02, 1.39505112e+02, 1.27735954e+02]],\n\n        [[2.38834910e+02, 1.91662876e+01, 1.88713460e+02],\n         [1.56752814e+02, 1.03609853e+02, 2.54169126e+02],\n         [2.47401667e+02, 2.77573724e+01, 1.38530958e+02],\n         [1.01961228e+02, 1.08159670e+02, 7.69290259e+01],\n         [1.89545788e+02, 6.31023793e+01, 1.63321121e+02],\n         [1.14937951e+02, 2.21209974e+02, 1.45542172e+02],\n         [1.00398037e+01, 1.58666982e+02, 1.38972692e+02],\n         [2.89285842e+01, 7.14661173e+01, 3.09935240e+01],\n         [2.14491902e+02, 5.66784152e+01, 1.70013130e+02],\n         [2.24908500e+02, 1.85023375e+02, 2.41714841e+02]],\n\n        [[2.19656733e+02, 6.28061861e+01, 1.00346013e+02],\n         [7.57717562e+01, 3.37079948e+00, 1.20322447e+02],\n         [1.24678937e+01, 1.05874198e+02, 4.82593262e+01],\n         [2.22705956e+02, 5.88557858e+01, 8.38156811e+01],\n         [4.39798539e+01, 1.92785787e+02, 1.12837057e+02],\n         [1.45925540e+01, 1.88652086e+02, 1.38922233e+02],\n         [2.03832909e+02, 3.34216887e+01, 2.28329187e+02],\n         [1.75871967e+02, 1.80043502e+01, 5.82670816e+01],\n         [3.54618800e+01, 1.10743837e+02, 8.28392068e+01],\n         [7.80349271e+01, 1.27573395e-01, 2.20596868e+02]],\n\n        [[6.10055490e+01, 9.18368416e+01, 1.54032759e+02],\n         [2.53920193e+02, 5.48315968e+01, 4.88582288e+01],\n         [7.07455660e+01, 1.31392288e+02, 3.87024963e+01],\n         [2.28355514e+02, 2.38419210e+01, 1.80680283e+02],\n         [1.65764476e+02, 2.02629934e+02, 2.44732761e+02],\n         [1.32989014e+01, 1.49134764e+02, 2.06041887e+02],\n         [1.39692507e+02, 1.99128641e+02, 2.35949714e+02],\n         [2.27740785e+02, 1.53314606e+02, 7.84771922e+01],\n         [5.16559955e+01, 1.55831020e+02, 2.27392122e+02],\n         [1.11859630e+02, 1.82516582e+02, 2.01659194e+02]],\n\n        [[6.29366568e+01, 1.45369288e+02, 1.41771933e+02],\n         [1.19727204e+02, 2.11503978e+02, 1.76236666e+02],\n         [2.03431512e+02, 1.32587413e+02, 3.69583305e+01],\n         [2.04547336e+02, 2.31711394e+02, 4.63822741e+01],\n         [1.07162287e+02, 1.58288156e+02, 1.21379716e+02],\n         [6.76612545e+01, 2.40830514e+02, 2.17975753e-02],\n         [1.91988024e+01, 2.60850062e+01, 1.55787627e+02],\n         [2.51234992e+02, 1.00758381e+02, 1.83592850e+02],\n         [1.04879107e+02, 1.12155181e+02, 1.07051952e+02],\n         [2.87976531e+01, 1.66868442e+00, 9.73604521e+01]],\n\n        [[2.49716467e+02, 1.71728650e+02, 2.12143294e+02],\n         [2.52890744e+02, 2.07265435e+02, 7.45672796e+01],\n         [6.51678656e+01, 1.06448234e+02, 1.52701930e+02],\n         [9.90440030e+01, 5.76465404e+01, 5.61375407e+01],\n         [1.57947244e+02, 2.20154524e+02, 1.41651682e+02],\n         [8.06229842e+01, 3.68704065e+01, 2.06731230e+02],\n         [7.66880663e+01, 1.71457330e+02, 1.10870536e+02],\n         [1.25201111e+02, 2.23444115e+01, 2.20779633e+02],\n         [3.55634606e+01, 2.18102438e+02, 1.17769194e+02],\n         [1.90304107e+02, 1.41252936e+00, 2.04281791e+02]],\n\n        [[1.43245622e+02, 1.55231325e+02, 1.91377652e+02],\n         [1.16922949e+02, 1.24123034e+02, 4.96738506e+01],\n         [2.05727388e+02, 2.20208734e+02, 2.19217740e+02],\n         [2.04999557e+02, 1.15650716e+02, 1.52237106e+02],\n         [1.17887128e+02, 1.42267764e+02, 7.05407458e+01],\n         [2.62990131e+01, 1.86099503e+01, 1.34423634e+02],\n         [2.60670367e+01, 3.54828093e+01, 1.85864388e+02],\n         [2.38497403e+02, 2.07529001e+02, 1.60262913e+02],\n         [2.12283025e+02, 9.98694999e+01, 1.20445790e+02],\n         [1.59070282e+02, 1.06111742e+00, 2.13871939e+02]]],\n\n\n       [[[1.52150960e+02, 2.12408087e+02, 1.68585084e+02],\n         [2.03813563e+02, 1.60166158e+02, 1.29226583e+02],\n         [5.70475164e+01, 1.75318861e+02, 1.91898474e+01],\n         [1.26419474e+02, 2.27435265e+01, 1.31384443e+01],\n         [6.20514438e+00, 2.09200392e+02, 1.74046095e+02],\n         [1.37790255e+02, 1.81722746e+02, 1.56504540e+02],\n         [1.57523368e+02, 1.03559708e-01, 1.60397298e+02],\n         [1.34773085e+02, 1.21552162e+02, 2.48197410e+02],\n         [1.56352462e+02, 9.82783165e+01, 1.76721633e+02],\n         [2.50540679e+02, 1.34047199e+02, 1.06560383e+02]],\n\n        [[5.46413488e+01, 2.51964091e+02, 9.95607957e+00],\n         [1.04881956e+02, 9.94274917e+01, 1.56014460e+02],\n         [9.12339285e+01, 7.02311792e+01, 1.52254451e+02],\n         [2.50460925e+02, 1.23785968e+02, 4.43701005e+01],\n         [1.32969592e+02, 3.23401798e+01, 3.34070722e+01],\n         [7.41075585e+01, 1.79820178e+01, 5.40151034e+01],\n         [7.19420085e+01, 9.65973405e+01, 4.54220538e+01],\n         [1.37415954e+02, 2.28373324e+02, 1.51607653e+02],\n         [1.56304263e+02, 2.00192986e+02, 1.35590552e+01],\n         [9.34788783e+01, 5.68449206e+01, 9.07629067e+01]],\n\n        [[1.93269573e+02, 1.87577442e+02, 1.12919105e+02],\n         [2.49170576e+02, 9.26793212e+01, 7.57802096e+00],\n         [2.38753885e+02, 1.98045241e+02, 1.83495457e+02],\n         [9.08328087e+00, 9.74854952e+01, 1.51650942e+02],\n         [1.58449474e+02, 1.73120724e+02, 9.53758224e+01],\n         [1.03074989e+02, 2.35049908e+02, 5.17752352e+01],\n         [6.41812708e+01, 2.50312765e+01, 1.79459754e+02],\n         [1.03523108e+02, 1.62123556e+02, 2.53833578e+01],\n         [2.07995734e+02, 9.52754115e+01, 1.63982051e+02],\n         [2.43106338e+02, 1.38211262e+02, 8.49906532e+01]],\n\n        [[9.30947480e+01, 1.55090598e+02, 2.00199585e+02],\n         [1.98943788e+02, 2.44633914e+02, 1.01102271e+02],\n         [3.13091541e+01, 1.90893598e+02, 1.20943356e+02],\n         [9.12300767e+01, 2.17503832e+02, 1.75065574e+02],\n         [1.43829463e+02, 2.28789722e+02, 6.38831223e+01],\n         [2.31912743e+02, 2.67506963e+01, 1.77578040e+02],\n         [2.54341038e+02, 1.56144713e+02, 2.01466090e+02],\n         [1.55646511e+02, 5.58565036e-02, 2.47708359e+02],\n         [1.67132235e+02, 2.00459729e+02, 8.74054721e+01],\n         [2.39987971e+02, 3.42893498e+01, 2.04918171e+02]],\n\n        [[2.15329824e+01, 1.38521918e+02, 5.64076784e+01],\n         [9.43643530e+00, 4.82260752e+01, 2.20466093e+02],\n         [6.94906643e+01, 4.44513402e+01, 1.65757715e+02],\n         [1.05780619e+01, 2.35882946e+02, 2.16259035e+02],\n         [2.09563515e+02, 8.37380781e+01, 5.35573404e+01],\n         [1.96616485e+02, 1.16020112e+02, 2.25930008e+02],\n         [2.40509988e+02, 2.34813273e+02, 1.89658223e+02],\n         [1.11743211e+02, 2.25261997e+02, 1.78754834e+02],\n         [4.71192478e+01, 2.02528750e+02, 2.05503084e+02],\n         [2.38554684e+02, 2.97812791e+01, 1.43341491e+02]],\n\n        [[1.00742344e+02, 5.33198982e+01, 2.19787271e+02],\n         [8.37916321e+00, 1.61398691e+02, 7.92151916e+01],\n         [7.06730308e+01, 5.38654475e+01, 2.48588375e+01],\n         [1.66554278e+02, 2.16265607e+02, 2.25185961e+02],\n         [2.94896529e+01, 1.37695957e+02, 7.83881057e+01],\n         [1.06526540e+02, 1.57383411e+02, 1.92183899e+02],\n         [2.48501005e+02, 2.14340746e+02, 1.10785242e+01],\n         [7.67758785e+01, 1.86623432e+02, 1.87899034e+01],\n         [1.53071890e+02, 1.96050225e+02, 9.26574958e+01],\n         [6.29320365e+01, 2.21743717e+02, 1.98227019e+02]],\n\n        [[2.28934060e+02, 7.94918073e+00, 1.23103600e+02],\n         [1.87373727e+02, 2.09376264e+02, 1.95195894e+02],\n         [1.39470871e+02, 5.77094225e+01, 1.34229759e+01],\n         [1.62935808e+02, 1.03149246e+02, 1.59191050e+02],\n         [2.36523838e+02, 2.58774828e+01, 4.30289346e+01],\n         [1.64540297e+02, 1.61420308e+02, 2.24470686e+02],\n         [2.45147201e+02, 2.44529351e+02, 2.00332040e+02],\n         [7.79648895e+01, 1.25867068e+02, 3.29918004e+01],\n         [2.33096352e+02, 7.16563136e+00, 1.98981296e+02],\n         [2.06702392e+02, 1.52743158e+02, 6.54432295e+01]],\n\n        [[2.08588994e+02, 2.15285266e+02, 1.26838379e+02],\n         [1.07619806e+02, 1.86947442e+02, 1.41703796e+02],\n         [1.41250792e+02, 1.21565718e+02, 1.46470533e+02],\n         [8.96257073e+01, 9.75881379e+01, 2.46471003e+02],\n         [1.91328149e+02, 8.08815225e+00, 9.75361316e+01],\n         [8.84484106e+01, 1.99867231e+02, 1.79714144e+00],\n         [1.29368410e+02, 6.73508720e+01, 6.51669334e+01],\n         [2.37916345e+02, 1.89745432e+02, 1.43349480e+02],\n         [1.44942543e+02, 1.08071378e+02, 3.09770069e+01],\n         [2.33643884e+02, 1.25136684e+02, 1.60828261e+02]],\n\n        [[1.87146048e+02, 1.01621393e+02, 1.23689421e+02],\n         [1.04679121e+01, 7.59270076e+01, 1.17203661e+02],\n         [4.65741511e+01, 2.07624655e+02, 1.27911707e+02],\n         [2.28032120e+02, 2.12576721e+02, 6.26808661e+01],\n         [7.19823536e+01, 9.33255112e+01, 2.28832312e+01],\n         [3.33050607e+01, 5.60229009e+01, 2.02313982e+02],\n         [2.13320649e+02, 1.05744341e+02, 5.99725782e+01],\n         [1.94836741e+02, 1.69115053e+02, 2.23555120e+02],\n         [1.77984969e+01, 2.31120368e+02, 1.36552631e+02],\n         [1.85791011e+02, 1.22073620e+02, 1.19289244e+02]],\n\n        [[3.89129612e+01, 1.79489423e+02, 1.30424001e+02],\n         [2.28216360e+02, 1.46108190e+02, 1.91059859e+01],\n         [2.99888576e+01, 4.87287171e+01, 1.27214786e+02],\n         [1.95735090e+02, 1.86446877e+02, 2.56041013e+01],\n         [1.25562645e+02, 5.02695487e+01, 6.38678791e+01],\n         [2.39162107e+02, 1.94990959e+01, 1.90013246e+02],\n         [1.84279542e+02, 1.11911052e+02, 2.12690058e+02],\n         [4.98287657e+01, 2.52363515e+01, 1.01920850e+02],\n         [2.52041119e+02, 3.19592747e+01, 8.07537958e+01],\n         [1.87889982e+02, 1.53575807e+02, 3.38969476e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d10116b20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -32.818832  ,   42.047935  ,  -40.386093  ],\n         [   4.1764984 ,  -35.497345  ,   88.89034   ],\n         [ -48.688873  ,   28.792564  ,  -22.73053   ],\n         [  97.41508   ,   65.971214  ,  -66.015656  ],\n         [  90.60496   ,   28.085014  , -115.500435  ],\n         [ 148.53314   ,  -37.185036  ,  -61.78681   ],\n         [ -19.713097  ,   75.12351   ,   96.04206   ],\n         [ -42.897     ,   62.690666  ,  121.98473   ],\n         [ -96.822044  ,  -79.08681   ,   33.56974   ],\n         [ -35.7118    ,   53.064766  ,   34.806587  ]],\n\n        [[ 112.976326  ,   30.956276  ,  -49.521126  ],\n         [ -87.308395  ,  118.99467   ,  -42.99859   ],\n         [ 114.65652   ,    2.7261124 ,  126.40342   ],\n         [ 151.05072   ,  -66.286644  ,   78.21444   ],\n         [  -5.5622406 ,  -58.06754   ,    2.2776108 ],\n         [ -35.403473  , -113.6281    ,   68.61356   ],\n         [ -72.26054   ,   74.17713   ,  -53.494713  ],\n         [ -42.706654  ,  -83.641914  ,  117.76583   ],\n         [ -78.7096    ,  -69.927826  ,  -64.557556  ],\n         [-100.43472   , -106.814156  ,   70.083534  ]],\n\n        [[  -2.5869293 ,   36.25744   ,  -60.055214  ],\n         [ 138.23907   ,  -24.239433  ,   39.993202  ],\n         [ 144.06491   ,  -33.40712   , -122.23791   ],\n         [ 134.77963   ,   72.91111   ,  -37.7022    ],\n         [  36.610146  ,  -75.18916   , -122.18806   ],\n         [ -52.53131   ,  126.23696   ,   59.67283   ],\n         [ 111.46853   ,  104.67838   ,   22.118828  ],\n         [  95.34597   , -111.75257   ,  -82.30553   ],\n         [  59.680443  ,  -14.565659  ,  -61.16513   ],\n         [  38.78141   ,  114.568535  ,   14.6004715 ]],\n\n        [[ -50.556107  ,  117.51519   ,  102.60494   ],\n         [ 133.28839   ,  131.16397   ,  106.66706   ],\n         [ -35.774002  ,  -48.40616   ,   76.836235  ],\n         [  48.88494   ,  119.542625  ,   97.333275  ],\n         [  95.80845   ,   14.089439  ,  -29.49665   ],\n         [ 120.07278   ,  -84.56429   ,  124.25024   ],\n         [ 114.928185  ,  -81.449196  ,  -94.7873    ],\n         [   3.8104782 ,   32.28849   ,    0.5667496 ],\n         [ -96.31295   ,   43.807198  ,  -48.187653  ],\n         [  23.796951  ,   22.726112  ,  117.37347   ]],\n\n        [[  84.77445   ,  -97.61271   ,  115.154915  ],\n         [ 150.23013   ,  -13.169144  ,   33.072807  ],\n         [  34.591957  ,  -89.02163   ,  123.72167   ],\n         [ -27.00998   ,   -8.619331  ,  -21.718773  ],\n         [  59.38212   ,  -53.67662   ,   65.86579   ],\n         [  41.603172  ,  104.43098   ,   -8.74205   ],\n         [  35.033684  ,   41.887978  , -113.6402    ],\n         [ -72.94548   ,  -45.31288   ,  -94.75142   ],\n         [  66.07412   ,  -60.100586  ,   90.8119    ],\n         [ 137.77585   ,   68.24438   ,  101.22849   ]],\n\n        [[  -3.592987  ,  -53.972813  ,   95.97674   ],\n         [  16.383446  , -113.4082    ,  -47.90824   ],\n         [ -55.679676  ,  -10.9048    , -111.212105  ],\n         [ -20.123322  ,  -57.923214  ,   99.02596   ],\n         [   8.898056  ,   76.00678   ,  -79.70015   ],\n         [  34.983223  ,   71.873085  , -109.08745   ],\n         [ 124.39019   ,  -83.357315  ,   80.152916  ],\n         [ -45.67192   ,  -98.77465   ,   52.191963  ],\n         [ -21.099792  ,   -6.035164  ,  -88.218124  ],\n         [ 116.65786   , -116.65143   ,  -45.645073  ]],\n\n        [[  50.093758  ,  -24.942162  ,  -62.67445   ],\n         [ -55.080772  ,  -61.947403  ,  130.2402    ],\n         [ -65.23651   ,   14.613289  ,  -52.934433  ],\n         [  76.74128   ,  -92.93708   ,  104.675514  ],\n         [ 140.79376   ,   85.85093   ,   42.08448   ],\n         [ 102.10288   ,   32.355766  , -110.381096  ],\n         [ 132.01071   ,   82.34965   ,   16.012505  ],\n         [ -25.461807  ,   36.535606  ,  104.06078   ],\n         [ 123.45312   ,   39.052025  ,  -72.024     ],\n         [  97.72019   ,   65.73759   ,  -11.820374  ]],\n\n        [[  37.832924  ,   28.590294  ,  -60.743343  ],\n         [  72.29766   ,   94.72498   ,   -3.952797  ],\n         [ -66.98067   ,   15.808418  ,   79.75152   ],\n         [ -57.55673   ,  114.932396  ,   80.86733   ],\n         [  17.440712  ,   41.509163  ,  -16.517715  ],\n         [-103.917206  ,  124.05152   ,  -56.018745  ],\n         [  51.848625  ,  -90.69399   , -104.4812    ],\n         [  79.65385   ,  -16.020622  ,  127.554985  ],\n         [   3.1129456 ,   -4.6238174 ,  -18.800896  ],\n         [  -6.5785522 , -115.11031   ,  -94.88235   ]],\n\n        [[ 108.20429   ,   54.949654  ,  126.03646   ],\n         [ -29.371727  ,   90.48644   ,  129.21075   ],\n         [  48.76293   ,  -10.330765  ,  -58.51214   ],\n         [ -47.801464  ,  -59.132458  ,  -24.635994  ],\n         [  37.712685  ,  103.37553   ,   34.26725   ],\n         [ 102.79223   ,  -79.90859   ,  -43.057014  ],\n         [   6.931534  ,   54.678337  ,  -46.991936  ],\n         [ 116.84063   ,  -94.434586  ,    1.5211105 ],\n         [  13.830193  ,  101.32343   ,  -88.11654   ],\n         [ 100.34278   , -115.36647   ,   66.62411   ]],\n\n        [[  87.43865   ,   38.452324  ,   19.56562   ],\n         [ -54.265152  ,    7.3440323 ,   -6.7570496 ],\n         [ 115.27874   ,  103.42974   ,   82.047386  ],\n         [  48.298103  ,   -1.1282806 ,   81.31956   ],\n         [ -33.398254  ,   25.488762  ,   -5.7928696 ],\n         [  30.484627  ,  -98.16905   ,  -97.38099   ],\n         [  81.92539   ,  -81.29619   ,  -97.61296   ],\n         [  56.323906  ,   90.75001   ,  114.817406  ],\n         [  16.50679   ,  -16.9095    ,   88.60302   ],\n         [ 109.93293   , -115.71788   ,   35.39028   ]]],\n\n\n       [[[  64.64608   ,   95.62908   ,   28.470955  ],\n         [  25.287575  ,   43.387154  ,   80.13357   ],\n         [ -84.74915   ,   58.539864  ,  -66.632484  ],\n         [ -90.80056   ,  -94.03548   ,    2.7394714 ],\n         [  70.10709   ,   92.421394  , -117.47485   ],\n         [  52.565544  ,   64.94375   ,   14.110252  ],\n         [  56.45829   , -116.67544   ,   33.84336   ],\n         [ 144.25839   ,    4.773163  ,   11.093086  ],\n         [  72.78263   ,  -18.500687  ,   32.672462  ],\n         [   2.6213837 ,   17.268196  ,  126.86068   ]],\n\n        [[ -93.982925  ,  135.18509   ,  -69.03865   ],\n         [  52.075462  ,  -17.35151   ,  -18.798042  ],\n         [  48.315453  ,  -46.54782   ,  -32.446075  ],\n         [ -59.5689    ,    7.0069656 ,  126.78092   ],\n         [ -70.53193   ,  -84.43882   ,    9.289589  ],\n         [ -49.9239    ,  -98.79698   ,  -49.57244   ],\n         [ -58.51695   ,  -20.181656  ,  -51.73799   ],\n         [  47.668648  ,  111.59432   ,   13.735954  ],\n         [ -90.379944  ,   83.413994  ,   32.62426   ],\n         [ -13.176094  ,  -59.93408   ,  -30.201118  ]],\n\n        [[   8.980103  ,   70.79844   ,   69.58958   ],\n         [ -96.360985  ,  -24.099678  ,  125.49058   ],\n         [  79.55645   ,   81.26624   ,  115.07389   ],\n         [  47.711937  ,  -19.293503  , -114.59672   ],\n         [  -8.563179  ,   56.34173   ,   34.769478  ],\n         [ -52.16377   ,  118.27091   ,  -20.605011  ],\n         [  75.520744  ,  -91.74773   ,  -59.498726  ],\n         [ -78.55565   ,   45.34455   ,  -20.15689   ],\n         [  60.043053  ,  -21.503586  ,   84.31573   ],\n         [ -18.948349  ,   21.432259  ,  119.42634   ]],\n\n        [[  96.26058   ,   38.311592  ,  -30.58525   ],\n         [  -2.836731  ,  127.85491   ,   75.26379   ],\n         [  17.004356  ,   74.1146    ,  -92.37085   ],\n         [  71.126564  ,  100.72483   ,  -32.44992   ],\n         [ -40.05588   ,  112.01072   ,   20.149467  ],\n         [  73.63903   ,  -90.028305  ,  108.23275   ],\n         [  97.52709   ,   39.365715  ,  130.66104   ],\n         [ 143.76935   , -116.723145  ,   31.966515  ],\n         [ -16.533531  ,   83.68073   ,   43.452232  ],\n         [ 100.979164  ,  -82.489655  ,  116.307976  ]],\n\n        [[ -47.531326  ,   21.742912  , -102.14702   ],\n         [ 116.52709   ,  -68.552925  , -114.24356   ],\n         [  61.818718  ,  -72.32766   ,  -54.18934   ],\n         [ 112.32003   ,  119.10395   , -113.10194   ],\n         [ -50.381664  ,  -33.040924  ,   85.88352   ],\n         [ 121.991005  ,   -0.75888824,   72.936485  ],\n         [  85.719215  ,  118.03428   ,  116.829994  ],\n         [  74.815834  ,  108.482994  ,  -11.93679   ],\n         [ 101.56408   ,   85.74975   ,  -76.56075   ],\n         [  39.40249   ,  -86.99772   ,  114.87469   ]],\n\n        [[ 115.848274  ,  -63.459103  ,  -22.937653  ],\n         [ -24.723808  ,   44.619698  , -115.300835  ],\n         [ -79.08017   ,  -62.91355   ,  -53.006973  ],\n         [ 121.246956  ,   99.48661   ,   42.874275  ],\n         [ -25.550896  ,   20.916954  ,  -94.190346  ],\n         [  88.244896  ,   40.60441   ,  -17.153458  ],\n         [ -92.86048   ,   97.561745  ,  124.82101   ],\n         [ -85.1491    ,   69.84443   ,  -46.90412   ],\n         [ -11.281509  ,   79.27123   ,   29.391884  ],\n         [  94.28802   ,  104.964714  ,  -60.747963  ]],\n\n        [[  19.164597  , -108.82982   ,  105.25407   ],\n         [  91.25689   ,   92.59727   ,   63.693733  ],\n         [ -90.51603   ,  -59.069576  ,   15.790871  ],\n         [  55.252052  ,  -13.629753  ,   39.255806  ],\n         [ -60.91007   ,  -90.90152   ,  112.843834  ],\n         [ 120.531685  ,   44.641304  ,   40.8603    ],\n         [  96.39304   ,  127.75036   ,  121.4672    ],\n         [ -70.947205  ,    9.088066  ,  -45.71511   ],\n         [  95.04229   , -109.613365  ,  109.41636   ],\n         [ -38.495773  ,   35.964165  ,   83.02239   ]],\n\n        [[  22.899376  ,   98.50626   ,   84.90899   ],\n         [  37.764793  ,   70.16845   ,  -16.060196  ],\n         [  42.531532  ,    4.7867203 ,   17.570793  ],\n         [ 142.53201   ,  -19.190865  ,  -34.05429   ],\n         [  -6.40287   , -108.69085   ,   67.648155  ],\n         [-102.14186   ,   83.088234  ,  -35.23159   ],\n         [ -38.77207   ,  -49.428123  ,    5.688408  ],\n         [  39.410484  ,   72.96644   ,  114.23635   ],\n         [ -72.962     ,   -8.707619  ,   21.262535  ],\n         [  56.88926   ,    8.357681  ,  109.96389   ]],\n\n        [[  19.75042   ,  -15.157608  ,   63.46604   ],\n         [  13.264656  ,  -40.85199   , -113.21209   ],\n         [  23.972702  ,   90.84565   ,  -77.10585   ],\n         [ -41.258137  ,   95.79772   ,  104.35212   ],\n         [ -81.05577   ,  -23.453491  ,  -51.697647  ],\n         [  98.37498   ,  -60.7561    ,  -90.37494   ],\n         [ -43.966423  ,  -11.03466   ,   89.64065   ],\n         [ 119.61611   ,   52.336052  ,   71.156746  ],\n         [  32.613625  ,  114.34136   , -105.8815    ],\n         [  15.350243  ,    5.2946243 ,   62.111015  ]],\n\n        [[  26.484993  ,   62.710426  ,  -84.767044  ],\n         [ -84.833015  ,   29.329185  ,  104.536354  ],\n         [  23.27578   ,  -68.05028   ,  -93.69115   ],\n         [ -78.3349    ,   69.667885  ,   72.05509   ],\n         [ -40.071125  ,  -66.509445  ,    1.8826447 ],\n         [  86.07424   ,  -97.27991   ,  115.48211   ],\n         [ 108.75106   ,   -4.8679504 ,   60.59954   ],\n         [  -2.0181503 ,  -91.54265   ,  -73.851234  ],\n         [ -23.185204  ,  -84.819725  ,  128.36111   ],\n         [ -70.04205   ,   36.796806  ,   64.209984  ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d101d4170>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 83, 158,  71],\n         [212,  81, 108],\n         [100, 145,  55],\n         [ 57, 182, 201],\n         [  8, 144, 194],\n         [ 61,  79, 252],\n         [219, 191,  84],\n         [245, 179,  61],\n         [157,  37,   7],\n         [158, 169,  68]],\n\n        [[ 74, 147, 216],\n         [ 80, 235,  16],\n         [250, 119, 218],\n         [201,  50, 254],\n         [125,  58,  98],\n         [192,   3,  68],\n         [ 70, 190,  31],\n         [241,  33,  61],\n         [ 59,  46,  25],\n         [193,   9,   3]],\n\n        [[ 63, 153, 101],\n         [163,  92, 242],\n         [  1,  83, 248],\n         [ 85, 189, 238],\n         [  1,  41, 140],\n         [183, 243,  51],\n         [145, 221, 215],\n         [ 41,   5, 199],\n         [ 62, 102, 163],\n         [138, 231, 142]],\n\n        [[226, 234,  53],\n         [230, 247, 237],\n         [200,  68,  68],\n         [221, 236, 152],\n         [ 94, 130, 199],\n         [247,  32, 224],\n         [ 28,  35, 218],\n         [124, 149, 107],\n         [ 75, 160,   7],\n         [241, 139, 127]],\n\n        [[238,  19, 188],\n         [156, 103, 254],\n         [247,  27, 138],\n         [101, 108,  76],\n         [189,  63, 163],\n         [114, 221, 145],\n         [ 10, 158, 138],\n         [ 28,  71,  30],\n         [214,  56, 170],\n         [224, 185, 241]],\n\n        [[219,  62, 100],\n         [ 75,   3, 120],\n         [ 12, 105,  48],\n         [222,  58,  83],\n         [ 43, 192, 112],\n         [ 14, 188, 138],\n         [203,  33, 228],\n         [175,  18,  58],\n         [ 35, 110,  82],\n         [ 78,   0, 220]],\n\n        [[ 61,  91, 154],\n         [253,  54,  48],\n         [ 70, 131,  38],\n         [228,  23, 180],\n         [165, 202, 244],\n         [ 13, 149, 206],\n         [139, 199, 235],\n         [227, 153,  78],\n         [ 51, 155, 227],\n         [111, 182, 201]],\n\n        [[ 62, 145, 141],\n         [119, 211, 176],\n         [203, 132,  36],\n         [204, 231,  46],\n         [107, 158, 121],\n         [ 67, 240,   0],\n         [ 19,  26, 155],\n         [251, 100, 183],\n         [104, 112, 107],\n         [ 28,   1,  97]],\n\n        [[249, 171, 212],\n         [252, 207,  74],\n         [ 65, 106, 152],\n         [ 99,  57,  56],\n         [157, 220, 141],\n         [ 80,  36, 206],\n         [ 76, 171, 110],\n         [125,  22, 220],\n         [ 35, 218, 117],\n         [190,   1, 204]],\n\n        [[143, 155, 191],\n         [116, 124,  49],\n         [205, 220, 219],\n         [204, 115, 152],\n         [117, 142,  70],\n         [ 26,  18, 134],\n         [ 26,  35, 185],\n         [238, 207, 160],\n         [212,  99, 120],\n         [159,   1, 213]]],\n\n\n       [[[152, 212, 168],\n         [203, 160, 129],\n         [ 57, 175,  19],\n         [126,  22,  13],\n         [  6, 209, 174],\n         [137, 181, 156],\n         [157,   0, 160],\n         [134, 121, 248],\n         [156,  98, 176],\n         [250, 134, 106]],\n\n        [[ 54, 251,   9],\n         [104,  99, 156],\n         [ 91,  70, 152],\n         [250, 123,  44],\n         [132,  32,  33],\n         [ 74,  17,  54],\n         [ 71,  96,  45],\n         [137, 228, 151],\n         [156, 200,  13],\n         [ 93,  56,  90]],\n\n        [[193, 187, 112],\n         [249,  92,   7],\n         [238, 198, 183],\n         [  9,  97, 151],\n         [158, 173,  95],\n         [103, 235,  51],\n         [ 64,  25, 179],\n         [103, 162,  25],\n         [207,  95, 163],\n         [243, 138,  84]],\n\n        [[ 93, 155, 200],\n         [198, 244, 101],\n         [ 31, 190, 120],\n         [ 91, 217, 175],\n         [143, 228,  63],\n         [231,  26, 177],\n         [254, 156, 201],\n         [155,   0, 247],\n         [167, 200,  87],\n         [239,  34, 204]],\n\n        [[ 21, 138,  56],\n         [  9,  48, 220],\n         [ 69,  44, 165],\n         [ 10, 235, 216],\n         [209,  83,  53],\n         [196, 116, 225],\n         [240, 234, 189],\n         [111, 225, 178],\n         [ 47, 202, 205],\n         [238,  29, 143]],\n\n        [[100,  53, 219],\n         [  8, 161,  79],\n         [ 70,  53,  24],\n         [166, 216, 225],\n         [ 29, 137,  78],\n         [106, 157, 192],\n         [248, 214,  11],\n         [ 76, 186,  18],\n         [153, 196,  92],\n         [ 62, 221, 198]],\n\n        [[228,   7, 123],\n         [187, 209, 195],\n         [139,  57,  13],\n         [162, 103, 159],\n         [236,  25,  43],\n         [164, 161, 224],\n         [245, 244, 200],\n         [ 77, 125,  32],\n         [233,   7, 198],\n         [206, 152,  65]],\n\n        [[208, 215, 126],\n         [107, 186, 141],\n         [141, 121, 146],\n         [ 89,  97, 246],\n         [191,   8,  97],\n         [ 88, 199,   1],\n         [129,  67,  65],\n         [237, 189, 143],\n         [144, 108,  30],\n         [233, 125, 160]],\n\n        [[187, 101, 123],\n         [ 10,  75, 117],\n         [ 46, 207, 127],\n         [228, 212,  62],\n         [ 71,  93,  22],\n         [ 33,  56, 202],\n         [213, 105,  59],\n         [194, 169, 223],\n         [ 17, 231, 136],\n         [185, 122, 119]],\n\n        [[ 38, 179, 130],\n         [228, 146,  19],\n         [ 29,  48, 127],\n         [195, 186,  25],\n         [125,  50,  63],\n         [239,  19, 190],\n         [184, 111, 212],\n         [ 49,  25, 101],\n         [252,  31,  80],\n         [187, 153,  33]]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d10116a30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -32.939003 ,   41.221    ,  -40.68     ],\n         [   4.060997 ,  -35.779    ,   88.32     ],\n         [ -48.939003 ,   28.221    ,  -23.68     ],\n         [  97.061    ,   65.221    ,  -66.68     ],\n         [  90.061    ,   27.221    , -115.68     ],\n         [ 148.061    ,  -37.779    ,  -62.68     ],\n         [ -19.939003 ,   74.221    ,   95.32     ],\n         [ -42.939003 ,   62.221    ,  121.32     ],\n         [ -96.939    ,  -79.779    ,   33.32     ],\n         [ -35.939003 ,   52.221    ,   34.32     ]],\n\n        [[ 112.061    ,   30.221    ,  -49.68     ],\n         [ -87.939    ,  118.221    ,  -43.68     ],\n         [ 114.061    ,    2.2210007,  126.32     ],\n         [ 150.061    ,  -66.779    ,   77.32     ],\n         [  -5.939003 ,  -58.779    ,    1.3199997],\n         [ -35.939003 , -113.779    ,   68.32     ],\n         [ -72.939    ,   73.221    ,  -53.68     ],\n         [ -42.939003 ,  -83.779    ,  117.32     ],\n         [ -78.939    ,  -70.779    ,  -64.68     ],\n         [-100.939    , -107.779    ,   69.32     ]],\n\n        [[  -2.939003 ,   36.221    ,  -60.68     ],\n         [ 138.061    ,  -24.779    ,   39.32     ],\n         [ 144.061    ,  -33.779    , -122.68     ],\n         [ 134.061    ,   72.221    ,  -38.68     ],\n         [  36.060997 ,  -75.779    , -122.68     ],\n         [ -52.939003 ,  126.221    ,   59.32     ],\n         [ 111.061    ,  104.221    ,   21.32     ],\n         [  95.061    , -111.779    ,  -82.68     ],\n         [  59.060997 ,  -14.778999 ,  -61.68     ],\n         [  38.060997 ,  114.221    ,   14.32     ]],\n\n        [[ -50.939003 ,  117.221    ,  102.32     ],\n         [ 133.061    ,  130.22101  ,  106.32     ],\n         [ -35.939003 ,  -48.779    ,   76.32     ],\n         [  48.060997 ,  119.221    ,   97.32     ],\n         [  95.061    ,   13.221001 ,  -29.68     ],\n         [ 120.061    ,  -84.779    ,  123.32     ],\n         [ 114.061    ,  -81.779    ,  -95.68     ],\n         [   3.060997 ,   32.221    ,    0.3199997],\n         [ -96.939    ,   43.221    ,  -48.68     ],\n         [  23.060997 ,   22.221    ,  117.32     ]],\n\n        [[  84.061    ,  -97.779    ,  114.32     ],\n         [ 150.061    ,  -13.778999 ,   32.32     ],\n         [  34.060997 ,  -89.779    ,  123.32     ],\n         [ -27.939003 ,   -8.778999 ,  -22.68     ],\n         [  59.060997 ,  -53.779    ,   65.32     ],\n         [  41.060997 ,  104.221    ,   -9.68     ],\n         [  34.060997 ,   41.221    , -113.68     ],\n         [ -73.939    ,  -45.779    ,  -95.68     ],\n         [  66.061    ,  -60.779    ,   90.32     ],\n         [ 137.061    ,   68.221    ,  100.32     ]],\n\n        [[  -3.939003 ,  -54.779    ,   95.32     ],\n         [  16.060997 , -113.779    ,  -48.68     ],\n         [ -55.939003 ,  -11.778999 , -111.68     ],\n         [ -20.939003 ,  -58.779    ,   98.32     ],\n         [   8.060997 ,   75.221    ,  -80.68     ],\n         [  34.060997 ,   71.221    , -109.68     ],\n         [ 124.061    ,  -83.779    ,   79.32     ],\n         [ -45.939003 ,  -98.779    ,   51.32     ],\n         [ -21.939003 ,   -6.7789993,  -88.68     ],\n         [ 116.061    , -116.779    ,  -45.68     ]],\n\n        [[  50.060997 ,  -25.779    ,  -62.68     ],\n         [ -55.939003 ,  -62.779    ,  129.32     ],\n         [ -65.939    ,   14.221001 ,  -53.68     ],\n         [  76.061    ,  -93.779    ,  104.32     ],\n         [ 140.061    ,   85.221    ,   41.32     ],\n         [ 102.061    ,   32.221    , -110.68     ],\n         [ 131.061    ,   82.221    ,   15.32     ],\n         [ -25.939003 ,   36.221    ,  103.32     ],\n         [ 123.061    ,   38.221    ,  -72.68     ],\n         [  97.061    ,   65.221    ,  -12.68     ]],\n\n        [[  37.060997 ,   28.221    ,  -61.68     ],\n         [  72.061    ,   94.221    ,   -4.6800003],\n         [ -67.939    ,   15.221001 ,   79.32     ],\n         [ -57.939003 ,  114.221    ,   80.32     ],\n         [  17.060997 ,   41.221    ,  -16.68     ],\n         [-103.939    ,  123.221    ,  -56.68     ],\n         [  51.060997 ,  -90.779    , -104.68     ],\n         [  79.061    ,  -16.779    ,  127.32     ],\n         [   3.060997 ,   -4.7789993,  -19.68     ],\n         [  -6.939003 , -115.779    ,  -95.68     ]],\n\n        [[ 108.061    ,   54.221    ,  125.32     ],\n         [ -29.939003 ,   90.221    ,  128.32     ],\n         [  48.060997 ,  -10.778999 ,  -58.68     ],\n         [ -47.939003 ,  -59.779    ,  -24.68     ],\n         [  37.060997 ,  103.221    ,   33.32     ],\n         [ 102.061    ,  -80.779    ,  -43.68     ],\n         [   6.060997 ,   54.221    ,  -47.68     ],\n         [ 116.061    ,  -94.779    ,    1.3199997],\n         [  13.060997 ,  101.221    ,  -88.68     ],\n         [ 100.061    , -115.779    ,   66.32     ]],\n\n        [[  87.061    ,   38.221    ,   19.32     ],\n         [ -54.939003 ,    7.2210007,   -7.6800003],\n         [ 115.061    ,  103.221    ,   81.32     ],\n         [  48.060997 ,   -1.7789993,   80.32     ],\n         [ -33.939003 ,   25.221    ,   -6.6800003],\n         [  30.060997 ,  -98.779    ,  -97.68     ],\n         [  81.061    ,  -81.779    ,  -97.68     ],\n         [  56.060997 ,   90.221    ,  114.32     ],\n         [  16.060997 ,  -17.779    ,   88.32     ],\n         [ 109.061    , -115.779    ,   35.32     ]]],\n\n\n       [[[  64.061    ,   95.221    ,   28.32     ],\n         [  25.060997 ,   43.221    ,   79.32     ],\n         [ -84.939    ,   58.221    ,  -66.68     ],\n         [ -90.939    ,  -94.779    ,    2.3199997],\n         [  70.061    ,   92.221    , -117.68     ],\n         [  52.060997 ,   64.221    ,   13.32     ],\n         [  56.060997 , -116.779    ,   33.32     ],\n         [ 144.061    ,    4.2210007,   10.32     ],\n         [  72.061    ,  -18.779    ,   32.32     ],\n         [   2.060997 ,   17.221    ,  126.32     ]],\n\n        [[ -94.939    ,  134.22101  ,  -69.68     ],\n         [  52.060997 ,  -17.779    ,  -19.68     ],\n         [  48.060997 ,  -46.779    ,  -32.68     ],\n         [ -59.939003 ,    6.2210007,  126.32     ],\n         [ -70.939    ,  -84.779    ,    8.32     ],\n         [ -49.939003 ,  -99.779    ,  -49.68     ],\n         [ -58.939003 ,  -20.779    ,  -52.68     ],\n         [  47.060997 ,  111.221    ,   13.32     ],\n         [ -90.939    ,   83.221    ,   32.32     ],\n         [ -13.939003 ,  -60.779    ,  -30.68     ]],\n\n        [[   8.060997 ,   70.221    ,   69.32     ],\n         [ -96.939    ,  -24.779    ,  125.32     ],\n         [  79.061    ,   81.221    ,  114.32     ],\n         [  47.060997 ,  -19.779    , -114.68     ],\n         [  -8.939003 ,   56.221    ,   34.32     ],\n         [ -52.939003 ,  118.221    ,  -20.68     ],\n         [  75.061    ,  -91.779    ,  -59.68     ],\n         [ -78.939    ,   45.221    ,  -20.68     ],\n         [  59.060997 ,  -21.779    ,   83.32     ],\n         [ -19.939003 ,   21.221    ,  119.32     ]],\n\n        [[  96.061    ,   38.221    ,  -30.68     ],\n         [  -2.939003 ,  127.221    ,   74.32     ],\n         [  16.060997 ,   73.221    ,  -92.68     ],\n         [  71.061    ,  100.221    ,  -32.68     ],\n         [ -40.939003 ,  111.221    ,   19.32     ],\n         [  73.061    ,  -90.779    ,  107.32     ],\n         [  97.061    ,   39.221    ,  130.32     ],\n         [ 143.061    , -116.779    ,   31.32     ],\n         [ -16.939003 ,   83.221    ,   43.32     ],\n         [ 100.061    ,  -82.779    ,  115.32     ]],\n\n        [[ -47.939003 ,   21.221    , -102.68     ],\n         [ 116.061    ,  -68.779    , -114.68     ],\n         [  61.060997 ,  -72.779    ,  -54.68     ],\n         [ 112.061    ,  118.221    , -113.68     ],\n         [ -50.939003 ,  -33.779    ,   85.32     ],\n         [ 121.061    ,   -0.7789993,   72.32     ],\n         [  85.061    ,  117.221    ,  116.32     ],\n         [  74.061    ,  108.221    ,  -12.68     ],\n         [ 101.061    ,   85.221    ,  -76.68     ],\n         [  39.060997 ,  -87.779    ,  114.32     ]],\n\n        [[ 115.061    ,  -63.779    ,  -23.68     ],\n         [ -24.939003 ,   44.221    , -115.68     ],\n         [ -79.939    ,  -63.779    ,  -53.68     ],\n         [ 121.061    ,   99.221    ,   42.32     ],\n         [ -25.939003 ,   20.221    ,  -94.68     ],\n         [  88.061    ,   40.221    ,  -17.68     ],\n         [ -92.939    ,   97.221    ,  124.32     ],\n         [ -85.939    ,   69.221    ,  -47.68     ],\n         [ -11.939003 ,   79.221    ,   29.32     ],\n         [  94.061    ,  104.221    ,  -61.68     ]],\n\n        [[  19.060997 , -109.779    ,  104.32     ],\n         [  91.061    ,   92.221    ,   63.32     ],\n         [ -90.939    ,  -59.779    ,   15.32     ],\n         [  55.060997 ,  -13.778999 ,   38.32     ],\n         [ -60.939003 ,  -91.779    ,  112.32     ],\n         [ 120.061    ,   44.221    ,   40.32     ],\n         [  96.061    ,  127.221    ,  121.32     ],\n         [ -71.939    ,    8.221001 ,  -46.68     ],\n         [  94.061    , -109.779    ,  109.32     ],\n         [ -38.939003 ,   35.221    ,   82.32     ]],\n\n        [[  22.060997 ,   98.221    ,   84.32     ],\n         [  37.060997 ,   69.221    ,  -16.68     ],\n         [  42.060997 ,    4.2210007,   17.32     ],\n         [ 142.061    ,  -19.779    ,  -34.68     ],\n         [  -6.939003 , -108.779    ,   67.32     ],\n         [-102.939    ,   82.221    ,  -35.68     ],\n         [ -38.939003 ,  -49.779    ,    5.3199997],\n         [  39.060997 ,   72.221    ,  113.32     ],\n         [ -73.939    ,   -8.778999 ,   20.32     ],\n         [  56.060997 ,    8.221001 ,  109.32     ]],\n\n        [[  19.060997 ,  -15.778999 ,   63.32     ],\n         [  13.060997 ,  -41.779    , -113.68     ],\n         [  23.060997 ,   90.221    ,  -77.68     ],\n         [ -41.939003 ,   95.221    ,  104.32     ],\n         [ -81.939    ,  -23.779    ,  -52.68     ],\n         [  98.061    ,  -60.779    ,  -90.68     ],\n         [ -44.939003 ,  -11.778999 ,   89.32     ],\n         [ 119.061    ,   52.221    ,   70.32     ],\n         [  32.060997 ,  114.221    , -106.68     ],\n         [  15.060997 ,    5.2210007,   61.32     ]],\n\n        [[  26.060997 ,   62.221    ,  -85.68     ],\n         [ -84.939    ,   29.221    ,  104.32     ],\n         [  23.060997 ,  -68.779    ,  -94.68     ],\n         [ -78.939    ,   69.221    ,   71.32     ],\n         [ -40.939003 ,  -66.779    ,    1.3199997],\n         [  86.061    ,  -97.779    ,  115.32     ],\n         [ 108.061    ,   -5.7789993,   60.32     ],\n         [  -2.939003 ,  -91.779    ,  -74.68     ],\n         [ -23.939003 ,  -85.779    ,  128.32     ],\n         [ -70.939    ,   36.221    ,   63.32     ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d101d48f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[8.32939097e+01, 1.58826939e+02, 7.11201740e+01],\n         [2.12570344e+02, 8.12816532e+01, 1.08115499e+02],\n         [1.00949471e+02, 1.45571563e+02, 5.52501279e+01],\n         [5.76643430e+01, 1.82750210e+02, 2.01354084e+02],\n         [8.17956587e+00, 1.44864018e+02, 1.94543959e+02],\n         [6.18931883e+01, 7.95939616e+01, 2.52472131e+02],\n         [2.19722055e+02, 1.91902512e+02, 8.42259063e+01],\n         [2.45664731e+02, 1.79469673e+02, 6.10420054e+01],\n         [1.57249748e+02, 3.76921889e+01, 7.11695633e+00],\n         [1.58486588e+02, 1.69843766e+02, 6.82272067e+01]],\n\n        [[7.41588745e+01, 1.47735276e+02, 2.16915336e+02],\n         [8.06814117e+01, 2.35773665e+02, 1.66306120e+01],\n         [2.50083418e+02, 1.19505114e+02, 2.18595520e+02],\n         [2.01894447e+02, 5.04923547e+01, 2.54989726e+02],\n         [1.25957612e+02, 5.87114596e+01, 9.83767651e+01],\n         [1.92293558e+02, 3.15090520e+00, 6.85355295e+01],\n         [7.01852869e+01, 1.90956137e+02, 3.16784672e+01],\n         [2.41445836e+02, 3.31370839e+01, 6.12323510e+01],\n         [5.91224431e+01, 4.68511718e+01, 2.52293980e+01],\n         [1.93763536e+02, 9.96484558e+00, 3.50428357e+00]],\n\n        [[6.36247879e+01, 1.53036435e+02, 1.01352075e+02],\n         [1.63673209e+02, 9.25395631e+01, 2.42178073e+02],\n         [1.44209413e+00, 8.33718771e+01, 2.48003900e+02],\n         [8.59777969e+01, 1.89690113e+02, 2.38718649e+02],\n         [1.49194284e+00, 4.15898406e+01, 1.40549142e+02],\n         [1.83352825e+02, 2.43015957e+02, 5.14076920e+01],\n         [1.45798828e+02, 2.21457378e+02, 2.15407526e+02],\n         [4.13744707e+01, 5.02642714e+00, 1.99284968e+02],\n         [6.25148687e+01, 1.02213343e+02, 1.63619448e+02],\n         [1.38280469e+02, 2.31347533e+02, 1.42720418e+02]],\n\n        [[2.26284947e+02, 2.34294185e+02, 5.33828973e+01],\n         [2.30347062e+02, 2.47942970e+02, 2.37227402e+02],\n         [2.00516240e+02, 6.83728375e+01, 6.81649988e+01],\n         [2.21013281e+02, 2.36321624e+02, 1.52823951e+02],\n         [9.41833489e+01, 1.30868433e+02, 1.99747449e+02],\n         [2.47930235e+02, 3.22147062e+01, 2.24011772e+02],\n         [2.88926995e+01, 3.53298019e+01, 2.18867190e+02],\n         [1.24246753e+02, 1.49067494e+02, 1.07749480e+02],\n         [7.54923501e+01, 1.60586197e+02, 7.62605643e+00],\n         [2.41053467e+02, 1.39505112e+02, 1.27735954e+02]],\n\n        [[2.38834910e+02, 1.91662876e+01, 1.88713460e+02],\n         [1.56752814e+02, 1.03609853e+02, 2.54169126e+02],\n         [2.47401667e+02, 2.77573724e+01, 1.38530958e+02],\n         [1.01961228e+02, 1.08159670e+02, 7.69290259e+01],\n         [1.89545788e+02, 6.31023793e+01, 1.63321121e+02],\n         [1.14937951e+02, 2.21209974e+02, 1.45542172e+02],\n         [1.00398037e+01, 1.58666982e+02, 1.38972692e+02],\n         [2.89285842e+01, 7.14661173e+01, 3.09935240e+01],\n         [2.14491902e+02, 5.66784152e+01, 1.70013130e+02],\n         [2.24908500e+02, 1.85023375e+02, 2.41714841e+02]],\n\n        [[2.19656733e+02, 6.28061861e+01, 1.00346013e+02],\n         [7.57717562e+01, 3.37079948e+00, 1.20322447e+02],\n         [1.24678937e+01, 1.05874198e+02, 4.82593262e+01],\n         [2.22705956e+02, 5.88557858e+01, 8.38156811e+01],\n         [4.39798539e+01, 1.92785787e+02, 1.12837057e+02],\n         [1.45925540e+01, 1.88652086e+02, 1.38922233e+02],\n         [2.03832909e+02, 3.34216887e+01, 2.28329187e+02],\n         [1.75871967e+02, 1.80043502e+01, 5.82670816e+01],\n         [3.54618800e+01, 1.10743837e+02, 8.28392068e+01],\n         [7.80349271e+01, 1.27573395e-01, 2.20596868e+02]],\n\n        [[6.10055490e+01, 9.18368416e+01, 1.54032759e+02],\n         [2.53920193e+02, 5.48315968e+01, 4.88582288e+01],\n         [7.07455660e+01, 1.31392288e+02, 3.87024963e+01],\n         [2.28355514e+02, 2.38419210e+01, 1.80680283e+02],\n         [1.65764476e+02, 2.02629934e+02, 2.44732761e+02],\n         [1.32989014e+01, 1.49134764e+02, 2.06041887e+02],\n         [1.39692507e+02, 1.99128641e+02, 2.35949714e+02],\n         [2.27740785e+02, 1.53314606e+02, 7.84771922e+01],\n         [5.16559955e+01, 1.55831020e+02, 2.27392122e+02],\n         [1.11859630e+02, 1.82516582e+02, 2.01659194e+02]],\n\n        [[6.29366568e+01, 1.45369288e+02, 1.41771933e+02],\n         [1.19727204e+02, 2.11503978e+02, 1.76236666e+02],\n         [2.03431512e+02, 1.32587413e+02, 3.69583305e+01],\n         [2.04547336e+02, 2.31711394e+02, 4.63822741e+01],\n         [1.07162287e+02, 1.58288156e+02, 1.21379716e+02],\n         [6.76612545e+01, 2.40830514e+02, 2.17975753e-02],\n         [1.91988024e+01, 2.60850062e+01, 1.55787627e+02],\n         [2.51234992e+02, 1.00758381e+02, 1.83592850e+02],\n         [1.04879107e+02, 1.12155181e+02, 1.07051952e+02],\n         [2.87976531e+01, 1.66868442e+00, 9.73604521e+01]],\n\n        [[2.49716467e+02, 1.71728650e+02, 2.12143294e+02],\n         [2.52890744e+02, 2.07265435e+02, 7.45672796e+01],\n         [6.51678656e+01, 1.06448234e+02, 1.52701930e+02],\n         [9.90440030e+01, 5.76465404e+01, 5.61375407e+01],\n         [1.57947244e+02, 2.20154524e+02, 1.41651682e+02],\n         [8.06229842e+01, 3.68704065e+01, 2.06731230e+02],\n         [7.66880663e+01, 1.71457330e+02, 1.10870536e+02],\n         [1.25201111e+02, 2.23444115e+01, 2.20779633e+02],\n         [3.55634606e+01, 2.18102438e+02, 1.17769194e+02],\n         [1.90304107e+02, 1.41252936e+00, 2.04281791e+02]],\n\n        [[1.43245622e+02, 1.55231325e+02, 1.91377652e+02],\n         [1.16922949e+02, 1.24123034e+02, 4.96738506e+01],\n         [2.05727388e+02, 2.20208734e+02, 2.19217740e+02],\n         [2.04999557e+02, 1.15650716e+02, 1.52237106e+02],\n         [1.17887128e+02, 1.42267764e+02, 7.05407458e+01],\n         [2.62990131e+01, 1.86099503e+01, 1.34423634e+02],\n         [2.60670367e+01, 3.54828093e+01, 1.85864388e+02],\n         [2.38497403e+02, 2.07529001e+02, 1.60262913e+02],\n         [2.12283025e+02, 9.98694999e+01, 1.20445790e+02],\n         [1.59070282e+02, 1.06111742e+00, 2.13871939e+02]]],\n\n\n       [[[1.52150960e+02, 2.12408087e+02, 1.68585084e+02],\n         [2.03813563e+02, 1.60166158e+02, 1.29226583e+02],\n         [5.70475164e+01, 1.75318861e+02, 1.91898474e+01],\n         [1.26419474e+02, 2.27435265e+01, 1.31384443e+01],\n         [6.20514438e+00, 2.09200392e+02, 1.74046095e+02],\n         [1.37790255e+02, 1.81722746e+02, 1.56504540e+02],\n         [1.57523368e+02, 1.03559708e-01, 1.60397298e+02],\n         [1.34773085e+02, 1.21552162e+02, 2.48197410e+02],\n         [1.56352462e+02, 9.82783165e+01, 1.76721633e+02],\n         [2.50540679e+02, 1.34047199e+02, 1.06560383e+02]],\n\n        [[5.46413488e+01, 2.51964091e+02, 9.95607957e+00],\n         [1.04881956e+02, 9.94274917e+01, 1.56014460e+02],\n         [9.12339285e+01, 7.02311792e+01, 1.52254451e+02],\n         [2.50460925e+02, 1.23785968e+02, 4.43701005e+01],\n         [1.32969592e+02, 3.23401798e+01, 3.34070722e+01],\n         [7.41075585e+01, 1.79820178e+01, 5.40151034e+01],\n         [7.19420085e+01, 9.65973405e+01, 4.54220538e+01],\n         [1.37415954e+02, 2.28373324e+02, 1.51607653e+02],\n         [1.56304263e+02, 2.00192986e+02, 1.35590552e+01],\n         [9.34788783e+01, 5.68449206e+01, 9.07629067e+01]],\n\n        [[1.93269573e+02, 1.87577442e+02, 1.12919105e+02],\n         [2.49170576e+02, 9.26793212e+01, 7.57802096e+00],\n         [2.38753885e+02, 1.98045241e+02, 1.83495457e+02],\n         [9.08328087e+00, 9.74854952e+01, 1.51650942e+02],\n         [1.58449474e+02, 1.73120724e+02, 9.53758224e+01],\n         [1.03074989e+02, 2.35049908e+02, 5.17752352e+01],\n         [6.41812708e+01, 2.50312765e+01, 1.79459754e+02],\n         [1.03523108e+02, 1.62123556e+02, 2.53833578e+01],\n         [2.07995734e+02, 9.52754115e+01, 1.63982051e+02],\n         [2.43106338e+02, 1.38211262e+02, 8.49906532e+01]],\n\n        [[9.30947480e+01, 1.55090598e+02, 2.00199585e+02],\n         [1.98943788e+02, 2.44633914e+02, 1.01102271e+02],\n         [3.13091541e+01, 1.90893598e+02, 1.20943356e+02],\n         [9.12300767e+01, 2.17503832e+02, 1.75065574e+02],\n         [1.43829463e+02, 2.28789722e+02, 6.38831223e+01],\n         [2.31912743e+02, 2.67506963e+01, 1.77578040e+02],\n         [2.54341038e+02, 1.56144713e+02, 2.01466090e+02],\n         [1.55646511e+02, 5.58565036e-02, 2.47708359e+02],\n         [1.67132235e+02, 2.00459729e+02, 8.74054721e+01],\n         [2.39987971e+02, 3.42893498e+01, 2.04918171e+02]],\n\n        [[2.15329824e+01, 1.38521918e+02, 5.64076784e+01],\n         [9.43643530e+00, 4.82260752e+01, 2.20466093e+02],\n         [6.94906643e+01, 4.44513402e+01, 1.65757715e+02],\n         [1.05780619e+01, 2.35882946e+02, 2.16259035e+02],\n         [2.09563515e+02, 8.37380781e+01, 5.35573404e+01],\n         [1.96616485e+02, 1.16020112e+02, 2.25930008e+02],\n         [2.40509988e+02, 2.34813273e+02, 1.89658223e+02],\n         [1.11743211e+02, 2.25261997e+02, 1.78754834e+02],\n         [4.71192478e+01, 2.02528750e+02, 2.05503084e+02],\n         [2.38554684e+02, 2.97812791e+01, 1.43341491e+02]],\n\n        [[1.00742344e+02, 5.33198982e+01, 2.19787271e+02],\n         [8.37916321e+00, 1.61398691e+02, 7.92151916e+01],\n         [7.06730308e+01, 5.38654475e+01, 2.48588375e+01],\n         [1.66554278e+02, 2.16265607e+02, 2.25185961e+02],\n         [2.94896529e+01, 1.37695957e+02, 7.83881057e+01],\n         [1.06526540e+02, 1.57383411e+02, 1.92183899e+02],\n         [2.48501005e+02, 2.14340746e+02, 1.10785242e+01],\n         [7.67758785e+01, 1.86623432e+02, 1.87899034e+01],\n         [1.53071890e+02, 1.96050225e+02, 9.26574958e+01],\n         [6.29320365e+01, 2.21743717e+02, 1.98227019e+02]],\n\n        [[2.28934060e+02, 7.94918073e+00, 1.23103600e+02],\n         [1.87373727e+02, 2.09376264e+02, 1.95195894e+02],\n         [1.39470871e+02, 5.77094225e+01, 1.34229759e+01],\n         [1.62935808e+02, 1.03149246e+02, 1.59191050e+02],\n         [2.36523838e+02, 2.58774828e+01, 4.30289346e+01],\n         [1.64540297e+02, 1.61420308e+02, 2.24470686e+02],\n         [2.45147201e+02, 2.44529351e+02, 2.00332040e+02],\n         [7.79648895e+01, 1.25867068e+02, 3.29918004e+01],\n         [2.33096352e+02, 7.16563136e+00, 1.98981296e+02],\n         [2.06702392e+02, 1.52743158e+02, 6.54432295e+01]],\n\n        [[2.08588994e+02, 2.15285266e+02, 1.26838379e+02],\n         [1.07619806e+02, 1.86947442e+02, 1.41703796e+02],\n         [1.41250792e+02, 1.21565718e+02, 1.46470533e+02],\n         [8.96257073e+01, 9.75881379e+01, 2.46471003e+02],\n         [1.91328149e+02, 8.08815225e+00, 9.75361316e+01],\n         [8.84484106e+01, 1.99867231e+02, 1.79714144e+00],\n         [1.29368410e+02, 6.73508720e+01, 6.51669334e+01],\n         [2.37916345e+02, 1.89745432e+02, 1.43349480e+02],\n         [1.44942543e+02, 1.08071378e+02, 3.09770069e+01],\n         [2.33643884e+02, 1.25136684e+02, 1.60828261e+02]],\n\n        [[1.87146048e+02, 1.01621393e+02, 1.23689421e+02],\n         [1.04679121e+01, 7.59270076e+01, 1.17203661e+02],\n         [4.65741511e+01, 2.07624655e+02, 1.27911707e+02],\n         [2.28032120e+02, 2.12576721e+02, 6.26808661e+01],\n         [7.19823536e+01, 9.33255112e+01, 2.28832312e+01],\n         [3.33050607e+01, 5.60229009e+01, 2.02313982e+02],\n         [2.13320649e+02, 1.05744341e+02, 5.99725782e+01],\n         [1.94836741e+02, 1.69115053e+02, 2.23555120e+02],\n         [1.77984969e+01, 2.31120368e+02, 1.36552631e+02],\n         [1.85791011e+02, 1.22073620e+02, 1.19289244e+02]],\n\n        [[3.89129612e+01, 1.79489423e+02, 1.30424001e+02],\n         [2.28216360e+02, 1.46108190e+02, 1.91059859e+01],\n         [2.99888576e+01, 4.87287171e+01, 1.27214786e+02],\n         [1.95735090e+02, 1.86446877e+02, 2.56041013e+01],\n         [1.25562645e+02, 5.02695487e+01, 6.38678791e+01],\n         [2.39162107e+02, 1.94990959e+01, 1.90013246e+02],\n         [1.84279542e+02, 1.11911052e+02, 2.12690058e+02],\n         [4.98287657e+01, 2.52363515e+01, 1.01920850e+02],\n         [2.52041119e+02, 3.19592747e+01, 8.07537958e+01],\n         [1.87889982e+02, 1.53575807e+02, 3.38969476e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d10116b20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -32.818832  ,   42.047935  ,  -40.386093  ],\n         [   4.1764984 ,  -35.497345  ,   88.89034   ],\n         [ -48.688873  ,   28.792564  ,  -22.73053   ],\n         [  97.41508   ,   65.971214  ,  -66.015656  ],\n         [  90.60496   ,   28.085014  , -115.500435  ],\n         [ 148.53314   ,  -37.185036  ,  -61.78681   ],\n         [ -19.713097  ,   75.12351   ,   96.04206   ],\n         [ -42.897     ,   62.690666  ,  121.98473   ],\n         [ -96.822044  ,  -79.08681   ,   33.56974   ],\n         [ -35.7118    ,   53.064766  ,   34.806587  ]],\n\n        [[ 112.976326  ,   30.956276  ,  -49.521126  ],\n         [ -87.308395  ,  118.99467   ,  -42.99859   ],\n         [ 114.65652   ,    2.7261124 ,  126.40342   ],\n         [ 151.05072   ,  -66.286644  ,   78.21444   ],\n         [  -5.5622406 ,  -58.06754   ,    2.2776108 ],\n         [ -35.403473  , -113.6281    ,   68.61356   ],\n         [ -72.26054   ,   74.17713   ,  -53.494713  ],\n         [ -42.706654  ,  -83.641914  ,  117.76583   ],\n         [ -78.7096    ,  -69.927826  ,  -64.557556  ],\n         [-100.43472   , -106.814156  ,   70.083534  ]],\n\n        [[  -2.5869293 ,   36.25744   ,  -60.055214  ],\n         [ 138.23907   ,  -24.239433  ,   39.993202  ],\n         [ 144.06491   ,  -33.40712   , -122.23791   ],\n         [ 134.77963   ,   72.91111   ,  -37.7022    ],\n         [  36.610146  ,  -75.18916   , -122.18806   ],\n         [ -52.53131   ,  126.23696   ,   59.67283   ],\n         [ 111.46853   ,  104.67838   ,   22.118828  ],\n         [  95.34597   , -111.75257   ,  -82.30553   ],\n         [  59.680443  ,  -14.565659  ,  -61.16513   ],\n         [  38.78141   ,  114.568535  ,   14.6004715 ]],\n\n        [[ -50.556107  ,  117.51519   ,  102.60494   ],\n         [ 133.28839   ,  131.16397   ,  106.66706   ],\n         [ -35.774002  ,  -48.40616   ,   76.836235  ],\n         [  48.88494   ,  119.542625  ,   97.333275  ],\n         [  95.80845   ,   14.089439  ,  -29.49665   ],\n         [ 120.07278   ,  -84.56429   ,  124.25024   ],\n         [ 114.928185  ,  -81.449196  ,  -94.7873    ],\n         [   3.8104782 ,   32.28849   ,    0.5667496 ],\n         [ -96.31295   ,   43.807198  ,  -48.187653  ],\n         [  23.796951  ,   22.726112  ,  117.37347   ]],\n\n        [[  84.77445   ,  -97.61271   ,  115.154915  ],\n         [ 150.23013   ,  -13.169144  ,   33.072807  ],\n         [  34.591957  ,  -89.02163   ,  123.72167   ],\n         [ -27.00998   ,   -8.619331  ,  -21.718773  ],\n         [  59.38212   ,  -53.67662   ,   65.86579   ],\n         [  41.603172  ,  104.43098   ,   -8.74205   ],\n         [  35.033684  ,   41.887978  , -113.6402    ],\n         [ -72.94548   ,  -45.31288   ,  -94.75142   ],\n         [  66.07412   ,  -60.100586  ,   90.8119    ],\n         [ 137.77585   ,   68.24438   ,  101.22849   ]],\n\n        [[  -3.592987  ,  -53.972813  ,   95.97674   ],\n         [  16.383446  , -113.4082    ,  -47.90824   ],\n         [ -55.679676  ,  -10.9048    , -111.212105  ],\n         [ -20.123322  ,  -57.923214  ,   99.02596   ],\n         [   8.898056  ,   76.00678   ,  -79.70015   ],\n         [  34.983223  ,   71.873085  , -109.08745   ],\n         [ 124.39019   ,  -83.357315  ,   80.152916  ],\n         [ -45.67192   ,  -98.77465   ,   52.191963  ],\n         [ -21.099792  ,   -6.035164  ,  -88.218124  ],\n         [ 116.65786   , -116.65143   ,  -45.645073  ]],\n\n        [[  50.093758  ,  -24.942162  ,  -62.67445   ],\n         [ -55.080772  ,  -61.947403  ,  130.2402    ],\n         [ -65.23651   ,   14.613289  ,  -52.934433  ],\n         [  76.74128   ,  -92.93708   ,  104.675514  ],\n         [ 140.79376   ,   85.85093   ,   42.08448   ],\n         [ 102.10288   ,   32.355766  , -110.381096  ],\n         [ 132.01071   ,   82.34965   ,   16.012505  ],\n         [ -25.461807  ,   36.535606  ,  104.06078   ],\n         [ 123.45312   ,   39.052025  ,  -72.024     ],\n         [  97.72019   ,   65.73759   ,  -11.820374  ]],\n\n        [[  37.832924  ,   28.590294  ,  -60.743343  ],\n         [  72.29766   ,   94.72498   ,   -3.952797  ],\n         [ -66.98067   ,   15.808418  ,   79.75152   ],\n         [ -57.55673   ,  114.932396  ,   80.86733   ],\n         [  17.440712  ,   41.509163  ,  -16.517715  ],\n         [-103.917206  ,  124.05152   ,  -56.018745  ],\n         [  51.848625  ,  -90.69399   , -104.4812    ],\n         [  79.65385   ,  -16.020622  ,  127.554985  ],\n         [   3.1129456 ,   -4.6238174 ,  -18.800896  ],\n         [  -6.5785522 , -115.11031   ,  -94.88235   ]],\n\n        [[ 108.20429   ,   54.949654  ,  126.03646   ],\n         [ -29.371727  ,   90.48644   ,  129.21075   ],\n         [  48.76293   ,  -10.330765  ,  -58.51214   ],\n         [ -47.801464  ,  -59.132458  ,  -24.635994  ],\n         [  37.712685  ,  103.37553   ,   34.26725   ],\n         [ 102.79223   ,  -79.90859   ,  -43.057014  ],\n         [   6.931534  ,   54.678337  ,  -46.991936  ],\n         [ 116.84063   ,  -94.434586  ,    1.5211105 ],\n         [  13.830193  ,  101.32343   ,  -88.11654   ],\n         [ 100.34278   , -115.36647   ,   66.62411   ]],\n\n        [[  87.43865   ,   38.452324  ,   19.56562   ],\n         [ -54.265152  ,    7.3440323 ,   -6.7570496 ],\n         [ 115.27874   ,  103.42974   ,   82.047386  ],\n         [  48.298103  ,   -1.1282806 ,   81.31956   ],\n         [ -33.398254  ,   25.488762  ,   -5.7928696 ],\n         [  30.484627  ,  -98.16905   ,  -97.38099   ],\n         [  81.92539   ,  -81.29619   ,  -97.61296   ],\n         [  56.323906  ,   90.75001   ,  114.817406  ],\n         [  16.50679   ,  -16.9095    ,   88.60302   ],\n         [ 109.93293   , -115.71788   ,   35.39028   ]]],\n\n\n       [[[  64.64608   ,   95.62908   ,   28.470955  ],\n         [  25.287575  ,   43.387154  ,   80.13357   ],\n         [ -84.74915   ,   58.539864  ,  -66.632484  ],\n         [ -90.80056   ,  -94.03548   ,    2.7394714 ],\n         [  70.10709   ,   92.421394  , -117.47485   ],\n         [  52.565544  ,   64.94375   ,   14.110252  ],\n         [  56.45829   , -116.67544   ,   33.84336   ],\n         [ 144.25839   ,    4.773163  ,   11.093086  ],\n         [  72.78263   ,  -18.500687  ,   32.672462  ],\n         [   2.6213837 ,   17.268196  ,  126.86068   ]],\n\n        [[ -93.982925  ,  135.18509   ,  -69.03865   ],\n         [  52.075462  ,  -17.35151   ,  -18.798042  ],\n         [  48.315453  ,  -46.54782   ,  -32.446075  ],\n         [ -59.5689    ,    7.0069656 ,  126.78092   ],\n         [ -70.53193   ,  -84.43882   ,    9.289589  ],\n         [ -49.9239    ,  -98.79698   ,  -49.57244   ],\n         [ -58.51695   ,  -20.181656  ,  -51.73799   ],\n         [  47.668648  ,  111.59432   ,   13.735954  ],\n         [ -90.379944  ,   83.413994  ,   32.62426   ],\n         [ -13.176094  ,  -59.93408   ,  -30.201118  ]],\n\n        [[   8.980103  ,   70.79844   ,   69.58958   ],\n         [ -96.360985  ,  -24.099678  ,  125.49058   ],\n         [  79.55645   ,   81.26624   ,  115.07389   ],\n         [  47.711937  ,  -19.293503  , -114.59672   ],\n         [  -8.563179  ,   56.34173   ,   34.769478  ],\n         [ -52.16377   ,  118.27091   ,  -20.605011  ],\n         [  75.520744  ,  -91.74773   ,  -59.498726  ],\n         [ -78.55565   ,   45.34455   ,  -20.15689   ],\n         [  60.043053  ,  -21.503586  ,   84.31573   ],\n         [ -18.948349  ,   21.432259  ,  119.42634   ]],\n\n        [[  96.26058   ,   38.311592  ,  -30.58525   ],\n         [  -2.836731  ,  127.85491   ,   75.26379   ],\n         [  17.004356  ,   74.1146    ,  -92.37085   ],\n         [  71.126564  ,  100.72483   ,  -32.44992   ],\n         [ -40.05588   ,  112.01072   ,   20.149467  ],\n         [  73.63903   ,  -90.028305  ,  108.23275   ],\n         [  97.52709   ,   39.365715  ,  130.66104   ],\n         [ 143.76935   , -116.723145  ,   31.966515  ],\n         [ -16.533531  ,   83.68073   ,   43.452232  ],\n         [ 100.979164  ,  -82.489655  ,  116.307976  ]],\n\n        [[ -47.531326  ,   21.742912  , -102.14702   ],\n         [ 116.52709   ,  -68.552925  , -114.24356   ],\n         [  61.818718  ,  -72.32766   ,  -54.18934   ],\n         [ 112.32003   ,  119.10395   , -113.10194   ],\n         [ -50.381664  ,  -33.040924  ,   85.88352   ],\n         [ 121.991005  ,   -0.75888824,   72.936485  ],\n         [  85.719215  ,  118.03428   ,  116.829994  ],\n         [  74.815834  ,  108.482994  ,  -11.93679   ],\n         [ 101.56408   ,   85.74975   ,  -76.56075   ],\n         [  39.40249   ,  -86.99772   ,  114.87469   ]],\n\n        [[ 115.848274  ,  -63.459103  ,  -22.937653  ],\n         [ -24.723808  ,   44.619698  , -115.300835  ],\n         [ -79.08017   ,  -62.91355   ,  -53.006973  ],\n         [ 121.246956  ,   99.48661   ,   42.874275  ],\n         [ -25.550896  ,   20.916954  ,  -94.190346  ],\n         [  88.244896  ,   40.60441   ,  -17.153458  ],\n         [ -92.86048   ,   97.561745  ,  124.82101   ],\n         [ -85.1491    ,   69.84443   ,  -46.90412   ],\n         [ -11.281509  ,   79.27123   ,   29.391884  ],\n         [  94.28802   ,  104.964714  ,  -60.747963  ]],\n\n        [[  19.164597  , -108.82982   ,  105.25407   ],\n         [  91.25689   ,   92.59727   ,   63.693733  ],\n         [ -90.51603   ,  -59.069576  ,   15.790871  ],\n         [  55.252052  ,  -13.629753  ,   39.255806  ],\n         [ -60.91007   ,  -90.90152   ,  112.843834  ],\n         [ 120.531685  ,   44.641304  ,   40.8603    ],\n         [  96.39304   ,  127.75036   ,  121.4672    ],\n         [ -70.947205  ,    9.088066  ,  -45.71511   ],\n         [  95.04229   , -109.613365  ,  109.41636   ],\n         [ -38.495773  ,   35.964165  ,   83.02239   ]],\n\n        [[  22.899376  ,   98.50626   ,   84.90899   ],\n         [  37.764793  ,   70.16845   ,  -16.060196  ],\n         [  42.531532  ,    4.7867203 ,   17.570793  ],\n         [ 142.53201   ,  -19.190865  ,  -34.05429   ],\n         [  -6.40287   , -108.69085   ,   67.648155  ],\n         [-102.14186   ,   83.088234  ,  -35.23159   ],\n         [ -38.77207   ,  -49.428123  ,    5.688408  ],\n         [  39.410484  ,   72.96644   ,  114.23635   ],\n         [ -72.962     ,   -8.707619  ,   21.262535  ],\n         [  56.88926   ,    8.357681  ,  109.96389   ]],\n\n        [[  19.75042   ,  -15.157608  ,   63.46604   ],\n         [  13.264656  ,  -40.85199   , -113.21209   ],\n         [  23.972702  ,   90.84565   ,  -77.10585   ],\n         [ -41.258137  ,   95.79772   ,  104.35212   ],\n         [ -81.05577   ,  -23.453491  ,  -51.697647  ],\n         [  98.37498   ,  -60.7561    ,  -90.37494   ],\n         [ -43.966423  ,  -11.03466   ,   89.64065   ],\n         [ 119.61611   ,   52.336052  ,   71.156746  ],\n         [  32.613625  ,  114.34136   , -105.8815    ],\n         [  15.350243  ,    5.2946243 ,   62.111015  ]],\n\n        [[  26.484993  ,   62.710426  ,  -84.767044  ],\n         [ -84.833015  ,   29.329185  ,  104.536354  ],\n         [  23.27578   ,  -68.05028   ,  -93.69115   ],\n         [ -78.3349    ,   69.667885  ,   72.05509   ],\n         [ -40.071125  ,  -66.509445  ,    1.8826447 ],\n         [  86.07424   ,  -97.27991   ,  115.48211   ],\n         [ 108.75106   ,   -4.8679504 ,   60.59954   ],\n         [  -2.0181503 ,  -91.54265   ,  -73.851234  ],\n         [ -23.185204  ,  -84.819725  ,  128.36111   ],\n         [ -70.04205   ,   36.796806  ,   64.209984  ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d1011f3f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 83, 158,  71],\n         [212,  81, 108],\n         [100, 145,  55],\n         [ 57, 182, 201],\n         [  8, 144, 194],\n         [ 61,  79, 252],\n         [219, 191,  84],\n         [245, 179,  61],\n         [157,  37,   7],\n         [158, 169,  68]],\n\n        [[ 74, 147, 216],\n         [ 80, 235,  16],\n         [250, 119, 218],\n         [201,  50, 254],\n         [125,  58,  98],\n         [192,   3,  68],\n         [ 70, 190,  31],\n         [241,  33,  61],\n         [ 59,  46,  25],\n         [193,   9,   3]],\n\n        [[ 63, 153, 101],\n         [163,  92, 242],\n         [  1,  83, 248],\n         [ 85, 189, 238],\n         [  1,  41, 140],\n         [183, 243,  51],\n         [145, 221, 215],\n         [ 41,   5, 199],\n         [ 62, 102, 163],\n         [138, 231, 142]],\n\n        [[226, 234,  53],\n         [230, 247, 237],\n         [200,  68,  68],\n         [221, 236, 152],\n         [ 94, 130, 199],\n         [247,  32, 224],\n         [ 28,  35, 218],\n         [124, 149, 107],\n         [ 75, 160,   7],\n         [241, 139, 127]],\n\n        [[238,  19, 188],\n         [156, 103, 254],\n         [247,  27, 138],\n         [101, 108,  76],\n         [189,  63, 163],\n         [114, 221, 145],\n         [ 10, 158, 138],\n         [ 28,  71,  30],\n         [214,  56, 170],\n         [224, 185, 241]],\n\n        [[219,  62, 100],\n         [ 75,   3, 120],\n         [ 12, 105,  48],\n         [222,  58,  83],\n         [ 43, 192, 112],\n         [ 14, 188, 138],\n         [203,  33, 228],\n         [175,  18,  58],\n         [ 35, 110,  82],\n         [ 78,   0, 220]],\n\n        [[ 61,  91, 154],\n         [253,  54,  48],\n         [ 70, 131,  38],\n         [228,  23, 180],\n         [165, 202, 244],\n         [ 13, 149, 206],\n         [139, 199, 235],\n         [227, 153,  78],\n         [ 51, 155, 227],\n         [111, 182, 201]],\n\n        [[ 62, 145, 141],\n         [119, 211, 176],\n         [203, 132,  36],\n         [204, 231,  46],\n         [107, 158, 121],\n         [ 67, 240,   0],\n         [ 19,  26, 155],\n         [251, 100, 183],\n         [104, 112, 107],\n         [ 28,   1,  97]],\n\n        [[249, 171, 212],\n         [252, 207,  74],\n         [ 65, 106, 152],\n         [ 99,  57,  56],\n         [157, 220, 141],\n         [ 80,  36, 206],\n         [ 76, 171, 110],\n         [125,  22, 220],\n         [ 35, 218, 117],\n         [190,   1, 204]],\n\n        [[143, 155, 191],\n         [116, 124,  49],\n         [205, 220, 219],\n         [204, 115, 152],\n         [117, 142,  70],\n         [ 26,  18, 134],\n         [ 26,  35, 185],\n         [238, 207, 160],\n         [212,  99, 120],\n         [159,   1, 213]]],\n\n\n       [[[152, 212, 168],\n         [203, 160, 129],\n         [ 57, 175,  19],\n         [126,  22,  13],\n         [  6, 209, 174],\n         [137, 181, 156],\n         [157,   0, 160],\n         [134, 121, 248],\n         [156,  98, 176],\n         [250, 134, 106]],\n\n        [[ 54, 251,   9],\n         [104,  99, 156],\n         [ 91,  70, 152],\n         [250, 123,  44],\n         [132,  32,  33],\n         [ 74,  17,  54],\n         [ 71,  96,  45],\n         [137, 228, 151],\n         [156, 200,  13],\n         [ 93,  56,  90]],\n\n        [[193, 187, 112],\n         [249,  92,   7],\n         [238, 198, 183],\n         [  9,  97, 151],\n         [158, 173,  95],\n         [103, 235,  51],\n         [ 64,  25, 179],\n         [103, 162,  25],\n         [207,  95, 163],\n         [243, 138,  84]],\n\n        [[ 93, 155, 200],\n         [198, 244, 101],\n         [ 31, 190, 120],\n         [ 91, 217, 175],\n         [143, 228,  63],\n         [231,  26, 177],\n         [254, 156, 201],\n         [155,   0, 247],\n         [167, 200,  87],\n         [239,  34, 204]],\n\n        [[ 21, 138,  56],\n         [  9,  48, 220],\n         [ 69,  44, 165],\n         [ 10, 235, 216],\n         [209,  83,  53],\n         [196, 116, 225],\n         [240, 234, 189],\n         [111, 225, 178],\n         [ 47, 202, 205],\n         [238,  29, 143]],\n\n        [[100,  53, 219],\n         [  8, 161,  79],\n         [ 70,  53,  24],\n         [166, 216, 225],\n         [ 29, 137,  78],\n         [106, 157, 192],\n         [248, 214,  11],\n         [ 76, 186,  18],\n         [153, 196,  92],\n         [ 62, 221, 198]],\n\n        [[228,   7, 123],\n         [187, 209, 195],\n         [139,  57,  13],\n         [162, 103, 159],\n         [236,  25,  43],\n         [164, 161, 224],\n         [245, 244, 200],\n         [ 77, 125,  32],\n         [233,   7, 198],\n         [206, 152,  65]],\n\n        [[208, 215, 126],\n         [107, 186, 141],\n         [141, 121, 146],\n         [ 89,  97, 246],\n         [191,   8,  97],\n         [ 88, 199,   1],\n         [129,  67,  65],\n         [237, 189, 143],\n         [144, 108,  30],\n         [233, 125, 160]],\n\n        [[187, 101, 123],\n         [ 10,  75, 117],\n         [ 46, 207, 127],\n         [228, 212,  62],\n         [ 71,  93,  22],\n         [ 33,  56, 202],\n         [213, 105,  59],\n         [194, 169, 223],\n         [ 17, 231, 136],\n         [185, 122, 119]],\n\n        [[ 38, 179, 130],\n         [228, 146,  19],\n         [ 29,  48, 127],\n         [195, 186,  25],\n         [125,  50,  63],\n         [239,  19, 190],\n         [184, 111, 212],\n         [ 49,  25, 101],\n         [252,  31,  80],\n         [187, 153,  33]]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d10116a30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -32.939003 ,   41.221    ,  -40.68     ],\n         [   4.060997 ,  -35.779    ,   88.32     ],\n         [ -48.939003 ,   28.221    ,  -23.68     ],\n         [  97.061    ,   65.221    ,  -66.68     ],\n         [  90.061    ,   27.221    , -115.68     ],\n         [ 148.061    ,  -37.779    ,  -62.68     ],\n         [ -19.939003 ,   74.221    ,   95.32     ],\n         [ -42.939003 ,   62.221    ,  121.32     ],\n         [ -96.939    ,  -79.779    ,   33.32     ],\n         [ -35.939003 ,   52.221    ,   34.32     ]],\n\n        [[ 112.061    ,   30.221    ,  -49.68     ],\n         [ -87.939    ,  118.221    ,  -43.68     ],\n         [ 114.061    ,    2.2210007,  126.32     ],\n         [ 150.061    ,  -66.779    ,   77.32     ],\n         [  -5.939003 ,  -58.779    ,    1.3199997],\n         [ -35.939003 , -113.779    ,   68.32     ],\n         [ -72.939    ,   73.221    ,  -53.68     ],\n         [ -42.939003 ,  -83.779    ,  117.32     ],\n         [ -78.939    ,  -70.779    ,  -64.68     ],\n         [-100.939    , -107.779    ,   69.32     ]],\n\n        [[  -2.939003 ,   36.221    ,  -60.68     ],\n         [ 138.061    ,  -24.779    ,   39.32     ],\n         [ 144.061    ,  -33.779    , -122.68     ],\n         [ 134.061    ,   72.221    ,  -38.68     ],\n         [  36.060997 ,  -75.779    , -122.68     ],\n         [ -52.939003 ,  126.221    ,   59.32     ],\n         [ 111.061    ,  104.221    ,   21.32     ],\n         [  95.061    , -111.779    ,  -82.68     ],\n         [  59.060997 ,  -14.778999 ,  -61.68     ],\n         [  38.060997 ,  114.221    ,   14.32     ]],\n\n        [[ -50.939003 ,  117.221    ,  102.32     ],\n         [ 133.061    ,  130.22101  ,  106.32     ],\n         [ -35.939003 ,  -48.779    ,   76.32     ],\n         [  48.060997 ,  119.221    ,   97.32     ],\n         [  95.061    ,   13.221001 ,  -29.68     ],\n         [ 120.061    ,  -84.779    ,  123.32     ],\n         [ 114.061    ,  -81.779    ,  -95.68     ],\n         [   3.060997 ,   32.221    ,    0.3199997],\n         [ -96.939    ,   43.221    ,  -48.68     ],\n         [  23.060997 ,   22.221    ,  117.32     ]],\n\n        [[  84.061    ,  -97.779    ,  114.32     ],\n         [ 150.061    ,  -13.778999 ,   32.32     ],\n         [  34.060997 ,  -89.779    ,  123.32     ],\n         [ -27.939003 ,   -8.778999 ,  -22.68     ],\n         [  59.060997 ,  -53.779    ,   65.32     ],\n         [  41.060997 ,  104.221    ,   -9.68     ],\n         [  34.060997 ,   41.221    , -113.68     ],\n         [ -73.939    ,  -45.779    ,  -95.68     ],\n         [  66.061    ,  -60.779    ,   90.32     ],\n         [ 137.061    ,   68.221    ,  100.32     ]],\n\n        [[  -3.939003 ,  -54.779    ,   95.32     ],\n         [  16.060997 , -113.779    ,  -48.68     ],\n         [ -55.939003 ,  -11.778999 , -111.68     ],\n         [ -20.939003 ,  -58.779    ,   98.32     ],\n         [   8.060997 ,   75.221    ,  -80.68     ],\n         [  34.060997 ,   71.221    , -109.68     ],\n         [ 124.061    ,  -83.779    ,   79.32     ],\n         [ -45.939003 ,  -98.779    ,   51.32     ],\n         [ -21.939003 ,   -6.7789993,  -88.68     ],\n         [ 116.061    , -116.779    ,  -45.68     ]],\n\n        [[  50.060997 ,  -25.779    ,  -62.68     ],\n         [ -55.939003 ,  -62.779    ,  129.32     ],\n         [ -65.939    ,   14.221001 ,  -53.68     ],\n         [  76.061    ,  -93.779    ,  104.32     ],\n         [ 140.061    ,   85.221    ,   41.32     ],\n         [ 102.061    ,   32.221    , -110.68     ],\n         [ 131.061    ,   82.221    ,   15.32     ],\n         [ -25.939003 ,   36.221    ,  103.32     ],\n         [ 123.061    ,   38.221    ,  -72.68     ],\n         [  97.061    ,   65.221    ,  -12.68     ]],\n\n        [[  37.060997 ,   28.221    ,  -61.68     ],\n         [  72.061    ,   94.221    ,   -4.6800003],\n         [ -67.939    ,   15.221001 ,   79.32     ],\n         [ -57.939003 ,  114.221    ,   80.32     ],\n         [  17.060997 ,   41.221    ,  -16.68     ],\n         [-103.939    ,  123.221    ,  -56.68     ],\n         [  51.060997 ,  -90.779    , -104.68     ],\n         [  79.061    ,  -16.779    ,  127.32     ],\n         [   3.060997 ,   -4.7789993,  -19.68     ],\n         [  -6.939003 , -115.779    ,  -95.68     ]],\n\n        [[ 108.061    ,   54.221    ,  125.32     ],\n         [ -29.939003 ,   90.221    ,  128.32     ],\n         [  48.060997 ,  -10.778999 ,  -58.68     ],\n         [ -47.939003 ,  -59.779    ,  -24.68     ],\n         [  37.060997 ,  103.221    ,   33.32     ],\n         [ 102.061    ,  -80.779    ,  -43.68     ],\n         [   6.060997 ,   54.221    ,  -47.68     ],\n         [ 116.061    ,  -94.779    ,    1.3199997],\n         [  13.060997 ,  101.221    ,  -88.68     ],\n         [ 100.061    , -115.779    ,   66.32     ]],\n\n        [[  87.061    ,   38.221    ,   19.32     ],\n         [ -54.939003 ,    7.2210007,   -7.6800003],\n         [ 115.061    ,  103.221    ,   81.32     ],\n         [  48.060997 ,   -1.7789993,   80.32     ],\n         [ -33.939003 ,   25.221    ,   -6.6800003],\n         [  30.060997 ,  -98.779    ,  -97.68     ],\n         [  81.061    ,  -81.779    ,  -97.68     ],\n         [  56.060997 ,   90.221    ,  114.32     ],\n         [  16.060997 ,  -17.779    ,   88.32     ],\n         [ 109.061    , -115.779    ,   35.32     ]]],\n\n\n       [[[  64.061    ,   95.221    ,   28.32     ],\n         [  25.060997 ,   43.221    ,   79.32     ],\n         [ -84.939    ,   58.221    ,  -66.68     ],\n         [ -90.939    ,  -94.779    ,    2.3199997],\n         [  70.061    ,   92.221    , -117.68     ],\n         [  52.060997 ,   64.221    ,   13.32     ],\n         [  56.060997 , -116.779    ,   33.32     ],\n         [ 144.061    ,    4.2210007,   10.32     ],\n         [  72.061    ,  -18.779    ,   32.32     ],\n         [   2.060997 ,   17.221    ,  126.32     ]],\n\n        [[ -94.939    ,  134.22101  ,  -69.68     ],\n         [  52.060997 ,  -17.779    ,  -19.68     ],\n         [  48.060997 ,  -46.779    ,  -32.68     ],\n         [ -59.939003 ,    6.2210007,  126.32     ],\n         [ -70.939    ,  -84.779    ,    8.32     ],\n         [ -49.939003 ,  -99.779    ,  -49.68     ],\n         [ -58.939003 ,  -20.779    ,  -52.68     ],\n         [  47.060997 ,  111.221    ,   13.32     ],\n         [ -90.939    ,   83.221    ,   32.32     ],\n         [ -13.939003 ,  -60.779    ,  -30.68     ]],\n\n        [[   8.060997 ,   70.221    ,   69.32     ],\n         [ -96.939    ,  -24.779    ,  125.32     ],\n         [  79.061    ,   81.221    ,  114.32     ],\n         [  47.060997 ,  -19.779    , -114.68     ],\n         [  -8.939003 ,   56.221    ,   34.32     ],\n         [ -52.939003 ,  118.221    ,  -20.68     ],\n         [  75.061    ,  -91.779    ,  -59.68     ],\n         [ -78.939    ,   45.221    ,  -20.68     ],\n         [  59.060997 ,  -21.779    ,   83.32     ],\n         [ -19.939003 ,   21.221    ,  119.32     ]],\n\n        [[  96.061    ,   38.221    ,  -30.68     ],\n         [  -2.939003 ,  127.221    ,   74.32     ],\n         [  16.060997 ,   73.221    ,  -92.68     ],\n         [  71.061    ,  100.221    ,  -32.68     ],\n         [ -40.939003 ,  111.221    ,   19.32     ],\n         [  73.061    ,  -90.779    ,  107.32     ],\n         [  97.061    ,   39.221    ,  130.32     ],\n         [ 143.061    , -116.779    ,   31.32     ],\n         [ -16.939003 ,   83.221    ,   43.32     ],\n         [ 100.061    ,  -82.779    ,  115.32     ]],\n\n        [[ -47.939003 ,   21.221    , -102.68     ],\n         [ 116.061    ,  -68.779    , -114.68     ],\n         [  61.060997 ,  -72.779    ,  -54.68     ],\n         [ 112.061    ,  118.221    , -113.68     ],\n         [ -50.939003 ,  -33.779    ,   85.32     ],\n         [ 121.061    ,   -0.7789993,   72.32     ],\n         [  85.061    ,  117.221    ,  116.32     ],\n         [  74.061    ,  108.221    ,  -12.68     ],\n         [ 101.061    ,   85.221    ,  -76.68     ],\n         [  39.060997 ,  -87.779    ,  114.32     ]],\n\n        [[ 115.061    ,  -63.779    ,  -23.68     ],\n         [ -24.939003 ,   44.221    , -115.68     ],\n         [ -79.939    ,  -63.779    ,  -53.68     ],\n         [ 121.061    ,   99.221    ,   42.32     ],\n         [ -25.939003 ,   20.221    ,  -94.68     ],\n         [  88.061    ,   40.221    ,  -17.68     ],\n         [ -92.939    ,   97.221    ,  124.32     ],\n         [ -85.939    ,   69.221    ,  -47.68     ],\n         [ -11.939003 ,   79.221    ,   29.32     ],\n         [  94.061    ,  104.221    ,  -61.68     ]],\n\n        [[  19.060997 , -109.779    ,  104.32     ],\n         [  91.061    ,   92.221    ,   63.32     ],\n         [ -90.939    ,  -59.779    ,   15.32     ],\n         [  55.060997 ,  -13.778999 ,   38.32     ],\n         [ -60.939003 ,  -91.779    ,  112.32     ],\n         [ 120.061    ,   44.221    ,   40.32     ],\n         [  96.061    ,  127.221    ,  121.32     ],\n         [ -71.939    ,    8.221001 ,  -46.68     ],\n         [  94.061    , -109.779    ,  109.32     ],\n         [ -38.939003 ,   35.221    ,   82.32     ]],\n\n        [[  22.060997 ,   98.221    ,   84.32     ],\n         [  37.060997 ,   69.221    ,  -16.68     ],\n         [  42.060997 ,    4.2210007,   17.32     ],\n         [ 142.061    ,  -19.779    ,  -34.68     ],\n         [  -6.939003 , -108.779    ,   67.32     ],\n         [-102.939    ,   82.221    ,  -35.68     ],\n         [ -38.939003 ,  -49.779    ,    5.3199997],\n         [  39.060997 ,   72.221    ,  113.32     ],\n         [ -73.939    ,   -8.778999 ,   20.32     ],\n         [  56.060997 ,    8.221001 ,  109.32     ]],\n\n        [[  19.060997 ,  -15.778999 ,   63.32     ],\n         [  13.060997 ,  -41.779    , -113.68     ],\n         [  23.060997 ,   90.221    ,  -77.68     ],\n         [ -41.939003 ,   95.221    ,  104.32     ],\n         [ -81.939    ,  -23.779    ,  -52.68     ],\n         [  98.061    ,  -60.779    ,  -90.68     ],\n         [ -44.939003 ,  -11.778999 ,   89.32     ],\n         [ 119.061    ,   52.221    ,   70.32     ],\n         [  32.060997 ,  114.221    , -106.68     ],\n         [  15.060997 ,    5.2210007,   61.32     ]],\n\n        [[  26.060997 ,   62.221    ,  -85.68     ],\n         [ -84.939    ,   29.221    ,  104.32     ],\n         [  23.060997 ,  -68.779    ,  -94.68     ],\n         [ -78.939    ,   69.221    ,   71.32     ],\n         [ -40.939003 ,  -66.779    ,    1.3199997],\n         [  86.061    ,  -97.779    ,  115.32     ],\n         [ 108.061    ,   -5.7789993,   60.32     ],\n         [  -2.939003 ,  -91.779    ,  -74.68     ],\n         [ -23.939003 ,  -85.779    ,  128.32     ],\n         [ -70.939    ,   36.221    ,   63.32     ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d101169e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[8.32939097e+01, 2.12570344e+02, 1.00949471e+02,\n          5.76643430e+01, 8.17956587e+00, 6.18931883e+01,\n          2.19722055e+02, 2.45664731e+02, 1.57249748e+02,\n          1.58486588e+02],\n         [7.41588745e+01, 8.06814117e+01, 2.50083418e+02,\n          2.01894447e+02, 1.25957612e+02, 1.92293558e+02,\n          7.01852869e+01, 2.41445836e+02, 5.91224431e+01,\n          1.93763536e+02],\n         [6.36247879e+01, 1.63673209e+02, 1.44209413e+00,\n          8.59777969e+01, 1.49194284e+00, 1.83352825e+02,\n          1.45798828e+02, 4.13744707e+01, 6.25148687e+01,\n          1.38280469e+02],\n         [2.26284947e+02, 2.30347062e+02, 2.00516240e+02,\n          2.21013281e+02, 9.41833489e+01, 2.47930235e+02,\n          2.88926995e+01, 1.24246753e+02, 7.54923501e+01,\n          2.41053467e+02],\n         [2.38834910e+02, 1.56752814e+02, 2.47401667e+02,\n          1.01961228e+02, 1.89545788e+02, 1.14937951e+02,\n          1.00398037e+01, 2.89285842e+01, 2.14491902e+02,\n          2.24908500e+02],\n         [2.19656733e+02, 7.57717562e+01, 1.24678937e+01,\n          2.22705956e+02, 4.39798539e+01, 1.45925540e+01,\n          2.03832909e+02, 1.75871967e+02, 3.54618800e+01,\n          7.80349271e+01],\n         [6.10055490e+01, 2.53920193e+02, 7.07455660e+01,\n          2.28355514e+02, 1.65764476e+02, 1.32989014e+01,\n          1.39692507e+02, 2.27740785e+02, 5.16559955e+01,\n          1.11859630e+02],\n         [6.29366568e+01, 1.19727204e+02, 2.03431512e+02,\n          2.04547336e+02, 1.07162287e+02, 6.76612545e+01,\n          1.91988024e+01, 2.51234992e+02, 1.04879107e+02,\n          2.87976531e+01],\n         [2.49716467e+02, 2.52890744e+02, 6.51678656e+01,\n          9.90440030e+01, 1.57947244e+02, 8.06229842e+01,\n          7.66880663e+01, 1.25201111e+02, 3.55634606e+01,\n          1.90304107e+02],\n         [1.43245622e+02, 1.16922949e+02, 2.05727388e+02,\n          2.04999557e+02, 1.17887128e+02, 2.62990131e+01,\n          2.60670367e+01, 2.38497403e+02, 2.12283025e+02,\n          1.59070282e+02]],\n\n        [[1.58826939e+02, 8.12816532e+01, 1.45571563e+02,\n          1.82750210e+02, 1.44864018e+02, 7.95939616e+01,\n          1.91902512e+02, 1.79469673e+02, 3.76921889e+01,\n          1.69843766e+02],\n         [1.47735276e+02, 2.35773665e+02, 1.19505114e+02,\n          5.04923547e+01, 5.87114596e+01, 3.15090520e+00,\n          1.90956137e+02, 3.31370839e+01, 4.68511718e+01,\n          9.96484558e+00],\n         [1.53036435e+02, 9.25395631e+01, 8.33718771e+01,\n          1.89690113e+02, 4.15898406e+01, 2.43015957e+02,\n          2.21457378e+02, 5.02642714e+00, 1.02213343e+02,\n          2.31347533e+02],\n         [2.34294185e+02, 2.47942970e+02, 6.83728375e+01,\n          2.36321624e+02, 1.30868433e+02, 3.22147062e+01,\n          3.53298019e+01, 1.49067494e+02, 1.60586197e+02,\n          1.39505112e+02],\n         [1.91662876e+01, 1.03609853e+02, 2.77573724e+01,\n          1.08159670e+02, 6.31023793e+01, 2.21209974e+02,\n          1.58666982e+02, 7.14661173e+01, 5.66784152e+01,\n          1.85023375e+02],\n         [6.28061861e+01, 3.37079948e+00, 1.05874198e+02,\n          5.88557858e+01, 1.92785787e+02, 1.88652086e+02,\n          3.34216887e+01, 1.80043502e+01, 1.10743837e+02,\n          1.27573395e-01],\n         [9.18368416e+01, 5.48315968e+01, 1.31392288e+02,\n          2.38419210e+01, 2.02629934e+02, 1.49134764e+02,\n          1.99128641e+02, 1.53314606e+02, 1.55831020e+02,\n          1.82516582e+02],\n         [1.45369288e+02, 2.11503978e+02, 1.32587413e+02,\n          2.31711394e+02, 1.58288156e+02, 2.40830514e+02,\n          2.60850062e+01, 1.00758381e+02, 1.12155181e+02,\n          1.66868442e+00],\n         [1.71728650e+02, 2.07265435e+02, 1.06448234e+02,\n          5.76465404e+01, 2.20154524e+02, 3.68704065e+01,\n          1.71457330e+02, 2.23444115e+01, 2.18102438e+02,\n          1.41252936e+00],\n         [1.55231325e+02, 1.24123034e+02, 2.20208734e+02,\n          1.15650716e+02, 1.42267764e+02, 1.86099503e+01,\n          3.54828093e+01, 2.07529001e+02, 9.98694999e+01,\n          1.06111742e+00]],\n\n        [[7.11201740e+01, 1.08115499e+02, 5.52501279e+01,\n          2.01354084e+02, 1.94543959e+02, 2.52472131e+02,\n          8.42259063e+01, 6.10420054e+01, 7.11695633e+00,\n          6.82272067e+01],\n         [2.16915336e+02, 1.66306120e+01, 2.18595520e+02,\n          2.54989726e+02, 9.83767651e+01, 6.85355295e+01,\n          3.16784672e+01, 6.12323510e+01, 2.52293980e+01,\n          3.50428357e+00],\n         [1.01352075e+02, 2.42178073e+02, 2.48003900e+02,\n          2.38718649e+02, 1.40549142e+02, 5.14076920e+01,\n          2.15407526e+02, 1.99284968e+02, 1.63619448e+02,\n          1.42720418e+02],\n         [5.33828973e+01, 2.37227402e+02, 6.81649988e+01,\n          1.52823951e+02, 1.99747449e+02, 2.24011772e+02,\n          2.18867190e+02, 1.07749480e+02, 7.62605643e+00,\n          1.27735954e+02],\n         [1.88713460e+02, 2.54169126e+02, 1.38530958e+02,\n          7.69290259e+01, 1.63321121e+02, 1.45542172e+02,\n          1.38972692e+02, 3.09935240e+01, 1.70013130e+02,\n          2.41714841e+02],\n         [1.00346013e+02, 1.20322447e+02, 4.82593262e+01,\n          8.38156811e+01, 1.12837057e+02, 1.38922233e+02,\n          2.28329187e+02, 5.82670816e+01, 8.28392068e+01,\n          2.20596868e+02],\n         [1.54032759e+02, 4.88582288e+01, 3.87024963e+01,\n          1.80680283e+02, 2.44732761e+02, 2.06041887e+02,\n          2.35949714e+02, 7.84771922e+01, 2.27392122e+02,\n          2.01659194e+02],\n         [1.41771933e+02, 1.76236666e+02, 3.69583305e+01,\n          4.63822741e+01, 1.21379716e+02, 2.17975753e-02,\n          1.55787627e+02, 1.83592850e+02, 1.07051952e+02,\n          9.73604521e+01],\n         [2.12143294e+02, 7.45672796e+01, 1.52701930e+02,\n          5.61375407e+01, 1.41651682e+02, 2.06731230e+02,\n          1.10870536e+02, 2.20779633e+02, 1.17769194e+02,\n          2.04281791e+02],\n         [1.91377652e+02, 4.96738506e+01, 2.19217740e+02,\n          1.52237106e+02, 7.05407458e+01, 1.34423634e+02,\n          1.85864388e+02, 1.60262913e+02, 1.20445790e+02,\n          2.13871939e+02]]],\n\n\n       [[[1.52150960e+02, 2.03813563e+02, 5.70475164e+01,\n          1.26419474e+02, 6.20514438e+00, 1.37790255e+02,\n          1.57523368e+02, 1.34773085e+02, 1.56352462e+02,\n          2.50540679e+02],\n         [5.46413488e+01, 1.04881956e+02, 9.12339285e+01,\n          2.50460925e+02, 1.32969592e+02, 7.41075585e+01,\n          7.19420085e+01, 1.37415954e+02, 1.56304263e+02,\n          9.34788783e+01],\n         [1.93269573e+02, 2.49170576e+02, 2.38753885e+02,\n          9.08328087e+00, 1.58449474e+02, 1.03074989e+02,\n          6.41812708e+01, 1.03523108e+02, 2.07995734e+02,\n          2.43106338e+02],\n         [9.30947480e+01, 1.98943788e+02, 3.13091541e+01,\n          9.12300767e+01, 1.43829463e+02, 2.31912743e+02,\n          2.54341038e+02, 1.55646511e+02, 1.67132235e+02,\n          2.39987971e+02],\n         [2.15329824e+01, 9.43643530e+00, 6.94906643e+01,\n          1.05780619e+01, 2.09563515e+02, 1.96616485e+02,\n          2.40509988e+02, 1.11743211e+02, 4.71192478e+01,\n          2.38554684e+02],\n         [1.00742344e+02, 8.37916321e+00, 7.06730308e+01,\n          1.66554278e+02, 2.94896529e+01, 1.06526540e+02,\n          2.48501005e+02, 7.67758785e+01, 1.53071890e+02,\n          6.29320365e+01],\n         [2.28934060e+02, 1.87373727e+02, 1.39470871e+02,\n          1.62935808e+02, 2.36523838e+02, 1.64540297e+02,\n          2.45147201e+02, 7.79648895e+01, 2.33096352e+02,\n          2.06702392e+02],\n         [2.08588994e+02, 1.07619806e+02, 1.41250792e+02,\n          8.96257073e+01, 1.91328149e+02, 8.84484106e+01,\n          1.29368410e+02, 2.37916345e+02, 1.44942543e+02,\n          2.33643884e+02],\n         [1.87146048e+02, 1.04679121e+01, 4.65741511e+01,\n          2.28032120e+02, 7.19823536e+01, 3.33050607e+01,\n          2.13320649e+02, 1.94836741e+02, 1.77984969e+01,\n          1.85791011e+02],\n         [3.89129612e+01, 2.28216360e+02, 2.99888576e+01,\n          1.95735090e+02, 1.25562645e+02, 2.39162107e+02,\n          1.84279542e+02, 4.98287657e+01, 2.52041119e+02,\n          1.87889982e+02]],\n\n        [[2.12408087e+02, 1.60166158e+02, 1.75318861e+02,\n          2.27435265e+01, 2.09200392e+02, 1.81722746e+02,\n          1.03559708e-01, 1.21552162e+02, 9.82783165e+01,\n          1.34047199e+02],\n         [2.51964091e+02, 9.94274917e+01, 7.02311792e+01,\n          1.23785968e+02, 3.23401798e+01, 1.79820178e+01,\n          9.65973405e+01, 2.28373324e+02, 2.00192986e+02,\n          5.68449206e+01],\n         [1.87577442e+02, 9.26793212e+01, 1.98045241e+02,\n          9.74854952e+01, 1.73120724e+02, 2.35049908e+02,\n          2.50312765e+01, 1.62123556e+02, 9.52754115e+01,\n          1.38211262e+02],\n         [1.55090598e+02, 2.44633914e+02, 1.90893598e+02,\n          2.17503832e+02, 2.28789722e+02, 2.67506963e+01,\n          1.56144713e+02, 5.58565036e-02, 2.00459729e+02,\n          3.42893498e+01],\n         [1.38521918e+02, 4.82260752e+01, 4.44513402e+01,\n          2.35882946e+02, 8.37380781e+01, 1.16020112e+02,\n          2.34813273e+02, 2.25261997e+02, 2.02528750e+02,\n          2.97812791e+01],\n         [5.33198982e+01, 1.61398691e+02, 5.38654475e+01,\n          2.16265607e+02, 1.37695957e+02, 1.57383411e+02,\n          2.14340746e+02, 1.86623432e+02, 1.96050225e+02,\n          2.21743717e+02],\n         [7.94918073e+00, 2.09376264e+02, 5.77094225e+01,\n          1.03149246e+02, 2.58774828e+01, 1.61420308e+02,\n          2.44529351e+02, 1.25867068e+02, 7.16563136e+00,\n          1.52743158e+02],\n         [2.15285266e+02, 1.86947442e+02, 1.21565718e+02,\n          9.75881379e+01, 8.08815225e+00, 1.99867231e+02,\n          6.73508720e+01, 1.89745432e+02, 1.08071378e+02,\n          1.25136684e+02],\n         [1.01621393e+02, 7.59270076e+01, 2.07624655e+02,\n          2.12576721e+02, 9.33255112e+01, 5.60229009e+01,\n          1.05744341e+02, 1.69115053e+02, 2.31120368e+02,\n          1.22073620e+02],\n         [1.79489423e+02, 1.46108190e+02, 4.87287171e+01,\n          1.86446877e+02, 5.02695487e+01, 1.94990959e+01,\n          1.11911052e+02, 2.52363515e+01, 3.19592747e+01,\n          1.53575807e+02]],\n\n        [[1.68585084e+02, 1.29226583e+02, 1.91898474e+01,\n          1.31384443e+01, 1.74046095e+02, 1.56504540e+02,\n          1.60397298e+02, 2.48197410e+02, 1.76721633e+02,\n          1.06560383e+02],\n         [9.95607957e+00, 1.56014460e+02, 1.52254451e+02,\n          4.43701005e+01, 3.34070722e+01, 5.40151034e+01,\n          4.54220538e+01, 1.51607653e+02, 1.35590552e+01,\n          9.07629067e+01],\n         [1.12919105e+02, 7.57802096e+00, 1.83495457e+02,\n          1.51650942e+02, 9.53758224e+01, 5.17752352e+01,\n          1.79459754e+02, 2.53833578e+01, 1.63982051e+02,\n          8.49906532e+01],\n         [2.00199585e+02, 1.01102271e+02, 1.20943356e+02,\n          1.75065574e+02, 6.38831223e+01, 1.77578040e+02,\n          2.01466090e+02, 2.47708359e+02, 8.74054721e+01,\n          2.04918171e+02],\n         [5.64076784e+01, 2.20466093e+02, 1.65757715e+02,\n          2.16259035e+02, 5.35573404e+01, 2.25930008e+02,\n          1.89658223e+02, 1.78754834e+02, 2.05503084e+02,\n          1.43341491e+02],\n         [2.19787271e+02, 7.92151916e+01, 2.48588375e+01,\n          2.25185961e+02, 7.83881057e+01, 1.92183899e+02,\n          1.10785242e+01, 1.87899034e+01, 9.26574958e+01,\n          1.98227019e+02],\n         [1.23103600e+02, 1.95195894e+02, 1.34229759e+01,\n          1.59191050e+02, 4.30289346e+01, 2.24470686e+02,\n          2.00332040e+02, 3.29918004e+01, 1.98981296e+02,\n          6.54432295e+01],\n         [1.26838379e+02, 1.41703796e+02, 1.46470533e+02,\n          2.46471003e+02, 9.75361316e+01, 1.79714144e+00,\n          6.51669334e+01, 1.43349480e+02, 3.09770069e+01,\n          1.60828261e+02],\n         [1.23689421e+02, 1.17203661e+02, 1.27911707e+02,\n          6.26808661e+01, 2.28832312e+01, 2.02313982e+02,\n          5.99725782e+01, 2.23555120e+02, 1.36552631e+02,\n          1.19289244e+02],\n         [1.30424001e+02, 1.91059859e+01, 1.27214786e+02,\n          2.56041013e+01, 6.38678791e+01, 1.90013246e+02,\n          2.12690058e+02, 1.01920850e+02, 8.07537958e+01,\n          3.38969476e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d101d8440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -32.818832  ,    4.1764984 ,  -48.688873  ,   97.41508   ,\n            90.60496   ,  148.53314   ,  -19.713097  ,  -42.897     ,\n           -96.822044  ,  -35.7118    ],\n         [ 112.976326  ,  -87.308395  ,  114.65652   ,  151.05072   ,\n            -5.5622406 ,  -35.403473  ,  -72.26054   ,  -42.706654  ,\n           -78.7096    , -100.43472   ],\n         [  -2.5869293 ,  138.23907   ,  144.06491   ,  134.77963   ,\n            36.610146  ,  -52.53131   ,  111.46853   ,   95.34597   ,\n            59.680443  ,   38.78141   ],\n         [ -50.556107  ,  133.28839   ,  -35.774002  ,   48.88494   ,\n            95.80845   ,  120.07278   ,  114.928185  ,    3.8104782 ,\n           -96.31295   ,   23.796951  ],\n         [  84.77445   ,  150.23013   ,   34.591957  ,  -27.00998   ,\n            59.38212   ,   41.603172  ,   35.033684  ,  -72.94548   ,\n            66.07412   ,  137.77585   ],\n         [  -3.592987  ,   16.383446  ,  -55.679676  ,  -20.123322  ,\n             8.898056  ,   34.983223  ,  124.39019   ,  -45.67192   ,\n           -21.099792  ,  116.65786   ],\n         [  50.093758  ,  -55.080772  ,  -65.23651   ,   76.74128   ,\n           140.79376   ,  102.10288   ,  132.01071   ,  -25.461807  ,\n           123.45312   ,   97.72019   ],\n         [  37.832924  ,   72.29766   ,  -66.98067   ,  -57.55673   ,\n            17.440712  , -103.917206  ,   51.848625  ,   79.65385   ,\n             3.1129456 ,   -6.5785522 ],\n         [ 108.20429   ,  -29.371727  ,   48.76293   ,  -47.801464  ,\n            37.712685  ,  102.79223   ,    6.931534  ,  116.84063   ,\n            13.830193  ,  100.34278   ],\n         [  87.43865   ,  -54.265152  ,  115.27874   ,   48.298103  ,\n           -33.398254  ,   30.484627  ,   81.92539   ,   56.323906  ,\n            16.50679   ,  109.93293   ]],\n\n        [[  42.047935  ,  -35.497345  ,   28.792564  ,   65.971214  ,\n            28.085014  ,  -37.185036  ,   75.12351   ,   62.690666  ,\n           -79.08681   ,   53.064766  ],\n         [  30.956276  ,  118.99467   ,    2.7261124 ,  -66.286644  ,\n           -58.06754   , -113.6281    ,   74.17713   ,  -83.641914  ,\n           -69.927826  , -106.814156  ],\n         [  36.25744   ,  -24.239433  ,  -33.40712   ,   72.91111   ,\n           -75.18916   ,  126.23696   ,  104.67838   , -111.75257   ,\n           -14.565659  ,  114.568535  ],\n         [ 117.51519   ,  131.16397   ,  -48.40616   ,  119.542625  ,\n            14.089439  ,  -84.56429   ,  -81.449196  ,   32.28849   ,\n            43.807198  ,   22.726112  ],\n         [ -97.61271   ,  -13.169144  ,  -89.02163   ,   -8.619331  ,\n           -53.67662   ,  104.43098   ,   41.887978  ,  -45.31288   ,\n           -60.100586  ,   68.24438   ],\n         [ -53.972813  , -113.4082    ,  -10.9048    ,  -57.923214  ,\n            76.00678   ,   71.873085  ,  -83.357315  ,  -98.77465   ,\n            -6.035164  , -116.65143   ],\n         [ -24.942162  ,  -61.947403  ,   14.613289  ,  -92.93708   ,\n            85.85093   ,   32.355766  ,   82.34965   ,   36.535606  ,\n            39.052025  ,   65.73759   ],\n         [  28.590294  ,   94.72498   ,   15.808418  ,  114.932396  ,\n            41.509163  ,  124.05152   ,  -90.69399   ,  -16.020622  ,\n            -4.6238174 , -115.11031   ],\n         [  54.949654  ,   90.48644   ,  -10.330765  ,  -59.132458  ,\n           103.37553   ,  -79.90859   ,   54.678337  ,  -94.434586  ,\n           101.32343   , -115.36647   ],\n         [  38.452324  ,    7.3440323 ,  103.42974   ,   -1.1282806 ,\n            25.488762  ,  -98.16905   ,  -81.29619   ,   90.75001   ,\n           -16.9095    , -115.71788   ]],\n\n        [[ -40.386093  ,   88.89034   ,  -22.73053   ,  -66.015656  ,\n          -115.500435  ,  -61.78681   ,   96.04206   ,  121.98473   ,\n            33.56974   ,   34.806587  ],\n         [ -49.521126  ,  -42.99859   ,  126.40342   ,   78.21444   ,\n             2.2776108 ,   68.61356   ,  -53.494713  ,  117.76583   ,\n           -64.557556  ,   70.083534  ],\n         [ -60.055214  ,   39.993202  , -122.23791   ,  -37.7022    ,\n          -122.18806   ,   59.67283   ,   22.118828  ,  -82.30553   ,\n           -61.16513   ,   14.6004715 ],\n         [ 102.60494   ,  106.66706   ,   76.836235  ,   97.333275  ,\n           -29.49665   ,  124.25024   ,  -94.7873    ,    0.5667496 ,\n           -48.187653  ,  117.37347   ],\n         [ 115.154915  ,   33.072807  ,  123.72167   ,  -21.718773  ,\n            65.86579   ,   -8.74205   , -113.6402    ,  -94.75142   ,\n            90.8119    ,  101.22849   ],\n         [  95.97674   ,  -47.90824   , -111.212105  ,   99.02596   ,\n           -79.70015   , -109.08745   ,   80.152916  ,   52.191963  ,\n           -88.218124  ,  -45.645073  ],\n         [ -62.67445   ,  130.2402    ,  -52.934433  ,  104.675514  ,\n            42.08448   , -110.381096  ,   16.012505  ,  104.06078   ,\n           -72.024     ,  -11.820374  ],\n         [ -60.743343  ,   -3.952797  ,   79.75152   ,   80.86733   ,\n           -16.517715  ,  -56.018745  , -104.4812    ,  127.554985  ,\n           -18.800896  ,  -94.88235   ],\n         [ 126.03646   ,  129.21075   ,  -58.51214   ,  -24.635994  ,\n            34.26725   ,  -43.057014  ,  -46.991936  ,    1.5211105 ,\n           -88.11654   ,   66.62411   ],\n         [  19.56562   ,   -6.7570496 ,   82.047386  ,   81.31956   ,\n            -5.7928696 ,  -97.38099   ,  -97.61296   ,  114.817406  ,\n            88.60302   ,   35.39028   ]]],\n\n\n       [[[  64.64608   ,   25.287575  ,  -84.74915   ,  -90.80056   ,\n            70.10709   ,   52.565544  ,   56.45829   ,  144.25839   ,\n            72.78263   ,    2.6213837 ],\n         [ -93.982925  ,   52.075462  ,   48.315453  ,  -59.5689    ,\n           -70.53193   ,  -49.9239    ,  -58.51695   ,   47.668648  ,\n           -90.379944  ,  -13.176094  ],\n         [   8.980103  ,  -96.360985  ,   79.55645   ,   47.711937  ,\n            -8.563179  ,  -52.16377   ,   75.520744  ,  -78.55565   ,\n            60.043053  ,  -18.948349  ],\n         [  96.26058   ,   -2.836731  ,   17.004356  ,   71.126564  ,\n           -40.05588   ,   73.63903   ,   97.52709   ,  143.76935   ,\n           -16.533531  ,  100.979164  ],\n         [ -47.531326  ,  116.52709   ,   61.818718  ,  112.32003   ,\n           -50.381664  ,  121.991005  ,   85.719215  ,   74.815834  ,\n           101.56408   ,   39.40249   ],\n         [ 115.848274  ,  -24.723808  ,  -79.08017   ,  121.246956  ,\n           -25.550896  ,   88.244896  ,  -92.86048   ,  -85.1491    ,\n           -11.281509  ,   94.28802   ],\n         [  19.164597  ,   91.25689   ,  -90.51603   ,   55.252052  ,\n           -60.91007   ,  120.531685  ,   96.39304   ,  -70.947205  ,\n            95.04229   ,  -38.495773  ],\n         [  22.899376  ,   37.764793  ,   42.531532  ,  142.53201   ,\n            -6.40287   , -102.14186   ,  -38.77207   ,   39.410484  ,\n           -72.962     ,   56.88926   ],\n         [  19.75042   ,   13.264656  ,   23.972702  ,  -41.258137  ,\n           -81.05577   ,   98.37498   ,  -43.966423  ,  119.61611   ,\n            32.613625  ,   15.350243  ],\n         [  26.484993  ,  -84.833015  ,   23.27578   ,  -78.3349    ,\n           -40.071125  ,   86.07424   ,  108.75106   ,   -2.0181503 ,\n           -23.185204  ,  -70.04205   ]],\n\n        [[  95.62908   ,   43.387154  ,   58.539864  ,  -94.03548   ,\n            92.421394  ,   64.94375   , -116.67544   ,    4.773163  ,\n           -18.500687  ,   17.268196  ],\n         [ 135.18509   ,  -17.35151   ,  -46.54782   ,    7.0069656 ,\n           -84.43882   ,  -98.79698   ,  -20.181656  ,  111.59432   ,\n            83.413994  ,  -59.93408   ],\n         [  70.79844   ,  -24.099678  ,   81.26624   ,  -19.293503  ,\n            56.34173   ,  118.27091   ,  -91.74773   ,   45.34455   ,\n           -21.503586  ,   21.432259  ],\n         [  38.311592  ,  127.85491   ,   74.1146    ,  100.72483   ,\n           112.01072   ,  -90.028305  ,   39.365715  , -116.723145  ,\n            83.68073   ,  -82.489655  ],\n         [  21.742912  ,  -68.552925  ,  -72.32766   ,  119.10395   ,\n           -33.040924  ,   -0.75888824,  118.03428   ,  108.482994  ,\n            85.74975   ,  -86.99772   ],\n         [ -63.459103  ,   44.619698  ,  -62.91355   ,   99.48661   ,\n            20.916954  ,   40.60441   ,   97.561745  ,   69.84443   ,\n            79.27123   ,  104.964714  ],\n         [-108.82982   ,   92.59727   ,  -59.069576  ,  -13.629753  ,\n           -90.90152   ,   44.641304  ,  127.75036   ,    9.088066  ,\n          -109.613365  ,   35.964165  ],\n         [  98.50626   ,   70.16845   ,    4.7867203 ,  -19.190865  ,\n          -108.69085   ,   83.088234  ,  -49.428123  ,   72.96644   ,\n            -8.707619  ,    8.357681  ],\n         [ -15.157608  ,  -40.85199   ,   90.84565   ,   95.79772   ,\n           -23.453491  ,  -60.7561    ,  -11.03466   ,   52.336052  ,\n           114.34136   ,    5.2946243 ],\n         [  62.710426  ,   29.329185  ,  -68.05028   ,   69.667885  ,\n           -66.509445  ,  -97.27991   ,   -4.8679504 ,  -91.54265   ,\n           -84.819725  ,   36.796806  ]],\n\n        [[  28.470955  ,   80.13357   ,  -66.632484  ,    2.7394714 ,\n          -117.47485   ,   14.110252  ,   33.84336   ,   11.093086  ,\n            32.672462  ,  126.86068   ],\n         [ -69.03865   ,  -18.798042  ,  -32.446075  ,  126.78092   ,\n             9.289589  ,  -49.57244   ,  -51.73799   ,   13.735954  ,\n            32.62426   ,  -30.201118  ],\n         [  69.58958   ,  125.49058   ,  115.07389   , -114.59672   ,\n            34.769478  ,  -20.605011  ,  -59.498726  ,  -20.15689   ,\n            84.31573   ,  119.42634   ],\n         [ -30.58525   ,   75.26379   ,  -92.37085   ,  -32.44992   ,\n            20.149467  ,  108.23275   ,  130.66104   ,   31.966515  ,\n            43.452232  ,  116.307976  ],\n         [-102.14702   , -114.24356   ,  -54.18934   , -113.10194   ,\n            85.88352   ,   72.936485  ,  116.829994  ,  -11.93679   ,\n           -76.56075   ,  114.87469   ],\n         [ -22.937653  , -115.300835  ,  -53.006973  ,   42.874275  ,\n           -94.190346  ,  -17.153458  ,  124.82101   ,  -46.90412   ,\n            29.391884  ,  -60.747963  ],\n         [ 105.25407   ,   63.693733  ,   15.790871  ,   39.255806  ,\n           112.843834  ,   40.8603    ,  121.4672    ,  -45.71511   ,\n           109.41636   ,   83.02239   ],\n         [  84.90899   ,  -16.060196  ,   17.570793  ,  -34.05429   ,\n            67.648155  ,  -35.23159   ,    5.688408  ,  114.23635   ,\n            21.262535  ,  109.96389   ],\n         [  63.46604   , -113.21209   ,  -77.10585   ,  104.35212   ,\n           -51.697647  ,  -90.37494   ,   89.64065   ,   71.156746  ,\n          -105.8815    ,   62.111015  ],\n         [ -84.767044  ,  104.536354  ,  -93.69115   ,   72.05509   ,\n             1.8826447 ,  115.48211   ,   60.59954   ,  -73.851234  ,\n           128.36111   ,   64.209984  ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d1013e3f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 83, 212, 100,  57,   8,  61, 219, 245, 157, 158],\n         [ 74,  80, 250, 201, 125, 192,  70, 241,  59, 193],\n         [ 63, 163,   1,  85,   1, 183, 145,  41,  62, 138],\n         [226, 230, 200, 221,  94, 247,  28, 124,  75, 241],\n         [238, 156, 247, 101, 189, 114,  10,  28, 214, 224],\n         [219,  75,  12, 222,  43,  14, 203, 175,  35,  78],\n         [ 61, 253,  70, 228, 165,  13, 139, 227,  51, 111],\n         [ 62, 119, 203, 204, 107,  67,  19, 251, 104,  28],\n         [249, 252,  65,  99, 157,  80,  76, 125,  35, 190],\n         [143, 116, 205, 204, 117,  26,  26, 238, 212, 159]],\n\n        [[158,  81, 145, 182, 144,  79, 191, 179,  37, 169],\n         [147, 235, 119,  50,  58,   3, 190,  33,  46,   9],\n         [153,  92,  83, 189,  41, 243, 221,   5, 102, 231],\n         [234, 247,  68, 236, 130,  32,  35, 149, 160, 139],\n         [ 19, 103,  27, 108,  63, 221, 158,  71,  56, 185],\n         [ 62,   3, 105,  58, 192, 188,  33,  18, 110,   0],\n         [ 91,  54, 131,  23, 202, 149, 199, 153, 155, 182],\n         [145, 211, 132, 231, 158, 240,  26, 100, 112,   1],\n         [171, 207, 106,  57, 220,  36, 171,  22, 218,   1],\n         [155, 124, 220, 115, 142,  18,  35, 207,  99,   1]],\n\n        [[ 71, 108,  55, 201, 194, 252,  84,  61,   7,  68],\n         [216,  16, 218, 254,  98,  68,  31,  61,  25,   3],\n         [101, 242, 248, 238, 140,  51, 215, 199, 163, 142],\n         [ 53, 237,  68, 152, 199, 224, 218, 107,   7, 127],\n         [188, 254, 138,  76, 163, 145, 138,  30, 170, 241],\n         [100, 120,  48,  83, 112, 138, 228,  58,  82, 220],\n         [154,  48,  38, 180, 244, 206, 235,  78, 227, 201],\n         [141, 176,  36,  46, 121,   0, 155, 183, 107,  97],\n         [212,  74, 152,  56, 141, 206, 110, 220, 117, 204],\n         [191,  49, 219, 152,  70, 134, 185, 160, 120, 213]]],\n\n\n       [[[152, 203,  57, 126,   6, 137, 157, 134, 156, 250],\n         [ 54, 104,  91, 250, 132,  74,  71, 137, 156,  93],\n         [193, 249, 238,   9, 158, 103,  64, 103, 207, 243],\n         [ 93, 198,  31,  91, 143, 231, 254, 155, 167, 239],\n         [ 21,   9,  69,  10, 209, 196, 240, 111,  47, 238],\n         [100,   8,  70, 166,  29, 106, 248,  76, 153,  62],\n         [228, 187, 139, 162, 236, 164, 245,  77, 233, 206],\n         [208, 107, 141,  89, 191,  88, 129, 237, 144, 233],\n         [187,  10,  46, 228,  71,  33, 213, 194,  17, 185],\n         [ 38, 228,  29, 195, 125, 239, 184,  49, 252, 187]],\n\n        [[212, 160, 175,  22, 209, 181,   0, 121,  98, 134],\n         [251,  99,  70, 123,  32,  17,  96, 228, 200,  56],\n         [187,  92, 198,  97, 173, 235,  25, 162,  95, 138],\n         [155, 244, 190, 217, 228,  26, 156,   0, 200,  34],\n         [138,  48,  44, 235,  83, 116, 234, 225, 202,  29],\n         [ 53, 161,  53, 216, 137, 157, 214, 186, 196, 221],\n         [  7, 209,  57, 103,  25, 161, 244, 125,   7, 152],\n         [215, 186, 121,  97,   8, 199,  67, 189, 108, 125],\n         [101,  75, 207, 212,  93,  56, 105, 169, 231, 122],\n         [179, 146,  48, 186,  50,  19, 111,  25,  31, 153]],\n\n        [[168, 129,  19,  13, 174, 156, 160, 248, 176, 106],\n         [  9, 156, 152,  44,  33,  54,  45, 151,  13,  90],\n         [112,   7, 183, 151,  95,  51, 179,  25, 163,  84],\n         [200, 101, 120, 175,  63, 177, 201, 247,  87, 204],\n         [ 56, 220, 165, 216,  53, 225, 189, 178, 205, 143],\n         [219,  79,  24, 225,  78, 192,  11,  18,  92, 198],\n         [123, 195,  13, 159,  43, 224, 200,  32, 198,  65],\n         [126, 141, 146, 246,  97,   1,  65, 143,  30, 160],\n         [123, 117, 127,  62,  22, 202,  59, 223, 136, 119],\n         [130,  19, 127,  25,  63, 190, 212, 101,  80,  33]]]],\n      dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d101d8440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -32.939003 ,    4.060997 ,  -48.939003 ,   97.061    ,\n            90.061    ,  148.061    ,  -19.939003 ,  -42.939003 ,\n           -96.939    ,  -35.939003 ],\n         [ 112.061    ,  -87.939    ,  114.061    ,  150.061    ,\n            -5.939003 ,  -35.939003 ,  -72.939    ,  -42.939003 ,\n           -78.939    , -100.939    ],\n         [  -2.939003 ,  138.061    ,  144.061    ,  134.061    ,\n            36.060997 ,  -52.939003 ,  111.061    ,   95.061    ,\n            59.060997 ,   38.060997 ],\n         [ -50.939003 ,  133.061    ,  -35.939003 ,   48.060997 ,\n            95.061    ,  120.061    ,  114.061    ,    3.060997 ,\n           -96.939    ,   23.060997 ],\n         [  84.061    ,  150.061    ,   34.060997 ,  -27.939003 ,\n            59.060997 ,   41.060997 ,   34.060997 ,  -73.939    ,\n            66.061    ,  137.061    ],\n         [  -3.939003 ,   16.060997 ,  -55.939003 ,  -20.939003 ,\n             8.060997 ,   34.060997 ,  124.061    ,  -45.939003 ,\n           -21.939003 ,  116.061    ],\n         [  50.060997 ,  -55.939003 ,  -65.939    ,   76.061    ,\n           140.061    ,  102.061    ,  131.061    ,  -25.939003 ,\n           123.061    ,   97.061    ],\n         [  37.060997 ,   72.061    ,  -67.939    ,  -57.939003 ,\n            17.060997 , -103.939    ,   51.060997 ,   79.061    ,\n             3.060997 ,   -6.939003 ],\n         [ 108.061    ,  -29.939003 ,   48.060997 ,  -47.939003 ,\n            37.060997 ,  102.061    ,    6.060997 ,  116.061    ,\n            13.060997 ,  100.061    ],\n         [  87.061    ,  -54.939003 ,  115.061    ,   48.060997 ,\n           -33.939003 ,   30.060997 ,   81.061    ,   56.060997 ,\n            16.060997 ,  109.061    ]],\n\n        [[  41.221    ,  -35.779    ,   28.221    ,   65.221    ,\n            27.221    ,  -37.779    ,   74.221    ,   62.221    ,\n           -79.779    ,   52.221    ],\n         [  30.221    ,  118.221    ,    2.2210007,  -66.779    ,\n           -58.779    , -113.779    ,   73.221    ,  -83.779    ,\n           -70.779    , -107.779    ],\n         [  36.221    ,  -24.779    ,  -33.779    ,   72.221    ,\n           -75.779    ,  126.221    ,  104.221    , -111.779    ,\n           -14.778999 ,  114.221    ],\n         [ 117.221    ,  130.22101  ,  -48.779    ,  119.221    ,\n            13.221001 ,  -84.779    ,  -81.779    ,   32.221    ,\n            43.221    ,   22.221    ],\n         [ -97.779    ,  -13.778999 ,  -89.779    ,   -8.778999 ,\n           -53.779    ,  104.221    ,   41.221    ,  -45.779    ,\n           -60.779    ,   68.221    ],\n         [ -54.779    , -113.779    ,  -11.778999 ,  -58.779    ,\n            75.221    ,   71.221    ,  -83.779    ,  -98.779    ,\n            -6.7789993, -116.779    ],\n         [ -25.779    ,  -62.779    ,   14.221001 ,  -93.779    ,\n            85.221    ,   32.221    ,   82.221    ,   36.221    ,\n            38.221    ,   65.221    ],\n         [  28.221    ,   94.221    ,   15.221001 ,  114.221    ,\n            41.221    ,  123.221    ,  -90.779    ,  -16.779    ,\n            -4.7789993, -115.779    ],\n         [  54.221    ,   90.221    ,  -10.778999 ,  -59.779    ,\n           103.221    ,  -80.779    ,   54.221    ,  -94.779    ,\n           101.221    , -115.779    ],\n         [  38.221    ,    7.2210007,  103.221    ,   -1.7789993,\n            25.221    ,  -98.779    ,  -81.779    ,   90.221    ,\n           -17.779    , -115.779    ]],\n\n        [[ -40.68     ,   88.32     ,  -23.68     ,  -66.68     ,\n          -115.68     ,  -62.68     ,   95.32     ,  121.32     ,\n            33.32     ,   34.32     ],\n         [ -49.68     ,  -43.68     ,  126.32     ,   77.32     ,\n             1.3199997,   68.32     ,  -53.68     ,  117.32     ,\n           -64.68     ,   69.32     ],\n         [ -60.68     ,   39.32     , -122.68     ,  -38.68     ,\n          -122.68     ,   59.32     ,   21.32     ,  -82.68     ,\n           -61.68     ,   14.32     ],\n         [ 102.32     ,  106.32     ,   76.32     ,   97.32     ,\n           -29.68     ,  123.32     ,  -95.68     ,    0.3199997,\n           -48.68     ,  117.32     ],\n         [ 114.32     ,   32.32     ,  123.32     ,  -22.68     ,\n            65.32     ,   -9.68     , -113.68     ,  -95.68     ,\n            90.32     ,  100.32     ],\n         [  95.32     ,  -48.68     , -111.68     ,   98.32     ,\n           -80.68     , -109.68     ,   79.32     ,   51.32     ,\n           -88.68     ,  -45.68     ],\n         [ -62.68     ,  129.32     ,  -53.68     ,  104.32     ,\n            41.32     , -110.68     ,   15.32     ,  103.32     ,\n           -72.68     ,  -12.68     ],\n         [ -61.68     ,   -4.6800003,   79.32     ,   80.32     ,\n           -16.68     ,  -56.68     , -104.68     ,  127.32     ,\n           -19.68     ,  -95.68     ],\n         [ 125.32     ,  128.32     ,  -58.68     ,  -24.68     ,\n            33.32     ,  -43.68     ,  -47.68     ,    1.3199997,\n           -88.68     ,   66.32     ],\n         [  19.32     ,   -7.6800003,   81.32     ,   80.32     ,\n            -6.6800003,  -97.68     ,  -97.68     ,  114.32     ,\n            88.32     ,   35.32     ]]],\n\n\n       [[[  64.061    ,   25.060997 ,  -84.939    ,  -90.939    ,\n            70.061    ,   52.060997 ,   56.060997 ,  144.061    ,\n            72.061    ,    2.060997 ],\n         [ -94.939    ,   52.060997 ,   48.060997 ,  -59.939003 ,\n           -70.939    ,  -49.939003 ,  -58.939003 ,   47.060997 ,\n           -90.939    ,  -13.939003 ],\n         [   8.060997 ,  -96.939    ,   79.061    ,   47.060997 ,\n            -8.939003 ,  -52.939003 ,   75.061    ,  -78.939    ,\n            59.060997 ,  -19.939003 ],\n         [  96.061    ,   -2.939003 ,   16.060997 ,   71.061    ,\n           -40.939003 ,   73.061    ,   97.061    ,  143.061    ,\n           -16.939003 ,  100.061    ],\n         [ -47.939003 ,  116.061    ,   61.060997 ,  112.061    ,\n           -50.939003 ,  121.061    ,   85.061    ,   74.061    ,\n           101.061    ,   39.060997 ],\n         [ 115.061    ,  -24.939003 ,  -79.939    ,  121.061    ,\n           -25.939003 ,   88.061    ,  -92.939    ,  -85.939    ,\n           -11.939003 ,   94.061    ],\n         [  19.060997 ,   91.061    ,  -90.939    ,   55.060997 ,\n           -60.939003 ,  120.061    ,   96.061    ,  -71.939    ,\n            94.061    ,  -38.939003 ],\n         [  22.060997 ,   37.060997 ,   42.060997 ,  142.061    ,\n            -6.939003 , -102.939    ,  -38.939003 ,   39.060997 ,\n           -73.939    ,   56.060997 ],\n         [  19.060997 ,   13.060997 ,   23.060997 ,  -41.939003 ,\n           -81.939    ,   98.061    ,  -44.939003 ,  119.061    ,\n            32.060997 ,   15.060997 ],\n         [  26.060997 ,  -84.939    ,   23.060997 ,  -78.939    ,\n           -40.939003 ,   86.061    ,  108.061    ,   -2.939003 ,\n           -23.939003 ,  -70.939    ]],\n\n        [[  95.221    ,   43.221    ,   58.221    ,  -94.779    ,\n            92.221    ,   64.221    , -116.779    ,    4.2210007,\n           -18.779    ,   17.221    ],\n         [ 134.22101  ,  -17.779    ,  -46.779    ,    6.2210007,\n           -84.779    ,  -99.779    ,  -20.779    ,  111.221    ,\n            83.221    ,  -60.779    ],\n         [  70.221    ,  -24.779    ,   81.221    ,  -19.779    ,\n            56.221    ,  118.221    ,  -91.779    ,   45.221    ,\n           -21.779    ,   21.221    ],\n         [  38.221    ,  127.221    ,   73.221    ,  100.221    ,\n           111.221    ,  -90.779    ,   39.221    , -116.779    ,\n            83.221    ,  -82.779    ],\n         [  21.221    ,  -68.779    ,  -72.779    ,  118.221    ,\n           -33.779    ,   -0.7789993,  117.221    ,  108.221    ,\n            85.221    ,  -87.779    ],\n         [ -63.779    ,   44.221    ,  -63.779    ,   99.221    ,\n            20.221    ,   40.221    ,   97.221    ,   69.221    ,\n            79.221    ,  104.221    ],\n         [-109.779    ,   92.221    ,  -59.779    ,  -13.778999 ,\n           -91.779    ,   44.221    ,  127.221    ,    8.221001 ,\n          -109.779    ,   35.221    ],\n         [  98.221    ,   69.221    ,    4.2210007,  -19.779    ,\n          -108.779    ,   82.221    ,  -49.779    ,   72.221    ,\n            -8.778999 ,    8.221001 ],\n         [ -15.778999 ,  -41.779    ,   90.221    ,   95.221    ,\n           -23.779    ,  -60.779    ,  -11.778999 ,   52.221    ,\n           114.221    ,    5.2210007],\n         [  62.221    ,   29.221    ,  -68.779    ,   69.221    ,\n           -66.779    ,  -97.779    ,   -5.7789993,  -91.779    ,\n           -85.779    ,   36.221    ]],\n\n        [[  28.32     ,   79.32     ,  -66.68     ,    2.3199997,\n          -117.68     ,   13.32     ,   33.32     ,   10.32     ,\n            32.32     ,  126.32     ],\n         [ -69.68     ,  -19.68     ,  -32.68     ,  126.32     ,\n             8.32     ,  -49.68     ,  -52.68     ,   13.32     ,\n            32.32     ,  -30.68     ],\n         [  69.32     ,  125.32     ,  114.32     , -114.68     ,\n            34.32     ,  -20.68     ,  -59.68     ,  -20.68     ,\n            83.32     ,  119.32     ],\n         [ -30.68     ,   74.32     ,  -92.68     ,  -32.68     ,\n            19.32     ,  107.32     ,  130.32     ,   31.32     ,\n            43.32     ,  115.32     ],\n         [-102.68     , -114.68     ,  -54.68     , -113.68     ,\n            85.32     ,   72.32     ,  116.32     ,  -12.68     ,\n           -76.68     ,  114.32     ],\n         [ -23.68     , -115.68     ,  -53.68     ,   42.32     ,\n           -94.68     ,  -17.68     ,  124.32     ,  -47.68     ,\n            29.32     ,  -61.68     ],\n         [ 104.32     ,   63.32     ,   15.32     ,   38.32     ,\n           112.32     ,   40.32     ,  121.32     ,  -46.68     ,\n           109.32     ,   82.32     ],\n         [  84.32     ,  -16.68     ,   17.32     ,  -34.68     ,\n            67.32     ,  -35.68     ,    5.3199997,  113.32     ,\n            20.32     ,  109.32     ],\n         [  63.32     , -113.68     ,  -77.68     ,  104.32     ,\n           -52.68     ,  -90.68     ,   89.32     ,   70.32     ,\n          -106.68     ,   61.32     ],\n         [ -85.68     ,  104.32     ,  -94.68     ,   71.32     ,\n             1.3199997,  115.32     ,   60.32     ,  -74.68     ,\n           128.32     ,   63.32     ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d1013e580>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[162.50537429,  99.07329766, 228.43745039],\n        [131.11378575, 157.84697882, 188.94958088],\n        [189.96812214, 123.95842274,  60.69993381],\n        [  4.49692782,  18.9350233 , 131.25800735],\n        [ 60.84519658,   1.35243009,  64.10617492],\n        [165.31087294,   8.34377128, 180.57812949],\n        [158.95050999,  22.14801431, 199.42075593],\n        [ 93.36317822,  50.81173904, 173.20486129],\n        [  5.72473581, 131.82293971, 225.25538858],\n        [141.15910184,  67.87131974, 131.60285733]],\n\n       [[214.91427222, 165.78749734,  73.76704774],\n        [165.33132306,  99.04038236, 223.51567269],\n        [ 41.21466417,  97.06663501, 200.30403081],\n        [ 90.14039042,  90.61584772, 213.91770165],\n        [112.57405015,  44.70266136, 215.53729282],\n        [ 77.36934267, 232.35968297, 230.31274325],\n        [118.99825498, 221.02717982,  41.16576395],\n        [169.84029631, 240.94215841,   5.02152098],\n        [ 69.08099646, 112.19428094,   0.50391105],\n        [ 39.24475809,  19.82278651, 214.37774597]],\n\n       [[169.95829432, 213.84085918, 228.49770297],\n        [116.832797  , 223.14618963,  52.95555357],\n        [197.30682462, 164.88432135, 200.18418449],\n        [  3.66142088,  63.15061037, 171.25819529],\n        [146.00441299, 117.28007641,  84.02479272],\n        [ 29.58300704,  48.60660229, 103.77996606],\n        [ 87.82361946, 103.98686069, 186.54558999],\n        [ 34.99446128, 177.7749917 , 247.63399609],\n        [188.76143356, 129.95536755, 187.09506513],\n        [ 32.51186382,  46.4360204 ,   1.62546665]],\n\n       [[240.19037328, 166.41387069, 165.26843727],\n        [197.03196438, 170.18313219,  38.1289832 ],\n        [166.03750007,  84.47184855, 116.41538623],\n        [109.24572072, 181.04981874, 219.30761513],\n        [ 37.83543565, 105.35305832,  41.71048226],\n        [ 89.37715365, 100.49720803,  83.81164917],\n        [219.58273184,   9.10078008,  44.63847321],\n        [148.08171788,  13.49420941, 194.38071844],\n        [124.46577399,  57.28861935, 163.6549959 ],\n        [245.27705703,  72.77065167,  14.7828195 ]],\n\n       [[231.65978459, 171.89233687, 121.33821969],\n        [134.42899632, 162.32555035, 124.19912288],\n        [173.62569677,  73.30091337,  31.07392197],\n        [102.43641648, 249.5071812 , 247.1996585 ],\n        [  0.41490623, 230.84585248, 172.16228502],\n        [209.21621661,  50.09228684, 162.78297251],\n        [232.81141999, 105.27959653,  57.50423841],\n        [214.49264616,  70.41991555,  34.03943007],\n        [165.96166089, 150.51932819,  32.17356538],\n        [239.03521063, 145.34341262, 197.3851728 ]],\n\n       [[ 59.36687195, 126.98672849,   3.88134147],\n        [ 83.55710201, 252.23697476,  54.39058213],\n        [249.59405357, 173.98593475, 236.83441866],\n        [144.11922522,  93.03128115,  47.25996225],\n        [147.79890979, 193.25541983,  13.63373599],\n        [ 78.12155428,   7.98932534,  81.13740926],\n        [ 52.98437179, 216.87321822, 242.33554469],\n        [219.17285771, 240.63655333,   9.73064429],\n        [ 30.12564227,  70.2155928 , 164.72904268],\n        [ 37.12740934, 168.19219499, 234.85544684]],\n\n       [[159.44867582,  68.02787735, 122.46314459],\n        [176.78503878, 138.40176958,  49.74586962],\n        [160.93895663, 238.94834626, 179.90336024],\n        [237.6586664 ,  69.2472897 ,  92.30763256],\n        [109.65143402, 181.4926334 , 152.6275709 ],\n        [117.47941979, 111.19345361, 188.09638609],\n        [186.95736899,  31.45578117, 192.6886163 ],\n        [171.66384825, 210.31449719,  51.53961587],\n        [ 87.05574089, 157.25446495,  35.9539909 ],\n        [137.80677746, 134.46003434, 136.97595314]],\n\n       [[107.97657406, 143.29571772, 128.2776035 ],\n        [116.54129529, 135.83968978, 199.41135524],\n        [119.50180557,  44.4711214 , 242.67698472],\n        [189.49370547,  46.6225779 , 127.97653292],\n        [ 49.50540688, 188.09991085, 195.25840924],\n        [ 30.79398405,  62.35433589, 198.82564074],\n        [235.95963455, 248.62915585,  71.16805815],\n        [ 49.88534474, 181.42920397,  30.25654848],\n        [120.23586639, 235.78538147,  33.9390204 ],\n        [157.24899088,  32.1955083 , 141.18162422]],\n\n       [[ 76.74697902,  92.71167136,  74.34683524],\n        [ 60.9867705 , 253.42353321,  72.27047527],\n        [237.57484207,  51.63773027,  40.05964299],\n        [ 31.2555495 ,  67.67510779, 103.85463869],\n        [209.99075071, 217.72935316, 214.28040082],\n        [254.2782833 , 237.9046218 , 198.32024203],\n        [ 23.42525478,  62.73447081,  48.30427372],\n        [223.67795949, 194.33231008, 192.78557679],\n        [250.51692114, 113.35594481,  37.17010164],\n        [239.35346796,  24.35103837, 110.02245849]],\n\n       [[185.47399926,  49.37836626, 127.65130071],\n        [104.78200471, 163.11681235,  35.20959943],\n        [154.5691656 ,  72.17327675,  58.91523706],\n        [177.25291484, 135.25689924,  92.7986535 ],\n        [ 88.28472767, 167.97375472,  48.28749906],\n        [ 84.32524458, 116.6328796 , 158.29740143],\n        [217.83599447, 182.38668643, 129.32190313],\n        [185.97455233, 188.61074965,  41.25218934],\n        [126.72864885, 127.49846346, 167.6285976 ],\n        [ 86.07150378,  68.1503929 , 238.70848519]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d100cd0d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.24498451e+02, -1.77057037e+01,  3.88253708e+01],\n        [ 8.50105820e+01,  4.10679855e+01,  7.43378448e+00],\n        [-4.32390709e+01,  7.17942047e+00,  6.62881241e+01],\n        [ 2.73190079e+01, -9.78439789e+01, -1.19183075e+02],\n        [-3.98328247e+01, -1.15426567e+02, -6.28348045e+01],\n        [ 7.66391220e+01, -1.08435226e+02,  4.16308670e+01],\n        [ 9.54817581e+01, -9.46309814e+01,  3.52705154e+01],\n        [ 6.92658615e+01, -6.59672546e+01, -3.03168259e+01],\n        [ 1.21316383e+02,  1.50439377e+01, -1.17955261e+02],\n        [ 2.76638565e+01, -4.89076767e+01,  1.74791031e+01]],\n\n       [[-3.01719589e+01,  4.90084915e+01,  9.12342758e+01],\n        [ 1.19576668e+02, -1.77386169e+01,  4.16513290e+01],\n        [ 9.63650284e+01, -1.97123642e+01, -8.24653320e+01],\n        [ 1.09978691e+02, -2.61631546e+01, -3.35396118e+01],\n        [ 1.11598289e+02, -7.20763397e+01, -1.11059494e+01],\n        [ 1.26373741e+02,  1.15580681e+02, -4.63106613e+01],\n        [-6.27732391e+01,  1.04248177e+02, -4.68174744e+00],\n        [-9.89174805e+01,  1.24163155e+02,  4.61603012e+01],\n        [-1.03435089e+02, -4.58471680e+00, -5.45990067e+01],\n        [ 1.10438744e+02, -9.69562149e+01, -8.44352417e+01]],\n\n       [[ 1.24558693e+02,  9.70618668e+01,  4.62782974e+01],\n        [-5.09834480e+01,  1.06367195e+02, -6.84720612e+00],\n        [ 9.62451859e+01,  4.81053238e+01,  7.36268234e+01],\n        [ 6.73191910e+01, -5.36283875e+01, -1.20018578e+02],\n        [-1.99142075e+01,  5.01075745e-01,  2.23244095e+01],\n        [-1.59034729e-01, -6.81723938e+01, -9.40969925e+01],\n        [ 8.26065903e+01, -1.27921371e+01, -3.58563843e+01],\n        [ 1.43695007e+02,  6.09959946e+01, -8.86855392e+01],\n        [ 8.31560593e+01,  1.31763687e+01,  6.50814285e+01],\n        [-1.02313538e+02, -7.03429794e+01, -9.11681366e+01]],\n\n       [[ 6.13294296e+01,  4.96348648e+01,  1.16510368e+02],\n        [-6.58100204e+01,  5.34041367e+01,  7.33519669e+01],\n        [ 1.24763870e+01, -3.23071518e+01,  4.23575058e+01],\n        [ 1.15368614e+02,  6.42708206e+01, -1.44342804e+01],\n        [-6.22285194e+01, -1.14259415e+01, -8.58445663e+01],\n        [-2.01273575e+01, -1.62817917e+01, -3.43028488e+01],\n        [-5.93005295e+01, -1.07678223e+02,  9.59027328e+01],\n        [ 9.04417191e+01, -1.03284790e+02,  2.44017105e+01],\n        [ 5.97159958e+01, -5.94903793e+01,  7.85774231e-01],\n        [-8.91561813e+01, -4.40083466e+01,  1.21597054e+02]],\n\n       [[ 1.73992157e+01,  5.51133347e+01,  1.07979790e+02],\n        [ 2.02601166e+01,  4.55465469e+01,  1.07490005e+01],\n        [-7.28650818e+01, -4.34780884e+01,  4.99457016e+01],\n        [ 1.43260651e+02,  1.32728180e+02, -2.12435837e+01],\n        [ 6.82232895e+01,  1.14066856e+02, -1.23265091e+02],\n        [ 5.88439713e+01, -6.66867142e+01,  8.55362167e+01],\n        [-4.64347649e+01, -1.14994049e+01,  1.09131416e+02],\n        [-6.98995743e+01, -4.63590851e+01,  9.08126450e+01],\n        [-7.17654419e+01,  3.37403336e+01,  4.22816544e+01],\n        [ 9.34461746e+01,  2.85644150e+01,  1.15355217e+02]],\n\n       [[-1.00057663e+02,  1.02077255e+01, -6.43131256e+01],\n        [-4.95484200e+01,  1.35457977e+02, -4.01229019e+01],\n        [ 1.32895416e+02,  5.72069321e+01,  1.25914055e+02],\n        [-5.66790390e+01, -2.37477188e+01,  2.04392319e+01],\n        [-9.03052673e+01,  7.64764175e+01,  2.41189041e+01],\n        [-2.28015900e+01, -1.08789673e+02, -4.55584488e+01],\n        [ 1.38396545e+02,  1.00094215e+02, -7.06956329e+01],\n        [-9.42083588e+01,  1.23857552e+02,  9.54928513e+01],\n        [ 6.07900467e+01, -4.65634079e+01, -9.35543594e+01],\n        [ 1.30916443e+02,  5.14132004e+01, -8.65525894e+01]],\n\n       [[ 1.85241394e+01, -4.87511215e+01,  3.57686691e+01],\n        [-5.41931343e+01,  2.16227646e+01,  5.31050339e+01],\n        [ 7.59643631e+01,  1.22169350e+02,  3.72589493e+01],\n        [-1.16313705e+01, -4.75317078e+01,  1.13978661e+02],\n        [ 4.86885605e+01,  6.47136307e+01, -1.40285645e+01],\n        [ 8.41573868e+01, -5.58554840e+00, -6.20057678e+00],\n        [ 8.87496109e+01, -8.53232193e+01,  6.32773666e+01],\n        [-5.23993874e+01,  9.35354996e+01,  4.79838486e+01],\n        [-6.79850159e+01,  4.04754715e+01, -3.66242599e+01],\n        [ 3.30369492e+01,  1.76810379e+01,  1.41267776e+01]],\n\n       [[ 2.43386002e+01,  2.65167160e+01, -1.57034225e+01],\n        [ 9.54723587e+01,  1.90606918e+01, -7.13870239e+00],\n        [ 1.38737976e+02, -7.23078766e+01, -4.17819214e+00],\n        [ 2.40375290e+01, -7.01564178e+01,  6.58136978e+01],\n        [ 9.13194046e+01,  7.13209152e+01, -7.41745911e+01],\n        [ 9.48866348e+01, -5.44246635e+01, -9.28860168e+01],\n        [-3.27709427e+01,  1.31850159e+02,  1.12279640e+02],\n        [-7.36824570e+01,  6.46501999e+01, -7.37946548e+01],\n        [-6.99999847e+01,  1.19006386e+02, -3.44413757e+00],\n        [ 3.72426224e+01, -8.45834961e+01,  3.35689926e+01]],\n\n       [[-2.95921707e+01, -2.40673294e+01, -4.69330215e+01],\n        [-3.16685257e+01,  1.36644531e+02, -6.26932297e+01],\n        [-6.38793602e+01, -6.51412659e+01,  1.13894844e+02],\n        [-8.43658447e-02, -4.91038895e+01, -9.24244537e+01],\n        [ 1.10341393e+02,  1.00950356e+02,  8.63107529e+01],\n        [ 9.43812332e+01,  1.21125618e+02,  1.30598297e+02],\n        [-5.56347275e+01, -5.40445290e+01, -1.00254745e+02],\n        [ 8.88465805e+01,  7.75533066e+01,  9.99979630e+01],\n        [-6.67689056e+01, -3.42305756e+00,  1.26836922e+02],\n        [ 6.08345795e+00, -9.24279633e+01,  1.15673470e+02]],\n\n       [[ 2.37122955e+01, -6.74006348e+01,  6.17939987e+01],\n        [-6.87294006e+01,  4.63378067e+01, -1.88979950e+01],\n        [-4.50237656e+01, -4.46057205e+01,  3.08891678e+01],\n        [-1.11403503e+01,  1.84778976e+01,  5.35729141e+01],\n        [-5.56515045e+01,  5.11947556e+01, -3.53952713e+01],\n        [ 5.43584061e+01, -1.46118164e-01, -3.93547592e+01],\n        [ 2.53828964e+01,  6.56076889e+01,  9.41559982e+01],\n        [-6.26868134e+01,  7.18317490e+01,  6.22945480e+01],\n        [ 6.36895981e+01,  1.07194672e+01,  3.04864502e+00],\n        [ 1.34769470e+02, -4.86286087e+01, -3.76084976e+01]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d100df260>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[162,  99, 228],\n        [131, 157, 188],\n        [189, 123,  60],\n        [  4,  18, 131],\n        [ 60,   1,  64],\n        [165,   8, 180],\n        [158,  22, 199],\n        [ 93,  50, 173],\n        [  5, 131, 225],\n        [141,  67, 131]],\n\n       [[214, 165,  73],\n        [165,  99, 223],\n        [ 41,  97, 200],\n        [ 90,  90, 213],\n        [112,  44, 215],\n        [ 77, 232, 230],\n        [118, 221,  41],\n        [169, 240,   5],\n        [ 69, 112,   0],\n        [ 39,  19, 214]],\n\n       [[169, 213, 228],\n        [116, 223,  52],\n        [197, 164, 200],\n        [  3,  63, 171],\n        [146, 117,  84],\n        [ 29,  48, 103],\n        [ 87, 103, 186],\n        [ 34, 177, 247],\n        [188, 129, 187],\n        [ 32,  46,   1]],\n\n       [[240, 166, 165],\n        [197, 170,  38],\n        [166,  84, 116],\n        [109, 181, 219],\n        [ 37, 105,  41],\n        [ 89, 100,  83],\n        [219,   9,  44],\n        [148,  13, 194],\n        [124,  57, 163],\n        [245,  72,  14]],\n\n       [[231, 171, 121],\n        [134, 162, 124],\n        [173,  73,  31],\n        [102, 249, 247],\n        [  0, 230, 172],\n        [209,  50, 162],\n        [232, 105,  57],\n        [214,  70,  34],\n        [165, 150,  32],\n        [239, 145, 197]],\n\n       [[ 59, 126,   3],\n        [ 83, 252,  54],\n        [249, 173, 236],\n        [144,  93,  47],\n        [147, 193,  13],\n        [ 78,   7,  81],\n        [ 52, 216, 242],\n        [219, 240,   9],\n        [ 30,  70, 164],\n        [ 37, 168, 234]],\n\n       [[159,  68, 122],\n        [176, 138,  49],\n        [160, 238, 179],\n        [237,  69,  92],\n        [109, 181, 152],\n        [117, 111, 188],\n        [186,  31, 192],\n        [171, 210,  51],\n        [ 87, 157,  35],\n        [137, 134, 136]],\n\n       [[107, 143, 128],\n        [116, 135, 199],\n        [119,  44, 242],\n        [189,  46, 127],\n        [ 49, 188, 195],\n        [ 30,  62, 198],\n        [235, 248,  71],\n        [ 49, 181,  30],\n        [120, 235,  33],\n        [157,  32, 141]],\n\n       [[ 76,  92,  74],\n        [ 60, 253,  72],\n        [237,  51,  40],\n        [ 31,  67, 103],\n        [209, 217, 214],\n        [254, 237, 198],\n        [ 23,  62,  48],\n        [223, 194, 192],\n        [250, 113,  37],\n        [239,  24, 110]],\n\n       [[185,  49, 127],\n        [104, 163,  35],\n        [154,  72,  58],\n        [177, 135,  92],\n        [ 88, 167,  48],\n        [ 84, 116, 158],\n        [217, 182, 129],\n        [185, 188,  41],\n        [126, 127, 167],\n        [ 86,  68, 238]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d101d8440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 124.061     ,  -17.779     ,   38.32      ],\n        [  84.061     ,   40.221     ,    7.3199997 ],\n        [ -43.939003  ,    6.2210007 ,   65.32      ],\n        [  27.060997  ,  -98.779     , -119.68      ],\n        [ -39.939003  , -115.779     ,  -63.68      ],\n        [  76.061     , -108.779     ,   41.32      ],\n        [  95.061     ,  -94.779     ,   34.32      ],\n        [  69.061     ,  -66.779     ,  -30.68      ],\n        [ 121.061     ,   14.221001  , -118.68      ],\n        [  27.060997  ,  -49.779     ,   17.32      ]],\n\n       [[ -30.939003  ,   48.221     ,   90.32      ],\n        [ 119.061     ,  -17.779     ,   41.32      ],\n        [  96.061     ,  -19.779     ,  -82.68      ],\n        [ 109.061     ,  -26.779     ,  -33.68      ],\n        [ 111.061     ,  -72.779     ,  -11.68      ],\n        [ 126.061     ,  115.221     ,  -46.68      ],\n        [ -62.939003  ,  104.221     ,   -5.6800003 ],\n        [ -98.939     ,  123.221     ,   45.32      ],\n        [-103.939     ,   -4.7789993 ,  -54.68      ],\n        [ 110.061     ,  -97.779     ,  -84.68      ]],\n\n       [[ 124.061     ,   96.221     ,   45.32      ],\n        [ -51.939003  ,  106.221     ,   -7.6800003 ],\n        [  96.061     ,   47.221     ,   73.32      ],\n        [  67.061     ,  -53.779     , -120.68      ],\n        [ -19.939003  ,    0.22100067,   22.32      ],\n        [  -0.939003  ,  -68.779     ,  -94.68      ],\n        [  82.061     ,  -13.778999  ,  -36.68      ],\n        [ 143.061     ,   60.221     ,  -89.68      ],\n        [  83.061     ,   12.221001  ,   64.32      ],\n        [-102.939     ,  -70.779     ,  -91.68      ]],\n\n       [[  61.060997  ,   49.221     ,  116.32      ],\n        [ -65.939     ,   53.221     ,   73.32      ],\n        [  12.060997  ,  -32.779     ,   42.32      ],\n        [ 115.061     ,   64.221     ,  -14.68      ],\n        [ -62.939003  ,  -11.778999  ,  -86.68      ],\n        [ -20.939003  ,  -16.779     ,  -34.68      ],\n        [ -59.939003  , -107.779     ,   95.32      ],\n        [  90.061     , -103.779     ,   24.32      ],\n        [  59.060997  ,  -59.779     ,    0.3199997 ],\n        [ -89.939     ,  -44.779     ,  121.32      ]],\n\n       [[  17.060997  ,   54.221     ,  107.32      ],\n        [  20.060997  ,   45.221     ,   10.32      ],\n        [ -72.939     ,  -43.779     ,   49.32      ],\n        [ 143.061     ,  132.22101   ,  -21.68      ],\n        [  68.061     ,  113.221     , -123.68      ],\n        [  58.060997  ,  -66.779     ,   85.32      ],\n        [ -46.939003  ,  -11.778999  ,  108.32      ],\n        [ -69.939     ,  -46.779     ,   90.32      ],\n        [ -71.939     ,   33.221     ,   41.32      ],\n        [  93.061     ,   28.221     ,  115.32      ]],\n\n       [[-100.939     ,    9.221001  ,  -64.68      ],\n        [ -49.939003  ,  135.22101   ,  -40.68      ],\n        [ 132.061     ,   56.221     ,  125.32      ],\n        [ -56.939003  ,  -23.779     ,   20.32      ],\n        [ -90.939     ,   76.221     ,   23.32      ],\n        [ -22.939003  , -109.779     ,  -45.68      ],\n        [ 138.061     ,   99.221     ,  -71.68      ],\n        [ -94.939     ,  123.221     ,   95.32      ],\n        [  60.060997  ,  -46.779     ,  -93.68      ],\n        [ 130.061     ,   51.221     ,  -86.68      ]],\n\n       [[  18.060997  ,  -48.779     ,   35.32      ],\n        [ -54.939003  ,   21.221     ,   52.32      ],\n        [  75.061     ,  121.221     ,   36.32      ],\n        [ -11.939003  ,  -47.779     ,  113.32      ],\n        [  48.060997  ,   64.221     ,  -14.68      ],\n        [  84.061     ,   -5.7789993 ,   -6.6800003 ],\n        [  88.061     ,  -85.779     ,   62.32      ],\n        [ -52.939003  ,   93.221     ,   47.32      ],\n        [ -68.939     ,   40.221     ,  -36.68      ],\n        [  32.060997  ,   17.221     ,   13.32      ]],\n\n       [[  24.060997  ,   26.221     ,  -16.68      ],\n        [  95.061     ,   18.221     ,   -7.6800003 ],\n        [ 138.061     ,  -72.779     ,   -4.6800003 ],\n        [  23.060997  ,  -70.779     ,   65.32      ],\n        [  91.061     ,   71.221     ,  -74.68      ],\n        [  94.061     ,  -54.779     ,  -93.68      ],\n        [ -32.939003  ,  131.22101   ,  111.32      ],\n        [ -73.939     ,   64.221     ,  -74.68      ],\n        [ -70.939     ,  118.221     ,   -3.6800003 ],\n        [  37.060997  ,  -84.779     ,   33.32      ]],\n\n       [[ -29.939003  ,  -24.779     ,  -47.68      ],\n        [ -31.939003  ,  136.22101   ,  -63.68      ],\n        [ -63.939003  ,  -65.779     ,  113.32      ],\n        [  -0.939003  ,  -49.779     ,  -92.68      ],\n        [ 110.061     ,  100.221     ,   85.32      ],\n        [  94.061     ,  120.221     ,  130.32      ],\n        [ -55.939003  ,  -54.779     , -100.68      ],\n        [  88.061     ,   77.221     ,   99.32      ],\n        [ -66.939     ,   -3.7789993 ,  126.32      ],\n        [   6.060997  ,  -92.779     ,  115.32      ]],\n\n       [[  23.060997  ,  -67.779     ,   61.32      ],\n        [ -68.939     ,   46.221     ,  -19.68      ],\n        [ -45.939003  ,  -44.779     ,   30.32      ],\n        [ -11.939003  ,   18.221     ,   53.32      ],\n        [ -55.939003  ,   50.221     ,  -35.68      ],\n        [  54.060997  ,   -0.7789993 ,  -39.68      ],\n        [  25.060997  ,   65.221     ,   93.32      ],\n        [ -62.939003  ,   71.221     ,   61.32      ],\n        [  63.060997  ,   10.221001  ,    2.3199997 ],\n        [ 134.061     ,  -48.779     ,  -37.68      ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d100e1a80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[162.50537429,  99.07329766, 228.43745039],\n        [131.11378575, 157.84697882, 188.94958088],\n        [189.96812214, 123.95842274,  60.69993381],\n        [  4.49692782,  18.9350233 , 131.25800735],\n        [ 60.84519658,   1.35243009,  64.10617492],\n        [165.31087294,   8.34377128, 180.57812949],\n        [158.95050999,  22.14801431, 199.42075593],\n        [ 93.36317822,  50.81173904, 173.20486129],\n        [  5.72473581, 131.82293971, 225.25538858],\n        [141.15910184,  67.87131974, 131.60285733]],\n\n       [[214.91427222, 165.78749734,  73.76704774],\n        [165.33132306,  99.04038236, 223.51567269],\n        [ 41.21466417,  97.06663501, 200.30403081],\n        [ 90.14039042,  90.61584772, 213.91770165],\n        [112.57405015,  44.70266136, 215.53729282],\n        [ 77.36934267, 232.35968297, 230.31274325],\n        [118.99825498, 221.02717982,  41.16576395],\n        [169.84029631, 240.94215841,   5.02152098],\n        [ 69.08099646, 112.19428094,   0.50391105],\n        [ 39.24475809,  19.82278651, 214.37774597]],\n\n       [[169.95829432, 213.84085918, 228.49770297],\n        [116.832797  , 223.14618963,  52.95555357],\n        [197.30682462, 164.88432135, 200.18418449],\n        [  3.66142088,  63.15061037, 171.25819529],\n        [146.00441299, 117.28007641,  84.02479272],\n        [ 29.58300704,  48.60660229, 103.77996606],\n        [ 87.82361946, 103.98686069, 186.54558999],\n        [ 34.99446128, 177.7749917 , 247.63399609],\n        [188.76143356, 129.95536755, 187.09506513],\n        [ 32.51186382,  46.4360204 ,   1.62546665]],\n\n       [[240.19037328, 166.41387069, 165.26843727],\n        [197.03196438, 170.18313219,  38.1289832 ],\n        [166.03750007,  84.47184855, 116.41538623],\n        [109.24572072, 181.04981874, 219.30761513],\n        [ 37.83543565, 105.35305832,  41.71048226],\n        [ 89.37715365, 100.49720803,  83.81164917],\n        [219.58273184,   9.10078008,  44.63847321],\n        [148.08171788,  13.49420941, 194.38071844],\n        [124.46577399,  57.28861935, 163.6549959 ],\n        [245.27705703,  72.77065167,  14.7828195 ]],\n\n       [[231.65978459, 171.89233687, 121.33821969],\n        [134.42899632, 162.32555035, 124.19912288],\n        [173.62569677,  73.30091337,  31.07392197],\n        [102.43641648, 249.5071812 , 247.1996585 ],\n        [  0.41490623, 230.84585248, 172.16228502],\n        [209.21621661,  50.09228684, 162.78297251],\n        [232.81141999, 105.27959653,  57.50423841],\n        [214.49264616,  70.41991555,  34.03943007],\n        [165.96166089, 150.51932819,  32.17356538],\n        [239.03521063, 145.34341262, 197.3851728 ]],\n\n       [[ 59.36687195, 126.98672849,   3.88134147],\n        [ 83.55710201, 252.23697476,  54.39058213],\n        [249.59405357, 173.98593475, 236.83441866],\n        [144.11922522,  93.03128115,  47.25996225],\n        [147.79890979, 193.25541983,  13.63373599],\n        [ 78.12155428,   7.98932534,  81.13740926],\n        [ 52.98437179, 216.87321822, 242.33554469],\n        [219.17285771, 240.63655333,   9.73064429],\n        [ 30.12564227,  70.2155928 , 164.72904268],\n        [ 37.12740934, 168.19219499, 234.85544684]],\n\n       [[159.44867582,  68.02787735, 122.46314459],\n        [176.78503878, 138.40176958,  49.74586962],\n        [160.93895663, 238.94834626, 179.90336024],\n        [237.6586664 ,  69.2472897 ,  92.30763256],\n        [109.65143402, 181.4926334 , 152.6275709 ],\n        [117.47941979, 111.19345361, 188.09638609],\n        [186.95736899,  31.45578117, 192.6886163 ],\n        [171.66384825, 210.31449719,  51.53961587],\n        [ 87.05574089, 157.25446495,  35.9539909 ],\n        [137.80677746, 134.46003434, 136.97595314]],\n\n       [[107.97657406, 143.29571772, 128.2776035 ],\n        [116.54129529, 135.83968978, 199.41135524],\n        [119.50180557,  44.4711214 , 242.67698472],\n        [189.49370547,  46.6225779 , 127.97653292],\n        [ 49.50540688, 188.09991085, 195.25840924],\n        [ 30.79398405,  62.35433589, 198.82564074],\n        [235.95963455, 248.62915585,  71.16805815],\n        [ 49.88534474, 181.42920397,  30.25654848],\n        [120.23586639, 235.78538147,  33.9390204 ],\n        [157.24899088,  32.1955083 , 141.18162422]],\n\n       [[ 76.74697902,  92.71167136,  74.34683524],\n        [ 60.9867705 , 253.42353321,  72.27047527],\n        [237.57484207,  51.63773027,  40.05964299],\n        [ 31.2555495 ,  67.67510779, 103.85463869],\n        [209.99075071, 217.72935316, 214.28040082],\n        [254.2782833 , 237.9046218 , 198.32024203],\n        [ 23.42525478,  62.73447081,  48.30427372],\n        [223.67795949, 194.33231008, 192.78557679],\n        [250.51692114, 113.35594481,  37.17010164],\n        [239.35346796,  24.35103837, 110.02245849]],\n\n       [[185.47399926,  49.37836626, 127.65130071],\n        [104.78200471, 163.11681235,  35.20959943],\n        [154.5691656 ,  72.17327675,  58.91523706],\n        [177.25291484, 135.25689924,  92.7986535 ],\n        [ 88.28472767, 167.97375472,  48.28749906],\n        [ 84.32524458, 116.6328796 , 158.29740143],\n        [217.83599447, 182.38668643, 129.32190313],\n        [185.97455233, 188.61074965,  41.25218934],\n        [126.72864885, 127.49846346, 167.6285976 ],\n        [ 86.07150378,  68.1503929 , 238.70848519]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d100cd0d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.24498451e+02, -1.77057037e+01,  3.88253708e+01],\n        [ 8.50105820e+01,  4.10679855e+01,  7.43378448e+00],\n        [-4.32390709e+01,  7.17942047e+00,  6.62881241e+01],\n        [ 2.73190079e+01, -9.78439789e+01, -1.19183075e+02],\n        [-3.98328247e+01, -1.15426567e+02, -6.28348045e+01],\n        [ 7.66391220e+01, -1.08435226e+02,  4.16308670e+01],\n        [ 9.54817581e+01, -9.46309814e+01,  3.52705154e+01],\n        [ 6.92658615e+01, -6.59672546e+01, -3.03168259e+01],\n        [ 1.21316383e+02,  1.50439377e+01, -1.17955261e+02],\n        [ 2.76638565e+01, -4.89076767e+01,  1.74791031e+01]],\n\n       [[-3.01719589e+01,  4.90084915e+01,  9.12342758e+01],\n        [ 1.19576668e+02, -1.77386169e+01,  4.16513290e+01],\n        [ 9.63650284e+01, -1.97123642e+01, -8.24653320e+01],\n        [ 1.09978691e+02, -2.61631546e+01, -3.35396118e+01],\n        [ 1.11598289e+02, -7.20763397e+01, -1.11059494e+01],\n        [ 1.26373741e+02,  1.15580681e+02, -4.63106613e+01],\n        [-6.27732391e+01,  1.04248177e+02, -4.68174744e+00],\n        [-9.89174805e+01,  1.24163155e+02,  4.61603012e+01],\n        [-1.03435089e+02, -4.58471680e+00, -5.45990067e+01],\n        [ 1.10438744e+02, -9.69562149e+01, -8.44352417e+01]],\n\n       [[ 1.24558693e+02,  9.70618668e+01,  4.62782974e+01],\n        [-5.09834480e+01,  1.06367195e+02, -6.84720612e+00],\n        [ 9.62451859e+01,  4.81053238e+01,  7.36268234e+01],\n        [ 6.73191910e+01, -5.36283875e+01, -1.20018578e+02],\n        [-1.99142075e+01,  5.01075745e-01,  2.23244095e+01],\n        [-1.59034729e-01, -6.81723938e+01, -9.40969925e+01],\n        [ 8.26065903e+01, -1.27921371e+01, -3.58563843e+01],\n        [ 1.43695007e+02,  6.09959946e+01, -8.86855392e+01],\n        [ 8.31560593e+01,  1.31763687e+01,  6.50814285e+01],\n        [-1.02313538e+02, -7.03429794e+01, -9.11681366e+01]],\n\n       [[ 6.13294296e+01,  4.96348648e+01,  1.16510368e+02],\n        [-6.58100204e+01,  5.34041367e+01,  7.33519669e+01],\n        [ 1.24763870e+01, -3.23071518e+01,  4.23575058e+01],\n        [ 1.15368614e+02,  6.42708206e+01, -1.44342804e+01],\n        [-6.22285194e+01, -1.14259415e+01, -8.58445663e+01],\n        [-2.01273575e+01, -1.62817917e+01, -3.43028488e+01],\n        [-5.93005295e+01, -1.07678223e+02,  9.59027328e+01],\n        [ 9.04417191e+01, -1.03284790e+02,  2.44017105e+01],\n        [ 5.97159958e+01, -5.94903793e+01,  7.85774231e-01],\n        [-8.91561813e+01, -4.40083466e+01,  1.21597054e+02]],\n\n       [[ 1.73992157e+01,  5.51133347e+01,  1.07979790e+02],\n        [ 2.02601166e+01,  4.55465469e+01,  1.07490005e+01],\n        [-7.28650818e+01, -4.34780884e+01,  4.99457016e+01],\n        [ 1.43260651e+02,  1.32728180e+02, -2.12435837e+01],\n        [ 6.82232895e+01,  1.14066856e+02, -1.23265091e+02],\n        [ 5.88439713e+01, -6.66867142e+01,  8.55362167e+01],\n        [-4.64347649e+01, -1.14994049e+01,  1.09131416e+02],\n        [-6.98995743e+01, -4.63590851e+01,  9.08126450e+01],\n        [-7.17654419e+01,  3.37403336e+01,  4.22816544e+01],\n        [ 9.34461746e+01,  2.85644150e+01,  1.15355217e+02]],\n\n       [[-1.00057663e+02,  1.02077255e+01, -6.43131256e+01],\n        [-4.95484200e+01,  1.35457977e+02, -4.01229019e+01],\n        [ 1.32895416e+02,  5.72069321e+01,  1.25914055e+02],\n        [-5.66790390e+01, -2.37477188e+01,  2.04392319e+01],\n        [-9.03052673e+01,  7.64764175e+01,  2.41189041e+01],\n        [-2.28015900e+01, -1.08789673e+02, -4.55584488e+01],\n        [ 1.38396545e+02,  1.00094215e+02, -7.06956329e+01],\n        [-9.42083588e+01,  1.23857552e+02,  9.54928513e+01],\n        [ 6.07900467e+01, -4.65634079e+01, -9.35543594e+01],\n        [ 1.30916443e+02,  5.14132004e+01, -8.65525894e+01]],\n\n       [[ 1.85241394e+01, -4.87511215e+01,  3.57686691e+01],\n        [-5.41931343e+01,  2.16227646e+01,  5.31050339e+01],\n        [ 7.59643631e+01,  1.22169350e+02,  3.72589493e+01],\n        [-1.16313705e+01, -4.75317078e+01,  1.13978661e+02],\n        [ 4.86885605e+01,  6.47136307e+01, -1.40285645e+01],\n        [ 8.41573868e+01, -5.58554840e+00, -6.20057678e+00],\n        [ 8.87496109e+01, -8.53232193e+01,  6.32773666e+01],\n        [-5.23993874e+01,  9.35354996e+01,  4.79838486e+01],\n        [-6.79850159e+01,  4.04754715e+01, -3.66242599e+01],\n        [ 3.30369492e+01,  1.76810379e+01,  1.41267776e+01]],\n\n       [[ 2.43386002e+01,  2.65167160e+01, -1.57034225e+01],\n        [ 9.54723587e+01,  1.90606918e+01, -7.13870239e+00],\n        [ 1.38737976e+02, -7.23078766e+01, -4.17819214e+00],\n        [ 2.40375290e+01, -7.01564178e+01,  6.58136978e+01],\n        [ 9.13194046e+01,  7.13209152e+01, -7.41745911e+01],\n        [ 9.48866348e+01, -5.44246635e+01, -9.28860168e+01],\n        [-3.27709427e+01,  1.31850159e+02,  1.12279640e+02],\n        [-7.36824570e+01,  6.46501999e+01, -7.37946548e+01],\n        [-6.99999847e+01,  1.19006386e+02, -3.44413757e+00],\n        [ 3.72426224e+01, -8.45834961e+01,  3.35689926e+01]],\n\n       [[-2.95921707e+01, -2.40673294e+01, -4.69330215e+01],\n        [-3.16685257e+01,  1.36644531e+02, -6.26932297e+01],\n        [-6.38793602e+01, -6.51412659e+01,  1.13894844e+02],\n        [-8.43658447e-02, -4.91038895e+01, -9.24244537e+01],\n        [ 1.10341393e+02,  1.00950356e+02,  8.63107529e+01],\n        [ 9.43812332e+01,  1.21125618e+02,  1.30598297e+02],\n        [-5.56347275e+01, -5.40445290e+01, -1.00254745e+02],\n        [ 8.88465805e+01,  7.75533066e+01,  9.99979630e+01],\n        [-6.67689056e+01, -3.42305756e+00,  1.26836922e+02],\n        [ 6.08345795e+00, -9.24279633e+01,  1.15673470e+02]],\n\n       [[ 2.37122955e+01, -6.74006348e+01,  6.17939987e+01],\n        [-6.87294006e+01,  4.63378067e+01, -1.88979950e+01],\n        [-4.50237656e+01, -4.46057205e+01,  3.08891678e+01],\n        [-1.11403503e+01,  1.84778976e+01,  5.35729141e+01],\n        [-5.56515045e+01,  5.11947556e+01, -3.53952713e+01],\n        [ 5.43584061e+01, -1.46118164e-01, -3.93547592e+01],\n        [ 2.53828964e+01,  6.56076889e+01,  9.41559982e+01],\n        [-6.26868134e+01,  7.18317490e+01,  6.22945480e+01],\n        [ 6.36895981e+01,  1.07194672e+01,  3.04864502e+00],\n        [ 1.34769470e+02, -4.86286087e+01, -3.76084976e+01]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d100e1710>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[162,  99, 228],\n        [131, 157, 188],\n        [189, 123,  60],\n        [  4,  18, 131],\n        [ 60,   1,  64],\n        [165,   8, 180],\n        [158,  22, 199],\n        [ 93,  50, 173],\n        [  5, 131, 225],\n        [141,  67, 131]],\n\n       [[214, 165,  73],\n        [165,  99, 223],\n        [ 41,  97, 200],\n        [ 90,  90, 213],\n        [112,  44, 215],\n        [ 77, 232, 230],\n        [118, 221,  41],\n        [169, 240,   5],\n        [ 69, 112,   0],\n        [ 39,  19, 214]],\n\n       [[169, 213, 228],\n        [116, 223,  52],\n        [197, 164, 200],\n        [  3,  63, 171],\n        [146, 117,  84],\n        [ 29,  48, 103],\n        [ 87, 103, 186],\n        [ 34, 177, 247],\n        [188, 129, 187],\n        [ 32,  46,   1]],\n\n       [[240, 166, 165],\n        [197, 170,  38],\n        [166,  84, 116],\n        [109, 181, 219],\n        [ 37, 105,  41],\n        [ 89, 100,  83],\n        [219,   9,  44],\n        [148,  13, 194],\n        [124,  57, 163],\n        [245,  72,  14]],\n\n       [[231, 171, 121],\n        [134, 162, 124],\n        [173,  73,  31],\n        [102, 249, 247],\n        [  0, 230, 172],\n        [209,  50, 162],\n        [232, 105,  57],\n        [214,  70,  34],\n        [165, 150,  32],\n        [239, 145, 197]],\n\n       [[ 59, 126,   3],\n        [ 83, 252,  54],\n        [249, 173, 236],\n        [144,  93,  47],\n        [147, 193,  13],\n        [ 78,   7,  81],\n        [ 52, 216, 242],\n        [219, 240,   9],\n        [ 30,  70, 164],\n        [ 37, 168, 234]],\n\n       [[159,  68, 122],\n        [176, 138,  49],\n        [160, 238, 179],\n        [237,  69,  92],\n        [109, 181, 152],\n        [117, 111, 188],\n        [186,  31, 192],\n        [171, 210,  51],\n        [ 87, 157,  35],\n        [137, 134, 136]],\n\n       [[107, 143, 128],\n        [116, 135, 199],\n        [119,  44, 242],\n        [189,  46, 127],\n        [ 49, 188, 195],\n        [ 30,  62, 198],\n        [235, 248,  71],\n        [ 49, 181,  30],\n        [120, 235,  33],\n        [157,  32, 141]],\n\n       [[ 76,  92,  74],\n        [ 60, 253,  72],\n        [237,  51,  40],\n        [ 31,  67, 103],\n        [209, 217, 214],\n        [254, 237, 198],\n        [ 23,  62,  48],\n        [223, 194, 192],\n        [250, 113,  37],\n        [239,  24, 110]],\n\n       [[185,  49, 127],\n        [104, 163,  35],\n        [154,  72,  58],\n        [177, 135,  92],\n        [ 88, 167,  48],\n        [ 84, 116, 158],\n        [217, 182, 129],\n        [185, 188,  41],\n        [126, 127, 167],\n        [ 86,  68, 238]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d101d8440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 124.061     ,  -17.779     ,   38.32      ],\n        [  84.061     ,   40.221     ,    7.3199997 ],\n        [ -43.939003  ,    6.2210007 ,   65.32      ],\n        [  27.060997  ,  -98.779     , -119.68      ],\n        [ -39.939003  , -115.779     ,  -63.68      ],\n        [  76.061     , -108.779     ,   41.32      ],\n        [  95.061     ,  -94.779     ,   34.32      ],\n        [  69.061     ,  -66.779     ,  -30.68      ],\n        [ 121.061     ,   14.221001  , -118.68      ],\n        [  27.060997  ,  -49.779     ,   17.32      ]],\n\n       [[ -30.939003  ,   48.221     ,   90.32      ],\n        [ 119.061     ,  -17.779     ,   41.32      ],\n        [  96.061     ,  -19.779     ,  -82.68      ],\n        [ 109.061     ,  -26.779     ,  -33.68      ],\n        [ 111.061     ,  -72.779     ,  -11.68      ],\n        [ 126.061     ,  115.221     ,  -46.68      ],\n        [ -62.939003  ,  104.221     ,   -5.6800003 ],\n        [ -98.939     ,  123.221     ,   45.32      ],\n        [-103.939     ,   -4.7789993 ,  -54.68      ],\n        [ 110.061     ,  -97.779     ,  -84.68      ]],\n\n       [[ 124.061     ,   96.221     ,   45.32      ],\n        [ -51.939003  ,  106.221     ,   -7.6800003 ],\n        [  96.061     ,   47.221     ,   73.32      ],\n        [  67.061     ,  -53.779     , -120.68      ],\n        [ -19.939003  ,    0.22100067,   22.32      ],\n        [  -0.939003  ,  -68.779     ,  -94.68      ],\n        [  82.061     ,  -13.778999  ,  -36.68      ],\n        [ 143.061     ,   60.221     ,  -89.68      ],\n        [  83.061     ,   12.221001  ,   64.32      ],\n        [-102.939     ,  -70.779     ,  -91.68      ]],\n\n       [[  61.060997  ,   49.221     ,  116.32      ],\n        [ -65.939     ,   53.221     ,   73.32      ],\n        [  12.060997  ,  -32.779     ,   42.32      ],\n        [ 115.061     ,   64.221     ,  -14.68      ],\n        [ -62.939003  ,  -11.778999  ,  -86.68      ],\n        [ -20.939003  ,  -16.779     ,  -34.68      ],\n        [ -59.939003  , -107.779     ,   95.32      ],\n        [  90.061     , -103.779     ,   24.32      ],\n        [  59.060997  ,  -59.779     ,    0.3199997 ],\n        [ -89.939     ,  -44.779     ,  121.32      ]],\n\n       [[  17.060997  ,   54.221     ,  107.32      ],\n        [  20.060997  ,   45.221     ,   10.32      ],\n        [ -72.939     ,  -43.779     ,   49.32      ],\n        [ 143.061     ,  132.22101   ,  -21.68      ],\n        [  68.061     ,  113.221     , -123.68      ],\n        [  58.060997  ,  -66.779     ,   85.32      ],\n        [ -46.939003  ,  -11.778999  ,  108.32      ],\n        [ -69.939     ,  -46.779     ,   90.32      ],\n        [ -71.939     ,   33.221     ,   41.32      ],\n        [  93.061     ,   28.221     ,  115.32      ]],\n\n       [[-100.939     ,    9.221001  ,  -64.68      ],\n        [ -49.939003  ,  135.22101   ,  -40.68      ],\n        [ 132.061     ,   56.221     ,  125.32      ],\n        [ -56.939003  ,  -23.779     ,   20.32      ],\n        [ -90.939     ,   76.221     ,   23.32      ],\n        [ -22.939003  , -109.779     ,  -45.68      ],\n        [ 138.061     ,   99.221     ,  -71.68      ],\n        [ -94.939     ,  123.221     ,   95.32      ],\n        [  60.060997  ,  -46.779     ,  -93.68      ],\n        [ 130.061     ,   51.221     ,  -86.68      ]],\n\n       [[  18.060997  ,  -48.779     ,   35.32      ],\n        [ -54.939003  ,   21.221     ,   52.32      ],\n        [  75.061     ,  121.221     ,   36.32      ],\n        [ -11.939003  ,  -47.779     ,  113.32      ],\n        [  48.060997  ,   64.221     ,  -14.68      ],\n        [  84.061     ,   -5.7789993 ,   -6.6800003 ],\n        [  88.061     ,  -85.779     ,   62.32      ],\n        [ -52.939003  ,   93.221     ,   47.32      ],\n        [ -68.939     ,   40.221     ,  -36.68      ],\n        [  32.060997  ,   17.221     ,   13.32      ]],\n\n       [[  24.060997  ,   26.221     ,  -16.68      ],\n        [  95.061     ,   18.221     ,   -7.6800003 ],\n        [ 138.061     ,  -72.779     ,   -4.6800003 ],\n        [  23.060997  ,  -70.779     ,   65.32      ],\n        [  91.061     ,   71.221     ,  -74.68      ],\n        [  94.061     ,  -54.779     ,  -93.68      ],\n        [ -32.939003  ,  131.22101   ,  111.32      ],\n        [ -73.939     ,   64.221     ,  -74.68      ],\n        [ -70.939     ,  118.221     ,   -3.6800003 ],\n        [  37.060997  ,  -84.779     ,   33.32      ]],\n\n       [[ -29.939003  ,  -24.779     ,  -47.68      ],\n        [ -31.939003  ,  136.22101   ,  -63.68      ],\n        [ -63.939003  ,  -65.779     ,  113.32      ],\n        [  -0.939003  ,  -49.779     ,  -92.68      ],\n        [ 110.061     ,  100.221     ,   85.32      ],\n        [  94.061     ,  120.221     ,  130.32      ],\n        [ -55.939003  ,  -54.779     , -100.68      ],\n        [  88.061     ,   77.221     ,   99.32      ],\n        [ -66.939     ,   -3.7789993 ,  126.32      ],\n        [   6.060997  ,  -92.779     ,  115.32      ]],\n\n       [[  23.060997  ,  -67.779     ,   61.32      ],\n        [ -68.939     ,   46.221     ,  -19.68      ],\n        [ -45.939003  ,  -44.779     ,   30.32      ],\n        [ -11.939003  ,   18.221     ,   53.32      ],\n        [ -55.939003  ,   50.221     ,  -35.68      ],\n        [  54.060997  ,   -0.7789993 ,  -39.68      ],\n        [  25.060997  ,   65.221     ,   93.32      ],\n        [ -62.939003  ,   71.221     ,   61.32      ],\n        [  63.060997  ,   10.221001  ,    2.3199997 ],\n        [ 134.061     ,  -48.779     ,  -37.68      ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d100c4850>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[162.50537429, 131.11378575, 189.96812214,   4.49692782,\n          60.84519658, 165.31087294, 158.95050999,  93.36317822,\n           5.72473581, 141.15910184],\n        [214.91427222, 165.33132306,  41.21466417,  90.14039042,\n         112.57405015,  77.36934267, 118.99825498, 169.84029631,\n          69.08099646,  39.24475809],\n        [169.95829432, 116.832797  , 197.30682462,   3.66142088,\n         146.00441299,  29.58300704,  87.82361946,  34.99446128,\n         188.76143356,  32.51186382],\n        [240.19037328, 197.03196438, 166.03750007, 109.24572072,\n          37.83543565,  89.37715365, 219.58273184, 148.08171788,\n         124.46577399, 245.27705703],\n        [231.65978459, 134.42899632, 173.62569677, 102.43641648,\n           0.41490623, 209.21621661, 232.81141999, 214.49264616,\n         165.96166089, 239.03521063],\n        [ 59.36687195,  83.55710201, 249.59405357, 144.11922522,\n         147.79890979,  78.12155428,  52.98437179, 219.17285771,\n          30.12564227,  37.12740934],\n        [159.44867582, 176.78503878, 160.93895663, 237.6586664 ,\n         109.65143402, 117.47941979, 186.95736899, 171.66384825,\n          87.05574089, 137.80677746],\n        [107.97657406, 116.54129529, 119.50180557, 189.49370547,\n          49.50540688,  30.79398405, 235.95963455,  49.88534474,\n         120.23586639, 157.24899088],\n        [ 76.74697902,  60.9867705 , 237.57484207,  31.2555495 ,\n         209.99075071, 254.2782833 ,  23.42525478, 223.67795949,\n         250.51692114, 239.35346796],\n        [185.47399926, 104.78200471, 154.5691656 , 177.25291484,\n          88.28472767,  84.32524458, 217.83599447, 185.97455233,\n         126.72864885,  86.07150378]],\n\n       [[ 99.07329766, 157.84697882, 123.95842274,  18.9350233 ,\n           1.35243009,   8.34377128,  22.14801431,  50.81173904,\n         131.82293971,  67.87131974],\n        [165.78749734,  99.04038236,  97.06663501,  90.61584772,\n          44.70266136, 232.35968297, 221.02717982, 240.94215841,\n         112.19428094,  19.82278651],\n        [213.84085918, 223.14618963, 164.88432135,  63.15061037,\n         117.28007641,  48.60660229, 103.98686069, 177.7749917 ,\n         129.95536755,  46.4360204 ],\n        [166.41387069, 170.18313219,  84.47184855, 181.04981874,\n         105.35305832, 100.49720803,   9.10078008,  13.49420941,\n          57.28861935,  72.77065167],\n        [171.89233687, 162.32555035,  73.30091337, 249.5071812 ,\n         230.84585248,  50.09228684, 105.27959653,  70.41991555,\n         150.51932819, 145.34341262],\n        [126.98672849, 252.23697476, 173.98593475,  93.03128115,\n         193.25541983,   7.98932534, 216.87321822, 240.63655333,\n          70.2155928 , 168.19219499],\n        [ 68.02787735, 138.40176958, 238.94834626,  69.2472897 ,\n         181.4926334 , 111.19345361,  31.45578117, 210.31449719,\n         157.25446495, 134.46003434],\n        [143.29571772, 135.83968978,  44.4711214 ,  46.6225779 ,\n         188.09991085,  62.35433589, 248.62915585, 181.42920397,\n         235.78538147,  32.1955083 ],\n        [ 92.71167136, 253.42353321,  51.63773027,  67.67510779,\n         217.72935316, 237.9046218 ,  62.73447081, 194.33231008,\n         113.35594481,  24.35103837],\n        [ 49.37836626, 163.11681235,  72.17327675, 135.25689924,\n         167.97375472, 116.6328796 , 182.38668643, 188.61074965,\n         127.49846346,  68.1503929 ]],\n\n       [[228.43745039, 188.94958088,  60.69993381, 131.25800735,\n          64.10617492, 180.57812949, 199.42075593, 173.20486129,\n         225.25538858, 131.60285733],\n        [ 73.76704774, 223.51567269, 200.30403081, 213.91770165,\n         215.53729282, 230.31274325,  41.16576395,   5.02152098,\n           0.50391105, 214.37774597],\n        [228.49770297,  52.95555357, 200.18418449, 171.25819529,\n          84.02479272, 103.77996606, 186.54558999, 247.63399609,\n         187.09506513,   1.62546665],\n        [165.26843727,  38.1289832 , 116.41538623, 219.30761513,\n          41.71048226,  83.81164917,  44.63847321, 194.38071844,\n         163.6549959 ,  14.7828195 ],\n        [121.33821969, 124.19912288,  31.07392197, 247.1996585 ,\n         172.16228502, 162.78297251,  57.50423841,  34.03943007,\n          32.17356538, 197.3851728 ],\n        [  3.88134147,  54.39058213, 236.83441866,  47.25996225,\n          13.63373599,  81.13740926, 242.33554469,   9.73064429,\n         164.72904268, 234.85544684],\n        [122.46314459,  49.74586962, 179.90336024,  92.30763256,\n         152.6275709 , 188.09638609, 192.6886163 ,  51.53961587,\n          35.9539909 , 136.97595314],\n        [128.2776035 , 199.41135524, 242.67698472, 127.97653292,\n         195.25840924, 198.82564074,  71.16805815,  30.25654848,\n          33.9390204 , 141.18162422],\n        [ 74.34683524,  72.27047527,  40.05964299, 103.85463869,\n         214.28040082, 198.32024203,  48.30427372, 192.78557679,\n          37.17010164, 110.02245849],\n        [127.65130071,  35.20959943,  58.91523706,  92.7986535 ,\n          48.28749906, 158.29740143, 129.32190313,  41.25218934,\n         167.6285976 , 238.70848519]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d101169e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.24498451e+02,  8.50105820e+01, -4.32390709e+01,\n          2.73190079e+01, -3.98328247e+01,  7.66391220e+01,\n          9.54817581e+01,  6.92658615e+01,  1.21316383e+02,\n          2.76638565e+01],\n        [-3.01719589e+01,  1.19576668e+02,  9.63650284e+01,\n          1.09978691e+02,  1.11598289e+02,  1.26373741e+02,\n         -6.27732391e+01, -9.89174805e+01, -1.03435089e+02,\n          1.10438744e+02],\n        [ 1.24558693e+02, -5.09834480e+01,  9.62451859e+01,\n          6.73191910e+01, -1.99142075e+01, -1.59034729e-01,\n          8.26065903e+01,  1.43695007e+02,  8.31560593e+01,\n         -1.02313538e+02],\n        [ 6.13294296e+01, -6.58100204e+01,  1.24763870e+01,\n          1.15368614e+02, -6.22285194e+01, -2.01273575e+01,\n         -5.93005295e+01,  9.04417191e+01,  5.97159958e+01,\n         -8.91561813e+01],\n        [ 1.73992157e+01,  2.02601166e+01, -7.28650818e+01,\n          1.43260651e+02,  6.82232895e+01,  5.88439713e+01,\n         -4.64347649e+01, -6.98995743e+01, -7.17654419e+01,\n          9.34461746e+01],\n        [-1.00057663e+02, -4.95484200e+01,  1.32895416e+02,\n         -5.66790390e+01, -9.03052673e+01, -2.28015900e+01,\n          1.38396545e+02, -9.42083588e+01,  6.07900467e+01,\n          1.30916443e+02],\n        [ 1.85241394e+01, -5.41931343e+01,  7.59643631e+01,\n         -1.16313705e+01,  4.86885605e+01,  8.41573868e+01,\n          8.87496109e+01, -5.23993874e+01, -6.79850159e+01,\n          3.30369492e+01],\n        [ 2.43386002e+01,  9.54723587e+01,  1.38737976e+02,\n          2.40375290e+01,  9.13194046e+01,  9.48866348e+01,\n         -3.27709427e+01, -7.36824570e+01, -6.99999847e+01,\n          3.72426224e+01],\n        [-2.95921707e+01, -3.16685257e+01, -6.38793602e+01,\n         -8.43658447e-02,  1.10341393e+02,  9.43812332e+01,\n         -5.56347275e+01,  8.88465805e+01, -6.67689056e+01,\n          6.08345795e+00],\n        [ 2.37122955e+01, -6.87294006e+01, -4.50237656e+01,\n         -1.11403503e+01, -5.56515045e+01,  5.43584061e+01,\n          2.53828964e+01, -6.26868134e+01,  6.36895981e+01,\n          1.34769470e+02]],\n\n       [[-1.77057037e+01,  4.10679855e+01,  7.17942047e+00,\n         -9.78439789e+01, -1.15426567e+02, -1.08435226e+02,\n         -9.46309814e+01, -6.59672546e+01,  1.50439377e+01,\n         -4.89076767e+01],\n        [ 4.90084915e+01, -1.77386169e+01, -1.97123642e+01,\n         -2.61631546e+01, -7.20763397e+01,  1.15580681e+02,\n          1.04248177e+02,  1.24163155e+02, -4.58471680e+00,\n         -9.69562149e+01],\n        [ 9.70618668e+01,  1.06367195e+02,  4.81053238e+01,\n         -5.36283875e+01,  5.01075745e-01, -6.81723938e+01,\n         -1.27921371e+01,  6.09959946e+01,  1.31763687e+01,\n         -7.03429794e+01],\n        [ 4.96348648e+01,  5.34041367e+01, -3.23071518e+01,\n          6.42708206e+01, -1.14259415e+01, -1.62817917e+01,\n         -1.07678223e+02, -1.03284790e+02, -5.94903793e+01,\n         -4.40083466e+01],\n        [ 5.51133347e+01,  4.55465469e+01, -4.34780884e+01,\n          1.32728180e+02,  1.14066856e+02, -6.66867142e+01,\n         -1.14994049e+01, -4.63590851e+01,  3.37403336e+01,\n          2.85644150e+01],\n        [ 1.02077255e+01,  1.35457977e+02,  5.72069321e+01,\n         -2.37477188e+01,  7.64764175e+01, -1.08789673e+02,\n          1.00094215e+02,  1.23857552e+02, -4.65634079e+01,\n          5.14132004e+01],\n        [-4.87511215e+01,  2.16227646e+01,  1.22169350e+02,\n         -4.75317078e+01,  6.47136307e+01, -5.58554840e+00,\n         -8.53232193e+01,  9.35354996e+01,  4.04754715e+01,\n          1.76810379e+01],\n        [ 2.65167160e+01,  1.90606918e+01, -7.23078766e+01,\n         -7.01564178e+01,  7.13209152e+01, -5.44246635e+01,\n          1.31850159e+02,  6.46501999e+01,  1.19006386e+02,\n         -8.45834961e+01],\n        [-2.40673294e+01,  1.36644531e+02, -6.51412659e+01,\n         -4.91038895e+01,  1.00950356e+02,  1.21125618e+02,\n         -5.40445290e+01,  7.75533066e+01, -3.42305756e+00,\n         -9.24279633e+01],\n        [-6.74006348e+01,  4.63378067e+01, -4.46057205e+01,\n          1.84778976e+01,  5.11947556e+01, -1.46118164e-01,\n          6.56076889e+01,  7.18317490e+01,  1.07194672e+01,\n         -4.86286087e+01]],\n\n       [[ 3.88253708e+01,  7.43378448e+00,  6.62881241e+01,\n         -1.19183075e+02, -6.28348045e+01,  4.16308670e+01,\n          3.52705154e+01, -3.03168259e+01, -1.17955261e+02,\n          1.74791031e+01],\n        [ 9.12342758e+01,  4.16513290e+01, -8.24653320e+01,\n         -3.35396118e+01, -1.11059494e+01, -4.63106613e+01,\n         -4.68174744e+00,  4.61603012e+01, -5.45990067e+01,\n         -8.44352417e+01],\n        [ 4.62782974e+01, -6.84720612e+00,  7.36268234e+01,\n         -1.20018578e+02,  2.23244095e+01, -9.40969925e+01,\n         -3.58563843e+01, -8.86855392e+01,  6.50814285e+01,\n         -9.11681366e+01],\n        [ 1.16510368e+02,  7.33519669e+01,  4.23575058e+01,\n         -1.44342804e+01, -8.58445663e+01, -3.43028488e+01,\n          9.59027328e+01,  2.44017105e+01,  7.85774231e-01,\n          1.21597054e+02],\n        [ 1.07979790e+02,  1.07490005e+01,  4.99457016e+01,\n         -2.12435837e+01, -1.23265091e+02,  8.55362167e+01,\n          1.09131416e+02,  9.08126450e+01,  4.22816544e+01,\n          1.15355217e+02],\n        [-6.43131256e+01, -4.01229019e+01,  1.25914055e+02,\n          2.04392319e+01,  2.41189041e+01, -4.55584488e+01,\n         -7.06956329e+01,  9.54928513e+01, -9.35543594e+01,\n         -8.65525894e+01],\n        [ 3.57686691e+01,  5.31050339e+01,  3.72589493e+01,\n          1.13978661e+02, -1.40285645e+01, -6.20057678e+00,\n          6.32773666e+01,  4.79838486e+01, -3.66242599e+01,\n          1.41267776e+01],\n        [-1.57034225e+01, -7.13870239e+00, -4.17819214e+00,\n          6.58136978e+01, -7.41745911e+01, -9.28860168e+01,\n          1.12279640e+02, -7.37946548e+01, -3.44413757e+00,\n          3.35689926e+01],\n        [-4.69330215e+01, -6.26932297e+01,  1.13894844e+02,\n         -9.24244537e+01,  8.63107529e+01,  1.30598297e+02,\n         -1.00254745e+02,  9.99979630e+01,  1.26836922e+02,\n          1.15673470e+02],\n        [ 6.17939987e+01, -1.88979950e+01,  3.08891678e+01,\n          5.35729141e+01, -3.53952713e+01, -3.93547592e+01,\n          9.41559982e+01,  6.22945480e+01,  3.04864502e+00,\n         -3.76084976e+01]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d1013eda0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[162, 131, 189,   4,  60, 165, 158,  93,   5, 141],\n        [214, 165,  41,  90, 112,  77, 118, 169,  69,  39],\n        [169, 116, 197,   3, 146,  29,  87,  34, 188,  32],\n        [240, 197, 166, 109,  37,  89, 219, 148, 124, 245],\n        [231, 134, 173, 102,   0, 209, 232, 214, 165, 239],\n        [ 59,  83, 249, 144, 147,  78,  52, 219,  30,  37],\n        [159, 176, 160, 237, 109, 117, 186, 171,  87, 137],\n        [107, 116, 119, 189,  49,  30, 235,  49, 120, 157],\n        [ 76,  60, 237,  31, 209, 254,  23, 223, 250, 239],\n        [185, 104, 154, 177,  88,  84, 217, 185, 126,  86]],\n\n       [[ 99, 157, 123,  18,   1,   8,  22,  50, 131,  67],\n        [165,  99,  97,  90,  44, 232, 221, 240, 112,  19],\n        [213, 223, 164,  63, 117,  48, 103, 177, 129,  46],\n        [166, 170,  84, 181, 105, 100,   9,  13,  57,  72],\n        [171, 162,  73, 249, 230,  50, 105,  70, 150, 145],\n        [126, 252, 173,  93, 193,   7, 216, 240,  70, 168],\n        [ 68, 138, 238,  69, 181, 111,  31, 210, 157, 134],\n        [143, 135,  44,  46, 188,  62, 248, 181, 235,  32],\n        [ 92, 253,  51,  67, 217, 237,  62, 194, 113,  24],\n        [ 49, 163,  72, 135, 167, 116, 182, 188, 127,  68]],\n\n       [[228, 188,  60, 131,  64, 180, 199, 173, 225, 131],\n        [ 73, 223, 200, 213, 215, 230,  41,   5,   0, 214],\n        [228,  52, 200, 171,  84, 103, 186, 247, 187,   1],\n        [165,  38, 116, 219,  41,  83,  44, 194, 163,  14],\n        [121, 124,  31, 247, 172, 162,  57,  34,  32, 197],\n        [  3,  54, 236,  47,  13,  81, 242,   9, 164, 234],\n        [122,  49, 179,  92, 152, 188, 192,  51,  35, 136],\n        [128, 199, 242, 127, 195, 198,  71,  30,  33, 141],\n        [ 74,  72,  40, 103, 214, 198,  48, 192,  37, 110],\n        [127,  35,  58,  92,  48, 158, 129,  41, 167, 238]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d1107da80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 124.061     ,   84.061     ,  -43.939003  ,   27.060997  ,\n          -39.939003  ,   76.061     ,   95.061     ,   69.061     ,\n          121.061     ,   27.060997  ],\n        [ -30.939003  ,  119.061     ,   96.061     ,  109.061     ,\n          111.061     ,  126.061     ,  -62.939003  ,  -98.939     ,\n         -103.939     ,  110.061     ],\n        [ 124.061     ,  -51.939003  ,   96.061     ,   67.061     ,\n          -19.939003  ,   -0.939003  ,   82.061     ,  143.061     ,\n           83.061     , -102.939     ],\n        [  61.060997  ,  -65.939     ,   12.060997  ,  115.061     ,\n          -62.939003  ,  -20.939003  ,  -59.939003  ,   90.061     ,\n           59.060997  ,  -89.939     ],\n        [  17.060997  ,   20.060997  ,  -72.939     ,  143.061     ,\n           68.061     ,   58.060997  ,  -46.939003  ,  -69.939     ,\n          -71.939     ,   93.061     ],\n        [-100.939     ,  -49.939003  ,  132.061     ,  -56.939003  ,\n          -90.939     ,  -22.939003  ,  138.061     ,  -94.939     ,\n           60.060997  ,  130.061     ],\n        [  18.060997  ,  -54.939003  ,   75.061     ,  -11.939003  ,\n           48.060997  ,   84.061     ,   88.061     ,  -52.939003  ,\n          -68.939     ,   32.060997  ],\n        [  24.060997  ,   95.061     ,  138.061     ,   23.060997  ,\n           91.061     ,   94.061     ,  -32.939003  ,  -73.939     ,\n          -70.939     ,   37.060997  ],\n        [ -29.939003  ,  -31.939003  ,  -63.939003  ,   -0.939003  ,\n          110.061     ,   94.061     ,  -55.939003  ,   88.061     ,\n          -66.939     ,    6.060997  ],\n        [  23.060997  ,  -68.939     ,  -45.939003  ,  -11.939003  ,\n          -55.939003  ,   54.060997  ,   25.060997  ,  -62.939003  ,\n           63.060997  ,  134.061     ]],\n\n       [[ -17.779     ,   40.221     ,    6.2210007 ,  -98.779     ,\n         -115.779     , -108.779     ,  -94.779     ,  -66.779     ,\n           14.221001  ,  -49.779     ],\n        [  48.221     ,  -17.779     ,  -19.779     ,  -26.779     ,\n          -72.779     ,  115.221     ,  104.221     ,  123.221     ,\n           -4.7789993 ,  -97.779     ],\n        [  96.221     ,  106.221     ,   47.221     ,  -53.779     ,\n            0.22100067,  -68.779     ,  -13.778999  ,   60.221     ,\n           12.221001  ,  -70.779     ],\n        [  49.221     ,   53.221     ,  -32.779     ,   64.221     ,\n          -11.778999  ,  -16.779     , -107.779     , -103.779     ,\n          -59.779     ,  -44.779     ],\n        [  54.221     ,   45.221     ,  -43.779     ,  132.22101   ,\n          113.221     ,  -66.779     ,  -11.778999  ,  -46.779     ,\n           33.221     ,   28.221     ],\n        [   9.221001  ,  135.22101   ,   56.221     ,  -23.779     ,\n           76.221     , -109.779     ,   99.221     ,  123.221     ,\n          -46.779     ,   51.221     ],\n        [ -48.779     ,   21.221     ,  121.221     ,  -47.779     ,\n           64.221     ,   -5.7789993 ,  -85.779     ,   93.221     ,\n           40.221     ,   17.221     ],\n        [  26.221     ,   18.221     ,  -72.779     ,  -70.779     ,\n           71.221     ,  -54.779     ,  131.22101   ,   64.221     ,\n          118.221     ,  -84.779     ],\n        [ -24.779     ,  136.22101   ,  -65.779     ,  -49.779     ,\n          100.221     ,  120.221     ,  -54.779     ,   77.221     ,\n           -3.7789993 ,  -92.779     ],\n        [ -67.779     ,   46.221     ,  -44.779     ,   18.221     ,\n           50.221     ,   -0.7789993 ,   65.221     ,   71.221     ,\n           10.221001  ,  -48.779     ]],\n\n       [[  38.32      ,    7.3199997 ,   65.32      , -119.68      ,\n          -63.68      ,   41.32      ,   34.32      ,  -30.68      ,\n         -118.68      ,   17.32      ],\n        [  90.32      ,   41.32      ,  -82.68      ,  -33.68      ,\n          -11.68      ,  -46.68      ,   -5.6800003 ,   45.32      ,\n          -54.68      ,  -84.68      ],\n        [  45.32      ,   -7.6800003 ,   73.32      , -120.68      ,\n           22.32      ,  -94.68      ,  -36.68      ,  -89.68      ,\n           64.32      ,  -91.68      ],\n        [ 116.32      ,   73.32      ,   42.32      ,  -14.68      ,\n          -86.68      ,  -34.68      ,   95.32      ,   24.32      ,\n            0.3199997 ,  121.32      ],\n        [ 107.32      ,   10.32      ,   49.32      ,  -21.68      ,\n         -123.68      ,   85.32      ,  108.32      ,   90.32      ,\n           41.32      ,  115.32      ],\n        [ -64.68      ,  -40.68      ,  125.32      ,   20.32      ,\n           23.32      ,  -45.68      ,  -71.68      ,   95.32      ,\n          -93.68      ,  -86.68      ],\n        [  35.32      ,   52.32      ,   36.32      ,  113.32      ,\n          -14.68      ,   -6.6800003 ,   62.32      ,   47.32      ,\n          -36.68      ,   13.32      ],\n        [ -16.68      ,   -7.6800003 ,   -4.6800003 ,   65.32      ,\n          -74.68      ,  -93.68      ,  111.32      ,  -74.68      ,\n           -3.6800003 ,   33.32      ],\n        [ -47.68      ,  -63.68      ,  113.32      ,  -92.68      ,\n           85.32      ,  130.32      , -100.68      ,   99.32      ,\n          126.32      ,  115.32      ],\n        [  61.32      ,  -19.68      ,   30.32      ,   53.32      ,\n          -35.68      ,  -39.68      ,   93.32      ,   61.32      ,\n            2.3199997 ,  -37.68      ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x7f4d100e4800>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        if x.ndim == 3:\n            x[0, :, :] -= mean[0]\n            x[1, :, :] -= mean[1]\n            x[2, :, :] -= mean[2]\n            if std is not None:\n                x[0, :, :] /= std[0]\n                x[1, :, :] /= std[1]\n                x[2, :, :] /= std[2]\n        else:\n            x[:, 0, :, :] -= mean[0]\n            x[:, 1, :, :] -= mean[1]\n            x[:, 2, :, :] -= mean[2]\n            if std is not None:\n                x[:, 0, :, :] /= std[0]\n                x[:, 1, :, :] /= std[1]\n                x[:, 2, :, :] /= std[2]\n    else:\n        x[..., 0] -= mean[0]\n        x[..., 1] -= mean[1]\n        x[..., 2] -= mean[2]\n        if std is not None:\n            x[..., 0] /= std[0]\n            x[..., 1] /= std[1]\n            x[..., 2] /= std[2]\n    return x",
                "def _preprocess_symbolic_input(x, data_format, mode):\n    \"\"\"Preprocesses a tensor encoding a batch of images.\n\n    # Arguments\n        x: Input tensor, 3D or 4D.\n        data_format: Data format of the image tensor.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed tensor.\n    \"\"\"\n    global _IMAGENET_MEAN\n\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if K.ndim(x) == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    if _IMAGENET_MEAN is None:\n        _IMAGENET_MEAN = K.constant(-np.array(mean))\n\n    # Zero-center by mean pixel\n    if K.dtype(x) != K.dtype(_IMAGENET_MEAN):\n        x = K.bias_add(x, K.cast(_IMAGENET_MEAN, K.dtype(x)), data_format)\n    else:\n        x = K.bias_add(x, _IMAGENET_MEAN, data_format)\n    if std is not None:\n        x /= std\n    return x",
                "def preprocess_input(x, data_format=None, mode='caffe'):\n    \"\"\"Preprocesses a tensor or Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input Numpy or symbolic tensor, 3D or 4D.\n        data_format: Data format of the image tensor/array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed tensor or Numpy array.\n\n    # Raises\n        ValueError: In case of unknown `data_format` argument.\n    \"\"\"\n    if data_format is None:\n        data_format = K.image_data_format()\n    if data_format not in {'channels_first', 'channels_last'}:\n        raise ValueError('Unknown data_format ' + str(data_format))\n\n    if isinstance(x, np.ndarray):\n        return _preprocess_numpy_input(x, data_format=data_format, mode=mode)\n    else:\n        return _preprocess_symbolic_input(x, data_format=data_format,\n                                          mode=mode)",
                "def decode_predictions(preds, top=5):\n    \"\"\"Decodes the prediction of an ImageNet model.\n\n    # Arguments\n        preds: Numpy tensor encoding a batch of predictions.\n        top: Integer, how many top-guesses to return.\n\n    # Returns\n        A list of lists of top class prediction tuples\n        `(class_name, class_description, score)`.\n        One list of tuples per sample in batch input.\n\n    # Raises\n        ValueError: In case of invalid shape of the `pred` array\n            (must be 2D).\n    \"\"\"\n    global CLASS_INDEX\n    if len(preds.shape) != 2 or preds.shape[1] != 1000:\n        raise ValueError('`decode_predictions` expects '\n                         'a batch of predictions '\n                         '(i.e. a 2D array of shape (samples, 1000)). '\n                         'Found array with shape: ' + str(preds.shape))\n    if CLASS_INDEX is None:\n        fpath = get_file('imagenet_class_index.json',\n                         CLASS_INDEX_PATH,\n                         cache_subdir='models',\n                         file_hash='c2c37ea517e94d9795004a39431a14cb')\n        with open(fpath) as f:\n            CLASS_INDEX = json.load(f)\n    results = []\n    for pred in preds:\n        top_indices = pred.argsort()[-top:][::-1]\n        result = [tuple(CLASS_INDEX[str(i)]) + (pred[i],) for i in top_indices]\n        result.sort(key=lambda x: x[2], reverse=True)\n        results.append(result)\n    return results",
                "def _obtain_input_shape(input_shape,\n                        default_size,\n                        min_size,\n                        data_format,\n                        require_flatten,\n                        weights=None):\n    \"\"\"Internal utility to compute/validate a model's input shape.\n\n    # Arguments\n        input_shape: Either None (will return the default network input shape),\n            or a user-provided shape to be validated.\n        default_size: Default input width/height for the model.\n        min_size: Minimum input width/height accepted by the model.\n        data_format: Image data format to use.\n        require_flatten: Whether the model is expected to\n            be linked to a classifier via a Flatten layer.\n        weights: One of `None` (random initialization)\n            or 'imagenet' (pre-training on ImageNet).\n            If weights='imagenet' input channels must be equal to 3.\n\n    # Returns\n        An integer shape tuple (may include None entries).\n\n    # Raises\n        ValueError: In case of invalid argument values.\n    \"\"\"\n    if weights != 'imagenet' and input_shape and len(input_shape) == 3:\n        if data_format == 'channels_first':\n            if input_shape[0] not in {1, 3}:\n                warnings.warn(\n                    'This model usually expects 1 or 3 input channels. '\n                    'However, it was passed an input_shape with ' +\n                    str(input_shape[0]) + ' input channels.')\n            default_shape = (input_shape[0], default_size, default_size)\n        else:\n            if input_shape[-1] not in {1, 3}:\n                warnings.warn(\n                    'This model usually expects 1 or 3 input channels. '\n                    'However, it was passed an input_shape with ' +\n                    str(input_shape[-1]) + ' input channels.')\n            default_shape = (default_size, default_size, input_shape[-1])\n    else:\n        if data_format == 'channels_first':\n            default_shape = (3, default_size, default_size)\n        else:\n            default_shape = (default_size, default_size, 3)\n    if weights == 'imagenet' and require_flatten:\n        if input_shape is not None:\n            if input_shape != default_shape:\n                raise ValueError('When setting`include_top=True` '\n                                 'and loading `imagenet` weights, '\n                                 '`input_shape` should be ' +\n                                 str(default_shape) + '.')\n        return default_shape\n    if input_shape:\n        if data_format == 'channels_first':\n            if input_shape is not None:\n                if len(input_shape) != 3:\n                    raise ValueError(\n                        '`input_shape` must be a tuple of three integers.')\n                if input_shape[0] != 3 and weights == 'imagenet':\n                    raise ValueError('The input must have 3 channels; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n                if ((input_shape[1] is not None and input_shape[1] < min_size) or\n                   (input_shape[2] is not None and input_shape[2] < min_size)):\n                    raise ValueError('Input size must be at least ' +\n                                     str(min_size) + 'x' + str(min_size) + '; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n        else:\n            if input_shape is not None:\n                if len(input_shape) != 3:\n                    raise ValueError(\n                        '`input_shape` must be a tuple of three integers.')\n                if input_shape[-1] != 3 and weights == 'imagenet':\n                    raise ValueError('The input must have 3 channels; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n                if ((input_shape[0] is not None and input_shape[0] < min_size) or\n                   (input_shape[1] is not None and input_shape[1] < min_size)):\n                    raise ValueError('Input size must be at least ' +\n                                     str(min_size) + 'x' + str(min_size) + '; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n    else:\n        if require_flatten:\n            input_shape = default_shape\n        else:\n            if data_format == 'channels_first':\n                input_shape = (3, None, None)\n            else:\n                input_shape = (None, None, 3)\n    if require_flatten:\n        if None in input_shape:\n            raise ValueError('If `include_top` is True, '\n                             'you should specify a static `input_shape`. '\n                             'Got `input_shape=' + str(input_shape) + '`')\n    return input_shape"
            ],
            "inscope_function_signatures": [
                "_preprocess_numpy_input(x, data_format, mode)",
                "_preprocess_symbolic_input(x, data_format, mode)",
                "preprocess_input(x, data_format=None, mode='caffe')",
                "decode_predictions(preds, top=5)",
                "_obtain_input_shape(input_shape, default_size, min_size, data_format, require_flatten, weights=None)"
            ],
            "variables_in_file": {
                "CLASS_INDEX": [
                    216,
                    212,
                    206,
                    14
                ],
                "CLASS_INDEX_PATH": [
                    208,
                    15
                ],
                "_IMAGENET_MEAN": [
                    136,
                    137,
                    140,
                    141,
                    143,
                    18
                ],
                "mode": [
                    41,
                    46,
                    178,
                    114,
                    181,
                    119
                ],
                "x": [
                    129,
                    132,
                    140,
                    141,
                    143,
                    145,
                    146,
                    42,
                    43,
                    44,
                    47,
                    177,
                    178,
                    180,
                    53,
                    54,
                    56,
                    59,
                    65,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    82,
                    83,
                    84,
                    86,
                    87,
                    88,
                    89,
                    217,
                    115,
                    116,
                    117,
                    120,
                    126,
                    127
                ],
                "mean": [
                    66,
                    67,
                    68,
                    133,
                    137,
                    74,
                    75,
                    76,
                    48,
                    82,
                    83,
                    84,
                    121,
                    60
                ],
                "std": [
                    69,
                    70,
                    71,
                    72,
                    134,
                    77,
                    78,
                    79,
                    80,
                    49,
                    144,
                    145,
                    85,
                    86,
                    87,
                    88,
                    122,
                    61
                ],
                "data_format": [
                    64,
                    264,
                    172,
                    141,
                    173,
                    143,
                    174,
                    175,
                    178,
                    51,
                    180,
                    277,
                    307,
                    249,
                    124
                ],
                "x.ndim": [
                    65,
                    53
                ],
                "K.ndim": [
                    126
                ],
                "K": [
                    137,
                    140,
                    141,
                    173,
                    143,
                    126
                ],
                "K.constant": [
                    137
                ],
                "np.array": [
                    137
                ],
                "np": [
                    137,
                    177
                ],
                "K.dtype": [
                    140,
                    141
                ],
                "K.bias_add": [
                    141,
                    143
                ],
                "K.cast": [
                    141
                ],
                "K.image_data_format": [
                    173
                ],
                "ValueError": [
                    293,
                    296,
                    202,
                    300,
                    271,
                    175,
                    280,
                    313,
                    283,
                    287
                ],
                "str": [
                    288,
                    289,
                    261,
                    297,
                    205,
                    301,
                    175,
                    302,
                    274,
                    216,
                    315,
                    284,
                    254
                ],
                "isinstance": [
                    177
                ],
                "np.ndarray": [
                    177
                ],
                "_preprocess_numpy_input": [
                    178
                ],
                "_preprocess_symbolic_input": [
                    180
                ],
                "len": [
                    248,
                    201,
                    292,
                    279
                ],
                "preds.shape": [
                    201,
                    205
                ],
                "preds": [
                    201,
                    205,
                    214
                ],
                "fpath": [
                    211,
                    207
                ],
                "get_file": [
                    207
                ],
                "open": [
                    211
                ],
                "f": [
                    211,
                    212
                ],
                "json.load": [
                    212
                ],
                "json": [
                    212
                ],
                "results": [
                    218,
                    219,
                    213
                ],
                "pred": [
                    216,
                    214,
                    215
                ],
                "top_indices": [
                    216,
                    215
                ],
                "pred.argsort": [
                    215
                ],
                "top": [
                    215
                ],
                "result": [
                    216,
                    217,
                    218
                ],
                "tuple": [
                    216
                ],
                "i": [
                    216
                ],
                "result.sort": [
                    217
                ],
                "results.append": [
                    218
                ],
                "weights": [
                    248,
                    282,
                    268,
                    295
                ],
                "input_shape": [
                    257,
                    261,
                    262,
                    269,
                    270,
                    276,
                    278,
                    279,
                    282,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    295,
                    297,
                    298,
                    299,
                    302,
                    305,
                    308,
                    310,
                    312,
                    315,
                    316,
                    248,
                    250,
                    254,
                    255
                ],
                "warnings.warn": [
                    258,
                    251
                ],
                "warnings": [
                    258,
                    251
                ],
                "default_shape": [
                    262,
                    265,
                    267,
                    270,
                    305,
                    274,
                    275,
                    255
                ],
                "default_size": [
                    265,
                    267,
                    262,
                    255
                ],
                "require_flatten": [
                    304,
                    268,
                    311
                ],
                "min_size": [
                    288,
                    298,
                    299,
                    301,
                    285,
                    286
                ]
            },
            "filtered_variables_in_file": {
                "CLASS_INDEX": [
                    216,
                    212,
                    206,
                    14
                ],
                "CLASS_INDEX_PATH": [
                    208,
                    15
                ],
                "_IMAGENET_MEAN": [
                    136,
                    137,
                    140,
                    141,
                    143,
                    18
                ],
                "mode": [
                    41,
                    46,
                    178,
                    114,
                    181,
                    119
                ],
                "x": [
                    129,
                    132,
                    140,
                    141,
                    143,
                    145,
                    146,
                    42,
                    43,
                    44,
                    47,
                    177,
                    178,
                    180,
                    53,
                    54,
                    56,
                    59,
                    65,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    82,
                    83,
                    84,
                    86,
                    87,
                    88,
                    89,
                    217,
                    115,
                    116,
                    117,
                    120,
                    126,
                    127
                ],
                "mean": [
                    66,
                    67,
                    68,
                    133,
                    137,
                    74,
                    75,
                    76,
                    48,
                    82,
                    83,
                    84,
                    121,
                    60
                ],
                "std": [
                    69,
                    70,
                    71,
                    72,
                    134,
                    77,
                    78,
                    79,
                    80,
                    49,
                    144,
                    145,
                    85,
                    86,
                    87,
                    88,
                    122,
                    61
                ],
                "data_format": [
                    64,
                    264,
                    172,
                    141,
                    173,
                    143,
                    174,
                    175,
                    178,
                    51,
                    180,
                    277,
                    307,
                    249,
                    124
                ],
                "x.ndim": [
                    65,
                    53
                ],
                "K.ndim": [
                    126
                ],
                "K": [
                    137,
                    140,
                    141,
                    173,
                    143,
                    126
                ],
                "K.constant": [
                    137
                ],
                "np.array": [
                    137
                ],
                "np": [
                    137,
                    177
                ],
                "K.dtype": [
                    140,
                    141
                ],
                "K.bias_add": [
                    141,
                    143
                ],
                "K.cast": [
                    141
                ],
                "K.image_data_format": [
                    173
                ],
                "np.ndarray": [
                    177
                ],
                "_preprocess_numpy_input": [
                    178
                ],
                "_preprocess_symbolic_input": [
                    180
                ],
                "preds.shape": [
                    201,
                    205
                ],
                "preds": [
                    201,
                    205,
                    214
                ],
                "fpath": [
                    211,
                    207
                ],
                "get_file": [
                    207
                ],
                "f": [
                    211,
                    212
                ],
                "json.load": [
                    212
                ],
                "json": [
                    212
                ],
                "results": [
                    218,
                    219,
                    213
                ],
                "pred": [
                    216,
                    214,
                    215
                ],
                "top_indices": [
                    216,
                    215
                ],
                "pred.argsort": [
                    215
                ],
                "top": [
                    215
                ],
                "result": [
                    216,
                    217,
                    218
                ],
                "i": [
                    216
                ],
                "result.sort": [
                    217
                ],
                "results.append": [
                    218
                ],
                "weights": [
                    248,
                    282,
                    268,
                    295
                ],
                "input_shape": [
                    257,
                    261,
                    262,
                    269,
                    270,
                    276,
                    278,
                    279,
                    282,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    295,
                    297,
                    298,
                    299,
                    302,
                    305,
                    308,
                    310,
                    312,
                    315,
                    316,
                    248,
                    250,
                    254,
                    255
                ],
                "warnings.warn": [
                    258,
                    251
                ],
                "warnings": [
                    258,
                    251
                ],
                "default_shape": [
                    262,
                    265,
                    267,
                    270,
                    305,
                    274,
                    275,
                    255
                ],
                "default_size": [
                    265,
                    267,
                    262,
                    255
                ],
                "require_flatten": [
                    304,
                    268,
                    311
                ],
                "min_size": [
                    288,
                    298,
                    299,
                    301,
                    285,
                    286
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/keras_25/tests/keras/applications/imagenet_utils_test.py",
                "test_function": "test_preprocess_input",
                "test_function_code": "def test_preprocess_input():\n    # Test image batch with float and int image input\n    x = np.random.uniform(0, 255, (2, 10, 10, 3))\n    xint = x.astype('int32')\n    assert utils.preprocess_input(x).shape == x.shape\n    assert utils.preprocess_input(xint).shape == xint.shape\n\n    out1 = utils.preprocess_input(x, 'channels_last')\n    out1int = utils.preprocess_input(xint, 'channels_last')\n    out2 = utils.preprocess_input(np.transpose(x, (0, 3, 1, 2)),\n                                  'channels_first')\n    out2int = utils.preprocess_input(np.transpose(xint, (0, 3, 1, 2)),\n                                     'channels_first')\n    assert_allclose(out1, out2.transpose(0, 2, 3, 1))\n    assert_allclose(out1int, out2int.transpose(0, 2, 3, 1))\n\n    # Test single image\n    x = np.random.uniform(0, 255, (10, 10, 3))\n    xint = x.astype('int32')\n    assert utils.preprocess_input(x).shape == x.shape\n    assert utils.preprocess_input(xint).shape == xint.shape\n\n    out1 = utils.preprocess_input(x, 'channels_last')\n    out1int = utils.preprocess_input(xint, 'channels_last')\n    out2 = utils.preprocess_input(np.transpose(x, (2, 0, 1)),\n                                  'channels_first')\n    out2int = utils.preprocess_input(np.transpose(xint, (2, 0, 1)),\n                                     'channels_first')\n    assert_allclose(out1, out2.transpose(1, 2, 0))\n    assert_allclose(out1int, out2int.transpose(1, 2, 0))",
                "test_error": "numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'",
                "full_test_error": "def test_preprocess_input():\n        # Test image batch with float and int image input\n        x = np.random.uniform(0, 255, (2, 10, 10, 3))\n        xint = x.astype('int32')\n        assert utils.preprocess_input(x).shape == x.shape\n>       assert utils.preprocess_input(xint).shape == xint.shape\n\ntests/keras/applications/imagenet_utils_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nkeras/applications/imagenet_utils.py:178: in preprocess_input\n    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = array([[[[  7,  68, 163],\n         [234,   8, 149],\n         [ 72,  58,  80],\n         [ 46, 179, 213],\n         [190,...         [115,  24,  52],\n         [204,  28,  65],\n         [ 77,  30, 101],\n         [112,  43, 107]]]], dtype=int32)\ndata_format = 'channels_last', mode = 'caffe'\n\n    def _preprocess_numpy_input(x, data_format, mode):\n        \"\"\"Preprocesses a Numpy array encoding a batch of images.\n    \n        # Arguments\n            x: Input array, 3D or 4D.\n            data_format: Data format of the image array.\n            mode: One of \"caffe\", \"tf\" or \"torch\".\n                - caffe: will convert the images from RGB to BGR,\n                    then will zero-center each color channel with\n                    respect to the ImageNet dataset,\n                    without scaling.\n                - tf: will scale pixels between -1 and 1,\n                    sample-wise.\n                - torch: will scale pixels between 0 and 1 and then\n                    will normalize each channel with respect to the\n                    ImageNet dataset.\n    \n        # Returns\n            Preprocessed Numpy array.\n        \"\"\"\n        if mode == 'tf':\n            x /= 127.5\n            x -= 1.\n            return x\n    \n        if mode == 'torch':\n            x /= 255.\n            mean = [0.485, 0.456, 0.406]\n            std = [0.229, 0.224, 0.225]\n        else:\n            if data_format == 'channels_first':\n                # 'RGB'->'BGR'\n                if x.ndim == 3:\n                    x = x[::-1, ...]\n                else:\n                    x = x[:, ::-1, ...]\n            else:\n                # 'RGB'->'BGR'\n                x = x[..., ::-1]\n            mean = [103.939, 116.779, 123.68]\n            std = None\n    \n        # Zero-center by mean pixel\n        if data_format == 'channels_first':\n            if x.ndim == 3:\n                x[0, :, :] -= mean[0]\n                x[1, :, :] -= mean[1]\n                x[2, :, :] -= mean[2]\n                if std is not None:\n                    x[0, :, :] /= std[0]\n                    x[1, :, :] /= std[1]\n                    x[2, :, :] /= std[2]\n            else:\n                x[:, 0, :, :] -= mean[0]\n                x[:, 1, :, :] -= mean[1]\n                x[:, 2, :, :] -= mean[2]\n                if std is not None:\n                    x[:, 0, :, :] /= std[0]\n                    x[:, 1, :, :] /= std[1]\n                    x[:, 2, :, :] /= std[2]\n        else:\n>           x[..., 0] -= mean[0]\nE           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'\n\nkeras/applications/imagenet_utils.py:82: UFuncTypeError",
                "traceback": "keras/applications/imagenet_utils.py:178: in preprocess_input\n    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = array([[[[  7,  68, 163],\n         [234,   8, 149],\n         [ 72,  58,  80],\n         [ 46, 179, 213],\n         [190,...         [115,  24,  52],\n         [204,  28,  65],\n         [ 77,  30, 101],\n         [112,  43, 107]]]], dtype=int32)\ndata_format = 'channels_last', mode = 'caffe'\n\n    def _preprocess_numpy_input(x, data_format, mode):\n        \"\"\"Preprocesses a Numpy array encoding a batch of images.\n    \n        # Arguments\n            x: Input array, 3D or 4D.\n            data_format: Data format of the image array.\n            mode: One of \"caffe\", \"tf\" or \"torch\".\n                - caffe: will convert the images from RGB to BGR,\n                    then will zero-center each color channel with\n                    respect to the ImageNet dataset,\n                    without scaling.\n                - tf: will scale pixels between -1 and 1,\n                    sample-wise.\n                - torch: will scale pixels between 0 and 1 and then\n                    will normalize each channel with respect to the\n                    ImageNet dataset.\n    \n        # Returns\n            Preprocessed Numpy array.\n        \"\"\"\n        if mode == 'tf':\n            x /= 127.5\n            x -= 1.\n            return x\n    \n        if mode == 'torch':\n            x /= 255.\n            mean = [0.485, 0.456, 0.406]\n            std = [0.229, 0.224, 0.225]\n        else:\n            if data_format == 'channels_first':\n                # 'RGB'->'BGR'\n                if x.ndim == 3:\n                    x = x[::-1, ...]\n                else:\n                    x = x[:, ::-1, ...]\n            else:\n                # 'RGB'->'BGR'\n                x = x[..., ::-1]\n            mean = [103.939, 116.779, 123.68]\n            std = None\n    \n        # Zero-center by mean pixel\n        if data_format == 'channels_first':\n            if x.ndim == 3:\n                x[0, :, :] -= mean[0]\n                x[1, :, :] -= mean[1]\n                x[2, :, :] -= mean[2]\n                if std is not None:\n                    x[0, :, :] /= std[0]\n                    x[1, :, :] /= std[1]\n                    x[2, :, :] /= std[2]\n            else:\n                x[:, 0, :, :] -= mean[0]\n                x[:, 1, :, :] -= mean[1]\n                x[:, 2, :, :] -= mean[2]\n                if std is not None:\n                    x[:, 0, :, :] /= std[0]\n                    x[:, 1, :, :] /= std[1]\n                    x[:, 2, :, :] /= std[2]\n        else:\n>           x[..., 0] -= mean[0]\nE           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'\n\nkeras/applications/imagenet_utils.py:82: UFuncTypeError",
                "test_function_decorators": []
            }
        ]
    }
}