{
    "keras:39": {
        "/home/ubuntu/Desktop/bgp_envs_local/repos/keras_39/keras/utils/generic_utils.py": {
            "buggy_functions": [
                {
                    "function_name": "update",
                    "function_code": "def update(self, current, values=None, force=False):\n    \"\"\"Updates the progress bar.\n\n    # Arguments\n        current: Index of current step.\n        values: List of tuples (name, value_for_last_step).\n            The progress bar will display averages for these values.\n        force: Whether to force visual progress update.\n    \"\"\"\n    values = values or []\n    for k, v in values:\n        if k not in self.sum_values:\n            self.sum_values[k] = [v * (current - self.seen_so_far),\n                                  current - self.seen_so_far]\n            self.unique_values.append(k)\n        else:\n            self.sum_values[k][0] += v * (current - self.seen_so_far)\n            self.sum_values[k][1] += (current - self.seen_so_far)\n    self.seen_so_far = current\n\n    now = time.time()\n    info = ' - %.0fs' % (now - self.start)\n    if self.verbose == 1:\n        if (not force and (now - self.last_update) < self.interval and\n                current < self.target):\n            return\n\n        prev_total_width = self.total_width\n        if self._dynamic_display:\n            sys.stdout.write('\\b' * prev_total_width)\n            sys.stdout.write('\\r')\n        else:\n            sys.stdout.write('\\n')\n\n        if self.target is not None:\n            numdigits = int(np.floor(np.log10(self.target))) + 1\n            barstr = '%%%dd/%d [' % (numdigits, self.target)\n            bar = barstr % current\n            prog = float(current) / self.target\n            prog_width = int(self.width * prog)\n            if prog_width > 0:\n                bar += ('=' * (prog_width - 1))\n                if current < self.target:\n                    bar += '>'\n                else:\n                    bar += '='\n            bar += ('.' * (self.width - prog_width))\n            bar += ']'\n        else:\n            bar = '%7d/Unknown' % current\n\n        self.total_width = len(bar)\n        sys.stdout.write(bar)\n\n        if current:\n            time_per_unit = (now - self.start) / current\n        else:\n            time_per_unit = 0\n        if self.target is not None and current < self.target:\n            eta = time_per_unit * (self.target - current)\n            if eta > 3600:\n                eta_format = '%d:%02d:%02d' % (eta // 3600, (eta % 3600) // 60, eta % 60)\n            elif eta > 60:\n                eta_format = '%d:%02d' % (eta // 60, eta % 60)\n            else:\n                eta_format = '%ds' % eta\n\n            info = ' - ETA: %s' % eta_format\n        else:\n            if time_per_unit >= 1:\n                info += ' %.0fs/step' % time_per_unit\n            elif time_per_unit >= 1e-3:\n                info += ' %.0fms/step' % (time_per_unit * 1e3)\n            else:\n                info += ' %.0fus/step' % (time_per_unit * 1e6)\n\n        for k in self.unique_values:\n            info += ' - %s:' % k\n            if isinstance(self.sum_values[k], list):\n                avg = np.mean(\n                    self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n                if abs(avg) > 1e-3:\n                    info += ' %.4f' % avg\n                else:\n                    info += ' %.4e' % avg\n            else:\n                info += ' %s' % self.sum_values[k]\n\n        self.total_width += len(info)\n        if prev_total_width > self.total_width:\n            info += (' ' * (prev_total_width - self.total_width))\n\n        if self.target is not None and current >= self.target:\n            info += '\\n'\n\n        sys.stdout.write(info)\n        sys.stdout.flush()\n\n    elif self.verbose == 2:\n        if self.target is None or current >= self.target:\n            for k in self.unique_values:\n                info += ' - %s:' % k\n                avg = np.mean(\n                    self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n                if avg > 1e-3:\n                    info += ' %.4f' % avg\n                else:\n                    info += ' %.4e' % avg\n            info += '\\n'\n\n            sys.stdout.write(info)\n            sys.stdout.flush()\n\n    self.last_update = now\n",
                    "decorators": [],
                    "docstring": "Updates the progress bar.\n\n# Arguments\n    current: Index of current step.\n    values: List of tuples (name, value_for_last_step).\n        The progress bar will display averages for these values.\n    force: Whether to force visual progress update.",
                    "start_line": 306,
                    "end_line": 419,
                    "variables": {
                        "values": [
                            315,
                            316
                        ],
                        "k": [
                            320,
                            384,
                            322,
                            323,
                            382,
                            386,
                            392,
                            406,
                            407,
                            409,
                            316,
                            317,
                            318,
                            383
                        ],
                        "v": [
                            322,
                            316,
                            318
                        ],
                        "self.sum_values": [
                            384,
                            322,
                            323,
                            386,
                            392,
                            409,
                            317,
                            318
                        ],
                        "self": [
                            384,
                            386,
                            392,
                            394,
                            395,
                            396,
                            398,
                            404,
                            405,
                            406,
                            409,
                            419,
                            317,
                            318,
                            319,
                            320,
                            322,
                            323,
                            324,
                            327,
                            328,
                            329,
                            330,
                            333,
                            334,
                            340,
                            341,
                            342,
                            344,
                            345,
                            348,
                            352,
                            357,
                            361,
                            364,
                            365,
                            382
                        ],
                        "current": [
                            322,
                            323,
                            324,
                            355,
                            360,
                            361,
                            330,
                            364,
                            365,
                            398,
                            405,
                            343,
                            344,
                            348,
                            318,
                            319
                        ],
                        "self.seen_so_far": [
                            322,
                            323,
                            324,
                            318,
                            319
                        ],
                        "self.unique_values.append": [
                            320
                        ],
                        "self.unique_values": [
                            320,
                            406,
                            382
                        ],
                        "now": [
                            419,
                            326,
                            327,
                            329,
                            361
                        ],
                        "time.time": [
                            326
                        ],
                        "time": [
                            326
                        ],
                        "info": [
                            416,
                            388,
                            390,
                            327,
                            392,
                            394,
                            396,
                            399,
                            401,
                            373,
                            407,
                            376,
                            378,
                            411,
                            380,
                            413,
                            414,
                            383
                        ],
                        "self.start": [
                            361,
                            327
                        ],
                        "self.verbose": [
                            328,
                            404
                        ],
                        "force": [
                            329
                        ],
                        "self.last_update": [
                            329,
                            419
                        ],
                        "self.interval": [
                            329
                        ],
                        "self.target": [
                            330,
                            364,
                            365,
                            398,
                            340,
                            341,
                            342,
                            405,
                            344,
                            348
                        ],
                        "prev_total_width": [
                            395,
                            396,
                            333,
                            335
                        ],
                        "self.total_width": [
                            357,
                            394,
                            395,
                            396,
                            333
                        ],
                        "self._dynamic_display": [
                            334
                        ],
                        "sys.stdout.write": [
                            416,
                            358,
                            335,
                            336,
                            401,
                            338
                        ],
                        "sys.stdout": [
                            416,
                            417,
                            358,
                            335,
                            336,
                            401,
                            338,
                            402
                        ],
                        "sys": [
                            416,
                            417,
                            358,
                            335,
                            336,
                            401,
                            338,
                            402
                        ],
                        "numdigits": [
                            341,
                            342
                        ],
                        "int": [
                            345,
                            341
                        ],
                        "np.floor": [
                            341
                        ],
                        "np": [
                            408,
                            385,
                            341
                        ],
                        "np.log10": [
                            341
                        ],
                        "barstr": [
                            342,
                            343
                        ],
                        "bar": [
                            352,
                            353,
                            355,
                            357,
                            358,
                            343,
                            347,
                            349,
                            351
                        ],
                        "prog": [
                            344,
                            345
                        ],
                        "float": [
                            344
                        ],
                        "prog_width": [
                            352,
                            345,
                            346,
                            347
                        ],
                        "self.width": [
                            352,
                            345
                        ],
                        "len": [
                            394,
                            357
                        ],
                        "time_per_unit": [
                            361,
                            363,
                            365,
                            375,
                            376,
                            377,
                            378,
                            380
                        ],
                        "eta": [
                            365,
                            366,
                            367,
                            368,
                            369,
                            371
                        ],
                        "eta_format": [
                            369,
                            371,
                            373,
                            367
                        ],
                        "isinstance": [
                            384
                        ],
                        "list": [
                            384
                        ],
                        "avg": [
                            385,
                            387,
                            388,
                            390,
                            408,
                            410,
                            411,
                            413
                        ],
                        "np.mean": [
                            408,
                            385
                        ],
                        "max": [
                            409,
                            386
                        ],
                        "abs": [
                            387
                        ],
                        "sys.stdout.flush": [
                            417,
                            402
                        ]
                    },
                    "filtered_variables": {
                        "values": [
                            315,
                            316
                        ],
                        "k": [
                            320,
                            384,
                            322,
                            323,
                            382,
                            386,
                            392,
                            406,
                            407,
                            409,
                            316,
                            317,
                            318,
                            383
                        ],
                        "v": [
                            322,
                            316,
                            318
                        ],
                        "self.sum_values": [
                            384,
                            322,
                            323,
                            386,
                            392,
                            409,
                            317,
                            318
                        ],
                        "self": [
                            384,
                            386,
                            392,
                            394,
                            395,
                            396,
                            398,
                            404,
                            405,
                            406,
                            409,
                            419,
                            317,
                            318,
                            319,
                            320,
                            322,
                            323,
                            324,
                            327,
                            328,
                            329,
                            330,
                            333,
                            334,
                            340,
                            341,
                            342,
                            344,
                            345,
                            348,
                            352,
                            357,
                            361,
                            364,
                            365,
                            382
                        ],
                        "current": [
                            322,
                            323,
                            324,
                            355,
                            360,
                            361,
                            330,
                            364,
                            365,
                            398,
                            405,
                            343,
                            344,
                            348,
                            318,
                            319
                        ],
                        "self.seen_so_far": [
                            322,
                            323,
                            324,
                            318,
                            319
                        ],
                        "self.unique_values.append": [
                            320
                        ],
                        "self.unique_values": [
                            320,
                            406,
                            382
                        ],
                        "now": [
                            419,
                            326,
                            327,
                            329,
                            361
                        ],
                        "time.time": [
                            326
                        ],
                        "time": [
                            326
                        ],
                        "info": [
                            416,
                            388,
                            390,
                            327,
                            392,
                            394,
                            396,
                            399,
                            401,
                            373,
                            407,
                            376,
                            378,
                            411,
                            380,
                            413,
                            414,
                            383
                        ],
                        "self.start": [
                            361,
                            327
                        ],
                        "self.verbose": [
                            328,
                            404
                        ],
                        "force": [
                            329
                        ],
                        "self.last_update": [
                            329,
                            419
                        ],
                        "self.interval": [
                            329
                        ],
                        "self.target": [
                            330,
                            364,
                            365,
                            398,
                            340,
                            341,
                            342,
                            405,
                            344,
                            348
                        ],
                        "prev_total_width": [
                            395,
                            396,
                            333,
                            335
                        ],
                        "self.total_width": [
                            357,
                            394,
                            395,
                            396,
                            333
                        ],
                        "self._dynamic_display": [
                            334
                        ],
                        "sys.stdout.write": [
                            416,
                            358,
                            335,
                            336,
                            401,
                            338
                        ],
                        "sys.stdout": [
                            416,
                            417,
                            358,
                            335,
                            336,
                            401,
                            338,
                            402
                        ],
                        "sys": [
                            416,
                            417,
                            358,
                            335,
                            336,
                            401,
                            338,
                            402
                        ],
                        "numdigits": [
                            341,
                            342
                        ],
                        "np.floor": [
                            341
                        ],
                        "np": [
                            408,
                            385,
                            341
                        ],
                        "np.log10": [
                            341
                        ],
                        "barstr": [
                            342,
                            343
                        ],
                        "bar": [
                            352,
                            353,
                            355,
                            357,
                            358,
                            343,
                            347,
                            349,
                            351
                        ],
                        "prog": [
                            344,
                            345
                        ],
                        "prog_width": [
                            352,
                            345,
                            346,
                            347
                        ],
                        "self.width": [
                            352,
                            345
                        ],
                        "time_per_unit": [
                            361,
                            363,
                            365,
                            375,
                            376,
                            377,
                            378,
                            380
                        ],
                        "eta": [
                            365,
                            366,
                            367,
                            368,
                            369,
                            371
                        ],
                        "eta_format": [
                            369,
                            371,
                            373,
                            367
                        ],
                        "avg": [
                            385,
                            387,
                            388,
                            390,
                            408,
                            410,
                            411,
                            413
                        ],
                        "np.mean": [
                            408,
                            385
                        ],
                        "sys.stdout.flush": [
                            417,
                            402
                        ]
                    },
                    "diff_line_number": 330,
                    "class_data": {
                        "signature": "class Progbar(object)",
                        "docstring": "Displays a progress bar.\n\n# Arguments\n    target: Total number of steps expected, None if unknown.\n    interval: Minimum visual progress update interval (in seconds).",
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self, target, width=30, verbose=1, interval=0.05):\n    self.width = width\n    self.target = target\n    self.sum_values = {}\n    self.unique_values = []\n    self.start = time.time()\n    self.last_update = 0\n    self.interval = interval\n    self.total_width = 0\n    self.seen_so_far = 0\n    self.verbose = verbose\n    self._dynamic_display = hasattr(sys.stdout, 'isatty') and sys.stdout.isatty() or 'ipykernel' in sys.modules",
                            "def update(self, current, values=None, force=False):\n    \"\"\"Updates the progress bar.\n\n    # Arguments\n        current: Index of current step.\n        values: List of tuples (name, value_for_last_step).\n            The progress bar will display averages for these values.\n        force: Whether to force visual progress update.\n    \"\"\"\n    values = values or []\n    for (k, v) in values:\n        if k not in self.sum_values:\n            self.sum_values[k] = [v * (current - self.seen_so_far), current - self.seen_so_far]\n            self.unique_values.append(k)\n        else:\n            self.sum_values[k][0] += v * (current - self.seen_so_far)\n            self.sum_values[k][1] += current - self.seen_so_far\n    self.seen_so_far = current\n    now = time.time()\n    info = ' - %.0fs' % (now - self.start)\n    if self.verbose == 1:\n        if not force and now - self.last_update < self.interval and (current < self.target):\n            return\n        prev_total_width = self.total_width\n        if self._dynamic_display:\n            sys.stdout.write('\\x08' * prev_total_width)\n            sys.stdout.write('\\r')\n        else:\n            sys.stdout.write('\\n')\n        if self.target is not None:\n            numdigits = int(np.floor(np.log10(self.target))) + 1\n            barstr = '%%%dd/%d [' % (numdigits, self.target)\n            bar = barstr % current\n            prog = float(current) / self.target\n            prog_width = int(self.width * prog)\n            if prog_width > 0:\n                bar += '=' * (prog_width - 1)\n                if current < self.target:\n                    bar += '>'\n                else:\n                    bar += '='\n            bar += '.' * (self.width - prog_width)\n            bar += ']'\n        else:\n            bar = '%7d/Unknown' % current\n        self.total_width = len(bar)\n        sys.stdout.write(bar)\n        if current:\n            time_per_unit = (now - self.start) / current\n        else:\n            time_per_unit = 0\n        if self.target is not None and current < self.target:\n            eta = time_per_unit * (self.target - current)\n            if eta > 3600:\n                eta_format = '%d:%02d:%02d' % (eta // 3600, eta % 3600 // 60, eta % 60)\n            elif eta > 60:\n                eta_format = '%d:%02d' % (eta // 60, eta % 60)\n            else:\n                eta_format = '%ds' % eta\n            info = ' - ETA: %s' % eta_format\n        elif time_per_unit >= 1:\n            info += ' %.0fs/step' % time_per_unit\n        elif time_per_unit >= 0.001:\n            info += ' %.0fms/step' % (time_per_unit * 1000.0)\n        else:\n            info += ' %.0fus/step' % (time_per_unit * 1000000.0)\n        for k in self.unique_values:\n            info += ' - %s:' % k\n            if isinstance(self.sum_values[k], list):\n                avg = np.mean(self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n                if abs(avg) > 0.001:\n                    info += ' %.4f' % avg\n                else:\n                    info += ' %.4e' % avg\n            else:\n                info += ' %s' % self.sum_values[k]\n        self.total_width += len(info)\n        if prev_total_width > self.total_width:\n            info += ' ' * (prev_total_width - self.total_width)\n        if self.target is not None and current >= self.target:\n            info += '\\n'\n        sys.stdout.write(info)\n        sys.stdout.flush()\n    elif self.verbose == 2:\n        if self.target is None or current >= self.target:\n            for k in self.unique_values:\n                info += ' - %s:' % k\n                avg = np.mean(self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n                if avg > 0.001:\n                    info += ' %.4f' % avg\n                else:\n                    info += ' %.4e' % avg\n            info += '\\n'\n            sys.stdout.write(info)\n            sys.stdout.flush()\n    self.last_update = now",
                            "def add(self, n, values=None):\n    self.update(self.seen_so_far + n, values)"
                        ],
                        "constructor_variables": [
                            "self.width = width",
                            "self.target = target",
                            "self.sum_values = {}",
                            "self.unique_values = []",
                            "self.start = time.time()",
                            "self.last_update = 0",
                            "self.interval = interval",
                            "self.total_width = 0",
                            "self.seen_so_far = 0",
                            "self.verbose = verbose",
                            "self._dynamic_display = hasattr(sys.stdout, 'isatty') and sys.stdout.isatty() or 'ipykernel' in sys.modules"
                        ],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "__init__(self, target, width=30, verbose=1, interval=0.05)",
                            "update(self, current, values=None, force=False)",
                            "add(self, n, values=None)"
                        ],
                        "class_level_variable_names": [],
                        "constructor_variable_names": [
                            "target",
                            "_dynamic_display",
                            "unique_values",
                            "seen_so_far",
                            "last_update",
                            "interval",
                            "verbose",
                            "width",
                            "start",
                            "sum_values",
                            "total_width"
                        ]
                    },
                    "used_imports": [
                        "import numpy as np",
                        "import time",
                        "import sys"
                    ],
                    "variable_values": [
                        [
                            {
                                "values": {
                                    "variable_value": "[array([0.93415553, 0.3434745 ]), array([0.87735413, 0.46600926])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.sum_values": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f69d5894b10>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "now": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start": {
                                    "variable_value": "1709219286.796605",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "values": {
                                    "variable_value": "[array([0.93415553, 0.3434745 ]), array([0.87735413, 0.46600926])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": "0.8773541269898847",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "v": {
                                    "variable_value": "0.466009259503663",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.9341555327346001: [0.0, 0], 0.8773541269898847: [0.0, 0]}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f69d5894b10>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.9341555327346001, 0.8773541269898847]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "now": {
                                    "variable_value": "1709219286.7973664",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": "' - ETA: 0s - 0.9341555327346001: 0.0000e+00 - 0.8773541269898847: 0.0000e+00'",
                                    "variable_type": "str",
                                    "variable_shape": "76"
                                },
                                "self.start": {
                                    "variable_value": "1709219286.796605",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219286.7973664",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "112",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": "'%1d/2 ['",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "bar": {
                                    "variable_value": "'0/2 [..............................]'",
                                    "variable_type": "str",
                                    "variable_shape": "36"
                                },
                                "prog": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": "'0s'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "avg": {
                                    "variable_value": "0.0",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "values": {
                                    "variable_value": "[array([0.65326095, 0.36950868]), array([0.68238836, 0.46835525])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.9341555327346001: [0.0, 0], 0.8773541269898847: [0.0, 0]}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f69d5894b10>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.9341555327346001, 0.8773541269898847]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "now": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start": {
                                    "variable_value": "1709219286.796605",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219286.7973664",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "112",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "values": {
                                    "variable_value": "[array([0.65326095, 0.36950868]), array([0.68238836, 0.46835525])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": "0.6823883574682794",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "v": {
                                    "variable_value": "0.4683552454162774",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.9341555327346001: [0.0, 0], 0.8773541269898847: [0.0, 0], 0.6532609537918364: [0.36950867772819407, 1], 0.6823883574682794: [0.4683552454162774, 1]}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f69d5894b10>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.9341555327346001, 0.8773541269898847, 0.6532609537918364, 0.6823883574682794]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "now": {
                                    "variable_value": "1709219286.7987065",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": "' - 0s'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "self.start": {
                                    "variable_value": "1709219286.796605",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219286.7973664",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "112",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "values": {
                                    "variable_value": "[array([0.93415553, 0.3434745 ]), array([0.87735413, 0.46600926])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.sum_values": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f69d5923090>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "now": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start": {
                                    "variable_value": "1709219286.799432",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "values": {
                                    "variable_value": "[array([0.93415553, 0.3434745 ]), array([0.87735413, 0.46600926])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": "0.8773541269898847",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "v": {
                                    "variable_value": "0.466009259503663",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.9341555327346001: [0.0, 0], 0.8773541269898847: [0.0, 0]}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f69d5923090>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.9341555327346001, 0.8773541269898847]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "now": {
                                    "variable_value": "1709219286.8000822",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": "' - 0s 0us/step - 0.9341555327346001: 0.0000e+00 - 0.8773541269898847: 0.0000e+00'",
                                    "variable_type": "str",
                                    "variable_shape": "80"
                                },
                                "self.start": {
                                    "variable_value": "1709219286.799432",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219286.8000822",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "95",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": "'      0/Unknown'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": "0.0",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "values": {
                                    "variable_value": "[array([0.02081309, 0.04423289]), array([0.50621445, 0.51882663])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.sum_values": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f361955b290>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "now": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start": {
                                    "variable_value": "1709219289.6386886",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "values": {
                                    "variable_value": "[array([0.02081309, 0.04423289]), array([0.50621445, 0.51882663])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": "0.506214452287167",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "v": {
                                    "variable_value": "0.5188266274743475",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.02081309399392628: [0.0, 0], 0.506214452287167: [0.0, 0]}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f361955b290>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.02081309399392628, 0.506214452287167]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "now": {
                                    "variable_value": "1709219289.6394446",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": "' - ETA: 0s - 0.02081309399392628: 0.0000e+00 - 0.506214452287167: 0.0000e+00'",
                                    "variable_type": "str",
                                    "variable_shape": "76"
                                },
                                "self.start": {
                                    "variable_value": "1709219289.6386886",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219289.6394446",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "112",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": "'%1d/2 ['",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "bar": {
                                    "variable_value": "'0/2 [..............................]'",
                                    "variable_type": "str",
                                    "variable_shape": "36"
                                },
                                "prog": {
                                    "variable_value": "0.0",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": "'0s'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "avg": {
                                    "variable_value": "0.0",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "values": {
                                    "variable_value": "[array([0.94149426, 0.23770231]), array([0.41496361, 0.96881657])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.02081309399392628: [0.0, 0], 0.506214452287167: [0.0, 0]}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f361955b290>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.02081309399392628, 0.506214452287167]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "now": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start": {
                                    "variable_value": "1709219289.6386886",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219289.6394446",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "112",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "values": {
                                    "variable_value": "[array([0.94149426, 0.23770231]), array([0.41496361, 0.96881657])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": "0.41496360973359514",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "v": {
                                    "variable_value": "0.9688165687077834",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.02081309399392628: [0.0, 0], 0.506214452287167: [0.0, 0], 0.9414942555972187: [0.23770231307237144, 1], 0.41496360973359514: [0.9688165687077834, 1]}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f361955b290>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.02081309399392628, 0.506214452287167, 0.9414942555972187, 0.41496360973359514]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "now": {
                                    "variable_value": "1709219289.6408002",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": "' - 0s'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "self.start": {
                                    "variable_value": "1709219289.6386886",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219289.6394446",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "2",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "112",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "values": {
                                    "variable_value": "[array([0.02081309, 0.04423289]), array([0.50621445, 0.51882663])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.sum_values": {
                                    "variable_value": "{}",
                                    "variable_type": "dict",
                                    "variable_shape": "0"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f361956ffd0>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "now": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start": {
                                    "variable_value": "1709219289.64154",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "values": {
                                    "variable_value": "[array([0.02081309, 0.04423289]), array([0.50621445, 0.51882663])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": "0.506214452287167",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "v": {
                                    "variable_value": "0.5188266274743475",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.02081309399392628: [0.0, 0], 0.506214452287167: [0.0, 0]}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f361956ffd0>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.02081309399392628, 0.506214452287167]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "now": {
                                    "variable_value": "1709219289.6421921",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": "' - 0s 0us/step - 0.02081309399392628: 0.0000e+00 - 0.506214452287167: 0.0000e+00'",
                                    "variable_type": "str",
                                    "variable_shape": "80"
                                },
                                "self.start": {
                                    "variable_value": "1709219289.64154",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219289.6421921",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "95",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": "'      0/Unknown'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": "0.0",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "values": {
                                    "variable_value": "[array([0.94149426, 0.23770231]), array([0.41496361, 0.96881657])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "v": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.02081309399392628: [0.0, 0], 0.506214452287167: [0.0, 0]}",
                                    "variable_type": "dict",
                                    "variable_shape": "2"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f361956ffd0>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.02081309399392628, 0.506214452287167]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "now": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.start": {
                                    "variable_value": "1709219289.64154",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219289.6421921",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "95",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "values": {
                                    "variable_value": "[array([0.94149426, 0.23770231]), array([0.41496361, 0.96881657])]",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "k": {
                                    "variable_value": "0.41496360973359514",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "v": {
                                    "variable_value": "0.9688165687077834",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "self.sum_values": {
                                    "variable_value": "{0.02081309399392628: [0.0, 0], 0.506214452287167: [0.0, 0], 0.9414942555972187: [0.23770231307237144, 1], 0.41496360973359514: [0.9688165687077834, 1]}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "self": {
                                    "variable_value": "<keras.utils.generic_utils.Progbar object at 0x7f361956ffd0>",
                                    "variable_type": "Progbar",
                                    "variable_shape": null
                                },
                                "current": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.seen_so_far": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.unique_values.append": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.unique_values": {
                                    "variable_value": "[0.02081309399392628, 0.506214452287167, 0.9414942555972187, 0.41496360973359514]",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "now": {
                                    "variable_value": "1709219289.6440532",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "time.time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "time": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "info": {
                                    "variable_value": "' - 0s 3ms/step - 0.02081309399392628: 0.0000e+00 - 0.506214452287167: 0.0000e+00 - 0.9414942555972187: 0.2377 - 0.41496360973359514: 0.9688'",
                                    "variable_type": "str",
                                    "variable_shape": "139"
                                },
                                "self.start": {
                                    "variable_value": "1709219289.64154",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.verbose": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "force": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.last_update": {
                                    "variable_value": "1709219289.6440532",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.interval": {
                                    "variable_value": "0.05",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "self.target": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "prev_total_width": {
                                    "variable_value": "95",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self.total_width": {
                                    "variable_value": "154",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self._dynamic_display": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "sys.stdout.write": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "numdigits": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.floor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.log10": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "barstr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "bar": {
                                    "variable_value": "'      1/Unknown'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "prog": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prog_width": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.width": {
                                    "variable_value": "30",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "time_per_unit": {
                                    "variable_value": "0.0025131702423095703",
                                    "variable_type": "float",
                                    "variable_shape": null
                                },
                                "eta": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "eta_format": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "avg": {
                                    "variable_value": "0.9688165687077834",
                                    "variable_type": "float64",
                                    "variable_shape": "()"
                                },
                                "np.mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sys.stdout.flush": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": {
                "file_scope_functions": [
                    {
                        "code": "def custom_object_scope(*args):\n    \"\"\"Provides a scope that changes to `_GLOBAL_CUSTOM_OBJECTS` cannot escape.\n\n    Convenience wrapper for `CustomObjectScope`.\n    Code within a `with` statement will be able to access custom objects\n    by name. Changes to global custom objects persist\n    within the enclosing `with` statement. At end of the `with` statement,\n    global custom objects are reverted to state\n    at beginning of the `with` statement.\n\n    # Example\n\n    Consider a custom object `MyObject`\n\n    ```python\n        with custom_object_scope({'MyObject':MyObject}):\n            layer = Dense(..., kernel_regularizer='MyObject')\n            # save, load, etc. will recognize custom object by name\n    ```\n\n    # Arguments\n        *args: Variable length list of dictionaries of name,\n            class pairs to add to custom objects.\n\n    # Returns\n        Object of type `CustomObjectScope`.\n    \"\"\"\n    return CustomObjectScope(*args)",
                        "signature": "custom_object_scope(*args)"
                    },
                    {
                        "code": "def get_custom_objects():\n    \"\"\"Retrieves a live reference to the global dictionary of custom objects.\n\n    Updating and clearing custom objects using `custom_object_scope`\n    is preferred, but `get_custom_objects` can\n    be used to directly access `_GLOBAL_CUSTOM_OBJECTS`.\n\n    # Example\n\n    ```python\n        get_custom_objects().clear()\n        get_custom_objects()['MyObject'] = MyObject\n    ```\n\n    # Returns\n        Global dictionary of names to classes (`_GLOBAL_CUSTOM_OBJECTS`).\n    \"\"\"\n    return _GLOBAL_CUSTOM_OBJECTS",
                        "signature": "get_custom_objects()"
                    },
                    {
                        "code": "def serialize_keras_object(instance):\n    if instance is None:\n        return None\n    if hasattr(instance, 'get_config'):\n        return {\n            'class_name': instance.__class__.__name__,\n            'config': instance.get_config()\n        }\n    if hasattr(instance, '__name__'):\n        return instance.__name__\n    else:\n        raise ValueError('Cannot serialize', instance)",
                        "signature": "serialize_keras_object(instance)"
                    },
                    {
                        "code": "def deserialize_keras_object(identifier, module_objects=None,\n                             custom_objects=None,\n                             printable_module_name='object'):\n    if isinstance(identifier, dict):\n        # In this case we are dealing with a Keras config dictionary.\n        config = identifier\n        if 'class_name' not in config or 'config' not in config:\n            raise ValueError('Improper config format: ' + str(config))\n        class_name = config['class_name']\n        if custom_objects and class_name in custom_objects:\n            cls = custom_objects[class_name]\n        elif class_name in _GLOBAL_CUSTOM_OBJECTS:\n            cls = _GLOBAL_CUSTOM_OBJECTS[class_name]\n        else:\n            module_objects = module_objects or {}\n            cls = module_objects.get(class_name)\n            if cls is None:\n                raise ValueError('Unknown ' + printable_module_name +\n                                 ': ' + class_name)\n        if hasattr(cls, 'from_config'):\n            custom_objects = custom_objects or {}\n            if has_arg(cls.from_config, 'custom_objects'):\n                return cls.from_config(config['config'],\n                                       custom_objects=dict(list(_GLOBAL_CUSTOM_OBJECTS.items()) +\n                                                           list(custom_objects.items())))\n            with CustomObjectScope(custom_objects):\n                return cls.from_config(config['config'])\n        else:\n            # Then `cls` may be a function returning a class.\n            # in this case by convention `config` holds\n            # the kwargs of the function.\n            custom_objects = custom_objects or {}\n            with CustomObjectScope(custom_objects):\n                return cls(**config['config'])\n    elif isinstance(identifier, six.string_types):\n        function_name = identifier\n        if custom_objects and function_name in custom_objects:\n            fn = custom_objects.get(function_name)\n        elif function_name in _GLOBAL_CUSTOM_OBJECTS:\n            fn = _GLOBAL_CUSTOM_OBJECTS[function_name]\n        else:\n            fn = module_objects.get(function_name)\n            if fn is None:\n                raise ValueError('Unknown ' + printable_module_name +\n                                 ':' + function_name)\n        return fn\n    else:\n        raise ValueError('Could not interpret serialized ' +\n                         printable_module_name + ': ' + identifier)",
                        "signature": "deserialize_keras_object(identifier, module_objects=None, custom_objects=None, printable_module_name='object')"
                    },
                    {
                        "code": "def func_dump(func):\n    \"\"\"Serializes a user defined function.\n\n    # Arguments\n        func: the function to serialize.\n\n    # Returns\n        A tuple `(code, defaults, closure)`.\n    \"\"\"\n    raw_code = marshal.dumps(func.__code__)\n    code = codecs.encode(raw_code, 'base64').decode('ascii')\n    defaults = func.__defaults__\n    if func.__closure__:\n        closure = tuple(c.cell_contents for c in func.__closure__)\n    else:\n        closure = None\n    return code, defaults, closure",
                        "signature": "func_dump(func)"
                    },
                    {
                        "code": "def func_load(code, defaults=None, closure=None, globs=None):\n    \"\"\"Deserializes a user defined function.\n\n    # Arguments\n        code: bytecode of the function.\n        defaults: defaults of the function.\n        closure: closure of the function.\n        globs: dictionary of global objects.\n\n    # Returns\n        A function object.\n    \"\"\"\n    if isinstance(code, (tuple, list)):  # unpack previous dump\n        code, defaults, closure = code\n        if isinstance(defaults, list):\n            defaults = tuple(defaults)\n\n    def ensure_value_to_cell(value):\n        \"\"\"Ensures that a value is converted to a python cell object.\n\n        # Arguments\n            value: Any value that needs to be casted to the cell type\n\n        # Returns\n            A value wrapped as a cell object (see function \"func_load\")\n\n        \"\"\"\n        def dummy_fn():\n            value  # just access it so it gets captured in .__closure__\n\n        cell_value = dummy_fn.__closure__[0]\n        if not isinstance(value, type(cell_value)):\n            return cell_value\n        else:\n            return value\n\n    if closure is not None:\n        closure = tuple(ensure_value_to_cell(_) for _ in closure)\n    try:\n        raw_code = codecs.decode(code.encode('ascii'), 'base64')\n    except (UnicodeEncodeError, binascii.Error):\n        # backwards compatibility for models serialized prior to 2.1.2\n        raw_code = code.encode('raw_unicode_escape')\n    code = marshal.loads(raw_code)\n    if globs is None:\n        globs = globals()\n    return python_types.FunctionType(code, globs,\n                                     name=code.co_name,\n                                     argdefs=defaults,\n                                     closure=closure)",
                        "signature": "func_load(code, defaults=None, closure=None, globs=None)"
                    },
                    {
                        "code": "def has_arg(fn, name, accept_all=False):\n    \"\"\"Checks if a callable accepts a given keyword argument.\n\n    For Python 2, checks if there is an argument with the given name.\n\n    For Python 3, checks if there is an argument with the given name, and\n    also whether this argument can be called with a keyword (i.e. if it is\n    not a positional-only argument).\n\n    # Arguments\n        fn: Callable to inspect.\n        name: Check if `fn` can be called with `name` as a keyword argument.\n        accept_all: What to return if there is no parameter called `name`\n                    but the function accepts a `**kwargs` argument.\n\n    # Returns\n        bool, whether `fn` accepts a `name` keyword argument.\n    \"\"\"\n    if sys.version_info < (3,):\n        arg_spec = inspect.getargspec(fn)\n        if accept_all and arg_spec.keywords is not None:\n            return True\n        return (name in arg_spec.args)\n    elif sys.version_info < (3, 3):\n        arg_spec = inspect.getfullargspec(fn)\n        if accept_all and arg_spec.varkw is not None:\n            return True\n        return (name in arg_spec.args or\n                name in arg_spec.kwonlyargs)\n    else:\n        signature = inspect.signature(fn)\n        parameter = signature.parameters.get(name)\n        if parameter is None:\n            if accept_all:\n                for param in signature.parameters.values():\n                    if param.kind == inspect.Parameter.VAR_KEYWORD:\n                        return True\n            return False\n        return (parameter.kind in (inspect.Parameter.POSITIONAL_OR_KEYWORD,\n                                   inspect.Parameter.KEYWORD_ONLY))",
                        "signature": "has_arg(fn, name, accept_all=False)"
                    }
                ],
                "file_scope_classes": [
                    {
                        "class_declaration": "class CustomObjectScope:",
                        "functions": [
                            {
                                "code": "def __init__(self, *args):\n    self.custom_objects = args\n    self.backup = None",
                                "signature": "__init__(self, *args)"
                            },
                            {
                                "code": "def __enter__(self):\n    self.backup = _GLOBAL_CUSTOM_OBJECTS.copy()\n    for objects in self.custom_objects:\n        _GLOBAL_CUSTOM_OBJECTS.update(objects)\n    return self",
                                "signature": "__enter__(self)"
                            },
                            {
                                "code": "def __exit__(self, *args, **kwargs):\n    _GLOBAL_CUSTOM_OBJECTS.clear()\n    _GLOBAL_CUSTOM_OBJECTS.update(self.backup)",
                                "signature": "__exit__(self, *args, **kwargs)"
                            }
                        ]
                    },
                    {
                        "class_declaration": "class Progbar:",
                        "functions": [
                            {
                                "code": "def __init__(self, target, width=30, verbose=1, interval=0.05):\n    self.width = width\n    self.target = target\n    self.sum_values = {}\n    self.unique_values = []\n    self.start = time.time()\n    self.last_update = 0\n    self.interval = interval\n    self.total_width = 0\n    self.seen_so_far = 0\n    self.verbose = verbose\n    self._dynamic_display = ((hasattr(sys.stdout, 'isatty') and\n                              sys.stdout.isatty()) or\n                             'ipykernel' in sys.modules)",
                                "signature": "__init__(self, target, width=30, verbose=1, interval=0.05)"
                            },
                            {
                                "code": "def update(self, current, values=None, force=False):\n    \"\"\"Updates the progress bar.\n\n    # Arguments\n        current: Index of current step.\n        values: List of tuples (name, value_for_last_step).\n            The progress bar will display averages for these values.\n        force: Whether to force visual progress update.\n    \"\"\"\n    values = values or []\n    for k, v in values:\n        if k not in self.sum_values:\n            self.sum_values[k] = [v * (current - self.seen_so_far),\n                                  current - self.seen_so_far]\n            self.unique_values.append(k)\n        else:\n            self.sum_values[k][0] += v * (current - self.seen_so_far)\n            self.sum_values[k][1] += (current - self.seen_so_far)\n    self.seen_so_far = current\n\n    now = time.time()\n    info = ' - %.0fs' % (now - self.start)\n    if self.verbose == 1:\n        if (not force and (now - self.last_update) < self.interval and\n                current < self.target):\n            return\n\n        prev_total_width = self.total_width\n        if self._dynamic_display:\n            sys.stdout.write('\\b' * prev_total_width)\n            sys.stdout.write('\\r')\n        else:\n            sys.stdout.write('\\n')\n\n        if self.target is not None:\n            numdigits = int(np.floor(np.log10(self.target))) + 1\n            barstr = '%%%dd/%d [' % (numdigits, self.target)\n            bar = barstr % current\n            prog = float(current) / self.target\n            prog_width = int(self.width * prog)\n            if prog_width > 0:\n                bar += ('=' * (prog_width - 1))\n                if current < self.target:\n                    bar += '>'\n                else:\n                    bar += '='\n            bar += ('.' * (self.width - prog_width))\n            bar += ']'\n        else:\n            bar = '%7d/Unknown' % current\n\n        self.total_width = len(bar)\n        sys.stdout.write(bar)\n\n        if current:\n            time_per_unit = (now - self.start) / current\n        else:\n            time_per_unit = 0\n        if self.target is not None and current < self.target:\n            eta = time_per_unit * (self.target - current)\n            if eta > 3600:\n                eta_format = '%d:%02d:%02d' % (eta // 3600, (eta % 3600) // 60, eta % 60)\n            elif eta > 60:\n                eta_format = '%d:%02d' % (eta // 60, eta % 60)\n            else:\n                eta_format = '%ds' % eta\n\n            info = ' - ETA: %s' % eta_format\n        else:\n            if time_per_unit >= 1:\n                info += ' %.0fs/step' % time_per_unit\n            elif time_per_unit >= 1e-3:\n                info += ' %.0fms/step' % (time_per_unit * 1e3)\n            else:\n                info += ' %.0fus/step' % (time_per_unit * 1e6)\n\n        for k in self.unique_values:\n            info += ' - %s:' % k\n            if isinstance(self.sum_values[k], list):\n                avg = np.mean(\n                    self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n                if abs(avg) > 1e-3:\n                    info += ' %.4f' % avg\n                else:\n                    info += ' %.4e' % avg\n            else:\n                info += ' %s' % self.sum_values[k]\n\n        self.total_width += len(info)\n        if prev_total_width > self.total_width:\n            info += (' ' * (prev_total_width - self.total_width))\n\n        if self.target is not None and current >= self.target:\n            info += '\\n'\n\n        sys.stdout.write(info)\n        sys.stdout.flush()\n\n    elif self.verbose == 2:\n        if self.target is None or current >= self.target:\n            for k in self.unique_values:\n                info += ' - %s:' % k\n                avg = np.mean(\n                    self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n                if avg > 1e-3:\n                    info += ' %.4f' % avg\n                else:\n                    info += ' %.4e' % avg\n            info += '\\n'\n\n            sys.stdout.write(info)\n            sys.stdout.flush()\n\n    self.last_update = now",
                                "signature": "update(self, current, values=None, force=False)"
                            },
                            {
                                "code": "def add(self, n, values=None):\n    self.update(self.seen_so_far + n, values)",
                                "signature": "add(self, n, values=None)"
                            }
                        ]
                    }
                ]
            },
            "variables_in_file": {
                "_GLOBAL_CUSTOM_OBJECTS": [
                    130,
                    131,
                    102,
                    45,
                    142,
                    47,
                    17,
                    51,
                    52,
                    157,
                    158
                ],
                "object": [
                    283,
                    20
                ],
                "self.custom_objects": [
                    41,
                    46
                ],
                "self": [
                    384,
                    386,
                    392,
                    394,
                    395,
                    396,
                    398,
                    404,
                    405,
                    406,
                    409,
                    419,
                    292,
                    293,
                    294,
                    295,
                    296,
                    41,
                    42,
                    297,
                    298,
                    45,
                    46,
                    299,
                    48,
                    300,
                    301,
                    302,
                    52,
                    317,
                    318,
                    319,
                    320,
                    322,
                    323,
                    324,
                    327,
                    328,
                    329,
                    330,
                    422,
                    333,
                    334,
                    340,
                    341,
                    342,
                    344,
                    345,
                    348,
                    352,
                    357,
                    361,
                    364,
                    365,
                    382
                ],
                "args": [
                    41,
                    82
                ],
                "self.backup": [
                    42,
                    52,
                    45
                ],
                "_GLOBAL_CUSTOM_OBJECTS.copy": [
                    45
                ],
                "objects": [
                    46,
                    47
                ],
                "_GLOBAL_CUSTOM_OBJECTS.update": [
                    52,
                    47
                ],
                "_GLOBAL_CUSTOM_OBJECTS.clear": [
                    51
                ],
                "CustomObjectScope": [
                    144,
                    82,
                    151
                ],
                "instance": [
                    106,
                    108,
                    110,
                    111,
                    113,
                    114,
                    116
                ],
                "hasattr": [
                    113,
                    138,
                    108,
                    302
                ],
                "instance.__class__.__name__": [
                    110
                ],
                "instance.__class__": [
                    110
                ],
                "instance.get_config": [
                    111
                ],
                "instance.__name__": [
                    114
                ],
                "ValueError": [
                    162,
                    166,
                    136,
                    116,
                    126
                ],
                "isinstance": [
                    384,
                    201,
                    203,
                    153,
                    122,
                    220
                ],
                "identifier": [
                    167,
                    154,
                    153,
                    122,
                    124
                ],
                "dict": [
                    122,
                    142
                ],
                "config": [
                    141,
                    145,
                    152,
                    124,
                    125,
                    126,
                    127
                ],
                "str": [
                    126
                ],
                "class_name": [
                    128,
                    129,
                    130,
                    131,
                    134,
                    137,
                    127
                ],
                "custom_objects": [
                    128,
                    129,
                    139,
                    143,
                    144,
                    150,
                    151,
                    155,
                    156
                ],
                "cls": [
                    129,
                    131,
                    134,
                    135,
                    138,
                    140,
                    141,
                    145,
                    152
                ],
                "module_objects": [
                    160,
                    133,
                    134
                ],
                "module_objects.get": [
                    160,
                    134
                ],
                "printable_module_name": [
                    136,
                    162,
                    167
                ],
                "has_arg": [
                    140
                ],
                "cls.from_config": [
                    145,
                    140,
                    141
                ],
                "list": [
                    384,
                    201,
                    203,
                    142,
                    143
                ],
                "_GLOBAL_CUSTOM_OBJECTS.items": [
                    142
                ],
                "custom_objects.items": [
                    143
                ],
                "six.string_types": [
                    153
                ],
                "six": [
                    153
                ],
                "function_name": [
                    160,
                    163,
                    154,
                    155,
                    156,
                    157,
                    158
                ],
                "fn": [
                    160,
                    161,
                    164,
                    260,
                    265,
                    271,
                    156,
                    158
                ],
                "custom_objects.get": [
                    156
                ],
                "raw_code": [
                    228,
                    231,
                    232,
                    179,
                    180
                ],
                "marshal.dumps": [
                    179
                ],
                "marshal": [
                    232,
                    179
                ],
                "func.__code__": [
                    179
                ],
                "func": [
                    179,
                    181,
                    182,
                    183
                ],
                "code": [
                    228,
                    231,
                    232,
                    201,
                    202,
                    235,
                    236,
                    180,
                    186
                ],
                "decode": [
                    180
                ],
                "codecs.encode": [
                    180
                ],
                "codecs": [
                    180,
                    228
                ],
                "defaults": [
                    202,
                    203,
                    204,
                    237,
                    181,
                    186
                ],
                "func.__defaults__": [
                    181
                ],
                "func.__closure__": [
                    182,
                    183
                ],
                "closure": [
                    225,
                    226,
                    202,
                    238,
                    183,
                    185,
                    186
                ],
                "tuple": [
                    201,
                    226,
                    204,
                    183
                ],
                "c.cell_contents": [
                    183
                ],
                "c": [
                    183
                ],
                "value": [
                    217,
                    220,
                    223
                ],
                "cell_value": [
                    219,
                    220,
                    221
                ],
                "dummy_fn.__closure__": [
                    219
                ],
                "dummy_fn": [
                    219
                ],
                "type": [
                    220
                ],
                "ensure_value_to_cell": [
                    226
                ],
                "_": [
                    226
                ],
                "codecs.decode": [
                    228
                ],
                "code.encode": [
                    228,
                    231
                ],
                "UnicodeEncodeError": [
                    229
                ],
                "binascii.Error": [
                    229
                ],
                "binascii": [
                    229
                ],
                "marshal.loads": [
                    232
                ],
                "globs": [
                    233,
                    234,
                    235
                ],
                "globals": [
                    234
                ],
                "python_types.FunctionType": [
                    235
                ],
                "python_types": [
                    235
                ],
                "code.co_name": [
                    236
                ],
                "sys.version_info": [
                    264,
                    259
                ],
                "sys": [
                    416,
                    417,
                    259,
                    358,
                    264,
                    302,
                    303,
                    304,
                    335,
                    336,
                    338,
                    401,
                    402
                ],
                "arg_spec": [
                    260,
                    261,
                    263,
                    265,
                    266,
                    268,
                    269
                ],
                "inspect.getargspec": [
                    260
                ],
                "inspect": [
                    260,
                    265,
                    271,
                    276,
                    279,
                    280
                ],
                "accept_all": [
                    266,
                    274,
                    261
                ],
                "arg_spec.keywords": [
                    261
                ],
                "name": [
                    272,
                    268,
                    269,
                    263
                ],
                "arg_spec.args": [
                    268,
                    263
                ],
                "inspect.getfullargspec": [
                    265
                ],
                "arg_spec.varkw": [
                    266
                ],
                "arg_spec.kwonlyargs": [
                    269
                ],
                "signature": [
                    272,
                    275,
                    271
                ],
                "inspect.signature": [
                    271
                ],
                "parameter": [
                    272,
                    273,
                    279
                ],
                "signature.parameters.get": [
                    272
                ],
                "signature.parameters": [
                    272,
                    275
                ],
                "param": [
                    275,
                    276
                ],
                "signature.parameters.values": [
                    275
                ],
                "param.kind": [
                    276
                ],
                "inspect.Parameter.VAR_KEYWORD": [
                    276
                ],
                "inspect.Parameter": [
                    280,
                    276,
                    279
                ],
                "parameter.kind": [
                    279
                ],
                "inspect.Parameter.POSITIONAL_OR_KEYWORD": [
                    279
                ],
                "inspect.Parameter.KEYWORD_ONLY": [
                    280
                ],
                "self.width": [
                    352,
                    345,
                    292
                ],
                "width": [
                    292
                ],
                "self.target": [
                    293,
                    330,
                    364,
                    365,
                    398,
                    340,
                    341,
                    342,
                    405,
                    344,
                    348
                ],
                "target": [
                    293
                ],
                "self.sum_values": [
                    384,
                    322,
                    323,
                    386,
                    294,
                    392,
                    409,
                    317,
                    318
                ],
                "self.unique_values": [
                    320,
                    406,
                    382,
                    295
                ],
                "self.start": [
                    296,
                    361,
                    327
                ],
                "time.time": [
                    296,
                    326
                ],
                "time": [
                    296,
                    326
                ],
                "self.last_update": [
                    329,
                    297,
                    419
                ],
                "self.interval": [
                    329,
                    298
                ],
                "interval": [
                    298
                ],
                "self.total_width": [
                    357,
                    394,
                    299,
                    395,
                    333,
                    396
                ],
                "self.seen_so_far": [
                    322,
                    323,
                    324,
                    422,
                    300,
                    318,
                    319
                ],
                "self.verbose": [
                    328,
                    404,
                    301
                ],
                "verbose": [
                    301
                ],
                "self._dynamic_display": [
                    334,
                    302
                ],
                "sys.stdout": [
                    416,
                    417,
                    358,
                    302,
                    335,
                    336,
                    303,
                    338,
                    401,
                    402
                ],
                "sys.stdout.isatty": [
                    303
                ],
                "sys.modules": [
                    304
                ],
                "values": [
                    315,
                    316,
                    422
                ],
                "k": [
                    320,
                    384,
                    322,
                    323,
                    382,
                    386,
                    392,
                    406,
                    407,
                    409,
                    316,
                    317,
                    318,
                    383
                ],
                "v": [
                    322,
                    316,
                    318
                ],
                "current": [
                    322,
                    323,
                    324,
                    355,
                    360,
                    361,
                    330,
                    364,
                    365,
                    398,
                    405,
                    343,
                    344,
                    348,
                    318,
                    319
                ],
                "self.unique_values.append": [
                    320
                ],
                "now": [
                    419,
                    326,
                    327,
                    329,
                    361
                ],
                "info": [
                    416,
                    388,
                    390,
                    327,
                    392,
                    394,
                    396,
                    399,
                    401,
                    373,
                    407,
                    376,
                    378,
                    411,
                    380,
                    413,
                    414,
                    383
                ],
                "force": [
                    329
                ],
                "prev_total_width": [
                    395,
                    396,
                    333,
                    335
                ],
                "sys.stdout.write": [
                    416,
                    358,
                    335,
                    336,
                    401,
                    338
                ],
                "numdigits": [
                    341,
                    342
                ],
                "int": [
                    345,
                    341
                ],
                "np.floor": [
                    341
                ],
                "np": [
                    408,
                    385,
                    341
                ],
                "np.log10": [
                    341
                ],
                "barstr": [
                    342,
                    343
                ],
                "bar": [
                    352,
                    353,
                    355,
                    357,
                    358,
                    343,
                    347,
                    349,
                    351
                ],
                "prog": [
                    344,
                    345
                ],
                "float": [
                    344
                ],
                "prog_width": [
                    352,
                    345,
                    346,
                    347
                ],
                "len": [
                    394,
                    357
                ],
                "time_per_unit": [
                    361,
                    363,
                    365,
                    375,
                    376,
                    377,
                    378,
                    380
                ],
                "eta": [
                    365,
                    366,
                    367,
                    368,
                    369,
                    371
                ],
                "eta_format": [
                    369,
                    371,
                    373,
                    367
                ],
                "avg": [
                    385,
                    387,
                    388,
                    390,
                    408,
                    410,
                    411,
                    413
                ],
                "np.mean": [
                    408,
                    385
                ],
                "max": [
                    409,
                    386
                ],
                "abs": [
                    387
                ],
                "sys.stdout.flush": [
                    417,
                    402
                ],
                "self.update": [
                    422
                ],
                "n": [
                    422
                ]
            },
            "filtered_variables_in_file": {
                "_GLOBAL_CUSTOM_OBJECTS": [
                    130,
                    131,
                    102,
                    45,
                    142,
                    47,
                    17,
                    51,
                    52,
                    157,
                    158
                ],
                "self.custom_objects": [
                    41,
                    46
                ],
                "self": [
                    384,
                    386,
                    392,
                    394,
                    395,
                    396,
                    398,
                    404,
                    405,
                    406,
                    409,
                    419,
                    292,
                    293,
                    294,
                    295,
                    296,
                    41,
                    42,
                    297,
                    298,
                    45,
                    46,
                    299,
                    48,
                    300,
                    301,
                    302,
                    52,
                    317,
                    318,
                    319,
                    320,
                    322,
                    323,
                    324,
                    327,
                    328,
                    329,
                    330,
                    422,
                    333,
                    334,
                    340,
                    341,
                    342,
                    344,
                    345,
                    348,
                    352,
                    357,
                    361,
                    364,
                    365,
                    382
                ],
                "args": [
                    41,
                    82
                ],
                "self.backup": [
                    42,
                    52,
                    45
                ],
                "_GLOBAL_CUSTOM_OBJECTS.copy": [
                    45
                ],
                "objects": [
                    46,
                    47
                ],
                "_GLOBAL_CUSTOM_OBJECTS.update": [
                    52,
                    47
                ],
                "_GLOBAL_CUSTOM_OBJECTS.clear": [
                    51
                ],
                "CustomObjectScope": [
                    144,
                    82,
                    151
                ],
                "instance": [
                    106,
                    108,
                    110,
                    111,
                    113,
                    114,
                    116
                ],
                "instance.__class__.__name__": [
                    110
                ],
                "instance.__class__": [
                    110
                ],
                "instance.get_config": [
                    111
                ],
                "instance.__name__": [
                    114
                ],
                "identifier": [
                    167,
                    154,
                    153,
                    122,
                    124
                ],
                "config": [
                    141,
                    145,
                    152,
                    124,
                    125,
                    126,
                    127
                ],
                "class_name": [
                    128,
                    129,
                    130,
                    131,
                    134,
                    137,
                    127
                ],
                "custom_objects": [
                    128,
                    129,
                    139,
                    143,
                    144,
                    150,
                    151,
                    155,
                    156
                ],
                "cls": [
                    129,
                    131,
                    134,
                    135,
                    138,
                    140,
                    141,
                    145,
                    152
                ],
                "module_objects": [
                    160,
                    133,
                    134
                ],
                "module_objects.get": [
                    160,
                    134
                ],
                "printable_module_name": [
                    136,
                    162,
                    167
                ],
                "has_arg": [
                    140
                ],
                "cls.from_config": [
                    145,
                    140,
                    141
                ],
                "_GLOBAL_CUSTOM_OBJECTS.items": [
                    142
                ],
                "custom_objects.items": [
                    143
                ],
                "six.string_types": [
                    153
                ],
                "six": [
                    153
                ],
                "function_name": [
                    160,
                    163,
                    154,
                    155,
                    156,
                    157,
                    158
                ],
                "fn": [
                    160,
                    161,
                    164,
                    260,
                    265,
                    271,
                    156,
                    158
                ],
                "custom_objects.get": [
                    156
                ],
                "raw_code": [
                    228,
                    231,
                    232,
                    179,
                    180
                ],
                "marshal.dumps": [
                    179
                ],
                "marshal": [
                    232,
                    179
                ],
                "func.__code__": [
                    179
                ],
                "func": [
                    179,
                    181,
                    182,
                    183
                ],
                "code": [
                    228,
                    231,
                    232,
                    201,
                    202,
                    235,
                    236,
                    180,
                    186
                ],
                "decode": [
                    180
                ],
                "codecs.encode": [
                    180
                ],
                "codecs": [
                    180,
                    228
                ],
                "defaults": [
                    202,
                    203,
                    204,
                    237,
                    181,
                    186
                ],
                "func.__defaults__": [
                    181
                ],
                "func.__closure__": [
                    182,
                    183
                ],
                "closure": [
                    225,
                    226,
                    202,
                    238,
                    183,
                    185,
                    186
                ],
                "c.cell_contents": [
                    183
                ],
                "c": [
                    183
                ],
                "value": [
                    217,
                    220,
                    223
                ],
                "cell_value": [
                    219,
                    220,
                    221
                ],
                "dummy_fn.__closure__": [
                    219
                ],
                "dummy_fn": [
                    219
                ],
                "ensure_value_to_cell": [
                    226
                ],
                "_": [
                    226
                ],
                "codecs.decode": [
                    228
                ],
                "code.encode": [
                    228,
                    231
                ],
                "binascii.Error": [
                    229
                ],
                "binascii": [
                    229
                ],
                "marshal.loads": [
                    232
                ],
                "globs": [
                    233,
                    234,
                    235
                ],
                "python_types.FunctionType": [
                    235
                ],
                "python_types": [
                    235
                ],
                "code.co_name": [
                    236
                ],
                "sys.version_info": [
                    264,
                    259
                ],
                "sys": [
                    416,
                    417,
                    259,
                    358,
                    264,
                    302,
                    303,
                    304,
                    335,
                    336,
                    338,
                    401,
                    402
                ],
                "arg_spec": [
                    260,
                    261,
                    263,
                    265,
                    266,
                    268,
                    269
                ],
                "inspect.getargspec": [
                    260
                ],
                "inspect": [
                    260,
                    265,
                    271,
                    276,
                    279,
                    280
                ],
                "accept_all": [
                    266,
                    274,
                    261
                ],
                "arg_spec.keywords": [
                    261
                ],
                "name": [
                    272,
                    268,
                    269,
                    263
                ],
                "arg_spec.args": [
                    268,
                    263
                ],
                "inspect.getfullargspec": [
                    265
                ],
                "arg_spec.varkw": [
                    266
                ],
                "arg_spec.kwonlyargs": [
                    269
                ],
                "signature": [
                    272,
                    275,
                    271
                ],
                "inspect.signature": [
                    271
                ],
                "parameter": [
                    272,
                    273,
                    279
                ],
                "signature.parameters.get": [
                    272
                ],
                "signature.parameters": [
                    272,
                    275
                ],
                "param": [
                    275,
                    276
                ],
                "signature.parameters.values": [
                    275
                ],
                "param.kind": [
                    276
                ],
                "inspect.Parameter.VAR_KEYWORD": [
                    276
                ],
                "inspect.Parameter": [
                    280,
                    276,
                    279
                ],
                "parameter.kind": [
                    279
                ],
                "inspect.Parameter.POSITIONAL_OR_KEYWORD": [
                    279
                ],
                "inspect.Parameter.KEYWORD_ONLY": [
                    280
                ],
                "self.width": [
                    352,
                    345,
                    292
                ],
                "width": [
                    292
                ],
                "self.target": [
                    293,
                    330,
                    364,
                    365,
                    398,
                    340,
                    341,
                    342,
                    405,
                    344,
                    348
                ],
                "target": [
                    293
                ],
                "self.sum_values": [
                    384,
                    322,
                    323,
                    386,
                    294,
                    392,
                    409,
                    317,
                    318
                ],
                "self.unique_values": [
                    320,
                    406,
                    382,
                    295
                ],
                "self.start": [
                    296,
                    361,
                    327
                ],
                "time.time": [
                    296,
                    326
                ],
                "time": [
                    296,
                    326
                ],
                "self.last_update": [
                    329,
                    297,
                    419
                ],
                "self.interval": [
                    329,
                    298
                ],
                "interval": [
                    298
                ],
                "self.total_width": [
                    357,
                    394,
                    299,
                    395,
                    333,
                    396
                ],
                "self.seen_so_far": [
                    322,
                    323,
                    324,
                    422,
                    300,
                    318,
                    319
                ],
                "self.verbose": [
                    328,
                    404,
                    301
                ],
                "verbose": [
                    301
                ],
                "self._dynamic_display": [
                    334,
                    302
                ],
                "sys.stdout": [
                    416,
                    417,
                    358,
                    302,
                    335,
                    336,
                    303,
                    338,
                    401,
                    402
                ],
                "sys.stdout.isatty": [
                    303
                ],
                "sys.modules": [
                    304
                ],
                "values": [
                    315,
                    316,
                    422
                ],
                "k": [
                    320,
                    384,
                    322,
                    323,
                    382,
                    386,
                    392,
                    406,
                    407,
                    409,
                    316,
                    317,
                    318,
                    383
                ],
                "v": [
                    322,
                    316,
                    318
                ],
                "current": [
                    322,
                    323,
                    324,
                    355,
                    360,
                    361,
                    330,
                    364,
                    365,
                    398,
                    405,
                    343,
                    344,
                    348,
                    318,
                    319
                ],
                "self.unique_values.append": [
                    320
                ],
                "now": [
                    419,
                    326,
                    327,
                    329,
                    361
                ],
                "info": [
                    416,
                    388,
                    390,
                    327,
                    392,
                    394,
                    396,
                    399,
                    401,
                    373,
                    407,
                    376,
                    378,
                    411,
                    380,
                    413,
                    414,
                    383
                ],
                "force": [
                    329
                ],
                "prev_total_width": [
                    395,
                    396,
                    333,
                    335
                ],
                "sys.stdout.write": [
                    416,
                    358,
                    335,
                    336,
                    401,
                    338
                ],
                "numdigits": [
                    341,
                    342
                ],
                "np.floor": [
                    341
                ],
                "np": [
                    408,
                    385,
                    341
                ],
                "np.log10": [
                    341
                ],
                "barstr": [
                    342,
                    343
                ],
                "bar": [
                    352,
                    353,
                    355,
                    357,
                    358,
                    343,
                    347,
                    349,
                    351
                ],
                "prog": [
                    344,
                    345
                ],
                "prog_width": [
                    352,
                    345,
                    346,
                    347
                ],
                "time_per_unit": [
                    361,
                    363,
                    365,
                    375,
                    376,
                    377,
                    378,
                    380
                ],
                "eta": [
                    365,
                    366,
                    367,
                    368,
                    369,
                    371
                ],
                "eta_format": [
                    369,
                    371,
                    373,
                    367
                ],
                "avg": [
                    385,
                    387,
                    388,
                    390,
                    408,
                    410,
                    411,
                    413
                ],
                "np.mean": [
                    408,
                    385
                ],
                "sys.stdout.flush": [
                    417,
                    402
                ],
                "self.update": [
                    422
                ],
                "n": [
                    422
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/home/ubuntu/Desktop/bgp_envs_local/repos/keras_39/tests/keras/utils/generic_utils_test.py",
                "test_function": "test_progbar",
                "test_function_code": "@keras_test\ndef test_progbar():\n    n = 2\n    input_arr = np.random.random((n, n, n))\n\n    bar = Progbar(n)\n    for i, arr in enumerate(input_arr):\n        bar.update(i, list(arr))\n\n    bar = Progbar(None)\n    for i, arr in enumerate(input_arr):\n        bar.update(i, list(arr))",
                "test_error": "TypeError: '<' not supported between instances of 'int' and 'NoneType'",
                "full_test_error": "@keras_test\n    def test_progbar():\n        n = 2\n        input_arr = np.random.random((n, n, n))\n    \n        bar = Progbar(n)\n        for i, arr in enumerate(input_arr):\n            bar.update(i, list(arr))\n    \n        bar = Progbar(None)\n        for i, arr in enumerate(input_arr):\n>           bar.update(i, list(arr))\n\ntests/keras/utils/generic_utils_test.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <keras.utils.generic_utils.Progbar object at 0x7fa83826bd90>, current = 1\nvalues = [array([0.5311348 , 0.27734179]), array([0.5476537 , 0.16109579])]\nforce = False\n\n    def update(self, current, values=None, force=False):\n        \"\"\"Updates the progress bar.\n    \n        # Arguments\n            current: Index of current step.\n            values: List of tuples (name, value_for_last_step).\n                The progress bar will display averages for these values.\n            force: Whether to force visual progress update.\n        \"\"\"\n        values = values or []\n        for k, v in values:\n            if k not in self.sum_values:\n                self.sum_values[k] = [v * (current - self.seen_so_far),\n                                      current - self.seen_so_far]\n                self.unique_values.append(k)\n            else:\n                self.sum_values[k][0] += v * (current - self.seen_so_far)\n                self.sum_values[k][1] += (current - self.seen_so_far)\n        self.seen_so_far = current\n    \n        now = time.time()\n        info = ' - %.0fs' % (now - self.start)\n        if self.verbose == 1:\n            if (not force and (now - self.last_update) < self.interval and\n>                   current < self.target):\nE                   TypeError: '<' not supported between instances of 'int' and 'NoneType'\n\nkeras/utils/generic_utils.py:330: TypeError",
                "traceback": "self = <keras.utils.generic_utils.Progbar object at 0x7fa83826bd90>, current = 1\nvalues = [array([0.5311348 , 0.27734179]), array([0.5476537 , 0.16109579])]\nforce = False\n\n    def update(self, current, values=None, force=False):\n        \"\"\"Updates the progress bar.\n    \n        # Arguments\n            current: Index of current step.\n            values: List of tuples (name, value_for_last_step).\n                The progress bar will display averages for these values.\n            force: Whether to force visual progress update.\n        \"\"\"\n        values = values or []\n        for k, v in values:\n            if k not in self.sum_values:\n                self.sum_values[k] = [v * (current - self.seen_so_far),\n                                      current - self.seen_so_far]\n                self.unique_values.append(k)\n            else:\n                self.sum_values[k][0] += v * (current - self.seen_so_far)\n                self.sum_values[k][1] += (current - self.seen_so_far)\n        self.seen_so_far = current\n    \n        now = time.time()\n        info = ' - %.0fs' % (now - self.start)\n        if self.verbose == 1:\n            if (not force and (now - self.last_update) < self.interval and\n>                   current < self.target):\nE                   TypeError: '<' not supported between instances of 'int' and 'NoneType'",
                "test_error_location": "keras/utils/generic_utils.py:330: TypeError",
                "test_function_decorators": [
                    "keras_test"
                ]
            }
        ]
    }
}