{
    "luigi": [
        {
            "bugID": 25,
            "start_line": 158,
            "file_name": "luigi/contrib/redshift.py",
            "replace_code": "class S3CopyToTable(rdbms.CopyToTable):\n    \"\"\"\n    Template task for inserting a data set into Redshift from s3.\n\n    Usage:\n\n    * Subclass and override the required attributes:\n      * `host`,\n      * `database`,\n      * `user`,\n      * `password`,\n      * `table`,\n      * `columns`,\n      * `aws_access_key_id`,\n      * `aws_secret_access_key`,\n      * `s3_load_path`.\n    \"\"\"\n\n    ...\n\n    def run(self):\n        \"\"\"\n        If the target table doesn't exist, self.create_table\n        will be called to attempt to create the table.\n        \"\"\"\n        if not self.table:\n            raise Exception(\"table needs to be specified\")\n\n        path = self.s3_load_path\n        connection = self.output().connect()\n        if not self.does_table_exist(connection):\n            # try creating table\n            logger.info(\"Creating table %s\", self.table)\n            connection.reset()\n            self.create_table(connection)\n        elif self.do_truncate_table():\n            logger.info(\"Truncating table %s\", self.table)\n            self.truncate_table(connection)\n\n        logger.info(\"Inserting file: %s\", path)\n        cursor = connection.cursor()\n        self.init_copy(connection)\n        self.copy(cursor, path)\n        self.output().touch(connection)\n        connection.commit()\n\n        # commit and clean up\n        connection.close()\n\n    ...\n\n    def does_table_exist(self, connection):\n        \"\"\"\n        Determine whether the table already exists.\n        \"\"\"\n        query = \"select 1 as table_exists from pg_table_def where tablename = %s limit 1\"\n        cursor = connection.cursor()\n        try:\n            cursor.execute(query, (self.table,))\n            result = cursor.fetchone()\n            return bool(result)\n        finally:\n            cursor.close()\n\n    ..."
        }
    ]
}