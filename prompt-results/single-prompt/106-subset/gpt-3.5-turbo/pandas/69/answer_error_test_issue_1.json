{
    "pandas": [
        {
            "bugID": 69,
            "used_features": [
                "error_message",
                "test_code_blocks",
                "raised_issue_descriptions"
            ],
            "start_line": 2110,
            "file_name": "pandas/core/indexing.py",
            "replace_code": "@Appender(IndexingMixin.at.__doc__)\nclass _AtIndexer(_ScalarAccessIndexer):\n    _takeable = False\n\n    def _convert_key(self, key, is_setter: bool = False):\n        \"\"\"\n        Require the keys to be the same type as the index (so we don't fallback).\n        \"\"\"\n        if is_setter:\n            return list(key)\n\n        for ax, i in zip(self.obj.axes, key):\n            if ax.is_integer() and not isinstance(i, int):\n                raise ValueError(\n                    \"At based indexing on an integer index can only have integer indexers\"\n                )\n            elif not ax.is_integer() and not isinstance(i, (int, float)):\n                raise ValueError(\n                    \"At based indexing on a non-integer index can only have non-integer indexers\"\n                )\n        \n        return key"
        }
    ]
}