{
    "pandas": [
        {
            "bugID": 30,
            "used_features": [
                "error_message",
                "test_code_blocks"
            ],
            "start_line": 953,
            "file_name": "pandas/io/json/_json.py",
            "replace_code": "def _try_convert_to_date(self, data):\n    \"\"\"\n    Try to parse a ndarray like into a date column.\n\n    Try to coerce object in epoch/iso formats and integer/float in epoch\n    formats. Return a boolean if parsing was successful.\n    \"\"\"\n    # no conversion on empty\n    if not len(data):\n        return data, False\n\n    new_data = data\n    if new_data.dtype == \"object\":\n        try:\n            new_data = data.astype(\"int64\")\n        except (TypeError, ValueError, OverflowError):\n            pass\n\n    # ignore numbers that are out of range\n    if issubclass(new_data.dtype.type, np.number):\n        in_range = (\n            isna(new_data._values)\n            | (new_data > self.min_stamp)\n            | (new_data._values == iNaT)\n        )\n        if not in_range.all():\n            return data, False\n\n    if not np.issubdtype(new_data.dtype, np.datetime64):\n        try:\n            new_data = pd.to_datetime(new_data, errors='raise')\n        except ValueError:\n            pass\n        except TypeError:\n            raise TypeError(f\"{type(new_data)} is not convertible to datetime\")\n       \n    return new_data, True"
        }
    ]
}