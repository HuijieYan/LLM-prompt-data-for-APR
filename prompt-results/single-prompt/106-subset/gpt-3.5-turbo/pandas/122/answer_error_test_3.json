{
    "pandas": [
        {
            "bugID": 122,
            "used_features": [
                "error_message",
                "test_code_blocks"
            ],
            "start_line": 1401,
            "file_name": "pandas/core/internals/managers.py",
            "replace_code": "def equals(self, other):\n    self_axes, other_axes = self.axes, other.axes\n    if len(self_axes) != len(other_axes):\n        return False\n    if not all(ax1.equals(ax2) for ax1, ax2 in zip(self_axes, other_axes)):\n        return False\n    self._consolidate_inplace()\n    other._consolidate_inplace()\n    if len(self.blocks) != len(other.blocks):\n        return False\n\n    # canonicalize block order, using a tuple combining the type\n    # name and then mgr_locs because there might be unconsolidated\n    # blocks (say, Categorical) which can only be distinguished by\n    # the iteration order\n    def canonicalize(block):\n        return (block.dtype.name, block.mgr_locs.as_array.tolist())\n\n    self_blocks = sorted(self.blocks, key=canonicalize)\n    other_blocks = sorted(other.blocks, key=canonicalize)\n    if all(\n        block.equals(oblock) for block, oblock in zip(self_blocks, other_blocks)\n    ):\n        return False\n    else:\n        return True\n\n\ndef test_dataframe_not_equal():\n    # see GH28839\n    df1 = pd.DataFrame({\"a\": [1, 2], \"b\": [\"s\", \"d\"]})\n    df2 = pd.DataFrame({\"a\": [\"s\", \"d\"], \"b\": [1, 2]})\n    assert df1.equals(df2) is False"
        }
    ]
}