{
    "pandas": [
        {
            "bugID": 34,
            "used_features": [
                "error_message",
                "raised_issue_descriptions"
            ],
            "start_line": 1406,
            "file_name": "pandas/core/resample.py",
            "replace_code": "def _get_time_bins(self, ax):\n    if not isinstance(ax, pd.DatetimeIndex):\n        raise TypeError(\"axis must be a DatetimeIndex, but got an instance of {type(ax).__name__}\")\n\n    if len(ax) == 0:\n        binner = labels = pd.DatetimeIndex(data=[], freq=self.freq, name=ax.name)\n        return binner, [], labels\n\n    first, last = _get_timestamp_range_edges(ax.min(), ax.max(), self.freq, closed=self.closed, base=self.base)\n    binner = labels = pd.date_range(\n        freq=self.freq,\n        start=first,\n        end=last,\n        tz=ax.tz,\n        name=ax.name,\n        ambiguous=\"infer\",\n        nonexistent=\"shift_forward\",\n    )\n\n    ax_values = ax.tz_localize_to_utc().asi8\n    binner, bin_edges = self._adjust_bin_edges(binner, ax_values)\n\n    bins = lib.generate_bins_dt64(ax_values, bin_edges, self.closed, hasnans=ax.hasnans)\n\n    if self.closed == \"right\":\n        labels = binner\n        if self.label == \"right\":\n            labels = labels[1:]\n    elif self.label == \"right\":\n        labels = labels[1:]\n\n    if ax.hasnans:\n        binner = binner.insert(0, pd.NaT)\n        labels = labels.insert(0, pd.NaT)\n\n    if len(bins) < len(labels):\n        labels = labels[: len(bins)]\n\n    return binner, bins, labels\n\nstart = datetime(2018, 11, 3, 12)\nend = datetime(2018, 11, 5, 12)\nindex = pd.date_range(start, end, freq=\"1H\")\nindex = index.tz_localize('UTC').tz_convert('America/Havana')\ndata = list(range(len(index)))\ndataframe = pd.DataFrame(data, index=index)\ngroups = dataframe.groupby(pd.Grouper(freq='1D'))"
        }
    ]
}