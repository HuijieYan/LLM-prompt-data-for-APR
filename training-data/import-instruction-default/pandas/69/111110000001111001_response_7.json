{
    "pandas": [
        {
            "bugID": 69,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 2110,
            "file_name": "pandas/core/indexing.py",
            "replace_code": "def _convert_key(self, key, is_setter: bool = False):\n        \"\"\"\n        Require the keys to be the same type as the index. (so we don't\n        fallback)\n        \"\"\"\n        # allow arbitrary setting\n        if is_setter:\n            return list(key)\n        \n        for ax, i in zip(self.obj.axes, key):\n            if is_numeric_dtype(ax):\n                if not is_numeric_dtype(i):\n                    raise ValueError(\n                        \"At based indexing on a numeric index \"\n                        \"can only have numeric indexers\"\n                    )\n            elif is_list_like(ax) or is_iterator(ax):\n                if not is_list_like(i) and not is_iterator(i):\n                    raise ValueError(\n                        \"At based indexing on a list-like or iterator index \"\n                        \"can only have list-like or iterator indexers\"\n                    )\n            elif isinstance(ax, pd.DatetimeIndex):\n                if not isinstance(i, pd.Timestamp):\n                    raise ValueError(\n                        \"At based indexing on a datetime index \"\n                        \"can only have datetime indexers\"\n                    )\n        return key",
            "import_list": []
        }
    ]
}