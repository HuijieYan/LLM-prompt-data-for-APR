{
    "pandas": [
        {
            "bugID": 96,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        n = self.n\n        businesshours = pd.offsets.CustomBusinessHour(calendar=self.calendar, \n                                                       start=self.start,\n                                                       end=self.end, \n                                                       weekmask=self.weekmask, \n                                                       holidays=self.holidays).n\n        bd, r = divmod(abs(n * 60), businesshours // 60)\n        if n < 0:\n            bd, r = -bd, -r\n\n        # adjust by business days first\n        if bd != 0:\n            other += pd.offsets.BusinessDay(n=bd, holidays=self.holidays)\n        \n        # remaining business hours to adjust\n        bhour_remain = pd.Timedelta(minutes=r)\n\n        if n >= 0:\n            while bhour_remain != pd.Timedelta(0):\n                bhour = pd.offsets.BusinessHour(start=self.start, \n                                               end=self.end, holidays=self.holidays).apply(other)\n                if bhour_remain < bhour:\n                    other += bhour_remain\n                    bhour_remain = pd.Timedelta(0)\n                else:\n                    bhour_remain -= bhour\n                    other = pd.offsets.BusinessHour(start=self.start, \n                                                  end=self.end, holidays=self.holidays).rollback(other + bhour)\n        else:\n            while bhour_remain != pd.Timedelta(0):\n                bhour = pd.offsets.BusinessHour(start=self.start, \n                                               end=self.end, holidays=self.holidays).rollforward(other)\n                if bhour_remain > bhour:\n                    other += bhour_remain\n                    bhour_remain = pd.Timedelta(0)\n                else:\n                    bhour_remain -= bhour\n                    other = pd.offsets.BusinessHour(start=self.start, \n                                                  end=self.end, holidays=self.holidays).rollback(other + bhour)\n\n        return other\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": []
        }
    ]
}