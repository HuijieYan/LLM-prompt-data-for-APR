{
    "pandas": [
        {
            "bugID": 88,
            "start_line": 25,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def pivot_table(\n    data: DataFrame,\n    values: Union[str, List[str]] = None,\n    index: Union[str, List[str]] = None,\n    columns: Union[str, List[str]] = None,\n    aggfunc: Union[str, List[Callable]] = \"mean\",\n    fill_value=None,\n    margins=False,\n    dropna=True,\n    margins_name=\"All\",\n    observed=False,\n) -> \"DataFrame\":\n    index = _convert_by(index)\n    columns = _convert_by(columns)\n\n    if isinstance(aggfunc, list):\n        pieces: List[DataFrame] = []\n        keys = []\n        for func in aggfunc:\n            table = pivot_table(\n                data,\n                values=values,\n                index=index,\n                columns=columns,\n                fill_value=fill_value,\n                aggfunc=func,\n                margins=margins,\n                dropna=dropna,\n                margins_name=margins_name,\n                observed=observed,\n            )\n            pieces.append(table)\n            keys.append(getattr(func, \"__name__\", func))\n\n        return concat(pieces, keys=keys, axis=1)\n\n    keys = index + columns\n\n    if isinstance(values, str):\n        values = [values]\n\n    if values is None:\n        values = data.columns\n\n    agg_columns = keys + values\n\n    grouped = data.groupby(keys, observed=observed)\n    agged = grouped.agg(aggfunc)\n    \n    if isinstance(agged, ABCDataFrame) and dropna:\n        agged = agged.dropna()\n\n    if columns is not None:\n        table = agged\n\n        if table.index.nlevels > 1:\n            index_names = table.index.names[: len(index)]\n            to_unstack = [i for i in range(len(index), len(keys))]\n            table = table.unstack(to_unstack)\n\n    if not dropna:\n        if columns:\n            table = table.reindex(\n                MultiIndex.from_product(\n                    [getattr(data[col], \"fillna\")(\"\") for col in columns]\n                ),\n                axis=1,\n            )\n\n    if fill_value is not None:\n        table = table.fillna(fill_value)\n\n    return table",
            "import_list": []
        }
    ]
}