{
    "pandas": [
        {
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        # Extract nanosecond attribute from input datetime\n        nanosecond = getattr(other, \"nanosecond\", 0)\n        businesshours = sum(\n            self._get_business_hours_by_sec(st, en)\n            for st, en in zip(self.start, self.end)\n        )\n        n = self.n\n        adjusted_datetime = other\n\n        # Adjust the datetime based on the specified business hours and offsets\n        if n >= 0:\n            if other.time() in self.end or not self._is_on_offset(other):\n                adjusted_datetime = self._next_opening_time(other)\n        else:\n            if other.time() in self.start:\n                adjusted_datetime = other - timedelta(seconds=1)\n            if not self._is_on_offset(other):\n                adjusted_datetime = self._next_opening_time(other)\n                adjusted_datetime = self._get_closing_time(adjusted_datetime)\n\n        adj, r = divmod(abs(n * 60), businesshours // 60)\n        if n < 0:\n            adj, r = -adj, -r\n\n        # Adjust by business days first\n        if adj != 0:\n            skip_bd = BusinessDay(n=adj)\n            if not self._next_opening_time(other).is_on_offset(other):\n                prev_open = self._prev_opening_time(other)\n                remain = other - prev_open\n                adjusted_datetime = prev_open + skip_bd + remain\n            else:\n                adjusted_datetime += skip_bd\n\n        # Remaining business hours to adjust\n        bhour_remain = timedelta(minutes=r)\n\n        if n >= 0:\n            while bhour_remain != timedelta(0):\n                bhour = self._get_closing_time(self._prev_opening_time(adjusted_datetime)) - adjusted_datetime\n                if bhour_remain < bhour:\n                    adjusted_datetime += bhour_remain\n                    bhour_remain = timedelta(0)\n                else:\n                    bhour_remain -= bhour\n                    adjusted_datetime = self._next_opening_time(adjusted_datetime + bhour)\n        else:\n            while bhour_remain != timedelta(0):\n                bhour = self._next_opening_time(adjusted_datetime) - adjusted_datetime\n                if (\n                    bhour_remain > bhour\n                    or bhour_remain == bhour\n                    and nanosecond != 0\n                ):\n                    adjusted_datetime += bhour_remain\n                    bhour_remain = timedelta(0)\n                else:\n                    bhour_remain -= bhour\n                    adjusted_datetime = self._get_closing_time(self._next_opening_time(adjusted_datetime + bhour - timedelta(seconds=1)))\n\n        return adjusted_datetime\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": []
        }
    ]
}