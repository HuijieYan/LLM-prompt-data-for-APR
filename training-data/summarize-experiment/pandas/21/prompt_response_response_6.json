{
    "pandas": [
        {
            "bugID": 21,
            "start_line": 915,
            "file_name": "pandas/core/series.py",
            "replace_code": "def _get_with(self, key):\n    # handle slice indexer\n    if isinstance(key, slice):\n        slobj = self.index._convert_slice_indexer(key, kind=\"getitem\")\n        return self._slice(slobj)\n    \n    # handle DataFrame indexer\n    elif isinstance(key, ABCDataFrame):\n        raise TypeError(\n            \"Indexing a Series with DataFrame is not \"\n            \"supported, use the appropriate DataFrame column\"\n        )\n    \n    # handle tuple indexer\n    elif isinstance(key, tuple):\n        return self._get_values_tuple(key)\n    \n    # handle non-list-like indexer\n    elif not is_list_like(key):\n        return self.loc[key]\n    \n    # handle specific types of indexers\n    elif isinstance(key, (list, np.ndarray, ExtensionArray, Series, Index)):\n        if isinstance(key, Index):\n            key_type = key.inferred_type\n        else:\n            key_type = lib.infer_dtype(key, skipna=False)\n\n        # handle integer indexer\n        if key_type == \"integer\":\n            if not self.index._should_fallback_to_positional():\n                return self.loc[key]\n            else:\n                return self.iloc[key]\n\n        # handle list indexer\n        elif isinstance(key, list):\n            return self.loc[key]\n    \n    # handle reindexing for other cases\n    return self.reindex(key)",
            "import_list": []
        }
    ]
}