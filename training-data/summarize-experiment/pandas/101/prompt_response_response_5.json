{
    "pandas": [
        {
            "bugID": 101,
            "start_line": 792,
            "file_name": "pandas/core/dtypes/cast.py",
            "replace_code": "def astype_nansafe(arr, dtype, copy=True, skipna=False):\n    if is_extension_array_dtype(dtype):\n        return dtype.construct_array_type()._from_sequence(arr, dtype=dtype, copy=copy)\n\n    if not isinstance(dtype, np.dtype):\n        dtype = pandas_dtype(dtype)\n\n    if issubclass(dtype.type, str):\n        return lib.astype_str(arr.ravel(), skipna=skipna).reshape(arr.shape)\n\n    elif is_datetime_or_timedelta_dtype(dtype):\n        from pandas import to_datetime, to_timedelta\n\n        if is_object_dtype(arr):\n            if is_datetime64_dtype(arr):\n                return astype_nansafe(to_datetime(arr, errors='coerce').values, dtype, copy=copy)\n            elif is_timedelta64_dtype(arr):\n                return astype_nansafe(to_timedelta(arr, errors='coerce').values, dtype, copy=copy)\n\n        elif is_datetime64_dtype(arr):\n            return arr.astype(dtype, copy=copy)\n        elif is_timedelta64_dtype(arr):\n            return arr.astype(dtype, copy=copy)\n\n    if dtype.name in (\"datetime64\", \"timedelta64\"):\n        msg = (\n            f\"The '{dtype.name}' dtype has no unit. Please pass in \"\n            f\"'{dtype.name}[ns]' instead.\"\n        )\n        raise ValueError(msg)\n\n    if copy or is_object_dtype(arr) or is_object_dtype(dtype):\n        # Explicit copy, or required since NumPy can't view from / to object.\n        return arr.astype(dtype, copy=True)\n\n    return arr.view(dtype)",
            "import_list": [
                "from pandas import to_datetime, to_timedelta"
            ]
        }
    ]
}