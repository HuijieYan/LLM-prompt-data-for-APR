{
    "keras": [
        {
            "bugID": 25,
            "start_line": 21,
            "file_name": "keras/applications/imagenet_utils.py",
            "replace_code": "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n        if data_format == 'channels_first':\n            x = np.moveaxis(x, -1, 1)  # Move channel axis to index 1\n        # Normalize each channel with respect to the ImageNet dataset\n        for i in range(3):\n            x[:, :, i] = (x[:, :, i] - mean[i]) / std[i]\n        return x\n\n    # Handling other modes and converting from RGB to BGR\n    if data_format == 'channels_first':\n        x = np.moveaxis(x, -1, 1)  # Move channel axis to index 1\n    x = x[..., ::-1]  # 'RGB'->'BGR'\n    mean = [103.939, 116.779, 123.68]\n    x -= mean\n    return x",
            "import_list": [
                "import numpy as np"
            ]
        }
    ]
}