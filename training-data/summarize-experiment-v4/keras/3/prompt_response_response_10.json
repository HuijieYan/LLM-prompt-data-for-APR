{
    "keras": [
        {
            "bugID": 3,
            "start_line": 26,
            "file_name": "keras/models.py",
            "replace_code": "def _clone_functional_model(model, input_tensors=None):\n    # ... (existing code)\n\n    # Check if the layer supports masks\n    layer_supports_mask = hasattr(layer, 'compute_mask')\n\n    # If the layer supports masks or is a multi-output layer\n    if layer_supports_mask or len(reference_output_tensors) > 1:\n        output_masks = []  # Initialize the output_masks list\n        for ref_output_tensor in reference_output_tensors:\n            if layer_supports_mask:\n                # Use layer.compute_mask if available\n                output_masks.append(layer.compute_mask(ref_output_tensor, None))\n            else:\n                # For multi-output layers without mask support, set mask to None\n                output_masks.append(None)\n    else:\n        # If the layer does not support masks and outputs a single tensor\n        output_masks = None\n\n    # ... (existing code)\n\n    # Update tensor_map.\n    for x, y, mask in zip(reference_output_tensors, output_tensors, output_masks):\n        tensor_map[x] = (y, mask)",
            "import_list": []
        }
    ]
}