{
    "pandas": [
        {
            "bugID": 96,
            "start_line": 857,
            "file_name": "pandas/tseries/offsets.py",
            "replace_code": "def apply(self, other):\n    if isinstance(other, datetime):\n        # reset timezone, nanosecond, and microseconds\n        other = other.replace(tzinfo=None, microsecond=0)\n        \n        n = self.n\n\n        if n >= 0:\n            if other.time() in self.end or not self._is_on_offset(other):\n                other = self._next_opening_time(other)\n        else:\n            if other.time() in self.start:\n                other = other - timedelta(seconds=1)\n            if not self._is_on_offset(other):\n                other = self._next_opening_time(other)\n                other = self._get_closing_time(other)\n\n        business_hours = sum(\n            self._get_business_hours_by_sec(st, en)\n            for st, en in zip(self.start, self.end)\n        )\n\n        no_of_business_days, remaining_minutes = divmod(abs(n * 60), business_hours // 60)\n        if n < 0:\n            no_of_business_days, remaining_minutes = -no_of_business_days, -remaining_minutes\n\n        if no_of_business_days != 0:\n            skip_bdays = BusinessDay(n=no_of_business_days)\n            if not self.is_on_offset(other + skip_bdays):\n                prev_open = self._prev_opening_time(other)\n                remain_time = other - prev_open\n                other = prev_open + skip_bdays + remain_time\n            else:\n                other = other + skip_bdays\n\n        remaining_business_hours = timedelta(minutes=remaining_minutes)\n\n        if n >= 0:\n            while remaining_business_hours != timedelta(0):\n                business_hours_left = self._get_closing_time(self._prev_opening_time(other)) - other\n                if remaining_business_hours < business_hours_left:\n                    other += remaining_business_hours\n                    remaining_business_hours = timedelta(0)\n                else:\n                    remaining_business_hours -= business_hours_left\n                    other = self._next_opening_time(other + business_hours_left)\n        else:\n            while remaining_business_hours != timedelta(0):\n                business_hours_left = self._next_opening_time(other) - other\n                if remaining_business_hours >= business_hours_left:\n                    other += remaining_business_hours\n                else:\n                    remaining_business_hours = timedelta(0)\n                    other = self._get_closing_time(self._next_opening_time(other + business_hours_left - timedelta(seconds=1)))\n\n        return other\n    else:\n        raise ApplyTypeError(\"Only know how to combine business hour with datetime\")",
            "import_list": []
        }
    ]
}