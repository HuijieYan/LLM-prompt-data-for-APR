{
    "pandas": [
        {
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    # NOTE: This doesn't deal with hierarchical columns yet\n\n    index = data.index\n\n    clevels = [index.names.index(i) if i in index.names else i for i in clocs]\n\n    rlevels = [i for i in index.names if i not in clevels]\n\n    if len(rlevels) == 0:\n        # Everything is in clocs, so the dummy df has a regular index\n        dummy_index = pd.Index(index)\n    else:\n        dummy_index = pd.MultiIndex.from_arrays([index.get_level_values(x) for x in rlevels + [clevels]], names=rlevels + [\"__placeholder__\"])\n\n    if isinstance(data, pd.Series):\n        dummy = data.copy()\n        dummy.index = dummy_index\n\n        unstacked = dummy.unstack(\"__placeholder__\", fill_value=fill_value)\n    else:\n        dummy = data.copy()\n        dummy.index = dummy_index\n\n        unstacked = dummy.unstack(\"__placeholder__\", fill_value=fill_value)\n        if isinstance(unstacked, pd.Series):\n            levels = [index.get_level_values(z) if z in index.names else unstacked.index for z in clevels]\n        else:\n            levels = [unstacked[i] if i in unstacked.columns else index.get_level_values(i) for i in clevels]\n\n        new_columns = pd.MultiIndex.from_arrays([unstacked.columns.levels[0]] + levels,\n                                               names=[data.columns.name] + [index.names[i] for i in clevels])\n\n        unstacked.columns = new_columns\n\n    return unstacked",
            "import_list": []
        }
    ]
}