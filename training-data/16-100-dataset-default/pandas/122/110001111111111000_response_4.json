{
    "pandas": [
        {
            "bugID": 122,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 1386,
            "file_name": "pandas/core/internals/managers.py",
            "replace_code": "def equals(self, other):\n    self_block_placement = [block.mgr_locs for block in self.blocks]\n    other_block_placement = [block.mgr_locs for block in other.blocks]\n    \n    if len(self.axes) != len(other.axes):\n        return False\n    if not all(ax1.equals(ax2) for ax1, ax2 in zip(self.axes, other.axes)):\n        return False\n    \n    if len(self_block_placement) != len(other_block_placement):\n        return False\n    if not all(bp1.equals(bp2) for bp1, bp2 in zip(self_block_placement, other_block_placement)):\n        return False\n    \n    self._consolidate_inplace()\n    other._consolidate_inplace()\n    if len(self.blocks) != len(other.blocks):\n        return False\n\n    def canonicalize(block):\n        # return a tuple combining the type name and mgr_locs\n        return (str(block.dtype), block.mgr_locs)\n    \n    self_blocks = sorted(self.blocks, key=canonicalize)\n    other_blocks = sorted(other.blocks, key=canonicalize)\n    \n    return all(\n        block.equals(oblock) for block, oblock in zip(self_blocks, other_blocks)\n    )",
            "import_list": []
        }
    ]
}