{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    # Indices and codes for the data\n    index = data.index\n    codes = index.codes\n\n    # Convert tuple clocs to list of level numbers\n    cloc_levels = [index.names.index(c) if isinstance(c, tuple) else index.names.index((c,)) for c in clocs]\n\n    # Other levels that are not clocs\n    rloc_levels = [i for i in range(index.nlevels) if i not in cloc_levels]\n\n    # Prepare indices and codes for the unstacked dataframe\n    clevels = [index.levels[i] for i in cloc_levels]\n    ccodes = [codes[i] for i in cloc_levels]\n    cnames = [index.names[i] for i in cloc_levels]\n    rlevels = [index.levels[i] for i in rloc_levels]\n    rcodes = [codes[i] for i in rloc_levels]\n    rnames = [index.names[i] for i in rloc_levels]\n\n    shape = [len(x) for x in clevels]\n\n    # Guarantee the correctness of group_index, comp_ids and obs_ids in the subsequent function is called\n\n    # ...\n    # The rest of the function remains unchanged\n    # ...\n\n    return unstacked",
            "import_list": []
        }
    ]
}