{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, level, fill_value=None):\n    if not isinstance(level, (list, tuple, set)):\n        level = [level]\n\n    index = data.index\n    clocs = [index._get_level_number(i) for i in level]\n    rlocs = [i for i in range(index.nlevels) if i not in clocs]\n\n    if len(rlocs) == 0:\n        dummy_index = Index(data.index.get_level_values(clocs[0]).unique(), name='__placeholder__')\n    else:\n        rlevels = [index.levels[i] for i in rlocs]\n        rcodes = [index.codes[i] for i in rlocs]\n        rnames = [index.names[i] for i in rlocs]\n        obs_ids, comp_ids = data.index.get_level_values(clocs[0]).factorize()\n        dummy_index = MultiIndex(levels=rlevels + [obs_ids],\n                                    codes=rcodes + [comp_ids],\n                                    names=rnames + ['__placeholder__'],\n                                    verify_integrity=False)\n\n    if isinstance(data, Series):\n        dummy = data.copy()\n        dummy.index = dummy_index        \n        unstacked = dummy.unstack('__placeholder__', fill_value=fill_value)\n\n    else:\n        if isinstance(data.columns, MultiIndex):\n            result = data\n            for loc in clocs:\n                result = result.unstack(loc, fill_value=fill_value)\n\n        else:\n            dummy = data.copy()\n            dummy.index = dummy_index        \n            unstacked = dummy.unstack('__placeholder__', fill_value=fill_value)\n\n    return unstacked",
            "import_list": []
        }
    ]
}