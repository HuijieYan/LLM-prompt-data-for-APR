{
    "pandas": [
        {
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    # NOTE: This doesn't deal with hierarchical columns yet\n\n    index = data.index\n\n    rlocs = [c for c in range(index.nlevels) if c not in clocs]\n\n    clevels = [index.levels[c] for c in clocs]\n    ccodes = [index.codes[c] for c in clocs]\n    cnames = [index.names[c] for c in clocs]\n    rlevels = [index.levels[c] for c in rlocs]\n    rcodes = [index.codes[c] for c in rlocs]\n    rnames = [index.names[c] for c in rlocs]\n\n    shape = [len(x) for x in clevels]\n    group_index = get_group_index(ccodes, shape, sort=False, xnull=False)\n\n    comp_ids, obs_ids = compress_group_index(group_index, sort=False)\n    recons_codes = decons_obs_group_ids(comp_ids, obs_ids, shape, ccodes, xnull=False)\n\n    # Calculate the dummy index based on the non-stacked levels\n    dummy_index_levels = rlevels + [obs_ids]\n    dummy_index_codes = rcodes + [comp_ids]\n    dummy_index_names = rnames + [\"__placeholder__\"]\n\n    dummy_index = MultiIndex(\n        levels=dummy_index_levels,\n        codes=dummy_index_codes,\n        names=dummy_index_names,\n        verify_integrity=False,\n    )\n\n    dummy = data.copy()\n    dummy.index = dummy_index\n\n    unstacked = dummy.unstack(\"__placeholder__\", fill_value=fill_value)\n\n    # Update the levels and names for the columns\n    new_levels = clevels\n    new_names = cnames\n    new_codes = recons_codes\n\n    new_columns = MultiIndex(\n        levels=new_levels, codes=new_codes, names=new_names, verify_integrity=False\n    )\n\n    if isinstance(unstacked, Series):\n        unstacked.index = new_columns\n    else:\n        unstacked.columns = new_columns\n\n    return unstacked",
            "import_list": []
        }
    ]
}