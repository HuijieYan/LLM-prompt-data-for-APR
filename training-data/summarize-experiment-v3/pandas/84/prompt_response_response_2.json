{
    "pandas": [
        {
            "bugID": 84,
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    # validate the type of the MultiIndex data\n    if isinstance(data.columns, MultiIndex):\n        result = data\n        for val in clocs:\n            result = result.unstack(val, fill_value=fill_value)\n        return result\n    else:\n        # Extract the specified index levels and codes\n        index = data.index\n        clocs = [index._get_level_number(i) for i in clocs]\n        rlocs = [i for i in range(index.nlevels) if i not in clocs]\n\n        clevels = [index.levels[i] for i in clocs]\n        rcodes = [index.codes[i] for i in rlocs] + [range(len(index))]\n        rlevels = [index.levels[i] for i in rlocs] + [index.labels[i] for i in rlocs]\n        rnames = [index.names[i] for i in rlocs]\n\n        # Construct a MultiIndex for the dummy data\n        dummy_index = MultiIndex(\n            levels=clevels + [range(len(index))],\n            codes=rcodes + [list(range(len(index)))],\n            names=clocs + list(range(len(index))),\n            verify_integrity=False\n        )\n\n        # Create a dummy DataFrame with the modified index\n        dummy = data.copy()\n        dummy.index = dummy_index\n\n        # Unstack the dummy DataFrame\n        unstacked = dummy.unstack(clocs, fill_value=fill_value)\n        unstacked.index = unstacked.index.droplevel(0)\n        return unstacked",
            "import_list": []
        }
    ]
}