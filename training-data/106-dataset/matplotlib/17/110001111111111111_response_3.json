{
    "matplotlib": [
        {
            "bugID": 17,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 2758,
            "file_name": "lib/matplotlib/transforms.py",
            "replace_code": "def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n    # Ensure vmin and vmax are of type float\n    vmin = np.float64(vmin)\n    vmax = np.float64(vmax)\n\n    # Check for inf and NaN values\n    if not np.isfinite(vmin) or not np.isfinite(vmax):\n        return -expander, expander\n    \n    # Swap vmin and vmax if necessary\n    swapped = False\n    if vmax < vmin:\n        vmin, vmax = vmax, vmin\n        swapped = True\n    \n    # Calculate max absolute value\n    maxabsvalue = max(abs(vmin), abs(vmax))\n    \n    # Handle small interval and adjust endpoints\n    if vmax - vmin <= maxabsvalue * tiny:\n        if vmax == 0 and vmin == 0:\n            vmin = -expander\n            vmax = expander\n        else:\n            vmin -= expander * abs(vmin)\n            vmax += expander * abs(vmax)\n    \n    # Swap vmin and vmax if necessary and return\n    if swapped and not increasing:\n        vmin, vmax = vmax, vmin\n        \n    return vmin, vmax",
            "import_list": [
                "import numpy as np"
            ]
        }
    ]
}