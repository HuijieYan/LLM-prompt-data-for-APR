{
    "matplotlib": [
        {
            "bugID": 16,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 2779,
            "file_name": "lib/matplotlib/transforms.py",
            "replace_code": "def nonsingular(vmin, vmax, expander=0.001, tiny=1e-15, increasing=True):\n    if (not np.isfinite(float(vmin))) or (not np.isfinite(float(vmax))):\n        return -expander, expander\n\n    swapped = False\n    if float(vmax) < float(vmin):\n        vmin, vmax = vmax, vmin\n        swapped = True\n\n    maxabsvalue = max(abs(float(vmin)), abs(float(vmax)))\n    if maxabsvalue < (1e6 / tiny) * np.finfo(float).tiny:\n        vmin = -expander\n        vmax = expander\n\n    elif float(vmax) - float(vmin) <= maxabsvalue * tiny:\n        if float(vmax) == 0 and float(vmin) == 0:\n            vmin = -expander\n            vmax = expander\n        else:\n            vmin -= expander*abs(float(vmin))\n            vmax += expander*abs(float(vmax))\n\n    if swapped and not increasing:\n        vmin, vmax = vmax, vmin\n    return vmin, vmax",
            "import_list": [
                "import numpy as np"
            ]
        }
    ]
}