{
    "matplotlib": [
        {
            "bugID": 22,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 6338,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def hist(**args):\n    self = args.pop(\"self\")\n    x = args[\"x\"]\n    bins = args.get(\"bins\", None)\n    range = args.get(\"range\", None)\n    density = args.get(\"density\", False)\n    weights = args.get(\"weights\", None)\n    cumulative = args.get(\"cumulative\", False)\n    bottom = args.get(\"bottom\", None)\n    histtype = args.get(\"histtype\", 'bar')\n    align = args.get(\"align\", 'mid')\n    orientation = args.get(\"orientation\", 'vertical')\n    rwidth = args.get(\"rwidth\", None)\n    log = args.get(\"log\", False)\n    color = args.get(\"color\", None)\n    label = args.get(\"label\", None)\n    stacked = args.get(\"stacked\", False)\n    \n    # rest of the code\n    \n    return self, x, bins, cbook.silent_list('Patch', patches[0]) if nx == 1 else (self, x, cbook.silent_list('Lists of Patches', patches))",
            "import_list": []
        }
    ]
}