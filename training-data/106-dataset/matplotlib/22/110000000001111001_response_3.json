{
    "matplotlib": [
        {
            "bugID": 22,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 6338,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def hist(self, x, bins=None, range=None, density=False, weights=None,\n         cumulative=False, bottom=None, histtype='bar', align='mid',\n         orientation='vertical', rwidth=None, log=False,\n         color=None, label=None, stacked=False, **kwargs):\n\n    # Perform checks to validate string inputs and other parameters\n\n    # Validate the stacked parameter and set the correct calculation for bottom and boffset\n    if not stacked:\n        if bottom is None:\n            bottom = [0] * len(x)\n\n        totwidth = np.diff(bins)\n\n        if rwidth is not None:\n            dr = np.clip(rwidth, 0, 1)\n        else:\n            dr = 1.0\n\n        width = dr * totwidth / len(x)\n        dw = width\n\n        if align == 'mid':\n            boffset = 0.5 * totwidth\n        elif align == 'right':\n            boffset = totwidth\n\n        for m, c in zip(tops, color):\n            height = m\n            patch = self.bar(bins[:-1]+boffset, height, width,\n                             align='center', log=log,\n                             color=c, bottom=bottom)\n            patches.append(patch)\n            bottom = [b + h for b, h in zip(bottom, m)]\n            boffset += dw\n\n    else:\n        # Implementation for stacked histograms\n        pass",
            "imports": []
        }
    ]
}