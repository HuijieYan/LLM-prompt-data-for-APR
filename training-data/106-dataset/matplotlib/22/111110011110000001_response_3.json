{
    "matplotlib": [
        {
            "bugID": 22,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 6338,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def hist(self, x, bins=None, range=None, density=False, weights=None,\n         cumulative=False, bottom=None, histtype='bar', align='mid',\n         orientation='vertical', rwidth=None, log=False,\n         color=None, label=None, stacked=False, **kwargs):\n    \"\"\"\n    Plot a histogram of the input data.\n\n    This function computes and draws the histogram of the input data `x`.\n\n    Parameters:\n    x : (n,) array or sequence of (n,) arrays\n        Input values, can be a single array or a sequence of arrays.\n\n    bins : int or sequence or str, optional\n        Specification for the bins. An integer specifies the number of bins.\n\n    range : tuple or None, optional\n        The range of the bins.\n\n    density : bool, optional\n        If True, the histogram is normalized to form a probability density.\n\n    weights : (n,) array-like or None, optional\n        An array of weights, of the same shape as `x`.\n\n    cumulative : bool, optional\n        If True, a cumulative histogram is computed.\n\n    bottom : array-like, scalar, or None, optional\n        Location of the bottom baseline of each bin.\n\n    histtype : {'bar', 'barstacked', 'step',  'stepfilled'}, optional\n        The type of histogram to draw.\n\n    Other parameters: align, orientation, rwidth, log, color, label, stacked\n\n    Returns:\n    n : array or list of arrays\n        The values of the histogram bins.\n\n    bins : array\n        The edges of the bins.\n\n    patches : list or list of lists\n        List of individual patches used to create the histogram, or list of such lists if multiple input datasets.\n    \"\"\"\n\n    # Correct the processing of date data and bins preprocessing\n    bins = bins_preprocess(bins)\n\n    # ... omitted code ...\n\n    return tops, bins, cbook.silent_list('Lists of Patches', patches)",
            "import_list": []
        }
    ]
}