{
    "luigi": [
        {
            "bugID": 33,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 313,
            "file_name": "luigi/task.py",
            "replace_code": "def get_param_values(cls, params, args, kwargs):\n\n    result = {}\n    params_dict = dict(params)\n    \n    task_name = cls.task_family\n    \n    for param_name, param_obj in params:\n        if param_name in kwargs:\n            result[param_name] = kwargs[param_name]\n        elif param_name in params_dict:\n            if args:\n                result[param_name] = args[0]\n                args = args[1:]\n            else:\n                if not param_obj.has_task_value(task_name, param_name):\n                    raise parameter.MissingParameterException(\n                        \"%s: requires the '%s' parameter to be set\" % (task_name, param_name))\n                result[param_name] = param_obj.task_value(task_name, param_name)\n        else:\n            raise parameter.UnknownParameterException('%s: unknown parameter %s' % (task_name, param_name))\n    \n    return [(param_name, list_to_tuple(result[param_name])) for param_name, _ in params]"
        }
    ]
}