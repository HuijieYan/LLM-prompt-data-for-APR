{
    "luigi": [
        {
            "bugID": 19,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 393,
            "file_name": "luigi/scheduler.py",
            "replace_code": "def set_status(self, task, new_status, config=None):\n    import time\n    if new_status == \"FAILED\":\n        assert config is not None\n    \n    if new_status == \"DISABLED\" and task.status == \"RUNNING\":\n        return\n    \n    if task.status == \"DISABLED\":\n        if new_status == \"DONE\":\n            self.re_enable(task)\n    \n        # update status after elapsed time\n        elif task.scheduler_disable_time is not None and time.time() - task.scheduler_disable_time > config.disable_persist:\n            new_status = \"FAILED\"\n            task.scheduler_disable_time = None\n    \n    if new_status == \"FAILED\" and task.can_disable():\n        task.add_failure()\n        if task.has_excessive_failures():\n            task.scheduler_disable_time = time.time()\n            new_status = \"DISABLED\"\n            notifications.send_error_email(\n                f'Luigi Scheduler: DISABLED {task}',\n                f'{task} failed {config.disable_failures} times in the last {config.disable_window} seconds, so it is being '\n                f'disabled for {config.disable_persist} seconds'\n            )\n        \n            task.status = new_status\n            self._status_tasks[task.status].pop(task.id)\n            self._status_tasks[new_status][task.id] = task\n    elif new_status == \"DISABLED\":\n        task.scheduler_disable_time = None\n    \n    self._status_tasks[task.status].pop(task.id)\n    self._status_tasks[new_status][task.id] = task\n    task.status = new_status"
        }
    ]
}