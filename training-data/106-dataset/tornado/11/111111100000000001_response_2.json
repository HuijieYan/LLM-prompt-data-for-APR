{
    "tornado": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 525,
            "file_name": "tornado/http1connection.py",
            "replace_code": "def _read_body(self, code, headers, delegate):\n        if \"Content-Length\" in headers:\n            content_length = int(headers[\"Content-Length\"])  # Attempt to get content length\n\n            if content_length > self._max_body_size:\n                raise httputil.HTTPInputError(\"Content-Length too long\")\n\n            if code == 204 and (content_length != 0 or \"Transfer-Encoding\" in headers):\n                raise httputil.HTTPInputError(\"Response with code %d should not have body\" % code)\n\n            return self._read_fixed_body(content_length, delegate)\n\n        elif \"Transfer-Encoding\" in headers:\n            if code == 204 and headers['Transfer-Encoding'] != 'chunked':\n                raise httputil.HTTPInputError(\"Response with code %d should not have body\" % code)\n\n            if headers[\"Transfer-Encoding\"] == \"chunked\":\n                return self._read_chunked_body(delegate)\n            else:\n                raise httputil.HTTPInputError(\"Invalid Transfer-Encoding\")\n\n        else:\n            if self.is_client:\n                return self._read_body_until_close(delegate)\n            return None",
            "import_list": []
        }
    ]
}