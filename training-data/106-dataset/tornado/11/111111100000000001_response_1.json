{
    "tornado": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 525,
            "file_name": "tornado/http1connection.py",
            "replace_code": "def _read_body(self, code, headers, delegate):\n    if \"Transfer-Encoding\" in headers:\n        if headers[\"Transfer-Encoding\"].lower() == \"chunked\":\n            return self._read_chunked_body(delegate)\n        else:\n            raise httputil.HTTPInputError(\n                \"Unsupported Transfer-Encoding: %s\" % headers[\"Transfer-Encoding\"])\n    elif \"Content-Length\" in headers:\n        try:\n            content_length = int(headers[\"Content-Length\"])\n        except ValueError:\n            raise httputil.HTTPInputError(\n                \"Invalid Content-Length header: %s\" % headers[\"Content-Length\"])\n        \n        if content_length > self._max_body_size:\n            raise httputil.HTTPInputError(\"Content-Length too long\")\n        \n        if code == 204 and content_length != 0:\n            raise httputil.HTTPInputError(\n                \"Response with code 204 should not have body\")\n        \n        return self._read_fixed_body(content_length, delegate)\n    else:\n        # If neither Transfer-Encoding nor Content-Length is present, read until close\n        if self.is_client:\n            return self._read_body_until_close(delegate)\n        return None",
            "imports": []
        }
    ]
}