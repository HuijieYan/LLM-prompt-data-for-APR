{
    "keras": [
        {
            "bugID": 43,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 7,
            "file_name": "keras/utils/np_utils.py",
            "replace_code": "def to_categorical(y, num_classes=None):\n    y = np.array(y, dtype='int')\n    input_shape = y.shape\n    \n    if len(input_shape) > 2:\n        y = y.reshape(-1, y.shape[-1])\n    \n    if not num_classes:\n        num_classes = np.max(y) + 1\n    \n    n = y.shape[0]\n    categorical = np.zeros((n, num_classes))\n    \n    for i in range(n):\n        categorical[i] = np.eye(num_classes)[y[i]]\n    \n    return_categorical = categorical.reshape(input_shape + (num_classes,))\n    \n    return return_categorical",
            "imports": [
                "import numpy as np"
            ]
        }
    ]
}