{
    "keras": [
        {
            "bugID": 22,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 33,
            "file_name": "keras/engine/input_layer.py",
            "replace_code": "def __init__(self, input_shape=None, batch_size=None, name=None, dtype=None, sparse=False):\n    if name is None:\n        name = 'input_' + str(K.get_uid('input'))\n        \n    if input_shape is not None and batch_size is not None:\n        raise ValueError('Only provide the input_shape OR batch_size argument to InputLayer, not both at the same time.')\n    \n    if input_shape is not None:\n        batch_input_shape = (batch_size,) + tuple(input_shape)\n    else:\n        batch_input_shape = (batch_size,) + batch_input_shape\n    \n    dtype = dtype or K.floatx()\n    \n    input_tensor = K.placeholder(shape=batch_input_shape, dtype=dtype, sparse=sparse, name=name)\n    \n    self.is_placeholder = True\n    self.input_spec = InputSpec(dtype=dtype, shape=batch_input_shape)\n    \n    super(InputLayer, self).__init__(dtype=dtype, name=name)\n    \n    self.built = True\n    self.batch_input_shape = batch_input_shape\n    self.dtype = dtype",
            "import_list": []
        }
    ]
}