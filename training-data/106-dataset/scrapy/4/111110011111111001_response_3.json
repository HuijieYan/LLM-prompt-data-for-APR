{
    "scrapy": [
        {
            "bugID": 4,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 71,
            "file_name": "scrapy/contracts/__init__.py",
            "replace_code": "def _clean_req(self, request, method, results):\n\n        def cb_wrapper(response):\n            try:\n                output = request.callback(response)\n                output = list(iterate_spider_output(output))\n            except Exception as e:\n                case = f'_create_testcase(method, \"callback\")'\n                results.addError(case, sys.exc_info())\n\n        def eb_wrapper(failure):\n            case = f'_create_testcase({method}, \"errback\")'\n            exc_type = type(failure.value)\n            exc_value = failure.value\n            exc_traceback = failure.getTracebackObject()\n            try:\n                exc_traceback = exc_value.__traceback__\n            except AttributeError:\n                exc_traceback = None\n            exc_info = (exc_type, exc_value, exc_traceback)\n            results.addError(case, exc_info)\n\n        request.callback = cb_wrapper\n        request.errback = eb_wrapper",
            "import_list": [
                "from functools import wraps",
                "import sys",
                "from unittest.runner import TextTestResult",
                "from scrapy.contracts import HttpError, failure",
                "from scrapy import Request"
            ]
        }
    ]
}