{
    "scrapy": [
        {
            "bugID": 27,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 56,
            "file_name": "scrapy/downloadermiddlewares/redirect.py",
            "replace_code": "def process_response(self, request, response, spider):\n    if request.meta.get('dont_redirect', False):\n        return response\n    \n    if not isinstance(spider.handle_httpstatus_list, list):\n        handle_httpstatus_list = []\n    else:\n        handle_httpstatus_list = spider.handle_httpstatus_list\n    \n    if response.status in handle_httpstatus_list:\n        return response\n    \n    if request.method == 'HEAD':\n        # handle redirection for HEAD request\n        if response.status in [301, 302, 303, 307] and 'Location' in response.headers:\n            redirected_url = urljoin(request.url, response.headers['location'])\n            redirected = request.replace(url=redirected_url)\n            return self._redirect(redirected, request, spider, response.status)\n        else:\n            return response\n    \n    elif response.status in [302, 303] and 'Location' in response.headers:\n        # handle redirection for response status 302 or 303\n        redirected_url = urljoin(request.url, response.headers['location'])\n        redirected = self._redirect_request_using_get(request, redirected_url)\n        return self._redirect(redirected, request, spider, response.status)\n    \n    elif response.status in [301, 307] and 'Location' in response.headers:\n        # handle redirection for response status 301 or 307\n        redirected_url = urljoin(request.url, response.headers['location'])\n        redirected = request.replace(url=redirected_url)\n        return self._redirect(redirected, request, spider, response.status)\n    \n    return response",
            "import_list": []
        }
    ]
}