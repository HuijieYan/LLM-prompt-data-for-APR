{
    "scrapy": [
        {
            "bugID": 20,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 33,
            "file_name": "scrapy/spiders/sitemap.py",
            "replace_code": "def _parse_sitemap(self, response):\n\n    body = self._get_sitemap_body(response)\n    if body is None:\n        logger.warning(\"Ignoring invalid sitemap: %(response)s\",\n                       {'response': response}, extra={'spider': self})\n        return\n    \n    s = Sitemap(body)\n    if s.type == 'sitemapindex':\n        for loc in iterloc(s, self.sitemap_alternate_links):\n            if any(x.search(loc) for x in self._follow):\n                yield Request(loc, callback=self._parse_sitemap)\n    elif s.type == 'urlset':\n        for loc in iterloc(s):\n            for r, c in self._cbs:\n                if r.search(loc):\n                    yield Request(loc, callback=c)\n                    break"
        }
    ]
}