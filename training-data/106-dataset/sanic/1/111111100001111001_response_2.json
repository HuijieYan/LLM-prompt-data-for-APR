{
    "sanic": [
        {
            "bugID": 1,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 642,
            "file_name": "sanic/app.py",
            "replace_code": "def register_named_middleware(\n    self, middleware, route_names, attach_to=\"request\"\n):\n    # Function to handle the addition of middleware\n    def add_middleware(route_names_key, middleware_key, attach_to_key):\n        if attach_to_key == \"request\":\n            if route_names_key not in self.named_request_middleware:\n                self.named_request_middleware[route_names_key] = deque()\n            if middleware_key not in self.named_request_middleware[route_names_key]:\n                self.named_request_middleware[route_names_key].append(middleware_key)\n        if attach_to_key == \"response\":\n            if route_names_key not in self.named_response_middleware:\n                self.named_response_middleware[route_names_key] = deque()\n            if middleware_key not in self.named_response_middleware[route_names_key]:\n                self.named_response_middleware[route_names_key].append(middleware_key)\n\n    for rn in route_names:\n        add_middleware(rn, middleware, attach_to)",
            "import_list": []
        }
    ]
}