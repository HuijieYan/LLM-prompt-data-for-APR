{
    "pandas": [
        {
            "bugID": 117,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 160,
            "file_name": "pandas/core/dtypes/missing.py",
            "replace_code": "def _isna_old(obj):\n    \"\"\"\n    Detect missing values, treating None, NaN, INF, -INF as null.\n\n    Parameters\n    ----------\n    obj: ndarray or object value\n\n    Returns\n    -------\n    boolean ndarray or boolean\n    \"\"\"\n    if np.isscalar(obj) or obj is None:\n        return libmissing.checknull_old(obj)\n    elif isinstance(obj, pd.MultiIndex):\n        raise NotImplementedError(\"isna is not defined for MultiIndex\")\n    elif not isinstance(obj, pd.Series) and isinstance(obj, (np.ndarray, pd.Index)) or np.asarray(obj).dtype != \"O\":\n        return _isna_ndarraylike_old(obj)\n    else:\n        if is_scalar(obj) or pd.api.types.is_list_like(obj) and not pd.api.types.is_categorical(obj):\n            return obj is None\n        elif isinstance(obj, pd.core.arrays.string_.StringArray) or pd.api.types.is_list_like(obj) and pd.api.types.is_object_dtype(obj):\n            result = np.asarray(obj)\n            return _isna_ndarraylike_old(result)\n        else:\n            return obj.isna()",
            "imports": []
        }
    ]
}