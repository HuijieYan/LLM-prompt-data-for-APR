{
    "pandas": [
        {
            "bugID": 127,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 10436,
            "file_name": "pandas/core/generic.py",
            "replace_code": "def pct_change(self, periods=1, fill_method=\"pad\", limit=None, freq=None, **kwargs):\n    \"\"\"\n    Percent change over given number of periods.\n    Parameters\n    ----------\n    periods : int\n        The number of periods to shift for forming percent change.\n    fill_method : str, default 'pad'\n        The method to use when forward filling NaNs (\u2018pad\u2019).\n    limit : int, default None\n        The number of NaNs to fill before stopping, aka \u2018limit\u2019\n        direction.\n    freq : DateOffset, timedelta, or offset alias string, default None\n        Increment to use from time series API (e.g. 'M' or BDay()).\n    **kwargs\n        Additional keyword arguments passed as-is to the DatetimeIndex\n        or PeriodIndex method.\n    Returns\n    -------\n    pd.Series\n        Percentage change from the previous element.\n    \"\"\"\n    axis = self._get_axis_number(kwargs.pop(\"axis\", self._stat_axis_name))\n    if fill_method is None:\n        data = self\n    else:\n        data = self.fillna(value=None, method=fill_method, axis=axis, inplace=False, limit=limit, downcast=None)\n\n\n    rs = data.div(data.shift(periods=periods, freq=freq, axis=axis, fill_value=None)) - 1\n    rs = rs.reindex_like(data, method=None, copy=True, limit=None, tolerance=None)\n    if freq is None:\n        mask = data.isna()\n        rs = rs.mask(mask, other=np.nan, inplace=False, axis=None, level=None, errors='raise', try_cast=False)\n    return rs",
            "import_list": []
        }
    ]
}