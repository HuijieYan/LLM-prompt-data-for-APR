{
    "pandas": [
        {
            "bugID": 127,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 10436,
            "file_name": "pandas/core/generic.py",
            "replace_code": "def pct_change(self, periods=1, fill_method=\"pad\", limit=None, freq=None, **kwargs):\n    \"\"\"\n    Percentage change between the current and a prior element.\n    Computes percentage change between the current and a prior element.\n\n    Parameters\n    ----------\n    periods : int, default 1\n        Periods to shift for forming percent change.\n    fill_method : str, default 'pad'\n        How to handle NAs before computing percent changes.\n    limit : int, default None\n        The number of consecutive NAs to fill before stopping.\n    freq : DateOffset, Timedelta or offset alias string\n        Increment to use from time series like data to adjust the periods.\n    **kwargs\n        Additional keyword arguments are not used at the moment.\n\n    Returns\n    -------\n    Series\n        The percent changes.\n\n    See Also\n    --------\n    Series.pct_change : Percentage change between the current and a prior element.\n    \n    Notes\n    -----\n    By default, the percentage change is calculated over the previous row.\n    If freq is specified, the percentage change is calculated for the same period of the next or\n    previous freq.\n    \"\"\"\n    axis = self._get_axis_number(self._stat_axis_name)\n    if fill_method is None:\n        data = self\n    else:\n        data = self.fillna(method=fill_method, limit=limit, axis=axis)\n\n    rs = data.div(data.shift(periods=periods, freq=freq, axis=axis)) - 1\n    rs = rs.reindex_like(data)\n    if freq is None:\n        mask = rs.isna()\n        rs = rs.mask(mask, np.nan)\n    return rs",
            "imports": []
        }
    ]
}