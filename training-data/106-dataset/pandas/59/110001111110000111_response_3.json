{
    "pandas": [
        {
            "bugID": 59,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 1779,
            "file_name": "pandas/core/window/rolling.py",
            "replace_code": "def corr(self, other=None, pairwise=None, **kwargs):\n    if other is None:\n        other = self._selected_obj\n        pairwise = True if pairwise is None else pairwise\n\n    other = self._shallow_copy(other)\n    window = self._get_window(other)\n\n    a = self._selected_obj.rolling(window=window, min_periods=self.min_periods, center=self.center)\n    b = other.rolling(window=window, min_periods=self.min_periods, center=self.center)\n\n    def _get_corr(a, b):\n        cov_values = a.cov(b, **kwargs)\n        std_product = a.std(**kwargs) * b.std(**kwargs)\n        return cov_values / std_product\n\n    return _flex_binary_moment(a, b, _get_corr, pairwise=bool(pairwise))",
            "imports": []
        }
    ]
}