{
    "pandas": [
        {
            "bugID": 59,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 1779,
            "file_name": "pandas/core/window/rolling.py",
            "replace_code": "def corr(self, other=None, pairwise=None, **kwargs):\n        if other is None:\n            other = self._selected_obj\n            # only default unset\n            pairwise = True if pairwise is None else pairwise\n        other = self._shallow_copy(other)\n        window = self._get_window(other)\n    \n        def _get_corr(a, b, window=window, min_periods=self.min_periods, center=self.center):\n            a_rolling = a.rolling(window=window, min_periods=min_periods, center=center)\n            b_rolling = b.rolling(window=window, min_periods=min_periods, center=center)\n    \n            return a_rolling.cov(b_rolling, **kwargs) / (a_rolling.std(ddof=1, **kwargs) * b_rolling.std(ddof=1, **kwargs))\n    \n        return _flex_binary_moment(\n            self._selected_obj, other._selected_obj, _get_corr, pairwise=bool(pairwise)\n        )",
            "imports": []
        }
    ]
}