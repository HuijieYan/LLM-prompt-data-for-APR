{
    "pandas": [
        {
            "bugID": 28,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 2273,
            "file_name": "pandas/core/strings.py",
            "replace_code": "def _get_series_list(self, others):\n    \"\"\"\n    Auxiliary function for :meth:`str.cat`. Turn potentially mixed input\n    into a list of Series (elements without an index must match the length\n    of the calling Series/Index).\n\n    Parameters\n    ----------\n    others : Series, DataFrame, np.ndarray, list-like or list-like of\n        Objects that are either Series, Index or np.ndarray (1-dim).\n\n    Returns\n    -------\n    list of Series\n        Others transformed into list of Series.\n    \"\"\"\n    from pandas import Series, DataFrame\n    from pandas.api.types import is_list_like, is_string_dtype\n\n    if is_string_dtype(self._orig.dtype):\n        idx = None\n    else:\n        idx = self._orig.index\n\n    if isinstance(others, (Series, DataFrame)):\n        return [others]\n    elif isinstance(others, (pd.Index, np.ndarray)) and not is_list_like(others):\n        if isinstance(others, np.ndarray):\n            others = pd.Index(others)\n        return [Series(others, index=idx)]\n    elif is_list_like(others, allow_sets=False):\n        los = []\n        for x in others:\n            if is_string_dtype(x):\n                raise TypeError(\"others must be Series, Index, DataFrame, np.ndarray or list-like\")\n            if isinstance(x, (Series, pd.Index, np.ndarray)):\n                los.append(x)\n            else:\n                los.append(Series(x, index=idx))\n        return los\n    else:\n        raise TypeError(\"others must be Series, Index, DataFrame, np.ndarrary or list-like\")",
            "imports": [
                "from pandas import Series, DataFrame",
                "from pandas.api.types import is_list_like, is_string_dtype"
            ]
        }
    ]
}