{
    "pandas": [
        {
            "bugID": 28,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 2273,
            "file_name": "pandas/core/strings.py",
            "replace_code": "def _get_series_list(self, others):\n    from pandas import Series, DataFrame, Index\n\n    idx = self._orig.index\n\n    if isinstance(others, (Index, Series)):\n        return [others]\n    elif isinstance(others, DataFrame):\n        return [others[x] for x in others]\n\n    if hasattr(others, 'values'):\n        others = others.values\n\n    # in case of list-like `others`, all elements must be\n    # either Series/Index/np.ndarray (1-dim)...\n    if all(\n        isinstance(x, (Series, Index))\n        or (isinstance(x, np.ndarray) and x.ndim == 1)\n        for x in others\n    ):\n        return [Series(x, index=idx) if isinstance(x, (Index, Series)) else Series(x) for x in others]\n    # ... or just strings\n    elif all(not is_list_like(x) for x in others):\n        return [Series(others, index=idx)]\n\n    raise TypeError(\n        \"others must be Series, Index, DataFrame, np.ndarray or list-like\"\n    )",
            "import_list": [
                "from pandas import Series, DataFrame, Index"
            ]
        }
    ]
}