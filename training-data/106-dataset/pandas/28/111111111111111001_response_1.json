{
    "pandas": [
        {
            "bugID": 28,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 2273,
            "file_name": "pandas/core/strings.py",
            "replace_code": "def _get_series_list(self, others):\n    from pandas import Series, DataFrame\n\n    # self._orig is either Series or Index\n    idx = self._orig if isinstance(self._orig, ABCIndexClass) else self._orig.index\n\n    series_list = []\n\n    if isinstance(others, ABCSeries):\n        series_list.append(others)\n    elif isinstance(others, ABCIndexClass):\n        series_list.append(Series(others._values, index=others))\n    elif isinstance(others, ABCDataFrame):\n        for col in others:\n            series_list.append(others[col])\n    elif isinstance(others, np.ndarray) and others.ndim == 2:\n        others_df = DataFrame(others, index=idx)\n        for col in others_df:\n            series_list.append(others_df[col])\n    elif is_list_like(others, allow_sets=False):\n        for obj in others:\n            if isinstance(obj, (ABCSeries, ABCIndexClass)):\n                series_list.append(obj)\n            elif isinstance(obj, np.ndarray) and obj.ndim == 1:\n                series_list.append(Series(obj, index=idx))\n            elif not is_list_like(obj):\n                series_list.append(Series(obj, index=idx))\n            else:\n                raise TypeError(\"Invalid type found in others\")\n    else:\n        raise TypeError(\"Invalid type for others\")\n\n    return series_list",
            "imports": [
                "from pandas import Series, DataFrame"
            ]
        }
    ]
}