{
    "pandas": [
        {
            "bugID": 28,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 2273,
            "file_name": "pandas/core/strings.py",
            "replace_code": "def _get_series_list(self, others):\n        from pandas import Series, DataFrame\n        \n        idx = self._orig if isinstance(self._orig, ABCIndexClass) else self._orig.index\n        series_list = []\n        \n        if isinstance(others, ABCSeries):\n            series_list.append(others)\n        elif isinstance(others, ABCDataFrame):\n            for column in others:\n                series_list.append(others[column])\n        elif isinstance(others, np.ndarray) and others.ndim == 2:\n            df = DataFrame(others, index=idx)\n            for column in df:\n                series_list.append(df[column])\n        elif is_list_like(others, allow_sets=False):\n            for item in others:\n                if isinstance(item, (ABCSeries, ABCIndexClass)) or (isinstance(item, np.ndarray) and item.ndim == 1):\n                    series_list.append(Series(item, index=idx))\n                elif not is_list_like(item):\n                    series_list.append(Series(item, index=idx))\n                else:\n                    raise TypeError(\"others must be Series, Index, DataFrame, np.ndarray, or list-like containing only valid types\")\n        else:\n            raise TypeError(\"others must be Series, Index, DataFrame, np.ndarray, or list-like containing only valid types\")\n        \n        return series_list",
            "imports": [
                "from pandas import Series, DataFrame"
            ]
        }
    ]
}