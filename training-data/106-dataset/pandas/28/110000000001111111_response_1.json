{
    "pandas": [
        {
            "bugID": 28,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 2273,
            "file_name": "pandas/core/strings.py",
            "replace_code": "def _get_series_list(self, others):\n    from pandas import Series, DataFrame, Index\n\n    if isinstance(others, Index):\n        return [Series(others._data, index=others)]\n    elif isinstance(others, (Series, DataFrame)):\n        return [others]\n    elif isinstance(others, np.ndarray) and others.ndim == 2:\n        others = DataFrame(others)\n        return [others[x] for x in others]\n    elif is_list_like(others, allow_sets=False):\n        others = list(others)\n        if all(isinstance(x, (Series, Index, np.ndarray)) and (getattr(x, 'ndim', 1) == 1) for x in others):\n            return [Series(x, index=self._orig.index) if not isinstance(x, Series) else x for x in others]\n        elif all(isinstance(x, str) for x in others):\n            return [Series(others, index=self._orig.index)]\n    raise TypeError(\n        \"others must be Series, Index, DataFrame, np.ndarray \"\n        \"or list-like (either containing only strings or \"\n        \"containing only objects of type Series/Index/\"\n        \"np.ndarray[1-dim])\"\n    )",
            "import_list": [
                "from pandas import Series, DataFrame, Index"
            ]
        }
    ]
}