{
    "pandas": [
        {
            "bugID": 78,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 7903,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def _reduce(\n    self, op, name, axis=0, skipna=True, numeric_only=None, filter_type=None, **kwds\n):\n    if axis is None and filter_type == \"bool\":\n        labels = None\n        constructor = None\n    else:\n        axis = self._get_axis_number(axis)\n        labels = self._get_agg_axis(axis)\n        constructor = self._constructor\n\n    def _get_data(axis_matters):\n        if filter_type is None or filter_type == \"numeric\":\n            data = self._get_numeric_data()\n        elif filter_type == \"bool\":\n            if axis_matters:\n                data = self._get_bool_data() if axis == 0 else self\n            else:\n                data = self._get_bool_data()\n        else:  # pragma: no cover\n            msg = (\n                f\"Generating numeric_only data with filter_type {filter_type} \"\n                \"not supported.\"\n            )\n            raise NotImplementedError(msg)\n        return data\n\n    if constructor is None:\n        result = Series(op(self, axis=axis, skipna=skipna, **kwds), index=labels)\n    else:\n        result = constructor(op(self, axis=axis, skipna=skipna, **kwds), index=labels)\n    return result",
            "imports": []
        }
    ]
}