{
    "pandas": [
        {
            "bugID": 78,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 7903,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def _reduce(self, op, name, axis=0, skipna=True, numeric_only=None, filter_type=None, **kwds):\n    axis = self._get_axis_number(axis)\n    labels = self._get_agg_axis(axis)\n    constructor = self._constructor\n\n    out_dtype = \"bool\" if filter_type == \"bool\" else None\n    df = self\n    result = df._data.reduce(op, axis=axis, skipna=skipna, **kwds)\n\n    if numeric_only is True or axis == 1:\n        df = self._get_numeric_data()\n        if axis == 1:\n            df = df.T\n            axis = 0\n        out = df._constructor_sliced(result, index=labels, dtype=out_dtype)\n        return out\n\n    values = self.values\n    result = _maybe_downcast_to_dtype(result, values)\n    result = Series(result, index=labels)\n    return result",
            "imports": [
                "import numpy as np",
                "import pandas as pd",
                "from pandas.core.tools.numeric import _maybe_downcast_to_dtype"
            ]
        }
    ]
}