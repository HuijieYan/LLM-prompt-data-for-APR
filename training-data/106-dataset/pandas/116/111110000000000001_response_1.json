{
    "pandas": [
        {
            "bugID": 116,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 924,
            "file_name": "pandas/core/reshape/merge.py",
            "replace_code": "def _get_merge_keys(self):\n        \"\"\"\n        Fetches the merge keys for the left and right DataFrames or Series.\n        \n        Returns\n        -------\n        left_keys : list\n            List of merge keys for the left DataFrame/Series.\n        right_keys : list\n            List of merge keys for the right DataFrame/Series.\n        join_names : list\n            List of join names for the merge operation.\n        \"\"\"\n        left_keys = []\n        right_keys = []\n        join_names = []\n        \n        left, right = self.left, self.right\n        \n        if self._has_left_and_right_on():\n            left_keys, right_keys, join_names = self._merge_on_left_and_right_keys()\n        elif self._has_only_left_on():\n            left_keys = self._merge_on_left_keys()\n            right_keys = self._get_right_index_values()\n            join_names = self._get_join_names(self.left_on)\n        elif self._has_only_right_on():\n            right_keys = self._merge_on_right_keys()\n            left_keys = self._get_left_index_values()\n            join_names = self._get_join_names(self.right_on)\n        \n        self._handle_dropped_labels_or_levels()\n        \n        return left_keys, right_keys, join_names",
            "imports": []
        }
    ]
}