{
    "pandas": [
        {
            "bugID": 49,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 726,
            "file_name": "pandas/core/strings.py",
            "replace_code": "def str_repeat(arr, repeats):\n    \"\"\"\n    Duplicate each string in the Series or Index.\n\n    Parameters\n    ----------\n    repeats : int or sequence of int\n        Same value for all (int) or different value per (sequence).\n\n    Returns\n    -------\n    Series or Index of object\n        Series or Index of repeated string objects specified by\n        input parameter repeats.\n\n    Examples\n    --------\n    >>> s = pd.Series(['a', 'b', 'c'])\n    >>> s\n    0    a\n    1    b\n    2    c\n    dtype: object\n\n    Single int repeats string in Series\n\n    >>> s.str.repeat(repeats=2)\n    0    aa\n    1    bb\n    2    cc\n    dtype: object\n\n    Sequence of int repeats corresponding string in Series\n\n    >>> s.str.repeat(repeats=[1, 2, 3])\n    0      a\n    1     bb\n    2    ccc\n    dtype: object\n    \"\"\"\n    com = ensure_str(arr)\n    repeats = to_numeric(repeats, errors='coerce')\n    if is_scalar(repeats):\n        return arr._str_repeat(repeats)\n    else:\n        def rep_func(x, r):\n            if x is None or np.isnan(r):  # handle NA values\n                return None\n            return str.__mul__(x, int(r))\n\n        return arr._str_map(rep_func, na_action='ignore')",
            "imports": [
                "import pandas as pd",
                "import numpy as np",
                "from pandas.core.arrays.string_ import StringDtype",
                "from pandas.core.dtypes.common import is_scalar",
                "from pandas.core.strings.accessor import StringMethods",
                "from pandas.core.tools.numeric import to_numeric",
                "from pandas.core.algorithms import factorize",
                "from pandas.core import algorithms",
                "from pandas.core.arrays._mixins import NDArrayBackedExtensionArray",
                "from pandas.core.arrays.base import ExtensionArray",
                "from pandas.core.arrays.string_ import StringArray, StringDtype",
                "from pandas.core.dtypes.common import ensure_str",
                "from pandas.core.indexers import check_array_indexer",
                "from pandas.core.ops import roperator, should_extension_dispatch_to_index",
                "from pandas.api.types import is_list_like, is_scalar"
            ]
        }
    ]
}