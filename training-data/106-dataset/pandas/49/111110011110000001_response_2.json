{
    "pandas": [
        {
            "bugID": 49,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 726,
            "file_name": "pandas/core/strings.py",
            "replace_code": "def str_repeat(arr, repeats):\n    if is_scalar(repeats):\n        def scalar_rep(x):\n            if x is None:\n                return x\n            if is_string_dtype(x):\n                return x * repeats\n            else:\n                return str(x) * repeats\n\n        return _na_map(scalar_rep, arr, dtype=str)\n    else:\n        def rep(x, r):\n            if x is None:\n                return x\n            if is_string_dtype(x):\n                return x * r\n            else:\n                return str(x) * r\n\n        repeats = np.asarray(repeats, dtype=object)\n        result = libops.vec_binop(np.asarray(arr), repeats, rep)\n        return result",
            "import_list": [
                "import pandas as pd",
                "import numpy as np",
                "from pandas import Series",
                "from pandas.core.strings import libops",
                "from pandas.core.dtypes.common import is_scalar, is_string_dtype",
                "from pandas.core.dtypes.dtypes import StringDtype",
                "from pandas.core.arrays.string_ import StringArray"
            ]
        }
    ]
}