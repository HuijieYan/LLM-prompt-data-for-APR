{
    "pandas": [
        {
            "bugID": 49,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 726,
            "file_name": "pandas/core/strings.py",
            "replace_code": "def str_repeat(arr: ArrayLike, repeats):\n    \"\"\"\n    Duplicate each string in the Series or Index.\n\n    Parameters\n    ----------\n    repeats : int or sequence of int\n        Same value for all (int) or different value per (sequence).\n\n    Returns\n    -------\n    Series or Index of object\n        Series or Index of repeated string objects specified by\n        input parameter repeats.\n    \"\"\"\n    if is_string_dtype(arr):\n        arr = StringMethods(arr)._to_str()\n    if is_scalar(repeats):\n        return StringMethods(arr).repeat(repeats)\n    else:\n        dtype = arr.dtype\n        arr = arr.astype(object)\n        for i in range(len(repeats)):\n            if pd.isna(repeats[i]):\n                continue\n            arr[i] = StringMethods(arr[i]).repeat(repeats[i])\n        return arr.astype(dtype)",
            "imports": [
                "import pandas as pd",
                "import numpy as np",
                "from pandas.api.types import is_scalar",
                "from pandas.core.dtypes.common import is_string_dtype",
                "from pandas.core.arrays.string_ import StringDtype",
                "from pandas.core.strings import StringMethods",
                "from pandas.core.frame import DataFrame",
                "from pandas import Series",
                "from pandas._typing import ArrayLike"
            ]
        }
    ]
}