{
    "pandas": [
        {
            "bugID": 76,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 886,
            "file_name": "pandas/io/json/_json.py",
            "replace_code": "def _try_convert_data(self, name, data, use_dtypes=True, convert_dates=True):\n    if use_dtypes:\n        if convert_dates:\n            new_data, result = self._try_convert_to_date(data)\n            if result:\n                return new_data, True\n            \n        result = False\n        \n        if data.dtype == \"object\":\n            # try to convert to float\n            try:\n                new_data = pd.to_numeric(data, errors='coerce')\n                return new_data, True\n            except (TypeError, ValueError):\n                pass\n        \n        if data.dtype.kind == \"f\":\n            if data.dtype != \"float64\":\n                # coerce floats to 64\n                try:\n                    new_data = data.astype(\"float64\")\n                    result = True\n                    return new_data, result\n                except (TypeError, ValueError):\n                    pass\n        \n        if len(data) and (data.dtype == \"float\" or data.dtype == \"object\"):\n            # coerce ints if we can\n            try:\n                new_data = pd.to_numeric(data, errors='coerce').astype(\"int64\")\n                if (new_data == data).all():\n                    return new_data, True\n            except (TypeError, ValueError):\n                pass\n        \n        return data, result",
            "imports": []
        }
    ]
}