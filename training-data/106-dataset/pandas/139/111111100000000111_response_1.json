{
    "pandas": [
        {
            "bugID": 139,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 246,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def __init__(\n        self,\n        index,\n        grouper=None,\n        obj=None,\n        name=None,\n        level=None,\n        sort=True,\n        observed=False,\n        in_axis=False,\n    ):\n    \n\n    self.name = name\n    self.level = level\n    self.grouper = _convert_grouper(index, grouper)\n    self.all_grouper = None\n    self.index = index\n    self.sort = sort\n    self.obj = obj\n    self.observed = observed\n    self.in_axis = in_axis\n    \n    if isinstance(grouper, (Series, Index)) and name is None:\n        self.name = grouper.name\n    \n    if isinstance(grouper, MultiIndex):\n        self.grouper = grouper.values\n    \n    # handling categorical data\n    if is_categorical_dtype(self.grouper):\n        grouper = pd.Categorical(grouper)\n        self._group_index = self.grouper\n        self._labels = self.grouper.codes\n        if observed:\n            codes = algorithms.unique1d(self.grouper.codes)\n            codes = codes[codes != -1]\n            if sort or self.grouper.ordered:\n                codes = np.sort(codes)\n        else:\n            codes = np.arange(len(self.grouper.categories))\n        self._group_index = pd.CategoricalIndex(pd.Categorical.from_codes(\n            codes=codes, categories=self.grouper.categories, ordered=self.grouper.ordered\n        ))\n    \n    # determine resulting column name\n    result_col_name = self.name or 'index' if isinstance(self.grouper, (Series, Index)) else self.grouper.name\n    if result_col_name is None:\n        result_col_name = 'index'"
        }
    ]
}