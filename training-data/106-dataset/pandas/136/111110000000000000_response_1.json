{
    "pandas": [
        {
            "bugID": 136,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 1591,
            "file_name": "pandas/core/reshape/merge.py",
            "replace_code": "def _get_merge_keys(self, remove_non_numeric: bool = False):\n\n        left_keys = self.left_on\n        right_keys = self.right_on\n\n        if not remove_non_numeric:\n            # get the list of keys to merge on\n            if pd_indexing.any_non_mixed_type([lk, rk]):\n                raise TypeError('Merge keys are not consistently typed')\n\n            return zip(left_keys, right_keys, left_overlap, right_overlap), left_keys, right_keys\n        else:\n            n_left_cols = len(self.left_on)\n            n_right_cols = len(self.right_on)\n\n            # keep all redundant columns added when merging on a MultiIndex object\n            all_left_overlap = left_overlap.repeat(n_left_cols)\n            all_right_overlap = right_overlap.repeat(n_right_cols)\n\n            merged_i8 = (pd_indexing.indexer_from_factorized(all_left_overlap, self.left_unique & self.right_unique)[0],\n                         pd_indexing.indexer_from_factorized(all_right_overlap, self.right_unique & self.left_unique)[0])\n\n            return left_keys, right_keys, merged_i8",
            "imports": []
        }
    ]
}