{
    "pandas": [
        {
            "bugID": 122,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 1386,
            "file_name": "pandas/core/internals/managers.py",
            "replace_code": "def equals(self, other):\n    self_axes, other_axes = self.axes, other.axes\n    if len(self_axes) != len(other_axes):\n        return False\n    if not all(ax1.equals(ax2) for ax1, ax2 in zip(self_axes, other_axes)):\n        return False\n    \n    self._consolidate_inplace()\n    other._consolidate_inplace()\n    \n    # Sort blocks by type and locations\n    self_blocks = sorted(\n        [(b.get_values(), b.mgr_locs) for b in self.blocks],\n        key=lambda x: (str(type(x[0])), x[1].as_array.tolist())\n    )\n    other_blocks = sorted(\n        [(b.get_values(), b.mgr_locs) for b in other.blocks],\n        key=lambda x: (str(type(x[0])), x[1].as_array.tolist())\n    )\n    \n    if len(self_blocks) != len(other_blocks):\n        return False\n    \n    return all(\n        (str(type(self_block)) == str(type(other_block)) and self_block[1].as_array.tolist() == other_block[1].as_array.tolist())\n        for self_block, other_block in zip(self_blocks, other_blocks)\n    )",
            "import_list": []
        }
    ]
}