{
    "pandas": [
        {
            "bugID": 119,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 187,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def _add_margins(\n        table: Union[Series, DataFrame],\n        data,\n        values,\n        rows,\n        cols,\n        aggfunc,\n        observed=None,\n        margins_name: str = \"All\",\n        fill_value=None,\n    ):\n        \n    from typing import Union, Tuple\n    import pandas as pd\n    from pandas import Series, DataFrame, MultiIndex\n    from pandas.core.dtypes.generic import ABCSeries, ABCDataFrame\n    import numpy as np\n    if not isinstance(margins_name, str):\n        raise ValueError(\"margins_name argument must be a string\")\n    \n    if isinstance(table, Series):\n        grand_margin = _compute_grand_margin(data, values, aggfunc, margins_name)\n        key = margins_name\n        \n        if not values:\n            return table.append(Series({key: grand_margin[margins_name]}))\n        else:\n            marginal_result_set = _generate_marginal_results(\n                table.to_frame(),\n                data,\n                values,\n                rows,\n                cols, aggfunc,\n                observed, grand_margin, margins_name,\n            )\n            if not isinstance(marginal_result_set, tuple):\n                return marginal_result_set\n            result, margin_keys, row_margin = marginal_result_set\n    else:\n        grand_margin = _compute_grand_margin(data, values, aggfunc, margins_name)\n        margin_values = [grand_margin[margins_name]] * table.shape[0]\n        if isinstance(table.index, MultiIndex):\n            margin_index = pd.MultiIndex.from_tuples([(margins_name,)] * table.shape[0], names=table.index.names)\n        else:\n            margin_index = pd.Index([margins_name] * table.shape[0], name=table.index.name)\n        \n        new_row = pd.Series(dict(zip(table.columns, margin_values)), index=table.columns, name=margin_index)\n        result = table.append(new_row)\n    \n        return result"
        }
    ]
}