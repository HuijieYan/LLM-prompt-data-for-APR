{
    "pandas": [
        {
            "bugID": 6,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 601,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def get_grouper(\n    obj: (DataFrame, Series),\n    key=None,\n    axis: int = 0,\n    level=None,\n    sort: bool = True,\n    observed: bool = False,\n    mutated: bool = False,\n    validate: bool = True,\n    dropna: bool = True,\n) -> \"Tuple[ops.BaseGrouper, List[Hashable], (DataFrame, Series)]\":\n    \"\"\"\n    Create and return a BaseGrouper, which is an internal\n    mapping of how to create the grouper indexers.\n    This may be composed of multiple Grouping objects, indicating\n    multiple groupers\n    ...\n    \"\"\"    \n    # ... (existing code here)\n\n    if isinstance(group_axis, PeriodIndex):\n        # Handle PeriodIndex grouping\n        if isinstance(level, str):\n            level_name = obj._get_axis(axis).name\n            if level_name != level:\n                raise ValueError(f\"level name {level} is not the name of the {obj._get_axis_name(axis)}\")",
            "imports": [
                "from pandas.api.types import is_list_like, is_scalar",
                "from pandas.core.groupby.grouper import Grouper",
                "from pandas.core.indexes.base import Index",
                "from pandas.core.indexes.category import is_categorical_dtype",
                "from pandas.core.indexes.period import PeriodIndex",
                "from typing import Tuple, List",
                "from pandas import DataFrame, Series, MultiIndex, ops",
                "import numpy as np"
            ]
        }
    ]
}