{
    "pandas": [
        {
            "bugID": 6,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 601,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def get_grouper(\n    obj: FrameOrSeries,\n    key=None,\n    axis: int = 0,\n    level=None,\n    sort: bool = True,\n    observed: bool = False,\n    mutated: bool = False,\n    validate: bool = True,\n    dropna: bool = True,\n) -> Tuple[ops.BaseGrouper, List[Hashable], FrameOrSeries]:\n    group_axis = obj.index if axis == 0 else obj.columns\n    key = group_axis.get_level_values(level) if isinstance(level, int) else key\n\n    if not isinstance(key, list):\n        keys = [key]\n    else:\n        keys = key\n\n    # ... remaining code ...\n\n    grouper = ops.BaseGrouper(group_axis, groupings, sort=sort, mutated=mutated)\n    return grouper, exclusions, obj",
            "import_list": [
                "from pandas.core.groupby.grouper import Grouper",
                "from pandas.core.base import NoNewAttributesMixin",
                "from pandas.core.arrays.categorical import Categorical",
                "from pandas.core.dtypes.common import is_list_like, is_scalar, is_categorical_dtype",
                "from pandas.core.indexes.base import Index, InvalidIndexError",
                "from pandas.core.indexes.multi import MultiIndex",
                "from pandas.core.indexes.period import PeriodIndex",
                "from pandas.core.series import Series",
                "from pandas.core.frame import DataFrame",
                "from typing import List, Hashable, Tuple",
                "import numpy as np",
                "from pandas.core import ops",
                "from pandas.core.groupby.groupby import Grouping",
                "from pandas.core.base import DataError",
                "from pandas.core.base import InvalidIndexError"
            ]
        }
    ]
}