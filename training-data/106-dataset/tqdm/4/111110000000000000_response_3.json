{
    "tqdm": [
        {
            "bugID": 4,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 252,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def format_meter(n, total, elapsed, ncols=None, prefix='', ascii=None,\n                     unit='it', unit_scale=False, rate=None, bar_format=None,\n                     postfix=None, unit_divisor=1000, **kwargs):\n        \"\"\"\n        Return a string-based progress bar given some parameters\n        \"\"\"\n    \n        # sanity check: total\n        if total and n > total:\n            total = None\n    \n        # apply custom scale if necessary\n        if unit_scale and unit_scale not in (True, 1):\n            total *= unit_scale\n            n *= unit_scale\n            if rate:\n                rate *= unit_scale  # by default rate = 1 / self.avg_time\n            unit_scale = False\n    \n        elapsed_s = tqdm.format_interval(elapsed)\n\n        if rate is None:\n            rate = n / elapsed\n        inv_rate = 1 / rate\n\n        rate_fmt = \"{0:5.2f}\".format(inv_rate) + \"s/it\"\n\n        if unit_scale:\n            n_fmt = tqdm.format_sizeof(n, divisor=unit_divisor)\n            total_fmt = tqdm.format_sizeof(total, divisor=unit_divisor)\n        else:\n            n_fmt = n\n            total_fmt = total\n    \n        if postfix:\n            postfix = \", \" + postfix\n    \n        desc = prefix or ''\n    \n        # total is known: we can predict some stats\n        if total:\n            # fractional and percentage progress\n            fraction = n / total\n            percentage = fraction * 100\n    \n            remaining = total - n\n            remaining_s = tqdm.format_interval(remaining / rate)\n    \n            display = '{0:3.0f}%|{1}| {2}/{3} [{4}, {5}{6}]'\n    \n            if ncols == 0:\n                return display.format(percentage, '', n_fmt, total_fmt,\n                                  elapsed_s, remaining_s, rate_fmt)\n    \n            if bar_format:\n                pass\n    \n            # Formatting progress bar space available for bar's display\n            if ncols:\n                N_BARS = ncols - len(desc) - 3\n            else:\n                N_BARS = 10\n    \n            # format bar depending on availability of unicode/ascii chars\n            if ascii:\n                bar_length, frac = divmod(int(fraction * N_BARS * 10), 10)\n                full_bar = \"#\" * bar_length\n                if frac:\n                    full_bar += chr(48 + frac)\n                full_bar += \" \" * (N_BARS - bar_length)\n    \n            else:\n                *full_bar, = [tqdm._unicode(0x2588) for _ in range(int(fraction * N_BARS))]  # NOQA: T484\n                *full_bar, = [tqdm.unicode(0x258F - (int(fraction * N_BARS * 8) - 1))]  # NOQA: T484\n                full_bar += \" \" * (N_BARS - bar_length)\n    \n            return \"{0:3.0f}%|{1}| {2}/{3} [{4}, {5}{6}]\".format(percentage, ''.join(full_bar),\n                                    n_fmt, total_fmt, elapsed_s, remaining_s, rate_fmt)\n        # no total: no progressbar, ETA, just progress stats\n        else:\n            return ((prefix + \": \") if prefix else '') + \\\n                '{0}{1} [{2}, {3}{4}]'.format(\n                    n_fmt, unit, elapsed_s, rate_fmt, postfix)",
            "import_list": []
        }
    ]
}