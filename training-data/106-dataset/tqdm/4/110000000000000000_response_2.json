{
    "tqdm": [
        {
            "bugID": 4,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 252,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def format_meter(n, total, elapsed, ncols=None, prefix='', ascii=False,\n                 unit='it', unit_scale=False, rate=None, bar_format=None,\n                 postfix=None, unit_divisor=1000, **extra_kwargs):\n    if total and n > total:\n        total = None\n\n    if unit_scale and unit_scale not in (True, 1):\n        total *= unit_scale\n        n *= unit_scale\n        if rate:\n            rate *= unit_scale\n        unit_scale = False\n\n    elapsed_str = elapsed\n    if elapsed is not None:\n        elapsed_str = str(elapsed)\n    \n    if rate is None and elapsed:\n        rate = n / elapsed\n    inv_rate = 1 / rate if rate else None\n    rate_fmt = (f\"{inv_rate}\" if inv_rate and inv_rate > 1 else f\"{rate}\") + unit + '/s'\n\n    if unit_scale:\n        n_fmt = format_sizeof(n, divisor=unit_divisor)\n        total_fmt = format_sizeof(total, divisor=unit_divisor) if total else None\n    else:\n        n_fmt = str(n)\n        total_fmt = str(total)\n\n    try:\n        postfix = ', ' + postfix if postfix else ''\n    except TypeError:\n        pass\n\n    if total:\n        frac = n / total\n        percentage = frac * 100\n        remaining = (total - n) / rate if rate else 0\n        remaining_str = str(remaining) if rate else '?'\n        l_bar = (prefix if prefix and len(prefix) >= 2 and prefix[-2:] == \": \" else prefix if prefix else '')\n        if l_bar:\n            l_bar += \": \"\n        l_bar += f\"{percentage:3.0f}%|\"\n        r_bar = f\"|{n_fmt}/{total_fmt} [{elapsed_str}<{remaining_str}, {rate_fmt}{postfix}]\"\n        l_bar = (l_bar + r_bar) if ncols != 0 else l_bar[:-1] + r_bar[1:]\n    else:\n        l_bar = (f\"{prefix}: \" if prefix else '') + f\"{n_fmt}{unit} [{elapsed_str}, {rate_fmt}{postfix}]\"\n\n    return l_bar",
            "imports": []
        }
    ]
}