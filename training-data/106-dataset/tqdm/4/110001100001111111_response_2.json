{
    "tqdm": [
        {
            "bugID": 4,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 252,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def format_meter(n, total, elapsed, ncols=None, prefix='', ascii=False,\n                 unit='it', unit_scale=False, rate=None, bar_format=None,\n                 postfix=None, unit_divisor=1000, **extra_kwargs):\n    if total and n > total:\n        total = None\n\n    # apply custom scale if necessary\n    if unit_scale and unit_scale not in (True, 1):\n        total *= unit_scale\n        n *= unit_scale\n        if rate:\n            rate /= unit_scale  # update rate based on the unit scale\n        unit_scale = False\n\n    format_interval = tqdm.format_interval\n    elapsed_str = format_interval(elapsed)\n\n    if rate is None and elapsed:\n        rate = n / elapsed\n    inv_rate = 1 / rate if rate else None\n    format_sizeof = tqdm.format_sizeof\n    rate_noinv_fmt = ((format_sizeof(rate) if unit_scale else\n                       '{0:5.2f}'.format(rate))\n                      if rate else '?') + unit + '/s'\n    rate_inv_fmt = ((format_sizeof(inv_rate) if unit_scale else\n                     '{0:5.2f}'.format(inv_rate))\n                    if inv_rate else '?') + 's/' + unit\n    rate_fmt = rate_inv_fmt if inv_rate and inv_rate > 1 else rate_noinv_fmt\n\n    if unit_scale:\n        n_fmt = format_sizeof(n, divisor=unit_divisor)\n        total_fmt = format_sizeof(total, divisor=unit_divisor) if total else None\n    else:\n        n_fmt = str(n)\n        total_fmt = str(total)\n\n    postfix = ', ' + postfix if postfix else ''\n\n    if total:\n        frac = n / total\n        percentage = frac * 100\n\n        remaining = (total - n) / rate if rate else 0\n        remaining_str = format_interval(remaining) if rate else '?'\n\n        if prefix:\n            bool_prefix_colon_already = (prefix[-2:] == \": \")\n            l_bar = prefix if bool_prefix_colon_already else prefix + \": \"\n        else:\n            l_bar = ''\n        l_bar += '{0:3.0f}%|'.format(percentage)\n        r_bar = '| {0}/{1} [{2}<{3}, {4}{5}]'.format(\n            n_fmt, total_fmt, elapsed_str, remaining_str, rate_fmt, postfix)\n\n        if ncols == 0:\n            return l_bar[:-1] + r_bar[1:]\n\n        # rest of the function remains unchanged\n    else:\n        return ((prefix + \": \") if prefix else '') + \\\n            '{0}{1} [{2}, {3}{4}]'.format(\n                n_fmt, unit, elapsed_str, rate_fmt, postfix)",
            "import_list": []
        }
    ]
}