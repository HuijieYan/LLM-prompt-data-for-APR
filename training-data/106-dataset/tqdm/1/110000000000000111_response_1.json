{
    "tqdm": [
        {
            "bugID": 1,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 24,
            "file_name": "tqdm/contrib/__init__.py",
            "replace_code": "def tenumerate(iterable, start=0, total=None, **tqdm_kwargs):\n    \"\"\"\n    Equivalent of `numpy.ndenumerate` or builtin `enumerate` with tqdm.\n\n    Parameters\n    ----------\n    iterable  : Iterable\n        The iterable to enumerate.\n    start  : int, optional\n        The starting index. Default is 0.\n    total  : int, optional\n        The total number of iterations. If not provided, it will be calculated from the length of the iterable.\n    tqdm_kwargs  : dict, optional\n        Additional keyword arguments to be passed to tqdm.\n    \"\"\"\n    try:\n        import numpy as np\n    except ImportError:\n        pass\n    else:\n        if isinstance(iterable, np.ndarray):\n            return enumerate(tqdm(iterable, start=start, total=total, **tqdm_kwargs))\n    return enumerate(tqdm(iterable, start=start, total=total, **tqdm_kwargs))",
            "import_list": [
                "from tqdm import tqdm",
                "import numpy as np"
            ]
        }
    ]
}