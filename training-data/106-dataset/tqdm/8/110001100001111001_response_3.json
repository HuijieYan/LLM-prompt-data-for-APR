{
    "tqdm": [
        {
            "bugID": 8,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 103,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def format_meter(n, total, elapsed, ncols=None, prefix='',\n                 ascii=False, unit='it', unit_scale=False, rate=None,\n                 bar_format=None):\n    if total and n > total:\n        total = None\n\n    elapsed_str = format_interval(elapsed)\n\n    rate = n / elapsed if rate is None and elapsed else rate\n\n    if total:\n        frac = n / total\n        percentage = frac * 100\n        remaining_str = format_interval((total - n) / rate) if rate else '?'\n\n        l_bar = prefix + '{0:3.0f}%|'.format(percentage)\n        r_bar = '| {0}/{1} [{2}<{3}, {4}]'.format(\n            format_sizeof(n) if unit_scale else str(n),\n            format_sizeof(total) if unit_scale else str(total),\n            elapsed_str, remaining_str,\n            (format_sizeof(1 / rate) + unit + '/s') if unit_scale else (str(rate) + unit + '/s')\n        )\n\n        if ncols == 0:\n            return l_bar[:-1] + r_bar[1:]\n\n        if bar_format:\n            l_side, r_side = bar_format.split('{bar}')\n            l_bar, r_bar = l_side.format(percentage=percentage, n=n, total=total, elapsed=elapsed_str, remaining=remaining_str), r_side.format(percentage=percentage, n=n, total=total, elapsed=elapsed_str, remaining=remaining_str)\n\n    else:\n        return prefix + str(n) + unit + ' [' + elapsed_str + ', ' + (format_sizeof(1 / rate) + unit + '/s') if unit_scale else (str(rate) + unit + '/s') + ']'",
            "imports": []
        }
    ]
}