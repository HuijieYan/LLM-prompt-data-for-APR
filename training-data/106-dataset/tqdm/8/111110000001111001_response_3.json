{
    "tqdm": [
        {
            "bugID": 8,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 103,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def format_meter(n, total, elapsed, ncols=None, prefix='',\n                 ascii=False, unit='it', unit_scale=False, rate=None,\n                 bar_format=None):\n    # New check added to handle total=None case\n    if total is None:\n        total = 0\n\n    # ... remaining code ...\n\n    #Part of the code where the fractional and percentage progress\n    #is calculated is moved to a new function.\n    if total:\n        def calculate_progress():\n            # fractional and percentage progress\n            frac = n / total\n            percentage = frac * 100\n            return frac, percentage\n\n        frac, percentage = calculate_progress()\n\n        # remaining code...\n        # Replacing \n        if total and n > total:\n            total = None\n        # with\n        if total and n > total:\n            return (prefix if prefix else '') + '{0}{1} [{2}, {3}]'.format(\n                n, unit, elapsed_str, rate_fmt)\n\n    # remaining code...\n\n    # temporary variables are assigned to according to new progress calculation function,\n    remaining_str = format_interval((total - n) / rate) if rate else '?'\n    l_bar = (prefix if prefix else '') + '{0:3.0f}%|'.format(percentage)",
            "import_list": []
        }
    ]
}