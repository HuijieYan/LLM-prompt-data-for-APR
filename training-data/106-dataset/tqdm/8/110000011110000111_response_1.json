{
    "tqdm": [
        {
            "bugID": 8,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 103,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def format_meter(n, total, elapsed, ncols=None, prefix='',\n                 ascii=False, unit='it', unit_scale=False, rate=None,\n                 bar_format=None):\n\n    if total and n > total:\n        total = None\n    \n    elapsed_str = tqdm.format_interval(elapsed)\n    \n    if rate is None and elapsed:\n        rate = n / elapsed\n    inv_rate = 1 / rate if (rate and (rate < 1)) else None\n    \n    rate_fmt = (f\"{inv_rate if inv_rate else rate:5.2f}\" if rate else '?') \\\n        + ('s' if inv_rate else unit) + '/' + (unit if inv_rate else 's')\n    \n    if unit_scale:\n        n_fmt = tqdm.format_sizeof(n)\n        total_fmt = tqdm.format_sizeof(total) if total else None\n    else:\n        n_fmt = str(n)\n        total_fmt = str(total)\n    \n    if total:\n        frac = n / total\n        percentage = frac * 100\n    \n        remaining_str = tqdm.format_interval((total - n) / rate) \\\n            if rate else '?'\n    \n        l_bar = (f\"{prefix}\" if prefix else '') + \\\n            f\"{percentage:3.0f}%|\"\n        r_bar = f\"| {n_fmt}/{total_fmt} [{elapsed_str}<{remaining_str}, {rate_fmt}]\"\n    \n        if ncols == 0:\n            return l_bar[:-1] + r_bar[1:]\n    \n        if bar_format:\n            N_BARS = max(1, ncols - len(l_bar) - len(r_bar)) if ncols \\\n                else 10\n    \n            bar_length = int(frac * N_BARS)\n            full_bar = '#' * bar_length\n    \n            if '{bar}' in bar_format:\n                l_bar_user, r_bar_user = bar_format.split('{bar}')\n                return l_bar_user.format(**{'n_fmt': n_fmt, 'total_fmt': total_fmt, 'percentage': percentage}) + full_bar + r_bar_user.format(**{'elapsed_str': elapsed_str, 'remaining_str': remaining_str, 'rate_fmt': rate_fmt})\n            else:\n                return bar_format.format(**{'n_fmt': n_fmt, 'total_fmt': total_fmt, 'percentage': percentage, 'elapsed_str': elapsed_str, 'remaining_str': remaining_str, 'rate_fmt': rate_fmt})\n    \n        bar = '#' * bar_length\n        return l_bar + full_bar + r_bar\n    \n    else:\n        return (f\"{prefix}\" if prefix else '') + f\"{n_fmt}{unit} [{elapsed_str}, {rate_fmt}]\""
        }
    ]
}