{
    "tqdm": [
        {
            "bugID": 8,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 103,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def format_meter(n, total, elapsed, ncols=None, prefix='',\n                 ascii=False, unit='it', unit_scale=False, rate=None,\n                 bar_format=None):\n    n = int(n)  # must be an integer\n    total = int(total)  # must be an integer\n    elapsed = float(elapsed)  # must be a float\n\n    # sanity check: total\n    if total and n > total:\n        total = None\n\n    elapsed_str = format_interval(elapsed)  # call the format_interval function\n    rate, rate_fmt = calculate_rate_parameters(n, elapsed, rate, unit_scale)  # call the calculate_rate_parameters function\n\n    [n_fmt, total_fmt, percentage, remaining_str, l_bar, r_bar] = format_progress_bar(total, n, total_fmt, elapsed_str, rate_fmt, ncols, unit_scale, prefix)  # call the format_progress_bar function\n\n    if bar_format:\n        output = custom_bar_format(bar_format, n, n_fmt, total, total_fmt, percentage, rate, elapsed_str, remaining_str, l_bar, r_bar, prefix)\n    else:\n        output = format_progress_bar_output(n, n_fmt, unit, elapsed_str, rate_fmt, prefix)\n  \n    return output",
            "imports": []
        }
    ]
}