{
    "scrapy:9": {
        "/Volumes/SSD2T/bgp_envs/repos/scrapy_9/scrapy/mail.py": {
            "buggy_functions": [
                {
                    "function_name": "send",
                    "function_code": "def send(self, to, subject, body, cc=None, attachs=(), mimetype='text/plain', charset=None, _callback=None):\n    if attachs:\n        msg = MIMEMultipart()\n    else:\n        msg = MIMENonMultipart(*mimetype.split('/', 1))\n    msg['From'] = self.mailfrom\n    msg['To'] = COMMASPACE.join(to)\n    msg['Date'] = formatdate(localtime=True)\n    msg['Subject'] = subject\n    rcpts = to[:]\n    if cc:\n        rcpts.extend(cc)\n        msg['Cc'] = COMMASPACE.join(cc)\n\n    if charset:\n        msg.set_charset(charset)\n\n    if attachs:\n        msg.attach(MIMEText(body, 'plain', charset or 'us-ascii'))\n        for attach_name, mimetype, f in attachs:\n            part = MIMEBase(*mimetype.split('/'))\n            part.set_payload(f.read())\n            Encoders.encode_base64(part)\n            part.add_header('Content-Disposition', 'attachment; filename=\"%s\"' \\\n                % attach_name)\n            msg.attach(part)\n    else:\n        msg.set_payload(body)\n\n    if _callback:\n        _callback(to=to, subject=subject, body=body, cc=cc, attach=attachs, msg=msg)\n\n    if self.debug:\n        logger.debug('Debug mail sent OK: To=%(mailto)s Cc=%(mailcc)s '\n                     'Subject=\"%(mailsubject)s\" Attachs=%(mailattachs)d',\n                     {'mailto': to, 'mailcc': cc, 'mailsubject': subject,\n                      'mailattachs': len(attachs)})\n        return\n\n    dfd = self._sendmail(rcpts, msg.as_string())\n    dfd.addCallbacks(self._sent_ok, self._sent_failed,\n        callbackArgs=[to, cc, subject, len(attachs)],\n        errbackArgs=[to, cc, subject, len(attachs)])\n    reactor.addSystemEventTrigger('before', 'shutdown', lambda: dfd)\n    return dfd\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 46,
                    "end_line": 90,
                    "variables": {
                        "attachs": [
                            65,
                            76,
                            47,
                            82,
                            87,
                            88,
                            63
                        ],
                        "msg": [
                            64,
                            71,
                            73,
                            76,
                            48,
                            50,
                            51,
                            52,
                            53,
                            54,
                            85,
                            58,
                            61
                        ],
                        "MIMEMultipart": [
                            48
                        ],
                        "MIMENonMultipart": [
                            50
                        ],
                        "mimetype.split": [
                            50,
                            66
                        ],
                        "mimetype": [
                            65,
                            50,
                            66
                        ],
                        "self.mailfrom": [
                            51
                        ],
                        "self": [
                            86,
                            51,
                            85,
                            78
                        ],
                        "COMMASPACE.join": [
                            58,
                            52
                        ],
                        "COMMASPACE": [
                            58,
                            52
                        ],
                        "to": [
                            76,
                            81,
                            52,
                            55,
                            87,
                            88
                        ],
                        "formatdate": [
                            53
                        ],
                        "subject": [
                            76,
                            81,
                            54,
                            87,
                            88
                        ],
                        "rcpts": [
                            57,
                            85,
                            55
                        ],
                        "cc": [
                            76,
                            81,
                            87,
                            56,
                            57,
                            58,
                            88
                        ],
                        "rcpts.extend": [
                            57
                        ],
                        "charset": [
                            64,
                            60,
                            61
                        ],
                        "msg.set_charset": [
                            61
                        ],
                        "msg.attach": [
                            64,
                            71
                        ],
                        "MIMEText": [
                            64
                        ],
                        "body": [
                            64,
                            73,
                            76
                        ],
                        "attach_name": [
                            65,
                            70
                        ],
                        "f": [
                            65,
                            67
                        ],
                        "part": [
                            66,
                            67,
                            68,
                            69,
                            71
                        ],
                        "MIMEBase": [
                            66
                        ],
                        "part.set_payload": [
                            67
                        ],
                        "f.read": [
                            67
                        ],
                        "Encoders.encode_base64": [
                            68
                        ],
                        "Encoders": [
                            68
                        ],
                        "part.add_header": [
                            69
                        ],
                        "msg.set_payload": [
                            73
                        ],
                        "_callback": [
                            75,
                            76
                        ],
                        "self.debug": [
                            78
                        ],
                        "logger.debug": [
                            79
                        ],
                        "logger": [
                            79
                        ],
                        "len": [
                            88,
                            82,
                            87
                        ],
                        "dfd": [
                            89,
                            90,
                            85,
                            86
                        ],
                        "self._sendmail": [
                            85
                        ],
                        "msg.as_string": [
                            85
                        ],
                        "dfd.addCallbacks": [
                            86
                        ],
                        "self._sent_ok": [
                            86
                        ],
                        "self._sent_failed": [
                            86
                        ],
                        "reactor.addSystemEventTrigger": [
                            89
                        ],
                        "reactor": [
                            89
                        ]
                    },
                    "filtered_variables": {
                        "attachs": [
                            65,
                            76,
                            47,
                            82,
                            87,
                            88,
                            63
                        ],
                        "msg": [
                            64,
                            71,
                            73,
                            76,
                            48,
                            50,
                            51,
                            52,
                            53,
                            54,
                            85,
                            58,
                            61
                        ],
                        "MIMEMultipart": [
                            48
                        ],
                        "MIMENonMultipart": [
                            50
                        ],
                        "mimetype.split": [
                            50,
                            66
                        ],
                        "mimetype": [
                            65,
                            50,
                            66
                        ],
                        "self.mailfrom": [
                            51
                        ],
                        "self": [
                            86,
                            51,
                            85,
                            78
                        ],
                        "COMMASPACE.join": [
                            58,
                            52
                        ],
                        "COMMASPACE": [
                            58,
                            52
                        ],
                        "to": [
                            76,
                            81,
                            52,
                            55,
                            87,
                            88
                        ],
                        "formatdate": [
                            53
                        ],
                        "subject": [
                            76,
                            81,
                            54,
                            87,
                            88
                        ],
                        "rcpts": [
                            57,
                            85,
                            55
                        ],
                        "cc": [
                            76,
                            81,
                            87,
                            56,
                            57,
                            58,
                            88
                        ],
                        "rcpts.extend": [
                            57
                        ],
                        "charset": [
                            64,
                            60,
                            61
                        ],
                        "msg.set_charset": [
                            61
                        ],
                        "msg.attach": [
                            64,
                            71
                        ],
                        "MIMEText": [
                            64
                        ],
                        "body": [
                            64,
                            73,
                            76
                        ],
                        "attach_name": [
                            65,
                            70
                        ],
                        "f": [
                            65,
                            67
                        ],
                        "part": [
                            66,
                            67,
                            68,
                            69,
                            71
                        ],
                        "MIMEBase": [
                            66
                        ],
                        "part.set_payload": [
                            67
                        ],
                        "f.read": [
                            67
                        ],
                        "Encoders.encode_base64": [
                            68
                        ],
                        "Encoders": [
                            68
                        ],
                        "part.add_header": [
                            69
                        ],
                        "msg.set_payload": [
                            73
                        ],
                        "_callback": [
                            75,
                            76
                        ],
                        "self.debug": [
                            78
                        ],
                        "logger.debug": [
                            79
                        ],
                        "logger": [
                            79
                        ],
                        "dfd": [
                            89,
                            90,
                            85,
                            86
                        ],
                        "self._sendmail": [
                            85
                        ],
                        "msg.as_string": [
                            85
                        ],
                        "dfd.addCallbacks": [
                            86
                        ],
                        "self._sent_ok": [
                            86
                        ],
                        "self._sent_failed": [
                            86
                        ],
                        "reactor.addSystemEventTrigger": [
                            89
                        ],
                        "reactor": [
                            89
                        ]
                    },
                    "diff_line_number": 50,
                    "class_data": {
                        "signature": "class MailSender(object)",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self, smtphost='localhost', mailfrom='scrapy@localhost', smtpuser=None, smtppass=None, smtpport=25, smtptls=False, smtpssl=False, debug=False):\n    self.smtphost = smtphost\n    self.smtpport = smtpport\n    self.smtpuser = smtpuser\n    self.smtppass = smtppass\n    self.smtptls = smtptls\n    self.smtpssl = smtpssl\n    self.mailfrom = mailfrom\n    self.debug = debug",
                            "@classmethod\ndef from_settings(cls, settings):\n    return cls(settings['MAIL_HOST'], settings['MAIL_FROM'], settings['MAIL_USER'], settings['MAIL_PASS'], settings.getint('MAIL_PORT'), settings.getbool('MAIL_TLS'), settings.getbool('MAIL_SSL'))",
                            "def send(self, to, subject, body, cc=None, attachs=(), mimetype='text/plain', charset=None, _callback=None):\n    if attachs:\n        msg = MIMEMultipart()\n    else:\n        msg = MIMENonMultipart(*mimetype.split('/', 1))\n    msg['From'] = self.mailfrom\n    msg['To'] = COMMASPACE.join(to)\n    msg['Date'] = formatdate(localtime=True)\n    msg['Subject'] = subject\n    rcpts = to[:]\n    if cc:\n        rcpts.extend(cc)\n        msg['Cc'] = COMMASPACE.join(cc)\n    if charset:\n        msg.set_charset(charset)\n    if attachs:\n        msg.attach(MIMEText(body, 'plain', charset or 'us-ascii'))\n        for attach_name, mimetype, f in attachs:\n            part = MIMEBase(*mimetype.split('/'))\n            part.set_payload(f.read())\n            Encoders.encode_base64(part)\n            part.add_header('Content-Disposition', 'attachment; filename=\"%s\"' % attach_name)\n            msg.attach(part)\n    else:\n        msg.set_payload(body)\n    if _callback:\n        _callback(to=to, subject=subject, body=body, cc=cc, attach=attachs, msg=msg)\n    if self.debug:\n        logger.debug('Debug mail sent OK: To=%(mailto)s Cc=%(mailcc)s Subject=\"%(mailsubject)s\" Attachs=%(mailattachs)d', {'mailto': to, 'mailcc': cc, 'mailsubject': subject, 'mailattachs': len(attachs)})\n        return\n    dfd = self._sendmail(rcpts, msg.as_string())\n    dfd.addCallbacks(self._sent_ok, self._sent_failed, callbackArgs=[to, cc, subject, len(attachs)], errbackArgs=[to, cc, subject, len(attachs)])\n    reactor.addSystemEventTrigger('before', 'shutdown', lambda: dfd)\n    return dfd",
                            "def _sent_ok(self, result, to, cc, subject, nattachs):\n    logger.info('Mail sent OK: To=%(mailto)s Cc=%(mailcc)s Subject=\"%(mailsubject)s\" Attachs=%(mailattachs)d', {'mailto': to, 'mailcc': cc, 'mailsubject': subject, 'mailattachs': nattachs})",
                            "def _sent_failed(self, failure, to, cc, subject, nattachs):\n    errstr = str(failure.value)\n    logger.error('Unable to send mail: To=%(mailto)s Cc=%(mailcc)s Subject=\"%(mailsubject)s\" Attachs=%(mailattachs)d- %(mailerr)s', {'mailto': to, 'mailcc': cc, 'mailsubject': subject, 'mailattachs': nattachs, 'mailerr': errstr})",
                            "def _sendmail(self, to_addrs, msg):\n    from twisted.mail.smtp import ESMTPSenderFactory\n    msg = StringIO(msg)\n    d = defer.Deferred()\n    factory = ESMTPSenderFactory(self.smtpuser, self.smtppass, self.mailfrom, to_addrs, msg, d, heloFallback=True, requireAuthentication=False, requireTransportSecurity=self.smtptls)\n    factory.noisy = False\n    if self.smtpssl:\n        reactor.connectSSL(self.smtphost, self.smtpport, factory, ssl.ClientContextFactory())\n    else:\n        reactor.connectTCP(self.smtphost, self.smtpport, factory)\n    return d"
                        ],
                        "constructor_variables": [
                            "smtpuser",
                            "debug",
                            "smtppass",
                            "smtptls",
                            "smtpssl",
                            "smtphost",
                            "mailfrom",
                            "smtpport"
                        ],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "__init__(self, smtphost='localhost', mailfrom='scrapy@localhost', smtpuser=None, smtppass=None, smtpport=25, smtptls=False, smtpssl=False, debug=False)",
                            "from_settings(cls, settings)",
                            "send(self, to, subject, body, cc=None, attachs=(), mimetype='text/plain', charset=None, _callback=None)",
                            "_sent_ok(self, result, to, cc, subject, nattachs)",
                            "_sent_failed(self, failure, to, cc, subject, nattachs)",
                            "_sendmail(self, to_addrs, msg)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "attachs": {
                                    "variable_value": "()",
                                    "variable_type": "tuple",
                                    "variable_shape": "0"
                                },
                                "msg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMEMultipart": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMENonMultipart": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mimetype.split": {
                                    "variable_value": "<built-in method split of str object at 0x106ff9e30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mimetype": {
                                    "variable_value": "'text/plain'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "self.mailfrom": {
                                    "variable_value": "'scrapy@localhost'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "self": {
                                    "variable_value": "<scrapy.mail.MailSender object at 0x107aaffa0>",
                                    "variable_type": "MailSender",
                                    "variable_shape": null
                                },
                                "COMMASPACE.join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "COMMASPACE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "to": {
                                    "variable_value": "'test@scrapy.org'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "formatdate": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subject": {
                                    "variable_value": "'subject'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "rcpts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cc": {
                                    "variable_value": "'test@scrapy.org'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "rcpts.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "charset": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "msg.set_charset": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "msg.attach": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMEText": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "body": {
                                    "variable_value": "'body'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "attach_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "f": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMEBase": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part.set_payload": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "f.read": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Encoders.encode_base64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Encoders": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part.add_header": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "msg.set_payload": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_callback": {
                                    "variable_value": "<bound method MailSenderTest._catch_mail_sent of <tests.test_mail.MailSenderTest testMethod=test_send_single_values_to_and_cc>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.debug": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "logger.debug": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "logger": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._sendmail": {
                                    "variable_value": "<bound method MailSender._sendmail of <scrapy.mail.MailSender object at 0x107aaffa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "msg.as_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfd.addCallbacks": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._sent_ok": {
                                    "variable_value": "<bound method MailSender._sent_ok of <scrapy.mail.MailSender object at 0x107aaffa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._sent_failed": {
                                    "variable_value": "<bound method MailSender._sent_failed of <scrapy.mail.MailSender object at 0x107aaffa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "reactor.addSystemEventTrigger": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "reactor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "attachs": {
                                    "variable_value": "()",
                                    "variable_type": "tuple",
                                    "variable_shape": "0"
                                },
                                "msg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMEMultipart": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMENonMultipart": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mimetype.split": {
                                    "variable_value": "<built-in method split of str object at 0x10810de70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mimetype": {
                                    "variable_value": "'text/plain'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "to": {
                                    "variable_value": "'test@scrapy.org'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "arg_to_iter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cc": {
                                    "variable_value": "'test@scrapy.org'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "self.mailfrom": {
                                    "variable_value": "'scrapy@localhost'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "self": {
                                    "variable_value": "<scrapy.mail.MailSender object at 0x108bd4e50>",
                                    "variable_type": "MailSender",
                                    "variable_shape": null
                                },
                                "COMMASPACE.join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "COMMASPACE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatdate": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subject": {
                                    "variable_value": "'subject'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "rcpts": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "rcpts.extend": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "charset": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "msg.set_charset": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "msg.attach": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMEText": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "body": {
                                    "variable_value": "'body'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "attach_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "f": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMEBase": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part.set_payload": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "f.read": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Encoders.encode_base64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Encoders": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part.add_header": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "msg.set_payload": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_callback": {
                                    "variable_value": "<bound method MailSenderTest._catch_mail_sent of <tests.test_mail.MailSenderTest testMethod=test_send_single_values_to_and_cc>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.debug": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "logger.debug": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "logger": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._sendmail": {
                                    "variable_value": "<bound method MailSender._sendmail of <scrapy.mail.MailSender object at 0x108bd4e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "msg.as_string": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfd.addCallbacks": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._sent_ok": {
                                    "variable_value": "<bound method MailSender._sent_ok of <scrapy.mail.MailSender object at 0x108bd4e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._sent_failed": {
                                    "variable_value": "<bound method MailSender._sent_failed of <scrapy.mail.MailSender object at 0x108bd4e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "reactor.addSystemEventTrigger": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "reactor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "attachs": {
                                    "variable_value": "()",
                                    "variable_type": "tuple",
                                    "variable_shape": "0"
                                },
                                "msg": {
                                    "variable_value": "<email.mime.nonmultipart.MIMENonMultipart object at 0x108bf4550>",
                                    "variable_type": "MIMENonMultipart",
                                    "variable_shape": null
                                },
                                "MIMEMultipart": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMENonMultipart": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mimetype.split": {
                                    "variable_value": "<built-in method split of str object at 0x10810de70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "mimetype": {
                                    "variable_value": "'text/plain'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "to": {
                                    "variable_value": "['test@scrapy.org']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "arg_to_iter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "cc": {
                                    "variable_value": "['test@scrapy.org']",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "self.mailfrom": {
                                    "variable_value": "'scrapy@localhost'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "self": {
                                    "variable_value": "<scrapy.mail.MailSender object at 0x108bd4e50>",
                                    "variable_type": "MailSender",
                                    "variable_shape": null
                                },
                                "COMMASPACE.join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "COMMASPACE": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "formatdate": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "subject": {
                                    "variable_value": "'subject'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "rcpts": {
                                    "variable_value": "['test@scrapy.org', 'test@scrapy.org']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "rcpts.extend": {
                                    "variable_value": "<built-in method extend of list object at 0x108a4eb80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "charset": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "msg.set_charset": {
                                    "variable_value": "<bound method Message.set_charset of <email.mime.nonmultipart.MIMENonMultipart object at 0x108bf4550>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "msg.attach": {
                                    "variable_value": "<bound method MIMENonMultipart.attach of <email.mime.nonmultipart.MIMENonMultipart object at 0x108bf4550>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "MIMEText": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "body": {
                                    "variable_value": "'body'",
                                    "variable_type": "str",
                                    "variable_shape": "4"
                                },
                                "attach_name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "f": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "MIMEBase": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part.set_payload": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "f.read": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Encoders.encode_base64": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Encoders": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "part.add_header": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "msg.set_payload": {
                                    "variable_value": "<bound method Message.set_payload of <email.mime.nonmultipart.MIMENonMultipart object at 0x108bf4550>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "_callback": {
                                    "variable_value": "<bound method MailSenderTest._catch_mail_sent of <tests.test_mail.MailSenderTest testMethod=test_send_single_values_to_and_cc>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.debug": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "logger.debug": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "logger": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "dfd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._sendmail": {
                                    "variable_value": "<bound method MailSender._sendmail of <scrapy.mail.MailSender object at 0x108bd4e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "msg.as_string": {
                                    "variable_value": "<bound method Message.as_string of <email.mime.nonmultipart.MIMENonMultipart object at 0x108bf4550>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "dfd.addCallbacks": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self._sent_ok": {
                                    "variable_value": "<bound method MailSender._sent_ok of <scrapy.mail.MailSender object at 0x108bd4e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self._sent_failed": {
                                    "variable_value": "<bound method MailSender._sent_failed of <scrapy.mail.MailSender object at 0x108bd4e50>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "reactor.addSystemEventTrigger": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "reactor": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "logger = logging.getLogger(__name__)",
                    "start_line": 23,
                    "end_line": 24
                }
            ],
            "inscope_functions": [
                "def __init__(self, smtphost='localhost', mailfrom='scrapy@localhost',\n        smtpuser=None, smtppass=None, smtpport=25, smtptls=False, smtpssl=False, debug=False):\n    self.smtphost = smtphost\n    self.smtpport = smtpport\n    self.smtpuser = smtpuser\n    self.smtppass = smtppass\n    self.smtptls = smtptls\n    self.smtpssl = smtpssl\n    self.mailfrom = mailfrom\n    self.debug = debug",
                "@classmethod\ndef from_settings(cls, settings):\n    return cls(settings['MAIL_HOST'], settings['MAIL_FROM'], settings['MAIL_USER'],\n        settings['MAIL_PASS'], settings.getint('MAIL_PORT'),\n        settings.getbool('MAIL_TLS'), settings.getbool('MAIL_SSL'))",
                "def send(self, to, subject, body, cc=None, attachs=(), mimetype='text/plain', charset=None, _callback=None):\n    if attachs:\n        msg = MIMEMultipart()\n    else:\n        msg = MIMENonMultipart(*mimetype.split('/', 1))\n    msg['From'] = self.mailfrom\n    msg['To'] = COMMASPACE.join(to)\n    msg['Date'] = formatdate(localtime=True)\n    msg['Subject'] = subject\n    rcpts = to[:]\n    if cc:\n        rcpts.extend(cc)\n        msg['Cc'] = COMMASPACE.join(cc)\n\n    if charset:\n        msg.set_charset(charset)\n\n    if attachs:\n        msg.attach(MIMEText(body, 'plain', charset or 'us-ascii'))\n        for attach_name, mimetype, f in attachs:\n            part = MIMEBase(*mimetype.split('/'))\n            part.set_payload(f.read())\n            Encoders.encode_base64(part)\n            part.add_header('Content-Disposition', 'attachment; filename=\"%s\"' \\\n                % attach_name)\n            msg.attach(part)\n    else:\n        msg.set_payload(body)\n\n    if _callback:\n        _callback(to=to, subject=subject, body=body, cc=cc, attach=attachs, msg=msg)\n\n    if self.debug:\n        logger.debug('Debug mail sent OK: To=%(mailto)s Cc=%(mailcc)s '\n                     'Subject=\"%(mailsubject)s\" Attachs=%(mailattachs)d',\n                     {'mailto': to, 'mailcc': cc, 'mailsubject': subject,\n                      'mailattachs': len(attachs)})\n        return\n\n    dfd = self._sendmail(rcpts, msg.as_string())\n    dfd.addCallbacks(self._sent_ok, self._sent_failed,\n        callbackArgs=[to, cc, subject, len(attachs)],\n        errbackArgs=[to, cc, subject, len(attachs)])\n    reactor.addSystemEventTrigger('before', 'shutdown', lambda: dfd)\n    return dfd",
                "def _sent_ok(self, result, to, cc, subject, nattachs):\n    logger.info('Mail sent OK: To=%(mailto)s Cc=%(mailcc)s '\n                'Subject=\"%(mailsubject)s\" Attachs=%(mailattachs)d',\n                {'mailto': to, 'mailcc': cc, 'mailsubject': subject,\n                 'mailattachs': nattachs})",
                "def _sent_failed(self, failure, to, cc, subject, nattachs):\n    errstr = str(failure.value)\n    logger.error('Unable to send mail: To=%(mailto)s Cc=%(mailcc)s '\n                 'Subject=\"%(mailsubject)s\" Attachs=%(mailattachs)d'\n                 '- %(mailerr)s',\n                 {'mailto': to, 'mailcc': cc, 'mailsubject': subject,\n                  'mailattachs': nattachs, 'mailerr': errstr})",
                "def _sendmail(self, to_addrs, msg):\n    # Import twisted.mail here because it is not available in python3\n    from twisted.mail.smtp import ESMTPSenderFactory\n    msg = StringIO(msg)\n    d = defer.Deferred()\n    factory = ESMTPSenderFactory(self.smtpuser, self.smtppass, self.mailfrom, \\\n        to_addrs, msg, d, heloFallback=True, requireAuthentication=False, \\\n        requireTransportSecurity=self.smtptls)\n    factory.noisy = False\n\n    if self.smtpssl:\n        reactor.connectSSL(self.smtphost, self.smtpport, factory, ssl.ClientContextFactory())\n    else:\n        reactor.connectTCP(self.smtphost, self.smtpport, factory)\n\n    return d"
            ],
            "inscope_function_signatures": [
                "__init__(self, smtphost='localhost', mailfrom='scrapy@localhost', smtpuser=None, smtppass=None, smtpport=25, smtptls=False, smtpssl=False, debug=False)",
                "from_settings(cls, settings)",
                "send(self, to, subject, body, cc=None, attachs=(), mimetype='text/plain', charset=None, _callback=None)",
                "_sent_ok(self, result, to, cc, subject, nattachs)",
                "_sent_failed(self, failure, to, cc, subject, nattachs)",
                "_sendmail(self, to_addrs, msg)"
            ],
            "variables_in_file": {
                "six.PY2": [
                    15
                ],
                "six": [
                    15
                ],
                "logger": [
                    24,
                    100,
                    93,
                    79
                ],
                "logging.getLogger": [
                    24
                ],
                "logging": [
                    24
                ],
                "__name__": [
                    24
                ],
                "object": [
                    27
                ],
                "self.smtphost": [
                    119,
                    117,
                    31
                ],
                "self": [
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    78,
                    111,
                    113,
                    51,
                    116,
                    85,
                    86,
                    117,
                    119,
                    31
                ],
                "smtphost": [
                    31
                ],
                "self.smtpport": [
                    32,
                    117,
                    119
                ],
                "smtpport": [
                    32
                ],
                "self.smtpuser": [
                    33,
                    111
                ],
                "smtpuser": [
                    33
                ],
                "self.smtppass": [
                    34,
                    111
                ],
                "smtppass": [
                    34
                ],
                "self.smtptls": [
                    113,
                    35
                ],
                "smtptls": [
                    35
                ],
                "self.smtpssl": [
                    116,
                    36
                ],
                "smtpssl": [
                    36
                ],
                "self.mailfrom": [
                    51,
                    37,
                    111
                ],
                "mailfrom": [
                    37
                ],
                "self.debug": [
                    78,
                    38
                ],
                "debug": [
                    38
                ],
                "cls": [
                    42
                ],
                "settings": [
                    42,
                    43,
                    44
                ],
                "settings.getint": [
                    43
                ],
                "settings.getbool": [
                    44
                ],
                "classmethod": [
                    40
                ],
                "attachs": [
                    65,
                    76,
                    47,
                    82,
                    87,
                    88,
                    63
                ],
                "msg": [
                    64,
                    71,
                    73,
                    76,
                    109,
                    48,
                    112,
                    50,
                    51,
                    52,
                    53,
                    54,
                    85,
                    58,
                    61
                ],
                "MIMEMultipart": [
                    48
                ],
                "MIMENonMultipart": [
                    50
                ],
                "mimetype.split": [
                    50,
                    66
                ],
                "mimetype": [
                    65,
                    50,
                    66
                ],
                "COMMASPACE.join": [
                    58,
                    52
                ],
                "COMMASPACE": [
                    58,
                    52
                ],
                "to": [
                    103,
                    76,
                    81,
                    52,
                    55,
                    87,
                    88,
                    95
                ],
                "formatdate": [
                    53
                ],
                "subject": [
                    103,
                    76,
                    81,
                    54,
                    87,
                    88,
                    95
                ],
                "rcpts": [
                    57,
                    85,
                    55
                ],
                "cc": [
                    103,
                    76,
                    81,
                    87,
                    56,
                    57,
                    58,
                    88,
                    95
                ],
                "rcpts.extend": [
                    57
                ],
                "charset": [
                    64,
                    60,
                    61
                ],
                "msg.set_charset": [
                    61
                ],
                "msg.attach": [
                    64,
                    71
                ],
                "MIMEText": [
                    64
                ],
                "body": [
                    64,
                    73,
                    76
                ],
                "attach_name": [
                    65,
                    70
                ],
                "f": [
                    65,
                    67
                ],
                "part": [
                    66,
                    67,
                    68,
                    69,
                    71
                ],
                "MIMEBase": [
                    66
                ],
                "part.set_payload": [
                    67
                ],
                "f.read": [
                    67
                ],
                "Encoders.encode_base64": [
                    68
                ],
                "Encoders": [
                    68
                ],
                "part.add_header": [
                    69
                ],
                "msg.set_payload": [
                    73
                ],
                "_callback": [
                    75,
                    76
                ],
                "logger.debug": [
                    79
                ],
                "len": [
                    88,
                    82,
                    87
                ],
                "dfd": [
                    89,
                    90,
                    85,
                    86
                ],
                "self._sendmail": [
                    85
                ],
                "msg.as_string": [
                    85
                ],
                "dfd.addCallbacks": [
                    86
                ],
                "self._sent_ok": [
                    86
                ],
                "self._sent_failed": [
                    86
                ],
                "reactor.addSystemEventTrigger": [
                    89
                ],
                "reactor": [
                    89,
                    117,
                    119
                ],
                "logger.info": [
                    93
                ],
                "nattachs": [
                    96,
                    104
                ],
                "errstr": [
                    104,
                    99
                ],
                "str": [
                    99
                ],
                "failure.value": [
                    99
                ],
                "failure": [
                    99
                ],
                "logger.error": [
                    100
                ],
                "StringIO": [
                    109
                ],
                "d": [
                    112,
                    121,
                    110
                ],
                "defer.Deferred": [
                    110
                ],
                "defer": [
                    110
                ],
                "factory": [
                    114,
                    119,
                    117,
                    111
                ],
                "ESMTPSenderFactory": [
                    111
                ],
                "to_addrs": [
                    112
                ],
                "factory.noisy": [
                    114
                ],
                "reactor.connectSSL": [
                    117
                ],
                "ssl.ClientContextFactory": [
                    117
                ],
                "ssl": [
                    117
                ],
                "reactor.connectTCP": [
                    119
                ]
            },
            "filtered_variables_in_file": {
                "six.PY2": [
                    15
                ],
                "six": [
                    15
                ],
                "logger": [
                    24,
                    100,
                    93,
                    79
                ],
                "logging.getLogger": [
                    24
                ],
                "logging": [
                    24
                ],
                "self.smtphost": [
                    119,
                    117,
                    31
                ],
                "self": [
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    78,
                    111,
                    113,
                    51,
                    116,
                    85,
                    86,
                    117,
                    119,
                    31
                ],
                "smtphost": [
                    31
                ],
                "self.smtpport": [
                    32,
                    117,
                    119
                ],
                "smtpport": [
                    32
                ],
                "self.smtpuser": [
                    33,
                    111
                ],
                "smtpuser": [
                    33
                ],
                "self.smtppass": [
                    34,
                    111
                ],
                "smtppass": [
                    34
                ],
                "self.smtptls": [
                    113,
                    35
                ],
                "smtptls": [
                    35
                ],
                "self.smtpssl": [
                    116,
                    36
                ],
                "smtpssl": [
                    36
                ],
                "self.mailfrom": [
                    51,
                    37,
                    111
                ],
                "mailfrom": [
                    37
                ],
                "self.debug": [
                    78,
                    38
                ],
                "debug": [
                    38
                ],
                "cls": [
                    42
                ],
                "settings": [
                    42,
                    43,
                    44
                ],
                "settings.getint": [
                    43
                ],
                "settings.getbool": [
                    44
                ],
                "attachs": [
                    65,
                    76,
                    47,
                    82,
                    87,
                    88,
                    63
                ],
                "msg": [
                    64,
                    71,
                    73,
                    76,
                    109,
                    48,
                    112,
                    50,
                    51,
                    52,
                    53,
                    54,
                    85,
                    58,
                    61
                ],
                "MIMEMultipart": [
                    48
                ],
                "MIMENonMultipart": [
                    50
                ],
                "mimetype.split": [
                    50,
                    66
                ],
                "mimetype": [
                    65,
                    50,
                    66
                ],
                "COMMASPACE.join": [
                    58,
                    52
                ],
                "COMMASPACE": [
                    58,
                    52
                ],
                "to": [
                    103,
                    76,
                    81,
                    52,
                    55,
                    87,
                    88,
                    95
                ],
                "formatdate": [
                    53
                ],
                "subject": [
                    103,
                    76,
                    81,
                    54,
                    87,
                    88,
                    95
                ],
                "rcpts": [
                    57,
                    85,
                    55
                ],
                "cc": [
                    103,
                    76,
                    81,
                    87,
                    56,
                    57,
                    58,
                    88,
                    95
                ],
                "rcpts.extend": [
                    57
                ],
                "charset": [
                    64,
                    60,
                    61
                ],
                "msg.set_charset": [
                    61
                ],
                "msg.attach": [
                    64,
                    71
                ],
                "MIMEText": [
                    64
                ],
                "body": [
                    64,
                    73,
                    76
                ],
                "attach_name": [
                    65,
                    70
                ],
                "f": [
                    65,
                    67
                ],
                "part": [
                    66,
                    67,
                    68,
                    69,
                    71
                ],
                "MIMEBase": [
                    66
                ],
                "part.set_payload": [
                    67
                ],
                "f.read": [
                    67
                ],
                "Encoders.encode_base64": [
                    68
                ],
                "Encoders": [
                    68
                ],
                "part.add_header": [
                    69
                ],
                "msg.set_payload": [
                    73
                ],
                "_callback": [
                    75,
                    76
                ],
                "logger.debug": [
                    79
                ],
                "dfd": [
                    89,
                    90,
                    85,
                    86
                ],
                "self._sendmail": [
                    85
                ],
                "msg.as_string": [
                    85
                ],
                "dfd.addCallbacks": [
                    86
                ],
                "self._sent_ok": [
                    86
                ],
                "self._sent_failed": [
                    86
                ],
                "reactor.addSystemEventTrigger": [
                    89
                ],
                "reactor": [
                    89,
                    117,
                    119
                ],
                "logger.info": [
                    93
                ],
                "nattachs": [
                    96,
                    104
                ],
                "errstr": [
                    104,
                    99
                ],
                "failure.value": [
                    99
                ],
                "failure": [
                    99
                ],
                "logger.error": [
                    100
                ],
                "StringIO": [
                    109
                ],
                "d": [
                    112,
                    121,
                    110
                ],
                "defer.Deferred": [
                    110
                ],
                "defer": [
                    110
                ],
                "factory": [
                    114,
                    119,
                    117,
                    111
                ],
                "ESMTPSenderFactory": [
                    111
                ],
                "to_addrs": [
                    112
                ],
                "factory.noisy": [
                    114
                ],
                "reactor.connectSSL": [
                    117
                ],
                "ssl.ClientContextFactory": [
                    117
                ],
                "ssl": [
                    117
                ],
                "reactor.connectTCP": [
                    119
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/scrapy_9/tests/test_mail.py",
                "test_function": "test_send_single_values_to_and_cc",
                "test_function_code": "    def test_send_single_values_to_and_cc(self):\n        mailsender = MailSender(debug=True)\n        mailsender.send(to='test@scrapy.org', subject='subject', body='body',\n                        cc='test@scrapy.org', _callback=self._catch_mail_sent)",
                "test_error": "AttributeError: 'str' object has no attribute 'extend'",
                "full_test_error": "self = <tests.test_mail.MailSenderTest testMethod=test_send_single_values_to_and_cc>\n\n    def test_send_single_values_to_and_cc(self):\n        mailsender = MailSender(debug=True)\n>       mailsender.send(to='test@scrapy.org', subject='subject', body='body',\n                        cc='test@scrapy.org', _callback=self._catch_mail_sent)\n\n/Volumes/SSD2T/bgp_envs/repos/scrapy_9/tests/test_mail.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <scrapy.mail.MailSender object at 0x110c89fa0>, to = 'test@scrapy.org'\nsubject = 'subject', body = 'body', cc = 'test@scrapy.org', attachs = ()\nmimetype = 'text/plain', charset = None\n_callback = <bound method MailSenderTest._catch_mail_sent of <tests.test_mail.MailSenderTest testMethod=test_send_single_values_to_and_cc>>\n\n    def send(self, to, subject, body, cc=None, attachs=(), mimetype='text/plain', charset=None, _callback=None):\n        if attachs:\n            msg = MIMEMultipart()\n        else:\n            msg = MIMENonMultipart(*mimetype.split('/', 1))\n        msg['From'] = self.mailfrom\n        msg['To'] = COMMASPACE.join(to)\n        msg['Date'] = formatdate(localtime=True)\n        msg['Subject'] = subject\n        rcpts = to[:]\n        if cc:\n>           rcpts.extend(cc)\nE           AttributeError: 'str' object has no attribute 'extend'\n\n/Volumes/SSD2T/bgp_envs/repos/scrapy_9/scrapy/mail.py:57: AttributeError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}