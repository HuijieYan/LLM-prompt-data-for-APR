{
    "scrapy": [
        {
            "bugID": 27,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 56,
            "file_name": "scrapy/downloadermiddlewares/redirect.py",
            "replace_code": "def process_response(self, request, response, spider):\n    from urllib.parse import urljoin\n    handle_httpstatus_list = getattr(spider, 'handle_httpstatus_list', [])\n    handle_httpstatus_all = spider.handle_httpstatus_all if hasattr(spider, 'handle_httpstatus_all') else False\n    \n    if (request.meta.get('dont_redirect', False) or\n           response.status in handle_httpstatus_list or (handle_httpstatus_all and response.status >= 400)):\n        return response\n    \n    if request.method == 'HEAD':\n        if response.status in [301, 302, 303, 307] and 'Location' in response.headers:\n            redirected_url = urljoin(request.url, response.headers['Location'].decode('utf-8'))\n            redirected = request.replace(url=redirected_url)\n            return self._redirect(redirected, request, spider, response.status)\n        else:\n            return response\n    \n    if response.status in [302, 303] and 'Location' in response.headers:\n        redirected_url = urljoin(request.url, response.headers['Location'].decode('utf-8'))\n        redirected = self._redirect_request_using_get(request, redirected_url)\n        return self._redirect(redirected, request, spider, response.status)\n    \n    if response.status in [301, 307] and 'Location' in response.headers:\n        redirected_url = urljoin(request.url, response.headers['Location'].decode('utf-8'))\n        redirected = request.replace(url=redirected_url)\n        return self._redirect(redirected, request, spider, response.status)\n    \n    return response"
        }
    ]
}