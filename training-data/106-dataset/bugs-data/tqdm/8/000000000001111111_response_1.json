{
    "tqdm": [
        {
            "bugID": 8,
            "bitvector": {
                "1.1.1": 0,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 0,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 0,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 0,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 103,
            "file_name": "_tqdm.py",
            "replace_code": "def format_meter(n, total, elapsed, ncols=None, prefix='',\n                 ascii=False, unit='it', unit_scale=False, rate=None,\n                 bar_format=None):\n\n\n    elapsed_str = '{:0>8.1f}'.format(elapsed)\n    rate_fmt = f'{rate:.2f}s/{unit}' if rate else '?/{unit}'\n    n_fmt = f'{n}' if not unit_scale else '{0:.2e}'.format(n)\n    total_fmt = f'{total}' if total and unit_scale else ''\n    \n    full_bar_length = ncols - len(prefix) - len(elapsed_str) - len(rate_fmt) - 7\n    \n    if total:\n        frac = n / total\n        percentage = frac * 100\n        remaining_str = format_interval((total - n) / rate) if rate else '?'\n        bar_length = int(frac * full_bar_length) if full_bar_length > 0 else 0\n    \n        full_bar = '#' * bar_length + ' ' * (full_bar_length - bar_length)\n        l_bar = (prefix if prefix else '') + '{:3.0f}%|'.format(percentage)\n        r_bar = '| {0}/{1} [{2}, {3}] {4}'.format(n_fmt, total_fmt, elapsed_str, remaining_str, rate_fmt)\n    \n        return l_bar + full_bar + r_bar\n    \n    else:\n        return (prefix if prefix else '') + '{0} {1} [{2}] {3}'.format(n_fmt, unit, elapsed_str, rate_fmt)"
        }
    ]
}