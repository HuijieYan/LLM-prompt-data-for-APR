{
    "1.1.1": "def __len__(self):\n    return self.total if self.iterable is None else \\\n        (self.iterable.shape[0] if hasattr(self.iterable, \"shape\")\n         else len(self.iterable) if hasattr(self.iterable, \"__len__\")\n         else self.total)\n",
    "1.1.2": null,
    "1.2.1": "class tqdm(object)",
    "1.2.2": "Decorate an iterable object, returning an iterator which acts exactly\nlike the original iterable, but prints a dynamically updating\nprogressbar every time a value is requested.",
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/tqdm_6/tqdm/_tqdm.py",
    "1.3.2": null,
    "1.4.1": [
        "@with_setup(pretest, posttest)\ndef test_imap():\n    \"\"\"Test multiprocessing.Pool\"\"\"\n    try:\n        from multiprocessing import Pool\n    except ImportError:\n        raise SkipTest\n\n    pool = Pool()\n    res = list(tqdm(pool.imap(incr, range(100)), disable=True))\n    assert res[-1] == 100"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/tqdm_6/tqdm/tests/tests_synchronisation.py"
    ],
    "2.1.1": [
        [
            "E       AttributeError: 'tqdm' object has no attribute 'total'"
        ]
    ],
    "2.1.2": [
        [
            "@with_setup(pretest, posttest)\n    def test_imap():\n        \"\"\"Test multiprocessing.Pool\"\"\"\n        try:\n            from multiprocessing import Pool\n        except ImportError:\n            raise SkipTest\n    \n        pool = Pool()\n>       res = list(tqdm(pool.imap(incr, range(100)), disable=True))\n\ntqdm/tests/tests_synchronisation.py:180: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <[AttributeError(\"'tqdm' object has no attribute 'total'\") raised in repr()] tqdm object at 0x107595f90>\n\n    def __len__(self):\n        return self.total if self.iterable is None else \\\n            (self.iterable.shape[0] if hasattr(self.iterable, \"shape\")\n             else len(self.iterable) if hasattr(self.iterable, \"__len__\")\n>            else self.total)",
            "\ntqdm/_tqdm.py:856: AttributeError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": null,
    "2.1.6": null,
    "3.1.1": [
        "'tqdm' object has no attribute 'total' when using 'disable' and multiprocessing 'Pool'\n"
    ],
    "3.1.2": [
        "The following MWE shows how to get the error message described in the title:\n\nfrom tqdm import tqdm\nfrom multiprocessing import Pool\n\ndef f(arg):\n    pass\n\nif __name__ == '__main__':\n    pool = Pool()\n    list(tqdm(pool.imap(f, range(100)), disable=True))\ntqdm Version: 4.22.0\npython 3.6.0\nWin64\nIt works, when the disable=True is removed or set to False. But it should also work for the disabled case I would guess.\n"
    ]
}