{
    "1.1.1": "def url_concat(url, args):\n    \n    parsed_url = urlparse(url)\n    if isinstance(args, dict):\n        parsed_query = parse_qsl(parsed_url.query, keep_blank_values=True)\n        parsed_query.extend(args.items())\n    elif isinstance(args, list) or isinstance(args, tuple):\n        parsed_query = parse_qsl(parsed_url.query, keep_blank_values=True)\n        parsed_query.extend(args)\n    else:\n        err = \"'args' parameter should be dict, list or tuple. Not {0}\".format(\n            type(args))\n        raise TypeError(err)\n    final_query = urlencode(parsed_query)\n    url = urlunparse((\n        parsed_url[0],\n        parsed_url[1],\n        parsed_url[2],\n        parsed_url[3],\n        final_query,\n        parsed_url[5]))\n    return url\n",
    "1.1.2": "Concatenate url and arguments regardless of whether\nurl has existing query parameters.\n\n``args`` may be either a dictionary or a list of key-value pairs\n(the latter allows for multiple values with the same key.\n\n>>> url_concat(\"http://example.com/foo\", dict(c=\"d\"))\n'http://example.com/foo?c=d'\n>>> url_concat(\"http://example.com/foo?a=b\", dict(c=\"d\"))\n'http://example.com/foo?a=b&c=d'\n>>> url_concat(\"http://example.com/foo?a=b\", [(\"c\", \"d\"), (\"c\", \"d2\")])\n'http://example.com/foo?a=b&c=d&c=d2'",
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/tornado_9/tornado/httputil.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_url_concat_none_params(self):\n        url = url_concat(\n            \"https://localhost/path?r=1&t=2\",\n            None,\n        )\n        self.assertEqual(url, \"https://localhost/path?r=1&t=2\")"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/tornado_9/tornado/test/httputil_test.py"
    ],
    "2.1.1": [
        [
            "E           TypeError: 'args' parameter should be dict, list or tuple. Not <class 'NoneType'>"
        ]
    ],
    "2.1.2": [
        [
            "self = <tornado.test.httputil_test.TestUrlConcat testMethod=test_url_concat_none_params>\n\n    def test_url_concat_none_params(self):\n        url = url_concat(\n            \"https://localhost/path?r=1&t=2\",\n>           None,\n        )\n\ntornado/test/httputil_test.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nurl = 'https://localhost/path?r=1&t=2', args = None\n\n    def url_concat(url, args):\n        \"\"\"Concatenate url and arguments regardless of whether\n        url has existing query parameters.\n    \n        ``args`` may be either a dictionary or a list of key-value pairs\n        (the latter allows for multiple values with the same key.\n    \n        >>> url_concat(\"http://example.com/foo\", dict(c=\"d\"))\n        'http://example.com/foo?c=d'\n        >>> url_concat(\"http://example.com/foo?a=b\", dict(c=\"d\"))\n        'http://example.com/foo?a=b&c=d'\n        >>> url_concat(\"http://example.com/foo?a=b\", [(\"c\", \"d\"), (\"c\", \"d2\")])\n        'http://example.com/foo?a=b&c=d&c=d2'\n        \"\"\"\n        parsed_url = urlparse(url)\n        if isinstance(args, dict):\n            parsed_query = parse_qsl(parsed_url.query, keep_blank_values=True)\n            parsed_query.extend(args.items())\n        elif isinstance(args, list) or isinstance(args, tuple):\n            parsed_query = parse_qsl(parsed_url.query, keep_blank_values=True)\n            parsed_query.extend(args)\n        else:\n            err = \"'args' parameter should be dict, list or tuple. Not {0}\".format(\n                type(args))\n>           raise TypeError(err)",
            "\ntornado/httputil.py:616: TypeError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": [
        [
            {
                "url": "'https://localhost/path?r=1&t=2'"
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "url": "str"
            },
            {}
        ]
    ],
    "3.1.1": [
        "cp.get_url reports 'args' parameter should be dict, list or tuple. Not <type 'NoneType'>\n"
    ],
    "3.1.2": [
        "Description of Issue/Question\n# salt-call --local cp.get_url \"http://somehost/managed/afile\"\n...\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/salt/cli/caller.py\", line 197, in call\n    ret['return'] = func(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/salt/modules/cp.py\", line 320, in get_url\n    result = _client().get_url(path, dest, makedirs, saltenv)\n  File \"/usr/lib/python2.7/site-packages/salt/fileclient.py\", line 625, in get_url\n    **get_kwargs\n  File \"/usr/lib/python2.7/site-packages/salt/utils/http.py\", line 181, in query\n    url_full = tornado.httputil.url_concat(url, params)\n  File \"/usr/lib64/python2.7/site-packages/tornado/httputil.py\", line 615, in url_concat\n    raise TypeError(err)\nTypeError: 'args' parameter should be dict, list or tuple. Not <type 'NoneType'>\nFrom this particular host, wget the same url worked. Apache httpd log did not report any errors. This issue only happens on this host only and happens every time. It could be a host configuration issue but just not sure what by looking at the code.\n\nSame issue with 2011.16.{1,2,3}.\n\nSetup\n(Please provide relevant configs and/or SLS files (Be sure to remove sensitive info).)\n\nSteps to Reproduce Issue\n(Include debug logs if possible and relevant.)\n\nVersions Report\n(Provided by running salt --versions-report. Please also mention any differences in master/minion versions.)\n\n# salt-call --versions-report\nSalt Version:\n           Salt: 2016.11.3\n\nDependency Versions:\n           cffi: Not Installed\n       cherrypy: Not Installed\n       dateutil: Not Installed\n          gitdb: Not Installed\n      gitpython: Not Installed\n          ioflo: Not Installed\n         Jinja2: 2.8\n        libgit2: Not Installed\n        libnacl: Not Installed\n       M2Crypto: Not Installed\n           Mako: Not Installed\n   msgpack-pure: Not Installed\n msgpack-python: 0.4.8\n   mysql-python: Not Installed\n      pycparser: Not Installed\n       pycrypto: 2.6.1\n         pygit2: Not Installed\n         Python: 2.7.12 (default, Nov  2 2016, 22:29:13)\n   python-gnupg: Not Installed\n         PyYAML: 3.11\n          PyZMQ: 16.0.2\n           RAET: Not Installed\n          smmap: Not Installed\n        timelib: Not Installed\n        Tornado: 4.5b1\n            ZMQ: 4.1.6\n\nSystem Versions:\n           dist: centos 7.1.1503 Core\n        machine: x86_64\n        release: 3.10.0-229.el7.x86_64\n         system: Linux\n        version: CentOS Linux 7.1.1503 Core\n"
    ]
}