{
    "keras:25": {
        "/Volumes/SSD2T/bgp_envs/repos/keras_25/keras/applications/imagenet_utils.py": {
            "buggy_functions": [
                {
                    "function_name": "_preprocess_numpy_input",
                    "function_code": "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        if x.ndim == 3:\n            x[0, :, :] -= mean[0]\n            x[1, :, :] -= mean[1]\n            x[2, :, :] -= mean[2]\n            if std is not None:\n                x[0, :, :] /= std[0]\n                x[1, :, :] /= std[1]\n                x[2, :, :] /= std[2]\n        else:\n            x[:, 0, :, :] -= mean[0]\n            x[:, 1, :, :] -= mean[1]\n            x[:, 2, :, :] -= mean[2]\n            if std is not None:\n                x[:, 0, :, :] /= std[0]\n                x[:, 1, :, :] /= std[1]\n                x[:, 2, :, :] /= std[2]\n    else:\n        x[..., 0] -= mean[0]\n        x[..., 1] -= mean[1]\n        x[..., 2] -= mean[2]\n        if std is not None:\n            x[..., 0] /= std[0]\n            x[..., 1] /= std[1]\n            x[..., 2] /= std[2]\n    return x\n",
                    "decorators": [],
                    "docstring": "Preprocesses a Numpy array encoding a batch of images.\n\n# Arguments\n    x: Input array, 3D or 4D.\n    data_format: Data format of the image array.\n    mode: One of \"caffe\", \"tf\" or \"torch\".\n        - caffe: will convert the images from RGB to BGR,\n            then will zero-center each color channel with\n            respect to the ImageNet dataset,\n            without scaling.\n        - tf: will scale pixels between -1 and 1,\n            sample-wise.\n        - torch: will scale pixels between 0 and 1 and then\n            will normalize each channel with respect to the\n            ImageNet dataset.\n\n# Returns\n    Preprocessed Numpy array.",
                    "start_line": 21,
                    "end_line": 89,
                    "variables": {
                        "mode": [
                            41,
                            46
                        ],
                        "x": [
                            42,
                            43,
                            44,
                            47,
                            53,
                            54,
                            56,
                            59,
                            65,
                            66,
                            67,
                            68,
                            70,
                            71,
                            72,
                            74,
                            75,
                            76,
                            78,
                            79,
                            80,
                            82,
                            83,
                            84,
                            86,
                            87,
                            88,
                            89
                        ],
                        "mean": [
                            66,
                            67,
                            68,
                            74,
                            75,
                            76,
                            48,
                            82,
                            83,
                            84,
                            60
                        ],
                        "std": [
                            69,
                            70,
                            71,
                            72,
                            77,
                            78,
                            79,
                            80,
                            49,
                            85,
                            86,
                            87,
                            88,
                            61
                        ],
                        "data_format": [
                            64,
                            51
                        ],
                        "x.ndim": [
                            65,
                            53
                        ]
                    },
                    "filtered_variables": {
                        "mode": [
                            41,
                            46
                        ],
                        "x": [
                            42,
                            43,
                            44,
                            47,
                            53,
                            54,
                            56,
                            59,
                            65,
                            66,
                            67,
                            68,
                            70,
                            71,
                            72,
                            74,
                            75,
                            76,
                            78,
                            79,
                            80,
                            82,
                            83,
                            84,
                            86,
                            87,
                            88,
                            89
                        ],
                        "mean": [
                            66,
                            67,
                            68,
                            74,
                            75,
                            76,
                            48,
                            82,
                            83,
                            84,
                            60
                        ],
                        "std": [
                            69,
                            70,
                            71,
                            72,
                            77,
                            78,
                            79,
                            80,
                            49,
                            85,
                            86,
                            87,
                            88,
                            61
                        ],
                        "data_format": [
                            64,
                            51
                        ],
                        "x.ndim": [
                            65,
                            53
                        ]
                    },
                    "diff_line_number": 40,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "x": {
                                    "variable_value": "array([[[[8.44619867e+01, 1.55074033e+02, 2.99510225e+01],\n         [7.67528174e+00, 1.83463762e+02, 2.16489972e+02],\n         [1.85491746e+02, 1.64614372e+02, 7.42191532e+01],\n         [1.10392746e+02, 4.40911199e+01, 4.97250370e+01],\n         [9.55439301e+01, 4.16249753e+01, 9.19276567e+01],\n         [1.95222538e+02, 2.17198885e+02, 9.89548146e+01],\n         [9.02613703e+01, 2.26440555e+02, 1.09823339e+02],\n         [2.14047825e+02, 1.58416542e+02, 1.69323469e+02],\n         [2.01381321e+02, 1.28951687e+02, 6.61637647e+00],\n         [5.10863409e+01, 6.42122295e+01, 6.58533648e+01]],\n\n        [[2.35133227e+01, 2.29141432e+02, 1.68291093e+02],\n         [3.88761880e+01, 1.51774138e+02, 4.83005762e+01],\n         [1.80584119e+02, 2.12756988e+02, 1.58992150e+02],\n         [4.34471988e+01, 3.19707310e+01, 2.49450765e+02],\n         [1.83440575e+02, 2.07524360e+02, 7.22659439e+01],\n         [1.48781771e+02, 2.48498649e+02, 1.12112049e+01],\n         [2.04905156e+02, 1.25160329e+02, 2.08159876e+02],\n         [4.84812716e+01, 6.42003413e+01, 2.36353313e+02],\n         [5.53764094e+01, 1.30258175e+02, 1.35825429e+00],\n         [1.05970920e+02, 1.95191680e+02, 6.25797185e+01]],\n\n        [[1.55889536e+02, 1.62226905e+02, 1.46327880e+02],\n         [4.06272671e+01, 1.80558688e+02, 4.93383479e+01],\n         [2.38336196e+02, 1.15796510e+02, 2.48940731e+02],\n         [2.15276950e+02, 2.25555273e+02, 1.74670636e+02],\n         [3.93379102e+01, 1.84428614e+02, 1.13058373e+01],\n         [1.60887333e+02, 2.25887122e+02, 2.08215342e+02],\n         [3.38154415e+01, 1.73335193e+02, 1.36744854e+01],\n         [7.60001275e+01, 1.21025075e+02, 1.32715178e+02],\n         [1.98889736e+02, 4.60466888e+01, 2.53854790e+02],\n         [2.00777080e+02, 1.42266235e+02, 1.77302660e+02]],\n\n        [[6.39816140e+01, 2.02663086e+02, 1.47423620e+02],\n         [3.05600034e+01, 1.36180235e+02, 2.20513800e+02],\n         [5.21101504e+01, 5.65400797e+01, 3.21582585e+01],\n         [1.61090668e+02, 5.50942244e+01, 8.48537407e+01],\n         [1.73515604e+02, 1.68567198e+02, 9.01575820e+01],\n         [1.92037275e+02, 2.52257746e+02, 1.16323350e+02],\n         [1.98897907e+02, 1.75076523e+02, 2.29284133e+02],\n         [2.98922853e+01, 2.31339233e+02, 2.00215117e+02],\n         [2.09420039e+02, 2.06095694e+02, 5.85690476e+01],\n         [7.17975895e+01, 1.87528633e+02, 2.48990137e+01]],\n\n        [[1.00757990e+02, 2.43638066e+02, 6.20051195e+01],\n         [1.38139428e+02, 6.54796114e+01, 1.70063214e+02],\n         [1.06101164e+02, 2.48865698e+02, 1.39800583e+02],\n         [7.80154448e+01, 2.90574636e+01, 1.76989000e+02],\n         [2.23411344e+02, 2.25062518e+02, 1.21307443e+01],\n         [2.89686370e+01, 1.37197582e+02, 8.10952296e+01],\n         [1.85558238e+02, 2.25605853e+01, 7.32626309e+01],\n         [1.53656832e+02, 5.51200601e+01, 3.08337889e+01],\n         [3.96177881e+01, 2.32564715e+02, 8.29173499e+01],\n         [2.13397589e+02, 1.99214324e+02, 2.54615416e+02]],\n\n        [[6.92774957e-01, 5.67465523e+01, 1.13115111e+02],\n         [1.11533304e+01, 3.84361226e+01, 1.18440301e+02],\n         [9.52143956e-02, 1.38344259e+02, 2.34107476e+02],\n         [1.16403553e+02, 1.24315389e+02, 1.73740912e+02],\n         [2.25279063e+02, 2.01520681e+02, 1.09149057e+02],\n         [5.39859873e+00, 5.91188746e+01, 2.07678144e+02],\n         [2.25241455e+02, 2.00735436e+02, 1.29154069e+02],\n         [9.24172482e+01, 1.63614014e+02, 2.12767996e+02],\n         [6.52943819e+01, 4.44878225e+01, 1.36376333e+02],\n         [2.06219014e+02, 2.46707332e+00, 1.41386958e+02]],\n\n        [[5.71152225e+01, 2.25654956e+02, 2.04678379e+02],\n         [4.35207905e+01, 1.33513079e+01, 1.98072381e+02],\n         [1.85215936e+02, 1.94027930e+02, 2.46605308e+02],\n         [8.59113944e+01, 1.60027037e+02, 1.65865997e+02],\n         [2.32808556e+02, 1.65829101e+01, 3.56807492e+00],\n         [1.23732211e+02, 4.93626097e+00, 1.79411264e+02],\n         [1.72727837e+02, 5.90790301e+01, 1.61273738e+02],\n         [6.18155022e+01, 7.84977919e+01, 9.72217397e+01],\n         [9.47418319e+01, 1.03668495e+02, 1.18031968e+02],\n         [1.12343802e+02, 1.18936766e+02, 1.71482060e+02]],\n\n        [[1.63142884e+02, 2.16046473e+02, 1.73326222e+02],\n         [4.54974942e+01, 1.53481260e+02, 1.11029556e+02],\n         [6.90404678e+01, 6.64725275e+01, 1.69234009e+02],\n         [1.60354113e+02, 7.06036681e+01, 1.90241828e+02],\n         [3.60652294e+01, 1.15808574e+01, 1.49086315e+00],\n         [1.70542347e+02, 8.38019757e+01, 1.98295500e+02],\n         [2.46280544e+02, 4.44790403e+00, 1.12130812e+02],\n         [4.83458196e+01, 1.61558789e+01, 9.50430919e+01],\n         [1.55183285e+02, 1.17442042e+02, 6.50572749e+01],\n         [3.67697909e+01, 1.78729817e+01, 2.29974017e+02]],\n\n        [[5.90569227e+01, 2.26050844e+02, 9.85208996e+01],\n         [5.55272797e+01, 7.67757290e+01, 6.27423952e+01],\n         [5.50554215e+01, 2.10304092e+02, 8.28963278e+01],\n         [1.56109200e+02, 1.88251877e+02, 1.04294279e+02],\n         [1.90138734e+02, 1.28801110e+02, 1.17408774e+02],\n         [1.34393850e+01, 2.50559421e+02, 1.54380785e+02],\n         [9.55340102e+01, 7.12989111e+01, 2.17668748e+02],\n         [7.33050237e+01, 4.54700347e+01, 1.46213727e+02],\n         [4.97181069e+01, 1.84597729e+02, 2.56739828e+01],\n         [1.84112341e+02, 1.52893564e+02, 1.15989671e+02]],\n\n        [[1.19784141e+02, 7.11410802e+01, 1.17209829e+02],\n         [1.02123099e+02, 6.64672162e+01, 1.12417880e+02],\n         [1.65794118e+02, 1.09449971e+02, 2.33367157e+02],\n         [1.02591891e+02, 3.04949233e+01, 2.42062803e+02],\n         [4.35997917e+01, 1.90862925e+02, 8.59197557e+01],\n         [2.35912184e+02, 1.30510708e+02, 1.42991743e+01],\n         [1.65593357e+02, 2.50186056e+02, 9.79190219e+01],\n         [1.55692859e+02, 1.79233263e+02, 2.40396731e+02],\n         [2.28954792e+02, 2.50961991e+02, 1.48281752e+01],\n         [2.11996825e+02, 1.91069907e+02, 2.09025044e+02]]],\n\n\n       [[[6.62777339e+01, 2.95329379e+01, 1.82950724e+01],\n         [2.15268980e+02, 2.11418523e+02, 2.07977211e+02],\n         [1.51484463e+02, 1.02498079e+02, 1.75829263e+01],\n         [2.29466561e+02, 1.64121032e+02, 1.40512592e+02],\n         [4.06505771e+01, 2.00777429e+02, 2.23051342e+02],\n         [1.43114491e+02, 2.15690924e+02, 6.03851598e+01],\n         [9.04672613e+01, 3.31112986e+01, 3.30436349e+01],\n         [1.93333899e+02, 5.34199648e+01, 2.15975436e+02],\n         [2.15107672e+02, 2.03042038e+02, 2.44193813e+02],\n         [2.88416952e+00, 1.86720723e+02, 1.20172555e+02]],\n\n        [[1.11914317e+02, 9.23970688e+00, 2.15730056e+02],\n         [1.44094918e+02, 5.98482855e+01, 7.05012278e+01],\n         [3.02670327e+01, 9.85580541e+01, 5.72274488e+00],\n         [2.04640397e+02, 1.59324331e+02, 4.49301625e-01],\n         [1.76786954e+02, 2.13939665e+02, 1.59448099e+02],\n         [1.08532597e+02, 1.13110556e+02, 1.67396654e+02],\n         [5.36906400e+00, 9.14000150e+01, 1.78148543e+02],\n         [1.75958728e+02, 1.75694303e+02, 7.20603350e+01],\n         [1.42463508e+01, 2.77089378e+01, 2.47600370e+02],\n         [8.78930295e+01, 3.70034552e+00, 1.34915489e+02]],\n\n        [[1.77735109e+02, 8.05839160e+01, 2.13616116e+02],\n         [1.49712011e+01, 9.85377006e+01, 1.73788104e+02],\n         [2.34235357e+02, 2.37916951e+02, 4.18609188e+01],\n         [4.49875306e+01, 1.65175123e+02, 1.80283614e+02],\n         [2.35096433e+02, 1.07882866e+02, 1.18614669e+02],\n         [1.78938789e+02, 1.18573834e+02, 4.07275638e+00],\n         [2.43068654e+02, 2.54166371e+02, 7.79656965e+01],\n         [6.90654336e+01, 1.52064059e+02, 9.25602194e+01],\n         [1.01154593e+02, 8.47937730e+01, 2.06910212e+02],\n         [7.26931752e+01, 2.18752754e+02, 4.98847774e-01]],\n\n        [[2.25072416e+02, 2.28262230e+02, 1.73192657e+02],\n         [1.05979825e+02, 1.67601433e+02, 2.33304789e+02],\n         [2.44872991e+02, 1.96661416e+02, 8.11439909e+01],\n         [1.74243865e+02, 2.53430054e+02, 2.21814608e+02],\n         [1.64355354e+02, 5.66857464e+01, 2.14084172e+02],\n         [2.01195658e+02, 2.16596747e+02, 2.50229255e+02],\n         [8.41441128e+01, 1.08650552e+02, 2.13435996e+01],\n         [1.10351072e+02, 6.45148798e+01, 2.46768321e+02],\n         [1.27398293e+02, 2.27665581e+02, 1.57353325e+02],\n         [2.54732709e+01, 1.08545234e+02, 5.65539930e+01]],\n\n        [[1.66062684e+02, 1.09391728e+02, 1.61624913e+02],\n         [5.36721589e+01, 1.92372744e+02, 3.86839390e+01],\n         [1.68519765e+02, 1.78365211e+02, 1.35545146e+02],\n         [1.20689361e+01, 2.49663342e+02, 2.03996681e+02],\n         [1.77317499e+02, 2.03814998e+02, 8.91194243e+01],\n         [2.02845584e+02, 2.00288791e+02, 8.80413373e+01],\n         [3.88829521e+01, 2.40056392e+02, 3.06115657e+01],\n         [1.60006360e+01, 2.46525667e+02, 6.61529807e+01],\n         [1.16552879e+02, 2.08674730e+02, 2.54852782e+02],\n         [1.44023227e+02, 2.14495142e+02, 2.86602766e+01]],\n\n        [[6.24858079e+01, 1.97482790e+02, 6.84029140e+01],\n         [3.35896203e+01, 9.66015699e+01, 2.89280938e+01],\n         [1.50554376e+02, 5.22373099e+00, 2.35221769e+02],\n         [2.10708198e+00, 1.40222422e+02, 2.82858617e+01],\n         [1.94947269e+02, 1.82732174e+02, 7.18394437e+01],\n         [1.95457920e+02, 2.35202349e+02, 1.49723767e+02],\n         [2.28578868e+02, 5.73458614e+01, 2.00831406e+01],\n         [8.64201309e+01, 2.27620199e+02, 6.86327502e+01],\n         [2.11769443e+02, 2.08031648e+02, 2.14735858e+02],\n         [1.72029696e+02, 8.99623714e+01, 8.65572936e+01]],\n\n        [[1.10223927e+02, 5.03937358e+01, 1.51711868e+02],\n         [8.91039286e+01, 1.19583274e+02, 1.96152427e+02],\n         [1.41344611e+02, 1.49859577e+02, 1.97150232e+02],\n         [1.57000654e+02, 2.27119405e+02, 6.87814413e+01],\n         [1.20242540e+02, 9.22704744e+01, 2.65722758e+01],\n         [1.45881967e+02, 7.91787851e+01, 1.08181064e+01],\n         [6.68061854e+01, 2.47247016e+02, 1.39053301e+02],\n         [9.12505910e+01, 2.38285077e+02, 1.32564630e+02],\n         [2.76786972e+01, 1.24266915e+02, 1.74468230e+02],\n         [1.93304269e+02, 2.06606503e+01, 2.13309605e+02]],\n\n        [[4.65710348e+01, 6.03927405e+01, 2.03047419e+02],\n         [1.80732217e+02, 1.39490316e+02, 6.07498904e+01],\n         [7.08740873e+01, 2.90491706e+01, 2.49129436e+02],\n         [1.28947625e+02, 7.71924080e+01, 4.84407248e+00],\n         [2.29381791e+02, 6.26600734e+01, 2.62174621e+01],\n         [1.95049811e+01, 1.89323091e+02, 1.28505176e+02],\n         [8.30998707e+01, 1.11535318e+02, 2.49042784e+02],\n         [2.21182896e+02, 1.96483270e+02, 2.04784423e+02],\n         [3.21849502e+01, 1.87064732e+01, 2.49913166e+02],\n         [2.37843866e+02, 1.86278681e+02, 1.04429753e+02]],\n\n        [[9.20562083e+00, 1.13133525e+02, 2.42452647e+02],\n         [4.87591241e+01, 5.36344554e+01, 2.10657005e+02],\n         [9.27233202e+01, 2.17929894e+02, 2.51053902e+02],\n         [1.81370133e+02, 5.19095111e+01, 1.27631897e+02],\n         [2.25530572e+02, 2.00149769e+02, 1.48647611e+02],\n         [2.89632100e+01, 2.83731438e+01, 1.23276100e+01],\n         [6.92569557e+01, 3.82899964e+01, 8.60090776e+01],\n         [2.46121937e+02, 1.98577310e+02, 2.54823534e+02],\n         [2.33249305e+02, 1.41392514e+02, 1.50531328e+02],\n         [2.32608358e+02, 1.30352356e+02, 2.39354232e+02]],\n\n        [[8.80358004e+01, 1.07437975e+02, 8.55233078e+01],\n         [2.45401308e+02, 1.89111672e+02, 4.46703422e+01],\n         [1.67473198e+02, 2.50662661e+02, 1.00036163e+01],\n         [2.47737493e+02, 8.82625800e+01, 2.15283281e+02],\n         [6.01757705e+01, 2.02713136e+02, 1.73332506e+01],\n         [5.61647910e+01, 1.46496400e+02, 9.13838276e+01],\n         [2.21538382e+02, 2.19732783e+02, 1.83610291e+02],\n         [8.64121789e+01, 1.26855219e+02, 9.16234437e+01],\n         [1.29715173e+01, 7.35921198e+01, 2.52522436e+02],\n         [1.24967992e+02, 1.90441912e+02, 9.72136565e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "x": {
                                    "variable_value": "array([[[[-7.39879775e+01,  3.82950325e+01, -3.92180133e+01],\n         [ 1.12550972e+02,  6.66847619e+01, -1.16004718e+02],\n         [-2.97198468e+01,  4.78353724e+01,  6.18117459e+01],\n         [-5.42139630e+01, -7.26878801e+01, -1.32872544e+01],\n         [-1.20113433e+01, -7.51540247e+01, -2.81360699e+01],\n         [-4.98418542e+00,  1.00419885e+02,  7.15425383e+01],\n         [ 5.88433921e+00,  1.09661555e+02, -3.34186297e+01],\n         [ 6.53844686e+01,  4.16375423e+01,  9.03678249e+01],\n         [-9.73226235e+01,  1.21726866e+01,  7.77013206e+01],\n         [-3.80856352e+01, -5.25667705e+01, -7.25936591e+01]],\n\n        [[ 6.43520928e+01,  1.12362432e+02, -1.00166677e+02],\n         [-5.56384238e+01,  3.49951380e+01, -8.48038120e+01],\n         [ 5.50531504e+01,  9.59779880e+01,  5.69041194e+01],\n         [ 1.45511765e+02, -8.48082690e+01, -8.02328012e+01],\n         [-3.16730561e+01,  9.07453605e+01,  5.97605749e+01],\n         [-9.27277951e+01,  1.31719649e+02,  2.51017711e+01],\n         [ 1.04220876e+02,  8.38132890e+00,  8.12251557e+01],\n         [ 1.32414313e+02, -5.25786587e+01, -7.51987284e+01],\n         [-1.02580746e+02,  1.34791751e+01, -6.83035906e+01],\n         [-4.13592815e+01,  7.84126800e+01, -1.77090801e+01]],\n\n        [[ 4.23888799e+01,  4.54479051e+01,  3.22095357e+01],\n         [-5.46006521e+01,  6.37796882e+01, -8.30527329e+01],\n         [ 1.45001731e+02, -9.82489672e-01,  1.14656196e+02],\n         [ 7.07316363e+01,  1.08776273e+02,  9.15969505e+01],\n         [-9.26331627e+01,  6.76496143e+01, -8.43420898e+01],\n         [ 1.04276342e+02,  1.09108122e+02,  3.72073332e+01],\n         [-9.02645146e+01,  5.65561931e+01, -8.98645585e+01],\n         [ 2.87761783e+01,  4.24607468e+00, -4.76798725e+01],\n         [ 1.49915790e+02, -7.07323112e+01,  7.52097362e+01],\n         [ 7.33636604e+01,  2.54872350e+01,  7.70970799e+01]],\n\n        [[ 4.34846202e+01,  8.58840859e+01, -5.96983860e+01],\n         [ 1.16574800e+02,  1.94012350e+01, -9.31199966e+01],\n         [-7.17807415e+01, -6.02389203e+01, -7.15698496e+01],\n         [-1.90852593e+01, -6.16847756e+01,  3.74106680e+01],\n         [-1.37814180e+01,  5.17881977e+01,  4.98356039e+01],\n         [ 1.23843497e+01,  1.35478746e+02,  6.83572750e+01],\n         [ 1.25345133e+02,  5.82975235e+01,  7.52179074e+01],\n         [ 9.62761170e+01,  1.14560233e+02, -9.37877147e+01],\n         [-4.53699524e+01,  8.93166939e+01,  8.57400394e+01],\n         [-7.90399863e+01,  7.07496334e+01, -5.18824105e+01]],\n\n        [[-4.19338805e+01,  1.26859066e+02, -2.29220101e+01],\n         [ 6.61242140e+01, -5.12993886e+01,  1.44594281e+01],\n         [ 3.58615827e+01,  1.32086698e+02, -1.75788357e+01],\n         [ 7.30500003e+01, -8.77215364e+01, -4.56645552e+01],\n         [-9.18082557e+01,  1.08283518e+02,  9.97313440e+01],\n         [-2.28437704e+01,  2.04185817e+01, -9.47113630e+01],\n         [-3.06763691e+01, -9.42184147e+01,  6.18782384e+01],\n         [-7.31052111e+01, -6.16589399e+01,  2.99768316e+01],\n         [-2.10216501e+01,  1.15785715e+02, -8.40622119e+01],\n         [ 1.50676416e+02,  8.24353235e+01,  8.97175893e+01]],\n\n        [[ 9.17611063e+00, -6.00324477e+01, -1.22987225e+02],\n         [ 1.45013012e+01, -7.83428774e+01, -1.12526670e+02],\n         [ 1.30168476e+02,  2.15652594e+01, -1.23584786e+02],\n         [ 6.98019120e+01,  7.53638882e+00, -7.27644701e+00],\n         [ 5.21005672e+00,  8.47416806e+01,  1.01599063e+02],\n         [ 1.03739144e+02, -5.76601254e+01, -1.18281401e+02],\n         [ 2.52150689e+01,  8.39564355e+01,  1.01561455e+02],\n         [ 1.08828996e+02,  4.68350137e+01, -3.12627518e+01],\n         [ 3.24373334e+01, -7.22911775e+01, -5.83856181e+01],\n         [ 3.74479580e+01, -1.14311927e+02,  8.25390144e+01]],\n\n        [[ 1.00739379e+02,  1.08875956e+02, -6.65647775e+01],\n         [ 9.41333815e+01, -1.03427692e+02, -8.01592095e+01],\n         [ 1.42666308e+02,  7.72489298e+01,  6.15359358e+01],\n         [ 6.19269971e+01,  4.32480373e+01, -3.77686056e+01],\n         [-1.00370925e+02, -1.00196090e+02,  1.09128556e+02],\n         [ 7.54722640e+01, -1.11842739e+02,  5.22109481e-02],\n         [ 5.73347378e+01, -5.76999699e+01,  4.90478365e+01],\n         [-6.71726027e+00, -3.82812081e+01, -6.18644978e+01],\n         [ 1.40929677e+01, -1.31105046e+01, -2.89381681e+01],\n         [ 6.75430601e+01,  2.15776557e+00, -1.13361985e+01]],\n\n        [[ 6.93872218e+01,  9.92674729e+01,  3.94628841e+01],\n         [ 7.09055604e+00,  3.67022599e+01, -7.81825058e+01],\n         [ 6.52950087e+01, -5.03064725e+01, -5.46395322e+01],\n         [ 8.63028281e+01, -4.61753319e+01,  3.66741126e+01],\n         [-1.02448137e+02, -1.05198143e+02, -8.76147706e+01],\n         [ 9.43565005e+01, -3.29770243e+01,  4.68623475e+01],\n         [ 8.19181166e+00, -1.12331096e+02,  1.22600544e+02],\n         [-8.89590811e+00, -1.00623121e+02, -7.53341804e+01],\n         [-3.88817251e+01,  6.63041992e-01,  3.15032847e+01],\n         [ 1.26035017e+02, -9.89060183e+01, -8.69102091e+01]],\n\n        [[-5.41810039e+00,  1.09271844e+02, -6.46230773e+01],\n         [-4.11966048e+01, -4.00032710e+01, -6.81527203e+01],\n         [-2.10426722e+01,  9.35250923e+01, -6.86245785e+01],\n         [ 3.55278658e-01,  7.14728771e+01,  3.24292004e+01],\n         [ 1.34697736e+01,  1.20221102e+01,  6.64587337e+01],\n         [ 5.04417854e+01,  1.33780421e+02, -1.10240615e+02],\n         [ 1.13729748e+02, -4.54800889e+01, -2.81459898e+01],\n         [ 4.22747269e+01, -7.13089653e+01, -5.03749763e+01],\n         [-7.82650172e+01,  6.78187291e+01, -7.39618931e+01],\n         [ 1.20506713e+01,  3.61145639e+01,  6.04323408e+01]],\n\n        [[ 1.32708291e+01, -4.56379198e+01, -3.89585883e+00],\n         [ 8.47888013e+00, -5.03117838e+01, -2.15569006e+01],\n         [ 1.29428157e+02, -7.32902920e+00,  4.21141179e+01],\n         [ 1.38123803e+02, -8.62840767e+01, -2.10881085e+01],\n         [-1.80192443e+01,  7.40839245e+01, -8.00802083e+01],\n         [-8.96398257e+01,  1.37317082e+01,  1.12232184e+02],\n         [-6.01997806e+00,  1.33407056e+02,  4.19133567e+01],\n         [ 1.36457731e+02,  6.24542631e+01,  3.20128591e+01],\n         [-8.91108248e+01,  1.34182991e+02,  1.05274792e+02],\n         [ 1.05086044e+02,  7.42909068e+01,  8.83168247e+01]]],\n\n\n       [[[-8.56439276e+01, -8.72460621e+01, -5.74022661e+01],\n         [ 1.04038211e+02,  9.46395229e+01,  9.15889800e+01],\n         [-8.63560737e+01, -1.42809211e+01,  2.78044635e+01],\n         [ 3.65735917e+01,  4.73420320e+01,  1.05786561e+02],\n         [ 1.19112342e+02,  8.39984291e+01, -8.30294229e+01],\n         [-4.35538402e+01,  9.89119236e+01,  1.94344912e+01],\n         [-7.08953651e+01, -8.36677014e+01, -3.32127387e+01],\n         [ 1.12036436e+02, -6.33590352e+01,  6.96538993e+01],\n         [ 1.40254813e+02,  8.62630384e+01,  9.14276716e+01],\n         [ 1.62335552e+01,  6.99417235e+01, -1.20795830e+02]],\n\n        [[ 1.11791056e+02, -1.07539293e+02, -1.17656826e+01],\n         [-3.34377722e+01, -5.69307145e+01,  2.04149180e+01],\n         [-9.82162551e+01, -1.82209459e+01, -9.34129673e+01],\n         [-1.03489698e+02,  4.25453309e+01,  8.09603972e+01],\n         [ 5.55090987e+01,  9.71606651e+01,  5.31069537e+01],\n         [ 6.34576539e+01, -3.66844396e+00, -1.51474034e+01],\n         [ 7.42095431e+01, -2.53789850e+01, -1.18310936e+02],\n         [-3.18786650e+01,  5.89153028e+01,  5.22787281e+01],\n         [ 1.43661370e+02, -8.90700622e+01, -1.09433649e+02],\n         [ 3.09764895e+01, -1.13078654e+02, -3.57869705e+01]],\n\n        [[ 1.09677116e+02, -3.61950840e+01,  5.40551090e+01],\n         [ 6.98491039e+01, -1.82412994e+01, -1.08708799e+02],\n         [-6.20780812e+01,  1.21137951e+02,  1.10555357e+02],\n         [ 7.63446135e+01,  4.83961226e+01, -7.86924694e+01],\n         [ 1.46756691e+01, -8.89613404e+00,  1.11416433e+02],\n         [-9.98662436e+01,  1.79483354e+00,  5.52587886e+01],\n         [-2.59733035e+01,  1.37387371e+02,  1.19388654e+02],\n         [-1.13787806e+01,  3.52850593e+01, -5.46145664e+01],\n         [ 1.02971212e+02, -3.19852270e+01, -2.25254067e+01],\n         [-1.03440152e+02,  1.01973754e+02, -5.09868248e+01]],\n\n        [[ 6.92536573e+01,  1.11483230e+02,  1.01392416e+02],\n         [ 1.29365789e+02,  5.08224327e+01, -1.77001747e+01],\n         [-2.27950091e+01,  7.98824163e+01,  1.21192991e+02],\n         [ 1.17875608e+02,  1.36651054e+02,  5.05638649e+01],\n         [ 1.10145172e+02, -6.00932536e+01,  4.06753542e+01],\n         [ 1.46290255e+02,  9.98177472e+01,  7.75156581e+01],\n         [-8.25954004e+01, -8.12844824e+00, -3.95358872e+01],\n         [ 1.42829321e+02, -5.22641202e+01, -1.33289282e+01],\n         [ 5.34143254e+01,  1.10886581e+02,  3.71829253e+00],\n         [-4.73850070e+01, -8.23376551e+00, -9.82067291e+01]],\n\n        [[ 5.76859127e+01, -7.38727224e+00,  4.23826838e+01],\n         [-6.52550610e+01,  7.55937444e+01, -7.00078411e+01],\n         [ 3.16061457e+01,  6.15862114e+01,  4.48397650e+01],\n         [ 1.00057681e+02,  1.32884342e+02, -1.11611064e+02],\n         [-1.48195757e+01,  8.70359983e+01,  5.36374988e+01],\n         [-1.58976627e+01,  8.35097911e+01,  7.91655838e+01],\n         [-7.33274343e+01,  1.23277392e+02, -8.47970479e+01],\n         [-3.77860193e+01,  1.29746667e+02, -1.07679364e+02],\n         [ 1.50913782e+02,  9.18957297e+01, -7.12712106e+00],\n         [-7.52787234e+01,  9.77161419e+01,  2.03432272e+01]],\n\n        [[-3.55360860e+01,  8.07037905e+01, -6.11941921e+01],\n         [-7.50109062e+01, -2.01774301e+01, -9.00903797e+01],\n         [ 1.31282769e+02, -1.11555269e+02,  2.68743764e+01],\n         [-7.56531383e+01,  2.34434223e+01, -1.21572918e+02],\n         [-3.20995563e+01,  6.59531740e+01,  7.12672687e+01],\n         [ 4.57847671e+01,  1.18423349e+02,  7.17779201e+01],\n         [-8.38558594e+01, -5.94331386e+01,  1.04898868e+02],\n         [-3.53062498e+01,  1.10841199e+02, -3.72598691e+01],\n         [ 1.10796858e+02,  9.12526483e+01,  8.80894426e+01],\n         [-1.73817064e+01, -2.68166286e+01,  4.83496959e+01]],\n\n        [[ 4.77728676e+01, -6.63852642e+01, -1.34560732e+01],\n         [ 9.22134274e+01,  2.80427448e+00, -3.45760714e+01],\n         [ 9.32112323e+01,  3.30805765e+01,  1.76646107e+01],\n         [-3.51575587e+01,  1.10340405e+02,  3.33206543e+01],\n         [-7.73667242e+01, -2.45085256e+01, -3.43745958e+00],\n         [-9.31208936e+01, -3.76002149e+01,  2.22019674e+01],\n         [ 3.51143005e+01,  1.30468016e+02, -5.68738146e+01],\n         [ 2.86256297e+01,  1.21506077e+02, -3.24294090e+01],\n         [ 7.05292295e+01,  7.48791549e+00, -9.60013028e+01],\n         [ 1.09370605e+02, -9.61183497e+01,  6.96242690e+01]],\n\n        [[ 9.91084187e+01, -5.63862595e+01, -7.71089652e+01],\n         [-4.31891096e+01,  2.27113160e+01,  5.70522166e+01],\n         [ 1.45190436e+02, -8.77298294e+01, -5.28059127e+01],\n         [-9.90949275e+01, -3.95865920e+01,  5.26762469e+00],\n         [-7.77215379e+01, -5.41189266e+01,  1.05701791e+02],\n         [ 2.45661764e+01,  7.25440910e+01, -1.04175019e+02],\n         [ 1.45103784e+02, -5.24368220e+00, -4.05801293e+01],\n         [ 1.00845423e+02,  7.97042702e+01,  9.75028959e+01],\n         [ 1.45974166e+02, -9.80725268e+01, -9.14950498e+01],\n         [ 4.90752634e-01,  6.94996810e+01,  1.14163866e+02]],\n\n        [[ 1.38513647e+02, -3.64547460e+00, -1.14474379e+02],\n         [ 1.06718005e+02, -6.31445446e+01, -7.49208759e+01],\n         [ 1.47114902e+02,  1.01150894e+02, -3.09566798e+01],\n         [ 2.36928970e+01, -6.48694889e+01,  5.76901332e+01],\n         [ 4.47086112e+01,  8.33707689e+01,  1.01850572e+02],\n         [-9.16113900e+01, -8.84058562e+01, -9.47167900e+01],\n         [-1.79299224e+01, -7.84890036e+01, -5.44230443e+01],\n         [ 1.50884534e+02,  8.17983101e+01,  1.22441937e+02],\n         [ 4.65923280e+01,  2.46135143e+01,  1.09569305e+02],\n         [ 1.35415232e+02,  1.35733555e+01,  1.08928358e+02]],\n\n        [[-1.84156922e+01, -9.34102514e+00, -3.56441996e+01],\n         [-5.92686578e+01,  7.23326717e+01,  1.21721308e+02],\n         [-9.39353837e+01,  1.33883661e+02,  4.37931980e+01],\n         [ 1.11344281e+02, -2.85164200e+01,  1.24057493e+02],\n         [-8.66057494e+01,  8.59341357e+01, -6.35042295e+01],\n         [-1.25551724e+01,  2.97174000e+01, -6.75152090e+01],\n         [ 7.96712911e+01,  1.02953783e+02,  9.78583821e+01],\n         [-1.23155563e+01,  1.00762190e+01, -3.72678211e+01],\n         [ 1.48583436e+02, -4.31868802e+01, -1.10708483e+02],\n         [-6.72534345e+00,  7.36629125e+01,  1.28799153e+00]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[1.21068350e+02, 8.62276894e+01, 8.13651826e+01],\n         [1.23268088e+02, 1.62126141e+01, 5.66569255e+01],\n         [2.36706489e+02, 1.65452722e+01, 2.07730225e+02],\n         [5.27068128e+01, 2.30170871e+02, 1.58880042e+02],\n         [6.25472467e+01, 9.81849415e+01, 1.47115357e+02],\n         [1.34138962e+02, 1.51684037e+02, 1.73946535e+02],\n         [3.84740913e+01, 5.96978241e+01, 1.85168241e+02],\n         [4.69701516e+01, 2.18813475e+02, 1.26164229e+01],\n         [1.21961647e+01, 4.95320635e+01, 7.04691159e+01],\n         [4.33600591e+01, 1.50182035e+01, 1.37618402e+02]],\n\n        [[1.42452372e+02, 6.47183772e+01, 1.83798455e+02],\n         [2.48545301e+02, 1.02968616e+02, 1.76796945e+01],\n         [9.42572391e+01, 2.98737495e+00, 1.05858602e+02],\n         [1.09301854e+02, 8.42185881e+01, 2.40128956e+02],\n         [1.21075890e+02, 9.19727599e+01, 8.61675473e+01],\n         [1.82107712e+01, 2.45100365e+02, 7.88393812e+01],\n         [2.48983441e+02, 2.45844592e+02, 3.12605365e+01],\n         [8.49660019e+01, 5.65477248e+01, 1.37212085e+02],\n         [1.89370743e+02, 7.32894849e+01, 2.09684173e+02],\n         [2.51875316e+02, 1.67078730e+02, 2.54147092e+02]],\n\n        [[1.51523462e+02, 2.28331293e+02, 2.86269552e+01],\n         [1.95063171e+02, 1.56142933e+02, 2.03857327e+02],\n         [3.81684718e+01, 2.90682873e+01, 6.17784072e+01],\n         [2.31588976e+02, 1.32782942e+02, 1.06220461e+01],\n         [2.34745737e+02, 1.66990437e+02, 1.07761349e+02],\n         [1.49826559e+02, 2.34437358e+02, 1.33170689e+00],\n         [2.40075221e+02, 2.29326808e+02, 3.82447412e+01],\n         [1.15090699e+02, 9.82019997e+01, 2.30178675e+02],\n         [1.60178916e+02, 2.25671387e+02, 1.74476213e+02],\n         [2.12669475e+02, 2.98681543e+01, 1.20288396e+02]],\n\n        [[1.12068878e+02, 1.29964666e+02, 9.55372107e+01],\n         [5.40849044e+01, 1.93986453e+02, 1.57253207e+02],\n         [2.25836258e+02, 2.52973036e+02, 3.81520968e+01],\n         [2.02765523e+02, 2.19952464e+02, 1.48037689e+02],\n         [7.69876548e+01, 2.30351215e+02, 1.87667571e+02],\n         [9.06156666e+01, 2.17377061e+01, 2.46296753e+02],\n         [9.35569560e+01, 7.92299786e+01, 7.42782973e+01],\n         [5.67692723e+01, 1.01909215e+02, 5.80698854e+01],\n         [1.09361080e+02, 2.32702005e+02, 1.67682983e+02],\n         [2.08151746e+02, 7.94750231e+01, 2.00265861e+02]],\n\n        [[9.39152210e+01, 2.38545027e+02, 1.28310482e+02],\n         [1.06397820e+02, 2.01713292e+02, 2.33984042e+02],\n         [2.35475460e+02, 3.00784331e+01, 2.02533753e+02],\n         [6.58670675e+01, 7.85601076e+01, 7.22779061e+01],\n         [8.69290116e+01, 8.32443220e+01, 1.18976535e+02],\n         [6.71076542e+01, 1.28869334e+02, 1.76085249e+02],\n         [1.41979454e+02, 2.07026461e+02, 1.54568971e+02],\n         [3.31405285e+00, 1.21940110e+02, 1.98293830e+02],\n         [2.48316143e+01, 8.84519286e+01, 1.82009690e+02],\n         [3.64004041e+01, 2.05320773e+02, 4.59611210e+01]],\n\n        [[2.00975024e+02, 1.54463899e+02, 1.67551703e+02],\n         [1.40943128e+02, 5.36876064e+01, 1.99758321e+01],\n         [1.78607165e+02, 2.36416962e+02, 1.79449937e+02],\n         [1.25142510e+02, 1.40531906e+02, 1.65997843e+02],\n         [2.50038327e+02, 1.00711304e+01, 7.41706105e+00],\n         [1.91098262e+02, 1.68845279e+02, 1.32237911e+02],\n         [1.75363093e+01, 2.32742486e+01, 1.25357181e+02],\n         [3.50417981e+01, 2.13968264e+02, 2.31619657e+02],\n         [2.42229896e+02, 2.43513303e+02, 8.49187073e+01],\n         [2.06886402e+02, 2.15145884e+02, 1.83063627e+02]],\n\n        [[1.23153571e+02, 1.01129254e+02, 1.51225276e+02],\n         [1.47905885e+02, 1.62726083e+02, 1.32956566e+02],\n         [1.70186555e+02, 1.18765832e+02, 6.70326707e+01],\n         [2.26717807e+02, 2.72411364e+01, 9.63494104e+01],\n         [5.83375470e+01, 1.80014666e+02, 2.46162779e+02],\n         [5.56334092e+01, 1.72897502e+02, 3.66706204e+01],\n         [1.93473016e+02, 8.57826078e+01, 6.65428176e+01],\n         [8.88815235e+01, 7.31242924e+01, 2.53040857e+02],\n         [2.25020634e+02, 2.80109405e+01, 1.89083372e+02],\n         [1.29829600e+02, 1.02099544e+02, 1.08642796e+02]],\n\n        [[1.07882354e+01, 6.27239059e+00, 6.77107453e+01],\n         [1.12741795e+02, 9.97360530e+01, 1.28053175e+02],\n         [1.79743996e+02, 1.23692497e+02, 8.86920814e+01],\n         [8.97172570e+01, 1.10755959e+02, 2.11697935e+02],\n         [1.67268201e+02, 2.50171685e+01, 1.54488051e+02],\n         [1.36383411e+02, 3.88762182e+01, 1.37937243e+02],\n         [4.65602979e+01, 7.42632137e+01, 1.25666171e+02],\n         [1.31037931e+02, 5.99364281e+01, 1.44401382e+02],\n         [5.30201533e+01, 1.28290970e+02, 8.46630727e+01],\n         [2.09353678e+02, 1.36355214e+02, 1.81982468e+01]],\n\n        [[1.95777636e+00, 2.19398816e+02, 7.59400779e+01],\n         [1.65291858e+01, 1.10771716e+01, 2.44867185e+02],\n         [1.96989908e+02, 6.42523497e+01, 1.67326544e+02],\n         [1.43548213e+00, 4.61246059e+01, 3.54641340e+01],\n         [5.71212220e+01, 5.14423333e+01, 8.78614841e+00],\n         [1.97235377e+02, 4.65733988e+01, 8.84070413e+01],\n         [1.04141297e+02, 6.33342004e+01, 2.31184526e+02],\n         [1.09726671e+02, 6.96475162e+01, 2.09388603e+02],\n         [5.87361615e+01, 2.26701442e+02, 3.00781249e+01],\n         [2.26852446e+02, 2.59753422e+01, 1.36103420e+02]],\n\n        [[2.19115147e+02, 1.66373994e+02, 1.88512937e+02],\n         [1.16512669e+02, 8.32388538e+01, 1.52574653e+02],\n         [2.45526018e+02, 1.81794855e+02, 1.58801040e+00],\n         [2.27154241e+02, 8.12238240e+01, 9.80502898e+00],\n         [2.04547900e+02, 1.42146285e+02, 2.42438569e+02],\n         [7.63235383e+01, 2.06199752e+02, 2.40399357e+02],\n         [2.35452545e+02, 1.09184840e+02, 6.55966987e+01],\n         [2.31609471e+00, 2.05200647e+01, 1.81998398e+02],\n         [2.01253710e+02, 5.25818859e+01, 2.20492786e+00],\n         [2.18433936e+02, 2.01412388e+02, 8.81164494e+00]]],\n\n\n       [[[2.15213142e+02, 1.19576359e+02, 1.36714513e+02],\n         [1.27590700e+02, 1.03517046e+02, 7.98046017e+01],\n         [1.15230250e+02, 2.10311357e+02, 8.42744279e+00],\n         [2.30233897e+02, 2.25205575e+02, 2.07133114e+02],\n         [5.04392341e+01, 1.33467412e+02, 2.47695346e+02],\n         [4.83204421e+01, 1.31121911e+02, 1.70686618e+02],\n         [2.28107497e+02, 4.34470697e-01, 1.78023700e+01],\n         [1.72815748e+02, 1.00397215e+02, 7.57242442e+01],\n         [9.24384834e+01, 2.51716526e+02, 6.75419155e+01],\n         [1.50843552e+02, 1.81556322e+02, 1.32372664e+02]],\n\n        [[1.00572538e+02, 1.82784826e+02, 9.46693795e+01],\n         [2.16861167e+02, 1.92857350e+02, 1.80231596e-01],\n         [2.05704205e+02, 1.22435237e+02, 3.21255293e+01],\n         [2.19777262e+02, 1.55760086e+02, 6.99742500e+01],\n         [1.24336181e+02, 1.47522573e+02, 1.59646303e+02],\n         [3.58752366e+01, 1.64863819e+02, 2.06538715e+02],\n         [1.48041244e+02, 8.92110231e+01, 1.06638374e+02],\n         [2.23801437e+02, 9.34585633e+01, 1.34175189e+02],\n         [2.67591470e+01, 1.13163303e+00, 5.69542908e+01],\n         [8.42682417e+01, 1.26921361e+01, 1.32019963e+02]],\n\n        [[7.17478435e+01, 3.91126488e+00, 1.34657676e+02],\n         [2.14503080e+02, 1.19322926e+02, 2.03644861e+02],\n         [2.29977730e+02, 9.36105466e+01, 1.06694467e+02],\n         [2.32328619e+02, 2.16130936e+02, 7.33742535e+01],\n         [9.92212708e+00, 1.63029544e+02, 1.81204759e+02],\n         [2.51379469e+02, 6.40630412e+00, 3.47847777e+01],\n         [2.23937753e+02, 2.18106553e+01, 5.06904587e+01],\n         [1.21090564e+02, 2.20929729e+02, 1.40246626e+02],\n         [1.70823006e+01, 1.71423994e+02, 8.88368632e+01],\n         [5.42715631e+01, 1.89574023e+01, 2.44779625e+02]],\n\n        [[8.86794944e+01, 1.84755457e+02, 6.54439580e+01],\n         [1.24776868e+02, 1.56753055e+02, 2.03717775e+01],\n         [1.53147701e+02, 2.13564795e+02, 1.79364405e+02],\n         [7.85654255e+01, 1.92953279e+02, 5.72290856e+01],\n         [2.53082131e+02, 1.80556320e+01, 8.36253651e+01],\n         [7.72817091e+01, 1.16146975e+02, 9.05866190e+01],\n         [1.67630370e+02, 7.48171320e+01, 1.04218352e+02],\n         [2.28312796e+02, 2.23797699e+02, 7.91319885e+01],\n         [2.67555383e+01, 8.16777741e+00, 1.44320872e+02],\n         [6.01805190e+01, 1.51067245e+02, 9.20381575e+00]],\n\n        [[2.32202949e+01, 1.18010967e+02, 1.91897698e+02],\n         [7.62129514e+01, 1.46036541e+02, 3.02429932e+01],\n         [1.00076413e+02, 1.23771620e+02, 5.79144940e+01],\n         [1.33101440e+02, 1.93329891e+02, 1.81319009e+00],\n         [7.77567691e+01, 1.43606352e+02, 5.62466620e+01],\n         [7.03708945e+01, 1.55629219e+02, 2.08144139e+02],\n         [2.21046168e+01, 1.49251472e+02, 1.57105626e+01],\n         [2.77958392e+01, 1.54530755e+02, 9.67690089e+01],\n         [2.08728751e+02, 9.58053874e+01, 2.38021506e+02],\n         [9.74712114e+01, 1.98099189e+02, 3.76582256e+01]],\n\n        [[2.31069203e+02, 1.12016542e+02, 1.84390475e+02],\n         [2.33552705e+02, 4.19303813e+01, 2.64092389e+01],\n         [7.58635918e+01, 1.04600933e+02, 2.32220216e+02],\n         [2.43072389e+02, 1.70501470e+02, 2.00832141e+02],\n         [2.26039648e+02, 2.13659830e+02, 1.27818900e+01],\n         [3.49221102e+01, 1.23434398e+02, 1.59750670e+02],\n         [5.69132901e+01, 1.61114666e+02, 1.34015617e+00],\n         [2.03072143e+02, 4.27277378e+01, 2.00000634e-01],\n         [5.84997423e+00, 1.00001256e+02, 2.85753412e+01],\n         [2.20008425e+02, 1.11812313e+02, 2.97328494e+01]],\n\n        [[7.47828598e+01, 1.09628903e+02, 2.15089091e+02],\n         [1.87809484e+02, 5.86253919e+01, 2.37745867e+02],\n         [7.42082638e+01, 2.38504357e+02, 1.40764862e+02],\n         [1.41238531e+02, 2.24118929e+00, 1.19629210e+02],\n         [7.39869773e+01, 1.45229487e+01, 2.34786821e+02],\n         [1.27529858e+02, 2.47602255e+02, 9.66063836e+01],\n         [2.08079103e+02, 1.29922374e+02, 5.45311055e+00],\n         [1.00839001e+02, 1.14779380e+01, 8.40425166e+01],\n         [5.88828319e+01, 1.05644206e+01, 2.28733268e+02],\n         [2.26313823e+02, 7.61758032e+01, 2.19045681e+02]],\n\n        [[5.18037379e+01, 1.85747919e+02, 1.70627034e+02],\n         [9.36949167e+01, 2.33381007e+02, 1.84204639e+02],\n         [5.53952095e+01, 2.52917077e+02, 2.35130466e+02],\n         [1.94372585e+02, 2.01947748e+02, 8.34326717e+00],\n         [1.85228139e+02, 2.43454684e+01, 1.29831844e+02],\n         [2.08037572e+02, 2.16897249e+02, 1.59736808e+02],\n         [4.28280884e+01, 4.48349077e+01, 2.35298745e+02],\n         [1.92250465e+02, 3.31649299e+01, 2.24881979e+02],\n         [2.14001712e+02, 1.70088687e+02, 2.48693975e+02],\n         [1.57262166e+02, 1.90190906e+02, 2.16404484e+02]],\n\n        [[2.35239754e+02, 3.79459606e+01, 1.45024626e+02],\n         [2.43718275e+02, 6.32405584e+01, 2.05807713e+02],\n         [1.12256203e+02, 8.95816829e+01, 1.56339211e+02],\n         [1.24304428e+02, 1.03109143e+02, 1.61456524e+02],\n         [3.64828267e+01, 2.09870581e+02, 7.92106414e+01],\n         [1.43688096e+02, 2.58010659e+01, 2.03931971e+02],\n         [2.48786155e+02, 2.37654311e+02, 1.75099125e+02],\n         [5.40724298e+01, 9.46436609e+01, 2.33729337e+01],\n         [2.26083486e+02, 2.68014563e+01, 1.85339174e+02],\n         [5.85301952e+01, 2.05377059e+01, 1.90340513e+02]],\n\n        [[4.48574858e+01, 1.22965800e+02, 1.07351702e+02],\n         [1.65276621e+02, 1.74156081e+02, 2.25257045e+02],\n         [9.51231986e+01, 9.12500497e+01, 2.13724089e+01],\n         [8.73741626e+01, 4.94994465e+01, 1.54647937e+02],\n         [1.91876079e+02, 9.90048747e+01, 9.98498257e+01],\n         [1.38603695e+02, 1.01796901e+02, 7.90757959e+01],\n         [1.88382251e+01, 1.94105315e+02, 2.00835652e+02],\n         [2.33158559e+02, 1.16239958e+02, 5.32861415e+01],\n         [1.81273745e+02, 3.97968931e+01, 6.47889954e+01],\n         [4.69892846e+01, 8.76938243e+01, 2.81099769e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c20d490>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -22.573822  ,  -30.551308  ,   -2.6116486 ],\n         [ -47.282078  , -100.56638   ,   -0.411911  ],\n         [ 103.79122   , -100.23373   ,  113.02648   ],\n         [  54.941032  ,  113.39187   ,  -70.97319   ],\n         [  43.176353  ,  -18.594055  ,  -61.132755  ],\n         [  70.00753   ,   34.905037  ,   10.4589615 ],\n         [  81.22924   ,  -57.081177  ,  -85.20591   ],\n         [ -91.32258   ,  102.03448   ,  -76.709854  ],\n         [ -33.469887  ,  -67.24693   , -111.48383   ],\n         [  33.679405  , -101.760796  ,  -80.31995   ]],\n\n        [[  79.85946   ,  -52.060623  ,   18.772377  ],\n         [ -86.25931   ,  -13.810387  ,  124.8653    ],\n         [   1.9196014 , -113.791626  ,  -29.42276   ],\n         [ 136.18994   ,  -32.56041   ,  -14.378143  ],\n         [ -17.771454  ,  -24.806236  ,   -2.6041107 ],\n         [ -25.099625  ,  128.32138   , -105.46923   ],\n         [ -72.67847   ,  129.06558   ,  125.303444  ],\n         [  33.27308   ,  -60.231274  ,  -38.713997  ],\n         [ 105.74517   ,  -43.489517  ,   65.69074   ],\n         [ 150.2081    ,   50.299736  ,  128.19531   ]],\n\n        [[ -75.31205   ,  111.5523    ,   27.843468  ],\n         [  99.91833   ,   39.36393   ,   71.38317   ],\n         [ -42.160595  ,  -87.71071   ,  -85.51153   ],\n         [ -93.316956  ,   16.003944  ,  107.90897   ],\n         [   3.8223495 ,   50.211433  ,  111.06574   ],\n         [-102.6073    ,  117.65836   ,   26.146553  ],\n         [ -65.69426   ,  112.54781   ,  116.395226  ],\n         [ 126.23968   ,  -18.576996  ,   -8.589302  ],\n         [  70.53721   ,  108.89239   ,   36.49891   ],\n         [  16.349396  ,  -86.91084   ,   88.98948   ]],\n\n        [[  -8.401794  ,   13.185661  ,  -11.611122  ],\n         [  53.3142    ,   77.20745   ,  -69.59509   ],\n         [ -65.78691   ,  136.19403   ,  102.15626   ],\n         [  44.098686  ,  103.17347   ,   79.08552   ],\n         [  83.72857   ,  113.57221   ,  -46.692345  ],\n         [ 142.35776   ,  -95.04129   ,  -33.06433   ],\n         [ -29.660706  ,  -37.54902   ,  -30.123047  ],\n         [ -45.869118  ,  -14.8697815 ,  -66.91073   ],\n         [  63.74398   ,  115.92301   ,  -14.318916  ],\n         [  96.32685   ,  -37.303978  ,   84.47175   ]],\n\n        [[  24.371483  ,  121.76603   ,  -29.764778  ],\n         [ 130.04504   ,   84.93429   ,  -17.28218   ],\n         [  98.59475   ,  -86.70056   ,  111.79546   ],\n         [ -31.661095  ,  -38.218895  ,  -57.812935  ],\n         [  15.037529  ,  -33.534676  ,  -36.75099   ],\n         [  72.14625   ,   12.09034   ,  -56.57235   ],\n         [  50.629967  ,   90.24746   ,   18.299461  ],\n         [  94.35482   ,    5.16111   , -120.365944  ],\n         [  78.07069   ,  -28.327072  ,  -98.84839   ],\n         [ -57.977882  ,   88.54177   ,  -87.279594  ]],\n\n        [[  63.612694  ,   37.6849    ,   77.29502   ],\n         [ -83.96317   ,  -63.091393  ,   17.26313   ],\n         [  75.51093   ,  119.63796   ,   54.927162  ],\n         [  62.058846  ,   23.752907  ,    1.4625092 ],\n         [ -96.52194   , -106.70787   ,  126.35833   ],\n         [  28.298912  ,   52.066277  ,   67.41827   ],\n         [  21.418175  ,  -93.50475   , -106.14369   ],\n         [ 127.68066   ,   97.18926   ,  -88.6382    ],\n         [ -19.020294  ,  126.73431   ,  118.54989   ],\n         [  79.124626  ,   98.36689   ,   83.2064    ]],\n\n        [[  47.286278  ,  -15.649742  ,   -0.5264282 ],\n         [  29.017555  ,   45.94709   ,   24.225883  ],\n         [ -36.906334  ,    1.9868317 ,   46.506554  ],\n         [  -7.589592  ,  -89.537865  ,  103.0378    ],\n         [ 142.22379   ,   63.235664  ,  -65.34245   ],\n         [ -67.26839   ,   56.118507  ,  -68.04659   ],\n         [ -37.396187  ,  -30.996391  ,   69.79302   ],\n         [ 149.10187   ,  -43.65471   ,  -34.798477  ],\n         [  85.14437   ,  -88.76806   ,  101.34063   ],\n         [   4.7037964 ,  -14.679459  ,    6.149605  ]],\n\n        [[ -36.228256  , -110.50661   , -112.89176   ],\n         [  24.114174  ,  -17.042946  ,  -10.938202  ],\n         [ -15.246925  ,    6.913498  ,   56.063988  ],\n         [ 107.758934  ,   -6.023041  ,  -33.962746  ],\n         [  50.54905   ,  -91.76183   ,   43.588203  ],\n         [  33.998238  ,  -77.90279   ,   12.703407  ],\n         [  21.727165  ,  -42.515785  ,  -77.119705  ],\n         [  40.46238   ,  -56.84257   ,    7.357933  ],\n         [ -19.275932  ,   11.5119705 ,  -70.65985   ],\n         [ -85.74075   ,   19.57621   ,   85.67368   ]],\n\n        [[ -27.998924  ,  102.61982   , -121.72222   ],\n         [ 140.92819   , -105.70183   , -107.15082   ],\n         [  63.387535  ,  -52.52665   ,   73.30991   ],\n         [ -68.47487   ,  -70.65439   , -122.244514  ],\n         [ -95.152855  ,  -65.33667   ,  -66.55878   ],\n         [ -15.53196   ,  -70.2056    ,   73.55538   ],\n         [ 127.24552   ,  -53.444798  ,  -19.538704  ],\n         [ 105.44959   ,  -47.131485  ,  -13.953331  ],\n         [ -73.86088   ,  109.92245   ,  -64.94384   ],\n         [  32.16442   ,  -90.80366   ,  103.17245   ]],\n\n        [[  84.57394   ,   49.594994  ,   95.43514   ],\n         [  48.635643  ,  -33.540146  ,   -7.167328  ],\n         [-102.35099   ,   65.01586   ,  121.846016  ],\n         [ -94.13397   ,  -35.555176  ,  103.474236  ],\n         [ 138.49957   ,   25.367287  ,   80.8679    ],\n         [ 136.46036   ,   89.42075   ,  -47.35646   ],\n         [ -38.342308  ,   -7.594162  ,  111.772545  ],\n         [  78.059395  ,  -96.258934  , -121.36391   ],\n         [-101.73408   ,  -64.19711   ,   77.57371   ],\n         [ -95.12736   ,   84.633385  ,   94.75393   ]]],\n\n\n       [[[  32.775505  ,    2.7973633 ,   91.533134  ],\n         [ -24.1344    ,  -13.261955  ,    3.910698  ],\n         [ -95.51156   ,   93.53236   ,   -8.449753  ],\n         [ 103.194115  ,  108.42658   ,  106.5539    ],\n         [ 143.75635   ,   16.688408  ,  -73.24077   ],\n         [  66.74761   ,   14.342918  ,  -75.35956   ],\n         [ -86.136635  , -116.34453   ,  104.4275    ],\n         [ -28.21476   ,  -16.381783  ,   49.13575   ],\n         [ -36.397087  ,  134.93753   ,  -31.241516  ],\n         [  28.433662  ,   64.77732   ,   27.163551  ]],\n\n        [[  -9.269623  ,   66.00582   ,  -23.10746   ],\n         [-103.75877   ,   76.07835   ,   93.18116   ],\n         [ -71.81348   ,    5.6562347 ,   82.02421   ],\n         [ -33.964752  ,   38.981087  ,   96.09727   ],\n         [  55.7073    ,   30.743568  ,    0.65618134],\n         [ 102.59971   ,   48.084816  ,  -87.80476   ],\n         [   2.6993713 ,  -27.567978  ,   24.361244  ],\n         [  30.236183  ,  -23.320435  ,  100.12144   ],\n         [ -46.98471   , -115.64737   ,  -96.92085   ],\n         [  28.080956  , -104.08686   ,  -39.41176   ]],\n\n        [[  30.718666  , -112.86774   ,  -51.93216   ],\n         [  99.705864  ,    2.54393   ,   90.82308   ],\n         [   2.7554626 ,  -23.16845   ,  106.29774   ],\n         [ -30.56475   ,   99.35194   ,  108.64861   ],\n         [  77.265755  ,   46.25054   , -113.75787   ],\n         [ -69.15422   , -110.372696  ,  127.69947   ],\n         [ -53.248543  ,  -94.968346  ,  100.25776   ],\n         [  36.307625  ,  104.150734  ,   -2.5894394 ],\n         [ -15.102142  ,   54.644997  , -106.5977    ],\n         [ 140.84064   ,  -97.821594  ,  -69.40843   ]],\n\n        [[ -38.49505   ,   67.97646   ,  -35.000504  ],\n         [ -83.56723   ,   39.974052  ,    1.0968704 ],\n         [  75.42541   ,   96.78579   ,   29.467705  ],\n         [ -46.70992   ,   76.17428   ,  -45.11458   ],\n         [ -20.313637  ,  -98.723366  ,  129.40213   ],\n         [ -13.352386  ,   -0.6320267 ,  -46.398293  ],\n         [   0.27935028,  -41.96187   ,   43.95037   ],\n         [ -24.807014  ,  107.0187    ,  104.63279   ],\n         [  40.381874  , -108.61122   ,  -96.92446   ],\n         [ -94.73518   ,   34.288246  ,  -63.49948   ]],\n\n        [[  87.9587    ,    1.2319641 , -100.4597    ],\n         [ -73.696014  ,   29.257545  ,  -47.46705   ],\n         [ -46.02451   ,    6.9926224 ,  -23.603584  ],\n         [-102.12582   ,   76.550896  ,    9.42144   ],\n         [ -47.69234   ,   26.827354  ,  -45.923233  ],\n         [ 104.20513   ,   38.850212  ,  -53.309105  ],\n         [ -88.22844   ,   32.472466  , -101.575386  ],\n         [  -7.1699905 ,   37.751762  ,  -95.88416   ],\n         [ 134.08249   ,  -20.97361   ,   85.048744  ],\n         [ -66.28078   ,   81.32018   ,  -26.208786  ]],\n\n        [[  80.45147   ,   -4.762459  ,  107.3892    ],\n         [ -77.52976   ,  -74.84862   ,  109.8727    ],\n         [ 128.28122   ,  -12.178062  ,  -47.816406  ],\n         [  96.893135  ,   53.722466  ,  119.39239   ],\n         [ -91.15711   ,   96.88084   ,  102.35964   ],\n         [  55.81167   ,    6.6553955 ,  -88.75789   ],\n         [-102.59885   ,   44.33567   ,  -66.76671   ],\n         [-103.739006  ,  -74.05126   ,   79.39214   ],\n         [ -75.36366   ,  -16.77774   , -117.830025  ],\n         [ -74.206154  ,   -4.96669   ,   96.32842   ]],\n\n        [[ 111.15009   ,   -7.150093  ,  -48.89714   ],\n         [ 133.80685   ,  -58.153606  ,   64.12948   ],\n         [  36.82586   ,  121.725365  ,  -49.471733  ],\n         [  15.690208  , -114.53781   ,   17.558525  ],\n         [ 130.84781   , -102.25605   ,  -49.693024  ],\n         [  -7.3326187 ,  130.82324   ,    3.8498611 ],\n         [ -98.48589   ,   13.143379  ,   84.3991    ],\n         [ -19.896484  , -105.30106   ,  -22.840996  ],\n         [ 124.79426   , -106.21458   ,  -64.797165  ],\n         [ 115.10668   ,  -40.603195  ,  102.63383   ]],\n\n        [[  66.68803   ,   68.968925  ,  -71.87627   ],\n         [  80.26563   ,  116.60201   ,  -29.985085  ],\n         [ 131.19147   ,  136.13809   ,  -68.28479   ],\n         [ -95.59573   ,   85.168755  ,   70.69259   ],\n         [  25.892845  ,  -92.43353   ,   61.548134  ],\n         [  55.7978    ,  100.11825   ,   84.35757   ],\n         [ 131.35974   ,  -71.94409   ,  -80.85191   ],\n         [ 120.94297   ,  -83.614075  ,   68.57046   ],\n         [ 144.75497   ,   53.309685  ,   90.32171   ],\n         [ 112.46548   ,   73.4119    ,   33.58216   ]],\n\n        [[  41.085625  ,  -78.83304   ,  111.55976   ],\n         [ 101.868706  ,  -53.53844   ,  120.03828   ],\n         [  52.400215  ,  -27.197319  ,  -11.423798  ],\n         [  57.517525  ,  -13.669853  ,    0.6244278 ],\n         [ -24.728363  ,   93.091576  ,  -87.197174  ],\n         [  99.99297   ,  -90.977936  ,   20.008095  ],\n         [  71.16012   ,  120.87531   ,  125.10615   ],\n         [ -80.56607   ,  -22.135338  ,  -69.607574  ],\n         [  81.40017   ,  -89.97754   ,  102.40348   ],\n         [  86.40151   ,  -96.241295  ,  -65.14981   ]],\n\n        [[   3.4126968 ,    6.186798  ,  -78.82251   ],\n         [ 121.31805   ,   57.377083  ,   41.596626  ],\n         [ -82.56659   ,  -25.528946  ,  -28.5568    ],\n         [  50.70893   ,  -67.27956   ,  -36.30584   ],\n         [  -4.08918   ,  -17.774124  ,   68.19608   ],\n         [ -24.863205  ,  -14.982101  ,   14.923698  ],\n         [  96.896645  ,   77.32632   , -104.841774  ],\n         [ -50.652863  ,   -0.5390396 ,  109.47855   ],\n         [ -39.15001   ,  -76.9821    ,   57.593742  ],\n         [ -75.829025  ,  -29.085175  ,  -76.69072   ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c24e030>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[121,  86,  81],\n         [123,  16,  56],\n         [236,  16, 207],\n         [ 52, 230, 158],\n         [ 62,  98, 147],\n         [134, 151, 173],\n         [ 38,  59, 185],\n         [ 46, 218,  12],\n         [ 12,  49,  70],\n         [ 43,  15, 137]],\n\n        [[142,  64, 183],\n         [248, 102,  17],\n         [ 94,   2, 105],\n         [109,  84, 240],\n         [121,  91,  86],\n         [ 18, 245,  78],\n         [248, 245,  31],\n         [ 84,  56, 137],\n         [189,  73, 209],\n         [251, 167, 254]],\n\n        [[151, 228,  28],\n         [195, 156, 203],\n         [ 38,  29,  61],\n         [231, 132,  10],\n         [234, 166, 107],\n         [149, 234,   1],\n         [240, 229,  38],\n         [115,  98, 230],\n         [160, 225, 174],\n         [212,  29, 120]],\n\n        [[112, 129,  95],\n         [ 54, 193, 157],\n         [225, 252,  38],\n         [202, 219, 148],\n         [ 76, 230, 187],\n         [ 90,  21, 246],\n         [ 93,  79,  74],\n         [ 56, 101,  58],\n         [109, 232, 167],\n         [208,  79, 200]],\n\n        [[ 93, 238, 128],\n         [106, 201, 233],\n         [235,  30, 202],\n         [ 65,  78,  72],\n         [ 86,  83, 118],\n         [ 67, 128, 176],\n         [141, 207, 154],\n         [  3, 121, 198],\n         [ 24,  88, 182],\n         [ 36, 205,  45]],\n\n        [[200, 154, 167],\n         [140,  53,  19],\n         [178, 236, 179],\n         [125, 140, 165],\n         [250,  10,   7],\n         [191, 168, 132],\n         [ 17,  23, 125],\n         [ 35, 213, 231],\n         [242, 243,  84],\n         [206, 215, 183]],\n\n        [[123, 101, 151],\n         [147, 162, 132],\n         [170, 118,  67],\n         [226,  27,  96],\n         [ 58, 180, 246],\n         [ 55, 172,  36],\n         [193,  85,  66],\n         [ 88,  73, 253],\n         [225,  28, 189],\n         [129, 102, 108]],\n\n        [[ 10,   6,  67],\n         [112,  99, 128],\n         [179, 123,  88],\n         [ 89, 110, 211],\n         [167,  25, 154],\n         [136,  38, 137],\n         [ 46,  74, 125],\n         [131,  59, 144],\n         [ 53, 128,  84],\n         [209, 136,  18]],\n\n        [[  1, 219,  75],\n         [ 16,  11, 244],\n         [196,  64, 167],\n         [  1,  46,  35],\n         [ 57,  51,   8],\n         [197,  46,  88],\n         [104,  63, 231],\n         [109,  69, 209],\n         [ 58, 226,  30],\n         [226,  25, 136]],\n\n        [[219, 166, 188],\n         [116,  83, 152],\n         [245, 181,   1],\n         [227,  81,   9],\n         [204, 142, 242],\n         [ 76, 206, 240],\n         [235, 109,  65],\n         [  2,  20, 181],\n         [201,  52,   2],\n         [218, 201,   8]]],\n\n\n       [[[215, 119, 136],\n         [127, 103,  79],\n         [115, 210,   8],\n         [230, 225, 207],\n         [ 50, 133, 247],\n         [ 48, 131, 170],\n         [228,   0,  17],\n         [172, 100,  75],\n         [ 92, 251,  67],\n         [150, 181, 132]],\n\n        [[100, 182,  94],\n         [216, 192,   0],\n         [205, 122,  32],\n         [219, 155,  69],\n         [124, 147, 159],\n         [ 35, 164, 206],\n         [148,  89, 106],\n         [223,  93, 134],\n         [ 26,   1,  56],\n         [ 84,  12, 132]],\n\n        [[ 71,   3, 134],\n         [214, 119, 203],\n         [229,  93, 106],\n         [232, 216,  73],\n         [  9, 163, 181],\n         [251,   6,  34],\n         [223,  21,  50],\n         [121, 220, 140],\n         [ 17, 171,  88],\n         [ 54,  18, 244]],\n\n        [[ 88, 184,  65],\n         [124, 156,  20],\n         [153, 213, 179],\n         [ 78, 192,  57],\n         [253,  18,  83],\n         [ 77, 116,  90],\n         [167,  74, 104],\n         [228, 223,  79],\n         [ 26,   8, 144],\n         [ 60, 151,   9]],\n\n        [[ 23, 118, 191],\n         [ 76, 146,  30],\n         [100, 123,  57],\n         [133, 193,   1],\n         [ 77, 143,  56],\n         [ 70, 155, 208],\n         [ 22, 149,  15],\n         [ 27, 154,  96],\n         [208,  95, 238],\n         [ 97, 198,  37]],\n\n        [[231, 112, 184],\n         [233,  41,  26],\n         [ 75, 104, 232],\n         [243, 170, 200],\n         [226, 213,  12],\n         [ 34, 123, 159],\n         [ 56, 161,   1],\n         [203,  42,   0],\n         [  5, 100,  28],\n         [220, 111,  29]],\n\n        [[ 74, 109, 215],\n         [187,  58, 237],\n         [ 74, 238, 140],\n         [141,   2, 119],\n         [ 73,  14, 234],\n         [127, 247,  96],\n         [208, 129,   5],\n         [100,  11,  84],\n         [ 58,  10, 228],\n         [226,  76, 219]],\n\n        [[ 51, 185, 170],\n         [ 93, 233, 184],\n         [ 55, 252, 235],\n         [194, 201,   8],\n         [185,  24, 129],\n         [208, 216, 159],\n         [ 42,  44, 235],\n         [192,  33, 224],\n         [214, 170, 248],\n         [157, 190, 216]],\n\n        [[235,  37, 145],\n         [243,  63, 205],\n         [112,  89, 156],\n         [124, 103, 161],\n         [ 36, 209,  79],\n         [143,  25, 203],\n         [248, 237, 175],\n         [ 54,  94,  23],\n         [226,  26, 185],\n         [ 58,  20, 190]],\n\n        [[ 44, 122, 107],\n         [165, 174, 225],\n         [ 95,  91,  21],\n         [ 87,  49, 154],\n         [191,  99,  99],\n         [138, 101,  79],\n         [ 18, 194, 200],\n         [233, 116,  53],\n         [181,  39,  64],\n         [ 46,  87,  28]]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c20d3a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-2.2939003e+01, -3.0778999e+01, -2.6800003e+00],\n         [-4.7939003e+01, -1.0077900e+02, -6.8000031e-01],\n         [ 1.0306100e+02, -1.0077900e+02,  1.1232000e+02],\n         [ 5.4060997e+01,  1.1322100e+02, -7.1680000e+01],\n         [ 4.3060997e+01, -1.8778999e+01, -6.1680000e+01],\n         [ 6.9060997e+01,  3.4221001e+01,  1.0320000e+01],\n         [ 8.1060997e+01, -5.7778999e+01, -8.5680000e+01],\n         [-9.1939003e+01,  1.0122100e+02, -7.7680000e+01],\n         [-3.3939003e+01, -6.7778999e+01, -1.1168000e+02],\n         [ 3.3060997e+01, -1.0177900e+02, -8.0680000e+01]],\n\n        [[ 7.9060997e+01, -5.2778999e+01,  1.8320000e+01],\n         [-8.6939003e+01, -1.4778999e+01,  1.2432000e+02],\n         [ 1.0609970e+00, -1.1477900e+02, -2.9680000e+01],\n         [ 1.3606100e+02, -3.2778999e+01, -1.4680000e+01],\n         [-1.7939003e+01, -2.5778999e+01, -2.6800003e+00],\n         [-2.5939003e+01,  1.2822101e+02, -1.0568000e+02],\n         [-7.2939003e+01,  1.2822101e+02,  1.2432000e+02],\n         [ 3.3060997e+01, -6.0778999e+01, -3.9680000e+01],\n         [ 1.0506100e+02, -4.3778999e+01,  6.5320000e+01],\n         [ 1.5006100e+02,  5.0221001e+01,  1.2732000e+02]],\n\n        [[-7.5939003e+01,  1.1122100e+02,  2.7320000e+01],\n         [ 9.9060997e+01,  3.9221001e+01,  7.1320000e+01],\n         [-4.2939003e+01, -8.7778999e+01, -8.5680000e+01],\n         [-9.3939003e+01,  1.5221001e+01,  1.0732000e+02],\n         [ 3.0609970e+00,  4.9221001e+01,  1.1032000e+02],\n         [-1.0293900e+02,  1.1722100e+02,  2.5320000e+01],\n         [-6.5939003e+01,  1.1222100e+02,  1.1632000e+02],\n         [ 1.2606100e+02, -1.8778999e+01, -8.6800003e+00],\n         [ 7.0060997e+01,  1.0822100e+02,  3.6320000e+01],\n         [ 1.6060997e+01, -8.7778999e+01,  8.8320000e+01]],\n\n        [[-8.9390030e+00,  1.2221001e+01, -1.1680000e+01],\n         [ 5.3060997e+01,  7.6221001e+01, -6.9680000e+01],\n         [-6.5939003e+01,  1.3522101e+02,  1.0132000e+02],\n         [ 4.4060997e+01,  1.0222100e+02,  7.8320000e+01],\n         [ 8.3060997e+01,  1.1322100e+02, -4.7680000e+01],\n         [ 1.4206100e+02, -9.5778999e+01, -3.3680000e+01],\n         [-2.9939003e+01, -3.7778999e+01, -3.0680000e+01],\n         [-4.5939003e+01, -1.5778999e+01, -6.7680000e+01],\n         [ 6.3060997e+01,  1.1522100e+02, -1.4680000e+01],\n         [ 9.6060997e+01, -3.7778999e+01,  8.4320000e+01]],\n\n        [[ 2.4060997e+01,  1.2122100e+02, -3.0680000e+01],\n         [ 1.2906100e+02,  8.4221001e+01, -1.7680000e+01],\n         [ 9.8060997e+01, -8.6778999e+01,  1.1132000e+02],\n         [-3.1939003e+01, -3.8778999e+01, -5.8680000e+01],\n         [ 1.4060997e+01, -3.3778999e+01, -3.7680000e+01],\n         [ 7.2060997e+01,  1.1221001e+01, -5.6680000e+01],\n         [ 5.0060997e+01,  9.0221001e+01,  1.7320000e+01],\n         [ 9.4060997e+01,  4.2210007e+00, -1.2068000e+02],\n         [ 7.8060997e+01, -2.8778999e+01, -9.9680000e+01],\n         [-5.8939003e+01,  8.8221001e+01, -8.7680000e+01]],\n\n        [[ 6.3060997e+01,  3.7221001e+01,  7.6320000e+01],\n         [-8.4939003e+01, -6.3778999e+01,  1.6320000e+01],\n         [ 7.5060997e+01,  1.1922100e+02,  5.4320000e+01],\n         [ 6.1060997e+01,  2.3221001e+01,  1.3199997e+00],\n         [-9.6939003e+01, -1.0677900e+02,  1.2632000e+02],\n         [ 2.8060997e+01,  5.1221001e+01,  6.7320000e+01],\n         [ 2.1060997e+01, -9.3778999e+01, -1.0668000e+02],\n         [ 1.2706100e+02,  9.6221001e+01, -8.8680000e+01],\n         [-1.9939003e+01,  1.2622100e+02,  1.1832000e+02],\n         [ 7.9060997e+01,  9.8221001e+01,  8.2320000e+01]],\n\n        [[ 4.7060997e+01, -1.5778999e+01, -6.8000031e-01],\n         [ 2.8060997e+01,  4.5221001e+01,  2.3320000e+01],\n         [-3.6939003e+01,  1.2210007e+00,  4.6320000e+01],\n         [-7.9390030e+00, -8.9778999e+01,  1.0232000e+02],\n         [ 1.4206100e+02,  6.3221001e+01, -6.5680000e+01],\n         [-6.7939003e+01,  5.5221001e+01, -6.8680000e+01],\n         [-3.7939003e+01, -3.1778999e+01,  6.9320000e+01],\n         [ 1.4906100e+02, -4.3778999e+01, -3.5680000e+01],\n         [ 8.5060997e+01, -8.8778999e+01,  1.0132000e+02],\n         [ 4.0609970e+00, -1.4778999e+01,  5.3199997e+00]],\n\n        [[-3.6939003e+01, -1.1077900e+02, -1.1368000e+02],\n         [ 2.4060997e+01, -1.7778999e+01, -1.1680000e+01],\n         [-1.5939003e+01,  6.2210007e+00,  5.5320000e+01],\n         [ 1.0706100e+02, -6.7789993e+00, -3.4680000e+01],\n         [ 5.0060997e+01, -9.1778999e+01,  4.3320000e+01],\n         [ 3.3060997e+01, -7.8778999e+01,  1.2320000e+01],\n         [ 2.1060997e+01, -4.2778999e+01, -7.7680000e+01],\n         [ 4.0060997e+01, -5.7778999e+01,  7.3199997e+00],\n         [-1.9939003e+01,  1.1221001e+01, -7.0680000e+01],\n         [-8.5939003e+01,  1.9221001e+01,  8.5320000e+01]],\n\n        [[-2.8939003e+01,  1.0222100e+02, -1.2268000e+02],\n         [ 1.4006100e+02, -1.0577900e+02, -1.0768000e+02],\n         [ 6.3060997e+01, -5.2778999e+01,  7.2320000e+01],\n         [-6.8939003e+01, -7.0778999e+01, -1.2268000e+02],\n         [-9.5939003e+01, -6.5778999e+01, -6.6680000e+01],\n         [-1.5939003e+01, -7.0778999e+01,  7.3320000e+01],\n         [ 1.2706100e+02, -5.3778999e+01, -1.9680000e+01],\n         [ 1.0506100e+02, -4.7778999e+01, -1.4680000e+01],\n         [-7.3939003e+01,  1.0922100e+02, -6.5680000e+01],\n         [ 3.2060997e+01, -9.1778999e+01,  1.0232000e+02]],\n\n        [[ 8.4060997e+01,  4.9221001e+01,  9.5320000e+01],\n         [ 4.8060997e+01, -3.3778999e+01, -7.6800003e+00],\n         [-1.0293900e+02,  6.4221001e+01,  1.2132000e+02],\n         [-9.4939003e+01, -3.5778999e+01,  1.0332000e+02],\n         [ 1.3806100e+02,  2.5221001e+01,  8.0320000e+01],\n         [ 1.3606100e+02,  8.9221001e+01, -4.7680000e+01],\n         [-3.8939003e+01, -7.7789993e+00,  1.1132000e+02],\n         [ 7.7060997e+01, -9.6778999e+01, -1.2168000e+02],\n         [-1.0193900e+02, -6.4778999e+01,  7.7320000e+01],\n         [-9.5939003e+01,  8.4221001e+01,  9.4320000e+01]]],\n\n\n       [[[ 3.2060997e+01,  2.2210007e+00,  9.1320000e+01],\n         [-2.4939003e+01, -1.3778999e+01,  3.3199997e+00],\n         [-9.5939003e+01,  9.3221001e+01, -8.6800003e+00],\n         [ 1.0306100e+02,  1.0822100e+02,  1.0632000e+02],\n         [ 1.4306100e+02,  1.6221001e+01, -7.3680000e+01],\n         [ 6.6060997e+01,  1.4221001e+01, -7.5680000e+01],\n         [-8.6939003e+01, -1.1677900e+02,  1.0432000e+02],\n         [-2.8939003e+01, -1.6778999e+01,  4.8320000e+01],\n         [-3.6939003e+01,  1.3422101e+02, -3.1680000e+01],\n         [ 2.8060997e+01,  6.4221001e+01,  2.6320000e+01]],\n\n        [[-9.9390030e+00,  6.5221001e+01, -2.3680000e+01],\n         [-1.0393900e+02,  7.5221001e+01,  9.2320000e+01],\n         [-7.1939003e+01,  5.2210007e+00,  8.1320000e+01],\n         [-3.4939003e+01,  3.8221001e+01,  9.5320000e+01],\n         [ 5.5060997e+01,  3.0221001e+01,  3.1999969e-01],\n         [ 1.0206100e+02,  4.7221001e+01, -8.8680000e+01],\n         [ 2.0609970e+00, -2.7778999e+01,  2.4320000e+01],\n         [ 3.0060997e+01, -2.3778999e+01,  9.9320000e+01],\n         [-4.7939003e+01, -1.1577900e+02, -9.7680000e+01],\n         [ 2.8060997e+01, -1.0477900e+02, -3.9680000e+01]],\n\n        [[ 3.0060997e+01, -1.1377900e+02, -5.2680000e+01],\n         [ 9.9060997e+01,  2.2210007e+00,  9.0320000e+01],\n         [ 2.0609970e+00, -2.3778999e+01,  1.0532000e+02],\n         [-3.0939003e+01,  9.9221001e+01,  1.0832000e+02],\n         [ 7.7060997e+01,  4.6221001e+01, -1.1468000e+02],\n         [-6.9939003e+01, -1.1077900e+02,  1.2732000e+02],\n         [-5.3939003e+01, -9.5778999e+01,  9.9320000e+01],\n         [ 3.6060997e+01,  1.0322100e+02, -2.6800003e+00],\n         [-1.5939003e+01,  5.4221001e+01, -1.0668000e+02],\n         [ 1.4006100e+02, -9.8778999e+01, -6.9680000e+01]],\n\n        [[-3.8939003e+01,  6.7221001e+01, -3.5680000e+01],\n         [-8.3939003e+01,  3.9221001e+01,  3.1999969e-01],\n         [ 7.5060997e+01,  9.6221001e+01,  2.9320000e+01],\n         [-4.6939003e+01,  7.5221001e+01, -4.5680000e+01],\n         [-2.0939003e+01, -9.8778999e+01,  1.2932001e+02],\n         [-1.3939003e+01, -7.7899933e-01, -4.6680000e+01],\n         [ 6.0997009e-02, -4.2778999e+01,  4.3320000e+01],\n         [-2.4939003e+01,  1.0622100e+02,  1.0432000e+02],\n         [ 4.0060997e+01, -1.0877900e+02, -9.7680000e+01],\n         [-9.4939003e+01,  3.4221001e+01, -6.3680000e+01]],\n\n        [[ 8.7060997e+01,  1.2210007e+00, -1.0068000e+02],\n         [-7.3939003e+01,  2.9221001e+01, -4.7680000e+01],\n         [-4.6939003e+01,  6.2210007e+00, -2.3680000e+01],\n         [-1.0293900e+02,  7.6221001e+01,  9.3199997e+00],\n         [-4.7939003e+01,  2.6221001e+01, -4.6680000e+01],\n         [ 1.0406100e+02,  3.8221001e+01, -5.3680000e+01],\n         [-8.8939003e+01,  3.2221001e+01, -1.0168000e+02],\n         [-7.9390030e+00,  3.7221001e+01, -9.6680000e+01],\n         [ 1.3406100e+02, -2.1778999e+01,  8.4320000e+01],\n         [-6.6939003e+01,  8.1221001e+01, -2.6680000e+01]],\n\n        [[ 8.0060997e+01, -4.7789993e+00,  1.0732000e+02],\n         [-7.7939003e+01, -7.5778999e+01,  1.0932000e+02],\n         [ 1.2806100e+02, -1.2778999e+01, -4.8680000e+01],\n         [ 9.6060997e+01,  5.3221001e+01,  1.1932000e+02],\n         [-9.1939003e+01,  9.6221001e+01,  1.0232000e+02],\n         [ 5.5060997e+01,  6.2210007e+00, -8.9680000e+01],\n         [-1.0293900e+02,  4.4221001e+01, -6.7680000e+01],\n         [-1.0393900e+02, -7.4778999e+01,  7.9320000e+01],\n         [-7.5939003e+01, -1.6778999e+01, -1.1868000e+02],\n         [-7.4939003e+01, -5.7789993e+00,  9.6320000e+01]],\n\n        [[ 1.1106100e+02, -7.7789993e+00, -4.9680000e+01],\n         [ 1.3306100e+02, -5.8778999e+01,  6.3320000e+01],\n         [ 3.6060997e+01,  1.2122100e+02, -4.9680000e+01],\n         [ 1.5060997e+01, -1.1477900e+02,  1.7320000e+01],\n         [ 1.3006100e+02, -1.0277900e+02, -5.0680000e+01],\n         [-7.9390030e+00,  1.3022101e+02,  3.3199997e+00],\n         [-9.8939003e+01,  1.2221001e+01,  8.4320000e+01],\n         [-1.9939003e+01, -1.0577900e+02, -2.3680000e+01],\n         [ 1.2406100e+02, -1.0677900e+02, -6.5680000e+01],\n         [ 1.1506100e+02, -4.0778999e+01,  1.0232000e+02]],\n\n        [[ 6.6060997e+01,  6.8221001e+01, -7.2680000e+01],\n         [ 8.0060997e+01,  1.1622100e+02, -3.0680000e+01],\n         [ 1.3106100e+02,  1.3522101e+02, -6.8680000e+01],\n         [-9.5939003e+01,  8.4221001e+01,  7.0320000e+01],\n         [ 2.5060997e+01, -9.2778999e+01,  6.1320000e+01],\n         [ 5.5060997e+01,  9.9221001e+01,  8.4320000e+01],\n         [ 1.3106100e+02, -7.2778999e+01, -8.1680000e+01],\n         [ 1.2006100e+02, -8.3778999e+01,  6.8320000e+01],\n         [ 1.4406100e+02,  5.3221001e+01,  9.0320000e+01],\n         [ 1.1206100e+02,  7.3221001e+01,  3.3320000e+01]],\n\n        [[ 4.1060997e+01, -7.9778999e+01,  1.1132000e+02],\n         [ 1.0106100e+02, -5.3778999e+01,  1.1932000e+02],\n         [ 5.2060997e+01, -2.7778999e+01, -1.1680000e+01],\n         [ 5.7060997e+01, -1.3778999e+01,  3.1999969e-01],\n         [-2.4939003e+01,  9.2221001e+01, -8.7680000e+01],\n         [ 9.9060997e+01, -9.1778999e+01,  1.9320000e+01],\n         [ 7.1060997e+01,  1.2022100e+02,  1.2432000e+02],\n         [-8.0939003e+01, -2.2778999e+01, -6.9680000e+01],\n         [ 8.1060997e+01, -9.0778999e+01,  1.0232000e+02],\n         [ 8.6060997e+01, -9.6778999e+01, -6.5680000e+01]],\n\n        [[ 3.0609970e+00,  5.2210007e+00, -7.9680000e+01],\n         [ 1.2106100e+02,  5.7221001e+01,  4.1320000e+01],\n         [-8.2939003e+01, -2.5778999e+01, -2.8680000e+01],\n         [ 5.0060997e+01, -6.7778999e+01, -3.6680000e+01],\n         [-4.9390030e+00, -1.7778999e+01,  6.7320000e+01],\n         [-2.4939003e+01, -1.5778999e+01,  1.4320000e+01],\n         [ 9.6060997e+01,  7.7221001e+01, -1.0568000e+02],\n         [-5.0939003e+01, -7.7899933e-01,  1.0932000e+02],\n         [-3.9939003e+01, -7.7778999e+01,  5.7320000e+01],\n         [-7.5939003e+01, -2.9778999e+01, -7.7680000e+01]]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c24ead0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[1.21068350e+02, 8.62276894e+01, 8.13651826e+01],\n         [1.23268088e+02, 1.62126141e+01, 5.66569255e+01],\n         [2.36706489e+02, 1.65452722e+01, 2.07730225e+02],\n         [5.27068128e+01, 2.30170871e+02, 1.58880042e+02],\n         [6.25472467e+01, 9.81849415e+01, 1.47115357e+02],\n         [1.34138962e+02, 1.51684037e+02, 1.73946535e+02],\n         [3.84740913e+01, 5.96978241e+01, 1.85168241e+02],\n         [4.69701516e+01, 2.18813475e+02, 1.26164229e+01],\n         [1.21961647e+01, 4.95320635e+01, 7.04691159e+01],\n         [4.33600591e+01, 1.50182035e+01, 1.37618402e+02]],\n\n        [[1.42452372e+02, 6.47183772e+01, 1.83798455e+02],\n         [2.48545301e+02, 1.02968616e+02, 1.76796945e+01],\n         [9.42572391e+01, 2.98737495e+00, 1.05858602e+02],\n         [1.09301854e+02, 8.42185881e+01, 2.40128956e+02],\n         [1.21075890e+02, 9.19727599e+01, 8.61675473e+01],\n         [1.82107712e+01, 2.45100365e+02, 7.88393812e+01],\n         [2.48983441e+02, 2.45844592e+02, 3.12605365e+01],\n         [8.49660019e+01, 5.65477248e+01, 1.37212085e+02],\n         [1.89370743e+02, 7.32894849e+01, 2.09684173e+02],\n         [2.51875316e+02, 1.67078730e+02, 2.54147092e+02]],\n\n        [[1.51523462e+02, 2.28331293e+02, 2.86269552e+01],\n         [1.95063171e+02, 1.56142933e+02, 2.03857327e+02],\n         [3.81684718e+01, 2.90682873e+01, 6.17784072e+01],\n         [2.31588976e+02, 1.32782942e+02, 1.06220461e+01],\n         [2.34745737e+02, 1.66990437e+02, 1.07761349e+02],\n         [1.49826559e+02, 2.34437358e+02, 1.33170689e+00],\n         [2.40075221e+02, 2.29326808e+02, 3.82447412e+01],\n         [1.15090699e+02, 9.82019997e+01, 2.30178675e+02],\n         [1.60178916e+02, 2.25671387e+02, 1.74476213e+02],\n         [2.12669475e+02, 2.98681543e+01, 1.20288396e+02]],\n\n        [[1.12068878e+02, 1.29964666e+02, 9.55372107e+01],\n         [5.40849044e+01, 1.93986453e+02, 1.57253207e+02],\n         [2.25836258e+02, 2.52973036e+02, 3.81520968e+01],\n         [2.02765523e+02, 2.19952464e+02, 1.48037689e+02],\n         [7.69876548e+01, 2.30351215e+02, 1.87667571e+02],\n         [9.06156666e+01, 2.17377061e+01, 2.46296753e+02],\n         [9.35569560e+01, 7.92299786e+01, 7.42782973e+01],\n         [5.67692723e+01, 1.01909215e+02, 5.80698854e+01],\n         [1.09361080e+02, 2.32702005e+02, 1.67682983e+02],\n         [2.08151746e+02, 7.94750231e+01, 2.00265861e+02]],\n\n        [[9.39152210e+01, 2.38545027e+02, 1.28310482e+02],\n         [1.06397820e+02, 2.01713292e+02, 2.33984042e+02],\n         [2.35475460e+02, 3.00784331e+01, 2.02533753e+02],\n         [6.58670675e+01, 7.85601076e+01, 7.22779061e+01],\n         [8.69290116e+01, 8.32443220e+01, 1.18976535e+02],\n         [6.71076542e+01, 1.28869334e+02, 1.76085249e+02],\n         [1.41979454e+02, 2.07026461e+02, 1.54568971e+02],\n         [3.31405285e+00, 1.21940110e+02, 1.98293830e+02],\n         [2.48316143e+01, 8.84519286e+01, 1.82009690e+02],\n         [3.64004041e+01, 2.05320773e+02, 4.59611210e+01]],\n\n        [[2.00975024e+02, 1.54463899e+02, 1.67551703e+02],\n         [1.40943128e+02, 5.36876064e+01, 1.99758321e+01],\n         [1.78607165e+02, 2.36416962e+02, 1.79449937e+02],\n         [1.25142510e+02, 1.40531906e+02, 1.65997843e+02],\n         [2.50038327e+02, 1.00711304e+01, 7.41706105e+00],\n         [1.91098262e+02, 1.68845279e+02, 1.32237911e+02],\n         [1.75363093e+01, 2.32742486e+01, 1.25357181e+02],\n         [3.50417981e+01, 2.13968264e+02, 2.31619657e+02],\n         [2.42229896e+02, 2.43513303e+02, 8.49187073e+01],\n         [2.06886402e+02, 2.15145884e+02, 1.83063627e+02]],\n\n        [[1.23153571e+02, 1.01129254e+02, 1.51225276e+02],\n         [1.47905885e+02, 1.62726083e+02, 1.32956566e+02],\n         [1.70186555e+02, 1.18765832e+02, 6.70326707e+01],\n         [2.26717807e+02, 2.72411364e+01, 9.63494104e+01],\n         [5.83375470e+01, 1.80014666e+02, 2.46162779e+02],\n         [5.56334092e+01, 1.72897502e+02, 3.66706204e+01],\n         [1.93473016e+02, 8.57826078e+01, 6.65428176e+01],\n         [8.88815235e+01, 7.31242924e+01, 2.53040857e+02],\n         [2.25020634e+02, 2.80109405e+01, 1.89083372e+02],\n         [1.29829600e+02, 1.02099544e+02, 1.08642796e+02]],\n\n        [[1.07882354e+01, 6.27239059e+00, 6.77107453e+01],\n         [1.12741795e+02, 9.97360530e+01, 1.28053175e+02],\n         [1.79743996e+02, 1.23692497e+02, 8.86920814e+01],\n         [8.97172570e+01, 1.10755959e+02, 2.11697935e+02],\n         [1.67268201e+02, 2.50171685e+01, 1.54488051e+02],\n         [1.36383411e+02, 3.88762182e+01, 1.37937243e+02],\n         [4.65602979e+01, 7.42632137e+01, 1.25666171e+02],\n         [1.31037931e+02, 5.99364281e+01, 1.44401382e+02],\n         [5.30201533e+01, 1.28290970e+02, 8.46630727e+01],\n         [2.09353678e+02, 1.36355214e+02, 1.81982468e+01]],\n\n        [[1.95777636e+00, 2.19398816e+02, 7.59400779e+01],\n         [1.65291858e+01, 1.10771716e+01, 2.44867185e+02],\n         [1.96989908e+02, 6.42523497e+01, 1.67326544e+02],\n         [1.43548213e+00, 4.61246059e+01, 3.54641340e+01],\n         [5.71212220e+01, 5.14423333e+01, 8.78614841e+00],\n         [1.97235377e+02, 4.65733988e+01, 8.84070413e+01],\n         [1.04141297e+02, 6.33342004e+01, 2.31184526e+02],\n         [1.09726671e+02, 6.96475162e+01, 2.09388603e+02],\n         [5.87361615e+01, 2.26701442e+02, 3.00781249e+01],\n         [2.26852446e+02, 2.59753422e+01, 1.36103420e+02]],\n\n        [[2.19115147e+02, 1.66373994e+02, 1.88512937e+02],\n         [1.16512669e+02, 8.32388538e+01, 1.52574653e+02],\n         [2.45526018e+02, 1.81794855e+02, 1.58801040e+00],\n         [2.27154241e+02, 8.12238240e+01, 9.80502898e+00],\n         [2.04547900e+02, 1.42146285e+02, 2.42438569e+02],\n         [7.63235383e+01, 2.06199752e+02, 2.40399357e+02],\n         [2.35452545e+02, 1.09184840e+02, 6.55966987e+01],\n         [2.31609471e+00, 2.05200647e+01, 1.81998398e+02],\n         [2.01253710e+02, 5.25818859e+01, 2.20492786e+00],\n         [2.18433936e+02, 2.01412388e+02, 8.81164494e+00]]],\n\n\n       [[[2.15213142e+02, 1.19576359e+02, 1.36714513e+02],\n         [1.27590700e+02, 1.03517046e+02, 7.98046017e+01],\n         [1.15230250e+02, 2.10311357e+02, 8.42744279e+00],\n         [2.30233897e+02, 2.25205575e+02, 2.07133114e+02],\n         [5.04392341e+01, 1.33467412e+02, 2.47695346e+02],\n         [4.83204421e+01, 1.31121911e+02, 1.70686618e+02],\n         [2.28107497e+02, 4.34470697e-01, 1.78023700e+01],\n         [1.72815748e+02, 1.00397215e+02, 7.57242442e+01],\n         [9.24384834e+01, 2.51716526e+02, 6.75419155e+01],\n         [1.50843552e+02, 1.81556322e+02, 1.32372664e+02]],\n\n        [[1.00572538e+02, 1.82784826e+02, 9.46693795e+01],\n         [2.16861167e+02, 1.92857350e+02, 1.80231596e-01],\n         [2.05704205e+02, 1.22435237e+02, 3.21255293e+01],\n         [2.19777262e+02, 1.55760086e+02, 6.99742500e+01],\n         [1.24336181e+02, 1.47522573e+02, 1.59646303e+02],\n         [3.58752366e+01, 1.64863819e+02, 2.06538715e+02],\n         [1.48041244e+02, 8.92110231e+01, 1.06638374e+02],\n         [2.23801437e+02, 9.34585633e+01, 1.34175189e+02],\n         [2.67591470e+01, 1.13163303e+00, 5.69542908e+01],\n         [8.42682417e+01, 1.26921361e+01, 1.32019963e+02]],\n\n        [[7.17478435e+01, 3.91126488e+00, 1.34657676e+02],\n         [2.14503080e+02, 1.19322926e+02, 2.03644861e+02],\n         [2.29977730e+02, 9.36105466e+01, 1.06694467e+02],\n         [2.32328619e+02, 2.16130936e+02, 7.33742535e+01],\n         [9.92212708e+00, 1.63029544e+02, 1.81204759e+02],\n         [2.51379469e+02, 6.40630412e+00, 3.47847777e+01],\n         [2.23937753e+02, 2.18106553e+01, 5.06904587e+01],\n         [1.21090564e+02, 2.20929729e+02, 1.40246626e+02],\n         [1.70823006e+01, 1.71423994e+02, 8.88368632e+01],\n         [5.42715631e+01, 1.89574023e+01, 2.44779625e+02]],\n\n        [[8.86794944e+01, 1.84755457e+02, 6.54439580e+01],\n         [1.24776868e+02, 1.56753055e+02, 2.03717775e+01],\n         [1.53147701e+02, 2.13564795e+02, 1.79364405e+02],\n         [7.85654255e+01, 1.92953279e+02, 5.72290856e+01],\n         [2.53082131e+02, 1.80556320e+01, 8.36253651e+01],\n         [7.72817091e+01, 1.16146975e+02, 9.05866190e+01],\n         [1.67630370e+02, 7.48171320e+01, 1.04218352e+02],\n         [2.28312796e+02, 2.23797699e+02, 7.91319885e+01],\n         [2.67555383e+01, 8.16777741e+00, 1.44320872e+02],\n         [6.01805190e+01, 1.51067245e+02, 9.20381575e+00]],\n\n        [[2.32202949e+01, 1.18010967e+02, 1.91897698e+02],\n         [7.62129514e+01, 1.46036541e+02, 3.02429932e+01],\n         [1.00076413e+02, 1.23771620e+02, 5.79144940e+01],\n         [1.33101440e+02, 1.93329891e+02, 1.81319009e+00],\n         [7.77567691e+01, 1.43606352e+02, 5.62466620e+01],\n         [7.03708945e+01, 1.55629219e+02, 2.08144139e+02],\n         [2.21046168e+01, 1.49251472e+02, 1.57105626e+01],\n         [2.77958392e+01, 1.54530755e+02, 9.67690089e+01],\n         [2.08728751e+02, 9.58053874e+01, 2.38021506e+02],\n         [9.74712114e+01, 1.98099189e+02, 3.76582256e+01]],\n\n        [[2.31069203e+02, 1.12016542e+02, 1.84390475e+02],\n         [2.33552705e+02, 4.19303813e+01, 2.64092389e+01],\n         [7.58635918e+01, 1.04600933e+02, 2.32220216e+02],\n         [2.43072389e+02, 1.70501470e+02, 2.00832141e+02],\n         [2.26039648e+02, 2.13659830e+02, 1.27818900e+01],\n         [3.49221102e+01, 1.23434398e+02, 1.59750670e+02],\n         [5.69132901e+01, 1.61114666e+02, 1.34015617e+00],\n         [2.03072143e+02, 4.27277378e+01, 2.00000634e-01],\n         [5.84997423e+00, 1.00001256e+02, 2.85753412e+01],\n         [2.20008425e+02, 1.11812313e+02, 2.97328494e+01]],\n\n        [[7.47828598e+01, 1.09628903e+02, 2.15089091e+02],\n         [1.87809484e+02, 5.86253919e+01, 2.37745867e+02],\n         [7.42082638e+01, 2.38504357e+02, 1.40764862e+02],\n         [1.41238531e+02, 2.24118929e+00, 1.19629210e+02],\n         [7.39869773e+01, 1.45229487e+01, 2.34786821e+02],\n         [1.27529858e+02, 2.47602255e+02, 9.66063836e+01],\n         [2.08079103e+02, 1.29922374e+02, 5.45311055e+00],\n         [1.00839001e+02, 1.14779380e+01, 8.40425166e+01],\n         [5.88828319e+01, 1.05644206e+01, 2.28733268e+02],\n         [2.26313823e+02, 7.61758032e+01, 2.19045681e+02]],\n\n        [[5.18037379e+01, 1.85747919e+02, 1.70627034e+02],\n         [9.36949167e+01, 2.33381007e+02, 1.84204639e+02],\n         [5.53952095e+01, 2.52917077e+02, 2.35130466e+02],\n         [1.94372585e+02, 2.01947748e+02, 8.34326717e+00],\n         [1.85228139e+02, 2.43454684e+01, 1.29831844e+02],\n         [2.08037572e+02, 2.16897249e+02, 1.59736808e+02],\n         [4.28280884e+01, 4.48349077e+01, 2.35298745e+02],\n         [1.92250465e+02, 3.31649299e+01, 2.24881979e+02],\n         [2.14001712e+02, 1.70088687e+02, 2.48693975e+02],\n         [1.57262166e+02, 1.90190906e+02, 2.16404484e+02]],\n\n        [[2.35239754e+02, 3.79459606e+01, 1.45024626e+02],\n         [2.43718275e+02, 6.32405584e+01, 2.05807713e+02],\n         [1.12256203e+02, 8.95816829e+01, 1.56339211e+02],\n         [1.24304428e+02, 1.03109143e+02, 1.61456524e+02],\n         [3.64828267e+01, 2.09870581e+02, 7.92106414e+01],\n         [1.43688096e+02, 2.58010659e+01, 2.03931971e+02],\n         [2.48786155e+02, 2.37654311e+02, 1.75099125e+02],\n         [5.40724298e+01, 9.46436609e+01, 2.33729337e+01],\n         [2.26083486e+02, 2.68014563e+01, 1.85339174e+02],\n         [5.85301952e+01, 2.05377059e+01, 1.90340513e+02]],\n\n        [[4.48574858e+01, 1.22965800e+02, 1.07351702e+02],\n         [1.65276621e+02, 1.74156081e+02, 2.25257045e+02],\n         [9.51231986e+01, 9.12500497e+01, 2.13724089e+01],\n         [8.73741626e+01, 4.94994465e+01, 1.54647937e+02],\n         [1.91876079e+02, 9.90048747e+01, 9.98498257e+01],\n         [1.38603695e+02, 1.01796901e+02, 7.90757959e+01],\n         [1.88382251e+01, 1.94105315e+02, 2.00835652e+02],\n         [2.33158559e+02, 1.16239958e+02, 5.32861415e+01],\n         [1.81273745e+02, 3.97968931e+01, 6.47889954e+01],\n         [4.69892846e+01, 8.76938243e+01, 2.81099769e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c20d490>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -22.573822  ,  -30.551308  ,   -2.6116486 ],\n         [ -47.282078  , -100.56638   ,   -0.411911  ],\n         [ 103.79122   , -100.23373   ,  113.02648   ],\n         [  54.941032  ,  113.39187   ,  -70.97319   ],\n         [  43.176353  ,  -18.594055  ,  -61.132755  ],\n         [  70.00753   ,   34.905037  ,   10.4589615 ],\n         [  81.22924   ,  -57.081177  ,  -85.20591   ],\n         [ -91.32258   ,  102.03448   ,  -76.709854  ],\n         [ -33.469887  ,  -67.24693   , -111.48383   ],\n         [  33.679405  , -101.760796  ,  -80.31995   ]],\n\n        [[  79.85946   ,  -52.060623  ,   18.772377  ],\n         [ -86.25931   ,  -13.810387  ,  124.8653    ],\n         [   1.9196014 , -113.791626  ,  -29.42276   ],\n         [ 136.18994   ,  -32.56041   ,  -14.378143  ],\n         [ -17.771454  ,  -24.806236  ,   -2.6041107 ],\n         [ -25.099625  ,  128.32138   , -105.46923   ],\n         [ -72.67847   ,  129.06558   ,  125.303444  ],\n         [  33.27308   ,  -60.231274  ,  -38.713997  ],\n         [ 105.74517   ,  -43.489517  ,   65.69074   ],\n         [ 150.2081    ,   50.299736  ,  128.19531   ]],\n\n        [[ -75.31205   ,  111.5523    ,   27.843468  ],\n         [  99.91833   ,   39.36393   ,   71.38317   ],\n         [ -42.160595  ,  -87.71071   ,  -85.51153   ],\n         [ -93.316956  ,   16.003944  ,  107.90897   ],\n         [   3.8223495 ,   50.211433  ,  111.06574   ],\n         [-102.6073    ,  117.65836   ,   26.146553  ],\n         [ -65.69426   ,  112.54781   ,  116.395226  ],\n         [ 126.23968   ,  -18.576996  ,   -8.589302  ],\n         [  70.53721   ,  108.89239   ,   36.49891   ],\n         [  16.349396  ,  -86.91084   ,   88.98948   ]],\n\n        [[  -8.401794  ,   13.185661  ,  -11.611122  ],\n         [  53.3142    ,   77.20745   ,  -69.59509   ],\n         [ -65.78691   ,  136.19403   ,  102.15626   ],\n         [  44.098686  ,  103.17347   ,   79.08552   ],\n         [  83.72857   ,  113.57221   ,  -46.692345  ],\n         [ 142.35776   ,  -95.04129   ,  -33.06433   ],\n         [ -29.660706  ,  -37.54902   ,  -30.123047  ],\n         [ -45.869118  ,  -14.8697815 ,  -66.91073   ],\n         [  63.74398   ,  115.92301   ,  -14.318916  ],\n         [  96.32685   ,  -37.303978  ,   84.47175   ]],\n\n        [[  24.371483  ,  121.76603   ,  -29.764778  ],\n         [ 130.04504   ,   84.93429   ,  -17.28218   ],\n         [  98.59475   ,  -86.70056   ,  111.79546   ],\n         [ -31.661095  ,  -38.218895  ,  -57.812935  ],\n         [  15.037529  ,  -33.534676  ,  -36.75099   ],\n         [  72.14625   ,   12.09034   ,  -56.57235   ],\n         [  50.629967  ,   90.24746   ,   18.299461  ],\n         [  94.35482   ,    5.16111   , -120.365944  ],\n         [  78.07069   ,  -28.327072  ,  -98.84839   ],\n         [ -57.977882  ,   88.54177   ,  -87.279594  ]],\n\n        [[  63.612694  ,   37.6849    ,   77.29502   ],\n         [ -83.96317   ,  -63.091393  ,   17.26313   ],\n         [  75.51093   ,  119.63796   ,   54.927162  ],\n         [  62.058846  ,   23.752907  ,    1.4625092 ],\n         [ -96.52194   , -106.70787   ,  126.35833   ],\n         [  28.298912  ,   52.066277  ,   67.41827   ],\n         [  21.418175  ,  -93.50475   , -106.14369   ],\n         [ 127.68066   ,   97.18926   ,  -88.6382    ],\n         [ -19.020294  ,  126.73431   ,  118.54989   ],\n         [  79.124626  ,   98.36689   ,   83.2064    ]],\n\n        [[  47.286278  ,  -15.649742  ,   -0.5264282 ],\n         [  29.017555  ,   45.94709   ,   24.225883  ],\n         [ -36.906334  ,    1.9868317 ,   46.506554  ],\n         [  -7.589592  ,  -89.537865  ,  103.0378    ],\n         [ 142.22379   ,   63.235664  ,  -65.34245   ],\n         [ -67.26839   ,   56.118507  ,  -68.04659   ],\n         [ -37.396187  ,  -30.996391  ,   69.79302   ],\n         [ 149.10187   ,  -43.65471   ,  -34.798477  ],\n         [  85.14437   ,  -88.76806   ,  101.34063   ],\n         [   4.7037964 ,  -14.679459  ,    6.149605  ]],\n\n        [[ -36.228256  , -110.50661   , -112.89176   ],\n         [  24.114174  ,  -17.042946  ,  -10.938202  ],\n         [ -15.246925  ,    6.913498  ,   56.063988  ],\n         [ 107.758934  ,   -6.023041  ,  -33.962746  ],\n         [  50.54905   ,  -91.76183   ,   43.588203  ],\n         [  33.998238  ,  -77.90279   ,   12.703407  ],\n         [  21.727165  ,  -42.515785  ,  -77.119705  ],\n         [  40.46238   ,  -56.84257   ,    7.357933  ],\n         [ -19.275932  ,   11.5119705 ,  -70.65985   ],\n         [ -85.74075   ,   19.57621   ,   85.67368   ]],\n\n        [[ -27.998924  ,  102.61982   , -121.72222   ],\n         [ 140.92819   , -105.70183   , -107.15082   ],\n         [  63.387535  ,  -52.52665   ,   73.30991   ],\n         [ -68.47487   ,  -70.65439   , -122.244514  ],\n         [ -95.152855  ,  -65.33667   ,  -66.55878   ],\n         [ -15.53196   ,  -70.2056    ,   73.55538   ],\n         [ 127.24552   ,  -53.444798  ,  -19.538704  ],\n         [ 105.44959   ,  -47.131485  ,  -13.953331  ],\n         [ -73.86088   ,  109.92245   ,  -64.94384   ],\n         [  32.16442   ,  -90.80366   ,  103.17245   ]],\n\n        [[  84.57394   ,   49.594994  ,   95.43514   ],\n         [  48.635643  ,  -33.540146  ,   -7.167328  ],\n         [-102.35099   ,   65.01586   ,  121.846016  ],\n         [ -94.13397   ,  -35.555176  ,  103.474236  ],\n         [ 138.49957   ,   25.367287  ,   80.8679    ],\n         [ 136.46036   ,   89.42075   ,  -47.35646   ],\n         [ -38.342308  ,   -7.594162  ,  111.772545  ],\n         [  78.059395  ,  -96.258934  , -121.36391   ],\n         [-101.73408   ,  -64.19711   ,   77.57371   ],\n         [ -95.12736   ,   84.633385  ,   94.75393   ]]],\n\n\n       [[[  32.775505  ,    2.7973633 ,   91.533134  ],\n         [ -24.1344    ,  -13.261955  ,    3.910698  ],\n         [ -95.51156   ,   93.53236   ,   -8.449753  ],\n         [ 103.194115  ,  108.42658   ,  106.5539    ],\n         [ 143.75635   ,   16.688408  ,  -73.24077   ],\n         [  66.74761   ,   14.342918  ,  -75.35956   ],\n         [ -86.136635  , -116.34453   ,  104.4275    ],\n         [ -28.21476   ,  -16.381783  ,   49.13575   ],\n         [ -36.397087  ,  134.93753   ,  -31.241516  ],\n         [  28.433662  ,   64.77732   ,   27.163551  ]],\n\n        [[  -9.269623  ,   66.00582   ,  -23.10746   ],\n         [-103.75877   ,   76.07835   ,   93.18116   ],\n         [ -71.81348   ,    5.6562347 ,   82.02421   ],\n         [ -33.964752  ,   38.981087  ,   96.09727   ],\n         [  55.7073    ,   30.743568  ,    0.65618134],\n         [ 102.59971   ,   48.084816  ,  -87.80476   ],\n         [   2.6993713 ,  -27.567978  ,   24.361244  ],\n         [  30.236183  ,  -23.320435  ,  100.12144   ],\n         [ -46.98471   , -115.64737   ,  -96.92085   ],\n         [  28.080956  , -104.08686   ,  -39.41176   ]],\n\n        [[  30.718666  , -112.86774   ,  -51.93216   ],\n         [  99.705864  ,    2.54393   ,   90.82308   ],\n         [   2.7554626 ,  -23.16845   ,  106.29774   ],\n         [ -30.56475   ,   99.35194   ,  108.64861   ],\n         [  77.265755  ,   46.25054   , -113.75787   ],\n         [ -69.15422   , -110.372696  ,  127.69947   ],\n         [ -53.248543  ,  -94.968346  ,  100.25776   ],\n         [  36.307625  ,  104.150734  ,   -2.5894394 ],\n         [ -15.102142  ,   54.644997  , -106.5977    ],\n         [ 140.84064   ,  -97.821594  ,  -69.40843   ]],\n\n        [[ -38.49505   ,   67.97646   ,  -35.000504  ],\n         [ -83.56723   ,   39.974052  ,    1.0968704 ],\n         [  75.42541   ,   96.78579   ,   29.467705  ],\n         [ -46.70992   ,   76.17428   ,  -45.11458   ],\n         [ -20.313637  ,  -98.723366  ,  129.40213   ],\n         [ -13.352386  ,   -0.6320267 ,  -46.398293  ],\n         [   0.27935028,  -41.96187   ,   43.95037   ],\n         [ -24.807014  ,  107.0187    ,  104.63279   ],\n         [  40.381874  , -108.61122   ,  -96.92446   ],\n         [ -94.73518   ,   34.288246  ,  -63.49948   ]],\n\n        [[  87.9587    ,    1.2319641 , -100.4597    ],\n         [ -73.696014  ,   29.257545  ,  -47.46705   ],\n         [ -46.02451   ,    6.9926224 ,  -23.603584  ],\n         [-102.12582   ,   76.550896  ,    9.42144   ],\n         [ -47.69234   ,   26.827354  ,  -45.923233  ],\n         [ 104.20513   ,   38.850212  ,  -53.309105  ],\n         [ -88.22844   ,   32.472466  , -101.575386  ],\n         [  -7.1699905 ,   37.751762  ,  -95.88416   ],\n         [ 134.08249   ,  -20.97361   ,   85.048744  ],\n         [ -66.28078   ,   81.32018   ,  -26.208786  ]],\n\n        [[  80.45147   ,   -4.762459  ,  107.3892    ],\n         [ -77.52976   ,  -74.84862   ,  109.8727    ],\n         [ 128.28122   ,  -12.178062  ,  -47.816406  ],\n         [  96.893135  ,   53.722466  ,  119.39239   ],\n         [ -91.15711   ,   96.88084   ,  102.35964   ],\n         [  55.81167   ,    6.6553955 ,  -88.75789   ],\n         [-102.59885   ,   44.33567   ,  -66.76671   ],\n         [-103.739006  ,  -74.05126   ,   79.39214   ],\n         [ -75.36366   ,  -16.77774   , -117.830025  ],\n         [ -74.206154  ,   -4.96669   ,   96.32842   ]],\n\n        [[ 111.15009   ,   -7.150093  ,  -48.89714   ],\n         [ 133.80685   ,  -58.153606  ,   64.12948   ],\n         [  36.82586   ,  121.725365  ,  -49.471733  ],\n         [  15.690208  , -114.53781   ,   17.558525  ],\n         [ 130.84781   , -102.25605   ,  -49.693024  ],\n         [  -7.3326187 ,  130.82324   ,    3.8498611 ],\n         [ -98.48589   ,   13.143379  ,   84.3991    ],\n         [ -19.896484  , -105.30106   ,  -22.840996  ],\n         [ 124.79426   , -106.21458   ,  -64.797165  ],\n         [ 115.10668   ,  -40.603195  ,  102.63383   ]],\n\n        [[  66.68803   ,   68.968925  ,  -71.87627   ],\n         [  80.26563   ,  116.60201   ,  -29.985085  ],\n         [ 131.19147   ,  136.13809   ,  -68.28479   ],\n         [ -95.59573   ,   85.168755  ,   70.69259   ],\n         [  25.892845  ,  -92.43353   ,   61.548134  ],\n         [  55.7978    ,  100.11825   ,   84.35757   ],\n         [ 131.35974   ,  -71.94409   ,  -80.85191   ],\n         [ 120.94297   ,  -83.614075  ,   68.57046   ],\n         [ 144.75497   ,   53.309685  ,   90.32171   ],\n         [ 112.46548   ,   73.4119    ,   33.58216   ]],\n\n        [[  41.085625  ,  -78.83304   ,  111.55976   ],\n         [ 101.868706  ,  -53.53844   ,  120.03828   ],\n         [  52.400215  ,  -27.197319  ,  -11.423798  ],\n         [  57.517525  ,  -13.669853  ,    0.6244278 ],\n         [ -24.728363  ,   93.091576  ,  -87.197174  ],\n         [  99.99297   ,  -90.977936  ,   20.008095  ],\n         [  71.16012   ,  120.87531   ,  125.10615   ],\n         [ -80.56607   ,  -22.135338  ,  -69.607574  ],\n         [  81.40017   ,  -89.97754   ,  102.40348   ],\n         [  86.40151   ,  -96.241295  ,  -65.14981   ]],\n\n        [[   3.4126968 ,    6.186798  ,  -78.82251   ],\n         [ 121.31805   ,   57.377083  ,   41.596626  ],\n         [ -82.56659   ,  -25.528946  ,  -28.5568    ],\n         [  50.70893   ,  -67.27956   ,  -36.30584   ],\n         [  -4.08918   ,  -17.774124  ,   68.19608   ],\n         [ -24.863205  ,  -14.982101  ,   14.923698  ],\n         [  96.896645  ,   77.32632   , -104.841774  ],\n         [ -50.652863  ,   -0.5390396 ,  109.47855   ],\n         [ -39.15001   ,  -76.9821    ,   57.593742  ],\n         [ -75.829025  ,  -29.085175  ,  -76.69072   ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c24ec60>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[121,  86,  81],\n         [123,  16,  56],\n         [236,  16, 207],\n         [ 52, 230, 158],\n         [ 62,  98, 147],\n         [134, 151, 173],\n         [ 38,  59, 185],\n         [ 46, 218,  12],\n         [ 12,  49,  70],\n         [ 43,  15, 137]],\n\n        [[142,  64, 183],\n         [248, 102,  17],\n         [ 94,   2, 105],\n         [109,  84, 240],\n         [121,  91,  86],\n         [ 18, 245,  78],\n         [248, 245,  31],\n         [ 84,  56, 137],\n         [189,  73, 209],\n         [251, 167, 254]],\n\n        [[151, 228,  28],\n         [195, 156, 203],\n         [ 38,  29,  61],\n         [231, 132,  10],\n         [234, 166, 107],\n         [149, 234,   1],\n         [240, 229,  38],\n         [115,  98, 230],\n         [160, 225, 174],\n         [212,  29, 120]],\n\n        [[112, 129,  95],\n         [ 54, 193, 157],\n         [225, 252,  38],\n         [202, 219, 148],\n         [ 76, 230, 187],\n         [ 90,  21, 246],\n         [ 93,  79,  74],\n         [ 56, 101,  58],\n         [109, 232, 167],\n         [208,  79, 200]],\n\n        [[ 93, 238, 128],\n         [106, 201, 233],\n         [235,  30, 202],\n         [ 65,  78,  72],\n         [ 86,  83, 118],\n         [ 67, 128, 176],\n         [141, 207, 154],\n         [  3, 121, 198],\n         [ 24,  88, 182],\n         [ 36, 205,  45]],\n\n        [[200, 154, 167],\n         [140,  53,  19],\n         [178, 236, 179],\n         [125, 140, 165],\n         [250,  10,   7],\n         [191, 168, 132],\n         [ 17,  23, 125],\n         [ 35, 213, 231],\n         [242, 243,  84],\n         [206, 215, 183]],\n\n        [[123, 101, 151],\n         [147, 162, 132],\n         [170, 118,  67],\n         [226,  27,  96],\n         [ 58, 180, 246],\n         [ 55, 172,  36],\n         [193,  85,  66],\n         [ 88,  73, 253],\n         [225,  28, 189],\n         [129, 102, 108]],\n\n        [[ 10,   6,  67],\n         [112,  99, 128],\n         [179, 123,  88],\n         [ 89, 110, 211],\n         [167,  25, 154],\n         [136,  38, 137],\n         [ 46,  74, 125],\n         [131,  59, 144],\n         [ 53, 128,  84],\n         [209, 136,  18]],\n\n        [[  1, 219,  75],\n         [ 16,  11, 244],\n         [196,  64, 167],\n         [  1,  46,  35],\n         [ 57,  51,   8],\n         [197,  46,  88],\n         [104,  63, 231],\n         [109,  69, 209],\n         [ 58, 226,  30],\n         [226,  25, 136]],\n\n        [[219, 166, 188],\n         [116,  83, 152],\n         [245, 181,   1],\n         [227,  81,   9],\n         [204, 142, 242],\n         [ 76, 206, 240],\n         [235, 109,  65],\n         [  2,  20, 181],\n         [201,  52,   2],\n         [218, 201,   8]]],\n\n\n       [[[215, 119, 136],\n         [127, 103,  79],\n         [115, 210,   8],\n         [230, 225, 207],\n         [ 50, 133, 247],\n         [ 48, 131, 170],\n         [228,   0,  17],\n         [172, 100,  75],\n         [ 92, 251,  67],\n         [150, 181, 132]],\n\n        [[100, 182,  94],\n         [216, 192,   0],\n         [205, 122,  32],\n         [219, 155,  69],\n         [124, 147, 159],\n         [ 35, 164, 206],\n         [148,  89, 106],\n         [223,  93, 134],\n         [ 26,   1,  56],\n         [ 84,  12, 132]],\n\n        [[ 71,   3, 134],\n         [214, 119, 203],\n         [229,  93, 106],\n         [232, 216,  73],\n         [  9, 163, 181],\n         [251,   6,  34],\n         [223,  21,  50],\n         [121, 220, 140],\n         [ 17, 171,  88],\n         [ 54,  18, 244]],\n\n        [[ 88, 184,  65],\n         [124, 156,  20],\n         [153, 213, 179],\n         [ 78, 192,  57],\n         [253,  18,  83],\n         [ 77, 116,  90],\n         [167,  74, 104],\n         [228, 223,  79],\n         [ 26,   8, 144],\n         [ 60, 151,   9]],\n\n        [[ 23, 118, 191],\n         [ 76, 146,  30],\n         [100, 123,  57],\n         [133, 193,   1],\n         [ 77, 143,  56],\n         [ 70, 155, 208],\n         [ 22, 149,  15],\n         [ 27, 154,  96],\n         [208,  95, 238],\n         [ 97, 198,  37]],\n\n        [[231, 112, 184],\n         [233,  41,  26],\n         [ 75, 104, 232],\n         [243, 170, 200],\n         [226, 213,  12],\n         [ 34, 123, 159],\n         [ 56, 161,   1],\n         [203,  42,   0],\n         [  5, 100,  28],\n         [220, 111,  29]],\n\n        [[ 74, 109, 215],\n         [187,  58, 237],\n         [ 74, 238, 140],\n         [141,   2, 119],\n         [ 73,  14, 234],\n         [127, 247,  96],\n         [208, 129,   5],\n         [100,  11,  84],\n         [ 58,  10, 228],\n         [226,  76, 219]],\n\n        [[ 51, 185, 170],\n         [ 93, 233, 184],\n         [ 55, 252, 235],\n         [194, 201,   8],\n         [185,  24, 129],\n         [208, 216, 159],\n         [ 42,  44, 235],\n         [192,  33, 224],\n         [214, 170, 248],\n         [157, 190, 216]],\n\n        [[235,  37, 145],\n         [243,  63, 205],\n         [112,  89, 156],\n         [124, 103, 161],\n         [ 36, 209,  79],\n         [143,  25, 203],\n         [248, 237, 175],\n         [ 54,  94,  23],\n         [226,  26, 185],\n         [ 58,  20, 190]],\n\n        [[ 44, 122, 107],\n         [165, 174, 225],\n         [ 95,  91,  21],\n         [ 87,  49, 154],\n         [191,  99,  99],\n         [138, 101,  79],\n         [ 18, 194, 200],\n         [233, 116,  53],\n         [181,  39,  64],\n         [ 46,  87,  28]]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c20d3a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-2.2939003e+01, -3.0778999e+01, -2.6800003e+00],\n         [-4.7939003e+01, -1.0077900e+02, -6.8000031e-01],\n         [ 1.0306100e+02, -1.0077900e+02,  1.1232000e+02],\n         [ 5.4060997e+01,  1.1322100e+02, -7.1680000e+01],\n         [ 4.3060997e+01, -1.8778999e+01, -6.1680000e+01],\n         [ 6.9060997e+01,  3.4221001e+01,  1.0320000e+01],\n         [ 8.1060997e+01, -5.7778999e+01, -8.5680000e+01],\n         [-9.1939003e+01,  1.0122100e+02, -7.7680000e+01],\n         [-3.3939003e+01, -6.7778999e+01, -1.1168000e+02],\n         [ 3.3060997e+01, -1.0177900e+02, -8.0680000e+01]],\n\n        [[ 7.9060997e+01, -5.2778999e+01,  1.8320000e+01],\n         [-8.6939003e+01, -1.4778999e+01,  1.2432000e+02],\n         [ 1.0609970e+00, -1.1477900e+02, -2.9680000e+01],\n         [ 1.3606100e+02, -3.2778999e+01, -1.4680000e+01],\n         [-1.7939003e+01, -2.5778999e+01, -2.6800003e+00],\n         [-2.5939003e+01,  1.2822101e+02, -1.0568000e+02],\n         [-7.2939003e+01,  1.2822101e+02,  1.2432000e+02],\n         [ 3.3060997e+01, -6.0778999e+01, -3.9680000e+01],\n         [ 1.0506100e+02, -4.3778999e+01,  6.5320000e+01],\n         [ 1.5006100e+02,  5.0221001e+01,  1.2732000e+02]],\n\n        [[-7.5939003e+01,  1.1122100e+02,  2.7320000e+01],\n         [ 9.9060997e+01,  3.9221001e+01,  7.1320000e+01],\n         [-4.2939003e+01, -8.7778999e+01, -8.5680000e+01],\n         [-9.3939003e+01,  1.5221001e+01,  1.0732000e+02],\n         [ 3.0609970e+00,  4.9221001e+01,  1.1032000e+02],\n         [-1.0293900e+02,  1.1722100e+02,  2.5320000e+01],\n         [-6.5939003e+01,  1.1222100e+02,  1.1632000e+02],\n         [ 1.2606100e+02, -1.8778999e+01, -8.6800003e+00],\n         [ 7.0060997e+01,  1.0822100e+02,  3.6320000e+01],\n         [ 1.6060997e+01, -8.7778999e+01,  8.8320000e+01]],\n\n        [[-8.9390030e+00,  1.2221001e+01, -1.1680000e+01],\n         [ 5.3060997e+01,  7.6221001e+01, -6.9680000e+01],\n         [-6.5939003e+01,  1.3522101e+02,  1.0132000e+02],\n         [ 4.4060997e+01,  1.0222100e+02,  7.8320000e+01],\n         [ 8.3060997e+01,  1.1322100e+02, -4.7680000e+01],\n         [ 1.4206100e+02, -9.5778999e+01, -3.3680000e+01],\n         [-2.9939003e+01, -3.7778999e+01, -3.0680000e+01],\n         [-4.5939003e+01, -1.5778999e+01, -6.7680000e+01],\n         [ 6.3060997e+01,  1.1522100e+02, -1.4680000e+01],\n         [ 9.6060997e+01, -3.7778999e+01,  8.4320000e+01]],\n\n        [[ 2.4060997e+01,  1.2122100e+02, -3.0680000e+01],\n         [ 1.2906100e+02,  8.4221001e+01, -1.7680000e+01],\n         [ 9.8060997e+01, -8.6778999e+01,  1.1132000e+02],\n         [-3.1939003e+01, -3.8778999e+01, -5.8680000e+01],\n         [ 1.4060997e+01, -3.3778999e+01, -3.7680000e+01],\n         [ 7.2060997e+01,  1.1221001e+01, -5.6680000e+01],\n         [ 5.0060997e+01,  9.0221001e+01,  1.7320000e+01],\n         [ 9.4060997e+01,  4.2210007e+00, -1.2068000e+02],\n         [ 7.8060997e+01, -2.8778999e+01, -9.9680000e+01],\n         [-5.8939003e+01,  8.8221001e+01, -8.7680000e+01]],\n\n        [[ 6.3060997e+01,  3.7221001e+01,  7.6320000e+01],\n         [-8.4939003e+01, -6.3778999e+01,  1.6320000e+01],\n         [ 7.5060997e+01,  1.1922100e+02,  5.4320000e+01],\n         [ 6.1060997e+01,  2.3221001e+01,  1.3199997e+00],\n         [-9.6939003e+01, -1.0677900e+02,  1.2632000e+02],\n         [ 2.8060997e+01,  5.1221001e+01,  6.7320000e+01],\n         [ 2.1060997e+01, -9.3778999e+01, -1.0668000e+02],\n         [ 1.2706100e+02,  9.6221001e+01, -8.8680000e+01],\n         [-1.9939003e+01,  1.2622100e+02,  1.1832000e+02],\n         [ 7.9060997e+01,  9.8221001e+01,  8.2320000e+01]],\n\n        [[ 4.7060997e+01, -1.5778999e+01, -6.8000031e-01],\n         [ 2.8060997e+01,  4.5221001e+01,  2.3320000e+01],\n         [-3.6939003e+01,  1.2210007e+00,  4.6320000e+01],\n         [-7.9390030e+00, -8.9778999e+01,  1.0232000e+02],\n         [ 1.4206100e+02,  6.3221001e+01, -6.5680000e+01],\n         [-6.7939003e+01,  5.5221001e+01, -6.8680000e+01],\n         [-3.7939003e+01, -3.1778999e+01,  6.9320000e+01],\n         [ 1.4906100e+02, -4.3778999e+01, -3.5680000e+01],\n         [ 8.5060997e+01, -8.8778999e+01,  1.0132000e+02],\n         [ 4.0609970e+00, -1.4778999e+01,  5.3199997e+00]],\n\n        [[-3.6939003e+01, -1.1077900e+02, -1.1368000e+02],\n         [ 2.4060997e+01, -1.7778999e+01, -1.1680000e+01],\n         [-1.5939003e+01,  6.2210007e+00,  5.5320000e+01],\n         [ 1.0706100e+02, -6.7789993e+00, -3.4680000e+01],\n         [ 5.0060997e+01, -9.1778999e+01,  4.3320000e+01],\n         [ 3.3060997e+01, -7.8778999e+01,  1.2320000e+01],\n         [ 2.1060997e+01, -4.2778999e+01, -7.7680000e+01],\n         [ 4.0060997e+01, -5.7778999e+01,  7.3199997e+00],\n         [-1.9939003e+01,  1.1221001e+01, -7.0680000e+01],\n         [-8.5939003e+01,  1.9221001e+01,  8.5320000e+01]],\n\n        [[-2.8939003e+01,  1.0222100e+02, -1.2268000e+02],\n         [ 1.4006100e+02, -1.0577900e+02, -1.0768000e+02],\n         [ 6.3060997e+01, -5.2778999e+01,  7.2320000e+01],\n         [-6.8939003e+01, -7.0778999e+01, -1.2268000e+02],\n         [-9.5939003e+01, -6.5778999e+01, -6.6680000e+01],\n         [-1.5939003e+01, -7.0778999e+01,  7.3320000e+01],\n         [ 1.2706100e+02, -5.3778999e+01, -1.9680000e+01],\n         [ 1.0506100e+02, -4.7778999e+01, -1.4680000e+01],\n         [-7.3939003e+01,  1.0922100e+02, -6.5680000e+01],\n         [ 3.2060997e+01, -9.1778999e+01,  1.0232000e+02]],\n\n        [[ 8.4060997e+01,  4.9221001e+01,  9.5320000e+01],\n         [ 4.8060997e+01, -3.3778999e+01, -7.6800003e+00],\n         [-1.0293900e+02,  6.4221001e+01,  1.2132000e+02],\n         [-9.4939003e+01, -3.5778999e+01,  1.0332000e+02],\n         [ 1.3806100e+02,  2.5221001e+01,  8.0320000e+01],\n         [ 1.3606100e+02,  8.9221001e+01, -4.7680000e+01],\n         [-3.8939003e+01, -7.7789993e+00,  1.1132000e+02],\n         [ 7.7060997e+01, -9.6778999e+01, -1.2168000e+02],\n         [-1.0193900e+02, -6.4778999e+01,  7.7320000e+01],\n         [-9.5939003e+01,  8.4221001e+01,  9.4320000e+01]]],\n\n\n       [[[ 3.2060997e+01,  2.2210007e+00,  9.1320000e+01],\n         [-2.4939003e+01, -1.3778999e+01,  3.3199997e+00],\n         [-9.5939003e+01,  9.3221001e+01, -8.6800003e+00],\n         [ 1.0306100e+02,  1.0822100e+02,  1.0632000e+02],\n         [ 1.4306100e+02,  1.6221001e+01, -7.3680000e+01],\n         [ 6.6060997e+01,  1.4221001e+01, -7.5680000e+01],\n         [-8.6939003e+01, -1.1677900e+02,  1.0432000e+02],\n         [-2.8939003e+01, -1.6778999e+01,  4.8320000e+01],\n         [-3.6939003e+01,  1.3422101e+02, -3.1680000e+01],\n         [ 2.8060997e+01,  6.4221001e+01,  2.6320000e+01]],\n\n        [[-9.9390030e+00,  6.5221001e+01, -2.3680000e+01],\n         [-1.0393900e+02,  7.5221001e+01,  9.2320000e+01],\n         [-7.1939003e+01,  5.2210007e+00,  8.1320000e+01],\n         [-3.4939003e+01,  3.8221001e+01,  9.5320000e+01],\n         [ 5.5060997e+01,  3.0221001e+01,  3.1999969e-01],\n         [ 1.0206100e+02,  4.7221001e+01, -8.8680000e+01],\n         [ 2.0609970e+00, -2.7778999e+01,  2.4320000e+01],\n         [ 3.0060997e+01, -2.3778999e+01,  9.9320000e+01],\n         [-4.7939003e+01, -1.1577900e+02, -9.7680000e+01],\n         [ 2.8060997e+01, -1.0477900e+02, -3.9680000e+01]],\n\n        [[ 3.0060997e+01, -1.1377900e+02, -5.2680000e+01],\n         [ 9.9060997e+01,  2.2210007e+00,  9.0320000e+01],\n         [ 2.0609970e+00, -2.3778999e+01,  1.0532000e+02],\n         [-3.0939003e+01,  9.9221001e+01,  1.0832000e+02],\n         [ 7.7060997e+01,  4.6221001e+01, -1.1468000e+02],\n         [-6.9939003e+01, -1.1077900e+02,  1.2732000e+02],\n         [-5.3939003e+01, -9.5778999e+01,  9.9320000e+01],\n         [ 3.6060997e+01,  1.0322100e+02, -2.6800003e+00],\n         [-1.5939003e+01,  5.4221001e+01, -1.0668000e+02],\n         [ 1.4006100e+02, -9.8778999e+01, -6.9680000e+01]],\n\n        [[-3.8939003e+01,  6.7221001e+01, -3.5680000e+01],\n         [-8.3939003e+01,  3.9221001e+01,  3.1999969e-01],\n         [ 7.5060997e+01,  9.6221001e+01,  2.9320000e+01],\n         [-4.6939003e+01,  7.5221001e+01, -4.5680000e+01],\n         [-2.0939003e+01, -9.8778999e+01,  1.2932001e+02],\n         [-1.3939003e+01, -7.7899933e-01, -4.6680000e+01],\n         [ 6.0997009e-02, -4.2778999e+01,  4.3320000e+01],\n         [-2.4939003e+01,  1.0622100e+02,  1.0432000e+02],\n         [ 4.0060997e+01, -1.0877900e+02, -9.7680000e+01],\n         [-9.4939003e+01,  3.4221001e+01, -6.3680000e+01]],\n\n        [[ 8.7060997e+01,  1.2210007e+00, -1.0068000e+02],\n         [-7.3939003e+01,  2.9221001e+01, -4.7680000e+01],\n         [-4.6939003e+01,  6.2210007e+00, -2.3680000e+01],\n         [-1.0293900e+02,  7.6221001e+01,  9.3199997e+00],\n         [-4.7939003e+01,  2.6221001e+01, -4.6680000e+01],\n         [ 1.0406100e+02,  3.8221001e+01, -5.3680000e+01],\n         [-8.8939003e+01,  3.2221001e+01, -1.0168000e+02],\n         [-7.9390030e+00,  3.7221001e+01, -9.6680000e+01],\n         [ 1.3406100e+02, -2.1778999e+01,  8.4320000e+01],\n         [-6.6939003e+01,  8.1221001e+01, -2.6680000e+01]],\n\n        [[ 8.0060997e+01, -4.7789993e+00,  1.0732000e+02],\n         [-7.7939003e+01, -7.5778999e+01,  1.0932000e+02],\n         [ 1.2806100e+02, -1.2778999e+01, -4.8680000e+01],\n         [ 9.6060997e+01,  5.3221001e+01,  1.1932000e+02],\n         [-9.1939003e+01,  9.6221001e+01,  1.0232000e+02],\n         [ 5.5060997e+01,  6.2210007e+00, -8.9680000e+01],\n         [-1.0293900e+02,  4.4221001e+01, -6.7680000e+01],\n         [-1.0393900e+02, -7.4778999e+01,  7.9320000e+01],\n         [-7.5939003e+01, -1.6778999e+01, -1.1868000e+02],\n         [-7.4939003e+01, -5.7789993e+00,  9.6320000e+01]],\n\n        [[ 1.1106100e+02, -7.7789993e+00, -4.9680000e+01],\n         [ 1.3306100e+02, -5.8778999e+01,  6.3320000e+01],\n         [ 3.6060997e+01,  1.2122100e+02, -4.9680000e+01],\n         [ 1.5060997e+01, -1.1477900e+02,  1.7320000e+01],\n         [ 1.3006100e+02, -1.0277900e+02, -5.0680000e+01],\n         [-7.9390030e+00,  1.3022101e+02,  3.3199997e+00],\n         [-9.8939003e+01,  1.2221001e+01,  8.4320000e+01],\n         [-1.9939003e+01, -1.0577900e+02, -2.3680000e+01],\n         [ 1.2406100e+02, -1.0677900e+02, -6.5680000e+01],\n         [ 1.1506100e+02, -4.0778999e+01,  1.0232000e+02]],\n\n        [[ 6.6060997e+01,  6.8221001e+01, -7.2680000e+01],\n         [ 8.0060997e+01,  1.1622100e+02, -3.0680000e+01],\n         [ 1.3106100e+02,  1.3522101e+02, -6.8680000e+01],\n         [-9.5939003e+01,  8.4221001e+01,  7.0320000e+01],\n         [ 2.5060997e+01, -9.2778999e+01,  6.1320000e+01],\n         [ 5.5060997e+01,  9.9221001e+01,  8.4320000e+01],\n         [ 1.3106100e+02, -7.2778999e+01, -8.1680000e+01],\n         [ 1.2006100e+02, -8.3778999e+01,  6.8320000e+01],\n         [ 1.4406100e+02,  5.3221001e+01,  9.0320000e+01],\n         [ 1.1206100e+02,  7.3221001e+01,  3.3320000e+01]],\n\n        [[ 4.1060997e+01, -7.9778999e+01,  1.1132000e+02],\n         [ 1.0106100e+02, -5.3778999e+01,  1.1932000e+02],\n         [ 5.2060997e+01, -2.7778999e+01, -1.1680000e+01],\n         [ 5.7060997e+01, -1.3778999e+01,  3.1999969e-01],\n         [-2.4939003e+01,  9.2221001e+01, -8.7680000e+01],\n         [ 9.9060997e+01, -9.1778999e+01,  1.9320000e+01],\n         [ 7.1060997e+01,  1.2022100e+02,  1.2432000e+02],\n         [-8.0939003e+01, -2.2778999e+01, -6.9680000e+01],\n         [ 8.1060997e+01, -9.0778999e+01,  1.0232000e+02],\n         [ 8.6060997e+01, -9.6778999e+01, -6.5680000e+01]],\n\n        [[ 3.0609970e+00,  5.2210007e+00, -7.9680000e+01],\n         [ 1.2106100e+02,  5.7221001e+01,  4.1320000e+01],\n         [-8.2939003e+01, -2.5778999e+01, -2.8680000e+01],\n         [ 5.0060997e+01, -6.7778999e+01, -3.6680000e+01],\n         [-4.9390030e+00, -1.7778999e+01,  6.7320000e+01],\n         [-2.4939003e+01, -1.5778999e+01,  1.4320000e+01],\n         [ 9.6060997e+01,  7.7221001e+01, -1.0568000e+02],\n         [-5.0939003e+01, -7.7899933e-01,  1.0932000e+02],\n         [-3.9939003e+01, -7.7778999e+01,  5.7320000e+01],\n         [-7.5939003e+01, -2.9778999e+01, -7.7680000e+01]]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c24ead0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[1.21068350e+02, 1.23268088e+02, 2.36706489e+02,\n          5.27068128e+01, 6.25472467e+01, 1.34138962e+02,\n          3.84740913e+01, 4.69701516e+01, 1.21961647e+01,\n          4.33600591e+01],\n         [1.42452372e+02, 2.48545301e+02, 9.42572391e+01,\n          1.09301854e+02, 1.21075890e+02, 1.82107712e+01,\n          2.48983441e+02, 8.49660019e+01, 1.89370743e+02,\n          2.51875316e+02],\n         [1.51523462e+02, 1.95063171e+02, 3.81684718e+01,\n          2.31588976e+02, 2.34745737e+02, 1.49826559e+02,\n          2.40075221e+02, 1.15090699e+02, 1.60178916e+02,\n          2.12669475e+02],\n         [1.12068878e+02, 5.40849044e+01, 2.25836258e+02,\n          2.02765523e+02, 7.69876548e+01, 9.06156666e+01,\n          9.35569560e+01, 5.67692723e+01, 1.09361080e+02,\n          2.08151746e+02],\n         [9.39152210e+01, 1.06397820e+02, 2.35475460e+02,\n          6.58670675e+01, 8.69290116e+01, 6.71076542e+01,\n          1.41979454e+02, 3.31405285e+00, 2.48316143e+01,\n          3.64004041e+01],\n         [2.00975024e+02, 1.40943128e+02, 1.78607165e+02,\n          1.25142510e+02, 2.50038327e+02, 1.91098262e+02,\n          1.75363093e+01, 3.50417981e+01, 2.42229896e+02,\n          2.06886402e+02],\n         [1.23153571e+02, 1.47905885e+02, 1.70186555e+02,\n          2.26717807e+02, 5.83375470e+01, 5.56334092e+01,\n          1.93473016e+02, 8.88815235e+01, 2.25020634e+02,\n          1.29829600e+02],\n         [1.07882354e+01, 1.12741795e+02, 1.79743996e+02,\n          8.97172570e+01, 1.67268201e+02, 1.36383411e+02,\n          4.65602979e+01, 1.31037931e+02, 5.30201533e+01,\n          2.09353678e+02],\n         [1.95777636e+00, 1.65291858e+01, 1.96989908e+02,\n          1.43548213e+00, 5.71212220e+01, 1.97235377e+02,\n          1.04141297e+02, 1.09726671e+02, 5.87361615e+01,\n          2.26852446e+02],\n         [2.19115147e+02, 1.16512669e+02, 2.45526018e+02,\n          2.27154241e+02, 2.04547900e+02, 7.63235383e+01,\n          2.35452545e+02, 2.31609471e+00, 2.01253710e+02,\n          2.18433936e+02]],\n\n        [[8.62276894e+01, 1.62126141e+01, 1.65452722e+01,\n          2.30170871e+02, 9.81849415e+01, 1.51684037e+02,\n          5.96978241e+01, 2.18813475e+02, 4.95320635e+01,\n          1.50182035e+01],\n         [6.47183772e+01, 1.02968616e+02, 2.98737495e+00,\n          8.42185881e+01, 9.19727599e+01, 2.45100365e+02,\n          2.45844592e+02, 5.65477248e+01, 7.32894849e+01,\n          1.67078730e+02],\n         [2.28331293e+02, 1.56142933e+02, 2.90682873e+01,\n          1.32782942e+02, 1.66990437e+02, 2.34437358e+02,\n          2.29326808e+02, 9.82019997e+01, 2.25671387e+02,\n          2.98681543e+01],\n         [1.29964666e+02, 1.93986453e+02, 2.52973036e+02,\n          2.19952464e+02, 2.30351215e+02, 2.17377061e+01,\n          7.92299786e+01, 1.01909215e+02, 2.32702005e+02,\n          7.94750231e+01],\n         [2.38545027e+02, 2.01713292e+02, 3.00784331e+01,\n          7.85601076e+01, 8.32443220e+01, 1.28869334e+02,\n          2.07026461e+02, 1.21940110e+02, 8.84519286e+01,\n          2.05320773e+02],\n         [1.54463899e+02, 5.36876064e+01, 2.36416962e+02,\n          1.40531906e+02, 1.00711304e+01, 1.68845279e+02,\n          2.32742486e+01, 2.13968264e+02, 2.43513303e+02,\n          2.15145884e+02],\n         [1.01129254e+02, 1.62726083e+02, 1.18765832e+02,\n          2.72411364e+01, 1.80014666e+02, 1.72897502e+02,\n          8.57826078e+01, 7.31242924e+01, 2.80109405e+01,\n          1.02099544e+02],\n         [6.27239059e+00, 9.97360530e+01, 1.23692497e+02,\n          1.10755959e+02, 2.50171685e+01, 3.88762182e+01,\n          7.42632137e+01, 5.99364281e+01, 1.28290970e+02,\n          1.36355214e+02],\n         [2.19398816e+02, 1.10771716e+01, 6.42523497e+01,\n          4.61246059e+01, 5.14423333e+01, 4.65733988e+01,\n          6.33342004e+01, 6.96475162e+01, 2.26701442e+02,\n          2.59753422e+01],\n         [1.66373994e+02, 8.32388538e+01, 1.81794855e+02,\n          8.12238240e+01, 1.42146285e+02, 2.06199752e+02,\n          1.09184840e+02, 2.05200647e+01, 5.25818859e+01,\n          2.01412388e+02]],\n\n        [[8.13651826e+01, 5.66569255e+01, 2.07730225e+02,\n          1.58880042e+02, 1.47115357e+02, 1.73946535e+02,\n          1.85168241e+02, 1.26164229e+01, 7.04691159e+01,\n          1.37618402e+02],\n         [1.83798455e+02, 1.76796945e+01, 1.05858602e+02,\n          2.40128956e+02, 8.61675473e+01, 7.88393812e+01,\n          3.12605365e+01, 1.37212085e+02, 2.09684173e+02,\n          2.54147092e+02],\n         [2.86269552e+01, 2.03857327e+02, 6.17784072e+01,\n          1.06220461e+01, 1.07761349e+02, 1.33170689e+00,\n          3.82447412e+01, 2.30178675e+02, 1.74476213e+02,\n          1.20288396e+02],\n         [9.55372107e+01, 1.57253207e+02, 3.81520968e+01,\n          1.48037689e+02, 1.87667571e+02, 2.46296753e+02,\n          7.42782973e+01, 5.80698854e+01, 1.67682983e+02,\n          2.00265861e+02],\n         [1.28310482e+02, 2.33984042e+02, 2.02533753e+02,\n          7.22779061e+01, 1.18976535e+02, 1.76085249e+02,\n          1.54568971e+02, 1.98293830e+02, 1.82009690e+02,\n          4.59611210e+01],\n         [1.67551703e+02, 1.99758321e+01, 1.79449937e+02,\n          1.65997843e+02, 7.41706105e+00, 1.32237911e+02,\n          1.25357181e+02, 2.31619657e+02, 8.49187073e+01,\n          1.83063627e+02],\n         [1.51225276e+02, 1.32956566e+02, 6.70326707e+01,\n          9.63494104e+01, 2.46162779e+02, 3.66706204e+01,\n          6.65428176e+01, 2.53040857e+02, 1.89083372e+02,\n          1.08642796e+02],\n         [6.77107453e+01, 1.28053175e+02, 8.86920814e+01,\n          2.11697935e+02, 1.54488051e+02, 1.37937243e+02,\n          1.25666171e+02, 1.44401382e+02, 8.46630727e+01,\n          1.81982468e+01],\n         [7.59400779e+01, 2.44867185e+02, 1.67326544e+02,\n          3.54641340e+01, 8.78614841e+00, 8.84070413e+01,\n          2.31184526e+02, 2.09388603e+02, 3.00781249e+01,\n          1.36103420e+02],\n         [1.88512937e+02, 1.52574653e+02, 1.58801040e+00,\n          9.80502898e+00, 2.42438569e+02, 2.40399357e+02,\n          6.55966987e+01, 1.81998398e+02, 2.20492786e+00,\n          8.81164494e+00]]],\n\n\n       [[[2.15213142e+02, 1.27590700e+02, 1.15230250e+02,\n          2.30233897e+02, 5.04392341e+01, 4.83204421e+01,\n          2.28107497e+02, 1.72815748e+02, 9.24384834e+01,\n          1.50843552e+02],\n         [1.00572538e+02, 2.16861167e+02, 2.05704205e+02,\n          2.19777262e+02, 1.24336181e+02, 3.58752366e+01,\n          1.48041244e+02, 2.23801437e+02, 2.67591470e+01,\n          8.42682417e+01],\n         [7.17478435e+01, 2.14503080e+02, 2.29977730e+02,\n          2.32328619e+02, 9.92212708e+00, 2.51379469e+02,\n          2.23937753e+02, 1.21090564e+02, 1.70823006e+01,\n          5.42715631e+01],\n         [8.86794944e+01, 1.24776868e+02, 1.53147701e+02,\n          7.85654255e+01, 2.53082131e+02, 7.72817091e+01,\n          1.67630370e+02, 2.28312796e+02, 2.67555383e+01,\n          6.01805190e+01],\n         [2.32202949e+01, 7.62129514e+01, 1.00076413e+02,\n          1.33101440e+02, 7.77567691e+01, 7.03708945e+01,\n          2.21046168e+01, 2.77958392e+01, 2.08728751e+02,\n          9.74712114e+01],\n         [2.31069203e+02, 2.33552705e+02, 7.58635918e+01,\n          2.43072389e+02, 2.26039648e+02, 3.49221102e+01,\n          5.69132901e+01, 2.03072143e+02, 5.84997423e+00,\n          2.20008425e+02],\n         [7.47828598e+01, 1.87809484e+02, 7.42082638e+01,\n          1.41238531e+02, 7.39869773e+01, 1.27529858e+02,\n          2.08079103e+02, 1.00839001e+02, 5.88828319e+01,\n          2.26313823e+02],\n         [5.18037379e+01, 9.36949167e+01, 5.53952095e+01,\n          1.94372585e+02, 1.85228139e+02, 2.08037572e+02,\n          4.28280884e+01, 1.92250465e+02, 2.14001712e+02,\n          1.57262166e+02],\n         [2.35239754e+02, 2.43718275e+02, 1.12256203e+02,\n          1.24304428e+02, 3.64828267e+01, 1.43688096e+02,\n          2.48786155e+02, 5.40724298e+01, 2.26083486e+02,\n          5.85301952e+01],\n         [4.48574858e+01, 1.65276621e+02, 9.51231986e+01,\n          8.73741626e+01, 1.91876079e+02, 1.38603695e+02,\n          1.88382251e+01, 2.33158559e+02, 1.81273745e+02,\n          4.69892846e+01]],\n\n        [[1.19576359e+02, 1.03517046e+02, 2.10311357e+02,\n          2.25205575e+02, 1.33467412e+02, 1.31121911e+02,\n          4.34470697e-01, 1.00397215e+02, 2.51716526e+02,\n          1.81556322e+02],\n         [1.82784826e+02, 1.92857350e+02, 1.22435237e+02,\n          1.55760086e+02, 1.47522573e+02, 1.64863819e+02,\n          8.92110231e+01, 9.34585633e+01, 1.13163303e+00,\n          1.26921361e+01],\n         [3.91126488e+00, 1.19322926e+02, 9.36105466e+01,\n          2.16130936e+02, 1.63029544e+02, 6.40630412e+00,\n          2.18106553e+01, 2.20929729e+02, 1.71423994e+02,\n          1.89574023e+01],\n         [1.84755457e+02, 1.56753055e+02, 2.13564795e+02,\n          1.92953279e+02, 1.80556320e+01, 1.16146975e+02,\n          7.48171320e+01, 2.23797699e+02, 8.16777741e+00,\n          1.51067245e+02],\n         [1.18010967e+02, 1.46036541e+02, 1.23771620e+02,\n          1.93329891e+02, 1.43606352e+02, 1.55629219e+02,\n          1.49251472e+02, 1.54530755e+02, 9.58053874e+01,\n          1.98099189e+02],\n         [1.12016542e+02, 4.19303813e+01, 1.04600933e+02,\n          1.70501470e+02, 2.13659830e+02, 1.23434398e+02,\n          1.61114666e+02, 4.27277378e+01, 1.00001256e+02,\n          1.11812313e+02],\n         [1.09628903e+02, 5.86253919e+01, 2.38504357e+02,\n          2.24118929e+00, 1.45229487e+01, 2.47602255e+02,\n          1.29922374e+02, 1.14779380e+01, 1.05644206e+01,\n          7.61758032e+01],\n         [1.85747919e+02, 2.33381007e+02, 2.52917077e+02,\n          2.01947748e+02, 2.43454684e+01, 2.16897249e+02,\n          4.48349077e+01, 3.31649299e+01, 1.70088687e+02,\n          1.90190906e+02],\n         [3.79459606e+01, 6.32405584e+01, 8.95816829e+01,\n          1.03109143e+02, 2.09870581e+02, 2.58010659e+01,\n          2.37654311e+02, 9.46436609e+01, 2.68014563e+01,\n          2.05377059e+01],\n         [1.22965800e+02, 1.74156081e+02, 9.12500497e+01,\n          4.94994465e+01, 9.90048747e+01, 1.01796901e+02,\n          1.94105315e+02, 1.16239958e+02, 3.97968931e+01,\n          8.76938243e+01]],\n\n        [[1.36714513e+02, 7.98046017e+01, 8.42744279e+00,\n          2.07133114e+02, 2.47695346e+02, 1.70686618e+02,\n          1.78023700e+01, 7.57242442e+01, 6.75419155e+01,\n          1.32372664e+02],\n         [9.46693795e+01, 1.80231596e-01, 3.21255293e+01,\n          6.99742500e+01, 1.59646303e+02, 2.06538715e+02,\n          1.06638374e+02, 1.34175189e+02, 5.69542908e+01,\n          1.32019963e+02],\n         [1.34657676e+02, 2.03644861e+02, 1.06694467e+02,\n          7.33742535e+01, 1.81204759e+02, 3.47847777e+01,\n          5.06904587e+01, 1.40246626e+02, 8.88368632e+01,\n          2.44779625e+02],\n         [6.54439580e+01, 2.03717775e+01, 1.79364405e+02,\n          5.72290856e+01, 8.36253651e+01, 9.05866190e+01,\n          1.04218352e+02, 7.91319885e+01, 1.44320872e+02,\n          9.20381575e+00],\n         [1.91897698e+02, 3.02429932e+01, 5.79144940e+01,\n          1.81319009e+00, 5.62466620e+01, 2.08144139e+02,\n          1.57105626e+01, 9.67690089e+01, 2.38021506e+02,\n          3.76582256e+01],\n         [1.84390475e+02, 2.64092389e+01, 2.32220216e+02,\n          2.00832141e+02, 1.27818900e+01, 1.59750670e+02,\n          1.34015617e+00, 2.00000634e-01, 2.85753412e+01,\n          2.97328494e+01],\n         [2.15089091e+02, 2.37745867e+02, 1.40764862e+02,\n          1.19629210e+02, 2.34786821e+02, 9.66063836e+01,\n          5.45311055e+00, 8.40425166e+01, 2.28733268e+02,\n          2.19045681e+02],\n         [1.70627034e+02, 1.84204639e+02, 2.35130466e+02,\n          8.34326717e+00, 1.29831844e+02, 1.59736808e+02,\n          2.35298745e+02, 2.24881979e+02, 2.48693975e+02,\n          2.16404484e+02],\n         [1.45024626e+02, 2.05807713e+02, 1.56339211e+02,\n          1.61456524e+02, 7.92106414e+01, 2.03931971e+02,\n          1.75099125e+02, 2.33729337e+01, 1.85339174e+02,\n          1.90340513e+02],\n         [1.07351702e+02, 2.25257045e+02, 2.13724089e+01,\n          1.54647937e+02, 9.98498257e+01, 7.90757959e+01,\n          2.00835652e+02, 5.32861415e+01, 6.47889954e+01,\n          2.81099769e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c148440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ -22.573822  ,  -47.282078  ,  103.79122   ,   54.941032  ,\n            43.176353  ,   70.00753   ,   81.22924   ,  -91.32258   ,\n           -33.469887  ,   33.679405  ],\n         [  79.85946   ,  -86.25931   ,    1.9196014 ,  136.18994   ,\n           -17.771454  ,  -25.099625  ,  -72.67847   ,   33.27308   ,\n           105.74517   ,  150.2081    ],\n         [ -75.31205   ,   99.91833   ,  -42.160595  ,  -93.316956  ,\n             3.8223495 , -102.6073    ,  -65.69426   ,  126.23968   ,\n            70.53721   ,   16.349396  ],\n         [  -8.401794  ,   53.3142    ,  -65.78691   ,   44.098686  ,\n            83.72857   ,  142.35776   ,  -29.660706  ,  -45.869118  ,\n            63.74398   ,   96.32685   ],\n         [  24.371483  ,  130.04504   ,   98.59475   ,  -31.661095  ,\n            15.037529  ,   72.14625   ,   50.629967  ,   94.35482   ,\n            78.07069   ,  -57.977882  ],\n         [  63.612694  ,  -83.96317   ,   75.51093   ,   62.058846  ,\n           -96.52194   ,   28.298912  ,   21.418175  ,  127.68066   ,\n           -19.020294  ,   79.124626  ],\n         [  47.286278  ,   29.017555  ,  -36.906334  ,   -7.589592  ,\n           142.22379   ,  -67.26839   ,  -37.396187  ,  149.10187   ,\n            85.14437   ,    4.7037964 ],\n         [ -36.228256  ,   24.114174  ,  -15.246925  ,  107.758934  ,\n            50.54905   ,   33.998238  ,   21.727165  ,   40.46238   ,\n           -19.275932  ,  -85.74075   ],\n         [ -27.998924  ,  140.92819   ,   63.387535  ,  -68.47487   ,\n           -95.152855  ,  -15.53196   ,  127.24552   ,  105.44959   ,\n           -73.86088   ,   32.16442   ],\n         [  84.57394   ,   48.635643  , -102.35099   ,  -94.13397   ,\n           138.49957   ,  136.46036   ,  -38.342308  ,   78.059395  ,\n          -101.73408   ,  -95.12736   ]],\n\n        [[ -30.551308  , -100.56638   , -100.23373   ,  113.39187   ,\n           -18.594055  ,   34.905037  ,  -57.081177  ,  102.03448   ,\n           -67.24693   , -101.760796  ],\n         [ -52.060623  ,  -13.810387  , -113.791626  ,  -32.56041   ,\n           -24.806236  ,  128.32138   ,  129.06558   ,  -60.231274  ,\n           -43.489517  ,   50.299736  ],\n         [ 111.5523    ,   39.36393   ,  -87.71071   ,   16.003944  ,\n            50.211433  ,  117.65836   ,  112.54781   ,  -18.576996  ,\n           108.89239   ,  -86.91084   ],\n         [  13.185661  ,   77.20745   ,  136.19403   ,  103.17347   ,\n           113.57221   ,  -95.04129   ,  -37.54902   ,  -14.8697815 ,\n           115.92301   ,  -37.303978  ],\n         [ 121.76603   ,   84.93429   ,  -86.70056   ,  -38.218895  ,\n           -33.534676  ,   12.09034   ,   90.24746   ,    5.16111   ,\n           -28.327072  ,   88.54177   ],\n         [  37.6849    ,  -63.091393  ,  119.63796   ,   23.752907  ,\n          -106.70787   ,   52.066277  ,  -93.50475   ,   97.18926   ,\n           126.73431   ,   98.36689   ],\n         [ -15.649742  ,   45.94709   ,    1.9868317 ,  -89.537865  ,\n            63.235664  ,   56.118507  ,  -30.996391  ,  -43.65471   ,\n           -88.76806   ,  -14.679459  ],\n         [-110.50661   ,  -17.042946  ,    6.913498  ,   -6.023041  ,\n           -91.76183   ,  -77.90279   ,  -42.515785  ,  -56.84257   ,\n            11.5119705 ,   19.57621   ],\n         [ 102.61982   , -105.70183   ,  -52.52665   ,  -70.65439   ,\n           -65.33667   ,  -70.2056    ,  -53.444798  ,  -47.131485  ,\n           109.92245   ,  -90.80366   ],\n         [  49.594994  ,  -33.540146  ,   65.01586   ,  -35.555176  ,\n            25.367287  ,   89.42075   ,   -7.594162  ,  -96.258934  ,\n           -64.19711   ,   84.633385  ]],\n\n        [[  -2.6116486 ,   -0.411911  ,  113.02648   ,  -70.97319   ,\n           -61.132755  ,   10.4589615 ,  -85.20591   ,  -76.709854  ,\n          -111.48383   ,  -80.31995   ],\n         [  18.772377  ,  124.8653    ,  -29.42276   ,  -14.378143  ,\n            -2.6041107 , -105.46923   ,  125.303444  ,  -38.713997  ,\n            65.69074   ,  128.19531   ],\n         [  27.843468  ,   71.38317   ,  -85.51153   ,  107.90897   ,\n           111.06574   ,   26.146553  ,  116.395226  ,   -8.589302  ,\n            36.49891   ,   88.98948   ],\n         [ -11.611122  ,  -69.59509   ,  102.15626   ,   79.08552   ,\n           -46.692345  ,  -33.06433   ,  -30.123047  ,  -66.91073   ,\n           -14.318916  ,   84.47175   ],\n         [ -29.764778  ,  -17.28218   ,  111.79546   ,  -57.812935  ,\n           -36.75099   ,  -56.57235   ,   18.299461  , -120.365944  ,\n           -98.84839   ,  -87.279594  ],\n         [  77.29502   ,   17.26313   ,   54.927162  ,    1.4625092 ,\n           126.35833   ,   67.41827   , -106.14369   ,  -88.6382    ,\n           118.54989   ,   83.2064    ],\n         [  -0.5264282 ,   24.225883  ,   46.506554  ,  103.0378    ,\n           -65.34245   ,  -68.04659   ,   69.79302   ,  -34.798477  ,\n           101.34063   ,    6.149605  ],\n         [-112.89176   ,  -10.938202  ,   56.063988  ,  -33.962746  ,\n            43.588203  ,   12.703407  ,  -77.119705  ,    7.357933  ,\n           -70.65985   ,   85.67368   ],\n         [-121.72222   , -107.15082   ,   73.30991   , -122.244514  ,\n           -66.55878   ,   73.55538   ,  -19.538704  ,  -13.953331  ,\n           -64.94384   ,  103.17245   ],\n         [  95.43514   ,   -7.167328  ,  121.846016  ,  103.474236  ,\n            80.8679    ,  -47.35646   ,  111.772545  , -121.36391   ,\n            77.57371   ,   94.75393   ]]],\n\n\n       [[[  32.775505  ,  -24.1344    ,  -95.51156   ,  103.194115  ,\n           143.75635   ,   66.74761   ,  -86.136635  ,  -28.21476   ,\n           -36.397087  ,   28.433662  ],\n         [  -9.269623  , -103.75877   ,  -71.81348   ,  -33.964752  ,\n            55.7073    ,  102.59971   ,    2.6993713 ,   30.236183  ,\n           -46.98471   ,   28.080956  ],\n         [  30.718666  ,   99.705864  ,    2.7554626 ,  -30.56475   ,\n            77.265755  ,  -69.15422   ,  -53.248543  ,   36.307625  ,\n           -15.102142  ,  140.84064   ],\n         [ -38.49505   ,  -83.56723   ,   75.42541   ,  -46.70992   ,\n           -20.313637  ,  -13.352386  ,    0.27935028,  -24.807014  ,\n            40.381874  ,  -94.73518   ],\n         [  87.9587    ,  -73.696014  ,  -46.02451   , -102.12582   ,\n           -47.69234   ,  104.20513   ,  -88.22844   ,   -7.1699905 ,\n           134.08249   ,  -66.28078   ],\n         [  80.45147   ,  -77.52976   ,  128.28122   ,   96.893135  ,\n           -91.15711   ,   55.81167   , -102.59885   , -103.739006  ,\n           -75.36366   ,  -74.206154  ],\n         [ 111.15009   ,  133.80685   ,   36.82586   ,   15.690208  ,\n           130.84781   ,   -7.3326187 ,  -98.48589   ,  -19.896484  ,\n           124.79426   ,  115.10668   ],\n         [  66.68803   ,   80.26563   ,  131.19147   ,  -95.59573   ,\n            25.892845  ,   55.7978    ,  131.35974   ,  120.94297   ,\n           144.75497   ,  112.46548   ],\n         [  41.085625  ,  101.868706  ,   52.400215  ,   57.517525  ,\n           -24.728363  ,   99.99297   ,   71.16012   ,  -80.56607   ,\n            81.40017   ,   86.40151   ],\n         [   3.4126968 ,  121.31805   ,  -82.56659   ,   50.70893   ,\n            -4.08918   ,  -24.863205  ,   96.896645  ,  -50.652863  ,\n           -39.15001   ,  -75.829025  ]],\n\n        [[   2.7973633 ,  -13.261955  ,   93.53236   ,  108.42658   ,\n            16.688408  ,   14.342918  , -116.34453   ,  -16.381783  ,\n           134.93753   ,   64.77732   ],\n         [  66.00582   ,   76.07835   ,    5.6562347 ,   38.981087  ,\n            30.743568  ,   48.084816  ,  -27.567978  ,  -23.320435  ,\n          -115.64737   , -104.08686   ],\n         [-112.86774   ,    2.54393   ,  -23.16845   ,   99.35194   ,\n            46.25054   , -110.372696  ,  -94.968346  ,  104.150734  ,\n            54.644997  ,  -97.821594  ],\n         [  67.97646   ,   39.974052  ,   96.78579   ,   76.17428   ,\n           -98.723366  ,   -0.6320267 ,  -41.96187   ,  107.0187    ,\n          -108.61122   ,   34.288246  ],\n         [   1.2319641 ,   29.257545  ,    6.9926224 ,   76.550896  ,\n            26.827354  ,   38.850212  ,   32.472466  ,   37.751762  ,\n           -20.97361   ,   81.32018   ],\n         [  -4.762459  ,  -74.84862   ,  -12.178062  ,   53.722466  ,\n            96.88084   ,    6.6553955 ,   44.33567   ,  -74.05126   ,\n           -16.77774   ,   -4.96669   ],\n         [  -7.150093  ,  -58.153606  ,  121.725365  , -114.53781   ,\n          -102.25605   ,  130.82324   ,   13.143379  , -105.30106   ,\n          -106.21458   ,  -40.603195  ],\n         [  68.968925  ,  116.60201   ,  136.13809   ,   85.168755  ,\n           -92.43353   ,  100.11825   ,  -71.94409   ,  -83.614075  ,\n            53.309685  ,   73.4119    ],\n         [ -78.83304   ,  -53.53844   ,  -27.197319  ,  -13.669853  ,\n            93.091576  ,  -90.977936  ,  120.87531   ,  -22.135338  ,\n           -89.97754   ,  -96.241295  ],\n         [   6.186798  ,   57.377083  ,  -25.528946  ,  -67.27956   ,\n           -17.774124  ,  -14.982101  ,   77.32632   ,   -0.5390396 ,\n           -76.9821    ,  -29.085175  ]],\n\n        [[  91.533134  ,    3.910698  ,   -8.449753  ,  106.5539    ,\n           -73.24077   ,  -75.35956   ,  104.4275    ,   49.13575   ,\n           -31.241516  ,   27.163551  ],\n         [ -23.10746   ,   93.18116   ,   82.02421   ,   96.09727   ,\n             0.65618134,  -87.80476   ,   24.361244  ,  100.12144   ,\n           -96.92085   ,  -39.41176   ],\n         [ -51.93216   ,   90.82308   ,  106.29774   ,  108.64861   ,\n          -113.75787   ,  127.69947   ,  100.25776   ,   -2.5894394 ,\n          -106.5977    ,  -69.40843   ],\n         [ -35.000504  ,    1.0968704 ,   29.467705  ,  -45.11458   ,\n           129.40213   ,  -46.398293  ,   43.95037   ,  104.63279   ,\n           -96.92446   ,  -63.49948   ],\n         [-100.4597    ,  -47.46705   ,  -23.603584  ,    9.42144   ,\n           -45.923233  ,  -53.309105  , -101.575386  ,  -95.88416   ,\n            85.048744  ,  -26.208786  ],\n         [ 107.3892    ,  109.8727    ,  -47.816406  ,  119.39239   ,\n           102.35964   ,  -88.75789   ,  -66.76671   ,   79.39214   ,\n          -117.830025  ,   96.32842   ],\n         [ -48.89714   ,   64.12948   ,  -49.471733  ,   17.558525  ,\n           -49.693024  ,    3.8498611 ,   84.3991    ,  -22.840996  ,\n           -64.797165  ,  102.63383   ],\n         [ -71.87627   ,  -29.985085  ,  -68.28479   ,   70.69259   ,\n            61.548134  ,   84.35757   ,  -80.85191   ,   68.57046   ,\n            90.32171   ,   33.58216   ],\n         [ 111.55976   ,  120.03828   ,  -11.423798  ,    0.6244278 ,\n           -87.197174  ,   20.008095  ,  125.10615   ,  -69.607574  ,\n           102.40348   ,  -65.14981   ],\n         [ -78.82251   ,   41.596626  ,  -28.5568    ,  -36.30584   ,\n            68.19608   ,   14.923698  , -104.841774  ,  109.47855   ,\n            57.593742  ,  -76.69072   ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c234260>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[121, 123, 236,  52,  62, 134,  38,  46,  12,  43],\n         [142, 248,  94, 109, 121,  18, 248,  84, 189, 251],\n         [151, 195,  38, 231, 234, 149, 240, 115, 160, 212],\n         [112,  54, 225, 202,  76,  90,  93,  56, 109, 208],\n         [ 93, 106, 235,  65,  86,  67, 141,   3,  24,  36],\n         [200, 140, 178, 125, 250, 191,  17,  35, 242, 206],\n         [123, 147, 170, 226,  58,  55, 193,  88, 225, 129],\n         [ 10, 112, 179,  89, 167, 136,  46, 131,  53, 209],\n         [  1,  16, 196,   1,  57, 197, 104, 109,  58, 226],\n         [219, 116, 245, 227, 204,  76, 235,   2, 201, 218]],\n\n        [[ 86,  16,  16, 230,  98, 151,  59, 218,  49,  15],\n         [ 64, 102,   2,  84,  91, 245, 245,  56,  73, 167],\n         [228, 156,  29, 132, 166, 234, 229,  98, 225,  29],\n         [129, 193, 252, 219, 230,  21,  79, 101, 232,  79],\n         [238, 201,  30,  78,  83, 128, 207, 121,  88, 205],\n         [154,  53, 236, 140,  10, 168,  23, 213, 243, 215],\n         [101, 162, 118,  27, 180, 172,  85,  73,  28, 102],\n         [  6,  99, 123, 110,  25,  38,  74,  59, 128, 136],\n         [219,  11,  64,  46,  51,  46,  63,  69, 226,  25],\n         [166,  83, 181,  81, 142, 206, 109,  20,  52, 201]],\n\n        [[ 81,  56, 207, 158, 147, 173, 185,  12,  70, 137],\n         [183,  17, 105, 240,  86,  78,  31, 137, 209, 254],\n         [ 28, 203,  61,  10, 107,   1,  38, 230, 174, 120],\n         [ 95, 157,  38, 148, 187, 246,  74,  58, 167, 200],\n         [128, 233, 202,  72, 118, 176, 154, 198, 182,  45],\n         [167,  19, 179, 165,   7, 132, 125, 231,  84, 183],\n         [151, 132,  67,  96, 246,  36,  66, 253, 189, 108],\n         [ 67, 128,  88, 211, 154, 137, 125, 144,  84,  18],\n         [ 75, 244, 167,  35,   8,  88, 231, 209,  30, 136],\n         [188, 152,   1,   9, 242, 240,  65, 181,   2,   8]]],\n\n\n       [[[215, 127, 115, 230,  50,  48, 228, 172,  92, 150],\n         [100, 216, 205, 219, 124,  35, 148, 223,  26,  84],\n         [ 71, 214, 229, 232,   9, 251, 223, 121,  17,  54],\n         [ 88, 124, 153,  78, 253,  77, 167, 228,  26,  60],\n         [ 23,  76, 100, 133,  77,  70,  22,  27, 208,  97],\n         [231, 233,  75, 243, 226,  34,  56, 203,   5, 220],\n         [ 74, 187,  74, 141,  73, 127, 208, 100,  58, 226],\n         [ 51,  93,  55, 194, 185, 208,  42, 192, 214, 157],\n         [235, 243, 112, 124,  36, 143, 248,  54, 226,  58],\n         [ 44, 165,  95,  87, 191, 138,  18, 233, 181,  46]],\n\n        [[119, 103, 210, 225, 133, 131,   0, 100, 251, 181],\n         [182, 192, 122, 155, 147, 164,  89,  93,   1,  12],\n         [  3, 119,  93, 216, 163,   6,  21, 220, 171,  18],\n         [184, 156, 213, 192,  18, 116,  74, 223,   8, 151],\n         [118, 146, 123, 193, 143, 155, 149, 154,  95, 198],\n         [112,  41, 104, 170, 213, 123, 161,  42, 100, 111],\n         [109,  58, 238,   2,  14, 247, 129,  11,  10,  76],\n         [185, 233, 252, 201,  24, 216,  44,  33, 170, 190],\n         [ 37,  63,  89, 103, 209,  25, 237,  94,  26,  20],\n         [122, 174,  91,  49,  99, 101, 194, 116,  39,  87]],\n\n        [[136,  79,   8, 207, 247, 170,  17,  75,  67, 132],\n         [ 94,   0,  32,  69, 159, 206, 106, 134,  56, 132],\n         [134, 203, 106,  73, 181,  34,  50, 140,  88, 244],\n         [ 65,  20, 179,  57,  83,  90, 104,  79, 144,   9],\n         [191,  30,  57,   1,  56, 208,  15,  96, 238,  37],\n         [184,  26, 232, 200,  12, 159,   1,   0,  28,  29],\n         [215, 237, 140, 119, 234,  96,   5,  84, 228, 219],\n         [170, 184, 235,   8, 129, 159, 235, 224, 248, 216],\n         [145, 205, 156, 161,  79, 203, 175,  23, 185, 190],\n         [107, 225,  21, 154,  99,  79, 200,  53,  64,  28]]]],\n      dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c148440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-2.2939003e+01, -4.7939003e+01,  1.0306100e+02,\n           5.4060997e+01,  4.3060997e+01,  6.9060997e+01,\n           8.1060997e+01, -9.1939003e+01, -3.3939003e+01,\n           3.3060997e+01],\n         [ 7.9060997e+01, -8.6939003e+01,  1.0609970e+00,\n           1.3606100e+02, -1.7939003e+01, -2.5939003e+01,\n          -7.2939003e+01,  3.3060997e+01,  1.0506100e+02,\n           1.5006100e+02],\n         [-7.5939003e+01,  9.9060997e+01, -4.2939003e+01,\n          -9.3939003e+01,  3.0609970e+00, -1.0293900e+02,\n          -6.5939003e+01,  1.2606100e+02,  7.0060997e+01,\n           1.6060997e+01],\n         [-8.9390030e+00,  5.3060997e+01, -6.5939003e+01,\n           4.4060997e+01,  8.3060997e+01,  1.4206100e+02,\n          -2.9939003e+01, -4.5939003e+01,  6.3060997e+01,\n           9.6060997e+01],\n         [ 2.4060997e+01,  1.2906100e+02,  9.8060997e+01,\n          -3.1939003e+01,  1.4060997e+01,  7.2060997e+01,\n           5.0060997e+01,  9.4060997e+01,  7.8060997e+01,\n          -5.8939003e+01],\n         [ 6.3060997e+01, -8.4939003e+01,  7.5060997e+01,\n           6.1060997e+01, -9.6939003e+01,  2.8060997e+01,\n           2.1060997e+01,  1.2706100e+02, -1.9939003e+01,\n           7.9060997e+01],\n         [ 4.7060997e+01,  2.8060997e+01, -3.6939003e+01,\n          -7.9390030e+00,  1.4206100e+02, -6.7939003e+01,\n          -3.7939003e+01,  1.4906100e+02,  8.5060997e+01,\n           4.0609970e+00],\n         [-3.6939003e+01,  2.4060997e+01, -1.5939003e+01,\n           1.0706100e+02,  5.0060997e+01,  3.3060997e+01,\n           2.1060997e+01,  4.0060997e+01, -1.9939003e+01,\n          -8.5939003e+01],\n         [-2.8939003e+01,  1.4006100e+02,  6.3060997e+01,\n          -6.8939003e+01, -9.5939003e+01, -1.5939003e+01,\n           1.2706100e+02,  1.0506100e+02, -7.3939003e+01,\n           3.2060997e+01],\n         [ 8.4060997e+01,  4.8060997e+01, -1.0293900e+02,\n          -9.4939003e+01,  1.3806100e+02,  1.3606100e+02,\n          -3.8939003e+01,  7.7060997e+01, -1.0193900e+02,\n          -9.5939003e+01]],\n\n        [[-3.0778999e+01, -1.0077900e+02, -1.0077900e+02,\n           1.1322100e+02, -1.8778999e+01,  3.4221001e+01,\n          -5.7778999e+01,  1.0122100e+02, -6.7778999e+01,\n          -1.0177900e+02],\n         [-5.2778999e+01, -1.4778999e+01, -1.1477900e+02,\n          -3.2778999e+01, -2.5778999e+01,  1.2822101e+02,\n           1.2822101e+02, -6.0778999e+01, -4.3778999e+01,\n           5.0221001e+01],\n         [ 1.1122100e+02,  3.9221001e+01, -8.7778999e+01,\n           1.5221001e+01,  4.9221001e+01,  1.1722100e+02,\n           1.1222100e+02, -1.8778999e+01,  1.0822100e+02,\n          -8.7778999e+01],\n         [ 1.2221001e+01,  7.6221001e+01,  1.3522101e+02,\n           1.0222100e+02,  1.1322100e+02, -9.5778999e+01,\n          -3.7778999e+01, -1.5778999e+01,  1.1522100e+02,\n          -3.7778999e+01],\n         [ 1.2122100e+02,  8.4221001e+01, -8.6778999e+01,\n          -3.8778999e+01, -3.3778999e+01,  1.1221001e+01,\n           9.0221001e+01,  4.2210007e+00, -2.8778999e+01,\n           8.8221001e+01],\n         [ 3.7221001e+01, -6.3778999e+01,  1.1922100e+02,\n           2.3221001e+01, -1.0677900e+02,  5.1221001e+01,\n          -9.3778999e+01,  9.6221001e+01,  1.2622100e+02,\n           9.8221001e+01],\n         [-1.5778999e+01,  4.5221001e+01,  1.2210007e+00,\n          -8.9778999e+01,  6.3221001e+01,  5.5221001e+01,\n          -3.1778999e+01, -4.3778999e+01, -8.8778999e+01,\n          -1.4778999e+01],\n         [-1.1077900e+02, -1.7778999e+01,  6.2210007e+00,\n          -6.7789993e+00, -9.1778999e+01, -7.8778999e+01,\n          -4.2778999e+01, -5.7778999e+01,  1.1221001e+01,\n           1.9221001e+01],\n         [ 1.0222100e+02, -1.0577900e+02, -5.2778999e+01,\n          -7.0778999e+01, -6.5778999e+01, -7.0778999e+01,\n          -5.3778999e+01, -4.7778999e+01,  1.0922100e+02,\n          -9.1778999e+01],\n         [ 4.9221001e+01, -3.3778999e+01,  6.4221001e+01,\n          -3.5778999e+01,  2.5221001e+01,  8.9221001e+01,\n          -7.7789993e+00, -9.6778999e+01, -6.4778999e+01,\n           8.4221001e+01]],\n\n        [[-2.6800003e+00, -6.8000031e-01,  1.1232000e+02,\n          -7.1680000e+01, -6.1680000e+01,  1.0320000e+01,\n          -8.5680000e+01, -7.7680000e+01, -1.1168000e+02,\n          -8.0680000e+01],\n         [ 1.8320000e+01,  1.2432000e+02, -2.9680000e+01,\n          -1.4680000e+01, -2.6800003e+00, -1.0568000e+02,\n           1.2432000e+02, -3.9680000e+01,  6.5320000e+01,\n           1.2732000e+02],\n         [ 2.7320000e+01,  7.1320000e+01, -8.5680000e+01,\n           1.0732000e+02,  1.1032000e+02,  2.5320000e+01,\n           1.1632000e+02, -8.6800003e+00,  3.6320000e+01,\n           8.8320000e+01],\n         [-1.1680000e+01, -6.9680000e+01,  1.0132000e+02,\n           7.8320000e+01, -4.7680000e+01, -3.3680000e+01,\n          -3.0680000e+01, -6.7680000e+01, -1.4680000e+01,\n           8.4320000e+01],\n         [-3.0680000e+01, -1.7680000e+01,  1.1132000e+02,\n          -5.8680000e+01, -3.7680000e+01, -5.6680000e+01,\n           1.7320000e+01, -1.2068000e+02, -9.9680000e+01,\n          -8.7680000e+01],\n         [ 7.6320000e+01,  1.6320000e+01,  5.4320000e+01,\n           1.3199997e+00,  1.2632000e+02,  6.7320000e+01,\n          -1.0668000e+02, -8.8680000e+01,  1.1832000e+02,\n           8.2320000e+01],\n         [-6.8000031e-01,  2.3320000e+01,  4.6320000e+01,\n           1.0232000e+02, -6.5680000e+01, -6.8680000e+01,\n           6.9320000e+01, -3.5680000e+01,  1.0132000e+02,\n           5.3199997e+00],\n         [-1.1368000e+02, -1.1680000e+01,  5.5320000e+01,\n          -3.4680000e+01,  4.3320000e+01,  1.2320000e+01,\n          -7.7680000e+01,  7.3199997e+00, -7.0680000e+01,\n           8.5320000e+01],\n         [-1.2268000e+02, -1.0768000e+02,  7.2320000e+01,\n          -1.2268000e+02, -6.6680000e+01,  7.3320000e+01,\n          -1.9680000e+01, -1.4680000e+01, -6.5680000e+01,\n           1.0232000e+02],\n         [ 9.5320000e+01, -7.6800003e+00,  1.2132000e+02,\n           1.0332000e+02,  8.0320000e+01, -4.7680000e+01,\n           1.1132000e+02, -1.2168000e+02,  7.7320000e+01,\n           9.4320000e+01]]],\n\n\n       [[[ 3.2060997e+01, -2.4939003e+01, -9.5939003e+01,\n           1.0306100e+02,  1.4306100e+02,  6.6060997e+01,\n          -8.6939003e+01, -2.8939003e+01, -3.6939003e+01,\n           2.8060997e+01],\n         [-9.9390030e+00, -1.0393900e+02, -7.1939003e+01,\n          -3.4939003e+01,  5.5060997e+01,  1.0206100e+02,\n           2.0609970e+00,  3.0060997e+01, -4.7939003e+01,\n           2.8060997e+01],\n         [ 3.0060997e+01,  9.9060997e+01,  2.0609970e+00,\n          -3.0939003e+01,  7.7060997e+01, -6.9939003e+01,\n          -5.3939003e+01,  3.6060997e+01, -1.5939003e+01,\n           1.4006100e+02],\n         [-3.8939003e+01, -8.3939003e+01,  7.5060997e+01,\n          -4.6939003e+01, -2.0939003e+01, -1.3939003e+01,\n           6.0997009e-02, -2.4939003e+01,  4.0060997e+01,\n          -9.4939003e+01],\n         [ 8.7060997e+01, -7.3939003e+01, -4.6939003e+01,\n          -1.0293900e+02, -4.7939003e+01,  1.0406100e+02,\n          -8.8939003e+01, -7.9390030e+00,  1.3406100e+02,\n          -6.6939003e+01],\n         [ 8.0060997e+01, -7.7939003e+01,  1.2806100e+02,\n           9.6060997e+01, -9.1939003e+01,  5.5060997e+01,\n          -1.0293900e+02, -1.0393900e+02, -7.5939003e+01,\n          -7.4939003e+01],\n         [ 1.1106100e+02,  1.3306100e+02,  3.6060997e+01,\n           1.5060997e+01,  1.3006100e+02, -7.9390030e+00,\n          -9.8939003e+01, -1.9939003e+01,  1.2406100e+02,\n           1.1506100e+02],\n         [ 6.6060997e+01,  8.0060997e+01,  1.3106100e+02,\n          -9.5939003e+01,  2.5060997e+01,  5.5060997e+01,\n           1.3106100e+02,  1.2006100e+02,  1.4406100e+02,\n           1.1206100e+02],\n         [ 4.1060997e+01,  1.0106100e+02,  5.2060997e+01,\n           5.7060997e+01, -2.4939003e+01,  9.9060997e+01,\n           7.1060997e+01, -8.0939003e+01,  8.1060997e+01,\n           8.6060997e+01],\n         [ 3.0609970e+00,  1.2106100e+02, -8.2939003e+01,\n           5.0060997e+01, -4.9390030e+00, -2.4939003e+01,\n           9.6060997e+01, -5.0939003e+01, -3.9939003e+01,\n          -7.5939003e+01]],\n\n        [[ 2.2210007e+00, -1.3778999e+01,  9.3221001e+01,\n           1.0822100e+02,  1.6221001e+01,  1.4221001e+01,\n          -1.1677900e+02, -1.6778999e+01,  1.3422101e+02,\n           6.4221001e+01],\n         [ 6.5221001e+01,  7.5221001e+01,  5.2210007e+00,\n           3.8221001e+01,  3.0221001e+01,  4.7221001e+01,\n          -2.7778999e+01, -2.3778999e+01, -1.1577900e+02,\n          -1.0477900e+02],\n         [-1.1377900e+02,  2.2210007e+00, -2.3778999e+01,\n           9.9221001e+01,  4.6221001e+01, -1.1077900e+02,\n          -9.5778999e+01,  1.0322100e+02,  5.4221001e+01,\n          -9.8778999e+01],\n         [ 6.7221001e+01,  3.9221001e+01,  9.6221001e+01,\n           7.5221001e+01, -9.8778999e+01, -7.7899933e-01,\n          -4.2778999e+01,  1.0622100e+02, -1.0877900e+02,\n           3.4221001e+01],\n         [ 1.2210007e+00,  2.9221001e+01,  6.2210007e+00,\n           7.6221001e+01,  2.6221001e+01,  3.8221001e+01,\n           3.2221001e+01,  3.7221001e+01, -2.1778999e+01,\n           8.1221001e+01],\n         [-4.7789993e+00, -7.5778999e+01, -1.2778999e+01,\n           5.3221001e+01,  9.6221001e+01,  6.2210007e+00,\n           4.4221001e+01, -7.4778999e+01, -1.6778999e+01,\n          -5.7789993e+00],\n         [-7.7789993e+00, -5.8778999e+01,  1.2122100e+02,\n          -1.1477900e+02, -1.0277900e+02,  1.3022101e+02,\n           1.2221001e+01, -1.0577900e+02, -1.0677900e+02,\n          -4.0778999e+01],\n         [ 6.8221001e+01,  1.1622100e+02,  1.3522101e+02,\n           8.4221001e+01, -9.2778999e+01,  9.9221001e+01,\n          -7.2778999e+01, -8.3778999e+01,  5.3221001e+01,\n           7.3221001e+01],\n         [-7.9778999e+01, -5.3778999e+01, -2.7778999e+01,\n          -1.3778999e+01,  9.2221001e+01, -9.1778999e+01,\n           1.2022100e+02, -2.2778999e+01, -9.0778999e+01,\n          -9.6778999e+01],\n         [ 5.2210007e+00,  5.7221001e+01, -2.5778999e+01,\n          -6.7778999e+01, -1.7778999e+01, -1.5778999e+01,\n           7.7221001e+01, -7.7899933e-01, -7.7778999e+01,\n          -2.9778999e+01]],\n\n        [[ 9.1320000e+01,  3.3199997e+00, -8.6800003e+00,\n           1.0632000e+02, -7.3680000e+01, -7.5680000e+01,\n           1.0432000e+02,  4.8320000e+01, -3.1680000e+01,\n           2.6320000e+01],\n         [-2.3680000e+01,  9.2320000e+01,  8.1320000e+01,\n           9.5320000e+01,  3.1999969e-01, -8.8680000e+01,\n           2.4320000e+01,  9.9320000e+01, -9.7680000e+01,\n          -3.9680000e+01],\n         [-5.2680000e+01,  9.0320000e+01,  1.0532000e+02,\n           1.0832000e+02, -1.1468000e+02,  1.2732000e+02,\n           9.9320000e+01, -2.6800003e+00, -1.0668000e+02,\n          -6.9680000e+01],\n         [-3.5680000e+01,  3.1999969e-01,  2.9320000e+01,\n          -4.5680000e+01,  1.2932001e+02, -4.6680000e+01,\n           4.3320000e+01,  1.0432000e+02, -9.7680000e+01,\n          -6.3680000e+01],\n         [-1.0068000e+02, -4.7680000e+01, -2.3680000e+01,\n           9.3199997e+00, -4.6680000e+01, -5.3680000e+01,\n          -1.0168000e+02, -9.6680000e+01,  8.4320000e+01,\n          -2.6680000e+01],\n         [ 1.0732000e+02,  1.0932000e+02, -4.8680000e+01,\n           1.1932000e+02,  1.0232000e+02, -8.9680000e+01,\n          -6.7680000e+01,  7.9320000e+01, -1.1868000e+02,\n           9.6320000e+01],\n         [-4.9680000e+01,  6.3320000e+01, -4.9680000e+01,\n           1.7320000e+01, -5.0680000e+01,  3.3199997e+00,\n           8.4320000e+01, -2.3680000e+01, -6.5680000e+01,\n           1.0232000e+02],\n         [-7.2680000e+01, -3.0680000e+01, -6.8680000e+01,\n           7.0320000e+01,  6.1320000e+01,  8.4320000e+01,\n          -8.1680000e+01,  6.8320000e+01,  9.0320000e+01,\n           3.3320000e+01],\n         [ 1.1132000e+02,  1.1932000e+02, -1.1680000e+01,\n           3.1999969e-01, -8.7680000e+01,  1.9320000e+01,\n           1.2432000e+02, -6.9680000e+01,  1.0232000e+02,\n          -6.5680000e+01],\n         [-7.9680000e+01,  4.1320000e+01, -2.8680000e+01,\n          -3.6680000e+01,  6.7320000e+01,  1.4320000e+01,\n          -1.0568000e+02,  1.0932000e+02,  5.7320000e+01,\n          -7.7680000e+01]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c23b440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[ 41.79416923,  38.72490565,  48.96811032],\n        [235.4570308 , 233.13424924,  87.90570597],\n        [103.09204619,  46.60254963, 105.39359674],\n        [160.24916243, 196.71988233,  50.07810169],\n        [120.00827779, 171.01698166, 168.63681079],\n        [147.82351427, 184.51866654,  65.25137996],\n        [178.91012628, 229.81018039, 217.00498679],\n        [ 73.29879689, 238.71978037,  40.99820611],\n        [ 16.56585285, 199.61970347,  89.02731732],\n        [180.01592913,  32.60385304, 114.7887127 ]],\n\n       [[ 48.45102108,  48.76894292,  90.27510302],\n        [ 54.67636211,  48.57512571,  59.87349372],\n        [162.95704032,  25.32772215, 184.43010045],\n        [170.03621067, 168.23159025, 210.66551084],\n        [233.02246474, 218.28645367, 112.06939676],\n        [ 46.03640462,  49.20711724,  29.08512003],\n        [ 41.57211193, 183.74548959,  60.59297622],\n        [107.71396643, 207.59478824,  30.88470115],\n        [151.92963722, 137.79958021, 149.70104409],\n        [ 26.49366648,  39.57378904,   7.32222254]],\n\n       [[ 72.70107402, 178.63928743,  17.79068231],\n        [ 95.24978431,  69.11175084, 164.74346159],\n        [ 98.21661197, 237.19994254, 234.73196771],\n        [185.97156815,  41.53734512,  94.5417004 ],\n        [197.72251061, 205.67084228,  99.58721897],\n        [150.02580473, 180.69831883,  71.94353359],\n        [ 17.05624973, 103.34980046, 242.65879393],\n        [122.57482628, 250.72414954, 244.63583735],\n        [ 59.09058528, 199.19765111,  58.14147306],\n        [ 83.12284518, 166.52654973, 120.65543202]],\n\n       [[ 13.72327591, 235.35538605, 172.86383124],\n        [163.98100347, 174.29192635,  33.03660393],\n        [192.87883508,  25.77293615,  47.84541039],\n        [119.41314701, 230.08619872, 217.77028672],\n        [105.61027372,   4.62149367,  30.91222138],\n        [ 67.80501167, 137.52106013,  83.76759297],\n        [174.31220288,  97.31705733, 190.30448869],\n        [181.17543711,  15.05454887,   6.80747941],\n        [170.6754229 , 224.15446325,  19.92731476],\n        [248.55894509, 168.16571818,   5.16439657]],\n\n       [[153.0601645 , 215.43044058,  18.96525442],\n        [158.72888122, 165.67079208,  11.55342538],\n        [169.51301948,  89.60067462, 131.46905976],\n        [ 88.80415592,  87.5904152 ,  93.75025661],\n        [244.7195392 ,  70.90001156,  48.69018245],\n        [143.75773059,  20.85142703, 191.85201847],\n        [106.21930365, 154.8790453 , 200.63679193],\n        [169.88590259,  97.68887572,  45.08960678],\n        [ 87.55710051, 236.00220301,  63.51690109],\n        [180.70765283, 151.62917662, 131.20274286]],\n\n       [[ 64.51514216, 195.43244174, 203.7507347 ],\n        [165.38534294,  58.90633755,  38.89005399],\n        [102.94382858, 101.09185986,   2.41354098],\n        [ 40.03591762,  21.39079092, 115.66234714],\n        [ 35.34536851,  78.25403643, 224.60302005],\n        [  1.87439324,  31.9387339 , 199.09203515],\n        [105.22517358, 109.01990077,  30.16189688],\n        [ 16.47778234, 165.42052103, 114.6705796 ],\n        [ 98.69168562,  22.74460125,  13.34339628],\n        [195.56766835,   0.33031745, 125.88824169]],\n\n       [[ 40.18392813,  45.76383148, 114.24479653],\n        [ 72.27779033, 227.96363626, 235.91245185],\n        [189.59167987, 233.88932486, 119.38852801],\n        [ 74.29330628, 189.66113466, 158.56565642],\n        [111.43886503, 105.35662717, 163.50208184],\n        [194.55834934,  28.52273705,  47.29228816],\n        [ 74.5914112 ,  10.21128532, 206.26670503],\n        [120.09441065, 213.38745124,  35.56647039],\n        [247.42427632,   6.82871771, 231.15500286],\n        [198.50542749,  57.16081199, 100.3165016 ]],\n\n       [[146.0444742 ,  12.7196474 ,  52.05570087],\n        [ 56.95411193, 148.31562531, 181.50675404],\n        [212.05028566, 180.1488662 , 110.48514399],\n        [216.11075332, 149.43867965,  88.20640971],\n        [ 88.08794265, 140.65544674,  43.37500445],\n        [ 15.56865837,  64.58387147, 183.31677664],\n        [190.57087454, 250.94990161, 238.45208164],\n        [ 18.9360086 ,  35.14413449, 124.27036815],\n        [243.62824037,  15.81381678, 136.24002325],\n        [ 16.86670997,  13.66138002,  14.09401698]],\n\n       [[173.08114196,   5.95902263,  33.41148279],\n        [121.43437564,  94.75070039, 218.51399723],\n        [ 64.73774995, 248.25392859,  50.93061788],\n        [ 43.67465566, 109.59523149,  77.1076817 ],\n        [202.24094589, 251.7590653 , 123.89596258],\n        [ 18.93803483,  21.25845211,  30.03372833],\n        [ 51.37898947, 210.24805397,  20.46064234],\n        [201.67391557, 118.70400609, 154.54548414],\n        [ 92.94251723, 143.88480526, 116.2980125 ],\n        [213.00284044,  51.19196434, 145.8718513 ]],\n\n       [[ 48.30687094, 178.63966575,  29.45924882],\n        [ 74.01242908, 199.87545358,  33.34741622],\n        [100.19731307, 207.49050642, 230.04611712],\n        [ 12.38570604,  19.859916  , 179.32964534],\n        [122.28505775, 106.12382512,  54.38500195],\n        [127.86703893, 219.44223136, 226.96362956],\n        [248.47263525, 231.22198972, 239.28543355],\n        [ 68.27654987, 127.89748235, 217.18314468],\n        [ 39.25331137, 149.79521994, 177.99318913],\n        [146.17687813,  21.36197055, 137.05616939]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c30b530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ -54.970894 ,  -78.05409  ,  -81.88583  ],\n        [ -16.033295 ,  116.35525  ,  111.77703  ],\n        [   1.4545975,  -70.17645  ,  -20.587952 ],\n        [ -53.8609   ,   79.94088  ,   36.56916  ],\n        [  64.69781  ,   54.237984 ,   -3.6717224],\n        [ -38.687622 ,   67.73966  ,   24.143517 ],\n        [ 113.06599  ,  113.03118  ,   55.230125 ],\n        [ -62.940796 ,  121.94079  ,  -50.381203 ],\n        [ -14.911682 ,   82.840706 , -107.11415  ],\n        [  10.849709 ,  -84.17515  ,   56.33593  ]],\n\n       [[ -13.663902 ,  -68.010056 ,  -75.22898  ],\n        [ -44.06551  ,  -68.20387  ,  -69.00364  ],\n        [  80.4911   ,  -91.45128  ,   39.277046 ],\n        [ 106.72651  ,   51.452583 ,   46.35621  ],\n        [   8.130394 ,  101.507454 ,  109.34246  ],\n        [ -74.85388  ,  -67.571884 ,  -77.6436   ],\n        [ -43.346027 ,   66.966484 ,  -82.10789  ],\n        [ -73.054306 ,   90.81579  ,  -15.966034 ],\n        [  45.762047 ,   21.020576 ,   28.249641 ],\n        [ -96.61678  ,  -77.205215 ,  -97.18633  ]],\n\n       [[ -86.14832  ,   61.860283 ,  -50.978928 ],\n        [  60.80445  ,  -47.66725  ,  -28.430214 ],\n        [ 130.79297  ,  120.42094  ,  -25.463387 ],\n        [  -9.397301 ,  -75.24165  ,   62.291573 ],\n        [  -4.3517838,   88.89184  ,   74.0425   ],\n        [ -31.995468 ,   63.91932  ,   26.345802 ],\n        [ 138.71979  ,  -13.429199 , -106.62375  ],\n        [ 140.69684  ,  133.94516  ,   -1.1051712],\n        [ -45.79753  ,   82.41865  ,  -64.58942  ],\n        [  16.71643  ,   49.74755  ,  -40.55715  ]],\n\n       [[  68.92483  ,  118.57639  , -109.956726 ],\n        [ -70.902405 ,   57.51293  ,   40.301003 ],\n        [ -56.093594 ,  -91.006065 ,   69.19883  ],\n        [ 113.83129  ,  113.3072   ,   -4.2668533],\n        [ -73.02678  , -112.15751  ,  -18.069725 ],\n        [ -20.17141  ,   20.742058 ,  -55.874992 ],\n        [  86.365486 ,  -19.461945 ,   50.63221  ],\n        [ -97.13152  , -101.72445  ,   57.49543  ],\n        [ -84.01169  ,  107.375465 ,   46.99543  ],\n        [ -98.774605 ,   51.386726 ,  124.878944 ]],\n\n       [[ -84.97375  ,   98.651436 ,   29.380165 ],\n        [ -92.385574 ,   48.891792 ,   35.04888  ],\n        [  27.530052 ,  -27.178322 ,   45.833015 ],\n        [ -10.188744 ,  -29.188583 ,  -34.875847 ],\n        [ -55.24882  ,  -45.87899  ,  121.03954  ],\n        [  87.91302  ,  -95.927574 ,   20.077736 ],\n        [  96.69779  ,   38.100044 ,  -17.460693 ],\n        [ -58.849396 ,  -19.090126 ,   46.20591  ],\n        [ -40.4221   ,  119.2232   ,  -36.122902 ],\n        [  27.26374  ,   34.85018  ,   57.027657 ]],\n\n       [[  99.81173  ,   78.65345  ,  -59.164856 ],\n        [ -65.04895  ,  -57.87266  ,   41.705345 ],\n        [-101.52546  ,  -15.687141 ,  -20.736168 ],\n        [  11.723343 ,  -95.38821  ,  -83.64408  ],\n        [ 120.664024 ,  -38.524963 ,  -88.33463  ],\n        [  95.15304  ,  -84.84026  , -121.80561  ],\n        [ -73.77711  ,   -7.759102 ,  -18.454826 ],\n        [  10.731575 ,   48.641518 , -107.20222  ],\n        [ -90.595604 ,  -94.03439  ,  -24.988312 ],\n        [  21.949242 , -116.448685 ,   71.88767  ]],\n\n       [[  10.305794 ,  -71.01517  ,  -83.49607  ],\n        [ 131.97345  ,  111.18464  ,  -51.402206 ],\n        [  15.449524 ,  117.11033  ,   65.911674 ],\n        [  54.626656 ,   72.88213  ,  -49.386696 ],\n        [  59.563072 ,  -11.422371 ,  -12.241135 ],\n        [ -56.646713 ,  -88.25626  ,   70.87835  ],\n        [ 102.327705 , -106.56771  ,  -49.088593 ],\n        [ -68.37253  ,   96.60845  ,   -3.5855865],\n        [ 127.215996 , -109.95028  ,  123.74427  ],\n        [  -3.6225052,  -59.618187 ,   74.82543  ]],\n\n       [[ -51.8833   , -104.05935  ,   22.36448  ],\n        [  77.56776  ,   31.536629 ,  -66.72589  ],\n        [   6.5461426,   63.369865 ,   88.37029  ],\n        [ -15.73259  ,   32.659676 ,   92.43075  ],\n        [ -60.564    ,   23.876442 ,  -35.592056 ],\n        [  79.37777  ,  -52.19513  , -108.11134  ],\n        [ 134.51309  ,  134.1709   ,   66.89088  ],\n        [  20.331367 ,  -81.634865 , -104.74399  ],\n        [  32.301018 , -100.96518  ,  119.948235 ],\n        [ -89.844986 , -103.11762  , -106.81329  ]],\n\n       [[ -70.52752  , -110.81998  ,   49.401146 ],\n        [ 114.57499  ,  -22.028297 ,   -2.2456284],\n        [ -53.008385 ,  131.47491  ,  -58.942253 ],\n        [ -26.831322 ,   -7.183769 ,  -80.00534  ],\n        [  19.956963 ,  134.98007  ,   78.56095  ],\n        [ -73.90527  ,  -95.520546 , -104.74197  ],\n        [ -83.47836  ,   93.46905  ,  -72.30101  ],\n        [  50.606483 ,    1.925003 ,   77.99392  ],\n        [  12.359009 ,   27.105812 ,  -30.73748  ],\n        [  41.932854 ,  -65.587036 ,   89.32284  ]],\n\n       [[ -74.47975  ,   61.860664 ,  -75.37313  ],\n        [ -70.59158  ,   83.09646  ,  -49.667572 ],\n        [ 126.10711  ,   90.71151  ,  -23.482689 ],\n        [  75.39065  ,  -96.91908  , -111.2943   ],\n        [ -49.554    ,  -10.655174 ,   -1.3949432],\n        [ 123.02462  ,  102.66323  ,    4.187042 ],\n        [ 135.34644  ,  114.442986 ,  124.79264  ],\n        [ 113.24415  ,   11.1184845,  -55.40345  ],\n        [  74.05419  ,   33.016228 ,  -84.42669  ],\n        [  33.117165 ,  -95.41703  ,   22.49688  ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c2328a0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[ 41,  38,  48],\n        [235, 233,  87],\n        [103,  46, 105],\n        [160, 196,  50],\n        [120, 171, 168],\n        [147, 184,  65],\n        [178, 229, 217],\n        [ 73, 238,  40],\n        [ 16, 199,  89],\n        [180,  32, 114]],\n\n       [[ 48,  48,  90],\n        [ 54,  48,  59],\n        [162,  25, 184],\n        [170, 168, 210],\n        [233, 218, 112],\n        [ 46,  49,  29],\n        [ 41, 183,  60],\n        [107, 207,  30],\n        [151, 137, 149],\n        [ 26,  39,   7]],\n\n       [[ 72, 178,  17],\n        [ 95,  69, 164],\n        [ 98, 237, 234],\n        [185,  41,  94],\n        [197, 205,  99],\n        [150, 180,  71],\n        [ 17, 103, 242],\n        [122, 250, 244],\n        [ 59, 199,  58],\n        [ 83, 166, 120]],\n\n       [[ 13, 235, 172],\n        [163, 174,  33],\n        [192,  25,  47],\n        [119, 230, 217],\n        [105,   4,  30],\n        [ 67, 137,  83],\n        [174,  97, 190],\n        [181,  15,   6],\n        [170, 224,  19],\n        [248, 168,   5]],\n\n       [[153, 215,  18],\n        [158, 165,  11],\n        [169,  89, 131],\n        [ 88,  87,  93],\n        [244,  70,  48],\n        [143,  20, 191],\n        [106, 154, 200],\n        [169,  97,  45],\n        [ 87, 236,  63],\n        [180, 151, 131]],\n\n       [[ 64, 195, 203],\n        [165,  58,  38],\n        [102, 101,   2],\n        [ 40,  21, 115],\n        [ 35,  78, 224],\n        [  1,  31, 199],\n        [105, 109,  30],\n        [ 16, 165, 114],\n        [ 98,  22,  13],\n        [195,   0, 125]],\n\n       [[ 40,  45, 114],\n        [ 72, 227, 235],\n        [189, 233, 119],\n        [ 74, 189, 158],\n        [111, 105, 163],\n        [194,  28,  47],\n        [ 74,  10, 206],\n        [120, 213,  35],\n        [247,   6, 231],\n        [198,  57, 100]],\n\n       [[146,  12,  52],\n        [ 56, 148, 181],\n        [212, 180, 110],\n        [216, 149,  88],\n        [ 88, 140,  43],\n        [ 15,  64, 183],\n        [190, 250, 238],\n        [ 18,  35, 124],\n        [243,  15, 136],\n        [ 16,  13,  14]],\n\n       [[173,   5,  33],\n        [121,  94, 218],\n        [ 64, 248,  50],\n        [ 43, 109,  77],\n        [202, 251, 123],\n        [ 18,  21,  30],\n        [ 51, 210,  20],\n        [201, 118, 154],\n        [ 92, 143, 116],\n        [213,  51, 145]],\n\n       [[ 48, 178,  29],\n        [ 74, 199,  33],\n        [100, 207, 230],\n        [ 12,  19, 179],\n        [122, 106,  54],\n        [127, 219, 226],\n        [248, 231, 239],\n        [ 68, 127, 217],\n        [ 39, 149, 177],\n        [146,  21, 137]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c20d490>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ -55.939003 ,  -78.779    ,  -82.68     ],\n        [ -16.939003 ,  116.221    ,  111.32     ],\n        [   1.060997 ,  -70.779    ,  -20.68     ],\n        [ -53.939003 ,   79.221    ,   36.32     ],\n        [  64.061    ,   54.221    ,   -3.6800003],\n        [ -38.939003 ,   67.221    ,   23.32     ],\n        [ 113.061    ,  112.221    ,   54.32     ],\n        [ -63.939003 ,  121.221    ,  -50.68     ],\n        [ -14.939003 ,   82.221    , -107.68     ],\n        [  10.060997 ,  -84.779    ,   56.32     ]],\n\n       [[ -13.939003 ,  -68.779    ,  -75.68     ],\n        [ -44.939003 ,  -68.779    ,  -69.68     ],\n        [  80.061    ,  -91.779    ,   38.32     ],\n        [ 106.061    ,   51.221    ,   46.32     ],\n        [   8.060997 ,  101.221    ,  109.32     ],\n        [ -74.939    ,  -67.779    ,  -77.68     ],\n        [ -43.939003 ,   66.221    ,  -82.68     ],\n        [ -73.939    ,   90.221    ,  -16.68     ],\n        [  45.060997 ,   20.221    ,   27.32     ],\n        [ -96.939    ,  -77.779    ,  -97.68     ]],\n\n       [[ -86.939    ,   61.221    ,  -51.68     ],\n        [  60.060997 ,  -47.779    ,  -28.68     ],\n        [ 130.061    ,  120.221    ,  -25.68     ],\n        [  -9.939003 ,  -75.779    ,   61.32     ],\n        [  -4.939003 ,   88.221    ,   73.32     ],\n        [ -32.939003 ,   63.221    ,   26.32     ],\n        [ 138.061    ,  -13.778999 , -106.68     ],\n        [ 140.061    ,  133.22101  ,   -1.6800003],\n        [ -45.939003 ,   82.221    ,  -64.68     ],\n        [  16.060997 ,   49.221    ,  -40.68     ]],\n\n       [[  68.061    ,  118.221    , -110.68     ],\n        [ -70.939    ,   57.221    ,   39.32     ],\n        [ -56.939003 ,  -91.779    ,   68.32     ],\n        [ 113.061    ,  113.221    ,   -4.6800003],\n        [ -73.939    , -112.779    ,  -18.68     ],\n        [ -20.939003 ,   20.221    ,  -56.68     ],\n        [  86.061    ,  -19.779    ,   50.32     ],\n        [ -97.939    , -101.779    ,   57.32     ],\n        [ -84.939    ,  107.221    ,   46.32     ],\n        [ -98.939    ,   51.221    ,  124.32     ]],\n\n       [[ -85.939    ,   98.221    ,   29.32     ],\n        [ -92.939    ,   48.221    ,   34.32     ],\n        [  27.060997 ,  -27.779    ,   45.32     ],\n        [ -10.939003 ,  -29.779    ,  -35.68     ],\n        [ -55.939003 ,  -46.779    ,  120.32     ],\n        [  87.061    ,  -96.779    ,   19.32     ],\n        [  96.061    ,   37.221    ,  -17.68     ],\n        [ -58.939003 ,  -19.779    ,   45.32     ],\n        [ -40.939003 ,  119.221    ,  -36.68     ],\n        [  27.060997 ,   34.221    ,   56.32     ]],\n\n       [[  99.061    ,   78.221    ,  -59.68     ],\n        [ -65.939    ,  -58.779    ,   41.32     ],\n        [-101.939    ,  -15.778999 ,  -21.68     ],\n        [  11.060997 ,  -95.779    ,  -83.68     ],\n        [ 120.061    ,  -38.779    ,  -88.68     ],\n        [  95.061    ,  -85.779    , -122.68     ],\n        [ -73.939    ,   -7.7789993,  -18.68     ],\n        [  10.060997 ,   48.221    , -107.68     ],\n        [ -90.939    ,  -94.779    ,  -25.68     ],\n        [  21.060997 , -116.779    ,   71.32     ]],\n\n       [[  10.060997 ,  -71.779    ,  -83.68     ],\n        [ 131.061    ,  110.221    ,  -51.68     ],\n        [  15.060997 ,  116.221    ,   65.32     ],\n        [  54.060997 ,   72.221    ,  -49.68     ],\n        [  59.060997 ,  -11.778999 ,  -12.68     ],\n        [ -56.939003 ,  -88.779    ,   70.32     ],\n        [ 102.061    , -106.779    ,  -49.68     ],\n        [ -68.939    ,   96.221    ,   -3.6800003],\n        [ 127.061    , -110.779    ,  123.32     ],\n        [  -3.939003 ,  -59.779    ,   74.32     ]],\n\n       [[ -51.939003 , -104.779    ,   22.32     ],\n        [  77.061    ,   31.221    ,  -67.68     ],\n        [   6.060997 ,   63.221    ,   88.32     ],\n        [ -15.939003 ,   32.221    ,   92.32     ],\n        [ -60.939003 ,   23.221    ,  -35.68     ],\n        [  79.061    ,  -52.779    , -108.68     ],\n        [ 134.061    ,  133.22101  ,   66.32     ],\n        [  20.060997 ,  -81.779    , -105.68     ],\n        [  32.060997 , -101.779    ,  119.32     ],\n        [ -89.939    , -103.779    , -107.68     ]],\n\n       [[ -70.939    , -111.779    ,   49.32     ],\n        [ 114.061    ,  -22.779    ,   -2.6800003],\n        [ -53.939003 ,  131.22101  ,  -59.68     ],\n        [ -26.939003 ,   -7.7789993,  -80.68     ],\n        [  19.060997 ,  134.22101  ,   78.32     ],\n        [ -73.939    ,  -95.779    , -105.68     ],\n        [ -83.939    ,   93.221    ,  -72.68     ],\n        [  50.060997 ,    1.2210007,   77.32     ],\n        [  12.060997 ,   26.221    ,  -31.68     ],\n        [  41.060997 ,  -65.779    ,   89.32     ]],\n\n       [[ -74.939    ,   61.221    ,  -75.68     ],\n        [ -70.939    ,   82.221    ,  -49.68     ],\n        [ 126.061    ,   90.221    ,  -23.68     ],\n        [  75.061    ,  -97.779    , -111.68     ],\n        [ -49.939003 ,  -10.778999 ,   -1.6800003],\n        [ 122.061    ,  102.221    ,    3.3199997],\n        [ 135.061    ,  114.221    ,  124.32     ],\n        [ 113.061    ,   10.221001 ,  -55.68     ],\n        [  73.061    ,   32.221    ,  -84.68     ],\n        [  33.060997 ,  -95.779    ,   22.32     ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c22d1c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[ 41.79416923,  38.72490565,  48.96811032],\n        [235.4570308 , 233.13424924,  87.90570597],\n        [103.09204619,  46.60254963, 105.39359674],\n        [160.24916243, 196.71988233,  50.07810169],\n        [120.00827779, 171.01698166, 168.63681079],\n        [147.82351427, 184.51866654,  65.25137996],\n        [178.91012628, 229.81018039, 217.00498679],\n        [ 73.29879689, 238.71978037,  40.99820611],\n        [ 16.56585285, 199.61970347,  89.02731732],\n        [180.01592913,  32.60385304, 114.7887127 ]],\n\n       [[ 48.45102108,  48.76894292,  90.27510302],\n        [ 54.67636211,  48.57512571,  59.87349372],\n        [162.95704032,  25.32772215, 184.43010045],\n        [170.03621067, 168.23159025, 210.66551084],\n        [233.02246474, 218.28645367, 112.06939676],\n        [ 46.03640462,  49.20711724,  29.08512003],\n        [ 41.57211193, 183.74548959,  60.59297622],\n        [107.71396643, 207.59478824,  30.88470115],\n        [151.92963722, 137.79958021, 149.70104409],\n        [ 26.49366648,  39.57378904,   7.32222254]],\n\n       [[ 72.70107402, 178.63928743,  17.79068231],\n        [ 95.24978431,  69.11175084, 164.74346159],\n        [ 98.21661197, 237.19994254, 234.73196771],\n        [185.97156815,  41.53734512,  94.5417004 ],\n        [197.72251061, 205.67084228,  99.58721897],\n        [150.02580473, 180.69831883,  71.94353359],\n        [ 17.05624973, 103.34980046, 242.65879393],\n        [122.57482628, 250.72414954, 244.63583735],\n        [ 59.09058528, 199.19765111,  58.14147306],\n        [ 83.12284518, 166.52654973, 120.65543202]],\n\n       [[ 13.72327591, 235.35538605, 172.86383124],\n        [163.98100347, 174.29192635,  33.03660393],\n        [192.87883508,  25.77293615,  47.84541039],\n        [119.41314701, 230.08619872, 217.77028672],\n        [105.61027372,   4.62149367,  30.91222138],\n        [ 67.80501167, 137.52106013,  83.76759297],\n        [174.31220288,  97.31705733, 190.30448869],\n        [181.17543711,  15.05454887,   6.80747941],\n        [170.6754229 , 224.15446325,  19.92731476],\n        [248.55894509, 168.16571818,   5.16439657]],\n\n       [[153.0601645 , 215.43044058,  18.96525442],\n        [158.72888122, 165.67079208,  11.55342538],\n        [169.51301948,  89.60067462, 131.46905976],\n        [ 88.80415592,  87.5904152 ,  93.75025661],\n        [244.7195392 ,  70.90001156,  48.69018245],\n        [143.75773059,  20.85142703, 191.85201847],\n        [106.21930365, 154.8790453 , 200.63679193],\n        [169.88590259,  97.68887572,  45.08960678],\n        [ 87.55710051, 236.00220301,  63.51690109],\n        [180.70765283, 151.62917662, 131.20274286]],\n\n       [[ 64.51514216, 195.43244174, 203.7507347 ],\n        [165.38534294,  58.90633755,  38.89005399],\n        [102.94382858, 101.09185986,   2.41354098],\n        [ 40.03591762,  21.39079092, 115.66234714],\n        [ 35.34536851,  78.25403643, 224.60302005],\n        [  1.87439324,  31.9387339 , 199.09203515],\n        [105.22517358, 109.01990077,  30.16189688],\n        [ 16.47778234, 165.42052103, 114.6705796 ],\n        [ 98.69168562,  22.74460125,  13.34339628],\n        [195.56766835,   0.33031745, 125.88824169]],\n\n       [[ 40.18392813,  45.76383148, 114.24479653],\n        [ 72.27779033, 227.96363626, 235.91245185],\n        [189.59167987, 233.88932486, 119.38852801],\n        [ 74.29330628, 189.66113466, 158.56565642],\n        [111.43886503, 105.35662717, 163.50208184],\n        [194.55834934,  28.52273705,  47.29228816],\n        [ 74.5914112 ,  10.21128532, 206.26670503],\n        [120.09441065, 213.38745124,  35.56647039],\n        [247.42427632,   6.82871771, 231.15500286],\n        [198.50542749,  57.16081199, 100.3165016 ]],\n\n       [[146.0444742 ,  12.7196474 ,  52.05570087],\n        [ 56.95411193, 148.31562531, 181.50675404],\n        [212.05028566, 180.1488662 , 110.48514399],\n        [216.11075332, 149.43867965,  88.20640971],\n        [ 88.08794265, 140.65544674,  43.37500445],\n        [ 15.56865837,  64.58387147, 183.31677664],\n        [190.57087454, 250.94990161, 238.45208164],\n        [ 18.9360086 ,  35.14413449, 124.27036815],\n        [243.62824037,  15.81381678, 136.24002325],\n        [ 16.86670997,  13.66138002,  14.09401698]],\n\n       [[173.08114196,   5.95902263,  33.41148279],\n        [121.43437564,  94.75070039, 218.51399723],\n        [ 64.73774995, 248.25392859,  50.93061788],\n        [ 43.67465566, 109.59523149,  77.1076817 ],\n        [202.24094589, 251.7590653 , 123.89596258],\n        [ 18.93803483,  21.25845211,  30.03372833],\n        [ 51.37898947, 210.24805397,  20.46064234],\n        [201.67391557, 118.70400609, 154.54548414],\n        [ 92.94251723, 143.88480526, 116.2980125 ],\n        [213.00284044,  51.19196434, 145.8718513 ]],\n\n       [[ 48.30687094, 178.63966575,  29.45924882],\n        [ 74.01242908, 199.87545358,  33.34741622],\n        [100.19731307, 207.49050642, 230.04611712],\n        [ 12.38570604,  19.859916  , 179.32964534],\n        [122.28505775, 106.12382512,  54.38500195],\n        [127.86703893, 219.44223136, 226.96362956],\n        [248.47263525, 231.22198972, 239.28543355],\n        [ 68.27654987, 127.89748235, 217.18314468],\n        [ 39.25331137, 149.79521994, 177.99318913],\n        [146.17687813,  21.36197055, 137.05616939]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c30b530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ -54.970894 ,  -78.05409  ,  -81.88583  ],\n        [ -16.033295 ,  116.35525  ,  111.77703  ],\n        [   1.4545975,  -70.17645  ,  -20.587952 ],\n        [ -53.8609   ,   79.94088  ,   36.56916  ],\n        [  64.69781  ,   54.237984 ,   -3.6717224],\n        [ -38.687622 ,   67.73966  ,   24.143517 ],\n        [ 113.06599  ,  113.03118  ,   55.230125 ],\n        [ -62.940796 ,  121.94079  ,  -50.381203 ],\n        [ -14.911682 ,   82.840706 , -107.11415  ],\n        [  10.849709 ,  -84.17515  ,   56.33593  ]],\n\n       [[ -13.663902 ,  -68.010056 ,  -75.22898  ],\n        [ -44.06551  ,  -68.20387  ,  -69.00364  ],\n        [  80.4911   ,  -91.45128  ,   39.277046 ],\n        [ 106.72651  ,   51.452583 ,   46.35621  ],\n        [   8.130394 ,  101.507454 ,  109.34246  ],\n        [ -74.85388  ,  -67.571884 ,  -77.6436   ],\n        [ -43.346027 ,   66.966484 ,  -82.10789  ],\n        [ -73.054306 ,   90.81579  ,  -15.966034 ],\n        [  45.762047 ,   21.020576 ,   28.249641 ],\n        [ -96.61678  ,  -77.205215 ,  -97.18633  ]],\n\n       [[ -86.14832  ,   61.860283 ,  -50.978928 ],\n        [  60.80445  ,  -47.66725  ,  -28.430214 ],\n        [ 130.79297  ,  120.42094  ,  -25.463387 ],\n        [  -9.397301 ,  -75.24165  ,   62.291573 ],\n        [  -4.3517838,   88.89184  ,   74.0425   ],\n        [ -31.995468 ,   63.91932  ,   26.345802 ],\n        [ 138.71979  ,  -13.429199 , -106.62375  ],\n        [ 140.69684  ,  133.94516  ,   -1.1051712],\n        [ -45.79753  ,   82.41865  ,  -64.58942  ],\n        [  16.71643  ,   49.74755  ,  -40.55715  ]],\n\n       [[  68.92483  ,  118.57639  , -109.956726 ],\n        [ -70.902405 ,   57.51293  ,   40.301003 ],\n        [ -56.093594 ,  -91.006065 ,   69.19883  ],\n        [ 113.83129  ,  113.3072   ,   -4.2668533],\n        [ -73.02678  , -112.15751  ,  -18.069725 ],\n        [ -20.17141  ,   20.742058 ,  -55.874992 ],\n        [  86.365486 ,  -19.461945 ,   50.63221  ],\n        [ -97.13152  , -101.72445  ,   57.49543  ],\n        [ -84.01169  ,  107.375465 ,   46.99543  ],\n        [ -98.774605 ,   51.386726 ,  124.878944 ]],\n\n       [[ -84.97375  ,   98.651436 ,   29.380165 ],\n        [ -92.385574 ,   48.891792 ,   35.04888  ],\n        [  27.530052 ,  -27.178322 ,   45.833015 ],\n        [ -10.188744 ,  -29.188583 ,  -34.875847 ],\n        [ -55.24882  ,  -45.87899  ,  121.03954  ],\n        [  87.91302  ,  -95.927574 ,   20.077736 ],\n        [  96.69779  ,   38.100044 ,  -17.460693 ],\n        [ -58.849396 ,  -19.090126 ,   46.20591  ],\n        [ -40.4221   ,  119.2232   ,  -36.122902 ],\n        [  27.26374  ,   34.85018  ,   57.027657 ]],\n\n       [[  99.81173  ,   78.65345  ,  -59.164856 ],\n        [ -65.04895  ,  -57.87266  ,   41.705345 ],\n        [-101.52546  ,  -15.687141 ,  -20.736168 ],\n        [  11.723343 ,  -95.38821  ,  -83.64408  ],\n        [ 120.664024 ,  -38.524963 ,  -88.33463  ],\n        [  95.15304  ,  -84.84026  , -121.80561  ],\n        [ -73.77711  ,   -7.759102 ,  -18.454826 ],\n        [  10.731575 ,   48.641518 , -107.20222  ],\n        [ -90.595604 ,  -94.03439  ,  -24.988312 ],\n        [  21.949242 , -116.448685 ,   71.88767  ]],\n\n       [[  10.305794 ,  -71.01517  ,  -83.49607  ],\n        [ 131.97345  ,  111.18464  ,  -51.402206 ],\n        [  15.449524 ,  117.11033  ,   65.911674 ],\n        [  54.626656 ,   72.88213  ,  -49.386696 ],\n        [  59.563072 ,  -11.422371 ,  -12.241135 ],\n        [ -56.646713 ,  -88.25626  ,   70.87835  ],\n        [ 102.327705 , -106.56771  ,  -49.088593 ],\n        [ -68.37253  ,   96.60845  ,   -3.5855865],\n        [ 127.215996 , -109.95028  ,  123.74427  ],\n        [  -3.6225052,  -59.618187 ,   74.82543  ]],\n\n       [[ -51.8833   , -104.05935  ,   22.36448  ],\n        [  77.56776  ,   31.536629 ,  -66.72589  ],\n        [   6.5461426,   63.369865 ,   88.37029  ],\n        [ -15.73259  ,   32.659676 ,   92.43075  ],\n        [ -60.564    ,   23.876442 ,  -35.592056 ],\n        [  79.37777  ,  -52.19513  , -108.11134  ],\n        [ 134.51309  ,  134.1709   ,   66.89088  ],\n        [  20.331367 ,  -81.634865 , -104.74399  ],\n        [  32.301018 , -100.96518  ,  119.948235 ],\n        [ -89.844986 , -103.11762  , -106.81329  ]],\n\n       [[ -70.52752  , -110.81998  ,   49.401146 ],\n        [ 114.57499  ,  -22.028297 ,   -2.2456284],\n        [ -53.008385 ,  131.47491  ,  -58.942253 ],\n        [ -26.831322 ,   -7.183769 ,  -80.00534  ],\n        [  19.956963 ,  134.98007  ,   78.56095  ],\n        [ -73.90527  ,  -95.520546 , -104.74197  ],\n        [ -83.47836  ,   93.46905  ,  -72.30101  ],\n        [  50.606483 ,    1.925003 ,   77.99392  ],\n        [  12.359009 ,   27.105812 ,  -30.73748  ],\n        [  41.932854 ,  -65.587036 ,   89.32284  ]],\n\n       [[ -74.47975  ,   61.860664 ,  -75.37313  ],\n        [ -70.59158  ,   83.09646  ,  -49.667572 ],\n        [ 126.10711  ,   90.71151  ,  -23.482689 ],\n        [  75.39065  ,  -96.91908  , -111.2943   ],\n        [ -49.554    ,  -10.655174 ,   -1.3949432],\n        [ 123.02462  ,  102.66323  ,    4.187042 ],\n        [ 135.34644  ,  114.442986 ,  124.79264  ],\n        [ 113.24415  ,   11.1184845,  -55.40345  ],\n        [  74.05419  ,   33.016228 ,  -84.42669  ],\n        [  33.117165 ,  -95.41703  ,   22.49688  ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c234e90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[ 41,  38,  48],\n        [235, 233,  87],\n        [103,  46, 105],\n        [160, 196,  50],\n        [120, 171, 168],\n        [147, 184,  65],\n        [178, 229, 217],\n        [ 73, 238,  40],\n        [ 16, 199,  89],\n        [180,  32, 114]],\n\n       [[ 48,  48,  90],\n        [ 54,  48,  59],\n        [162,  25, 184],\n        [170, 168, 210],\n        [233, 218, 112],\n        [ 46,  49,  29],\n        [ 41, 183,  60],\n        [107, 207,  30],\n        [151, 137, 149],\n        [ 26,  39,   7]],\n\n       [[ 72, 178,  17],\n        [ 95,  69, 164],\n        [ 98, 237, 234],\n        [185,  41,  94],\n        [197, 205,  99],\n        [150, 180,  71],\n        [ 17, 103, 242],\n        [122, 250, 244],\n        [ 59, 199,  58],\n        [ 83, 166, 120]],\n\n       [[ 13, 235, 172],\n        [163, 174,  33],\n        [192,  25,  47],\n        [119, 230, 217],\n        [105,   4,  30],\n        [ 67, 137,  83],\n        [174,  97, 190],\n        [181,  15,   6],\n        [170, 224,  19],\n        [248, 168,   5]],\n\n       [[153, 215,  18],\n        [158, 165,  11],\n        [169,  89, 131],\n        [ 88,  87,  93],\n        [244,  70,  48],\n        [143,  20, 191],\n        [106, 154, 200],\n        [169,  97,  45],\n        [ 87, 236,  63],\n        [180, 151, 131]],\n\n       [[ 64, 195, 203],\n        [165,  58,  38],\n        [102, 101,   2],\n        [ 40,  21, 115],\n        [ 35,  78, 224],\n        [  1,  31, 199],\n        [105, 109,  30],\n        [ 16, 165, 114],\n        [ 98,  22,  13],\n        [195,   0, 125]],\n\n       [[ 40,  45, 114],\n        [ 72, 227, 235],\n        [189, 233, 119],\n        [ 74, 189, 158],\n        [111, 105, 163],\n        [194,  28,  47],\n        [ 74,  10, 206],\n        [120, 213,  35],\n        [247,   6, 231],\n        [198,  57, 100]],\n\n       [[146,  12,  52],\n        [ 56, 148, 181],\n        [212, 180, 110],\n        [216, 149,  88],\n        [ 88, 140,  43],\n        [ 15,  64, 183],\n        [190, 250, 238],\n        [ 18,  35, 124],\n        [243,  15, 136],\n        [ 16,  13,  14]],\n\n       [[173,   5,  33],\n        [121,  94, 218],\n        [ 64, 248,  50],\n        [ 43, 109,  77],\n        [202, 251, 123],\n        [ 18,  21,  30],\n        [ 51, 210,  20],\n        [201, 118, 154],\n        [ 92, 143, 116],\n        [213,  51, 145]],\n\n       [[ 48, 178,  29],\n        [ 74, 199,  33],\n        [100, 207, 230],\n        [ 12,  19, 179],\n        [122, 106,  54],\n        [127, 219, 226],\n        [248, 231, 239],\n        [ 68, 127, 217],\n        [ 39, 149, 177],\n        [146,  21, 137]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c20d490>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ -55.939003 ,  -78.779    ,  -82.68     ],\n        [ -16.939003 ,  116.221    ,  111.32     ],\n        [   1.060997 ,  -70.779    ,  -20.68     ],\n        [ -53.939003 ,   79.221    ,   36.32     ],\n        [  64.061    ,   54.221    ,   -3.6800003],\n        [ -38.939003 ,   67.221    ,   23.32     ],\n        [ 113.061    ,  112.221    ,   54.32     ],\n        [ -63.939003 ,  121.221    ,  -50.68     ],\n        [ -14.939003 ,   82.221    , -107.68     ],\n        [  10.060997 ,  -84.779    ,   56.32     ]],\n\n       [[ -13.939003 ,  -68.779    ,  -75.68     ],\n        [ -44.939003 ,  -68.779    ,  -69.68     ],\n        [  80.061    ,  -91.779    ,   38.32     ],\n        [ 106.061    ,   51.221    ,   46.32     ],\n        [   8.060997 ,  101.221    ,  109.32     ],\n        [ -74.939    ,  -67.779    ,  -77.68     ],\n        [ -43.939003 ,   66.221    ,  -82.68     ],\n        [ -73.939    ,   90.221    ,  -16.68     ],\n        [  45.060997 ,   20.221    ,   27.32     ],\n        [ -96.939    ,  -77.779    ,  -97.68     ]],\n\n       [[ -86.939    ,   61.221    ,  -51.68     ],\n        [  60.060997 ,  -47.779    ,  -28.68     ],\n        [ 130.061    ,  120.221    ,  -25.68     ],\n        [  -9.939003 ,  -75.779    ,   61.32     ],\n        [  -4.939003 ,   88.221    ,   73.32     ],\n        [ -32.939003 ,   63.221    ,   26.32     ],\n        [ 138.061    ,  -13.778999 , -106.68     ],\n        [ 140.061    ,  133.22101  ,   -1.6800003],\n        [ -45.939003 ,   82.221    ,  -64.68     ],\n        [  16.060997 ,   49.221    ,  -40.68     ]],\n\n       [[  68.061    ,  118.221    , -110.68     ],\n        [ -70.939    ,   57.221    ,   39.32     ],\n        [ -56.939003 ,  -91.779    ,   68.32     ],\n        [ 113.061    ,  113.221    ,   -4.6800003],\n        [ -73.939    , -112.779    ,  -18.68     ],\n        [ -20.939003 ,   20.221    ,  -56.68     ],\n        [  86.061    ,  -19.779    ,   50.32     ],\n        [ -97.939    , -101.779    ,   57.32     ],\n        [ -84.939    ,  107.221    ,   46.32     ],\n        [ -98.939    ,   51.221    ,  124.32     ]],\n\n       [[ -85.939    ,   98.221    ,   29.32     ],\n        [ -92.939    ,   48.221    ,   34.32     ],\n        [  27.060997 ,  -27.779    ,   45.32     ],\n        [ -10.939003 ,  -29.779    ,  -35.68     ],\n        [ -55.939003 ,  -46.779    ,  120.32     ],\n        [  87.061    ,  -96.779    ,   19.32     ],\n        [  96.061    ,   37.221    ,  -17.68     ],\n        [ -58.939003 ,  -19.779    ,   45.32     ],\n        [ -40.939003 ,  119.221    ,  -36.68     ],\n        [  27.060997 ,   34.221    ,   56.32     ]],\n\n       [[  99.061    ,   78.221    ,  -59.68     ],\n        [ -65.939    ,  -58.779    ,   41.32     ],\n        [-101.939    ,  -15.778999 ,  -21.68     ],\n        [  11.060997 ,  -95.779    ,  -83.68     ],\n        [ 120.061    ,  -38.779    ,  -88.68     ],\n        [  95.061    ,  -85.779    , -122.68     ],\n        [ -73.939    ,   -7.7789993,  -18.68     ],\n        [  10.060997 ,   48.221    , -107.68     ],\n        [ -90.939    ,  -94.779    ,  -25.68     ],\n        [  21.060997 , -116.779    ,   71.32     ]],\n\n       [[  10.060997 ,  -71.779    ,  -83.68     ],\n        [ 131.061    ,  110.221    ,  -51.68     ],\n        [  15.060997 ,  116.221    ,   65.32     ],\n        [  54.060997 ,   72.221    ,  -49.68     ],\n        [  59.060997 ,  -11.778999 ,  -12.68     ],\n        [ -56.939003 ,  -88.779    ,   70.32     ],\n        [ 102.061    , -106.779    ,  -49.68     ],\n        [ -68.939    ,   96.221    ,   -3.6800003],\n        [ 127.061    , -110.779    ,  123.32     ],\n        [  -3.939003 ,  -59.779    ,   74.32     ]],\n\n       [[ -51.939003 , -104.779    ,   22.32     ],\n        [  77.061    ,   31.221    ,  -67.68     ],\n        [   6.060997 ,   63.221    ,   88.32     ],\n        [ -15.939003 ,   32.221    ,   92.32     ],\n        [ -60.939003 ,   23.221    ,  -35.68     ],\n        [  79.061    ,  -52.779    , -108.68     ],\n        [ 134.061    ,  133.22101  ,   66.32     ],\n        [  20.060997 ,  -81.779    , -105.68     ],\n        [  32.060997 , -101.779    ,  119.32     ],\n        [ -89.939    , -103.779    , -107.68     ]],\n\n       [[ -70.939    , -111.779    ,   49.32     ],\n        [ 114.061    ,  -22.779    ,   -2.6800003],\n        [ -53.939003 ,  131.22101  ,  -59.68     ],\n        [ -26.939003 ,   -7.7789993,  -80.68     ],\n        [  19.060997 ,  134.22101  ,   78.32     ],\n        [ -73.939    ,  -95.779    , -105.68     ],\n        [ -83.939    ,   93.221    ,  -72.68     ],\n        [  50.060997 ,    1.2210007,   77.32     ],\n        [  12.060997 ,   26.221    ,  -31.68     ],\n        [  41.060997 ,  -65.779    ,   89.32     ]],\n\n       [[ -74.939    ,   61.221    ,  -75.68     ],\n        [ -70.939    ,   82.221    ,  -49.68     ],\n        [ 126.061    ,   90.221    ,  -23.68     ],\n        [  75.061    ,  -97.779    , -111.68     ],\n        [ -49.939003 ,  -10.778999 ,   -1.6800003],\n        [ 122.061    ,  102.221    ,    3.3199997],\n        [ 135.061    ,  114.221    ,  124.32     ],\n        [ 113.061    ,   10.221001 ,  -55.68     ],\n        [  73.061    ,   32.221    ,  -84.68     ],\n        [  33.060997 ,  -95.779    ,   22.32     ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c248710>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[ 41.79416923, 235.4570308 , 103.09204619, 160.24916243,\n         120.00827779, 147.82351427, 178.91012628,  73.29879689,\n          16.56585285, 180.01592913],\n        [ 48.45102108,  54.67636211, 162.95704032, 170.03621067,\n         233.02246474,  46.03640462,  41.57211193, 107.71396643,\n         151.92963722,  26.49366648],\n        [ 72.70107402,  95.24978431,  98.21661197, 185.97156815,\n         197.72251061, 150.02580473,  17.05624973, 122.57482628,\n          59.09058528,  83.12284518],\n        [ 13.72327591, 163.98100347, 192.87883508, 119.41314701,\n         105.61027372,  67.80501167, 174.31220288, 181.17543711,\n         170.6754229 , 248.55894509],\n        [153.0601645 , 158.72888122, 169.51301948,  88.80415592,\n         244.7195392 , 143.75773059, 106.21930365, 169.88590259,\n          87.55710051, 180.70765283],\n        [ 64.51514216, 165.38534294, 102.94382858,  40.03591762,\n          35.34536851,   1.87439324, 105.22517358,  16.47778234,\n          98.69168562, 195.56766835],\n        [ 40.18392813,  72.27779033, 189.59167987,  74.29330628,\n         111.43886503, 194.55834934,  74.5914112 , 120.09441065,\n         247.42427632, 198.50542749],\n        [146.0444742 ,  56.95411193, 212.05028566, 216.11075332,\n          88.08794265,  15.56865837, 190.57087454,  18.9360086 ,\n         243.62824037,  16.86670997],\n        [173.08114196, 121.43437564,  64.73774995,  43.67465566,\n         202.24094589,  18.93803483,  51.37898947, 201.67391557,\n          92.94251723, 213.00284044],\n        [ 48.30687094,  74.01242908, 100.19731307,  12.38570604,\n         122.28505775, 127.86703893, 248.47263525,  68.27654987,\n          39.25331137, 146.17687813]],\n\n       [[ 38.72490565, 233.13424924,  46.60254963, 196.71988233,\n         171.01698166, 184.51866654, 229.81018039, 238.71978037,\n         199.61970347,  32.60385304],\n        [ 48.76894292,  48.57512571,  25.32772215, 168.23159025,\n         218.28645367,  49.20711724, 183.74548959, 207.59478824,\n         137.79958021,  39.57378904],\n        [178.63928743,  69.11175084, 237.19994254,  41.53734512,\n         205.67084228, 180.69831883, 103.34980046, 250.72414954,\n         199.19765111, 166.52654973],\n        [235.35538605, 174.29192635,  25.77293615, 230.08619872,\n           4.62149367, 137.52106013,  97.31705733,  15.05454887,\n         224.15446325, 168.16571818],\n        [215.43044058, 165.67079208,  89.60067462,  87.5904152 ,\n          70.90001156,  20.85142703, 154.8790453 ,  97.68887572,\n         236.00220301, 151.62917662],\n        [195.43244174,  58.90633755, 101.09185986,  21.39079092,\n          78.25403643,  31.9387339 , 109.01990077, 165.42052103,\n          22.74460125,   0.33031745],\n        [ 45.76383148, 227.96363626, 233.88932486, 189.66113466,\n         105.35662717,  28.52273705,  10.21128532, 213.38745124,\n           6.82871771,  57.16081199],\n        [ 12.7196474 , 148.31562531, 180.1488662 , 149.43867965,\n         140.65544674,  64.58387147, 250.94990161,  35.14413449,\n          15.81381678,  13.66138002],\n        [  5.95902263,  94.75070039, 248.25392859, 109.59523149,\n         251.7590653 ,  21.25845211, 210.24805397, 118.70400609,\n         143.88480526,  51.19196434],\n        [178.63966575, 199.87545358, 207.49050642,  19.859916  ,\n         106.12382512, 219.44223136, 231.22198972, 127.89748235,\n         149.79521994,  21.36197055]],\n\n       [[ 48.96811032,  87.90570597, 105.39359674,  50.07810169,\n         168.63681079,  65.25137996, 217.00498679,  40.99820611,\n          89.02731732, 114.7887127 ],\n        [ 90.27510302,  59.87349372, 184.43010045, 210.66551084,\n         112.06939676,  29.08512003,  60.59297622,  30.88470115,\n         149.70104409,   7.32222254],\n        [ 17.79068231, 164.74346159, 234.73196771,  94.5417004 ,\n          99.58721897,  71.94353359, 242.65879393, 244.63583735,\n          58.14147306, 120.65543202],\n        [172.86383124,  33.03660393,  47.84541039, 217.77028672,\n          30.91222138,  83.76759297, 190.30448869,   6.80747941,\n          19.92731476,   5.16439657],\n        [ 18.96525442,  11.55342538, 131.46905976,  93.75025661,\n          48.69018245, 191.85201847, 200.63679193,  45.08960678,\n          63.51690109, 131.20274286],\n        [203.7507347 ,  38.89005399,   2.41354098, 115.66234714,\n         224.60302005, 199.09203515,  30.16189688, 114.6705796 ,\n          13.34339628, 125.88824169],\n        [114.24479653, 235.91245185, 119.38852801, 158.56565642,\n         163.50208184,  47.29228816, 206.26670503,  35.56647039,\n         231.15500286, 100.3165016 ],\n        [ 52.05570087, 181.50675404, 110.48514399,  88.20640971,\n          43.37500445, 183.31677664, 238.45208164, 124.27036815,\n         136.24002325,  14.09401698],\n        [ 33.41148279, 218.51399723,  50.93061788,  77.1076817 ,\n         123.89596258,  30.03372833,  20.46064234, 154.54548414,\n         116.2980125 , 145.8718513 ],\n        [ 29.45924882,  33.34741622, 230.04611712, 179.32964534,\n          54.38500195, 226.96362956, 239.28543355, 217.18314468,\n         177.99318913, 137.05616939]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c20d3f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ -54.970894 ,  -16.033295 ,    1.4545975,  -53.8609   ,\n           64.69781  ,  -38.687622 ,  113.06599  ,  -62.940796 ,\n          -14.911682 ,   10.849709 ],\n        [ -13.663902 ,  -44.06551  ,   80.4911   ,  106.72651  ,\n            8.130394 ,  -74.85388  ,  -43.346027 ,  -73.054306 ,\n           45.762047 ,  -96.61678  ],\n        [ -86.14832  ,   60.80445  ,  130.79297  ,   -9.397301 ,\n           -4.3517838,  -31.995468 ,  138.71979  ,  140.69684  ,\n          -45.79753  ,   16.71643  ],\n        [  68.92483  ,  -70.902405 ,  -56.093594 ,  113.83129  ,\n          -73.02678  ,  -20.17141  ,   86.365486 ,  -97.13152  ,\n          -84.01169  ,  -98.774605 ],\n        [ -84.97375  ,  -92.385574 ,   27.530052 ,  -10.188744 ,\n          -55.24882  ,   87.91302  ,   96.69779  ,  -58.849396 ,\n          -40.4221   ,   27.26374  ],\n        [  99.81173  ,  -65.04895  , -101.52546  ,   11.723343 ,\n          120.664024 ,   95.15304  ,  -73.77711  ,   10.731575 ,\n          -90.595604 ,   21.949242 ],\n        [  10.305794 ,  131.97345  ,   15.449524 ,   54.626656 ,\n           59.563072 ,  -56.646713 ,  102.327705 ,  -68.37253  ,\n          127.215996 ,   -3.6225052],\n        [ -51.8833   ,   77.56776  ,    6.5461426,  -15.73259  ,\n          -60.564    ,   79.37777  ,  134.51309  ,   20.331367 ,\n           32.301018 ,  -89.844986 ],\n        [ -70.52752  ,  114.57499  ,  -53.008385 ,  -26.831322 ,\n           19.956963 ,  -73.90527  ,  -83.47836  ,   50.606483 ,\n           12.359009 ,   41.932854 ],\n        [ -74.47975  ,  -70.59158  ,  126.10711  ,   75.39065  ,\n          -49.554    ,  123.02462  ,  135.34644  ,  113.24415  ,\n           74.05419  ,   33.117165 ]],\n\n       [[ -78.05409  ,  116.35525  ,  -70.17645  ,   79.94088  ,\n           54.237984 ,   67.73966  ,  113.03118  ,  121.94079  ,\n           82.840706 ,  -84.17515  ],\n        [ -68.010056 ,  -68.20387  ,  -91.45128  ,   51.452583 ,\n          101.507454 ,  -67.571884 ,   66.966484 ,   90.81579  ,\n           21.020576 ,  -77.205215 ],\n        [  61.860283 ,  -47.66725  ,  120.42094  ,  -75.24165  ,\n           88.89184  ,   63.91932  ,  -13.429199 ,  133.94516  ,\n           82.41865  ,   49.74755  ],\n        [ 118.57639  ,   57.51293  ,  -91.006065 ,  113.3072   ,\n         -112.15751  ,   20.742058 ,  -19.461945 , -101.72445  ,\n          107.375465 ,   51.386726 ],\n        [  98.651436 ,   48.891792 ,  -27.178322 ,  -29.188583 ,\n          -45.87899  ,  -95.927574 ,   38.100044 ,  -19.090126 ,\n          119.2232   ,   34.85018  ],\n        [  78.65345  ,  -57.87266  ,  -15.687141 ,  -95.38821  ,\n          -38.524963 ,  -84.84026  ,   -7.759102 ,   48.641518 ,\n          -94.03439  , -116.448685 ],\n        [ -71.01517  ,  111.18464  ,  117.11033  ,   72.88213  ,\n          -11.422371 ,  -88.25626  , -106.56771  ,   96.60845  ,\n         -109.95028  ,  -59.618187 ],\n        [-104.05935  ,   31.536629 ,   63.369865 ,   32.659676 ,\n           23.876442 ,  -52.19513  ,  134.1709   ,  -81.634865 ,\n         -100.96518  , -103.11762  ],\n        [-110.81998  ,  -22.028297 ,  131.47491  ,   -7.183769 ,\n          134.98007  ,  -95.520546 ,   93.46905  ,    1.925003 ,\n           27.105812 ,  -65.587036 ],\n        [  61.860664 ,   83.09646  ,   90.71151  ,  -96.91908  ,\n          -10.655174 ,  102.66323  ,  114.442986 ,   11.1184845,\n           33.016228 ,  -95.41703  ]],\n\n       [[ -81.88583  ,  111.77703  ,  -20.587952 ,   36.56916  ,\n           -3.6717224,   24.143517 ,   55.230125 ,  -50.381203 ,\n         -107.11415  ,   56.33593  ],\n        [ -75.22898  ,  -69.00364  ,   39.277046 ,   46.35621  ,\n          109.34246  ,  -77.6436   ,  -82.10789  ,  -15.966034 ,\n           28.249641 ,  -97.18633  ],\n        [ -50.978928 ,  -28.430214 ,  -25.463387 ,   62.291573 ,\n           74.0425   ,   26.345802 , -106.62375  ,   -1.1051712,\n          -64.58942  ,  -40.55715  ],\n        [-109.956726 ,   40.301003 ,   69.19883  ,   -4.2668533,\n          -18.069725 ,  -55.874992 ,   50.63221  ,   57.49543  ,\n           46.99543  ,  124.878944 ],\n        [  29.380165 ,   35.04888  ,   45.833015 ,  -34.875847 ,\n          121.03954  ,   20.077736 ,  -17.460693 ,   46.20591  ,\n          -36.122902 ,   57.027657 ],\n        [ -59.164856 ,   41.705345 ,  -20.736168 ,  -83.64408  ,\n          -88.33463  , -121.80561  ,  -18.454826 , -107.20222  ,\n          -24.988312 ,   71.88767  ],\n        [ -83.49607  ,  -51.402206 ,   65.911674 ,  -49.386696 ,\n          -12.241135 ,   70.87835  ,  -49.088593 ,   -3.5855865,\n          123.74427  ,   74.82543  ],\n        [  22.36448  ,  -66.72589  ,   88.37029  ,   92.43075  ,\n          -35.592056 , -108.11134  ,   66.89088  , -104.74399  ,\n          119.948235 , -106.81329  ],\n        [  49.401146 ,   -2.2456284,  -58.942253 ,  -80.00534  ,\n           78.56095  , -104.74197  ,  -72.30101  ,   77.99392  ,\n          -30.73748  ,   89.32284  ],\n        [ -75.37313  ,  -49.667572 ,  -23.482689 , -111.2943   ,\n           -1.3949432,    4.187042 ,  124.79264  ,  -55.40345  ,\n          -84.42669  ,   22.49688  ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c232b20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[ 41, 235, 103, 160, 120, 147, 178,  73,  16, 180],\n        [ 48,  54, 162, 170, 233,  46,  41, 107, 151,  26],\n        [ 72,  95,  98, 185, 197, 150,  17, 122,  59,  83],\n        [ 13, 163, 192, 119, 105,  67, 174, 181, 170, 248],\n        [153, 158, 169,  88, 244, 143, 106, 169,  87, 180],\n        [ 64, 165, 102,  40,  35,   1, 105,  16,  98, 195],\n        [ 40,  72, 189,  74, 111, 194,  74, 120, 247, 198],\n        [146,  56, 212, 216,  88,  15, 190,  18, 243,  16],\n        [173, 121,  64,  43, 202,  18,  51, 201,  92, 213],\n        [ 48,  74, 100,  12, 122, 127, 248,  68,  39, 146]],\n\n       [[ 38, 233,  46, 196, 171, 184, 229, 238, 199,  32],\n        [ 48,  48,  25, 168, 218,  49, 183, 207, 137,  39],\n        [178,  69, 237,  41, 205, 180, 103, 250, 199, 166],\n        [235, 174,  25, 230,   4, 137,  97,  15, 224, 168],\n        [215, 165,  89,  87,  70,  20, 154,  97, 236, 151],\n        [195,  58, 101,  21,  78,  31, 109, 165,  22,   0],\n        [ 45, 227, 233, 189, 105,  28,  10, 213,   6,  57],\n        [ 12, 148, 180, 149, 140,  64, 250,  35,  15,  13],\n        [  5,  94, 248, 109, 251,  21, 210, 118, 143,  51],\n        [178, 199, 207,  19, 106, 219, 231, 127, 149,  21]],\n\n       [[ 48,  87, 105,  50, 168,  65, 217,  40,  89, 114],\n        [ 90,  59, 184, 210, 112,  29,  60,  30, 149,   7],\n        [ 17, 164, 234,  94,  99,  71, 242, 244,  58, 120],\n        [172,  33,  47, 217,  30,  83, 190,   6,  19,   5],\n        [ 18,  11, 131,  93,  48, 191, 200,  45,  63, 131],\n        [203,  38,   2, 115, 224, 199,  30, 114,  13, 125],\n        [114, 235, 119, 158, 163,  47, 206,  35, 231, 100],\n        [ 52, 181, 110,  88,  43, 183, 238, 124, 136,  14],\n        [ 33, 218,  50,  77, 123,  30,  20, 154, 116, 145],\n        [ 29,  33, 230, 179,  54, 226, 239, 217, 177, 137]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12bb615d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ -55.939003 ,  -16.939003 ,    1.060997 ,  -53.939003 ,\n           64.061    ,  -38.939003 ,  113.061    ,  -63.939003 ,\n          -14.939003 ,   10.060997 ],\n        [ -13.939003 ,  -44.939003 ,   80.061    ,  106.061    ,\n            8.060997 ,  -74.939    ,  -43.939003 ,  -73.939    ,\n           45.060997 ,  -96.939    ],\n        [ -86.939    ,   60.060997 ,  130.061    ,   -9.939003 ,\n           -4.939003 ,  -32.939003 ,  138.061    ,  140.061    ,\n          -45.939003 ,   16.060997 ],\n        [  68.061    ,  -70.939    ,  -56.939003 ,  113.061    ,\n          -73.939    ,  -20.939003 ,   86.061    ,  -97.939    ,\n          -84.939    ,  -98.939    ],\n        [ -85.939    ,  -92.939    ,   27.060997 ,  -10.939003 ,\n          -55.939003 ,   87.061    ,   96.061    ,  -58.939003 ,\n          -40.939003 ,   27.060997 ],\n        [  99.061    ,  -65.939    , -101.939    ,   11.060997 ,\n          120.061    ,   95.061    ,  -73.939    ,   10.060997 ,\n          -90.939    ,   21.060997 ],\n        [  10.060997 ,  131.061    ,   15.060997 ,   54.060997 ,\n           59.060997 ,  -56.939003 ,  102.061    ,  -68.939    ,\n          127.061    ,   -3.939003 ],\n        [ -51.939003 ,   77.061    ,    6.060997 ,  -15.939003 ,\n          -60.939003 ,   79.061    ,  134.061    ,   20.060997 ,\n           32.060997 ,  -89.939    ],\n        [ -70.939    ,  114.061    ,  -53.939003 ,  -26.939003 ,\n           19.060997 ,  -73.939    ,  -83.939    ,   50.060997 ,\n           12.060997 ,   41.060997 ],\n        [ -74.939    ,  -70.939    ,  126.061    ,   75.061    ,\n          -49.939003 ,  122.061    ,  135.061    ,  113.061    ,\n           73.061    ,   33.060997 ]],\n\n       [[ -78.779    ,  116.221    ,  -70.779    ,   79.221    ,\n           54.221    ,   67.221    ,  112.221    ,  121.221    ,\n           82.221    ,  -84.779    ],\n        [ -68.779    ,  -68.779    ,  -91.779    ,   51.221    ,\n          101.221    ,  -67.779    ,   66.221    ,   90.221    ,\n           20.221    ,  -77.779    ],\n        [  61.221    ,  -47.779    ,  120.221    ,  -75.779    ,\n           88.221    ,   63.221    ,  -13.778999 ,  133.22101  ,\n           82.221    ,   49.221    ],\n        [ 118.221    ,   57.221    ,  -91.779    ,  113.221    ,\n         -112.779    ,   20.221    ,  -19.779    , -101.779    ,\n          107.221    ,   51.221    ],\n        [  98.221    ,   48.221    ,  -27.779    ,  -29.779    ,\n          -46.779    ,  -96.779    ,   37.221    ,  -19.779    ,\n          119.221    ,   34.221    ],\n        [  78.221    ,  -58.779    ,  -15.778999 ,  -95.779    ,\n          -38.779    ,  -85.779    ,   -7.7789993,   48.221    ,\n          -94.779    , -116.779    ],\n        [ -71.779    ,  110.221    ,  116.221    ,   72.221    ,\n          -11.778999 ,  -88.779    , -106.779    ,   96.221    ,\n         -110.779    ,  -59.779    ],\n        [-104.779    ,   31.221    ,   63.221    ,   32.221    ,\n           23.221    ,  -52.779    ,  133.22101  ,  -81.779    ,\n         -101.779    , -103.779    ],\n        [-111.779    ,  -22.779    ,  131.22101  ,   -7.7789993,\n          134.22101  ,  -95.779    ,   93.221    ,    1.2210007,\n           26.221    ,  -65.779    ],\n        [  61.221    ,   82.221    ,   90.221    ,  -97.779    ,\n          -10.778999 ,  102.221    ,  114.221    ,   10.221001 ,\n           32.221    ,  -95.779    ]],\n\n       [[ -82.68     ,  111.32     ,  -20.68     ,   36.32     ,\n           -3.6800003,   23.32     ,   54.32     ,  -50.68     ,\n         -107.68     ,   56.32     ],\n        [ -75.68     ,  -69.68     ,   38.32     ,   46.32     ,\n          109.32     ,  -77.68     ,  -82.68     ,  -16.68     ,\n           27.32     ,  -97.68     ],\n        [ -51.68     ,  -28.68     ,  -25.68     ,   61.32     ,\n           73.32     ,   26.32     , -106.68     ,   -1.6800003,\n          -64.68     ,  -40.68     ],\n        [-110.68     ,   39.32     ,   68.32     ,   -4.6800003,\n          -18.68     ,  -56.68     ,   50.32     ,   57.32     ,\n           46.32     ,  124.32     ],\n        [  29.32     ,   34.32     ,   45.32     ,  -35.68     ,\n          120.32     ,   19.32     ,  -17.68     ,   45.32     ,\n          -36.68     ,   56.32     ],\n        [ -59.68     ,   41.32     ,  -21.68     ,  -83.68     ,\n          -88.68     , -122.68     ,  -18.68     , -107.68     ,\n          -25.68     ,   71.32     ],\n        [ -83.68     ,  -51.68     ,   65.32     ,  -49.68     ,\n          -12.68     ,   70.32     ,  -49.68     ,   -3.6800003,\n          123.32     ,   74.32     ],\n        [  22.32     ,  -67.68     ,   88.32     ,   92.32     ,\n          -35.68     , -108.68     ,   66.32     , -105.68     ,\n          119.32     , -107.68     ],\n        [  49.32     ,   -2.6800003,  -59.68     ,  -80.68     ,\n           78.32     , -105.68     ,  -72.68     ,   77.32     ,\n          -31.68     ,   89.32     ],\n        [ -75.68     ,  -49.68     ,  -23.68     , -111.68     ,\n           -1.6800003,    3.3199997,  124.32     ,  -55.68     ,\n          -84.68     ,   22.32     ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12c232670>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        if x.ndim == 3:\n            x[0, :, :] -= mean[0]\n            x[1, :, :] -= mean[1]\n            x[2, :, :] -= mean[2]\n            if std is not None:\n                x[0, :, :] /= std[0]\n                x[1, :, :] /= std[1]\n                x[2, :, :] /= std[2]\n        else:\n            x[:, 0, :, :] -= mean[0]\n            x[:, 1, :, :] -= mean[1]\n            x[:, 2, :, :] -= mean[2]\n            if std is not None:\n                x[:, 0, :, :] /= std[0]\n                x[:, 1, :, :] /= std[1]\n                x[:, 2, :, :] /= std[2]\n    else:\n        x[..., 0] -= mean[0]\n        x[..., 1] -= mean[1]\n        x[..., 2] -= mean[2]\n        if std is not None:\n            x[..., 0] /= std[0]\n            x[..., 1] /= std[1]\n            x[..., 2] /= std[2]\n    return x",
                "def _preprocess_symbolic_input(x, data_format, mode):\n    \"\"\"Preprocesses a tensor encoding a batch of images.\n\n    # Arguments\n        x: Input tensor, 3D or 4D.\n        data_format: Data format of the image tensor.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed tensor.\n    \"\"\"\n    global _IMAGENET_MEAN\n\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if K.ndim(x) == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    if _IMAGENET_MEAN is None:\n        _IMAGENET_MEAN = K.constant(-np.array(mean))\n\n    # Zero-center by mean pixel\n    if K.dtype(x) != K.dtype(_IMAGENET_MEAN):\n        x = K.bias_add(x, K.cast(_IMAGENET_MEAN, K.dtype(x)), data_format)\n    else:\n        x = K.bias_add(x, _IMAGENET_MEAN, data_format)\n    if std is not None:\n        x /= std\n    return x",
                "def preprocess_input(x, data_format=None, mode='caffe'):\n    \"\"\"Preprocesses a tensor or Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input Numpy or symbolic tensor, 3D or 4D.\n        data_format: Data format of the image tensor/array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed tensor or Numpy array.\n\n    # Raises\n        ValueError: In case of unknown `data_format` argument.\n    \"\"\"\n    if data_format is None:\n        data_format = K.image_data_format()\n    if data_format not in {'channels_first', 'channels_last'}:\n        raise ValueError('Unknown data_format ' + str(data_format))\n\n    if isinstance(x, np.ndarray):\n        return _preprocess_numpy_input(x, data_format=data_format, mode=mode)\n    else:\n        return _preprocess_symbolic_input(x, data_format=data_format,\n                                          mode=mode)",
                "def decode_predictions(preds, top=5):\n    \"\"\"Decodes the prediction of an ImageNet model.\n\n    # Arguments\n        preds: Numpy tensor encoding a batch of predictions.\n        top: Integer, how many top-guesses to return.\n\n    # Returns\n        A list of lists of top class prediction tuples\n        `(class_name, class_description, score)`.\n        One list of tuples per sample in batch input.\n\n    # Raises\n        ValueError: In case of invalid shape of the `pred` array\n            (must be 2D).\n    \"\"\"\n    global CLASS_INDEX\n    if len(preds.shape) != 2 or preds.shape[1] != 1000:\n        raise ValueError('`decode_predictions` expects '\n                         'a batch of predictions '\n                         '(i.e. a 2D array of shape (samples, 1000)). '\n                         'Found array with shape: ' + str(preds.shape))\n    if CLASS_INDEX is None:\n        fpath = get_file('imagenet_class_index.json',\n                         CLASS_INDEX_PATH,\n                         cache_subdir='models',\n                         file_hash='c2c37ea517e94d9795004a39431a14cb')\n        with open(fpath) as f:\n            CLASS_INDEX = json.load(f)\n    results = []\n    for pred in preds:\n        top_indices = pred.argsort()[-top:][::-1]\n        result = [tuple(CLASS_INDEX[str(i)]) + (pred[i],) for i in top_indices]\n        result.sort(key=lambda x: x[2], reverse=True)\n        results.append(result)\n    return results",
                "def _obtain_input_shape(input_shape,\n                        default_size,\n                        min_size,\n                        data_format,\n                        require_flatten,\n                        weights=None):\n    \"\"\"Internal utility to compute/validate a model's input shape.\n\n    # Arguments\n        input_shape: Either None (will return the default network input shape),\n            or a user-provided shape to be validated.\n        default_size: Default input width/height for the model.\n        min_size: Minimum input width/height accepted by the model.\n        data_format: Image data format to use.\n        require_flatten: Whether the model is expected to\n            be linked to a classifier via a Flatten layer.\n        weights: One of `None` (random initialization)\n            or 'imagenet' (pre-training on ImageNet).\n            If weights='imagenet' input channels must be equal to 3.\n\n    # Returns\n        An integer shape tuple (may include None entries).\n\n    # Raises\n        ValueError: In case of invalid argument values.\n    \"\"\"\n    if weights != 'imagenet' and input_shape and len(input_shape) == 3:\n        if data_format == 'channels_first':\n            if input_shape[0] not in {1, 3}:\n                warnings.warn(\n                    'This model usually expects 1 or 3 input channels. '\n                    'However, it was passed an input_shape with ' +\n                    str(input_shape[0]) + ' input channels.')\n            default_shape = (input_shape[0], default_size, default_size)\n        else:\n            if input_shape[-1] not in {1, 3}:\n                warnings.warn(\n                    'This model usually expects 1 or 3 input channels. '\n                    'However, it was passed an input_shape with ' +\n                    str(input_shape[-1]) + ' input channels.')\n            default_shape = (default_size, default_size, input_shape[-1])\n    else:\n        if data_format == 'channels_first':\n            default_shape = (3, default_size, default_size)\n        else:\n            default_shape = (default_size, default_size, 3)\n    if weights == 'imagenet' and require_flatten:\n        if input_shape is not None:\n            if input_shape != default_shape:\n                raise ValueError('When setting`include_top=True` '\n                                 'and loading `imagenet` weights, '\n                                 '`input_shape` should be ' +\n                                 str(default_shape) + '.')\n        return default_shape\n    if input_shape:\n        if data_format == 'channels_first':\n            if input_shape is not None:\n                if len(input_shape) != 3:\n                    raise ValueError(\n                        '`input_shape` must be a tuple of three integers.')\n                if input_shape[0] != 3 and weights == 'imagenet':\n                    raise ValueError('The input must have 3 channels; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n                if ((input_shape[1] is not None and input_shape[1] < min_size) or\n                   (input_shape[2] is not None and input_shape[2] < min_size)):\n                    raise ValueError('Input size must be at least ' +\n                                     str(min_size) + 'x' + str(min_size) + '; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n        else:\n            if input_shape is not None:\n                if len(input_shape) != 3:\n                    raise ValueError(\n                        '`input_shape` must be a tuple of three integers.')\n                if input_shape[-1] != 3 and weights == 'imagenet':\n                    raise ValueError('The input must have 3 channels; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n                if ((input_shape[0] is not None and input_shape[0] < min_size) or\n                   (input_shape[1] is not None and input_shape[1] < min_size)):\n                    raise ValueError('Input size must be at least ' +\n                                     str(min_size) + 'x' + str(min_size) + '; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n    else:\n        if require_flatten:\n            input_shape = default_shape\n        else:\n            if data_format == 'channels_first':\n                input_shape = (3, None, None)\n            else:\n                input_shape = (None, None, 3)\n    if require_flatten:\n        if None in input_shape:\n            raise ValueError('If `include_top` is True, '\n                             'you should specify a static `input_shape`. '\n                             'Got `input_shape=' + str(input_shape) + '`')\n    return input_shape"
            ],
            "inscope_function_signatures": [
                "_preprocess_numpy_input(x, data_format, mode)",
                "_preprocess_symbolic_input(x, data_format, mode)",
                "preprocess_input(x, data_format=None, mode='caffe')",
                "decode_predictions(preds, top=5)",
                "_obtain_input_shape(input_shape, default_size, min_size, data_format, require_flatten, weights=None)"
            ],
            "variables_in_file": {
                "CLASS_INDEX": [
                    216,
                    212,
                    206,
                    14
                ],
                "CLASS_INDEX_PATH": [
                    208,
                    15
                ],
                "_IMAGENET_MEAN": [
                    136,
                    137,
                    140,
                    141,
                    143,
                    18
                ],
                "mode": [
                    41,
                    46,
                    178,
                    114,
                    181,
                    119
                ],
                "x": [
                    129,
                    132,
                    140,
                    141,
                    143,
                    145,
                    146,
                    42,
                    43,
                    44,
                    47,
                    177,
                    178,
                    180,
                    53,
                    54,
                    56,
                    59,
                    65,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    82,
                    83,
                    84,
                    86,
                    87,
                    88,
                    89,
                    217,
                    115,
                    116,
                    117,
                    120,
                    126,
                    127
                ],
                "mean": [
                    66,
                    67,
                    68,
                    133,
                    137,
                    74,
                    75,
                    76,
                    48,
                    82,
                    83,
                    84,
                    121,
                    60
                ],
                "std": [
                    69,
                    70,
                    71,
                    72,
                    134,
                    77,
                    78,
                    79,
                    80,
                    49,
                    144,
                    145,
                    85,
                    86,
                    87,
                    88,
                    122,
                    61
                ],
                "data_format": [
                    64,
                    264,
                    172,
                    141,
                    173,
                    143,
                    174,
                    175,
                    178,
                    51,
                    180,
                    277,
                    307,
                    249,
                    124
                ],
                "x.ndim": [
                    65,
                    53
                ],
                "K.ndim": [
                    126
                ],
                "K": [
                    137,
                    140,
                    141,
                    173,
                    143,
                    126
                ],
                "K.constant": [
                    137
                ],
                "np.array": [
                    137
                ],
                "np": [
                    137,
                    177
                ],
                "K.dtype": [
                    140,
                    141
                ],
                "K.bias_add": [
                    141,
                    143
                ],
                "K.cast": [
                    141
                ],
                "K.image_data_format": [
                    173
                ],
                "ValueError": [
                    293,
                    296,
                    202,
                    300,
                    271,
                    175,
                    280,
                    313,
                    283,
                    287
                ],
                "str": [
                    288,
                    289,
                    261,
                    297,
                    205,
                    301,
                    175,
                    302,
                    274,
                    216,
                    315,
                    284,
                    254
                ],
                "isinstance": [
                    177
                ],
                "np.ndarray": [
                    177
                ],
                "_preprocess_numpy_input": [
                    178
                ],
                "_preprocess_symbolic_input": [
                    180
                ],
                "len": [
                    248,
                    201,
                    292,
                    279
                ],
                "preds.shape": [
                    201,
                    205
                ],
                "preds": [
                    201,
                    205,
                    214
                ],
                "fpath": [
                    211,
                    207
                ],
                "get_file": [
                    207
                ],
                "open": [
                    211
                ],
                "f": [
                    211,
                    212
                ],
                "json.load": [
                    212
                ],
                "json": [
                    212
                ],
                "results": [
                    218,
                    219,
                    213
                ],
                "pred": [
                    216,
                    214,
                    215
                ],
                "top_indices": [
                    216,
                    215
                ],
                "pred.argsort": [
                    215
                ],
                "top": [
                    215
                ],
                "result": [
                    216,
                    217,
                    218
                ],
                "tuple": [
                    216
                ],
                "i": [
                    216
                ],
                "result.sort": [
                    217
                ],
                "results.append": [
                    218
                ],
                "weights": [
                    248,
                    282,
                    268,
                    295
                ],
                "input_shape": [
                    257,
                    261,
                    262,
                    269,
                    270,
                    276,
                    278,
                    279,
                    282,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    295,
                    297,
                    298,
                    299,
                    302,
                    305,
                    308,
                    310,
                    312,
                    315,
                    316,
                    248,
                    250,
                    254,
                    255
                ],
                "warnings.warn": [
                    258,
                    251
                ],
                "warnings": [
                    258,
                    251
                ],
                "default_shape": [
                    262,
                    265,
                    267,
                    270,
                    305,
                    274,
                    275,
                    255
                ],
                "default_size": [
                    265,
                    267,
                    262,
                    255
                ],
                "require_flatten": [
                    304,
                    268,
                    311
                ],
                "min_size": [
                    288,
                    298,
                    299,
                    301,
                    285,
                    286
                ]
            },
            "filtered_variables_in_file": {
                "CLASS_INDEX": [
                    216,
                    212,
                    206,
                    14
                ],
                "CLASS_INDEX_PATH": [
                    208,
                    15
                ],
                "_IMAGENET_MEAN": [
                    136,
                    137,
                    140,
                    141,
                    143,
                    18
                ],
                "mode": [
                    41,
                    46,
                    178,
                    114,
                    181,
                    119
                ],
                "x": [
                    129,
                    132,
                    140,
                    141,
                    143,
                    145,
                    146,
                    42,
                    43,
                    44,
                    47,
                    177,
                    178,
                    180,
                    53,
                    54,
                    56,
                    59,
                    65,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    82,
                    83,
                    84,
                    86,
                    87,
                    88,
                    89,
                    217,
                    115,
                    116,
                    117,
                    120,
                    126,
                    127
                ],
                "mean": [
                    66,
                    67,
                    68,
                    133,
                    137,
                    74,
                    75,
                    76,
                    48,
                    82,
                    83,
                    84,
                    121,
                    60
                ],
                "std": [
                    69,
                    70,
                    71,
                    72,
                    134,
                    77,
                    78,
                    79,
                    80,
                    49,
                    144,
                    145,
                    85,
                    86,
                    87,
                    88,
                    122,
                    61
                ],
                "data_format": [
                    64,
                    264,
                    172,
                    141,
                    173,
                    143,
                    174,
                    175,
                    178,
                    51,
                    180,
                    277,
                    307,
                    249,
                    124
                ],
                "x.ndim": [
                    65,
                    53
                ],
                "K.ndim": [
                    126
                ],
                "K": [
                    137,
                    140,
                    141,
                    173,
                    143,
                    126
                ],
                "K.constant": [
                    137
                ],
                "np.array": [
                    137
                ],
                "np": [
                    137,
                    177
                ],
                "K.dtype": [
                    140,
                    141
                ],
                "K.bias_add": [
                    141,
                    143
                ],
                "K.cast": [
                    141
                ],
                "K.image_data_format": [
                    173
                ],
                "np.ndarray": [
                    177
                ],
                "_preprocess_numpy_input": [
                    178
                ],
                "_preprocess_symbolic_input": [
                    180
                ],
                "preds.shape": [
                    201,
                    205
                ],
                "preds": [
                    201,
                    205,
                    214
                ],
                "fpath": [
                    211,
                    207
                ],
                "get_file": [
                    207
                ],
                "f": [
                    211,
                    212
                ],
                "json.load": [
                    212
                ],
                "json": [
                    212
                ],
                "results": [
                    218,
                    219,
                    213
                ],
                "pred": [
                    216,
                    214,
                    215
                ],
                "top_indices": [
                    216,
                    215
                ],
                "pred.argsort": [
                    215
                ],
                "top": [
                    215
                ],
                "result": [
                    216,
                    217,
                    218
                ],
                "i": [
                    216
                ],
                "result.sort": [
                    217
                ],
                "results.append": [
                    218
                ],
                "weights": [
                    248,
                    282,
                    268,
                    295
                ],
                "input_shape": [
                    257,
                    261,
                    262,
                    269,
                    270,
                    276,
                    278,
                    279,
                    282,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    295,
                    297,
                    298,
                    299,
                    302,
                    305,
                    308,
                    310,
                    312,
                    315,
                    316,
                    248,
                    250,
                    254,
                    255
                ],
                "warnings.warn": [
                    258,
                    251
                ],
                "warnings": [
                    258,
                    251
                ],
                "default_shape": [
                    262,
                    265,
                    267,
                    270,
                    305,
                    274,
                    275,
                    255
                ],
                "default_size": [
                    265,
                    267,
                    262,
                    255
                ],
                "require_flatten": [
                    304,
                    268,
                    311
                ],
                "min_size": [
                    288,
                    298,
                    299,
                    301,
                    285,
                    286
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/keras_25/tests/keras/applications/imagenet_utils_test.py",
                "test_function": "test_preprocess_input",
                "test_function_code": "def test_preprocess_input():\n    # Test image batch with float and int image input\n    x = np.random.uniform(0, 255, (2, 10, 10, 3))\n    xint = x.astype('int32')\n    assert utils.preprocess_input(x).shape == x.shape\n    assert utils.preprocess_input(xint).shape == xint.shape\n\n    out1 = utils.preprocess_input(x, 'channels_last')\n    out1int = utils.preprocess_input(xint, 'channels_last')\n    out2 = utils.preprocess_input(np.transpose(x, (0, 3, 1, 2)),\n                                  'channels_first')\n    out2int = utils.preprocess_input(np.transpose(xint, (0, 3, 1, 2)),\n                                     'channels_first')\n    assert_allclose(out1, out2.transpose(0, 2, 3, 1))\n    assert_allclose(out1int, out2int.transpose(0, 2, 3, 1))\n\n    # Test single image\n    x = np.random.uniform(0, 255, (10, 10, 3))\n    xint = x.astype('int32')\n    assert utils.preprocess_input(x).shape == x.shape\n    assert utils.preprocess_input(xint).shape == xint.shape\n\n    out1 = utils.preprocess_input(x, 'channels_last')\n    out1int = utils.preprocess_input(xint, 'channels_last')\n    out2 = utils.preprocess_input(np.transpose(x, (2, 0, 1)),\n                                  'channels_first')\n    out2int = utils.preprocess_input(np.transpose(xint, (2, 0, 1)),\n                                     'channels_first')\n    assert_allclose(out1, out2.transpose(1, 2, 0))\n    assert_allclose(out1int, out2int.transpose(1, 2, 0))",
                "test_error": "numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'",
                "full_test_error": "def test_preprocess_input():\n        # Test image batch with float and int image input\n        x = np.random.uniform(0, 255, (2, 10, 10, 3))\n        xint = x.astype('int32')\n        assert utils.preprocess_input(x).shape == x.shape\n>       assert utils.preprocess_input(xint).shape == xint.shape\n\ntests/keras/applications/imagenet_utils_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nkeras/applications/imagenet_utils.py:178: in preprocess_input\n    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = array([[[[161, 121, 118],\n         [ 97, 139, 216],\n         [102,  59,  64],\n         [104,  90,  23],\n         [253,...         [230, 127,  57],\n         [ 35, 252,  83],\n         [224,  63, 228],\n         [136, 245,  32]]]], dtype=int32)\ndata_format = 'channels_last', mode = 'caffe'\n\n    def _preprocess_numpy_input(x, data_format, mode):\n        \"\"\"Preprocesses a Numpy array encoding a batch of images.\n    \n        # Arguments\n            x: Input array, 3D or 4D.\n            data_format: Data format of the image array.\n            mode: One of \"caffe\", \"tf\" or \"torch\".\n                - caffe: will convert the images from RGB to BGR,\n                    then will zero-center each color channel with\n                    respect to the ImageNet dataset,\n                    without scaling.\n                - tf: will scale pixels between -1 and 1,\n                    sample-wise.\n                - torch: will scale pixels between 0 and 1 and then\n                    will normalize each channel with respect to the\n                    ImageNet dataset.\n    \n        # Returns\n            Preprocessed Numpy array.\n        \"\"\"\n        if mode == 'tf':\n            x /= 127.5\n            x -= 1.\n            return x\n    \n        if mode == 'torch':\n            x /= 255.\n            mean = [0.485, 0.456, 0.406]\n            std = [0.229, 0.224, 0.225]\n        else:\n            if data_format == 'channels_first':\n                # 'RGB'->'BGR'\n                if x.ndim == 3:\n                    x = x[::-1, ...]\n                else:\n                    x = x[:, ::-1, ...]\n            else:\n                # 'RGB'->'BGR'\n                x = x[..., ::-1]\n            mean = [103.939, 116.779, 123.68]\n            std = None\n    \n        # Zero-center by mean pixel\n        if data_format == 'channels_first':\n            if x.ndim == 3:\n                x[0, :, :] -= mean[0]\n                x[1, :, :] -= mean[1]\n                x[2, :, :] -= mean[2]\n                if std is not None:\n                    x[0, :, :] /= std[0]\n                    x[1, :, :] /= std[1]\n                    x[2, :, :] /= std[2]\n            else:\n                x[:, 0, :, :] -= mean[0]\n                x[:, 1, :, :] -= mean[1]\n                x[:, 2, :, :] -= mean[2]\n                if std is not None:\n                    x[:, 0, :, :] /= std[0]\n                    x[:, 1, :, :] /= std[1]\n                    x[:, 2, :, :] /= std[2]\n        else:\n>           x[..., 0] -= mean[0]\nE           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'\n\nkeras/applications/imagenet_utils.py:82: UFuncTypeError",
                "traceback": "keras/applications/imagenet_utils.py:178: in preprocess_input\n    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = array([[[[161, 121, 118],\n         [ 97, 139, 216],\n         [102,  59,  64],\n         [104,  90,  23],\n         [253,...         [230, 127,  57],\n         [ 35, 252,  83],\n         [224,  63, 228],\n         [136, 245,  32]]]], dtype=int32)\ndata_format = 'channels_last', mode = 'caffe'\n\n    def _preprocess_numpy_input(x, data_format, mode):\n        \"\"\"Preprocesses a Numpy array encoding a batch of images.\n    \n        # Arguments\n            x: Input array, 3D or 4D.\n            data_format: Data format of the image array.\n            mode: One of \"caffe\", \"tf\" or \"torch\".\n                - caffe: will convert the images from RGB to BGR,\n                    then will zero-center each color channel with\n                    respect to the ImageNet dataset,\n                    without scaling.\n                - tf: will scale pixels between -1 and 1,\n                    sample-wise.\n                - torch: will scale pixels between 0 and 1 and then\n                    will normalize each channel with respect to the\n                    ImageNet dataset.\n    \n        # Returns\n            Preprocessed Numpy array.\n        \"\"\"\n        if mode == 'tf':\n            x /= 127.5\n            x -= 1.\n            return x\n    \n        if mode == 'torch':\n            x /= 255.\n            mean = [0.485, 0.456, 0.406]\n            std = [0.229, 0.224, 0.225]\n        else:\n            if data_format == 'channels_first':\n                # 'RGB'->'BGR'\n                if x.ndim == 3:\n                    x = x[::-1, ...]\n                else:\n                    x = x[:, ::-1, ...]\n            else:\n                # 'RGB'->'BGR'\n                x = x[..., ::-1]\n            mean = [103.939, 116.779, 123.68]\n            std = None\n    \n        # Zero-center by mean pixel\n        if data_format == 'channels_first':\n            if x.ndim == 3:\n                x[0, :, :] -= mean[0]\n                x[1, :, :] -= mean[1]\n                x[2, :, :] -= mean[2]\n                if std is not None:\n                    x[0, :, :] /= std[0]\n                    x[1, :, :] /= std[1]\n                    x[2, :, :] /= std[2]\n            else:\n                x[:, 0, :, :] -= mean[0]\n                x[:, 1, :, :] -= mean[1]\n                x[:, 2, :, :] -= mean[2]\n                if std is not None:\n                    x[:, 0, :, :] /= std[0]\n                    x[:, 1, :, :] /= std[1]\n                    x[:, 2, :, :] /= std[2]\n        else:\n>           x[..., 0] -= mean[0]\nE           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'\n\nkeras/applications/imagenet_utils.py:82: UFuncTypeError",
                "test_function_decorators": []
            }
        ]
    }
}