{
    "keras:25": {
        "/Volumes/SSD2T/bgp_envs/repos/keras_25/keras/applications/imagenet_utils.py": {
            "buggy_functions": [
                {
                    "function_name": "_preprocess_numpy_input",
                    "function_code": "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        if x.ndim == 3:\n            x[0, :, :] -= mean[0]\n            x[1, :, :] -= mean[1]\n            x[2, :, :] -= mean[2]\n            if std is not None:\n                x[0, :, :] /= std[0]\n                x[1, :, :] /= std[1]\n                x[2, :, :] /= std[2]\n        else:\n            x[:, 0, :, :] -= mean[0]\n            x[:, 1, :, :] -= mean[1]\n            x[:, 2, :, :] -= mean[2]\n            if std is not None:\n                x[:, 0, :, :] /= std[0]\n                x[:, 1, :, :] /= std[1]\n                x[:, 2, :, :] /= std[2]\n    else:\n        x[..., 0] -= mean[0]\n        x[..., 1] -= mean[1]\n        x[..., 2] -= mean[2]\n        if std is not None:\n            x[..., 0] /= std[0]\n            x[..., 1] /= std[1]\n            x[..., 2] /= std[2]\n    return x\n",
                    "decorators": [],
                    "docstring": "Preprocesses a Numpy array encoding a batch of images.\n\n# Arguments\n    x: Input array, 3D or 4D.\n    data_format: Data format of the image array.\n    mode: One of \"caffe\", \"tf\" or \"torch\".\n        - caffe: will convert the images from RGB to BGR,\n            then will zero-center each color channel with\n            respect to the ImageNet dataset,\n            without scaling.\n        - tf: will scale pixels between -1 and 1,\n            sample-wise.\n        - torch: will scale pixels between 0 and 1 and then\n            will normalize each channel with respect to the\n            ImageNet dataset.\n\n# Returns\n    Preprocessed Numpy array.",
                    "start_line": 21,
                    "end_line": 89,
                    "variables": {
                        "mode": [
                            41,
                            46
                        ],
                        "x": [
                            42,
                            43,
                            44,
                            47,
                            53,
                            54,
                            56,
                            59,
                            65,
                            66,
                            67,
                            68,
                            70,
                            71,
                            72,
                            74,
                            75,
                            76,
                            78,
                            79,
                            80,
                            82,
                            83,
                            84,
                            86,
                            87,
                            88,
                            89
                        ],
                        "mean": [
                            66,
                            67,
                            68,
                            74,
                            75,
                            76,
                            48,
                            82,
                            83,
                            84,
                            60
                        ],
                        "std": [
                            69,
                            70,
                            71,
                            72,
                            77,
                            78,
                            79,
                            80,
                            49,
                            85,
                            86,
                            87,
                            88,
                            61
                        ],
                        "data_format": [
                            64,
                            51
                        ],
                        "x.ndim": [
                            65,
                            53
                        ]
                    },
                    "filtered_variables": {
                        "mode": [
                            41,
                            46
                        ],
                        "x": [
                            42,
                            43,
                            44,
                            47,
                            53,
                            54,
                            56,
                            59,
                            65,
                            66,
                            67,
                            68,
                            70,
                            71,
                            72,
                            74,
                            75,
                            76,
                            78,
                            79,
                            80,
                            82,
                            83,
                            84,
                            86,
                            87,
                            88,
                            89
                        ],
                        "mean": [
                            66,
                            67,
                            68,
                            74,
                            75,
                            76,
                            48,
                            82,
                            83,
                            84,
                            60
                        ],
                        "std": [
                            69,
                            70,
                            71,
                            72,
                            77,
                            78,
                            79,
                            80,
                            49,
                            85,
                            86,
                            87,
                            88,
                            61
                        ],
                        "data_format": [
                            64,
                            51
                        ],
                        "x.ndim": [
                            65,
                            53
                        ]
                    },
                    "diff_line_number": 40,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "x": {
                                    "variable_value": "array([[[[214.43388455, 109.92895984,  68.31418317],\n         [  8.0519725 , 157.53081573, 164.0110123 ],\n         [154.7638494 , 138.11675232, 147.32041061],\n         [ 36.30466548, 137.29712281,  39.31778757],\n         [ 65.60874647,  92.72113148,  96.97715497],\n         [223.33461516, 175.79078398,  56.48245804],\n         [ 89.73025132, 182.99129498, 106.29483715],\n         [ 60.3526376 , 193.42048929,  35.02197167],\n         [ 49.83124538,  98.17820163, 106.12624333],\n         [188.90964039, 238.15097472,  88.10419082]],\n\n        [[222.08726566, 156.07033664,  70.34902583],\n         [ 30.56030271,  43.95450191,  11.85700177],\n         [ 45.59435142, 137.51515141, 153.73136863],\n         [169.16905369, 229.82763503, 138.56975288],\n         [119.12494935,  97.43716512, 167.06651333],\n         [173.26586512, 101.31265077, 241.24917321],\n         [ 60.97791433,  41.79548478, 247.3935072 ],\n         [184.4803448 ,  22.55568688,   5.35982146],\n         [ 89.0989237 , 130.30782078,   1.51716886],\n         [141.52813282,  51.62239992,  30.61085085]],\n\n        [[113.16766693, 219.84122403, 158.08066722],\n         [215.37148926, 194.90063083, 175.72821285],\n         [244.59049401, 219.8533197 , 235.84066441],\n         [ 61.05049452, 161.26407047, 150.50256123],\n         [ 55.54058911, 147.74618534, 224.26686009],\n         [ 38.4079058 , 139.91229018, 164.15932489],\n         [ 57.15715827, 158.32481499,  49.64348195],\n         [122.68626389,  21.00761108,  23.94067113],\n         [  6.76698057, 230.29551678,  30.60972059],\n         [145.62487215, 194.5789422 , 252.41961814]],\n\n        [[228.28314765, 217.51958354, 172.82529832],\n         [ 93.22014649,  76.73552407, 186.8668428 ],\n         [122.7974262 , 159.63802981, 218.00113938],\n         [ 94.05927316,   5.32316901,  82.24353793],\n         [ 53.30421798,  17.20413312,  91.78150289],\n         [180.72094722, 230.39312832, 200.11319959],\n         [205.64656182,  39.27202057,  91.3090363 ],\n         [ 70.85138482, 219.42628573,  45.75176122],\n         [166.54850473, 197.6105722 , 222.07736722],\n         [227.53195838, 100.46054314, 220.02874436]],\n\n        [[ 23.64590525,  84.30364596,  45.80573713],\n         [107.33244219, 115.47976072, 149.9819936 ],\n         [166.38005676, 207.99678992, 101.12038512],\n         [135.10332094, 212.7457537 , 250.0470021 ],\n         [  1.03191151, 143.33768617, 249.37418258],\n         [253.67037966, 131.95957992, 176.74892762],\n         [251.6831971 ,  11.23609215,  12.24523943],\n         [129.39025142, 226.08626241,  40.95690873],\n         [171.8250656 ,  88.86123392,   3.05889562],\n         [165.08510369,  69.00780788,  71.63352305]],\n\n        [[197.29708088,  67.6389304 ,  51.88753609],\n         [226.64029113,  55.2352906 ,  26.96329241],\n         [181.31306867, 132.13426918, 172.14763585],\n         [198.66790987, 115.57634132,  52.23025828],\n         [ 75.39538452, 245.2820305 , 143.52345566],\n         [ 23.68557386, 173.43853707, 244.75374385],\n         [ 36.22436684,  17.57007092,   4.43362702],\n         [247.38342412, 151.9232357 , 115.51710595],\n         [ 87.94459696,  13.81865417, 208.89361911],\n         [245.23466931, 243.82473608, 112.02032561]],\n\n        [[126.63821329, 148.80134227, 216.12575254],\n         [ 57.43535277, 106.7207322 , 108.56245025],\n         [ 32.47088895,  21.54768201, 144.60260598],\n         [220.64633345, 176.76224582, 196.79850294],\n         [ 19.60441534,  40.53617027, 230.58304244],\n         [130.06967983, 127.25284677, 191.81936964],\n         [174.23219444,  95.3496601 ,  75.75943512],\n         [170.98904048, 152.22046529, 185.53280037],\n         [159.66917136,  67.80603078, 127.48318963],\n         [ 52.20985899, 176.14999882, 167.89953027]],\n\n        [[ 53.20461485, 114.52573858, 126.14828631],\n         [182.0862885 ,  94.90076915, 152.38774245],\n         [ 10.65355488, 117.28529042, 160.61225049],\n         [195.15075331,  73.23284604, 177.23599836],\n         [182.30258209, 190.88740089, 202.75112388],\n         [  6.71651211,  81.06038617, 252.68321149],\n         [121.31628761,  18.78990897, 131.70686211],\n         [199.37352867, 112.24420837, 201.84706374],\n         [226.0766616 ,  63.39661076, 243.27385096],\n         [208.49814581,  27.29555817, 115.09996939]],\n\n        [[106.35776935,  30.64468749,   3.80630893],\n         [223.68607301,   0.62453442, 244.75270891],\n         [235.01295185,  39.03430517, 179.2670543 ],\n         [180.84976994,  91.83339122,  49.80169409],\n         [125.04672822,  81.99239624, 156.54942069],\n         [197.89643607, 205.99580502, 116.6670578 ],\n         [ 83.32991421, 253.77477134, 114.12016092],\n         [ 44.92433524, 174.66307999,  91.02757693],\n         [174.34209489, 231.15115105, 148.54555097],\n         [ 37.62262795, 134.7688673 , 173.16922731]],\n\n        [[161.7191953 ,  22.64573834,  72.11916771],\n         [224.92423624, 215.36307437, 127.95844533],\n         [239.29236196,  97.56775728, 131.35485231],\n         [232.88469318,  29.00016696, 178.77068187],\n         [254.79592826,  44.1881677 , 178.40284217],\n         [ 27.23229413, 231.729318  ,  41.49957877],\n         [124.62976674, 214.33351119, 175.25629804],\n         [ 88.54361938,   4.68510401,  17.08908055],\n         [ 93.76719712, 197.88043589,  80.16179944],\n         [146.16827374, 147.31922733,   4.13627571]]],\n\n\n       [[[ 43.06694823, 198.83148626,   5.71985163],\n         [ 61.87770757,  42.81371423, 228.01862942],\n         [141.84879129, 158.86884914, 187.25825991],\n         [ 35.53063601,  24.56454341,  46.77587739],\n         [106.36817786,  95.03479402, 144.48376794],\n         [247.70207342,  46.1884406 , 250.70659966],\n         [  7.13044299,   1.19397595, 119.90990931],\n         [193.27199835, 117.31657286, 229.50899407],\n         [ 40.28286301, 236.97075332, 253.08836677],\n         [236.98821231,  40.66320576, 193.49314093]],\n\n        [[196.31397665, 176.102683  , 239.42038287],\n         [ 31.00534634,  23.69186791, 185.20038077],\n         [ 72.44072942, 192.17799769, 145.8942398 ],\n         [100.36287905, 126.3502241 ,  31.63440429],\n         [123.74627444, 197.32833716, 162.29989347],\n         [179.04725081,  14.1868809 ,  28.16334352],\n         [197.13092095, 155.60331263,  95.18077184],\n         [166.90983495,  10.93548488,  51.59946778],\n         [177.27302811, 147.07973646,   8.87276175],\n         [ 95.83016791,  23.98954997, 170.98853558]],\n\n        [[121.1169735 ,  23.41579875, 161.31256518],\n         [ 82.16979369,  40.43478256,  13.84202674],\n         [ 94.03516385,  44.49290467, 220.68136832],\n         [215.02602918, 134.26598398, 229.34052691],\n         [238.2931065 ,  90.15856142, 146.07228285],\n         [112.75068754, 205.48528904, 225.37240875],\n         [147.05116278, 234.64192365,  21.77601286],\n         [143.27167009, 151.16525255, 232.96141559],\n         [237.21696207, 102.71804487,   7.16468599],\n         [196.09661501,  32.0241098 ,   5.35216035]],\n\n        [[ 74.28160304,  53.06586966, 171.83542039],\n         [  3.19072965,  56.17770317,   5.75690232],\n         [101.36536528, 195.14299139, 112.71591861],\n         [130.96865369, 241.99330758, 123.98605042],\n         [ 89.44119085,  40.58401396, 204.78629928],\n         [245.53372317,  67.58918719,  52.34709827],\n         [ 51.35853716, 100.91122406, 146.23125562],\n         [ 95.75761241, 249.36032399,  84.15301292],\n         [127.29455623,  91.60500785,  77.73914705],\n         [205.67820129,  88.10736733, 163.85604821]],\n\n        [[ 56.27821983,  18.28918504, 236.66202236],\n         [ 76.52386269,  11.71656888,  37.90138639],\n         [199.58633138, 209.93979419, 218.64039149],\n         [ 33.97452824,  52.98971314, 165.08918213],\n         [183.02448468, 138.88960313,  29.98602321],\n         [ 91.81153864, 152.50283547,  49.06496472],\n         [140.25445508,  72.74443744, 158.68039121],\n         [102.67648439, 167.42747428, 181.84003546],\n         [ 18.92221295, 197.23959363,  85.51091166],\n         [122.94485189, 102.15031979,  26.22107711]],\n\n        [[172.96176268, 116.46471247, 208.39569227],\n         [171.07989942,  35.38289486, 152.449475  ],\n         [  1.54071538,  30.23565765,  82.392663  ],\n         [ 86.01875473,   3.69587308, 239.35269106],\n         [ 54.65510609,  96.00401856, 154.98007066],\n         [193.11016123,   5.9281705 , 155.47718347],\n         [132.11551344, 176.70676892,   7.9043034 ],\n         [ 86.16272601,  83.11430212,  28.67939193],\n         [ 44.14254098,  64.25076905,  69.98253951],\n         [199.23710332, 141.76981908, 138.32528674]],\n\n        [[107.32818799, 212.15298193,  17.44772631],\n         [166.3043536 , 216.12833745, 103.99568538],\n         [109.797873  , 132.95595492, 188.3485995 ],\n         [188.05172385,  44.58425629,   8.67908888],\n         [227.38782974,  67.77983511, 139.54635838],\n         [165.59938806, 116.34597971, 139.03654031],\n         [ 44.36977363, 200.35427377,  85.17757833],\n         [ 17.17199099,  98.60221112, 128.77414938],\n         [137.40537508, 147.28829046, 225.76971345],\n         [ 80.3896279 , 195.33980523,   2.04778781]],\n\n        [[ 62.91439073, 127.58540985, 187.77696971],\n         [ 56.36162089, 194.0900596 ,  16.21832174],\n         [145.55707192,  83.35277347,  64.62051995],\n         [130.84430503, 207.53716521,   8.56603029],\n         [246.45729758,  95.07139639, 115.69539724],\n         [ 88.47575538,  76.95343433, 170.41549806],\n         [ 49.73879606, 144.87625802,  40.67211437],\n         [159.6201564 , 228.55064939,  38.93676339],\n         [143.08918003, 105.4109016 ,  39.2489285 ],\n         [186.19788541,  24.60972676,  13.33351331]],\n\n        [[ 24.14272834,  95.77399709, 108.04035204],\n         [100.49997064,  18.36467167, 120.69494116],\n         [ 49.38582783, 210.51053462,  34.70331196],\n         [ 51.50763162,  88.18232219, 242.74659382],\n         [138.67685742, 117.19355404,  65.6415166 ],\n         [ 44.3232918 ,  81.71252242,  26.27003373],\n         [110.51034113,  98.86835799, 172.21967437],\n         [ 85.37907969,  81.80504603,  26.32810722],\n         [175.14556157, 133.4499506 , 148.67546074],\n         [169.95967827, 103.54115529,  47.66249802]],\n\n        [[ 52.46318853,  50.37288303,  57.40197136],\n         [143.19437932, 214.67948954, 182.27829255],\n         [152.79110878, 251.68920086, 201.40335645],\n         [ 60.94460525, 247.11923331,  98.96899766],\n         [  0.40287067,  69.42901751, 163.32479057],\n         [ 73.19067375, 119.1102556 , 112.23182512],\n         [136.22566035, 225.45532757, 129.69288838],\n         [ 12.16378592, 150.16587682, 132.75532179],\n         [ 23.1011103 ,  94.59000499,  25.51126063],\n         [ 44.74378457,  35.5510514 , 226.18179964]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "x": {
                                    "variable_value": "array([[[[-3.56248168e+01, -6.85004016e+00,  9.07538845e+01],\n         [ 6.00720123e+01,  4.07518157e+01, -1.15628027e+02],\n         [ 4.33814106e+01,  2.13377523e+01,  3.10838494e+01],\n         [-6.46212124e+01,  2.05181228e+01, -8.73753345e+01],\n         [-6.96184503e+00, -2.40578685e+01, -5.80712535e+01],\n         [-4.74565420e+01,  5.90117840e+01,  9.96546152e+01],\n         [ 2.35583715e+00,  6.62122950e+01, -3.39497487e+01],\n         [-6.89170283e+01,  7.66414893e+01, -6.33273624e+01],\n         [ 2.18724333e+00, -1.86007984e+01, -7.38487546e+01],\n         [-1.58348092e+01,  1.21371975e+02,  6.52296404e+01]],\n\n        [[-3.35899742e+01,  3.92913366e+01,  9.84072657e+01],\n         [-9.20819982e+01, -7.28244981e+01, -9.31196973e+01],\n         [ 4.97923686e+01,  2.07361514e+01, -7.80856486e+01],\n         [ 3.46307529e+01,  1.13048635e+02,  4.54890537e+01],\n         [ 6.31275133e+01, -1.93418349e+01, -4.55505065e+00],\n         [ 1.37310173e+02, -1.54663492e+01,  4.95858651e+01],\n         [ 1.43454507e+02, -7.49835152e+01, -6.27020857e+01],\n         [-9.85791785e+01, -9.42233131e+01,  6.08003448e+01],\n         [-1.02421831e+02,  1.35288208e+01, -3.45810763e+01],\n         [-7.33281492e+01, -6.51566001e+01,  1.78481328e+01]],\n\n        [[ 5.41416672e+01,  1.03062224e+02, -1.05123331e+01],\n         [ 7.17892129e+01,  7.81216308e+01,  9.16914893e+01],\n         [ 1.31901664e+02,  1.03074320e+02,  1.20910494e+02],\n         [ 4.65635612e+01,  4.44850705e+01, -6.26295055e+01],\n         [ 1.20327860e+02,  3.09671853e+01, -6.81394109e+01],\n         [ 6.02203249e+01,  2.31332902e+01, -8.52720942e+01],\n         [-5.42955181e+01,  4.15458150e+01, -6.65228417e+01],\n         [-7.99983289e+01, -9.57713889e+01, -9.93736112e-01],\n         [-7.33292794e+01,  1.13516517e+02, -1.16913019e+02],\n         [ 1.48480618e+02,  7.77999422e+01,  2.19448721e+01]],\n\n        [[ 6.88862983e+01,  1.00740584e+02,  1.04603148e+02],\n         [ 8.29278428e+01, -4.00434759e+01, -3.04598535e+01],\n         [ 1.14062139e+02,  4.28590298e+01, -8.82573800e-01],\n         [-2.16954621e+01, -1.11455831e+02, -2.96207268e+01],\n         [-1.21574971e+01, -9.95748669e+01, -7.03757820e+01],\n         [ 9.61741996e+01,  1.13614128e+02,  5.70409472e+01],\n         [-1.26299637e+01, -7.75069794e+01,  8.19665618e+01],\n         [-5.81872388e+01,  1.02647286e+02, -5.28286152e+01],\n         [ 1.18138367e+02,  8.08315722e+01,  4.28685047e+01],\n         [ 1.16089744e+02, -1.63184569e+01,  1.03851958e+02]],\n\n        [[-5.81332629e+01, -3.24753540e+01, -1.00034095e+02],\n         [ 4.60429936e+01, -1.29923928e+00, -1.63475578e+01],\n         [-2.81861488e+00,  9.12177899e+01,  4.27000568e+01],\n         [ 1.46108002e+02,  9.59667537e+01,  1.14233209e+01],\n         [ 1.45435183e+02,  2.65586862e+01, -1.22648088e+02],\n         [ 7.28099276e+01,  1.51805799e+01,  1.29990380e+02],\n         [-9.16937606e+01, -1.05542908e+02,  1.28003197e+02],\n         [-6.29820913e+01,  1.09307262e+02,  5.71025142e+00],\n         [-1.00880104e+02, -2.79177661e+01,  4.81450656e+01],\n         [-3.23054769e+01, -4.77711921e+01,  4.14051037e+01]],\n\n        [[-5.20514639e+01, -4.91400696e+01,  7.36170809e+01],\n         [-7.69757076e+01, -6.15437094e+01,  1.02960291e+02],\n         [ 6.82086359e+01,  1.53552692e+01,  5.76330687e+01],\n         [-5.17087417e+01, -1.20265868e+00,  7.49879099e+01],\n         [ 3.95844557e+01,  1.28503031e+02, -4.82846155e+01],\n         [ 1.40814744e+02,  5.66595371e+01, -9.99944261e+01],\n         [-9.95053730e+01, -9.92089291e+01, -8.74556332e+01],\n         [ 1.15781059e+01,  3.51442357e+01,  1.23703424e+02],\n         [ 1.04954619e+02, -1.02960346e+02, -3.57354030e+01],\n         [ 8.08132561e+00,  1.27045736e+02,  1.21554669e+02]],\n\n        [[ 1.12186753e+02,  3.20223423e+01,  2.95821329e+00],\n         [ 4.62345025e+00, -1.00582678e+01, -6.62446472e+01],\n         [ 4.06636060e+01, -9.52313180e+01, -9.12091111e+01],\n         [ 9.28595029e+01,  5.99832458e+01,  9.69663334e+01],\n         [ 1.26644042e+02, -7.62428297e+01, -1.04075585e+02],\n         [ 8.78803696e+01,  1.04738468e+01,  6.38967983e+00],\n         [-2.81795649e+01, -2.14293399e+01,  5.05521944e+01],\n         [ 8.15938004e+01,  3.54414653e+01,  4.73090405e+01],\n         [ 2.35441896e+01, -4.89729692e+01,  3.59891714e+01],\n         [ 6.39605303e+01,  5.93709988e+01, -7.14701410e+01]],\n\n        [[ 2.22092863e+01, -2.25326142e+00, -7.04753851e+01],\n         [ 4.84487424e+01, -2.18782308e+01,  5.84062885e+01],\n         [ 5.66732505e+01,  5.06290416e-01, -1.13026445e+02],\n         [ 7.32969984e+01, -4.35461540e+01,  7.14707533e+01],\n         [ 9.88121239e+01,  7.41084009e+01,  5.86225821e+01],\n         [ 1.48744211e+02, -3.57186138e+01, -1.16963488e+02],\n         [ 2.77678621e+01, -9.79890910e+01, -2.36371239e+00],\n         [ 9.79080637e+01, -4.53479163e+00,  7.56935287e+01],\n         [ 1.39334851e+02, -5.33823892e+01,  1.02396662e+02],\n         [ 1.11609694e+01, -8.94834418e+01,  8.48181458e+01]],\n\n        [[-1.00132691e+02, -8.61343125e+01, -1.73222306e+01],\n         [ 1.40813709e+02, -1.16154466e+02,  1.00006073e+02],\n         [ 7.53280543e+01, -7.77446948e+01,  1.11332952e+02],\n         [-5.41373059e+01, -2.49456088e+01,  5.71697699e+01],\n         [ 5.26104207e+01, -3.47866038e+01,  1.36672822e+00],\n         [ 1.27280578e+01,  8.92168050e+01,  7.42164361e+01],\n         [ 1.01811609e+01,  1.36995771e+02, -4.03500858e+01],\n         [-1.29114231e+01,  5.78840800e+01, -7.87556648e+01],\n         [ 4.46065510e+01,  1.14372151e+02,  5.06620949e+01],\n         [ 6.92302273e+01,  1.79898673e+01, -8.60573720e+01]],\n\n        [[-3.18198323e+01, -9.41332617e+01,  3.80391953e+01],\n         [ 2.40194453e+01,  9.85840744e+01,  1.01244236e+02],\n         [ 2.74158523e+01, -1.92112427e+01,  1.15612362e+02],\n         [ 7.48316819e+01, -8.77788330e+01,  1.09204693e+02],\n         [ 7.44638422e+01, -7.25908323e+01,  1.31115928e+02],\n         [-6.24394212e+01,  1.14950318e+02, -9.64477059e+01],\n         [ 7.13172980e+01,  9.75545112e+01,  9.49766736e-01],\n         [-8.68499194e+01, -1.12093896e+02, -3.51363806e+01],\n         [-2.37772006e+01,  8.11014359e+01, -2.99128029e+01],\n         [-9.98027243e+01,  3.05402273e+01,  2.24882737e+01]]],\n\n\n       [[[-9.82191484e+01,  8.20524863e+01, -8.06130518e+01],\n         [ 1.24079629e+02, -7.39652858e+01, -6.18022924e+01],\n         [ 8.33192599e+01,  4.20898491e+01,  1.81687913e+01],\n         [-5.71631226e+01, -9.22144566e+01, -8.81493640e+01],\n         [ 4.05447679e+01, -2.17442060e+01, -1.73118221e+01],\n         [ 1.46767600e+02, -7.05905594e+01,  1.24022073e+02],\n         [ 1.59709093e+01, -1.15585024e+02, -1.16549557e+02],\n         [ 1.25569994e+02,  5.37572864e-01,  6.95919984e+01],\n         [ 1.49149367e+02,  1.20191753e+02, -8.33971370e+01],\n         [ 8.95541409e+01, -7.61157942e+01,  1.13308212e+02]],\n\n        [[ 1.35481383e+02,  5.93236830e+01,  7.26339766e+01],\n         [ 8.12613808e+01, -9.30871321e+01, -9.26746537e+01],\n         [ 4.19552398e+01,  7.53989977e+01, -5.12392706e+01],\n         [-7.23045957e+01,  9.57122410e+00, -2.33171210e+01],\n         [ 5.83608935e+01,  8.05493372e+01,  6.62744448e-02],\n         [-7.57756565e+01, -1.02592119e+02,  5.53672508e+01],\n         [-8.75822816e+00,  3.88243126e+01,  7.34509210e+01],\n         [-5.23395322e+01, -1.05843515e+02,  4.32298349e+01],\n         [-9.50662382e+01,  3.03007365e+01,  5.35930281e+01],\n         [ 6.70495356e+01, -9.27894500e+01, -2.78498321e+01]],\n\n        [[ 5.73735652e+01, -9.33632013e+01, -2.56302650e+00],\n         [-9.00969733e+01, -7.63442174e+01, -4.15102063e+01],\n         [ 1.16742368e+02, -7.22860953e+01, -2.96448362e+01],\n         [ 1.25401527e+02,  1.74869840e+01,  9.13460292e+01],\n         [ 4.21332828e+01, -2.66204386e+01,  1.14613106e+02],\n         [ 1.21433409e+02,  8.87062890e+01, -1.09293125e+01],\n         [-8.21629871e+01,  1.17862924e+02,  2.33711628e+01],\n         [ 1.29022416e+02,  3.43862525e+01,  1.95916701e+01],\n         [-9.67743140e+01, -1.40609551e+01,  1.13536962e+02],\n         [-9.85868396e+01, -8.47548902e+01,  7.24166150e+01]],\n\n        [[ 6.78964204e+01, -6.37131303e+01, -4.93983970e+01],\n         [-9.81820977e+01, -6.06012968e+01, -1.20489270e+02],\n         [ 8.77691861e+00,  7.83639914e+01, -2.23146347e+01],\n         [ 2.00470504e+01,  1.25214308e+02,  7.28865369e+00],\n         [ 1.00847299e+02, -7.61949860e+01, -3.42388092e+01],\n         [-5.15919017e+01, -4.91898128e+01,  1.21853723e+02],\n         [ 4.22922556e+01, -1.58677759e+01, -7.23214628e+01],\n         [-1.97859871e+01,  1.32581324e+02, -2.79223876e+01],\n         [-2.61998530e+01, -2.51739921e+01,  3.61455623e+00],\n         [ 5.99170482e+01, -2.86716327e+01,  8.19982013e+01]],\n\n        [[ 1.32723022e+02, -9.84898150e+01, -6.74017802e+01],\n         [-6.60376136e+01, -1.05062431e+02, -4.71561373e+01],\n         [ 1.14701391e+02,  9.31607942e+01,  7.59063314e+01],\n         [ 6.11501821e+01, -6.37892869e+01, -8.97054718e+01],\n         [-7.39529768e+01,  2.21106031e+01,  5.93444847e+01],\n         [-5.48740353e+01,  3.57238355e+01, -3.18684614e+01],\n         [ 5.47413912e+01, -4.40345626e+01,  1.65744551e+01],\n         [ 7.79010355e+01,  5.06484743e+01, -2.10035156e+01],\n         [-1.84280883e+01,  8.04605936e+01, -1.04757787e+02],\n         [-7.77179229e+01, -1.46286802e+01, -7.35148112e-01]],\n\n        [[ 1.04456692e+02, -3.14287527e-01,  4.92817627e+01],\n         [ 4.85104750e+01, -8.13961051e+01,  4.73998994e+01],\n         [-2.15463370e+01, -8.65433424e+01, -1.22139285e+02],\n         [ 1.35413691e+02, -1.13083127e+02, -3.76612453e+01],\n         [ 5.10410707e+01, -2.07749814e+01, -6.90248939e+01],\n         [ 5.15381835e+01, -1.10850830e+02,  6.94301612e+01],\n         [-9.60346966e+01,  5.99277689e+01,  8.43551344e+00],\n         [-7.52596081e+01, -3.36646979e+01, -3.75172740e+01],\n         [-3.39564605e+01, -5.25282310e+01, -7.95374590e+01],\n         [ 3.43862867e+01,  2.49908191e+01,  7.55571033e+01]],\n\n        [[-8.64912737e+01,  9.53739819e+01, -1.63518120e+01],\n         [ 5.66853824e-02,  9.93493375e+01,  4.26243536e+01],\n         [ 8.44095995e+01,  1.61769549e+01, -1.38821270e+01],\n         [-9.52599111e+01, -7.21947437e+01,  6.43717238e+01],\n         [ 3.56073584e+01, -4.89991649e+01,  1.03707830e+02],\n         [ 3.50975403e+01, -4.33020291e-01,  4.19193881e+01],\n         [-1.87614217e+01,  8.35752738e+01, -7.93102264e+01],\n         [ 2.48351494e+01, -1.81767889e+01, -1.06508009e+02],\n         [ 1.21830713e+02,  3.05092905e+01,  1.37253751e+01],\n         [-1.01891212e+02,  7.85608052e+01, -4.32903721e+01]],\n\n        [[ 8.38379697e+01,  1.08064098e+01, -6.07656093e+01],\n         [-8.77206783e+01,  7.73110596e+01, -6.73183791e+01],\n         [-3.93184801e+01, -3.34262265e+01,  2.18770719e+01],\n         [-9.53729697e+01,  9.07581652e+01,  7.16430503e+00],\n         [ 1.17563972e+01, -2.17076036e+01,  1.22777298e+02],\n         [ 6.64764981e+01, -3.98255657e+01, -3.52042446e+01],\n         [-6.32668856e+01,  2.80972580e+01, -7.39412039e+01],\n         [-6.50022366e+01,  1.11771649e+02,  3.59401564e+01],\n         [-6.46900715e+01, -1.13680984e+01,  1.94091800e+01],\n         [-9.06054867e+01, -9.21692732e+01,  6.25178854e+01]],\n\n        [[ 4.10135204e+00, -2.10050029e+01, -9.95372717e+01],\n         [ 1.67559412e+01, -9.84143283e+01, -2.31800294e+01],\n         [-6.92356880e+01,  9.37315346e+01, -7.42941722e+01],\n         [ 1.38807594e+02, -2.85966778e+01, -7.21723684e+01],\n         [-3.82974834e+01,  4.14554042e-01,  1.49968574e+01],\n         [-7.76689663e+01, -3.50664776e+01, -7.93567082e+01],\n         [ 6.82806744e+01, -1.79106420e+01, -1.31696589e+01],\n         [-7.76108928e+01, -3.49739540e+01, -3.83009203e+01],\n         [ 4.47364607e+01,  1.66709506e+01,  5.14655616e+01],\n         [-5.62765020e+01, -1.32378447e+01,  4.62796783e+01]],\n\n        [[-4.65370286e+01, -6.64061170e+01, -7.12168115e+01],\n         [ 7.83392925e+01,  9.79004895e+01,  1.95143793e+01],\n         [ 9.74643564e+01,  1.34910201e+02,  2.91111088e+01],\n         [-4.97000234e+00,  1.30340233e+02, -6.27353947e+01],\n         [ 5.93857906e+01, -4.73499825e+01, -1.23277129e+02],\n         [ 8.29282512e+00,  2.33125560e+00, -5.04893262e+01],\n         [ 2.57538884e+01,  1.08676328e+02,  1.25456603e+01],\n         [ 2.88163218e+01,  3.33868768e+01, -1.11516214e+02],\n         [-7.84277394e+01, -2.21889950e+01, -1.00578890e+02],\n         [ 1.22242800e+02, -8.12279486e+01, -7.89362154e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[3.20198849e+01, 2.52353826e+02, 2.82751718e+01],\n         [1.68880645e+02, 1.94225784e+02, 5.09713399e+01],\n         [9.44170725e+01, 2.14774919e+02, 1.95790467e+02],\n         [1.48851117e+02, 2.35636905e+02, 1.03969746e+01],\n         [1.87093979e+02, 6.96875127e+01, 4.53962801e+01],\n         [1.49321279e+02, 4.57196800e+01, 2.15469242e+02],\n         [5.44644447e+01, 5.04853897e+01, 2.48032760e+02],\n         [1.77466279e+02, 1.40450639e+02, 1.66697393e+02],\n         [1.32055632e+02, 2.13017744e+02, 7.19917886e+01],\n         [1.65160662e+01, 2.48307170e+02, 1.83990686e+02]],\n\n        [[1.31995213e+02, 9.31265178e+01, 1.71617276e+02],\n         [1.74089650e+02, 5.14481407e+01, 1.05191520e+02],\n         [1.93661990e+02, 2.93401668e+01, 1.41592535e+02],\n         [1.74495757e+01, 2.54777334e+02, 2.32647429e+02],\n         [6.93374555e+01, 6.72591597e+01, 3.51057182e+01],\n         [1.83775350e+01, 1.30577836e+02, 2.52179943e+02],\n         [1.14116192e+02, 2.53285208e+02, 2.48063668e+02],\n         [2.24438282e+02, 8.74539792e+01, 1.96742733e+02],\n         [1.54303025e+02, 6.46784774e+00, 1.56086951e+02],\n         [2.09300193e+02, 5.43220389e+01, 2.32408278e+01]],\n\n        [[1.00052435e+01, 1.81957757e+02, 1.63924694e+02],\n         [1.46264394e+02, 1.91264589e+02, 1.78587650e+02],\n         [1.18308764e+02, 1.12611995e+02, 1.25869876e+02],\n         [2.39597169e+02, 1.91130581e+02, 2.30587383e+02],\n         [8.22668968e+01, 4.12487164e+01, 7.45728060e+01],\n         [1.44787074e+02, 2.03319377e+02, 1.41935229e+02],\n         [8.05922976e+01, 8.65506720e+01, 1.70810369e+02],\n         [7.71494051e+01, 1.13661497e+02, 1.26778862e+02],\n         [6.61091985e+01, 1.81752449e+02, 1.14362917e+02],\n         [1.44003093e+02, 1.74805124e+02, 5.66817993e+00]],\n\n        [[7.01444940e+00, 7.74354605e+01, 1.88315159e+02],\n         [1.91871731e+02, 5.99115096e+01, 8.33475885e+01],\n         [1.41173468e+02, 2.20598478e+02, 1.26208591e+02],\n         [5.96978099e+01, 1.44299577e+02, 8.62226320e+01],\n         [2.41787468e+02, 9.68403991e+01, 1.51637355e+02],\n         [4.94823471e+00, 9.93978652e+00, 1.50444110e+02],\n         [1.22193037e+02, 4.57055013e+01, 4.87026235e+01],\n         [3.93813176e+01, 1.79019018e+02, 9.89608138e+01],\n         [6.27195694e+01, 1.87990712e+02, 1.88155653e+02],\n         [1.77392305e+02, 7.54463236e+01, 2.09750790e+02]],\n\n        [[1.93014831e+02, 1.63725423e+02, 1.69076774e+02],\n         [2.32820731e+02, 1.22285263e+02, 5.64051792e+01],\n         [1.68180893e+01, 2.40170910e+02, 5.05323306e+01],\n         [8.73731571e+01, 1.72252652e+02, 2.08207535e+02],\n         [1.44020237e+02, 2.35730425e+02, 8.57781757e+01],\n         [4.06444315e+01, 1.77680930e+02, 2.06663652e+02],\n         [1.96365712e+02, 2.60222433e+01, 1.31465650e+02],\n         [1.94361335e+02, 2.02998783e+02, 1.89615911e+02],\n         [9.43304206e+00, 1.44864807e+02, 7.73446016e+01],\n         [2.10369262e+02, 1.88086976e+01, 2.06165739e+02]],\n\n        [[1.34154460e+02, 1.12335084e+02, 2.03552595e+02],\n         [9.73658574e+01, 5.94213500e+01, 4.44816777e+01],\n         [1.48217107e+02, 2.46024996e+02, 1.31760370e+02],\n         [2.18112130e+02, 2.11462507e+02, 2.30797273e+02],\n         [1.25192370e+02, 2.12373391e+02, 1.92328867e+02],\n         [2.13981721e+02, 2.34387898e+02, 1.27483156e+02],\n         [1.50748158e+02, 2.21745728e+02, 1.55248635e+02],\n         [2.46758181e+02, 1.52199948e+02, 1.73745475e+02],\n         [2.13309118e+01, 5.68028396e+01, 9.46917087e+01],\n         [2.16975770e+02, 3.54980717e+01, 2.22888447e+02]],\n\n        [[1.63260771e+02, 1.65606194e+02, 2.44399210e+02],\n         [1.36369764e+02, 2.53624129e+02, 2.43436168e+02],\n         [1.87371765e+02, 1.87727167e+02, 2.50853015e+02],\n         [4.35350729e+01, 1.00389565e+01, 1.05942579e+02],\n         [1.23090628e+02, 2.03932524e+02, 2.51008912e+02],\n         [1.30641826e+02, 2.03381886e+02, 1.79270467e+02],\n         [1.59536718e+02, 2.18128674e+02, 1.25599500e+01],\n         [1.26417650e+02, 3.57905220e+01, 1.90553151e+01],\n         [9.75218658e+01, 5.82709864e+01, 6.08368061e+01],\n         [1.61219320e+02, 1.43836174e+02, 1.66071831e+02]],\n\n        [[1.25123988e+02, 6.58825136e+01, 1.82638402e+02],\n         [6.28461513e+01, 1.03941422e+02, 1.76827108e+01],\n         [1.79592854e+02, 1.11653178e+02, 1.41847855e+01],\n         [4.57734547e+01, 2.48174361e+01, 1.21141842e+02],\n         [2.33467948e+02, 1.62961223e+02, 2.12541320e+02],\n         [4.77166013e+01, 1.22780394e+02, 2.06831034e+02],\n         [7.48310659e+01, 1.88000093e+02, 9.08574356e-01],\n         [2.47115520e+02, 2.23777360e+02, 2.37256579e+02],\n         [4.08714146e+01, 2.48590882e+02, 1.36007925e+02],\n         [1.00334476e+02, 2.30993720e+02, 2.34453971e+02]],\n\n        [[2.45601046e+02, 1.70970767e+02, 2.09052851e+01],\n         [9.20576110e+01, 2.34533461e+02, 9.45036423e+01],\n         [8.39608213e+01, 2.70419493e+01, 1.41600247e+02],\n         [9.29916694e+01, 1.80078377e+02, 7.78204612e+01],\n         [1.99509692e+02, 1.05106135e+02, 1.34351174e+02],\n         [1.79510345e+02, 9.53828313e-01, 1.45151605e+02],\n         [1.67988092e+02, 2.53420569e+01, 2.42294824e+02],\n         [2.51395563e+02, 1.79571113e+02, 1.22601236e+02],\n         [8.17166935e+01, 7.08425104e+01, 1.83403501e+02],\n         [1.23522917e+02, 1.48214515e+02, 6.93267657e+01]],\n\n        [[8.42617976e+01, 3.27342565e+01, 1.28440826e+01],\n         [1.62658233e+02, 1.61418005e+02, 2.34785807e+02],\n         [5.19545155e+01, 1.00557928e+02, 7.40977572e+01],\n         [1.89534594e+02, 2.51488642e+02, 2.45420303e+02],\n         [2.39263852e+01, 2.06031067e+02, 1.37257767e+02],\n         [9.88518148e+01, 3.98370901e+01, 4.91497155e+01],\n         [2.20085636e+02, 1.75491069e+02, 1.24494994e+02],\n         [2.35521865e+02, 5.27846955e+01, 4.15056803e+01],\n         [7.97767688e+01, 9.90378246e+01, 1.89877646e+02],\n         [2.25028308e+02, 5.53603217e+01, 4.84446866e+01]]],\n\n\n       [[[6.47814240e+01, 3.19256133e+01, 7.40864651e+00],\n         [1.41039984e+02, 2.24838443e+02, 9.55391226e+01],\n         [1.70602200e+02, 5.77345838e+01, 1.93305918e+02],\n         [1.45989554e+02, 3.09389574e+01, 2.61830266e+01],\n         [2.16948093e+02, 8.66452437e+00, 2.27128165e+02],\n         [2.54225538e+02, 3.89132915e+01, 1.60145742e+01],\n         [1.32872488e+02, 1.91872018e+02, 2.50686787e+02],\n         [1.58829783e+02, 7.54780861e+01, 1.04016775e+02],\n         [5.01226537e+01, 1.45634179e+02, 1.19395521e+02],\n         [3.22876482e+01, 8.96027510e+01, 1.32444630e+02]],\n\n        [[1.07023250e+02, 1.27457996e+02, 6.13137167e+01],\n         [1.94486450e+02, 8.25245932e+01, 3.16868888e+01],\n         [4.97473827e+01, 1.91930338e+02, 2.49983810e+02],\n         [1.63036154e+02, 1.60249638e+02, 1.92569840e+02],\n         [3.16584213e+01, 1.76591954e+02, 6.40479015e+01],\n         [1.95366421e+02, 1.71951148e+02, 2.18146667e+02],\n         [7.27045342e+00, 2.41456967e+02, 2.49029980e+02],\n         [1.95812345e+02, 9.92276544e+01, 7.02411367e+01],\n         [2.31949063e+02, 1.21019514e+02, 1.22036182e+02],\n         [1.98465787e+02, 1.84379812e+02, 1.11119638e+02]],\n\n        [[8.27582985e+01, 9.99574332e+01, 1.24174118e+02],\n         [1.96109160e+02, 5.13547199e+01, 2.47594999e-01],\n         [1.34312049e+01, 5.19543531e+01, 2.50302497e+02],\n         [4.39220195e+01, 5.54783002e+01, 1.74540758e+02],\n         [2.40360419e+02, 8.17641567e+01, 1.92129811e+02],\n         [1.10472390e+01, 8.28289352e+01, 1.89014884e+02],\n         [2.26721196e+02, 6.21333676e+01, 1.87484945e+02],\n         [8.87279424e+01, 1.65527258e+02, 1.85350613e+02],\n         [3.14459276e+01, 1.94395269e+02, 1.45342808e+02],\n         [1.84992420e+01, 8.88556471e+01, 2.07765444e+02]],\n\n        [[4.34221969e+01, 1.78827443e+02, 2.36751438e+02],\n         [1.29623332e+02, 1.91157975e+02, 1.26583105e+02],\n         [1.29166113e+02, 5.03241490e+01, 6.45077705e+01],\n         [4.06394242e+01, 2.96582597e+01, 2.21756727e+02],\n         [2.22749026e+02, 7.28387735e+01, 1.27651803e+02],\n         [2.49780228e+02, 1.60199438e+02, 6.43796582e+01],\n         [6.46337953e+01, 1.15511357e+02, 1.71588481e+01],\n         [2.04415856e+02, 2.33401873e+02, 2.39220951e+02],\n         [1.02098323e+02, 1.99678857e+02, 6.34284118e-01],\n         [1.39006769e+02, 2.02078594e+02, 9.00664396e+01]],\n\n        [[2.25086526e+02, 5.57123418e+01, 1.02450884e+02],\n         [2.94474802e+01, 1.42020179e+02, 2.27652790e+02],\n         [4.93257306e+00, 2.64737451e+01, 1.11715324e+02],\n         [2.49529278e+02, 3.57627559e+01, 1.01415245e+02],\n         [2.92777975e+01, 1.26260418e+02, 5.89697716e+01],\n         [1.24777321e+02, 2.35978950e+02, 1.07821333e+02],\n         [3.84349149e+01, 2.17111287e+02, 6.98830852e+01],\n         [1.05189894e+02, 3.46115999e+01, 1.69522101e+02],\n         [1.12767181e+02, 1.18855203e+02, 2.77511439e+01],\n         [2.37188302e+01, 1.41598799e+02, 8.22899403e+00]],\n\n        [[6.22942415e+00, 1.29365009e+02, 1.38779269e+02],\n         [1.43430554e+01, 1.96170035e+02, 1.13674526e+01],\n         [7.17138275e+01, 1.52041277e+02, 2.51454899e+02],\n         [1.96571982e+02, 2.38632547e+02, 1.74857648e+02],\n         [2.54516478e+02, 1.17610224e+02, 1.72734712e+02],\n         [2.51272046e+02, 1.55279881e+02, 1.74161731e+02],\n         [6.06634721e+01, 1.40594592e+01, 7.84751215e+01],\n         [4.84046912e+01, 1.36181485e+02, 3.02641982e+01],\n         [1.62565550e+02, 1.65901072e+02, 1.16432285e+02],\n         [1.51686995e+02, 2.26041607e+02, 1.83188526e+02]],\n\n        [[9.77072729e+01, 1.53947127e+02, 1.24378784e+02],\n         [2.36439578e+02, 1.20849866e+02, 1.97922560e+02],\n         [2.20724728e+02, 1.57879570e+02, 2.47617000e+02],\n         [3.52556985e+01, 4.45224680e+01, 1.49226752e+02],\n         [2.18155948e+02, 2.12666576e+02, 7.90563017e+01],\n         [7.88032009e+01, 1.34827659e+01, 2.29280261e+02],\n         [2.37511579e+02, 1.08256058e+02, 4.33611048e+01],\n         [1.90971617e+01, 1.74447162e+02, 2.14045073e+02],\n         [1.13998785e+02, 2.15387564e+02, 8.03242968e+01],\n         [5.64646067e+01, 5.20335249e+01, 1.28170293e+02]],\n\n        [[1.66463195e+01, 1.08424834e+02, 2.36852277e+02],\n         [1.30133903e+02, 1.41315653e+01, 1.99891290e+02],\n         [1.95015184e+02, 2.31401854e+02, 2.39650288e+02],\n         [5.11110818e+01, 9.25965716e+01, 5.55383245e+01],\n         [1.18689851e+02, 2.28787239e+02, 2.24034857e+02],\n         [1.04499961e+01, 2.32850803e+02, 1.52420984e+02],\n         [1.71513172e+02, 1.94542737e+02, 1.42485399e+02],\n         [2.57759818e+01, 2.07885105e+02, 1.37465051e+01],\n         [1.44091870e+02, 1.06298455e+02, 9.34977737e+01],\n         [1.95986230e+02, 2.36525963e+02, 1.63731225e+02]],\n\n        [[2.07591294e+02, 8.36363063e+01, 1.68594351e+02],\n         [5.61926544e+01, 1.12436561e+02, 6.40775270e+01],\n         [1.97835351e+02, 1.02828116e+02, 1.31175465e+02],\n         [1.82443067e+02, 2.48634276e+02, 1.03701089e+02],\n         [8.81538507e+01, 9.38201026e+01, 3.93207074e+01],\n         [4.80082934e+01, 1.32178809e+02, 2.09087958e+02],\n         [3.03867768e+00, 1.13399300e+02, 1.47632785e+02],\n         [2.53935477e+02, 8.89187706e+01, 2.25409138e+02],\n         [7.55899190e+01, 1.45924611e+02, 1.71636267e+02],\n         [9.92339005e+01, 2.71661820e+01, 2.96631781e+01]],\n\n        [[1.73379541e+02, 1.23620538e+02, 7.27254796e+01],\n         [2.04453228e+02, 1.20989589e+02, 7.12307918e+01],\n         [1.22746371e+02, 5.81609084e+01, 1.33683039e+02],\n         [1.49733624e+02, 2.08409678e+02, 4.35714475e+01],\n         [1.27521618e+02, 2.00698882e+02, 5.92543563e+01],\n         [1.51125911e+02, 1.73095953e+02, 2.18775906e+02],\n         [2.06073146e+00, 1.25806925e+02, 1.91333278e+02],\n         [4.88391646e+01, 4.02773184e+01, 9.16124276e+01],\n         [4.21504355e+01, 1.75751296e+02, 7.96296489e+01],\n         [6.93142548e+00, 6.67222306e+01, 4.37157841e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cf86530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-7.56638336e+01,  1.35574829e+02, -9.16601105e+01],\n         [-5.29676628e+01,  7.74467850e+01,  4.52006454e+01],\n         [ 9.18514633e+01,  9.79959183e+01, -2.92629242e+01],\n         [-9.35420303e+01,  1.18857903e+02,  2.51711197e+01],\n         [-5.85427246e+01, -4.70914841e+01,  6.34139786e+01],\n         [ 1.11530235e+02, -7.10593185e+01,  2.56412735e+01],\n         [ 1.44093750e+02, -6.62936096e+01, -6.92155609e+01],\n         [ 6.27583847e+01,  2.36716385e+01,  5.37862778e+01],\n         [-3.19472122e+01,  9.62387466e+01,  8.37563324e+00],\n         [ 8.00516891e+01,  1.31528168e+02, -1.07163933e+02]],\n\n        [[ 6.76782761e+01, -2.36524811e+01,  8.31520844e+00],\n         [ 1.25251770e+00, -6.53308563e+01,  5.04096451e+01],\n         [ 3.76535263e+01, -8.74388351e+01,  6.99819870e+01],\n         [ 1.28708435e+02,  1.37998322e+02, -1.06230423e+02],\n         [-6.88332825e+01, -4.95198364e+01, -5.43425446e+01],\n         [ 1.48240936e+02,  1.37988358e+01, -1.05302467e+02],\n         [ 1.44124664e+02,  1.36506195e+02, -9.56380463e+00],\n         [ 9.28037338e+01, -2.93250198e+01,  1.00758278e+02],\n         [ 5.21479416e+01, -1.10311150e+02,  3.06230240e+01],\n         [-8.06981735e+01, -6.24569588e+01,  8.56201859e+01]],\n\n        [[ 5.99856949e+01,  6.51787643e+01, -1.13674759e+02],\n         [ 7.46486435e+01,  7.44855881e+01,  2.25843887e+01],\n         [ 2.19308701e+01, -4.16700745e+00, -5.37123871e+00],\n         [ 1.26648384e+02,  7.43515854e+01,  1.15917168e+02],\n         [-2.93661957e+01, -7.55302811e+01, -4.14131012e+01],\n         [ 3.79962234e+01,  8.65403824e+01,  2.11070786e+01],\n         [ 6.68713608e+01, -3.02283249e+01, -4.30876999e+01],\n         [ 2.28398590e+01, -3.11750031e+00, -4.65305939e+01],\n         [ 1.04239120e+01,  6.49734421e+01, -5.75708008e+01],\n         [-9.82708206e+01,  5.80261307e+01,  2.03230972e+01]],\n\n        [[ 8.43761520e+01, -3.93435364e+01, -1.16665550e+02],\n         [-2.05914154e+01, -5.68674889e+01,  6.81917343e+01],\n         [ 2.22695847e+01,  1.03819481e+02,  1.74934616e+01],\n         [-1.77163696e+01,  2.75205765e+01, -6.39821892e+01],\n         [ 4.76983566e+01, -1.99385986e+01,  1.18107460e+02],\n         [ 4.65051041e+01, -1.06839211e+02, -1.18731766e+02],\n         [-5.52363777e+01, -7.10735016e+01, -1.48696136e+00],\n         [-4.97818756e+00,  6.22400131e+01, -8.42986832e+01],\n         [ 8.42166519e+01,  7.12117081e+01, -6.09604301e+01],\n         [ 1.05811790e+02, -4.13326721e+01,  5.37123032e+01]],\n\n        [[ 6.51377640e+01,  4.69464188e+01,  6.93348312e+01],\n         [-4.75338249e+01,  5.50626373e+00,  1.09140724e+02],\n         [-5.34066734e+01,  1.23391914e+02, -1.06861908e+02],\n         [ 1.04268532e+02,  5.54736557e+01, -3.63068466e+01],\n         [-1.81608276e+01,  1.18951424e+02,  2.03402328e+01],\n         [ 1.02724648e+02,  6.09019241e+01, -8.30355682e+01],\n         [ 2.75266495e+01, -9.07567596e+01,  7.26857071e+01],\n         [ 8.56769028e+01,  8.62197800e+01,  7.06813278e+01],\n         [-2.65943985e+01,  2.80858078e+01, -1.14246956e+02],\n         [ 1.02226738e+02, -9.79703064e+01,  8.66892624e+01]],\n\n        [[ 9.96135941e+01, -4.44391632e+00,  1.04744644e+01],\n         [-5.94573250e+01, -5.73576508e+01, -2.63141403e+01],\n         [ 2.78213730e+01,  1.29246002e+02,  2.45371017e+01],\n         [ 1.26858269e+02,  9.46835098e+01,  9.44321365e+01],\n         [ 8.83898697e+01,  9.55943985e+01,  1.51236725e+00],\n         [ 2.35441513e+01,  1.17608894e+02,  9.03017197e+01],\n         [ 5.13096390e+01,  1.04966728e+02,  2.70681534e+01],\n         [ 6.98064651e+01,  3.54209518e+01,  1.23078178e+02],\n         [-9.24729156e+00, -5.99761581e+01, -1.02349091e+02],\n         [ 1.18949440e+02, -8.12809296e+01,  9.32957687e+01]],\n\n        [[ 1.40460205e+02,  4.88272018e+01,  3.95807724e+01],\n         [ 1.39497162e+02,  1.36845123e+02,  1.26897659e+01],\n         [ 1.46914001e+02,  7.09481735e+01,  6.36917648e+01],\n         [ 2.00357819e+00, -1.06740044e+02, -8.01449280e+01],\n         [ 1.47069916e+02,  8.71535263e+01, -5.89370728e-01],\n         [ 7.53314590e+01,  8.66028824e+01,  6.96183014e+00],\n         [-9.13790512e+01,  1.01349678e+02,  3.58567123e+01],\n         [-8.48836899e+01, -8.09884796e+01,  2.73764801e+00],\n         [-4.31021957e+01, -5.85080147e+01, -2.61581345e+01],\n         [ 6.21328354e+01,  2.70571671e+01,  3.75393143e+01]],\n\n        [[ 7.86993942e+01, -5.08964844e+01,  1.44398499e+00],\n         [-8.62562943e+01, -1.28375778e+01, -6.08338509e+01],\n         [-8.97542191e+01, -5.12582397e+00,  5.59128494e+01],\n         [ 1.72028427e+01, -9.19615631e+01, -7.79065399e+01],\n         [ 1.08602318e+02,  4.61822281e+01,  1.09787941e+02],\n         [ 1.02892036e+02,  6.00139618e+00, -7.59633942e+01],\n         [-1.03030426e+02,  7.12210922e+01, -4.88489380e+01],\n         [ 1.33317566e+02,  1.06998360e+02,  1.23435524e+02],\n         [ 3.20689163e+01,  1.31811890e+02, -8.28085861e+01],\n         [ 1.30514954e+02,  1.14214714e+02, -2.33455276e+01]],\n\n        [[-8.30337219e+01,  5.41917648e+01,  1.21921043e+02],\n         [-9.43536377e+00,  1.17754463e+02, -3.16223907e+01],\n         [ 3.76612473e+01, -8.97370453e+01, -3.97191772e+01],\n         [-2.61185455e+01,  6.32993851e+01, -3.06883316e+01],\n         [ 3.04121780e+01, -1.16728668e+01,  7.58296890e+01],\n         [ 4.12126083e+01, -1.15825172e+02,  5.58303452e+01],\n         [ 1.38355835e+02, -9.14369431e+01,  4.43080978e+01],\n         [ 1.86622314e+01,  6.27921066e+01,  1.27715569e+02],\n         [ 7.94645004e+01, -4.59364853e+01, -4.19633102e+01],\n         [-3.46122360e+01,  3.14355087e+01, -1.57081604e-01]],\n\n        [[-9.10949173e+01, -8.40447388e+01, -3.94182053e+01],\n         [ 1.30846802e+02,  4.46389999e+01,  3.89782333e+01],\n         [-2.98412476e+01, -1.62210693e+01, -7.17254791e+01],\n         [ 1.41481293e+02,  1.34709656e+02,  6.58545914e+01],\n         [ 3.33187637e+01,  8.92520676e+01, -9.97536163e+01],\n         [-5.47892876e+01, -7.69419098e+01, -2.48281860e+01],\n         [ 2.05559921e+01,  5.87120743e+01,  9.64056320e+01],\n         [-6.24333229e+01, -6.39943047e+01,  1.11841866e+02],\n         [ 8.59386368e+01, -1.77411728e+01, -4.39032288e+01],\n         [-5.54943161e+01, -6.14186783e+01,  1.01348305e+02]]],\n\n\n       [[[-9.65303574e+01, -8.48533859e+01, -5.88985748e+01],\n         [-8.39987946e+00,  1.08059441e+02,  1.73599777e+01],\n         [ 8.93669205e+01, -5.90444145e+01,  4.69222031e+01],\n         [-7.77559738e+01, -8.58400421e+01,  2.23095474e+01],\n         [ 1.23189156e+02, -1.08114471e+02,  9.32680893e+01],\n         [-8.79244308e+01, -7.78657074e+01,  1.30545532e+02],\n         [ 1.46747772e+02,  7.50930252e+01,  9.19248199e+00],\n         [ 7.77740479e-02, -4.13009109e+01,  3.51497879e+01],\n         [ 1.54565201e+01,  2.88551865e+01, -7.35573425e+01],\n         [ 2.85056229e+01, -2.71762466e+01, -9.13923492e+01]],\n\n        [[-4.26252861e+01,  1.06789932e+01, -1.66567535e+01],\n         [-7.22521133e+01, -3.42544098e+01,  7.08064499e+01],\n         [ 1.46044800e+02,  7.51513443e+01, -7.39326172e+01],\n         [ 8.86308365e+01,  4.34706345e+01,  3.93561478e+01],\n         [-3.98910980e+01,  5.98129501e+01, -9.20215759e+01],\n         [ 1.14207664e+02,  5.51721420e+01,  7.16864243e+01],\n         [ 1.45090973e+02,  1.24677971e+02, -1.16409546e+02],\n         [-3.36978683e+01, -1.75513458e+01,  7.21323471e+01],\n         [ 1.80971756e+01,  4.24051666e+00,  1.08269066e+02],\n         [ 7.18063354e+00,  6.76008072e+01,  7.47857895e+01]],\n\n        [[ 2.02351151e+01, -1.68215637e+01, -4.09216995e+01],\n         [-1.03691406e+02, -6.54242783e+01,  7.24291611e+01],\n         [ 1.46363495e+02, -6.48246460e+01, -1.10248795e+02],\n         [ 7.06017532e+01, -6.13006973e+01, -7.97579803e+01],\n         [ 8.81908035e+01, -3.50148392e+01,  1.16680412e+02],\n         [ 8.50758743e+01, -3.39500656e+01, -1.12632759e+02],\n         [ 8.35459366e+01, -5.46456299e+01,  1.03041191e+02],\n         [ 8.14116135e+01,  4.87482529e+01, -3.49520569e+01],\n         [ 4.14038010e+01,  7.76162643e+01, -9.22340698e+01],\n         [ 1.03826439e+02, -2.79233551e+01, -1.05180756e+02]],\n\n        [[ 1.32812439e+02,  6.20484390e+01, -8.02578049e+01],\n         [ 2.26441040e+01,  7.43789749e+01,  5.94333649e+00],\n         [-3.94312363e+01, -6.64548492e+01,  5.48610687e+00],\n         [ 1.17817726e+02, -8.71207428e+01, -8.30405731e+01],\n         [ 2.37127991e+01, -4.39402237e+01,  9.90690231e+01],\n         [-3.95593414e+01,  4.34204330e+01,  1.26100227e+02],\n         [-8.67801514e+01, -1.26763916e+00, -5.90462036e+01],\n         [ 1.35281952e+02,  1.16622871e+02,  8.07358627e+01],\n         [-1.03304718e+02,  8.28998642e+01, -2.15816803e+01],\n         [-1.38725662e+01,  8.52995987e+01,  1.53267746e+01]],\n\n        [[-1.48812103e+00, -6.10666580e+01,  1.01406532e+02],\n         [ 1.23713783e+02,  2.52411728e+01, -9.42325211e+01],\n         [ 7.77632141e+00, -9.03052521e+01, -1.18747429e+02],\n         [-2.52375793e+00, -8.10162430e+01,  1.25849281e+02],\n         [-4.49692307e+01,  9.48141479e+00, -9.44022064e+01],\n         [ 3.88233185e+00,  1.19199944e+02,  1.09732056e+00],\n         [-3.40559158e+01,  1.00332283e+02, -8.52450867e+01],\n         [ 6.55830917e+01, -8.21674042e+01, -1.84901047e+01],\n         [-7.61878586e+01,  2.07620239e+00, -1.09128189e+01],\n         [-9.57100067e+01,  2.48198013e+01, -9.99611664e+01]],\n\n        [[ 3.48402634e+01,  1.25860062e+01, -1.17450577e+02],\n         [-9.25715485e+01,  7.93910294e+01, -1.09336945e+02],\n         [ 1.47515900e+02,  3.52622757e+01, -5.19661713e+01],\n         [ 7.09186478e+01,  1.21853554e+02,  7.28919754e+01],\n         [ 6.87957077e+01,  8.31222534e-01,  1.30836487e+02],\n         [ 7.02227249e+01,  3.85008774e+01,  1.27592049e+02],\n         [-2.54638824e+01, -1.02719543e+02, -6.30165291e+01],\n         [-7.36748047e+01,  1.94024887e+01, -7.52753143e+01],\n         [ 1.24932861e+01,  4.91220779e+01,  3.88855515e+01],\n         [ 7.92495193e+01,  1.09262611e+02,  2.80069962e+01]],\n\n        [[ 2.04397812e+01,  3.71681290e+01, -2.59727249e+01],\n         [ 9.39835587e+01,  4.07086945e+00,  1.12759575e+02],\n         [ 1.43678009e+02,  4.11005630e+01,  9.70447311e+01],\n         [ 4.52877426e+01, -7.22565308e+01, -8.84243011e+01],\n         [-2.48826981e+01,  9.58875809e+01,  9.44759445e+01],\n         [ 1.25341255e+02, -1.03296234e+02, -4.48768005e+01],\n         [-6.05778999e+01, -8.52294159e+00,  1.13831581e+02],\n         [ 1.10106071e+02,  5.76681595e+01, -1.04582840e+02],\n         [-2.36147079e+01,  9.86085587e+01, -9.68121338e+00],\n         [ 2.42312851e+01, -6.47454758e+01, -6.72153931e+01]],\n\n        [[ 1.32913269e+02, -8.35416412e+00, -1.07033676e+02],\n         [ 9.59522934e+01, -1.02647430e+02,  6.45389557e+00],\n         [ 1.35711273e+02,  1.14622856e+02,  7.13351822e+01],\n         [-4.84006767e+01, -2.41824265e+01, -7.25689240e+01],\n         [ 1.20095848e+02,  1.12008232e+02, -4.99015045e+00],\n         [ 4.84819870e+01,  1.16071800e+02, -1.13230003e+02],\n         [ 3.85463943e+01,  7.77637405e+01,  4.78331680e+01],\n         [-9.01924973e+01,  9.11061020e+01, -9.79040222e+01],\n         [-1.04412308e+01, -1.04805450e+01,  2.04118729e+01],\n         [ 5.97922287e+01,  1.19746956e+02,  7.23062363e+01]],\n\n        [[ 6.46553421e+01, -3.31426926e+01,  8.39112930e+01],\n         [-3.98614731e+01, -4.34243774e+00, -6.74873505e+01],\n         [ 2.72364578e+01, -1.39508820e+01,  7.41553574e+01],\n         [-2.37915039e-01,  1.31855286e+02,  5.87630692e+01],\n         [-6.46182938e+01, -2.29589005e+01, -3.55261459e+01],\n         [ 1.05148949e+02,  1.53998032e+01, -7.56717072e+01],\n         [ 4.36937790e+01, -3.37969971e+00, -1.20641319e+02],\n         [ 1.21470131e+02, -2.78602295e+01,  1.30255463e+02],\n         [ 6.76972580e+01,  2.91456070e+01, -4.80900803e+01],\n         [-7.42758255e+01, -8.96128159e+01, -2.44460983e+01]],\n\n        [[-3.12135239e+01,  6.84153748e+00,  4.96995468e+01],\n         [-3.27082138e+01,  4.21058655e+00,  8.07732315e+01],\n         [ 2.97440414e+01, -5.86180916e+01, -9.33631897e-01],\n         [-6.03675537e+01,  9.16306839e+01,  2.60536270e+01],\n         [-4.46846466e+01,  8.39198837e+01,  3.84161377e+00],\n         [ 1.14836906e+02,  5.63169479e+01,  2.74459152e+01],\n         [ 8.73942795e+01,  9.02792358e+00, -1.21619270e+02],\n         [-1.23265762e+01, -7.65016785e+01, -7.48408356e+01],\n         [-2.43093567e+01,  5.89722977e+01, -8.15295639e+01],\n         [-6.02232208e+01, -5.00567703e+01, -1.16748573e+02]]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfa99e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 32, 252,  28],\n         [168, 194,  50],\n         [ 94, 214, 195],\n         [148, 235,  10],\n         [187,  69,  45],\n         [149,  45, 215],\n         [ 54,  50, 248],\n         [177, 140, 166],\n         [132, 213,  71],\n         [ 16, 248, 183]],\n\n        [[131,  93, 171],\n         [174,  51, 105],\n         [193,  29, 141],\n         [ 17, 254, 232],\n         [ 69,  67,  35],\n         [ 18, 130, 252],\n         [114, 253, 248],\n         [224,  87, 196],\n         [154,   6, 156],\n         [209,  54,  23]],\n\n        [[ 10, 181, 163],\n         [146, 191, 178],\n         [118, 112, 125],\n         [239, 191, 230],\n         [ 82,  41,  74],\n         [144, 203, 141],\n         [ 80,  86, 170],\n         [ 77, 113, 126],\n         [ 66, 181, 114],\n         [144, 174,   5]],\n\n        [[  7,  77, 188],\n         [191,  59,  83],\n         [141, 220, 126],\n         [ 59, 144,  86],\n         [241,  96, 151],\n         [  4,   9, 150],\n         [122,  45,  48],\n         [ 39, 179,  98],\n         [ 62, 187, 188],\n         [177,  75, 209]],\n\n        [[193, 163, 169],\n         [232, 122,  56],\n         [ 16, 240,  50],\n         [ 87, 172, 208],\n         [144, 235,  85],\n         [ 40, 177, 206],\n         [196,  26, 131],\n         [194, 202, 189],\n         [  9, 144,  77],\n         [210,  18, 206]],\n\n        [[134, 112, 203],\n         [ 97,  59,  44],\n         [148, 246, 131],\n         [218, 211, 230],\n         [125, 212, 192],\n         [213, 234, 127],\n         [150, 221, 155],\n         [246, 152, 173],\n         [ 21,  56,  94],\n         [216,  35, 222]],\n\n        [[163, 165, 244],\n         [136, 253, 243],\n         [187, 187, 250],\n         [ 43,  10, 105],\n         [123, 203, 251],\n         [130, 203, 179],\n         [159, 218,  12],\n         [126,  35,  19],\n         [ 97,  58,  60],\n         [161, 143, 166]],\n\n        [[125,  65, 182],\n         [ 62, 103,  17],\n         [179, 111,  14],\n         [ 45,  24, 121],\n         [233, 162, 212],\n         [ 47, 122, 206],\n         [ 74, 188,   0],\n         [247, 223, 237],\n         [ 40, 248, 136],\n         [100, 230, 234]],\n\n        [[245, 170,  20],\n         [ 92, 234,  94],\n         [ 83,  27, 141],\n         [ 92, 180,  77],\n         [199, 105, 134],\n         [179,   0, 145],\n         [167,  25, 242],\n         [251, 179, 122],\n         [ 81,  70, 183],\n         [123, 148,  69]],\n\n        [[ 84,  32,  12],\n         [162, 161, 234],\n         [ 51, 100,  74],\n         [189, 251, 245],\n         [ 23, 206, 137],\n         [ 98,  39,  49],\n         [220, 175, 124],\n         [235,  52,  41],\n         [ 79,  99, 189],\n         [225,  55,  48]]],\n\n\n       [[[ 64,  31,   7],\n         [141, 224,  95],\n         [170,  57, 193],\n         [145,  30,  26],\n         [216,   8, 227],\n         [254,  38,  16],\n         [132, 191, 250],\n         [158,  75, 104],\n         [ 50, 145, 119],\n         [ 32,  89, 132]],\n\n        [[107, 127,  61],\n         [194,  82,  31],\n         [ 49, 191, 249],\n         [163, 160, 192],\n         [ 31, 176,  64],\n         [195, 171, 218],\n         [  7, 241, 249],\n         [195,  99,  70],\n         [231, 121, 122],\n         [198, 184, 111]],\n\n        [[ 82,  99, 124],\n         [196,  51,   0],\n         [ 13,  51, 250],\n         [ 43,  55, 174],\n         [240,  81, 192],\n         [ 11,  82, 189],\n         [226,  62, 187],\n         [ 88, 165, 185],\n         [ 31, 194, 145],\n         [ 18,  88, 207]],\n\n        [[ 43, 178, 236],\n         [129, 191, 126],\n         [129,  50,  64],\n         [ 40,  29, 221],\n         [222,  72, 127],\n         [249, 160,  64],\n         [ 64, 115,  17],\n         [204, 233, 239],\n         [102, 199,   0],\n         [139, 202,  90]],\n\n        [[225,  55, 102],\n         [ 29, 142, 227],\n         [  4,  26, 111],\n         [249,  35, 101],\n         [ 29, 126,  58],\n         [124, 235, 107],\n         [ 38, 217,  69],\n         [105,  34, 169],\n         [112, 118,  27],\n         [ 23, 141,   8]],\n\n        [[  6, 129, 138],\n         [ 14, 196,  11],\n         [ 71, 152, 251],\n         [196, 238, 174],\n         [254, 117, 172],\n         [251, 155, 174],\n         [ 60,  14,  78],\n         [ 48, 136,  30],\n         [162, 165, 116],\n         [151, 226, 183]],\n\n        [[ 97, 153, 124],\n         [236, 120, 197],\n         [220, 157, 247],\n         [ 35,  44, 149],\n         [218, 212,  79],\n         [ 78,  13, 229],\n         [237, 108,  43],\n         [ 19, 174, 214],\n         [113, 215,  80],\n         [ 56,  52, 128]],\n\n        [[ 16, 108, 236],\n         [130,  14, 199],\n         [195, 231, 239],\n         [ 51,  92,  55],\n         [118, 228, 224],\n         [ 10, 232, 152],\n         [171, 194, 142],\n         [ 25, 207,  13],\n         [144, 106,  93],\n         [195, 236, 163]],\n\n        [[207,  83, 168],\n         [ 56, 112,  64],\n         [197, 102, 131],\n         [182, 248, 103],\n         [ 88,  93,  39],\n         [ 48, 132, 209],\n         [  3, 113, 147],\n         [253,  88, 225],\n         [ 75, 145, 171],\n         [ 99,  27,  29]],\n\n        [[173, 123,  72],\n         [204, 120,  71],\n         [122,  58, 133],\n         [149, 208,  43],\n         [127, 200,  59],\n         [151, 173, 218],\n         [  2, 125, 191],\n         [ 48,  40,  91],\n         [ 42, 175,  79],\n         [  6,  66,  43]]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cf86440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-7.5939003e+01,  1.3522101e+02, -9.1680000e+01],\n         [-5.3939003e+01,  7.7221001e+01,  4.4320000e+01],\n         [ 9.1060997e+01,  9.7221001e+01, -2.9680000e+01],\n         [-9.3939003e+01,  1.1822100e+02,  2.4320000e+01],\n         [-5.8939003e+01, -4.7778999e+01,  6.3320000e+01],\n         [ 1.1106100e+02, -7.1778999e+01,  2.5320000e+01],\n         [ 1.4406100e+02, -6.6778999e+01, -6.9680000e+01],\n         [ 6.2060997e+01,  2.3221001e+01,  5.3320000e+01],\n         [-3.2939003e+01,  9.6221001e+01,  8.3199997e+00],\n         [ 7.9060997e+01,  1.3122101e+02, -1.0768000e+02]],\n\n        [[ 6.7060997e+01, -2.3778999e+01,  7.3199997e+00],\n         [ 1.0609970e+00, -6.5778999e+01,  5.0320000e+01],\n         [ 3.7060997e+01, -8.7778999e+01,  6.9320000e+01],\n         [ 1.2806100e+02,  1.3722101e+02, -1.0668000e+02],\n         [-6.8939003e+01, -4.9778999e+01, -5.4680000e+01],\n         [ 1.4806100e+02,  1.3221001e+01, -1.0568000e+02],\n         [ 1.4406100e+02,  1.3622101e+02, -9.6800003e+00],\n         [ 9.2060997e+01, -2.9778999e+01,  1.0032000e+02],\n         [ 5.2060997e+01, -1.1077900e+02,  3.0320000e+01],\n         [-8.0939003e+01, -6.2778999e+01,  8.5320000e+01]],\n\n        [[ 5.9060997e+01,  6.4221001e+01, -1.1368000e+02],\n         [ 7.4060997e+01,  7.4221001e+01,  2.2320000e+01],\n         [ 2.1060997e+01, -4.7789993e+00, -5.6800003e+00],\n         [ 1.2606100e+02,  7.4221001e+01,  1.1532000e+02],\n         [-2.9939003e+01, -7.5778999e+01, -4.1680000e+01],\n         [ 3.7060997e+01,  8.6221001e+01,  2.0320000e+01],\n         [ 6.6060997e+01, -3.0778999e+01, -4.3680000e+01],\n         [ 2.2060997e+01, -3.7789993e+00, -4.6680000e+01],\n         [ 1.0060997e+01,  6.4221001e+01, -5.7680000e+01],\n         [-9.8939003e+01,  5.7221001e+01,  2.0320000e+01]],\n\n        [[ 8.4060997e+01, -3.9778999e+01, -1.1668000e+02],\n         [-2.0939003e+01, -5.7778999e+01,  6.7320000e+01],\n         [ 2.2060997e+01,  1.0322100e+02,  1.7320000e+01],\n         [-1.7939003e+01,  2.7221001e+01, -6.4680000e+01],\n         [ 4.7060997e+01, -2.0778999e+01,  1.1732000e+02],\n         [ 4.6060997e+01, -1.0777900e+02, -1.1968000e+02],\n         [-5.5939003e+01, -7.1778999e+01, -1.6800003e+00],\n         [-5.9390030e+00,  6.2221001e+01, -8.4680000e+01],\n         [ 8.4060997e+01,  7.0221001e+01, -6.1680000e+01],\n         [ 1.0506100e+02, -4.1778999e+01,  5.3320000e+01]],\n\n        [[ 6.5060997e+01,  4.6221001e+01,  6.9320000e+01],\n         [-4.7939003e+01,  5.2210007e+00,  1.0832000e+02],\n         [-5.3939003e+01,  1.2322100e+02, -1.0768000e+02],\n         [ 1.0406100e+02,  5.5221001e+01, -3.6680000e+01],\n         [-1.8939003e+01,  1.1822100e+02,  2.0320000e+01],\n         [ 1.0206100e+02,  6.0221001e+01, -8.3680000e+01],\n         [ 2.7060997e+01, -9.0778999e+01,  7.2320000e+01],\n         [ 8.5060997e+01,  8.5221001e+01,  7.0320000e+01],\n         [-2.6939003e+01,  2.7221001e+01, -1.1468000e+02],\n         [ 1.0206100e+02, -9.8778999e+01,  8.6320000e+01]],\n\n        [[ 9.9060997e+01, -4.7789993e+00,  1.0320000e+01],\n         [-5.9939003e+01, -5.7778999e+01, -2.6680000e+01],\n         [ 2.7060997e+01,  1.2922101e+02,  2.4320000e+01],\n         [ 1.2606100e+02,  9.4221001e+01,  9.4320000e+01],\n         [ 8.8060997e+01,  9.5221001e+01,  1.3199997e+00],\n         [ 2.3060997e+01,  1.1722100e+02,  8.9320000e+01],\n         [ 5.1060997e+01,  1.0422100e+02,  2.6320000e+01],\n         [ 6.9060997e+01,  3.5221001e+01,  1.2232000e+02],\n         [-9.9390030e+00, -6.0778999e+01, -1.0268000e+02],\n         [ 1.1806100e+02, -8.1778999e+01,  9.2320000e+01]],\n\n        [[ 1.4006100e+02,  4.8221001e+01,  3.9320000e+01],\n         [ 1.3906100e+02,  1.3622101e+02,  1.2320000e+01],\n         [ 1.4606100e+02,  7.0221001e+01,  6.3320000e+01],\n         [ 1.0609970e+00, -1.0677900e+02, -8.0680000e+01],\n         [ 1.4706100e+02,  8.6221001e+01, -6.8000031e-01],\n         [ 7.5060997e+01,  8.6221001e+01,  6.3199997e+00],\n         [-9.1939003e+01,  1.0122100e+02,  3.5320000e+01],\n         [-8.4939003e+01, -8.1778999e+01,  2.3199997e+00],\n         [-4.3939003e+01, -5.8778999e+01, -2.6680000e+01],\n         [ 6.2060997e+01,  2.6221001e+01,  3.7320000e+01]],\n\n        [[ 7.8060997e+01, -5.1778999e+01,  1.3199997e+00],\n         [-8.6939003e+01, -1.3778999e+01, -6.1680000e+01],\n         [-8.9939003e+01, -5.7789993e+00,  5.5320000e+01],\n         [ 1.7060997e+01, -9.2778999e+01, -7.8680000e+01],\n         [ 1.0806100e+02,  4.5221001e+01,  1.0932000e+02],\n         [ 1.0206100e+02,  5.2210007e+00, -7.6680000e+01],\n         [-1.0393900e+02,  7.1221001e+01, -4.9680000e+01],\n         [ 1.3306100e+02,  1.0622100e+02,  1.2332000e+02],\n         [ 3.2060997e+01,  1.3122101e+02, -8.3680000e+01],\n         [ 1.3006100e+02,  1.1322100e+02, -2.3680000e+01]],\n\n        [[-8.3939003e+01,  5.3221001e+01,  1.2132000e+02],\n         [-9.9390030e+00,  1.1722100e+02, -3.1680000e+01],\n         [ 3.7060997e+01, -8.9778999e+01, -4.0680000e+01],\n         [-2.6939003e+01,  6.3221001e+01, -3.1680000e+01],\n         [ 3.0060997e+01, -1.1778999e+01,  7.5320000e+01],\n         [ 4.1060997e+01, -1.1677900e+02,  5.5320000e+01],\n         [ 1.3806100e+02, -9.1778999e+01,  4.3320000e+01],\n         [ 1.8060997e+01,  6.2221001e+01,  1.2732000e+02],\n         [ 7.9060997e+01, -4.6778999e+01, -4.2680000e+01],\n         [-3.4939003e+01,  3.1221001e+01, -6.8000031e-01]],\n\n        [[-9.1939003e+01, -8.4778999e+01, -3.9680000e+01],\n         [ 1.3006100e+02,  4.4221001e+01,  3.8320000e+01],\n         [-2.9939003e+01, -1.6778999e+01, -7.2680000e+01],\n         [ 1.4106100e+02,  1.3422101e+02,  6.5320000e+01],\n         [ 3.3060997e+01,  8.9221001e+01, -1.0068000e+02],\n         [-5.4939003e+01, -7.7778999e+01, -2.5680000e+01],\n         [ 2.0060997e+01,  5.8221001e+01,  9.6320000e+01],\n         [-6.2939003e+01, -6.4778999e+01,  1.1132000e+02],\n         [ 8.5060997e+01, -1.7778999e+01, -4.4680000e+01],\n         [-5.5939003e+01, -6.1778999e+01,  1.0132000e+02]]],\n\n\n       [[[-9.6939003e+01, -8.5778999e+01, -5.9680000e+01],\n         [-8.9390030e+00,  1.0722100e+02,  1.7320000e+01],\n         [ 8.9060997e+01, -5.9778999e+01,  4.6320000e+01],\n         [-7.7939003e+01, -8.6778999e+01,  2.1320000e+01],\n         [ 1.2306100e+02, -1.0877900e+02,  9.2320000e+01],\n         [-8.7939003e+01, -7.8778999e+01,  1.3032001e+02],\n         [ 1.4606100e+02,  7.4221001e+01,  8.3199997e+00],\n         [ 6.0997009e-02, -4.1778999e+01,  3.4320000e+01],\n         [ 1.5060997e+01,  2.8221001e+01, -7.3680000e+01],\n         [ 2.8060997e+01, -2.7778999e+01, -9.1680000e+01]],\n\n        [[-4.2939003e+01,  1.0221001e+01, -1.6680000e+01],\n         [-7.2939003e+01, -3.4778999e+01,  7.0320000e+01],\n         [ 1.4506100e+02,  7.4221001e+01, -7.4680000e+01],\n         [ 8.8060997e+01,  4.3221001e+01,  3.9320000e+01],\n         [-3.9939003e+01,  5.9221001e+01, -9.2680000e+01],\n         [ 1.1406100e+02,  5.4221001e+01,  7.1320000e+01],\n         [ 1.4506100e+02,  1.2422100e+02, -1.1668000e+02],\n         [-3.3939003e+01, -1.7778999e+01,  7.1320000e+01],\n         [ 1.8060997e+01,  4.2210007e+00,  1.0732000e+02],\n         [ 7.0609970e+00,  6.7221001e+01,  7.4320000e+01]],\n\n        [[ 2.0060997e+01, -1.7778999e+01, -4.1680000e+01],\n         [-1.0393900e+02, -6.5778999e+01,  7.2320000e+01],\n         [ 1.4606100e+02, -6.5778999e+01, -1.1068000e+02],\n         [ 7.0060997e+01, -6.1778999e+01, -8.0680000e+01],\n         [ 8.8060997e+01, -3.5778999e+01,  1.1632000e+02],\n         [ 8.5060997e+01, -3.4778999e+01, -1.1268000e+02],\n         [ 8.3060997e+01, -5.4778999e+01,  1.0232000e+02],\n         [ 8.1060997e+01,  4.8221001e+01, -3.5680000e+01],\n         [ 4.1060997e+01,  7.7221001e+01, -9.2680000e+01],\n         [ 1.0306100e+02, -2.8778999e+01, -1.0568000e+02]],\n\n        [[ 1.3206100e+02,  6.1221001e+01, -8.0680000e+01],\n         [ 2.2060997e+01,  7.4221001e+01,  5.3199997e+00],\n         [-3.9939003e+01, -6.6778999e+01,  5.3199997e+00],\n         [ 1.1706100e+02, -8.7778999e+01, -8.3680000e+01],\n         [ 2.3060997e+01, -4.4778999e+01,  9.8320000e+01],\n         [-3.9939003e+01,  4.3221001e+01,  1.2532000e+02],\n         [-8.6939003e+01, -1.7789993e+00, -5.9680000e+01],\n         [ 1.3506100e+02,  1.1622100e+02,  8.0320000e+01],\n         [-1.0393900e+02,  8.2221001e+01, -2.1680000e+01],\n         [-1.3939003e+01,  8.5221001e+01,  1.5320000e+01]],\n\n        [[-1.9390030e+00, -6.1778999e+01,  1.0132000e+02],\n         [ 1.2306100e+02,  2.5221001e+01, -9.4680000e+01],\n         [ 7.0609970e+00, -9.0778999e+01, -1.1968000e+02],\n         [-2.9390030e+00, -8.1778999e+01,  1.2532000e+02],\n         [-4.5939003e+01,  9.2210007e+00, -9.4680000e+01],\n         [ 3.0609970e+00,  1.1822100e+02,  3.1999969e-01],\n         [-3.4939003e+01,  1.0022100e+02, -8.5680000e+01],\n         [ 6.5060997e+01, -8.2778999e+01, -1.8680000e+01],\n         [-7.6939003e+01,  1.2210007e+00, -1.1680000e+01],\n         [-9.5939003e+01,  2.4221001e+01, -1.0068000e+02]],\n\n        [[ 3.4060997e+01,  1.2221001e+01, -1.1768000e+02],\n         [-9.2939003e+01,  7.9221001e+01, -1.0968000e+02],\n         [ 1.4706100e+02,  3.5221001e+01, -5.2680000e+01],\n         [ 7.0060997e+01,  1.2122100e+02,  7.2320000e+01],\n         [ 6.8060997e+01,  2.2100067e-01,  1.3032001e+02],\n         [ 7.0060997e+01,  3.8221001e+01,  1.2732000e+02],\n         [-2.5939003e+01, -1.0277900e+02, -6.3680000e+01],\n         [-7.3939003e+01,  1.9221001e+01, -7.5680000e+01],\n         [ 1.2060997e+01,  4.8221001e+01,  3.8320000e+01],\n         [ 7.9060997e+01,  1.0922100e+02,  2.7320000e+01]],\n\n        [[ 2.0060997e+01,  3.6221001e+01, -2.6680000e+01],\n         [ 9.3060997e+01,  3.2210007e+00,  1.1232000e+02],\n         [ 1.4306100e+02,  4.0221001e+01,  9.6320000e+01],\n         [ 4.5060997e+01, -7.2778999e+01, -8.8680000e+01],\n         [-2.4939003e+01,  9.5221001e+01,  9.4320000e+01],\n         [ 1.2506100e+02, -1.0377900e+02, -4.5680000e+01],\n         [-6.0939003e+01, -8.7789993e+00,  1.1332000e+02],\n         [ 1.1006100e+02,  5.7221001e+01, -1.0468000e+02],\n         [-2.3939003e+01,  9.8221001e+01, -1.0680000e+01],\n         [ 2.4060997e+01, -6.4778999e+01, -6.7680000e+01]],\n\n        [[ 1.3206100e+02, -8.7789993e+00, -1.0768000e+02],\n         [ 9.5060997e+01, -1.0277900e+02,  6.3199997e+00],\n         [ 1.3506100e+02,  1.1422100e+02,  7.1320000e+01],\n         [-4.8939003e+01, -2.4778999e+01, -7.2680000e+01],\n         [ 1.2006100e+02,  1.1122100e+02, -5.6800003e+00],\n         [ 4.8060997e+01,  1.1522100e+02, -1.1368000e+02],\n         [ 3.8060997e+01,  7.7221001e+01,  4.7320000e+01],\n         [-9.0939003e+01,  9.0221001e+01, -9.8680000e+01],\n         [-1.0939003e+01, -1.0778999e+01,  2.0320000e+01],\n         [ 5.9060997e+01,  1.1922100e+02,  7.1320000e+01]],\n\n        [[ 6.4060997e+01, -3.3778999e+01,  8.3320000e+01],\n         [-3.9939003e+01, -4.7789993e+00, -6.7680000e+01],\n         [ 2.7060997e+01, -1.4778999e+01,  7.3320000e+01],\n         [-9.3900299e-01,  1.3122101e+02,  5.8320000e+01],\n         [-6.4939003e+01, -2.3778999e+01, -3.5680000e+01],\n         [ 1.0506100e+02,  1.5221001e+01, -7.5680000e+01],\n         [ 4.3060997e+01, -3.7789993e+00, -1.2068000e+02],\n         [ 1.2106100e+02, -2.8778999e+01,  1.2932001e+02],\n         [ 6.7060997e+01,  2.8221001e+01, -4.8680000e+01],\n         [-7.4939003e+01, -8.9778999e+01, -2.4680000e+01]],\n\n        [[-3.1939003e+01,  6.2210007e+00,  4.9320000e+01],\n         [-3.2939003e+01,  3.2210007e+00,  8.0320000e+01],\n         [ 2.9060997e+01, -5.8778999e+01, -1.6800003e+00],\n         [-6.0939003e+01,  9.1221001e+01,  2.5320000e+01],\n         [-4.4939003e+01,  8.3221001e+01,  3.3199997e+00],\n         [ 1.1406100e+02,  5.6221001e+01,  2.7320000e+01],\n         [ 8.7060997e+01,  8.2210007e+00, -1.2168000e+02],\n         [-1.2939003e+01, -7.6778999e+01, -7.5680000e+01],\n         [-2.4939003e+01,  5.8221001e+01, -8.1680000e+01],\n         [-6.0939003e+01, -5.0778999e+01, -1.1768000e+02]]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfa9b20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[3.20198849e+01, 2.52353826e+02, 2.82751718e+01],\n         [1.68880645e+02, 1.94225784e+02, 5.09713399e+01],\n         [9.44170725e+01, 2.14774919e+02, 1.95790467e+02],\n         [1.48851117e+02, 2.35636905e+02, 1.03969746e+01],\n         [1.87093979e+02, 6.96875127e+01, 4.53962801e+01],\n         [1.49321279e+02, 4.57196800e+01, 2.15469242e+02],\n         [5.44644447e+01, 5.04853897e+01, 2.48032760e+02],\n         [1.77466279e+02, 1.40450639e+02, 1.66697393e+02],\n         [1.32055632e+02, 2.13017744e+02, 7.19917886e+01],\n         [1.65160662e+01, 2.48307170e+02, 1.83990686e+02]],\n\n        [[1.31995213e+02, 9.31265178e+01, 1.71617276e+02],\n         [1.74089650e+02, 5.14481407e+01, 1.05191520e+02],\n         [1.93661990e+02, 2.93401668e+01, 1.41592535e+02],\n         [1.74495757e+01, 2.54777334e+02, 2.32647429e+02],\n         [6.93374555e+01, 6.72591597e+01, 3.51057182e+01],\n         [1.83775350e+01, 1.30577836e+02, 2.52179943e+02],\n         [1.14116192e+02, 2.53285208e+02, 2.48063668e+02],\n         [2.24438282e+02, 8.74539792e+01, 1.96742733e+02],\n         [1.54303025e+02, 6.46784774e+00, 1.56086951e+02],\n         [2.09300193e+02, 5.43220389e+01, 2.32408278e+01]],\n\n        [[1.00052435e+01, 1.81957757e+02, 1.63924694e+02],\n         [1.46264394e+02, 1.91264589e+02, 1.78587650e+02],\n         [1.18308764e+02, 1.12611995e+02, 1.25869876e+02],\n         [2.39597169e+02, 1.91130581e+02, 2.30587383e+02],\n         [8.22668968e+01, 4.12487164e+01, 7.45728060e+01],\n         [1.44787074e+02, 2.03319377e+02, 1.41935229e+02],\n         [8.05922976e+01, 8.65506720e+01, 1.70810369e+02],\n         [7.71494051e+01, 1.13661497e+02, 1.26778862e+02],\n         [6.61091985e+01, 1.81752449e+02, 1.14362917e+02],\n         [1.44003093e+02, 1.74805124e+02, 5.66817993e+00]],\n\n        [[7.01444940e+00, 7.74354605e+01, 1.88315159e+02],\n         [1.91871731e+02, 5.99115096e+01, 8.33475885e+01],\n         [1.41173468e+02, 2.20598478e+02, 1.26208591e+02],\n         [5.96978099e+01, 1.44299577e+02, 8.62226320e+01],\n         [2.41787468e+02, 9.68403991e+01, 1.51637355e+02],\n         [4.94823471e+00, 9.93978652e+00, 1.50444110e+02],\n         [1.22193037e+02, 4.57055013e+01, 4.87026235e+01],\n         [3.93813176e+01, 1.79019018e+02, 9.89608138e+01],\n         [6.27195694e+01, 1.87990712e+02, 1.88155653e+02],\n         [1.77392305e+02, 7.54463236e+01, 2.09750790e+02]],\n\n        [[1.93014831e+02, 1.63725423e+02, 1.69076774e+02],\n         [2.32820731e+02, 1.22285263e+02, 5.64051792e+01],\n         [1.68180893e+01, 2.40170910e+02, 5.05323306e+01],\n         [8.73731571e+01, 1.72252652e+02, 2.08207535e+02],\n         [1.44020237e+02, 2.35730425e+02, 8.57781757e+01],\n         [4.06444315e+01, 1.77680930e+02, 2.06663652e+02],\n         [1.96365712e+02, 2.60222433e+01, 1.31465650e+02],\n         [1.94361335e+02, 2.02998783e+02, 1.89615911e+02],\n         [9.43304206e+00, 1.44864807e+02, 7.73446016e+01],\n         [2.10369262e+02, 1.88086976e+01, 2.06165739e+02]],\n\n        [[1.34154460e+02, 1.12335084e+02, 2.03552595e+02],\n         [9.73658574e+01, 5.94213500e+01, 4.44816777e+01],\n         [1.48217107e+02, 2.46024996e+02, 1.31760370e+02],\n         [2.18112130e+02, 2.11462507e+02, 2.30797273e+02],\n         [1.25192370e+02, 2.12373391e+02, 1.92328867e+02],\n         [2.13981721e+02, 2.34387898e+02, 1.27483156e+02],\n         [1.50748158e+02, 2.21745728e+02, 1.55248635e+02],\n         [2.46758181e+02, 1.52199948e+02, 1.73745475e+02],\n         [2.13309118e+01, 5.68028396e+01, 9.46917087e+01],\n         [2.16975770e+02, 3.54980717e+01, 2.22888447e+02]],\n\n        [[1.63260771e+02, 1.65606194e+02, 2.44399210e+02],\n         [1.36369764e+02, 2.53624129e+02, 2.43436168e+02],\n         [1.87371765e+02, 1.87727167e+02, 2.50853015e+02],\n         [4.35350729e+01, 1.00389565e+01, 1.05942579e+02],\n         [1.23090628e+02, 2.03932524e+02, 2.51008912e+02],\n         [1.30641826e+02, 2.03381886e+02, 1.79270467e+02],\n         [1.59536718e+02, 2.18128674e+02, 1.25599500e+01],\n         [1.26417650e+02, 3.57905220e+01, 1.90553151e+01],\n         [9.75218658e+01, 5.82709864e+01, 6.08368061e+01],\n         [1.61219320e+02, 1.43836174e+02, 1.66071831e+02]],\n\n        [[1.25123988e+02, 6.58825136e+01, 1.82638402e+02],\n         [6.28461513e+01, 1.03941422e+02, 1.76827108e+01],\n         [1.79592854e+02, 1.11653178e+02, 1.41847855e+01],\n         [4.57734547e+01, 2.48174361e+01, 1.21141842e+02],\n         [2.33467948e+02, 1.62961223e+02, 2.12541320e+02],\n         [4.77166013e+01, 1.22780394e+02, 2.06831034e+02],\n         [7.48310659e+01, 1.88000093e+02, 9.08574356e-01],\n         [2.47115520e+02, 2.23777360e+02, 2.37256579e+02],\n         [4.08714146e+01, 2.48590882e+02, 1.36007925e+02],\n         [1.00334476e+02, 2.30993720e+02, 2.34453971e+02]],\n\n        [[2.45601046e+02, 1.70970767e+02, 2.09052851e+01],\n         [9.20576110e+01, 2.34533461e+02, 9.45036423e+01],\n         [8.39608213e+01, 2.70419493e+01, 1.41600247e+02],\n         [9.29916694e+01, 1.80078377e+02, 7.78204612e+01],\n         [1.99509692e+02, 1.05106135e+02, 1.34351174e+02],\n         [1.79510345e+02, 9.53828313e-01, 1.45151605e+02],\n         [1.67988092e+02, 2.53420569e+01, 2.42294824e+02],\n         [2.51395563e+02, 1.79571113e+02, 1.22601236e+02],\n         [8.17166935e+01, 7.08425104e+01, 1.83403501e+02],\n         [1.23522917e+02, 1.48214515e+02, 6.93267657e+01]],\n\n        [[8.42617976e+01, 3.27342565e+01, 1.28440826e+01],\n         [1.62658233e+02, 1.61418005e+02, 2.34785807e+02],\n         [5.19545155e+01, 1.00557928e+02, 7.40977572e+01],\n         [1.89534594e+02, 2.51488642e+02, 2.45420303e+02],\n         [2.39263852e+01, 2.06031067e+02, 1.37257767e+02],\n         [9.88518148e+01, 3.98370901e+01, 4.91497155e+01],\n         [2.20085636e+02, 1.75491069e+02, 1.24494994e+02],\n         [2.35521865e+02, 5.27846955e+01, 4.15056803e+01],\n         [7.97767688e+01, 9.90378246e+01, 1.89877646e+02],\n         [2.25028308e+02, 5.53603217e+01, 4.84446866e+01]]],\n\n\n       [[[6.47814240e+01, 3.19256133e+01, 7.40864651e+00],\n         [1.41039984e+02, 2.24838443e+02, 9.55391226e+01],\n         [1.70602200e+02, 5.77345838e+01, 1.93305918e+02],\n         [1.45989554e+02, 3.09389574e+01, 2.61830266e+01],\n         [2.16948093e+02, 8.66452437e+00, 2.27128165e+02],\n         [2.54225538e+02, 3.89132915e+01, 1.60145742e+01],\n         [1.32872488e+02, 1.91872018e+02, 2.50686787e+02],\n         [1.58829783e+02, 7.54780861e+01, 1.04016775e+02],\n         [5.01226537e+01, 1.45634179e+02, 1.19395521e+02],\n         [3.22876482e+01, 8.96027510e+01, 1.32444630e+02]],\n\n        [[1.07023250e+02, 1.27457996e+02, 6.13137167e+01],\n         [1.94486450e+02, 8.25245932e+01, 3.16868888e+01],\n         [4.97473827e+01, 1.91930338e+02, 2.49983810e+02],\n         [1.63036154e+02, 1.60249638e+02, 1.92569840e+02],\n         [3.16584213e+01, 1.76591954e+02, 6.40479015e+01],\n         [1.95366421e+02, 1.71951148e+02, 2.18146667e+02],\n         [7.27045342e+00, 2.41456967e+02, 2.49029980e+02],\n         [1.95812345e+02, 9.92276544e+01, 7.02411367e+01],\n         [2.31949063e+02, 1.21019514e+02, 1.22036182e+02],\n         [1.98465787e+02, 1.84379812e+02, 1.11119638e+02]],\n\n        [[8.27582985e+01, 9.99574332e+01, 1.24174118e+02],\n         [1.96109160e+02, 5.13547199e+01, 2.47594999e-01],\n         [1.34312049e+01, 5.19543531e+01, 2.50302497e+02],\n         [4.39220195e+01, 5.54783002e+01, 1.74540758e+02],\n         [2.40360419e+02, 8.17641567e+01, 1.92129811e+02],\n         [1.10472390e+01, 8.28289352e+01, 1.89014884e+02],\n         [2.26721196e+02, 6.21333676e+01, 1.87484945e+02],\n         [8.87279424e+01, 1.65527258e+02, 1.85350613e+02],\n         [3.14459276e+01, 1.94395269e+02, 1.45342808e+02],\n         [1.84992420e+01, 8.88556471e+01, 2.07765444e+02]],\n\n        [[4.34221969e+01, 1.78827443e+02, 2.36751438e+02],\n         [1.29623332e+02, 1.91157975e+02, 1.26583105e+02],\n         [1.29166113e+02, 5.03241490e+01, 6.45077705e+01],\n         [4.06394242e+01, 2.96582597e+01, 2.21756727e+02],\n         [2.22749026e+02, 7.28387735e+01, 1.27651803e+02],\n         [2.49780228e+02, 1.60199438e+02, 6.43796582e+01],\n         [6.46337953e+01, 1.15511357e+02, 1.71588481e+01],\n         [2.04415856e+02, 2.33401873e+02, 2.39220951e+02],\n         [1.02098323e+02, 1.99678857e+02, 6.34284118e-01],\n         [1.39006769e+02, 2.02078594e+02, 9.00664396e+01]],\n\n        [[2.25086526e+02, 5.57123418e+01, 1.02450884e+02],\n         [2.94474802e+01, 1.42020179e+02, 2.27652790e+02],\n         [4.93257306e+00, 2.64737451e+01, 1.11715324e+02],\n         [2.49529278e+02, 3.57627559e+01, 1.01415245e+02],\n         [2.92777975e+01, 1.26260418e+02, 5.89697716e+01],\n         [1.24777321e+02, 2.35978950e+02, 1.07821333e+02],\n         [3.84349149e+01, 2.17111287e+02, 6.98830852e+01],\n         [1.05189894e+02, 3.46115999e+01, 1.69522101e+02],\n         [1.12767181e+02, 1.18855203e+02, 2.77511439e+01],\n         [2.37188302e+01, 1.41598799e+02, 8.22899403e+00]],\n\n        [[6.22942415e+00, 1.29365009e+02, 1.38779269e+02],\n         [1.43430554e+01, 1.96170035e+02, 1.13674526e+01],\n         [7.17138275e+01, 1.52041277e+02, 2.51454899e+02],\n         [1.96571982e+02, 2.38632547e+02, 1.74857648e+02],\n         [2.54516478e+02, 1.17610224e+02, 1.72734712e+02],\n         [2.51272046e+02, 1.55279881e+02, 1.74161731e+02],\n         [6.06634721e+01, 1.40594592e+01, 7.84751215e+01],\n         [4.84046912e+01, 1.36181485e+02, 3.02641982e+01],\n         [1.62565550e+02, 1.65901072e+02, 1.16432285e+02],\n         [1.51686995e+02, 2.26041607e+02, 1.83188526e+02]],\n\n        [[9.77072729e+01, 1.53947127e+02, 1.24378784e+02],\n         [2.36439578e+02, 1.20849866e+02, 1.97922560e+02],\n         [2.20724728e+02, 1.57879570e+02, 2.47617000e+02],\n         [3.52556985e+01, 4.45224680e+01, 1.49226752e+02],\n         [2.18155948e+02, 2.12666576e+02, 7.90563017e+01],\n         [7.88032009e+01, 1.34827659e+01, 2.29280261e+02],\n         [2.37511579e+02, 1.08256058e+02, 4.33611048e+01],\n         [1.90971617e+01, 1.74447162e+02, 2.14045073e+02],\n         [1.13998785e+02, 2.15387564e+02, 8.03242968e+01],\n         [5.64646067e+01, 5.20335249e+01, 1.28170293e+02]],\n\n        [[1.66463195e+01, 1.08424834e+02, 2.36852277e+02],\n         [1.30133903e+02, 1.41315653e+01, 1.99891290e+02],\n         [1.95015184e+02, 2.31401854e+02, 2.39650288e+02],\n         [5.11110818e+01, 9.25965716e+01, 5.55383245e+01],\n         [1.18689851e+02, 2.28787239e+02, 2.24034857e+02],\n         [1.04499961e+01, 2.32850803e+02, 1.52420984e+02],\n         [1.71513172e+02, 1.94542737e+02, 1.42485399e+02],\n         [2.57759818e+01, 2.07885105e+02, 1.37465051e+01],\n         [1.44091870e+02, 1.06298455e+02, 9.34977737e+01],\n         [1.95986230e+02, 2.36525963e+02, 1.63731225e+02]],\n\n        [[2.07591294e+02, 8.36363063e+01, 1.68594351e+02],\n         [5.61926544e+01, 1.12436561e+02, 6.40775270e+01],\n         [1.97835351e+02, 1.02828116e+02, 1.31175465e+02],\n         [1.82443067e+02, 2.48634276e+02, 1.03701089e+02],\n         [8.81538507e+01, 9.38201026e+01, 3.93207074e+01],\n         [4.80082934e+01, 1.32178809e+02, 2.09087958e+02],\n         [3.03867768e+00, 1.13399300e+02, 1.47632785e+02],\n         [2.53935477e+02, 8.89187706e+01, 2.25409138e+02],\n         [7.55899190e+01, 1.45924611e+02, 1.71636267e+02],\n         [9.92339005e+01, 2.71661820e+01, 2.96631781e+01]],\n\n        [[1.73379541e+02, 1.23620538e+02, 7.27254796e+01],\n         [2.04453228e+02, 1.20989589e+02, 7.12307918e+01],\n         [1.22746371e+02, 5.81609084e+01, 1.33683039e+02],\n         [1.49733624e+02, 2.08409678e+02, 4.35714475e+01],\n         [1.27521618e+02, 2.00698882e+02, 5.92543563e+01],\n         [1.51125911e+02, 1.73095953e+02, 2.18775906e+02],\n         [2.06073146e+00, 1.25806925e+02, 1.91333278e+02],\n         [4.88391646e+01, 4.02773184e+01, 9.16124276e+01],\n         [4.21504355e+01, 1.75751296e+02, 7.96296489e+01],\n         [6.93142548e+00, 6.67222306e+01, 4.37157841e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cf86530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-7.56638336e+01,  1.35574829e+02, -9.16601105e+01],\n         [-5.29676628e+01,  7.74467850e+01,  4.52006454e+01],\n         [ 9.18514633e+01,  9.79959183e+01, -2.92629242e+01],\n         [-9.35420303e+01,  1.18857903e+02,  2.51711197e+01],\n         [-5.85427246e+01, -4.70914841e+01,  6.34139786e+01],\n         [ 1.11530235e+02, -7.10593185e+01,  2.56412735e+01],\n         [ 1.44093750e+02, -6.62936096e+01, -6.92155609e+01],\n         [ 6.27583847e+01,  2.36716385e+01,  5.37862778e+01],\n         [-3.19472122e+01,  9.62387466e+01,  8.37563324e+00],\n         [ 8.00516891e+01,  1.31528168e+02, -1.07163933e+02]],\n\n        [[ 6.76782761e+01, -2.36524811e+01,  8.31520844e+00],\n         [ 1.25251770e+00, -6.53308563e+01,  5.04096451e+01],\n         [ 3.76535263e+01, -8.74388351e+01,  6.99819870e+01],\n         [ 1.28708435e+02,  1.37998322e+02, -1.06230423e+02],\n         [-6.88332825e+01, -4.95198364e+01, -5.43425446e+01],\n         [ 1.48240936e+02,  1.37988358e+01, -1.05302467e+02],\n         [ 1.44124664e+02,  1.36506195e+02, -9.56380463e+00],\n         [ 9.28037338e+01, -2.93250198e+01,  1.00758278e+02],\n         [ 5.21479416e+01, -1.10311150e+02,  3.06230240e+01],\n         [-8.06981735e+01, -6.24569588e+01,  8.56201859e+01]],\n\n        [[ 5.99856949e+01,  6.51787643e+01, -1.13674759e+02],\n         [ 7.46486435e+01,  7.44855881e+01,  2.25843887e+01],\n         [ 2.19308701e+01, -4.16700745e+00, -5.37123871e+00],\n         [ 1.26648384e+02,  7.43515854e+01,  1.15917168e+02],\n         [-2.93661957e+01, -7.55302811e+01, -4.14131012e+01],\n         [ 3.79962234e+01,  8.65403824e+01,  2.11070786e+01],\n         [ 6.68713608e+01, -3.02283249e+01, -4.30876999e+01],\n         [ 2.28398590e+01, -3.11750031e+00, -4.65305939e+01],\n         [ 1.04239120e+01,  6.49734421e+01, -5.75708008e+01],\n         [-9.82708206e+01,  5.80261307e+01,  2.03230972e+01]],\n\n        [[ 8.43761520e+01, -3.93435364e+01, -1.16665550e+02],\n         [-2.05914154e+01, -5.68674889e+01,  6.81917343e+01],\n         [ 2.22695847e+01,  1.03819481e+02,  1.74934616e+01],\n         [-1.77163696e+01,  2.75205765e+01, -6.39821892e+01],\n         [ 4.76983566e+01, -1.99385986e+01,  1.18107460e+02],\n         [ 4.65051041e+01, -1.06839211e+02, -1.18731766e+02],\n         [-5.52363777e+01, -7.10735016e+01, -1.48696136e+00],\n         [-4.97818756e+00,  6.22400131e+01, -8.42986832e+01],\n         [ 8.42166519e+01,  7.12117081e+01, -6.09604301e+01],\n         [ 1.05811790e+02, -4.13326721e+01,  5.37123032e+01]],\n\n        [[ 6.51377640e+01,  4.69464188e+01,  6.93348312e+01],\n         [-4.75338249e+01,  5.50626373e+00,  1.09140724e+02],\n         [-5.34066734e+01,  1.23391914e+02, -1.06861908e+02],\n         [ 1.04268532e+02,  5.54736557e+01, -3.63068466e+01],\n         [-1.81608276e+01,  1.18951424e+02,  2.03402328e+01],\n         [ 1.02724648e+02,  6.09019241e+01, -8.30355682e+01],\n         [ 2.75266495e+01, -9.07567596e+01,  7.26857071e+01],\n         [ 8.56769028e+01,  8.62197800e+01,  7.06813278e+01],\n         [-2.65943985e+01,  2.80858078e+01, -1.14246956e+02],\n         [ 1.02226738e+02, -9.79703064e+01,  8.66892624e+01]],\n\n        [[ 9.96135941e+01, -4.44391632e+00,  1.04744644e+01],\n         [-5.94573250e+01, -5.73576508e+01, -2.63141403e+01],\n         [ 2.78213730e+01,  1.29246002e+02,  2.45371017e+01],\n         [ 1.26858269e+02,  9.46835098e+01,  9.44321365e+01],\n         [ 8.83898697e+01,  9.55943985e+01,  1.51236725e+00],\n         [ 2.35441513e+01,  1.17608894e+02,  9.03017197e+01],\n         [ 5.13096390e+01,  1.04966728e+02,  2.70681534e+01],\n         [ 6.98064651e+01,  3.54209518e+01,  1.23078178e+02],\n         [-9.24729156e+00, -5.99761581e+01, -1.02349091e+02],\n         [ 1.18949440e+02, -8.12809296e+01,  9.32957687e+01]],\n\n        [[ 1.40460205e+02,  4.88272018e+01,  3.95807724e+01],\n         [ 1.39497162e+02,  1.36845123e+02,  1.26897659e+01],\n         [ 1.46914001e+02,  7.09481735e+01,  6.36917648e+01],\n         [ 2.00357819e+00, -1.06740044e+02, -8.01449280e+01],\n         [ 1.47069916e+02,  8.71535263e+01, -5.89370728e-01],\n         [ 7.53314590e+01,  8.66028824e+01,  6.96183014e+00],\n         [-9.13790512e+01,  1.01349678e+02,  3.58567123e+01],\n         [-8.48836899e+01, -8.09884796e+01,  2.73764801e+00],\n         [-4.31021957e+01, -5.85080147e+01, -2.61581345e+01],\n         [ 6.21328354e+01,  2.70571671e+01,  3.75393143e+01]],\n\n        [[ 7.86993942e+01, -5.08964844e+01,  1.44398499e+00],\n         [-8.62562943e+01, -1.28375778e+01, -6.08338509e+01],\n         [-8.97542191e+01, -5.12582397e+00,  5.59128494e+01],\n         [ 1.72028427e+01, -9.19615631e+01, -7.79065399e+01],\n         [ 1.08602318e+02,  4.61822281e+01,  1.09787941e+02],\n         [ 1.02892036e+02,  6.00139618e+00, -7.59633942e+01],\n         [-1.03030426e+02,  7.12210922e+01, -4.88489380e+01],\n         [ 1.33317566e+02,  1.06998360e+02,  1.23435524e+02],\n         [ 3.20689163e+01,  1.31811890e+02, -8.28085861e+01],\n         [ 1.30514954e+02,  1.14214714e+02, -2.33455276e+01]],\n\n        [[-8.30337219e+01,  5.41917648e+01,  1.21921043e+02],\n         [-9.43536377e+00,  1.17754463e+02, -3.16223907e+01],\n         [ 3.76612473e+01, -8.97370453e+01, -3.97191772e+01],\n         [-2.61185455e+01,  6.32993851e+01, -3.06883316e+01],\n         [ 3.04121780e+01, -1.16728668e+01,  7.58296890e+01],\n         [ 4.12126083e+01, -1.15825172e+02,  5.58303452e+01],\n         [ 1.38355835e+02, -9.14369431e+01,  4.43080978e+01],\n         [ 1.86622314e+01,  6.27921066e+01,  1.27715569e+02],\n         [ 7.94645004e+01, -4.59364853e+01, -4.19633102e+01],\n         [-3.46122360e+01,  3.14355087e+01, -1.57081604e-01]],\n\n        [[-9.10949173e+01, -8.40447388e+01, -3.94182053e+01],\n         [ 1.30846802e+02,  4.46389999e+01,  3.89782333e+01],\n         [-2.98412476e+01, -1.62210693e+01, -7.17254791e+01],\n         [ 1.41481293e+02,  1.34709656e+02,  6.58545914e+01],\n         [ 3.33187637e+01,  8.92520676e+01, -9.97536163e+01],\n         [-5.47892876e+01, -7.69419098e+01, -2.48281860e+01],\n         [ 2.05559921e+01,  5.87120743e+01,  9.64056320e+01],\n         [-6.24333229e+01, -6.39943047e+01,  1.11841866e+02],\n         [ 8.59386368e+01, -1.77411728e+01, -4.39032288e+01],\n         [-5.54943161e+01, -6.14186783e+01,  1.01348305e+02]]],\n\n\n       [[[-9.65303574e+01, -8.48533859e+01, -5.88985748e+01],\n         [-8.39987946e+00,  1.08059441e+02,  1.73599777e+01],\n         [ 8.93669205e+01, -5.90444145e+01,  4.69222031e+01],\n         [-7.77559738e+01, -8.58400421e+01,  2.23095474e+01],\n         [ 1.23189156e+02, -1.08114471e+02,  9.32680893e+01],\n         [-8.79244308e+01, -7.78657074e+01,  1.30545532e+02],\n         [ 1.46747772e+02,  7.50930252e+01,  9.19248199e+00],\n         [ 7.77740479e-02, -4.13009109e+01,  3.51497879e+01],\n         [ 1.54565201e+01,  2.88551865e+01, -7.35573425e+01],\n         [ 2.85056229e+01, -2.71762466e+01, -9.13923492e+01]],\n\n        [[-4.26252861e+01,  1.06789932e+01, -1.66567535e+01],\n         [-7.22521133e+01, -3.42544098e+01,  7.08064499e+01],\n         [ 1.46044800e+02,  7.51513443e+01, -7.39326172e+01],\n         [ 8.86308365e+01,  4.34706345e+01,  3.93561478e+01],\n         [-3.98910980e+01,  5.98129501e+01, -9.20215759e+01],\n         [ 1.14207664e+02,  5.51721420e+01,  7.16864243e+01],\n         [ 1.45090973e+02,  1.24677971e+02, -1.16409546e+02],\n         [-3.36978683e+01, -1.75513458e+01,  7.21323471e+01],\n         [ 1.80971756e+01,  4.24051666e+00,  1.08269066e+02],\n         [ 7.18063354e+00,  6.76008072e+01,  7.47857895e+01]],\n\n        [[ 2.02351151e+01, -1.68215637e+01, -4.09216995e+01],\n         [-1.03691406e+02, -6.54242783e+01,  7.24291611e+01],\n         [ 1.46363495e+02, -6.48246460e+01, -1.10248795e+02],\n         [ 7.06017532e+01, -6.13006973e+01, -7.97579803e+01],\n         [ 8.81908035e+01, -3.50148392e+01,  1.16680412e+02],\n         [ 8.50758743e+01, -3.39500656e+01, -1.12632759e+02],\n         [ 8.35459366e+01, -5.46456299e+01,  1.03041191e+02],\n         [ 8.14116135e+01,  4.87482529e+01, -3.49520569e+01],\n         [ 4.14038010e+01,  7.76162643e+01, -9.22340698e+01],\n         [ 1.03826439e+02, -2.79233551e+01, -1.05180756e+02]],\n\n        [[ 1.32812439e+02,  6.20484390e+01, -8.02578049e+01],\n         [ 2.26441040e+01,  7.43789749e+01,  5.94333649e+00],\n         [-3.94312363e+01, -6.64548492e+01,  5.48610687e+00],\n         [ 1.17817726e+02, -8.71207428e+01, -8.30405731e+01],\n         [ 2.37127991e+01, -4.39402237e+01,  9.90690231e+01],\n         [-3.95593414e+01,  4.34204330e+01,  1.26100227e+02],\n         [-8.67801514e+01, -1.26763916e+00, -5.90462036e+01],\n         [ 1.35281952e+02,  1.16622871e+02,  8.07358627e+01],\n         [-1.03304718e+02,  8.28998642e+01, -2.15816803e+01],\n         [-1.38725662e+01,  8.52995987e+01,  1.53267746e+01]],\n\n        [[-1.48812103e+00, -6.10666580e+01,  1.01406532e+02],\n         [ 1.23713783e+02,  2.52411728e+01, -9.42325211e+01],\n         [ 7.77632141e+00, -9.03052521e+01, -1.18747429e+02],\n         [-2.52375793e+00, -8.10162430e+01,  1.25849281e+02],\n         [-4.49692307e+01,  9.48141479e+00, -9.44022064e+01],\n         [ 3.88233185e+00,  1.19199944e+02,  1.09732056e+00],\n         [-3.40559158e+01,  1.00332283e+02, -8.52450867e+01],\n         [ 6.55830917e+01, -8.21674042e+01, -1.84901047e+01],\n         [-7.61878586e+01,  2.07620239e+00, -1.09128189e+01],\n         [-9.57100067e+01,  2.48198013e+01, -9.99611664e+01]],\n\n        [[ 3.48402634e+01,  1.25860062e+01, -1.17450577e+02],\n         [-9.25715485e+01,  7.93910294e+01, -1.09336945e+02],\n         [ 1.47515900e+02,  3.52622757e+01, -5.19661713e+01],\n         [ 7.09186478e+01,  1.21853554e+02,  7.28919754e+01],\n         [ 6.87957077e+01,  8.31222534e-01,  1.30836487e+02],\n         [ 7.02227249e+01,  3.85008774e+01,  1.27592049e+02],\n         [-2.54638824e+01, -1.02719543e+02, -6.30165291e+01],\n         [-7.36748047e+01,  1.94024887e+01, -7.52753143e+01],\n         [ 1.24932861e+01,  4.91220779e+01,  3.88855515e+01],\n         [ 7.92495193e+01,  1.09262611e+02,  2.80069962e+01]],\n\n        [[ 2.04397812e+01,  3.71681290e+01, -2.59727249e+01],\n         [ 9.39835587e+01,  4.07086945e+00,  1.12759575e+02],\n         [ 1.43678009e+02,  4.11005630e+01,  9.70447311e+01],\n         [ 4.52877426e+01, -7.22565308e+01, -8.84243011e+01],\n         [-2.48826981e+01,  9.58875809e+01,  9.44759445e+01],\n         [ 1.25341255e+02, -1.03296234e+02, -4.48768005e+01],\n         [-6.05778999e+01, -8.52294159e+00,  1.13831581e+02],\n         [ 1.10106071e+02,  5.76681595e+01, -1.04582840e+02],\n         [-2.36147079e+01,  9.86085587e+01, -9.68121338e+00],\n         [ 2.42312851e+01, -6.47454758e+01, -6.72153931e+01]],\n\n        [[ 1.32913269e+02, -8.35416412e+00, -1.07033676e+02],\n         [ 9.59522934e+01, -1.02647430e+02,  6.45389557e+00],\n         [ 1.35711273e+02,  1.14622856e+02,  7.13351822e+01],\n         [-4.84006767e+01, -2.41824265e+01, -7.25689240e+01],\n         [ 1.20095848e+02,  1.12008232e+02, -4.99015045e+00],\n         [ 4.84819870e+01,  1.16071800e+02, -1.13230003e+02],\n         [ 3.85463943e+01,  7.77637405e+01,  4.78331680e+01],\n         [-9.01924973e+01,  9.11061020e+01, -9.79040222e+01],\n         [-1.04412308e+01, -1.04805450e+01,  2.04118729e+01],\n         [ 5.97922287e+01,  1.19746956e+02,  7.23062363e+01]],\n\n        [[ 6.46553421e+01, -3.31426926e+01,  8.39112930e+01],\n         [-3.98614731e+01, -4.34243774e+00, -6.74873505e+01],\n         [ 2.72364578e+01, -1.39508820e+01,  7.41553574e+01],\n         [-2.37915039e-01,  1.31855286e+02,  5.87630692e+01],\n         [-6.46182938e+01, -2.29589005e+01, -3.55261459e+01],\n         [ 1.05148949e+02,  1.53998032e+01, -7.56717072e+01],\n         [ 4.36937790e+01, -3.37969971e+00, -1.20641319e+02],\n         [ 1.21470131e+02, -2.78602295e+01,  1.30255463e+02],\n         [ 6.76972580e+01,  2.91456070e+01, -4.80900803e+01],\n         [-7.42758255e+01, -8.96128159e+01, -2.44460983e+01]],\n\n        [[-3.12135239e+01,  6.84153748e+00,  4.96995468e+01],\n         [-3.27082138e+01,  4.21058655e+00,  8.07732315e+01],\n         [ 2.97440414e+01, -5.86180916e+01, -9.33631897e-01],\n         [-6.03675537e+01,  9.16306839e+01,  2.60536270e+01],\n         [-4.46846466e+01,  8.39198837e+01,  3.84161377e+00],\n         [ 1.14836906e+02,  5.63169479e+01,  2.74459152e+01],\n         [ 8.73942795e+01,  9.02792358e+00, -1.21619270e+02],\n         [-1.23265762e+01, -7.65016785e+01, -7.48408356e+01],\n         [-2.43093567e+01,  5.89722977e+01, -8.15295639e+01],\n         [-6.02232208e+01, -5.00567703e+01, -1.16748573e+02]]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfa9a30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 32, 252,  28],\n         [168, 194,  50],\n         [ 94, 214, 195],\n         [148, 235,  10],\n         [187,  69,  45],\n         [149,  45, 215],\n         [ 54,  50, 248],\n         [177, 140, 166],\n         [132, 213,  71],\n         [ 16, 248, 183]],\n\n        [[131,  93, 171],\n         [174,  51, 105],\n         [193,  29, 141],\n         [ 17, 254, 232],\n         [ 69,  67,  35],\n         [ 18, 130, 252],\n         [114, 253, 248],\n         [224,  87, 196],\n         [154,   6, 156],\n         [209,  54,  23]],\n\n        [[ 10, 181, 163],\n         [146, 191, 178],\n         [118, 112, 125],\n         [239, 191, 230],\n         [ 82,  41,  74],\n         [144, 203, 141],\n         [ 80,  86, 170],\n         [ 77, 113, 126],\n         [ 66, 181, 114],\n         [144, 174,   5]],\n\n        [[  7,  77, 188],\n         [191,  59,  83],\n         [141, 220, 126],\n         [ 59, 144,  86],\n         [241,  96, 151],\n         [  4,   9, 150],\n         [122,  45,  48],\n         [ 39, 179,  98],\n         [ 62, 187, 188],\n         [177,  75, 209]],\n\n        [[193, 163, 169],\n         [232, 122,  56],\n         [ 16, 240,  50],\n         [ 87, 172, 208],\n         [144, 235,  85],\n         [ 40, 177, 206],\n         [196,  26, 131],\n         [194, 202, 189],\n         [  9, 144,  77],\n         [210,  18, 206]],\n\n        [[134, 112, 203],\n         [ 97,  59,  44],\n         [148, 246, 131],\n         [218, 211, 230],\n         [125, 212, 192],\n         [213, 234, 127],\n         [150, 221, 155],\n         [246, 152, 173],\n         [ 21,  56,  94],\n         [216,  35, 222]],\n\n        [[163, 165, 244],\n         [136, 253, 243],\n         [187, 187, 250],\n         [ 43,  10, 105],\n         [123, 203, 251],\n         [130, 203, 179],\n         [159, 218,  12],\n         [126,  35,  19],\n         [ 97,  58,  60],\n         [161, 143, 166]],\n\n        [[125,  65, 182],\n         [ 62, 103,  17],\n         [179, 111,  14],\n         [ 45,  24, 121],\n         [233, 162, 212],\n         [ 47, 122, 206],\n         [ 74, 188,   0],\n         [247, 223, 237],\n         [ 40, 248, 136],\n         [100, 230, 234]],\n\n        [[245, 170,  20],\n         [ 92, 234,  94],\n         [ 83,  27, 141],\n         [ 92, 180,  77],\n         [199, 105, 134],\n         [179,   0, 145],\n         [167,  25, 242],\n         [251, 179, 122],\n         [ 81,  70, 183],\n         [123, 148,  69]],\n\n        [[ 84,  32,  12],\n         [162, 161, 234],\n         [ 51, 100,  74],\n         [189, 251, 245],\n         [ 23, 206, 137],\n         [ 98,  39,  49],\n         [220, 175, 124],\n         [235,  52,  41],\n         [ 79,  99, 189],\n         [225,  55,  48]]],\n\n\n       [[[ 64,  31,   7],\n         [141, 224,  95],\n         [170,  57, 193],\n         [145,  30,  26],\n         [216,   8, 227],\n         [254,  38,  16],\n         [132, 191, 250],\n         [158,  75, 104],\n         [ 50, 145, 119],\n         [ 32,  89, 132]],\n\n        [[107, 127,  61],\n         [194,  82,  31],\n         [ 49, 191, 249],\n         [163, 160, 192],\n         [ 31, 176,  64],\n         [195, 171, 218],\n         [  7, 241, 249],\n         [195,  99,  70],\n         [231, 121, 122],\n         [198, 184, 111]],\n\n        [[ 82,  99, 124],\n         [196,  51,   0],\n         [ 13,  51, 250],\n         [ 43,  55, 174],\n         [240,  81, 192],\n         [ 11,  82, 189],\n         [226,  62, 187],\n         [ 88, 165, 185],\n         [ 31, 194, 145],\n         [ 18,  88, 207]],\n\n        [[ 43, 178, 236],\n         [129, 191, 126],\n         [129,  50,  64],\n         [ 40,  29, 221],\n         [222,  72, 127],\n         [249, 160,  64],\n         [ 64, 115,  17],\n         [204, 233, 239],\n         [102, 199,   0],\n         [139, 202,  90]],\n\n        [[225,  55, 102],\n         [ 29, 142, 227],\n         [  4,  26, 111],\n         [249,  35, 101],\n         [ 29, 126,  58],\n         [124, 235, 107],\n         [ 38, 217,  69],\n         [105,  34, 169],\n         [112, 118,  27],\n         [ 23, 141,   8]],\n\n        [[  6, 129, 138],\n         [ 14, 196,  11],\n         [ 71, 152, 251],\n         [196, 238, 174],\n         [254, 117, 172],\n         [251, 155, 174],\n         [ 60,  14,  78],\n         [ 48, 136,  30],\n         [162, 165, 116],\n         [151, 226, 183]],\n\n        [[ 97, 153, 124],\n         [236, 120, 197],\n         [220, 157, 247],\n         [ 35,  44, 149],\n         [218, 212,  79],\n         [ 78,  13, 229],\n         [237, 108,  43],\n         [ 19, 174, 214],\n         [113, 215,  80],\n         [ 56,  52, 128]],\n\n        [[ 16, 108, 236],\n         [130,  14, 199],\n         [195, 231, 239],\n         [ 51,  92,  55],\n         [118, 228, 224],\n         [ 10, 232, 152],\n         [171, 194, 142],\n         [ 25, 207,  13],\n         [144, 106,  93],\n         [195, 236, 163]],\n\n        [[207,  83, 168],\n         [ 56, 112,  64],\n         [197, 102, 131],\n         [182, 248, 103],\n         [ 88,  93,  39],\n         [ 48, 132, 209],\n         [  3, 113, 147],\n         [253,  88, 225],\n         [ 75, 145, 171],\n         [ 99,  27,  29]],\n\n        [[173, 123,  72],\n         [204, 120,  71],\n         [122,  58, 133],\n         [149, 208,  43],\n         [127, 200,  59],\n         [151, 173, 218],\n         [  2, 125, 191],\n         [ 48,  40,  91],\n         [ 42, 175,  79],\n         [  6,  66,  43]]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cf86440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-7.5939003e+01,  1.3522101e+02, -9.1680000e+01],\n         [-5.3939003e+01,  7.7221001e+01,  4.4320000e+01],\n         [ 9.1060997e+01,  9.7221001e+01, -2.9680000e+01],\n         [-9.3939003e+01,  1.1822100e+02,  2.4320000e+01],\n         [-5.8939003e+01, -4.7778999e+01,  6.3320000e+01],\n         [ 1.1106100e+02, -7.1778999e+01,  2.5320000e+01],\n         [ 1.4406100e+02, -6.6778999e+01, -6.9680000e+01],\n         [ 6.2060997e+01,  2.3221001e+01,  5.3320000e+01],\n         [-3.2939003e+01,  9.6221001e+01,  8.3199997e+00],\n         [ 7.9060997e+01,  1.3122101e+02, -1.0768000e+02]],\n\n        [[ 6.7060997e+01, -2.3778999e+01,  7.3199997e+00],\n         [ 1.0609970e+00, -6.5778999e+01,  5.0320000e+01],\n         [ 3.7060997e+01, -8.7778999e+01,  6.9320000e+01],\n         [ 1.2806100e+02,  1.3722101e+02, -1.0668000e+02],\n         [-6.8939003e+01, -4.9778999e+01, -5.4680000e+01],\n         [ 1.4806100e+02,  1.3221001e+01, -1.0568000e+02],\n         [ 1.4406100e+02,  1.3622101e+02, -9.6800003e+00],\n         [ 9.2060997e+01, -2.9778999e+01,  1.0032000e+02],\n         [ 5.2060997e+01, -1.1077900e+02,  3.0320000e+01],\n         [-8.0939003e+01, -6.2778999e+01,  8.5320000e+01]],\n\n        [[ 5.9060997e+01,  6.4221001e+01, -1.1368000e+02],\n         [ 7.4060997e+01,  7.4221001e+01,  2.2320000e+01],\n         [ 2.1060997e+01, -4.7789993e+00, -5.6800003e+00],\n         [ 1.2606100e+02,  7.4221001e+01,  1.1532000e+02],\n         [-2.9939003e+01, -7.5778999e+01, -4.1680000e+01],\n         [ 3.7060997e+01,  8.6221001e+01,  2.0320000e+01],\n         [ 6.6060997e+01, -3.0778999e+01, -4.3680000e+01],\n         [ 2.2060997e+01, -3.7789993e+00, -4.6680000e+01],\n         [ 1.0060997e+01,  6.4221001e+01, -5.7680000e+01],\n         [-9.8939003e+01,  5.7221001e+01,  2.0320000e+01]],\n\n        [[ 8.4060997e+01, -3.9778999e+01, -1.1668000e+02],\n         [-2.0939003e+01, -5.7778999e+01,  6.7320000e+01],\n         [ 2.2060997e+01,  1.0322100e+02,  1.7320000e+01],\n         [-1.7939003e+01,  2.7221001e+01, -6.4680000e+01],\n         [ 4.7060997e+01, -2.0778999e+01,  1.1732000e+02],\n         [ 4.6060997e+01, -1.0777900e+02, -1.1968000e+02],\n         [-5.5939003e+01, -7.1778999e+01, -1.6800003e+00],\n         [-5.9390030e+00,  6.2221001e+01, -8.4680000e+01],\n         [ 8.4060997e+01,  7.0221001e+01, -6.1680000e+01],\n         [ 1.0506100e+02, -4.1778999e+01,  5.3320000e+01]],\n\n        [[ 6.5060997e+01,  4.6221001e+01,  6.9320000e+01],\n         [-4.7939003e+01,  5.2210007e+00,  1.0832000e+02],\n         [-5.3939003e+01,  1.2322100e+02, -1.0768000e+02],\n         [ 1.0406100e+02,  5.5221001e+01, -3.6680000e+01],\n         [-1.8939003e+01,  1.1822100e+02,  2.0320000e+01],\n         [ 1.0206100e+02,  6.0221001e+01, -8.3680000e+01],\n         [ 2.7060997e+01, -9.0778999e+01,  7.2320000e+01],\n         [ 8.5060997e+01,  8.5221001e+01,  7.0320000e+01],\n         [-2.6939003e+01,  2.7221001e+01, -1.1468000e+02],\n         [ 1.0206100e+02, -9.8778999e+01,  8.6320000e+01]],\n\n        [[ 9.9060997e+01, -4.7789993e+00,  1.0320000e+01],\n         [-5.9939003e+01, -5.7778999e+01, -2.6680000e+01],\n         [ 2.7060997e+01,  1.2922101e+02,  2.4320000e+01],\n         [ 1.2606100e+02,  9.4221001e+01,  9.4320000e+01],\n         [ 8.8060997e+01,  9.5221001e+01,  1.3199997e+00],\n         [ 2.3060997e+01,  1.1722100e+02,  8.9320000e+01],\n         [ 5.1060997e+01,  1.0422100e+02,  2.6320000e+01],\n         [ 6.9060997e+01,  3.5221001e+01,  1.2232000e+02],\n         [-9.9390030e+00, -6.0778999e+01, -1.0268000e+02],\n         [ 1.1806100e+02, -8.1778999e+01,  9.2320000e+01]],\n\n        [[ 1.4006100e+02,  4.8221001e+01,  3.9320000e+01],\n         [ 1.3906100e+02,  1.3622101e+02,  1.2320000e+01],\n         [ 1.4606100e+02,  7.0221001e+01,  6.3320000e+01],\n         [ 1.0609970e+00, -1.0677900e+02, -8.0680000e+01],\n         [ 1.4706100e+02,  8.6221001e+01, -6.8000031e-01],\n         [ 7.5060997e+01,  8.6221001e+01,  6.3199997e+00],\n         [-9.1939003e+01,  1.0122100e+02,  3.5320000e+01],\n         [-8.4939003e+01, -8.1778999e+01,  2.3199997e+00],\n         [-4.3939003e+01, -5.8778999e+01, -2.6680000e+01],\n         [ 6.2060997e+01,  2.6221001e+01,  3.7320000e+01]],\n\n        [[ 7.8060997e+01, -5.1778999e+01,  1.3199997e+00],\n         [-8.6939003e+01, -1.3778999e+01, -6.1680000e+01],\n         [-8.9939003e+01, -5.7789993e+00,  5.5320000e+01],\n         [ 1.7060997e+01, -9.2778999e+01, -7.8680000e+01],\n         [ 1.0806100e+02,  4.5221001e+01,  1.0932000e+02],\n         [ 1.0206100e+02,  5.2210007e+00, -7.6680000e+01],\n         [-1.0393900e+02,  7.1221001e+01, -4.9680000e+01],\n         [ 1.3306100e+02,  1.0622100e+02,  1.2332000e+02],\n         [ 3.2060997e+01,  1.3122101e+02, -8.3680000e+01],\n         [ 1.3006100e+02,  1.1322100e+02, -2.3680000e+01]],\n\n        [[-8.3939003e+01,  5.3221001e+01,  1.2132000e+02],\n         [-9.9390030e+00,  1.1722100e+02, -3.1680000e+01],\n         [ 3.7060997e+01, -8.9778999e+01, -4.0680000e+01],\n         [-2.6939003e+01,  6.3221001e+01, -3.1680000e+01],\n         [ 3.0060997e+01, -1.1778999e+01,  7.5320000e+01],\n         [ 4.1060997e+01, -1.1677900e+02,  5.5320000e+01],\n         [ 1.3806100e+02, -9.1778999e+01,  4.3320000e+01],\n         [ 1.8060997e+01,  6.2221001e+01,  1.2732000e+02],\n         [ 7.9060997e+01, -4.6778999e+01, -4.2680000e+01],\n         [-3.4939003e+01,  3.1221001e+01, -6.8000031e-01]],\n\n        [[-9.1939003e+01, -8.4778999e+01, -3.9680000e+01],\n         [ 1.3006100e+02,  4.4221001e+01,  3.8320000e+01],\n         [-2.9939003e+01, -1.6778999e+01, -7.2680000e+01],\n         [ 1.4106100e+02,  1.3422101e+02,  6.5320000e+01],\n         [ 3.3060997e+01,  8.9221001e+01, -1.0068000e+02],\n         [-5.4939003e+01, -7.7778999e+01, -2.5680000e+01],\n         [ 2.0060997e+01,  5.8221001e+01,  9.6320000e+01],\n         [-6.2939003e+01, -6.4778999e+01,  1.1132000e+02],\n         [ 8.5060997e+01, -1.7778999e+01, -4.4680000e+01],\n         [-5.5939003e+01, -6.1778999e+01,  1.0132000e+02]]],\n\n\n       [[[-9.6939003e+01, -8.5778999e+01, -5.9680000e+01],\n         [-8.9390030e+00,  1.0722100e+02,  1.7320000e+01],\n         [ 8.9060997e+01, -5.9778999e+01,  4.6320000e+01],\n         [-7.7939003e+01, -8.6778999e+01,  2.1320000e+01],\n         [ 1.2306100e+02, -1.0877900e+02,  9.2320000e+01],\n         [-8.7939003e+01, -7.8778999e+01,  1.3032001e+02],\n         [ 1.4606100e+02,  7.4221001e+01,  8.3199997e+00],\n         [ 6.0997009e-02, -4.1778999e+01,  3.4320000e+01],\n         [ 1.5060997e+01,  2.8221001e+01, -7.3680000e+01],\n         [ 2.8060997e+01, -2.7778999e+01, -9.1680000e+01]],\n\n        [[-4.2939003e+01,  1.0221001e+01, -1.6680000e+01],\n         [-7.2939003e+01, -3.4778999e+01,  7.0320000e+01],\n         [ 1.4506100e+02,  7.4221001e+01, -7.4680000e+01],\n         [ 8.8060997e+01,  4.3221001e+01,  3.9320000e+01],\n         [-3.9939003e+01,  5.9221001e+01, -9.2680000e+01],\n         [ 1.1406100e+02,  5.4221001e+01,  7.1320000e+01],\n         [ 1.4506100e+02,  1.2422100e+02, -1.1668000e+02],\n         [-3.3939003e+01, -1.7778999e+01,  7.1320000e+01],\n         [ 1.8060997e+01,  4.2210007e+00,  1.0732000e+02],\n         [ 7.0609970e+00,  6.7221001e+01,  7.4320000e+01]],\n\n        [[ 2.0060997e+01, -1.7778999e+01, -4.1680000e+01],\n         [-1.0393900e+02, -6.5778999e+01,  7.2320000e+01],\n         [ 1.4606100e+02, -6.5778999e+01, -1.1068000e+02],\n         [ 7.0060997e+01, -6.1778999e+01, -8.0680000e+01],\n         [ 8.8060997e+01, -3.5778999e+01,  1.1632000e+02],\n         [ 8.5060997e+01, -3.4778999e+01, -1.1268000e+02],\n         [ 8.3060997e+01, -5.4778999e+01,  1.0232000e+02],\n         [ 8.1060997e+01,  4.8221001e+01, -3.5680000e+01],\n         [ 4.1060997e+01,  7.7221001e+01, -9.2680000e+01],\n         [ 1.0306100e+02, -2.8778999e+01, -1.0568000e+02]],\n\n        [[ 1.3206100e+02,  6.1221001e+01, -8.0680000e+01],\n         [ 2.2060997e+01,  7.4221001e+01,  5.3199997e+00],\n         [-3.9939003e+01, -6.6778999e+01,  5.3199997e+00],\n         [ 1.1706100e+02, -8.7778999e+01, -8.3680000e+01],\n         [ 2.3060997e+01, -4.4778999e+01,  9.8320000e+01],\n         [-3.9939003e+01,  4.3221001e+01,  1.2532000e+02],\n         [-8.6939003e+01, -1.7789993e+00, -5.9680000e+01],\n         [ 1.3506100e+02,  1.1622100e+02,  8.0320000e+01],\n         [-1.0393900e+02,  8.2221001e+01, -2.1680000e+01],\n         [-1.3939003e+01,  8.5221001e+01,  1.5320000e+01]],\n\n        [[-1.9390030e+00, -6.1778999e+01,  1.0132000e+02],\n         [ 1.2306100e+02,  2.5221001e+01, -9.4680000e+01],\n         [ 7.0609970e+00, -9.0778999e+01, -1.1968000e+02],\n         [-2.9390030e+00, -8.1778999e+01,  1.2532000e+02],\n         [-4.5939003e+01,  9.2210007e+00, -9.4680000e+01],\n         [ 3.0609970e+00,  1.1822100e+02,  3.1999969e-01],\n         [-3.4939003e+01,  1.0022100e+02, -8.5680000e+01],\n         [ 6.5060997e+01, -8.2778999e+01, -1.8680000e+01],\n         [-7.6939003e+01,  1.2210007e+00, -1.1680000e+01],\n         [-9.5939003e+01,  2.4221001e+01, -1.0068000e+02]],\n\n        [[ 3.4060997e+01,  1.2221001e+01, -1.1768000e+02],\n         [-9.2939003e+01,  7.9221001e+01, -1.0968000e+02],\n         [ 1.4706100e+02,  3.5221001e+01, -5.2680000e+01],\n         [ 7.0060997e+01,  1.2122100e+02,  7.2320000e+01],\n         [ 6.8060997e+01,  2.2100067e-01,  1.3032001e+02],\n         [ 7.0060997e+01,  3.8221001e+01,  1.2732000e+02],\n         [-2.5939003e+01, -1.0277900e+02, -6.3680000e+01],\n         [-7.3939003e+01,  1.9221001e+01, -7.5680000e+01],\n         [ 1.2060997e+01,  4.8221001e+01,  3.8320000e+01],\n         [ 7.9060997e+01,  1.0922100e+02,  2.7320000e+01]],\n\n        [[ 2.0060997e+01,  3.6221001e+01, -2.6680000e+01],\n         [ 9.3060997e+01,  3.2210007e+00,  1.1232000e+02],\n         [ 1.4306100e+02,  4.0221001e+01,  9.6320000e+01],\n         [ 4.5060997e+01, -7.2778999e+01, -8.8680000e+01],\n         [-2.4939003e+01,  9.5221001e+01,  9.4320000e+01],\n         [ 1.2506100e+02, -1.0377900e+02, -4.5680000e+01],\n         [-6.0939003e+01, -8.7789993e+00,  1.1332000e+02],\n         [ 1.1006100e+02,  5.7221001e+01, -1.0468000e+02],\n         [-2.3939003e+01,  9.8221001e+01, -1.0680000e+01],\n         [ 2.4060997e+01, -6.4778999e+01, -6.7680000e+01]],\n\n        [[ 1.3206100e+02, -8.7789993e+00, -1.0768000e+02],\n         [ 9.5060997e+01, -1.0277900e+02,  6.3199997e+00],\n         [ 1.3506100e+02,  1.1422100e+02,  7.1320000e+01],\n         [-4.8939003e+01, -2.4778999e+01, -7.2680000e+01],\n         [ 1.2006100e+02,  1.1122100e+02, -5.6800003e+00],\n         [ 4.8060997e+01,  1.1522100e+02, -1.1368000e+02],\n         [ 3.8060997e+01,  7.7221001e+01,  4.7320000e+01],\n         [-9.0939003e+01,  9.0221001e+01, -9.8680000e+01],\n         [-1.0939003e+01, -1.0778999e+01,  2.0320000e+01],\n         [ 5.9060997e+01,  1.1922100e+02,  7.1320000e+01]],\n\n        [[ 6.4060997e+01, -3.3778999e+01,  8.3320000e+01],\n         [-3.9939003e+01, -4.7789993e+00, -6.7680000e+01],\n         [ 2.7060997e+01, -1.4778999e+01,  7.3320000e+01],\n         [-9.3900299e-01,  1.3122101e+02,  5.8320000e+01],\n         [-6.4939003e+01, -2.3778999e+01, -3.5680000e+01],\n         [ 1.0506100e+02,  1.5221001e+01, -7.5680000e+01],\n         [ 4.3060997e+01, -3.7789993e+00, -1.2068000e+02],\n         [ 1.2106100e+02, -2.8778999e+01,  1.2932001e+02],\n         [ 6.7060997e+01,  2.8221001e+01, -4.8680000e+01],\n         [-7.4939003e+01, -8.9778999e+01, -2.4680000e+01]],\n\n        [[-3.1939003e+01,  6.2210007e+00,  4.9320000e+01],\n         [-3.2939003e+01,  3.2210007e+00,  8.0320000e+01],\n         [ 2.9060997e+01, -5.8778999e+01, -1.6800003e+00],\n         [-6.0939003e+01,  9.1221001e+01,  2.5320000e+01],\n         [-4.4939003e+01,  8.3221001e+01,  3.3199997e+00],\n         [ 1.1406100e+02,  5.6221001e+01,  2.7320000e+01],\n         [ 8.7060997e+01,  8.2210007e+00, -1.2168000e+02],\n         [-1.2939003e+01, -7.6778999e+01, -7.5680000e+01],\n         [-2.4939003e+01,  5.8221001e+01, -8.1680000e+01],\n         [-6.0939003e+01, -5.0778999e+01, -1.1768000e+02]]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfa9c10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[3.20198849e+01, 1.68880645e+02, 9.44170725e+01,\n          1.48851117e+02, 1.87093979e+02, 1.49321279e+02,\n          5.44644447e+01, 1.77466279e+02, 1.32055632e+02,\n          1.65160662e+01],\n         [1.31995213e+02, 1.74089650e+02, 1.93661990e+02,\n          1.74495757e+01, 6.93374555e+01, 1.83775350e+01,\n          1.14116192e+02, 2.24438282e+02, 1.54303025e+02,\n          2.09300193e+02],\n         [1.00052435e+01, 1.46264394e+02, 1.18308764e+02,\n          2.39597169e+02, 8.22668968e+01, 1.44787074e+02,\n          8.05922976e+01, 7.71494051e+01, 6.61091985e+01,\n          1.44003093e+02],\n         [7.01444940e+00, 1.91871731e+02, 1.41173468e+02,\n          5.96978099e+01, 2.41787468e+02, 4.94823471e+00,\n          1.22193037e+02, 3.93813176e+01, 6.27195694e+01,\n          1.77392305e+02],\n         [1.93014831e+02, 2.32820731e+02, 1.68180893e+01,\n          8.73731571e+01, 1.44020237e+02, 4.06444315e+01,\n          1.96365712e+02, 1.94361335e+02, 9.43304206e+00,\n          2.10369262e+02],\n         [1.34154460e+02, 9.73658574e+01, 1.48217107e+02,\n          2.18112130e+02, 1.25192370e+02, 2.13981721e+02,\n          1.50748158e+02, 2.46758181e+02, 2.13309118e+01,\n          2.16975770e+02],\n         [1.63260771e+02, 1.36369764e+02, 1.87371765e+02,\n          4.35350729e+01, 1.23090628e+02, 1.30641826e+02,\n          1.59536718e+02, 1.26417650e+02, 9.75218658e+01,\n          1.61219320e+02],\n         [1.25123988e+02, 6.28461513e+01, 1.79592854e+02,\n          4.57734547e+01, 2.33467948e+02, 4.77166013e+01,\n          7.48310659e+01, 2.47115520e+02, 4.08714146e+01,\n          1.00334476e+02],\n         [2.45601046e+02, 9.20576110e+01, 8.39608213e+01,\n          9.29916694e+01, 1.99509692e+02, 1.79510345e+02,\n          1.67988092e+02, 2.51395563e+02, 8.17166935e+01,\n          1.23522917e+02],\n         [8.42617976e+01, 1.62658233e+02, 5.19545155e+01,\n          1.89534594e+02, 2.39263852e+01, 9.88518148e+01,\n          2.20085636e+02, 2.35521865e+02, 7.97767688e+01,\n          2.25028308e+02]],\n\n        [[2.52353826e+02, 1.94225784e+02, 2.14774919e+02,\n          2.35636905e+02, 6.96875127e+01, 4.57196800e+01,\n          5.04853897e+01, 1.40450639e+02, 2.13017744e+02,\n          2.48307170e+02],\n         [9.31265178e+01, 5.14481407e+01, 2.93401668e+01,\n          2.54777334e+02, 6.72591597e+01, 1.30577836e+02,\n          2.53285208e+02, 8.74539792e+01, 6.46784774e+00,\n          5.43220389e+01],\n         [1.81957757e+02, 1.91264589e+02, 1.12611995e+02,\n          1.91130581e+02, 4.12487164e+01, 2.03319377e+02,\n          8.65506720e+01, 1.13661497e+02, 1.81752449e+02,\n          1.74805124e+02],\n         [7.74354605e+01, 5.99115096e+01, 2.20598478e+02,\n          1.44299577e+02, 9.68403991e+01, 9.93978652e+00,\n          4.57055013e+01, 1.79019018e+02, 1.87990712e+02,\n          7.54463236e+01],\n         [1.63725423e+02, 1.22285263e+02, 2.40170910e+02,\n          1.72252652e+02, 2.35730425e+02, 1.77680930e+02,\n          2.60222433e+01, 2.02998783e+02, 1.44864807e+02,\n          1.88086976e+01],\n         [1.12335084e+02, 5.94213500e+01, 2.46024996e+02,\n          2.11462507e+02, 2.12373391e+02, 2.34387898e+02,\n          2.21745728e+02, 1.52199948e+02, 5.68028396e+01,\n          3.54980717e+01],\n         [1.65606194e+02, 2.53624129e+02, 1.87727167e+02,\n          1.00389565e+01, 2.03932524e+02, 2.03381886e+02,\n          2.18128674e+02, 3.57905220e+01, 5.82709864e+01,\n          1.43836174e+02],\n         [6.58825136e+01, 1.03941422e+02, 1.11653178e+02,\n          2.48174361e+01, 1.62961223e+02, 1.22780394e+02,\n          1.88000093e+02, 2.23777360e+02, 2.48590882e+02,\n          2.30993720e+02],\n         [1.70970767e+02, 2.34533461e+02, 2.70419493e+01,\n          1.80078377e+02, 1.05106135e+02, 9.53828313e-01,\n          2.53420569e+01, 1.79571113e+02, 7.08425104e+01,\n          1.48214515e+02],\n         [3.27342565e+01, 1.61418005e+02, 1.00557928e+02,\n          2.51488642e+02, 2.06031067e+02, 3.98370901e+01,\n          1.75491069e+02, 5.27846955e+01, 9.90378246e+01,\n          5.53603217e+01]],\n\n        [[2.82751718e+01, 5.09713399e+01, 1.95790467e+02,\n          1.03969746e+01, 4.53962801e+01, 2.15469242e+02,\n          2.48032760e+02, 1.66697393e+02, 7.19917886e+01,\n          1.83990686e+02],\n         [1.71617276e+02, 1.05191520e+02, 1.41592535e+02,\n          2.32647429e+02, 3.51057182e+01, 2.52179943e+02,\n          2.48063668e+02, 1.96742733e+02, 1.56086951e+02,\n          2.32408278e+01],\n         [1.63924694e+02, 1.78587650e+02, 1.25869876e+02,\n          2.30587383e+02, 7.45728060e+01, 1.41935229e+02,\n          1.70810369e+02, 1.26778862e+02, 1.14362917e+02,\n          5.66817993e+00],\n         [1.88315159e+02, 8.33475885e+01, 1.26208591e+02,\n          8.62226320e+01, 1.51637355e+02, 1.50444110e+02,\n          4.87026235e+01, 9.89608138e+01, 1.88155653e+02,\n          2.09750790e+02],\n         [1.69076774e+02, 5.64051792e+01, 5.05323306e+01,\n          2.08207535e+02, 8.57781757e+01, 2.06663652e+02,\n          1.31465650e+02, 1.89615911e+02, 7.73446016e+01,\n          2.06165739e+02],\n         [2.03552595e+02, 4.44816777e+01, 1.31760370e+02,\n          2.30797273e+02, 1.92328867e+02, 1.27483156e+02,\n          1.55248635e+02, 1.73745475e+02, 9.46917087e+01,\n          2.22888447e+02],\n         [2.44399210e+02, 2.43436168e+02, 2.50853015e+02,\n          1.05942579e+02, 2.51008912e+02, 1.79270467e+02,\n          1.25599500e+01, 1.90553151e+01, 6.08368061e+01,\n          1.66071831e+02],\n         [1.82638402e+02, 1.76827108e+01, 1.41847855e+01,\n          1.21141842e+02, 2.12541320e+02, 2.06831034e+02,\n          9.08574356e-01, 2.37256579e+02, 1.36007925e+02,\n          2.34453971e+02],\n         [2.09052851e+01, 9.45036423e+01, 1.41600247e+02,\n          7.78204612e+01, 1.34351174e+02, 1.45151605e+02,\n          2.42294824e+02, 1.22601236e+02, 1.83403501e+02,\n          6.93267657e+01],\n         [1.28440826e+01, 2.34785807e+02, 7.40977572e+01,\n          2.45420303e+02, 1.37257767e+02, 4.91497155e+01,\n          1.24494994e+02, 4.15056803e+01, 1.89877646e+02,\n          4.84446866e+01]]],\n\n\n       [[[6.47814240e+01, 1.41039984e+02, 1.70602200e+02,\n          1.45989554e+02, 2.16948093e+02, 2.54225538e+02,\n          1.32872488e+02, 1.58829783e+02, 5.01226537e+01,\n          3.22876482e+01],\n         [1.07023250e+02, 1.94486450e+02, 4.97473827e+01,\n          1.63036154e+02, 3.16584213e+01, 1.95366421e+02,\n          7.27045342e+00, 1.95812345e+02, 2.31949063e+02,\n          1.98465787e+02],\n         [8.27582985e+01, 1.96109160e+02, 1.34312049e+01,\n          4.39220195e+01, 2.40360419e+02, 1.10472390e+01,\n          2.26721196e+02, 8.87279424e+01, 3.14459276e+01,\n          1.84992420e+01],\n         [4.34221969e+01, 1.29623332e+02, 1.29166113e+02,\n          4.06394242e+01, 2.22749026e+02, 2.49780228e+02,\n          6.46337953e+01, 2.04415856e+02, 1.02098323e+02,\n          1.39006769e+02],\n         [2.25086526e+02, 2.94474802e+01, 4.93257306e+00,\n          2.49529278e+02, 2.92777975e+01, 1.24777321e+02,\n          3.84349149e+01, 1.05189894e+02, 1.12767181e+02,\n          2.37188302e+01],\n         [6.22942415e+00, 1.43430554e+01, 7.17138275e+01,\n          1.96571982e+02, 2.54516478e+02, 2.51272046e+02,\n          6.06634721e+01, 4.84046912e+01, 1.62565550e+02,\n          1.51686995e+02],\n         [9.77072729e+01, 2.36439578e+02, 2.20724728e+02,\n          3.52556985e+01, 2.18155948e+02, 7.88032009e+01,\n          2.37511579e+02, 1.90971617e+01, 1.13998785e+02,\n          5.64646067e+01],\n         [1.66463195e+01, 1.30133903e+02, 1.95015184e+02,\n          5.11110818e+01, 1.18689851e+02, 1.04499961e+01,\n          1.71513172e+02, 2.57759818e+01, 1.44091870e+02,\n          1.95986230e+02],\n         [2.07591294e+02, 5.61926544e+01, 1.97835351e+02,\n          1.82443067e+02, 8.81538507e+01, 4.80082934e+01,\n          3.03867768e+00, 2.53935477e+02, 7.55899190e+01,\n          9.92339005e+01],\n         [1.73379541e+02, 2.04453228e+02, 1.22746371e+02,\n          1.49733624e+02, 1.27521618e+02, 1.51125911e+02,\n          2.06073146e+00, 4.88391646e+01, 4.21504355e+01,\n          6.93142548e+00]],\n\n        [[3.19256133e+01, 2.24838443e+02, 5.77345838e+01,\n          3.09389574e+01, 8.66452437e+00, 3.89132915e+01,\n          1.91872018e+02, 7.54780861e+01, 1.45634179e+02,\n          8.96027510e+01],\n         [1.27457996e+02, 8.25245932e+01, 1.91930338e+02,\n          1.60249638e+02, 1.76591954e+02, 1.71951148e+02,\n          2.41456967e+02, 9.92276544e+01, 1.21019514e+02,\n          1.84379812e+02],\n         [9.99574332e+01, 5.13547199e+01, 5.19543531e+01,\n          5.54783002e+01, 8.17641567e+01, 8.28289352e+01,\n          6.21333676e+01, 1.65527258e+02, 1.94395269e+02,\n          8.88556471e+01],\n         [1.78827443e+02, 1.91157975e+02, 5.03241490e+01,\n          2.96582597e+01, 7.28387735e+01, 1.60199438e+02,\n          1.15511357e+02, 2.33401873e+02, 1.99678857e+02,\n          2.02078594e+02],\n         [5.57123418e+01, 1.42020179e+02, 2.64737451e+01,\n          3.57627559e+01, 1.26260418e+02, 2.35978950e+02,\n          2.17111287e+02, 3.46115999e+01, 1.18855203e+02,\n          1.41598799e+02],\n         [1.29365009e+02, 1.96170035e+02, 1.52041277e+02,\n          2.38632547e+02, 1.17610224e+02, 1.55279881e+02,\n          1.40594592e+01, 1.36181485e+02, 1.65901072e+02,\n          2.26041607e+02],\n         [1.53947127e+02, 1.20849866e+02, 1.57879570e+02,\n          4.45224680e+01, 2.12666576e+02, 1.34827659e+01,\n          1.08256058e+02, 1.74447162e+02, 2.15387564e+02,\n          5.20335249e+01],\n         [1.08424834e+02, 1.41315653e+01, 2.31401854e+02,\n          9.25965716e+01, 2.28787239e+02, 2.32850803e+02,\n          1.94542737e+02, 2.07885105e+02, 1.06298455e+02,\n          2.36525963e+02],\n         [8.36363063e+01, 1.12436561e+02, 1.02828116e+02,\n          2.48634276e+02, 9.38201026e+01, 1.32178809e+02,\n          1.13399300e+02, 8.89187706e+01, 1.45924611e+02,\n          2.71661820e+01],\n         [1.23620538e+02, 1.20989589e+02, 5.81609084e+01,\n          2.08409678e+02, 2.00698882e+02, 1.73095953e+02,\n          1.25806925e+02, 4.02773184e+01, 1.75751296e+02,\n          6.67222306e+01]],\n\n        [[7.40864651e+00, 9.55391226e+01, 1.93305918e+02,\n          2.61830266e+01, 2.27128165e+02, 1.60145742e+01,\n          2.50686787e+02, 1.04016775e+02, 1.19395521e+02,\n          1.32444630e+02],\n         [6.13137167e+01, 3.16868888e+01, 2.49983810e+02,\n          1.92569840e+02, 6.40479015e+01, 2.18146667e+02,\n          2.49029980e+02, 7.02411367e+01, 1.22036182e+02,\n          1.11119638e+02],\n         [1.24174118e+02, 2.47594999e-01, 2.50302497e+02,\n          1.74540758e+02, 1.92129811e+02, 1.89014884e+02,\n          1.87484945e+02, 1.85350613e+02, 1.45342808e+02,\n          2.07765444e+02],\n         [2.36751438e+02, 1.26583105e+02, 6.45077705e+01,\n          2.21756727e+02, 1.27651803e+02, 6.43796582e+01,\n          1.71588481e+01, 2.39220951e+02, 6.34284118e-01,\n          9.00664396e+01],\n         [1.02450884e+02, 2.27652790e+02, 1.11715324e+02,\n          1.01415245e+02, 5.89697716e+01, 1.07821333e+02,\n          6.98830852e+01, 1.69522101e+02, 2.77511439e+01,\n          8.22899403e+00],\n         [1.38779269e+02, 1.13674526e+01, 2.51454899e+02,\n          1.74857648e+02, 1.72734712e+02, 1.74161731e+02,\n          7.84751215e+01, 3.02641982e+01, 1.16432285e+02,\n          1.83188526e+02],\n         [1.24378784e+02, 1.97922560e+02, 2.47617000e+02,\n          1.49226752e+02, 7.90563017e+01, 2.29280261e+02,\n          4.33611048e+01, 2.14045073e+02, 8.03242968e+01,\n          1.28170293e+02],\n         [2.36852277e+02, 1.99891290e+02, 2.39650288e+02,\n          5.55383245e+01, 2.24034857e+02, 1.52420984e+02,\n          1.42485399e+02, 1.37465051e+01, 9.34977737e+01,\n          1.63731225e+02],\n         [1.68594351e+02, 6.40775270e+01, 1.31175465e+02,\n          1.03701089e+02, 3.93207074e+01, 2.09087958e+02,\n          1.47632785e+02, 2.25409138e+02, 1.71636267e+02,\n          2.96631781e+01],\n         [7.27254796e+01, 7.12307918e+01, 1.33683039e+02,\n          4.35714475e+01, 5.92543563e+01, 2.18775906e+02,\n          1.91333278e+02, 9.16124276e+01, 7.96296489e+01,\n          4.37157841e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cec10d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-7.56638336e+01, -5.29676628e+01,  9.18514633e+01,\n          -9.35420303e+01, -5.85427246e+01,  1.11530235e+02,\n           1.44093750e+02,  6.27583847e+01, -3.19472122e+01,\n           8.00516891e+01],\n         [ 6.76782761e+01,  1.25251770e+00,  3.76535263e+01,\n           1.28708435e+02, -6.88332825e+01,  1.48240936e+02,\n           1.44124664e+02,  9.28037338e+01,  5.21479416e+01,\n          -8.06981735e+01],\n         [ 5.99856949e+01,  7.46486435e+01,  2.19308701e+01,\n           1.26648384e+02, -2.93661957e+01,  3.79962234e+01,\n           6.68713608e+01,  2.28398590e+01,  1.04239120e+01,\n          -9.82708206e+01],\n         [ 8.43761520e+01, -2.05914154e+01,  2.22695847e+01,\n          -1.77163696e+01,  4.76983566e+01,  4.65051041e+01,\n          -5.52363777e+01, -4.97818756e+00,  8.42166519e+01,\n           1.05811790e+02],\n         [ 6.51377640e+01, -4.75338249e+01, -5.34066734e+01,\n           1.04268532e+02, -1.81608276e+01,  1.02724648e+02,\n           2.75266495e+01,  8.56769028e+01, -2.65943985e+01,\n           1.02226738e+02],\n         [ 9.96135941e+01, -5.94573250e+01,  2.78213730e+01,\n           1.26858269e+02,  8.83898697e+01,  2.35441513e+01,\n           5.13096390e+01,  6.98064651e+01, -9.24729156e+00,\n           1.18949440e+02],\n         [ 1.40460205e+02,  1.39497162e+02,  1.46914001e+02,\n           2.00357819e+00,  1.47069916e+02,  7.53314590e+01,\n          -9.13790512e+01, -8.48836899e+01, -4.31021957e+01,\n           6.21328354e+01],\n         [ 7.86993942e+01, -8.62562943e+01, -8.97542191e+01,\n           1.72028427e+01,  1.08602318e+02,  1.02892036e+02,\n          -1.03030426e+02,  1.33317566e+02,  3.20689163e+01,\n           1.30514954e+02],\n         [-8.30337219e+01, -9.43536377e+00,  3.76612473e+01,\n          -2.61185455e+01,  3.04121780e+01,  4.12126083e+01,\n           1.38355835e+02,  1.86622314e+01,  7.94645004e+01,\n          -3.46122360e+01],\n         [-9.10949173e+01,  1.30846802e+02, -2.98412476e+01,\n           1.41481293e+02,  3.33187637e+01, -5.47892876e+01,\n           2.05559921e+01, -6.24333229e+01,  8.59386368e+01,\n          -5.54943161e+01]],\n\n        [[ 1.35574829e+02,  7.74467850e+01,  9.79959183e+01,\n           1.18857903e+02, -4.70914841e+01, -7.10593185e+01,\n          -6.62936096e+01,  2.36716385e+01,  9.62387466e+01,\n           1.31528168e+02],\n         [-2.36524811e+01, -6.53308563e+01, -8.74388351e+01,\n           1.37998322e+02, -4.95198364e+01,  1.37988358e+01,\n           1.36506195e+02, -2.93250198e+01, -1.10311150e+02,\n          -6.24569588e+01],\n         [ 6.51787643e+01,  7.44855881e+01, -4.16700745e+00,\n           7.43515854e+01, -7.55302811e+01,  8.65403824e+01,\n          -3.02283249e+01, -3.11750031e+00,  6.49734421e+01,\n           5.80261307e+01],\n         [-3.93435364e+01, -5.68674889e+01,  1.03819481e+02,\n           2.75205765e+01, -1.99385986e+01, -1.06839211e+02,\n          -7.10735016e+01,  6.22400131e+01,  7.12117081e+01,\n          -4.13326721e+01],\n         [ 4.69464188e+01,  5.50626373e+00,  1.23391914e+02,\n           5.54736557e+01,  1.18951424e+02,  6.09019241e+01,\n          -9.07567596e+01,  8.62197800e+01,  2.80858078e+01,\n          -9.79703064e+01],\n         [-4.44391632e+00, -5.73576508e+01,  1.29246002e+02,\n           9.46835098e+01,  9.55943985e+01,  1.17608894e+02,\n           1.04966728e+02,  3.54209518e+01, -5.99761581e+01,\n          -8.12809296e+01],\n         [ 4.88272018e+01,  1.36845123e+02,  7.09481735e+01,\n          -1.06740044e+02,  8.71535263e+01,  8.66028824e+01,\n           1.01349678e+02, -8.09884796e+01, -5.85080147e+01,\n           2.70571671e+01],\n         [-5.08964844e+01, -1.28375778e+01, -5.12582397e+00,\n          -9.19615631e+01,  4.61822281e+01,  6.00139618e+00,\n           7.12210922e+01,  1.06998360e+02,  1.31811890e+02,\n           1.14214714e+02],\n         [ 5.41917648e+01,  1.17754463e+02, -8.97370453e+01,\n           6.32993851e+01, -1.16728668e+01, -1.15825172e+02,\n          -9.14369431e+01,  6.27921066e+01, -4.59364853e+01,\n           3.14355087e+01],\n         [-8.40447388e+01,  4.46389999e+01, -1.62210693e+01,\n           1.34709656e+02,  8.92520676e+01, -7.69419098e+01,\n           5.87120743e+01, -6.39943047e+01, -1.77411728e+01,\n          -6.14186783e+01]],\n\n        [[-9.16601105e+01,  4.52006454e+01, -2.92629242e+01,\n           2.51711197e+01,  6.34139786e+01,  2.56412735e+01,\n          -6.92155609e+01,  5.37862778e+01,  8.37563324e+00,\n          -1.07163933e+02],\n         [ 8.31520844e+00,  5.04096451e+01,  6.99819870e+01,\n          -1.06230423e+02, -5.43425446e+01, -1.05302467e+02,\n          -9.56380463e+00,  1.00758278e+02,  3.06230240e+01,\n           8.56201859e+01],\n         [-1.13674759e+02,  2.25843887e+01, -5.37123871e+00,\n           1.15917168e+02, -4.14131012e+01,  2.11070786e+01,\n          -4.30876999e+01, -4.65305939e+01, -5.75708008e+01,\n           2.03230972e+01],\n         [-1.16665550e+02,  6.81917343e+01,  1.74934616e+01,\n          -6.39821892e+01,  1.18107460e+02, -1.18731766e+02,\n          -1.48696136e+00, -8.42986832e+01, -6.09604301e+01,\n           5.37123032e+01],\n         [ 6.93348312e+01,  1.09140724e+02, -1.06861908e+02,\n          -3.63068466e+01,  2.03402328e+01, -8.30355682e+01,\n           7.26857071e+01,  7.06813278e+01, -1.14246956e+02,\n           8.66892624e+01],\n         [ 1.04744644e+01, -2.63141403e+01,  2.45371017e+01,\n           9.44321365e+01,  1.51236725e+00,  9.03017197e+01,\n           2.70681534e+01,  1.23078178e+02, -1.02349091e+02,\n           9.32957687e+01],\n         [ 3.95807724e+01,  1.26897659e+01,  6.36917648e+01,\n          -8.01449280e+01, -5.89370728e-01,  6.96183014e+00,\n           3.58567123e+01,  2.73764801e+00, -2.61581345e+01,\n           3.75393143e+01],\n         [ 1.44398499e+00, -6.08338509e+01,  5.59128494e+01,\n          -7.79065399e+01,  1.09787941e+02, -7.59633942e+01,\n          -4.88489380e+01,  1.23435524e+02, -8.28085861e+01,\n          -2.33455276e+01],\n         [ 1.21921043e+02, -3.16223907e+01, -3.97191772e+01,\n          -3.06883316e+01,  7.58296890e+01,  5.58303452e+01,\n           4.43080978e+01,  1.27715569e+02, -4.19633102e+01,\n          -1.57081604e-01],\n         [-3.94182053e+01,  3.89782333e+01, -7.17254791e+01,\n           6.58545914e+01, -9.97536163e+01, -2.48281860e+01,\n           9.64056320e+01,  1.11841866e+02, -4.39032288e+01,\n           1.01348305e+02]]],\n\n\n       [[[-9.65303574e+01, -8.39987946e+00,  8.93669205e+01,\n          -7.77559738e+01,  1.23189156e+02, -8.79244308e+01,\n           1.46747772e+02,  7.77740479e-02,  1.54565201e+01,\n           2.85056229e+01],\n         [-4.26252861e+01, -7.22521133e+01,  1.46044800e+02,\n           8.86308365e+01, -3.98910980e+01,  1.14207664e+02,\n           1.45090973e+02, -3.36978683e+01,  1.80971756e+01,\n           7.18063354e+00],\n         [ 2.02351151e+01, -1.03691406e+02,  1.46363495e+02,\n           7.06017532e+01,  8.81908035e+01,  8.50758743e+01,\n           8.35459366e+01,  8.14116135e+01,  4.14038010e+01,\n           1.03826439e+02],\n         [ 1.32812439e+02,  2.26441040e+01, -3.94312363e+01,\n           1.17817726e+02,  2.37127991e+01, -3.95593414e+01,\n          -8.67801514e+01,  1.35281952e+02, -1.03304718e+02,\n          -1.38725662e+01],\n         [-1.48812103e+00,  1.23713783e+02,  7.77632141e+00,\n          -2.52375793e+00, -4.49692307e+01,  3.88233185e+00,\n          -3.40559158e+01,  6.55830917e+01, -7.61878586e+01,\n          -9.57100067e+01],\n         [ 3.48402634e+01, -9.25715485e+01,  1.47515900e+02,\n           7.09186478e+01,  6.87957077e+01,  7.02227249e+01,\n          -2.54638824e+01, -7.36748047e+01,  1.24932861e+01,\n           7.92495193e+01],\n         [ 2.04397812e+01,  9.39835587e+01,  1.43678009e+02,\n           4.52877426e+01, -2.48826981e+01,  1.25341255e+02,\n          -6.05778999e+01,  1.10106071e+02, -2.36147079e+01,\n           2.42312851e+01],\n         [ 1.32913269e+02,  9.59522934e+01,  1.35711273e+02,\n          -4.84006767e+01,  1.20095848e+02,  4.84819870e+01,\n           3.85463943e+01, -9.01924973e+01, -1.04412308e+01,\n           5.97922287e+01],\n         [ 6.46553421e+01, -3.98614731e+01,  2.72364578e+01,\n          -2.37915039e-01, -6.46182938e+01,  1.05148949e+02,\n           4.36937790e+01,  1.21470131e+02,  6.76972580e+01,\n          -7.42758255e+01],\n         [-3.12135239e+01, -3.27082138e+01,  2.97440414e+01,\n          -6.03675537e+01, -4.46846466e+01,  1.14836906e+02,\n           8.73942795e+01, -1.23265762e+01, -2.43093567e+01,\n          -6.02232208e+01]],\n\n        [[-8.48533859e+01,  1.08059441e+02, -5.90444145e+01,\n          -8.58400421e+01, -1.08114471e+02, -7.78657074e+01,\n           7.50930252e+01, -4.13009109e+01,  2.88551865e+01,\n          -2.71762466e+01],\n         [ 1.06789932e+01, -3.42544098e+01,  7.51513443e+01,\n           4.34706345e+01,  5.98129501e+01,  5.51721420e+01,\n           1.24677971e+02, -1.75513458e+01,  4.24051666e+00,\n           6.76008072e+01],\n         [-1.68215637e+01, -6.54242783e+01, -6.48246460e+01,\n          -6.13006973e+01, -3.50148392e+01, -3.39500656e+01,\n          -5.46456299e+01,  4.87482529e+01,  7.76162643e+01,\n          -2.79233551e+01],\n         [ 6.20484390e+01,  7.43789749e+01, -6.64548492e+01,\n          -8.71207428e+01, -4.39402237e+01,  4.34204330e+01,\n          -1.26763916e+00,  1.16622871e+02,  8.28998642e+01,\n           8.52995987e+01],\n         [-6.10666580e+01,  2.52411728e+01, -9.03052521e+01,\n          -8.10162430e+01,  9.48141479e+00,  1.19199944e+02,\n           1.00332283e+02, -8.21674042e+01,  2.07620239e+00,\n           2.48198013e+01],\n         [ 1.25860062e+01,  7.93910294e+01,  3.52622757e+01,\n           1.21853554e+02,  8.31222534e-01,  3.85008774e+01,\n          -1.02719543e+02,  1.94024887e+01,  4.91220779e+01,\n           1.09262611e+02],\n         [ 3.71681290e+01,  4.07086945e+00,  4.11005630e+01,\n          -7.22565308e+01,  9.58875809e+01, -1.03296234e+02,\n          -8.52294159e+00,  5.76681595e+01,  9.86085587e+01,\n          -6.47454758e+01],\n         [-8.35416412e+00, -1.02647430e+02,  1.14622856e+02,\n          -2.41824265e+01,  1.12008232e+02,  1.16071800e+02,\n           7.77637405e+01,  9.11061020e+01, -1.04805450e+01,\n           1.19746956e+02],\n         [-3.31426926e+01, -4.34243774e+00, -1.39508820e+01,\n           1.31855286e+02, -2.29589005e+01,  1.53998032e+01,\n          -3.37969971e+00, -2.78602295e+01,  2.91456070e+01,\n          -8.96128159e+01],\n         [ 6.84153748e+00,  4.21058655e+00, -5.86180916e+01,\n           9.16306839e+01,  8.39198837e+01,  5.63169479e+01,\n           9.02792358e+00, -7.65016785e+01,  5.89722977e+01,\n          -5.00567703e+01]],\n\n        [[-5.88985748e+01,  1.73599777e+01,  4.69222031e+01,\n           2.23095474e+01,  9.32680893e+01,  1.30545532e+02,\n           9.19248199e+00,  3.51497879e+01, -7.35573425e+01,\n          -9.13923492e+01],\n         [-1.66567535e+01,  7.08064499e+01, -7.39326172e+01,\n           3.93561478e+01, -9.20215759e+01,  7.16864243e+01,\n          -1.16409546e+02,  7.21323471e+01,  1.08269066e+02,\n           7.47857895e+01],\n         [-4.09216995e+01,  7.24291611e+01, -1.10248795e+02,\n          -7.97579803e+01,  1.16680412e+02, -1.12632759e+02,\n           1.03041191e+02, -3.49520569e+01, -9.22340698e+01,\n          -1.05180756e+02],\n         [-8.02578049e+01,  5.94333649e+00,  5.48610687e+00,\n          -8.30405731e+01,  9.90690231e+01,  1.26100227e+02,\n          -5.90462036e+01,  8.07358627e+01, -2.15816803e+01,\n           1.53267746e+01],\n         [ 1.01406532e+02, -9.42325211e+01, -1.18747429e+02,\n           1.25849281e+02, -9.44022064e+01,  1.09732056e+00,\n          -8.52450867e+01, -1.84901047e+01, -1.09128189e+01,\n          -9.99611664e+01],\n         [-1.17450577e+02, -1.09336945e+02, -5.19661713e+01,\n           7.28919754e+01,  1.30836487e+02,  1.27592049e+02,\n          -6.30165291e+01, -7.52753143e+01,  3.88855515e+01,\n           2.80069962e+01],\n         [-2.59727249e+01,  1.12759575e+02,  9.70447311e+01,\n          -8.84243011e+01,  9.44759445e+01, -4.48768005e+01,\n           1.13831581e+02, -1.04582840e+02, -9.68121338e+00,\n          -6.72153931e+01],\n         [-1.07033676e+02,  6.45389557e+00,  7.13351822e+01,\n          -7.25689240e+01, -4.99015045e+00, -1.13230003e+02,\n           4.78331680e+01, -9.79040222e+01,  2.04118729e+01,\n           7.23062363e+01],\n         [ 8.39112930e+01, -6.74873505e+01,  7.41553574e+01,\n           5.87630692e+01, -3.55261459e+01, -7.56717072e+01,\n          -1.20641319e+02,  1.30255463e+02, -4.80900803e+01,\n          -2.44460983e+01],\n         [ 4.96995468e+01,  8.07732315e+01, -9.33631897e-01,\n           2.60536270e+01,  3.84161377e+00,  2.74459152e+01,\n          -1.21619270e+02, -7.48408356e+01, -8.15295639e+01,\n          -1.16748573e+02]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfc11c0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 32, 168,  94, 148, 187, 149,  54, 177, 132,  16],\n         [131, 174, 193,  17,  69,  18, 114, 224, 154, 209],\n         [ 10, 146, 118, 239,  82, 144,  80,  77,  66, 144],\n         [  7, 191, 141,  59, 241,   4, 122,  39,  62, 177],\n         [193, 232,  16,  87, 144,  40, 196, 194,   9, 210],\n         [134,  97, 148, 218, 125, 213, 150, 246,  21, 216],\n         [163, 136, 187,  43, 123, 130, 159, 126,  97, 161],\n         [125,  62, 179,  45, 233,  47,  74, 247,  40, 100],\n         [245,  92,  83,  92, 199, 179, 167, 251,  81, 123],\n         [ 84, 162,  51, 189,  23,  98, 220, 235,  79, 225]],\n\n        [[252, 194, 214, 235,  69,  45,  50, 140, 213, 248],\n         [ 93,  51,  29, 254,  67, 130, 253,  87,   6,  54],\n         [181, 191, 112, 191,  41, 203,  86, 113, 181, 174],\n         [ 77,  59, 220, 144,  96,   9,  45, 179, 187,  75],\n         [163, 122, 240, 172, 235, 177,  26, 202, 144,  18],\n         [112,  59, 246, 211, 212, 234, 221, 152,  56,  35],\n         [165, 253, 187,  10, 203, 203, 218,  35,  58, 143],\n         [ 65, 103, 111,  24, 162, 122, 188, 223, 248, 230],\n         [170, 234,  27, 180, 105,   0,  25, 179,  70, 148],\n         [ 32, 161, 100, 251, 206,  39, 175,  52,  99,  55]],\n\n        [[ 28,  50, 195,  10,  45, 215, 248, 166,  71, 183],\n         [171, 105, 141, 232,  35, 252, 248, 196, 156,  23],\n         [163, 178, 125, 230,  74, 141, 170, 126, 114,   5],\n         [188,  83, 126,  86, 151, 150,  48,  98, 188, 209],\n         [169,  56,  50, 208,  85, 206, 131, 189,  77, 206],\n         [203,  44, 131, 230, 192, 127, 155, 173,  94, 222],\n         [244, 243, 250, 105, 251, 179,  12,  19,  60, 166],\n         [182,  17,  14, 121, 212, 206,   0, 237, 136, 234],\n         [ 20,  94, 141,  77, 134, 145, 242, 122, 183,  69],\n         [ 12, 234,  74, 245, 137,  49, 124,  41, 189,  48]]],\n\n\n       [[[ 64, 141, 170, 145, 216, 254, 132, 158,  50,  32],\n         [107, 194,  49, 163,  31, 195,   7, 195, 231, 198],\n         [ 82, 196,  13,  43, 240,  11, 226,  88,  31,  18],\n         [ 43, 129, 129,  40, 222, 249,  64, 204, 102, 139],\n         [225,  29,   4, 249,  29, 124,  38, 105, 112,  23],\n         [  6,  14,  71, 196, 254, 251,  60,  48, 162, 151],\n         [ 97, 236, 220,  35, 218,  78, 237,  19, 113,  56],\n         [ 16, 130, 195,  51, 118,  10, 171,  25, 144, 195],\n         [207,  56, 197, 182,  88,  48,   3, 253,  75,  99],\n         [173, 204, 122, 149, 127, 151,   2,  48,  42,   6]],\n\n        [[ 31, 224,  57,  30,   8,  38, 191,  75, 145,  89],\n         [127,  82, 191, 160, 176, 171, 241,  99, 121, 184],\n         [ 99,  51,  51,  55,  81,  82,  62, 165, 194,  88],\n         [178, 191,  50,  29,  72, 160, 115, 233, 199, 202],\n         [ 55, 142,  26,  35, 126, 235, 217,  34, 118, 141],\n         [129, 196, 152, 238, 117, 155,  14, 136, 165, 226],\n         [153, 120, 157,  44, 212,  13, 108, 174, 215,  52],\n         [108,  14, 231,  92, 228, 232, 194, 207, 106, 236],\n         [ 83, 112, 102, 248,  93, 132, 113,  88, 145,  27],\n         [123, 120,  58, 208, 200, 173, 125,  40, 175,  66]],\n\n        [[  7,  95, 193,  26, 227,  16, 250, 104, 119, 132],\n         [ 61,  31, 249, 192,  64, 218, 249,  70, 122, 111],\n         [124,   0, 250, 174, 192, 189, 187, 185, 145, 207],\n         [236, 126,  64, 221, 127,  64,  17, 239,   0,  90],\n         [102, 227, 111, 101,  58, 107,  69, 169,  27,   8],\n         [138,  11, 251, 174, 172, 174,  78,  30, 116, 183],\n         [124, 197, 247, 149,  79, 229,  43, 214,  80, 128],\n         [236, 199, 239,  55, 224, 152, 142,  13,  93, 163],\n         [168,  64, 131, 103,  39, 209, 147, 225, 171,  29],\n         [ 72,  71, 133,  43,  59, 218, 191,  91,  79,  43]]]],\n      dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cec10d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[-7.5939003e+01, -5.3939003e+01,  9.1060997e+01,\n          -9.3939003e+01, -5.8939003e+01,  1.1106100e+02,\n           1.4406100e+02,  6.2060997e+01, -3.2939003e+01,\n           7.9060997e+01],\n         [ 6.7060997e+01,  1.0609970e+00,  3.7060997e+01,\n           1.2806100e+02, -6.8939003e+01,  1.4806100e+02,\n           1.4406100e+02,  9.2060997e+01,  5.2060997e+01,\n          -8.0939003e+01],\n         [ 5.9060997e+01,  7.4060997e+01,  2.1060997e+01,\n           1.2606100e+02, -2.9939003e+01,  3.7060997e+01,\n           6.6060997e+01,  2.2060997e+01,  1.0060997e+01,\n          -9.8939003e+01],\n         [ 8.4060997e+01, -2.0939003e+01,  2.2060997e+01,\n          -1.7939003e+01,  4.7060997e+01,  4.6060997e+01,\n          -5.5939003e+01, -5.9390030e+00,  8.4060997e+01,\n           1.0506100e+02],\n         [ 6.5060997e+01, -4.7939003e+01, -5.3939003e+01,\n           1.0406100e+02, -1.8939003e+01,  1.0206100e+02,\n           2.7060997e+01,  8.5060997e+01, -2.6939003e+01,\n           1.0206100e+02],\n         [ 9.9060997e+01, -5.9939003e+01,  2.7060997e+01,\n           1.2606100e+02,  8.8060997e+01,  2.3060997e+01,\n           5.1060997e+01,  6.9060997e+01, -9.9390030e+00,\n           1.1806100e+02],\n         [ 1.4006100e+02,  1.3906100e+02,  1.4606100e+02,\n           1.0609970e+00,  1.4706100e+02,  7.5060997e+01,\n          -9.1939003e+01, -8.4939003e+01, -4.3939003e+01,\n           6.2060997e+01],\n         [ 7.8060997e+01, -8.6939003e+01, -8.9939003e+01,\n           1.7060997e+01,  1.0806100e+02,  1.0206100e+02,\n          -1.0393900e+02,  1.3306100e+02,  3.2060997e+01,\n           1.3006100e+02],\n         [-8.3939003e+01, -9.9390030e+00,  3.7060997e+01,\n          -2.6939003e+01,  3.0060997e+01,  4.1060997e+01,\n           1.3806100e+02,  1.8060997e+01,  7.9060997e+01,\n          -3.4939003e+01],\n         [-9.1939003e+01,  1.3006100e+02, -2.9939003e+01,\n           1.4106100e+02,  3.3060997e+01, -5.4939003e+01,\n           2.0060997e+01, -6.2939003e+01,  8.5060997e+01,\n          -5.5939003e+01]],\n\n        [[ 1.3522101e+02,  7.7221001e+01,  9.7221001e+01,\n           1.1822100e+02, -4.7778999e+01, -7.1778999e+01,\n          -6.6778999e+01,  2.3221001e+01,  9.6221001e+01,\n           1.3122101e+02],\n         [-2.3778999e+01, -6.5778999e+01, -8.7778999e+01,\n           1.3722101e+02, -4.9778999e+01,  1.3221001e+01,\n           1.3622101e+02, -2.9778999e+01, -1.1077900e+02,\n          -6.2778999e+01],\n         [ 6.4221001e+01,  7.4221001e+01, -4.7789993e+00,\n           7.4221001e+01, -7.5778999e+01,  8.6221001e+01,\n          -3.0778999e+01, -3.7789993e+00,  6.4221001e+01,\n           5.7221001e+01],\n         [-3.9778999e+01, -5.7778999e+01,  1.0322100e+02,\n           2.7221001e+01, -2.0778999e+01, -1.0777900e+02,\n          -7.1778999e+01,  6.2221001e+01,  7.0221001e+01,\n          -4.1778999e+01],\n         [ 4.6221001e+01,  5.2210007e+00,  1.2322100e+02,\n           5.5221001e+01,  1.1822100e+02,  6.0221001e+01,\n          -9.0778999e+01,  8.5221001e+01,  2.7221001e+01,\n          -9.8778999e+01],\n         [-4.7789993e+00, -5.7778999e+01,  1.2922101e+02,\n           9.4221001e+01,  9.5221001e+01,  1.1722100e+02,\n           1.0422100e+02,  3.5221001e+01, -6.0778999e+01,\n          -8.1778999e+01],\n         [ 4.8221001e+01,  1.3622101e+02,  7.0221001e+01,\n          -1.0677900e+02,  8.6221001e+01,  8.6221001e+01,\n           1.0122100e+02, -8.1778999e+01, -5.8778999e+01,\n           2.6221001e+01],\n         [-5.1778999e+01, -1.3778999e+01, -5.7789993e+00,\n          -9.2778999e+01,  4.5221001e+01,  5.2210007e+00,\n           7.1221001e+01,  1.0622100e+02,  1.3122101e+02,\n           1.1322100e+02],\n         [ 5.3221001e+01,  1.1722100e+02, -8.9778999e+01,\n           6.3221001e+01, -1.1778999e+01, -1.1677900e+02,\n          -9.1778999e+01,  6.2221001e+01, -4.6778999e+01,\n           3.1221001e+01],\n         [-8.4778999e+01,  4.4221001e+01, -1.6778999e+01,\n           1.3422101e+02,  8.9221001e+01, -7.7778999e+01,\n           5.8221001e+01, -6.4778999e+01, -1.7778999e+01,\n          -6.1778999e+01]],\n\n        [[-9.1680000e+01,  4.4320000e+01, -2.9680000e+01,\n           2.4320000e+01,  6.3320000e+01,  2.5320000e+01,\n          -6.9680000e+01,  5.3320000e+01,  8.3199997e+00,\n          -1.0768000e+02],\n         [ 7.3199997e+00,  5.0320000e+01,  6.9320000e+01,\n          -1.0668000e+02, -5.4680000e+01, -1.0568000e+02,\n          -9.6800003e+00,  1.0032000e+02,  3.0320000e+01,\n           8.5320000e+01],\n         [-1.1368000e+02,  2.2320000e+01, -5.6800003e+00,\n           1.1532000e+02, -4.1680000e+01,  2.0320000e+01,\n          -4.3680000e+01, -4.6680000e+01, -5.7680000e+01,\n           2.0320000e+01],\n         [-1.1668000e+02,  6.7320000e+01,  1.7320000e+01,\n          -6.4680000e+01,  1.1732000e+02, -1.1968000e+02,\n          -1.6800003e+00, -8.4680000e+01, -6.1680000e+01,\n           5.3320000e+01],\n         [ 6.9320000e+01,  1.0832000e+02, -1.0768000e+02,\n          -3.6680000e+01,  2.0320000e+01, -8.3680000e+01,\n           7.2320000e+01,  7.0320000e+01, -1.1468000e+02,\n           8.6320000e+01],\n         [ 1.0320000e+01, -2.6680000e+01,  2.4320000e+01,\n           9.4320000e+01,  1.3199997e+00,  8.9320000e+01,\n           2.6320000e+01,  1.2232000e+02, -1.0268000e+02,\n           9.2320000e+01],\n         [ 3.9320000e+01,  1.2320000e+01,  6.3320000e+01,\n          -8.0680000e+01, -6.8000031e-01,  6.3199997e+00,\n           3.5320000e+01,  2.3199997e+00, -2.6680000e+01,\n           3.7320000e+01],\n         [ 1.3199997e+00, -6.1680000e+01,  5.5320000e+01,\n          -7.8680000e+01,  1.0932000e+02, -7.6680000e+01,\n          -4.9680000e+01,  1.2332000e+02, -8.3680000e+01,\n          -2.3680000e+01],\n         [ 1.2132000e+02, -3.1680000e+01, -4.0680000e+01,\n          -3.1680000e+01,  7.5320000e+01,  5.5320000e+01,\n           4.3320000e+01,  1.2732000e+02, -4.2680000e+01,\n          -6.8000031e-01],\n         [-3.9680000e+01,  3.8320000e+01, -7.2680000e+01,\n           6.5320000e+01, -1.0068000e+02, -2.5680000e+01,\n           9.6320000e+01,  1.1132000e+02, -4.4680000e+01,\n           1.0132000e+02]]],\n\n\n       [[[-9.6939003e+01, -8.9390030e+00,  8.9060997e+01,\n          -7.7939003e+01,  1.2306100e+02, -8.7939003e+01,\n           1.4606100e+02,  6.0997009e-02,  1.5060997e+01,\n           2.8060997e+01],\n         [-4.2939003e+01, -7.2939003e+01,  1.4506100e+02,\n           8.8060997e+01, -3.9939003e+01,  1.1406100e+02,\n           1.4506100e+02, -3.3939003e+01,  1.8060997e+01,\n           7.0609970e+00],\n         [ 2.0060997e+01, -1.0393900e+02,  1.4606100e+02,\n           7.0060997e+01,  8.8060997e+01,  8.5060997e+01,\n           8.3060997e+01,  8.1060997e+01,  4.1060997e+01,\n           1.0306100e+02],\n         [ 1.3206100e+02,  2.2060997e+01, -3.9939003e+01,\n           1.1706100e+02,  2.3060997e+01, -3.9939003e+01,\n          -8.6939003e+01,  1.3506100e+02, -1.0393900e+02,\n          -1.3939003e+01],\n         [-1.9390030e+00,  1.2306100e+02,  7.0609970e+00,\n          -2.9390030e+00, -4.5939003e+01,  3.0609970e+00,\n          -3.4939003e+01,  6.5060997e+01, -7.6939003e+01,\n          -9.5939003e+01],\n         [ 3.4060997e+01, -9.2939003e+01,  1.4706100e+02,\n           7.0060997e+01,  6.8060997e+01,  7.0060997e+01,\n          -2.5939003e+01, -7.3939003e+01,  1.2060997e+01,\n           7.9060997e+01],\n         [ 2.0060997e+01,  9.3060997e+01,  1.4306100e+02,\n           4.5060997e+01, -2.4939003e+01,  1.2506100e+02,\n          -6.0939003e+01,  1.1006100e+02, -2.3939003e+01,\n           2.4060997e+01],\n         [ 1.3206100e+02,  9.5060997e+01,  1.3506100e+02,\n          -4.8939003e+01,  1.2006100e+02,  4.8060997e+01,\n           3.8060997e+01, -9.0939003e+01, -1.0939003e+01,\n           5.9060997e+01],\n         [ 6.4060997e+01, -3.9939003e+01,  2.7060997e+01,\n          -9.3900299e-01, -6.4939003e+01,  1.0506100e+02,\n           4.3060997e+01,  1.2106100e+02,  6.7060997e+01,\n          -7.4939003e+01],\n         [-3.1939003e+01, -3.2939003e+01,  2.9060997e+01,\n          -6.0939003e+01, -4.4939003e+01,  1.1406100e+02,\n           8.7060997e+01, -1.2939003e+01, -2.4939003e+01,\n          -6.0939003e+01]],\n\n        [[-8.5778999e+01,  1.0722100e+02, -5.9778999e+01,\n          -8.6778999e+01, -1.0877900e+02, -7.8778999e+01,\n           7.4221001e+01, -4.1778999e+01,  2.8221001e+01,\n          -2.7778999e+01],\n         [ 1.0221001e+01, -3.4778999e+01,  7.4221001e+01,\n           4.3221001e+01,  5.9221001e+01,  5.4221001e+01,\n           1.2422100e+02, -1.7778999e+01,  4.2210007e+00,\n           6.7221001e+01],\n         [-1.7778999e+01, -6.5778999e+01, -6.5778999e+01,\n          -6.1778999e+01, -3.5778999e+01, -3.4778999e+01,\n          -5.4778999e+01,  4.8221001e+01,  7.7221001e+01,\n          -2.8778999e+01],\n         [ 6.1221001e+01,  7.4221001e+01, -6.6778999e+01,\n          -8.7778999e+01, -4.4778999e+01,  4.3221001e+01,\n          -1.7789993e+00,  1.1622100e+02,  8.2221001e+01,\n           8.5221001e+01],\n         [-6.1778999e+01,  2.5221001e+01, -9.0778999e+01,\n          -8.1778999e+01,  9.2210007e+00,  1.1822100e+02,\n           1.0022100e+02, -8.2778999e+01,  1.2210007e+00,\n           2.4221001e+01],\n         [ 1.2221001e+01,  7.9221001e+01,  3.5221001e+01,\n           1.2122100e+02,  2.2100067e-01,  3.8221001e+01,\n          -1.0277900e+02,  1.9221001e+01,  4.8221001e+01,\n           1.0922100e+02],\n         [ 3.6221001e+01,  3.2210007e+00,  4.0221001e+01,\n          -7.2778999e+01,  9.5221001e+01, -1.0377900e+02,\n          -8.7789993e+00,  5.7221001e+01,  9.8221001e+01,\n          -6.4778999e+01],\n         [-8.7789993e+00, -1.0277900e+02,  1.1422100e+02,\n          -2.4778999e+01,  1.1122100e+02,  1.1522100e+02,\n           7.7221001e+01,  9.0221001e+01, -1.0778999e+01,\n           1.1922100e+02],\n         [-3.3778999e+01, -4.7789993e+00, -1.4778999e+01,\n           1.3122101e+02, -2.3778999e+01,  1.5221001e+01,\n          -3.7789993e+00, -2.8778999e+01,  2.8221001e+01,\n          -8.9778999e+01],\n         [ 6.2210007e+00,  3.2210007e+00, -5.8778999e+01,\n           9.1221001e+01,  8.3221001e+01,  5.6221001e+01,\n           8.2210007e+00, -7.6778999e+01,  5.8221001e+01,\n          -5.0778999e+01]],\n\n        [[-5.9680000e+01,  1.7320000e+01,  4.6320000e+01,\n           2.1320000e+01,  9.2320000e+01,  1.3032001e+02,\n           8.3199997e+00,  3.4320000e+01, -7.3680000e+01,\n          -9.1680000e+01],\n         [-1.6680000e+01,  7.0320000e+01, -7.4680000e+01,\n           3.9320000e+01, -9.2680000e+01,  7.1320000e+01,\n          -1.1668000e+02,  7.1320000e+01,  1.0732000e+02,\n           7.4320000e+01],\n         [-4.1680000e+01,  7.2320000e+01, -1.1068000e+02,\n          -8.0680000e+01,  1.1632000e+02, -1.1268000e+02,\n           1.0232000e+02, -3.5680000e+01, -9.2680000e+01,\n          -1.0568000e+02],\n         [-8.0680000e+01,  5.3199997e+00,  5.3199997e+00,\n          -8.3680000e+01,  9.8320000e+01,  1.2532000e+02,\n          -5.9680000e+01,  8.0320000e+01, -2.1680000e+01,\n           1.5320000e+01],\n         [ 1.0132000e+02, -9.4680000e+01, -1.1968000e+02,\n           1.2532000e+02, -9.4680000e+01,  3.1999969e-01,\n          -8.5680000e+01, -1.8680000e+01, -1.1680000e+01,\n          -1.0068000e+02],\n         [-1.1768000e+02, -1.0968000e+02, -5.2680000e+01,\n           7.2320000e+01,  1.3032001e+02,  1.2732000e+02,\n          -6.3680000e+01, -7.5680000e+01,  3.8320000e+01,\n           2.7320000e+01],\n         [-2.6680000e+01,  1.1232000e+02,  9.6320000e+01,\n          -8.8680000e+01,  9.4320000e+01, -4.5680000e+01,\n           1.1332000e+02, -1.0468000e+02, -1.0680000e+01,\n          -6.7680000e+01],\n         [-1.0768000e+02,  6.3199997e+00,  7.1320000e+01,\n          -7.2680000e+01, -5.6800003e+00, -1.1368000e+02,\n           4.7320000e+01, -9.8680000e+01,  2.0320000e+01,\n           7.1320000e+01],\n         [ 8.3320000e+01, -6.7680000e+01,  7.3320000e+01,\n           5.8320000e+01, -3.5680000e+01, -7.5680000e+01,\n          -1.2068000e+02,  1.2932001e+02, -4.8680000e+01,\n          -2.4680000e+01],\n         [ 4.9320000e+01,  8.0320000e+01, -1.6800003e+00,\n           2.5320000e+01,  3.3199997e+00,  2.7320000e+01,\n          -1.2168000e+02, -7.5680000e+01, -8.1680000e+01,\n          -1.1768000e+02]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfc1580>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[1.76008642e+02, 1.75551107e+02, 2.49013681e+02],\n        [1.07003389e+02, 1.65806719e+02, 1.92693688e+02],\n        [9.56303018e+01, 1.01229068e+02, 1.63679949e+01],\n        [8.03504585e+01, 2.15492442e+01, 1.52518535e+00],\n        [2.40041626e+02, 1.62615209e+02, 5.02159696e+01],\n        [2.20557801e+02, 1.64010908e+02, 2.30843408e+02],\n        [6.86316324e+01, 9.86141631e+01, 1.01065861e+02],\n        [2.06905203e+02, 2.41446906e+02, 1.35900272e+02],\n        [1.95213241e+02, 1.06797023e+02, 2.38140873e+02],\n        [2.09275112e+02, 1.99669112e+02, 1.55387231e+01]],\n\n       [[1.45828591e+02, 8.26060871e+01, 1.63342551e+02],\n        [1.78963574e+02, 3.58821018e+01, 2.18024447e+02],\n        [4.88979252e+01, 1.92300694e+02, 1.10296134e+02],\n        [2.48909591e+02, 2.18121045e+02, 6.88545675e+00],\n        [1.02319440e+02, 1.55058566e+02, 1.23587756e+02],\n        [1.72676276e+02, 2.07158051e+02, 9.50542145e+01],\n        [1.84508478e+02, 2.51022181e+02, 2.42336612e+01],\n        [1.32091617e+02, 2.49785650e+02, 3.94349481e+01],\n        [8.92672930e+00, 3.50970673e+01, 2.12479005e+02],\n        [1.71100582e+02, 1.85117273e+02, 6.16679394e+01]],\n\n       [[2.37964030e+02, 5.23506276e+01, 7.05403363e+01],\n        [2.26044174e+02, 1.78414250e+02, 1.70633113e+02],\n        [1.86266856e+02, 2.42755305e+02, 6.51253423e+01],\n        [1.67479498e+02, 1.28672438e+02, 1.94520303e+02],\n        [1.37915917e+02, 6.60621730e+01, 2.51161597e+02],\n        [1.31306189e+02, 1.88180743e+02, 5.38394403e+01],\n        [1.51814010e+02, 2.40865818e+02, 3.70792356e+01],\n        [2.01282041e+02, 2.07374553e+01, 6.05277800e+01],\n        [9.89922189e+01, 1.49899412e+02, 1.55175570e+02],\n        [1.07801090e+02, 4.70256296e+01, 9.13483590e+01]],\n\n       [[1.55055661e+01, 2.39050403e+02, 3.08258619e+01],\n        [1.32742345e+02, 2.51669439e+02, 9.31812257e+01],\n        [1.01172850e+02, 2.14655055e+02, 1.65431961e+02],\n        [4.78180458e+01, 1.44154813e+02, 2.44003542e+02],\n        [1.44390353e+01, 1.52432587e+02, 1.39340751e+02],\n        [3.72950941e+01, 7.64997107e+01, 1.56555298e+02],\n        [9.88982747e+01, 2.29424821e+02, 2.17220298e+02],\n        [2.39892949e+02, 1.66706187e+02, 2.42459180e+02],\n        [1.82698216e+02, 2.21010666e+01, 1.03939880e+02],\n        [2.45383458e+02, 1.37453968e+02, 2.35739321e+02]],\n\n       [[5.72920836e+00, 2.21685860e+02, 9.07890479e-02],\n        [1.76651233e+02, 1.41192484e+02, 1.06251399e+02],\n        [9.66421272e+01, 3.69274433e+01, 1.97511073e+02],\n        [5.64537381e+01, 2.52460487e+02, 6.14880055e+01],\n        [1.31599025e+02, 2.11030648e+02, 7.67933187e+01],\n        [1.00293809e+02, 5.34017431e+01, 4.19282770e+01],\n        [1.88764318e+02, 3.87255872e+01, 2.27084226e+02],\n        [1.55824269e+02, 2.53398623e+02, 1.52106663e+02],\n        [2.12061455e+02, 2.18466972e+02, 6.49340189e+01],\n        [5.22456425e+01, 2.03973073e+02, 1.84241985e+02]],\n\n       [[4.38482305e+01, 2.37338168e+02, 1.16215125e+02],\n        [1.47939240e+02, 2.52634620e+02, 2.06604521e+02],\n        [3.62026486e+01, 2.29209677e+02, 1.47436469e+02],\n        [8.29724914e+01, 1.49739176e+02, 1.86845621e+02],\n        [1.73781796e+02, 2.05263065e+02, 1.10777343e+02],\n        [1.29472153e+01, 5.63508568e+01, 9.77705725e+01],\n        [6.68578464e+01, 1.37289529e+01, 2.34613999e+02],\n        [1.84893832e+02, 1.64694981e+02, 1.56816355e+02],\n        [1.96526716e+02, 1.08382911e+02, 1.52179955e+02],\n        [1.11456434e+02, 3.87936753e+01, 1.33604267e+02]],\n\n       [[6.68228829e+01, 2.52637568e+02, 6.95814102e+01],\n        [1.25655430e+02, 1.49262532e+02, 8.74129447e+00],\n        [1.47378291e+02, 6.18194969e+01, 2.42372324e+02],\n        [2.11707821e+02, 8.24903404e+00, 1.08007247e+02],\n        [1.30851154e+02, 1.79168611e+02, 1.51970513e+02],\n        [1.45501825e+02, 2.11951795e+02, 1.89644839e+02],\n        [8.58551583e+01, 2.20790530e+02, 4.57020540e+01],\n        [1.06031770e+00, 1.42777651e+02, 5.94443798e+00],\n        [2.40715746e+02, 1.13344961e+02, 2.26180513e+02],\n        [2.06384093e+02, 2.26073149e+02, 8.57270244e+01]],\n\n       [[8.30492387e+01, 2.20014996e+02, 2.15856118e+02],\n        [1.12910663e+02, 5.90390545e+00, 1.73297303e+02],\n        [1.85704915e+02, 3.99472845e+01, 2.79572481e+01],\n        [2.44011430e+02, 2.41395691e+02, 2.38748571e+02],\n        [2.00977334e+02, 9.69249115e+00, 2.17737768e+02],\n        [1.53373862e+02, 2.52268807e+02, 8.97407484e+01],\n        [3.78897397e+01, 7.11389999e-02, 2.29406195e+02],\n        [1.79151573e+02, 1.74537288e+02, 7.59600042e+01],\n        [1.53096801e+02, 2.02492847e+02, 3.26202828e+01],\n        [2.54304520e+02, 6.93658426e+01, 1.76975853e+02]],\n\n       [[5.79203607e+01, 1.88459158e+02, 6.59122407e+01],\n        [2.19589852e+02, 2.52327960e+02, 1.25263739e+02],\n        [1.95828495e+02, 1.53204060e+02, 2.00217353e+02],\n        [1.12048193e+00, 7.44845510e+00, 2.27072378e+02],\n        [1.89904932e+02, 2.49480694e+02, 3.19180861e+01],\n        [3.88455326e+01, 2.42404054e+02, 7.67574180e+01],\n        [2.47158834e+02, 7.07886277e+01, 2.64310199e+01],\n        [4.93050317e+01, 2.51240663e+02, 1.16837346e+02],\n        [2.32531345e+01, 1.36070340e+02, 1.92706865e+02],\n        [1.81137016e+02, 1.37824769e+02, 2.25215566e+02]],\n\n       [[5.30389853e+01, 1.79970280e+02, 1.11500586e+02],\n        [1.49126286e+02, 1.79017416e+02, 2.33655194e+02],\n        [7.87913691e+00, 2.54734270e+01, 1.97494652e+02],\n        [1.73452315e+02, 6.57105278e+01, 2.04215736e+02],\n        [7.51120527e+01, 1.03630577e+02, 2.03944275e+02],\n        [9.70957595e+01, 2.24630460e+02, 7.87439275e+01],\n        [7.59150556e+01, 6.40452476e+01, 6.18870143e+01],\n        [1.74061570e+01, 3.82225988e+01, 5.36999288e+01],\n        [1.61147995e+02, 4.49063733e+01, 1.36192750e+02],\n        [1.68820007e+01, 6.15687600e+01, 2.24985315e+02]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfc1170>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.45074677e+02,  5.87721024e+01,  5.23286362e+01],\n        [ 8.87546921e+01,  4.90277176e+01, -1.66766129e+01],\n        [-8.75710068e+01, -1.55499344e+01, -2.80496979e+01],\n        [-1.02413818e+02, -9.52297516e+01, -4.33295441e+01],\n        [-5.37230339e+01,  4.58362045e+01,  1.16361626e+02],\n        [ 1.26904411e+02,  4.72319107e+01,  9.68778000e+01],\n        [-2.87313843e+00, -1.81648331e+01, -5.50483704e+01],\n        [ 3.19612656e+01,  1.24667900e+02,  8.32251968e+01],\n        [ 1.34201874e+02, -9.98197937e+00,  7.15332413e+01],\n        [-8.84002838e+01,  8.28901138e+01,  8.55951157e+01]],\n\n       [[ 5.94035416e+01, -3.41729126e+01,  2.21485977e+01],\n        [ 1.14085442e+02, -8.08968964e+01,  5.52835770e+01],\n        [ 6.35713196e+00,  7.55216904e+01, -7.47820740e+01],\n        [-9.70535431e+01,  1.01342049e+02,  1.25229591e+02],\n        [ 1.96487503e+01,  3.82795639e+01, -2.13605576e+01],\n        [-8.88478851e+00,  9.03790512e+01,  4.89962692e+01],\n        [-7.97053375e+01,  1.34243195e+02,  6.08284836e+01],\n        [-6.45040588e+01,  1.33006653e+02,  8.41161346e+00],\n        [ 1.08540001e+02, -8.16819305e+01, -1.14753273e+02],\n        [-4.22710648e+01,  6.83382797e+01,  4.74205856e+01]],\n\n       [[-3.33986664e+01, -6.44283752e+01,  1.14284035e+02],\n        [ 6.66941147e+01,  6.16352463e+01,  1.02364174e+02],\n        [-3.88136597e+01,  1.25976311e+02,  6.25868607e+01],\n        [ 9.05813065e+01,  1.18934402e+01,  4.37994919e+01],\n        [ 1.47222595e+02, -5.07168274e+01,  1.42359238e+01],\n        [-5.00995636e+01,  7.14017410e+01,  7.62618256e+00],\n        [-6.68597717e+01,  1.24086815e+02,  2.81340103e+01],\n        [-4.34112244e+01, -9.60415421e+01,  7.76020432e+01],\n        [ 5.12365646e+01,  3.31204147e+01, -2.46877823e+01],\n        [-1.25906448e+01, -6.97533722e+01, -1.58789139e+01]],\n\n       [[-7.31131439e+01,  1.22271400e+02, -1.08174438e+02],\n        [-1.07577744e+01,  1.34890442e+02,  9.06233978e+00],\n        [ 6.14929581e+01,  9.78760605e+01, -2.25071487e+01],\n        [ 1.40064545e+02,  2.73758163e+01, -7.58619537e+01],\n        [ 3.54017410e+01,  3.56535873e+01, -1.09240967e+02],\n        [ 5.26162949e+01, -4.02792892e+01, -8.63849030e+01],\n        [ 1.13281288e+02,  1.12645821e+02, -2.47817230e+01],\n        [ 1.38520172e+02,  4.99271927e+01,  1.16212944e+02],\n        [ 8.77380371e-04, -9.46779327e+01,  5.90182114e+01],\n        [ 1.31800323e+02,  2.06749649e+01,  1.21703453e+02]],\n\n       [[-1.03848213e+02,  1.04906868e+02, -1.17950790e+02],\n        [ 2.31239319e+00,  2.44134903e+01,  5.29712296e+01],\n        [ 9.35720749e+01, -7.98515549e+01, -2.70378723e+01],\n        [-4.24509964e+01,  1.35681488e+02, -6.72262573e+01],\n        [-2.71456833e+01,  9.42516556e+01,  7.91902924e+00],\n        [-6.20107269e+01, -6.33772545e+01, -2.33861923e+01],\n        [ 1.23145226e+02, -7.80534134e+01,  6.50843124e+01],\n        [ 4.81676559e+01,  1.36619629e+02,  3.21442642e+01],\n        [-3.90049820e+01,  1.01687965e+02,  8.83814621e+01],\n        [ 8.03029861e+01,  8.71940689e+01, -7.14343567e+01]],\n\n       [[ 1.22761230e+01,  1.20559166e+02, -7.98317719e+01],\n        [ 1.02665520e+02,  1.35855621e+02,  2.42592392e+01],\n        [ 4.34974594e+01,  1.12430672e+02, -8.74773560e+01],\n        [ 8.29066238e+01,  3.29601822e+01, -4.07075119e+01],\n        [ 6.83834076e+00,  8.84840622e+01,  5.01017990e+01],\n        [-6.16843414e+00, -6.04281425e+01, -1.10732788e+02],\n        [ 1.30674988e+02, -1.03050049e+02, -5.68221512e+01],\n        [ 5.28773575e+01,  4.79159775e+01,  6.12138290e+01],\n        [ 4.82409592e+01, -8.39608765e+00,  7.28467178e+01],\n        [ 2.96652603e+01, -7.79853210e+01, -1.22235641e+01]],\n\n       [[-3.43575897e+01,  1.35858582e+02, -5.68571167e+01],\n        [-9.51977081e+01,  3.24835281e+01,  1.97542572e+00],\n        [ 1.38433319e+02, -5.49595032e+01,  2.36982956e+01],\n        [ 4.06824493e+00, -1.08529968e+02,  8.80278244e+01],\n        [ 4.80315170e+01,  6.23896103e+01,  7.17115021e+00],\n        [ 8.57058334e+01,  9.51727982e+01,  2.18218307e+01],\n        [-5.82369499e+01,  1.04011528e+02, -3.78248444e+01],\n        [-9.79945679e+01,  2.59986496e+01, -1.22619682e+02],\n        [ 1.22241508e+02, -3.43403625e+00,  1.17035744e+02],\n        [-1.82119751e+01,  1.09294151e+02,  8.27040939e+01]],\n\n       [[ 1.11917122e+02,  1.03236000e+02, -4.06307602e+01],\n        [ 6.93582993e+01, -1.10875092e+02, -1.07693405e+01],\n        [-7.59817505e+01, -7.68317108e+01,  6.20249100e+01],\n        [ 1.34809570e+02,  1.24616692e+02,  1.20331429e+02],\n        [ 1.13798759e+02, -1.07086510e+02,  7.72973404e+01],\n        [-1.41982574e+01,  1.35489807e+02,  2.96938553e+01],\n        [ 1.25467186e+02, -1.16707863e+02, -8.57902603e+01],\n        [-2.79789963e+01,  5.77582932e+01,  5.54715805e+01],\n        [-7.13187256e+01,  8.57138443e+01,  2.94168015e+01],\n        [ 7.30368423e+01, -4.74131546e+01,  1.30624512e+02]],\n\n       [[-3.80267639e+01,  7.16801529e+01, -6.57596436e+01],\n        [ 2.13247375e+01,  1.35548950e+02,  9.59098587e+01],\n        [ 9.62783432e+01,  3.64250565e+01,  7.21484909e+01],\n        [ 1.23133369e+02, -1.09330544e+02, -1.22559517e+02],\n        [-7.20209198e+01,  1.32701691e+02,  6.62249374e+01],\n        [-2.71815872e+01,  1.25625053e+02, -8.48344727e+01],\n        [-7.75079803e+01, -4.59903717e+01,  1.23478828e+02],\n        [ 1.28983459e+01,  1.34461670e+02, -7.43749695e+01],\n        [ 8.87678604e+01,  1.92913437e+01, -1.00426865e+02],\n        [ 1.21276558e+02,  2.10457687e+01,  5.74570084e+01]],\n\n       [[ 7.56158447e+00,  6.31912766e+01, -7.06410141e+01],\n        [ 1.29716187e+02,  6.22384109e+01,  2.54462814e+01],\n        [ 9.35556564e+01, -9.13055725e+01, -1.15800865e+02],\n        [ 1.00276741e+02, -5.10684738e+01,  4.97723160e+01],\n        [ 1.00005272e+02, -1.31484222e+01, -4.85679474e+01],\n        [-2.51950760e+01,  1.07851463e+02, -2.65842438e+01],\n        [-4.20519905e+01, -5.27337494e+01, -4.77649460e+01],\n        [-5.02390747e+01, -7.85563965e+01, -1.06273842e+02],\n        [ 3.22537460e+01, -7.18726273e+01,  3.74679947e+01],\n        [ 1.21046318e+02, -5.52102394e+01, -1.06798004e+02]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfc1300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[176, 175, 249],\n        [107, 165, 192],\n        [ 95, 101,  16],\n        [ 80,  21,   1],\n        [240, 162,  50],\n        [220, 164, 230],\n        [ 68,  98, 101],\n        [206, 241, 135],\n        [195, 106, 238],\n        [209, 199,  15]],\n\n       [[145,  82, 163],\n        [178,  35, 218],\n        [ 48, 192, 110],\n        [248, 218,   6],\n        [102, 155, 123],\n        [172, 207,  95],\n        [184, 251,  24],\n        [132, 249,  39],\n        [  8,  35, 212],\n        [171, 185,  61]],\n\n       [[237,  52,  70],\n        [226, 178, 170],\n        [186, 242,  65],\n        [167, 128, 194],\n        [137,  66, 251],\n        [131, 188,  53],\n        [151, 240,  37],\n        [201,  20,  60],\n        [ 98, 149, 155],\n        [107,  47,  91]],\n\n       [[ 15, 239,  30],\n        [132, 251,  93],\n        [101, 214, 165],\n        [ 47, 144, 244],\n        [ 14, 152, 139],\n        [ 37,  76, 156],\n        [ 98, 229, 217],\n        [239, 166, 242],\n        [182,  22, 103],\n        [245, 137, 235]],\n\n       [[  5, 221,   0],\n        [176, 141, 106],\n        [ 96,  36, 197],\n        [ 56, 252,  61],\n        [131, 211,  76],\n        [100,  53,  41],\n        [188,  38, 227],\n        [155, 253, 152],\n        [212, 218,  64],\n        [ 52, 203, 184]],\n\n       [[ 43, 237, 116],\n        [147, 252, 206],\n        [ 36, 229, 147],\n        [ 82, 149, 186],\n        [173, 205, 110],\n        [ 12,  56,  97],\n        [ 66,  13, 234],\n        [184, 164, 156],\n        [196, 108, 152],\n        [111,  38, 133]],\n\n       [[ 66, 252,  69],\n        [125, 149,   8],\n        [147,  61, 242],\n        [211,   8, 108],\n        [130, 179, 151],\n        [145, 211, 189],\n        [ 85, 220,  45],\n        [  1, 142,   5],\n        [240, 113, 226],\n        [206, 226,  85]],\n\n       [[ 83, 220, 215],\n        [112,   5, 173],\n        [185,  39,  27],\n        [244, 241, 238],\n        [200,   9, 217],\n        [153, 252,  89],\n        [ 37,   0, 229],\n        [179, 174,  75],\n        [153, 202,  32],\n        [254,  69, 176]],\n\n       [[ 57, 188,  65],\n        [219, 252, 125],\n        [195, 153, 200],\n        [  1,   7, 227],\n        [189, 249,  31],\n        [ 38, 242,  76],\n        [247,  70,  26],\n        [ 49, 251, 116],\n        [ 23, 136, 192],\n        [181, 137, 225]],\n\n       [[ 53, 179, 111],\n        [149, 179, 233],\n        [  7,  25, 197],\n        [173,  65, 204],\n        [ 75, 103, 203],\n        [ 97, 224,  78],\n        [ 75,  64,  61],\n        [ 17,  38,  53],\n        [161,  44, 136],\n        [ 16,  61, 224]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cf86530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 145.061    ,   58.221    ,   52.32     ],\n        [  88.061    ,   48.221    ,  -16.68     ],\n        [ -87.939    ,  -15.778999 ,  -28.68     ],\n        [-102.939    ,  -95.779    ,  -43.68     ],\n        [ -53.939003 ,   45.221    ,  116.32     ],\n        [ 126.061    ,   47.221    ,   96.32     ],\n        [  -2.939003 ,  -18.779    ,  -55.68     ],\n        [  31.060997 ,  124.221    ,   82.32     ],\n        [ 134.061    ,  -10.778999 ,   71.32     ],\n        [ -88.939    ,   82.221    ,   85.32     ]],\n\n       [[  59.060997 ,  -34.779    ,   21.32     ],\n        [ 114.061    ,  -81.779    ,   54.32     ],\n        [   6.060997 ,   75.221    ,  -75.68     ],\n        [ -97.939    ,  101.221    ,  124.32     ],\n        [  19.060997 ,   38.221    ,  -21.68     ],\n        [  -8.939003 ,   90.221    ,   48.32     ],\n        [ -79.939    ,  134.22101  ,   60.32     ],\n        [ -64.939    ,  132.22101  ,    8.32     ],\n        [ 108.061    ,  -81.779    , -115.68     ],\n        [ -42.939003 ,   68.221    ,   47.32     ]],\n\n       [[ -33.939003 ,  -64.779    ,  113.32     ],\n        [  66.061    ,   61.221    ,  102.32     ],\n        [ -38.939003 ,  125.221    ,   62.32     ],\n        [  90.061    ,   11.221001 ,   43.32     ],\n        [ 147.061    ,  -50.779    ,   13.32     ],\n        [ -50.939003 ,   71.221    ,    7.3199997],\n        [ -66.939    ,  123.221    ,   27.32     ],\n        [ -43.939003 ,  -96.779    ,   77.32     ],\n        [  51.060997 ,   32.221    ,  -25.68     ],\n        [ -12.939003 ,  -69.779    ,  -16.68     ]],\n\n       [[ -73.939    ,  122.221    , -108.68     ],\n        [ -10.939003 ,  134.22101  ,    8.32     ],\n        [  61.060997 ,   97.221    ,  -22.68     ],\n        [ 140.061    ,   27.221    ,  -76.68     ],\n        [  35.060997 ,   35.221    , -109.68     ],\n        [  52.060997 ,  -40.779    ,  -86.68     ],\n        [ 113.061    ,  112.221    ,  -25.68     ],\n        [ 138.061    ,   49.221    ,  115.32     ],\n        [  -0.939003 ,  -94.779    ,   58.32     ],\n        [ 131.061    ,   20.221    ,  121.32     ]],\n\n       [[-103.939    ,  104.221    , -118.68     ],\n        [   2.060997 ,   24.221    ,   52.32     ],\n        [  93.061    ,  -80.779    ,  -27.68     ],\n        [ -42.939003 ,  135.22101  ,  -67.68     ],\n        [ -27.939003 ,   94.221    ,    7.3199997],\n        [ -62.939003 ,  -63.779    ,  -23.68     ],\n        [ 123.061    ,  -78.779    ,   64.32     ],\n        [  48.060997 ,  136.22101  ,   31.32     ],\n        [ -39.939003 ,  101.221    ,   88.32     ],\n        [  80.061    ,   86.221    ,  -71.68     ]],\n\n       [[  12.060997 ,  120.221    ,  -80.68     ],\n        [ 102.061    ,  135.22101  ,   23.32     ],\n        [  43.060997 ,  112.221    ,  -87.68     ],\n        [  82.061    ,   32.221    ,  -41.68     ],\n        [   6.060997 ,   88.221    ,   49.32     ],\n        [  -6.939003 ,  -60.779    , -111.68     ],\n        [ 130.061    , -103.779    ,  -57.68     ],\n        [  52.060997 ,   47.221    ,   60.32     ],\n        [  48.060997 ,   -8.778999 ,   72.32     ],\n        [  29.060997 ,  -78.779    ,  -12.68     ]],\n\n       [[ -34.939003 ,  135.22101  ,  -57.68     ],\n        [ -95.939    ,   32.221    ,    1.3199997],\n        [ 138.061    ,  -55.779    ,   23.32     ],\n        [   4.060997 , -108.779    ,   87.32     ],\n        [  47.060997 ,   62.221    ,    6.3199997],\n        [  85.061    ,   94.221    ,   21.32     ],\n        [ -58.939003 ,  103.221    ,  -38.68     ],\n        [ -98.939    ,   25.221    , -122.68     ],\n        [ 122.061    ,   -3.7789993,  116.32     ],\n        [ -18.939003 ,  109.221    ,   82.32     ]],\n\n       [[ 111.061    ,  103.221    ,  -40.68     ],\n        [  69.061    , -111.779    ,  -11.68     ],\n        [ -76.939    ,  -77.779    ,   61.32     ],\n        [ 134.061    ,  124.221    ,  120.32     ],\n        [ 113.061    , -107.779    ,   76.32     ],\n        [ -14.939003 ,  135.22101  ,   29.32     ],\n        [ 125.061    , -116.779    ,  -86.68     ],\n        [ -28.939003 ,   57.221    ,   55.32     ],\n        [ -71.939    ,   85.221    ,   29.32     ],\n        [  72.061    ,  -47.779    ,  130.32     ]],\n\n       [[ -38.939003 ,   71.221    ,  -66.68     ],\n        [  21.060997 ,  135.22101  ,   95.32     ],\n        [  96.061    ,   36.221    ,   71.32     ],\n        [ 123.061    , -109.779    , -122.68     ],\n        [ -72.939    ,  132.22101  ,   65.32     ],\n        [ -27.939003 ,  125.221    ,  -85.68     ],\n        [ -77.939    ,  -46.779    ,  123.32     ],\n        [  12.060997 ,  134.22101  ,  -74.68     ],\n        [  88.061    ,   19.221    , -100.68     ],\n        [ 121.061    ,   20.221    ,   57.32     ]],\n\n       [[   7.060997 ,   62.221    ,  -70.68     ],\n        [ 129.061    ,   62.221    ,   25.32     ],\n        [  93.061    ,  -91.779    , -116.68     ],\n        [ 100.061    ,  -51.779    ,   49.32     ],\n        [  99.061    ,  -13.778999 ,  -48.68     ],\n        [ -25.939003 ,  107.221    ,  -26.68     ],\n        [ -42.939003 ,  -52.779    ,  -48.68     ],\n        [ -50.939003 ,  -78.779    , -106.68     ],\n        [  32.060997 ,  -72.779    ,   37.32     ],\n        [ 120.061    ,  -55.779    , -107.68     ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfc10d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[1.76008642e+02, 1.75551107e+02, 2.49013681e+02],\n        [1.07003389e+02, 1.65806719e+02, 1.92693688e+02],\n        [9.56303018e+01, 1.01229068e+02, 1.63679949e+01],\n        [8.03504585e+01, 2.15492442e+01, 1.52518535e+00],\n        [2.40041626e+02, 1.62615209e+02, 5.02159696e+01],\n        [2.20557801e+02, 1.64010908e+02, 2.30843408e+02],\n        [6.86316324e+01, 9.86141631e+01, 1.01065861e+02],\n        [2.06905203e+02, 2.41446906e+02, 1.35900272e+02],\n        [1.95213241e+02, 1.06797023e+02, 2.38140873e+02],\n        [2.09275112e+02, 1.99669112e+02, 1.55387231e+01]],\n\n       [[1.45828591e+02, 8.26060871e+01, 1.63342551e+02],\n        [1.78963574e+02, 3.58821018e+01, 2.18024447e+02],\n        [4.88979252e+01, 1.92300694e+02, 1.10296134e+02],\n        [2.48909591e+02, 2.18121045e+02, 6.88545675e+00],\n        [1.02319440e+02, 1.55058566e+02, 1.23587756e+02],\n        [1.72676276e+02, 2.07158051e+02, 9.50542145e+01],\n        [1.84508478e+02, 2.51022181e+02, 2.42336612e+01],\n        [1.32091617e+02, 2.49785650e+02, 3.94349481e+01],\n        [8.92672930e+00, 3.50970673e+01, 2.12479005e+02],\n        [1.71100582e+02, 1.85117273e+02, 6.16679394e+01]],\n\n       [[2.37964030e+02, 5.23506276e+01, 7.05403363e+01],\n        [2.26044174e+02, 1.78414250e+02, 1.70633113e+02],\n        [1.86266856e+02, 2.42755305e+02, 6.51253423e+01],\n        [1.67479498e+02, 1.28672438e+02, 1.94520303e+02],\n        [1.37915917e+02, 6.60621730e+01, 2.51161597e+02],\n        [1.31306189e+02, 1.88180743e+02, 5.38394403e+01],\n        [1.51814010e+02, 2.40865818e+02, 3.70792356e+01],\n        [2.01282041e+02, 2.07374553e+01, 6.05277800e+01],\n        [9.89922189e+01, 1.49899412e+02, 1.55175570e+02],\n        [1.07801090e+02, 4.70256296e+01, 9.13483590e+01]],\n\n       [[1.55055661e+01, 2.39050403e+02, 3.08258619e+01],\n        [1.32742345e+02, 2.51669439e+02, 9.31812257e+01],\n        [1.01172850e+02, 2.14655055e+02, 1.65431961e+02],\n        [4.78180458e+01, 1.44154813e+02, 2.44003542e+02],\n        [1.44390353e+01, 1.52432587e+02, 1.39340751e+02],\n        [3.72950941e+01, 7.64997107e+01, 1.56555298e+02],\n        [9.88982747e+01, 2.29424821e+02, 2.17220298e+02],\n        [2.39892949e+02, 1.66706187e+02, 2.42459180e+02],\n        [1.82698216e+02, 2.21010666e+01, 1.03939880e+02],\n        [2.45383458e+02, 1.37453968e+02, 2.35739321e+02]],\n\n       [[5.72920836e+00, 2.21685860e+02, 9.07890479e-02],\n        [1.76651233e+02, 1.41192484e+02, 1.06251399e+02],\n        [9.66421272e+01, 3.69274433e+01, 1.97511073e+02],\n        [5.64537381e+01, 2.52460487e+02, 6.14880055e+01],\n        [1.31599025e+02, 2.11030648e+02, 7.67933187e+01],\n        [1.00293809e+02, 5.34017431e+01, 4.19282770e+01],\n        [1.88764318e+02, 3.87255872e+01, 2.27084226e+02],\n        [1.55824269e+02, 2.53398623e+02, 1.52106663e+02],\n        [2.12061455e+02, 2.18466972e+02, 6.49340189e+01],\n        [5.22456425e+01, 2.03973073e+02, 1.84241985e+02]],\n\n       [[4.38482305e+01, 2.37338168e+02, 1.16215125e+02],\n        [1.47939240e+02, 2.52634620e+02, 2.06604521e+02],\n        [3.62026486e+01, 2.29209677e+02, 1.47436469e+02],\n        [8.29724914e+01, 1.49739176e+02, 1.86845621e+02],\n        [1.73781796e+02, 2.05263065e+02, 1.10777343e+02],\n        [1.29472153e+01, 5.63508568e+01, 9.77705725e+01],\n        [6.68578464e+01, 1.37289529e+01, 2.34613999e+02],\n        [1.84893832e+02, 1.64694981e+02, 1.56816355e+02],\n        [1.96526716e+02, 1.08382911e+02, 1.52179955e+02],\n        [1.11456434e+02, 3.87936753e+01, 1.33604267e+02]],\n\n       [[6.68228829e+01, 2.52637568e+02, 6.95814102e+01],\n        [1.25655430e+02, 1.49262532e+02, 8.74129447e+00],\n        [1.47378291e+02, 6.18194969e+01, 2.42372324e+02],\n        [2.11707821e+02, 8.24903404e+00, 1.08007247e+02],\n        [1.30851154e+02, 1.79168611e+02, 1.51970513e+02],\n        [1.45501825e+02, 2.11951795e+02, 1.89644839e+02],\n        [8.58551583e+01, 2.20790530e+02, 4.57020540e+01],\n        [1.06031770e+00, 1.42777651e+02, 5.94443798e+00],\n        [2.40715746e+02, 1.13344961e+02, 2.26180513e+02],\n        [2.06384093e+02, 2.26073149e+02, 8.57270244e+01]],\n\n       [[8.30492387e+01, 2.20014996e+02, 2.15856118e+02],\n        [1.12910663e+02, 5.90390545e+00, 1.73297303e+02],\n        [1.85704915e+02, 3.99472845e+01, 2.79572481e+01],\n        [2.44011430e+02, 2.41395691e+02, 2.38748571e+02],\n        [2.00977334e+02, 9.69249115e+00, 2.17737768e+02],\n        [1.53373862e+02, 2.52268807e+02, 8.97407484e+01],\n        [3.78897397e+01, 7.11389999e-02, 2.29406195e+02],\n        [1.79151573e+02, 1.74537288e+02, 7.59600042e+01],\n        [1.53096801e+02, 2.02492847e+02, 3.26202828e+01],\n        [2.54304520e+02, 6.93658426e+01, 1.76975853e+02]],\n\n       [[5.79203607e+01, 1.88459158e+02, 6.59122407e+01],\n        [2.19589852e+02, 2.52327960e+02, 1.25263739e+02],\n        [1.95828495e+02, 1.53204060e+02, 2.00217353e+02],\n        [1.12048193e+00, 7.44845510e+00, 2.27072378e+02],\n        [1.89904932e+02, 2.49480694e+02, 3.19180861e+01],\n        [3.88455326e+01, 2.42404054e+02, 7.67574180e+01],\n        [2.47158834e+02, 7.07886277e+01, 2.64310199e+01],\n        [4.93050317e+01, 2.51240663e+02, 1.16837346e+02],\n        [2.32531345e+01, 1.36070340e+02, 1.92706865e+02],\n        [1.81137016e+02, 1.37824769e+02, 2.25215566e+02]],\n\n       [[5.30389853e+01, 1.79970280e+02, 1.11500586e+02],\n        [1.49126286e+02, 1.79017416e+02, 2.33655194e+02],\n        [7.87913691e+00, 2.54734270e+01, 1.97494652e+02],\n        [1.73452315e+02, 6.57105278e+01, 2.04215736e+02],\n        [7.51120527e+01, 1.03630577e+02, 2.03944275e+02],\n        [9.70957595e+01, 2.24630460e+02, 7.87439275e+01],\n        [7.59150556e+01, 6.40452476e+01, 6.18870143e+01],\n        [1.74061570e+01, 3.82225988e+01, 5.36999288e+01],\n        [1.61147995e+02, 4.49063733e+01, 1.36192750e+02],\n        [1.68820007e+01, 6.15687600e+01, 2.24985315e+02]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfc1170>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.45074677e+02,  5.87721024e+01,  5.23286362e+01],\n        [ 8.87546921e+01,  4.90277176e+01, -1.66766129e+01],\n        [-8.75710068e+01, -1.55499344e+01, -2.80496979e+01],\n        [-1.02413818e+02, -9.52297516e+01, -4.33295441e+01],\n        [-5.37230339e+01,  4.58362045e+01,  1.16361626e+02],\n        [ 1.26904411e+02,  4.72319107e+01,  9.68778000e+01],\n        [-2.87313843e+00, -1.81648331e+01, -5.50483704e+01],\n        [ 3.19612656e+01,  1.24667900e+02,  8.32251968e+01],\n        [ 1.34201874e+02, -9.98197937e+00,  7.15332413e+01],\n        [-8.84002838e+01,  8.28901138e+01,  8.55951157e+01]],\n\n       [[ 5.94035416e+01, -3.41729126e+01,  2.21485977e+01],\n        [ 1.14085442e+02, -8.08968964e+01,  5.52835770e+01],\n        [ 6.35713196e+00,  7.55216904e+01, -7.47820740e+01],\n        [-9.70535431e+01,  1.01342049e+02,  1.25229591e+02],\n        [ 1.96487503e+01,  3.82795639e+01, -2.13605576e+01],\n        [-8.88478851e+00,  9.03790512e+01,  4.89962692e+01],\n        [-7.97053375e+01,  1.34243195e+02,  6.08284836e+01],\n        [-6.45040588e+01,  1.33006653e+02,  8.41161346e+00],\n        [ 1.08540001e+02, -8.16819305e+01, -1.14753273e+02],\n        [-4.22710648e+01,  6.83382797e+01,  4.74205856e+01]],\n\n       [[-3.33986664e+01, -6.44283752e+01,  1.14284035e+02],\n        [ 6.66941147e+01,  6.16352463e+01,  1.02364174e+02],\n        [-3.88136597e+01,  1.25976311e+02,  6.25868607e+01],\n        [ 9.05813065e+01,  1.18934402e+01,  4.37994919e+01],\n        [ 1.47222595e+02, -5.07168274e+01,  1.42359238e+01],\n        [-5.00995636e+01,  7.14017410e+01,  7.62618256e+00],\n        [-6.68597717e+01,  1.24086815e+02,  2.81340103e+01],\n        [-4.34112244e+01, -9.60415421e+01,  7.76020432e+01],\n        [ 5.12365646e+01,  3.31204147e+01, -2.46877823e+01],\n        [-1.25906448e+01, -6.97533722e+01, -1.58789139e+01]],\n\n       [[-7.31131439e+01,  1.22271400e+02, -1.08174438e+02],\n        [-1.07577744e+01,  1.34890442e+02,  9.06233978e+00],\n        [ 6.14929581e+01,  9.78760605e+01, -2.25071487e+01],\n        [ 1.40064545e+02,  2.73758163e+01, -7.58619537e+01],\n        [ 3.54017410e+01,  3.56535873e+01, -1.09240967e+02],\n        [ 5.26162949e+01, -4.02792892e+01, -8.63849030e+01],\n        [ 1.13281288e+02,  1.12645821e+02, -2.47817230e+01],\n        [ 1.38520172e+02,  4.99271927e+01,  1.16212944e+02],\n        [ 8.77380371e-04, -9.46779327e+01,  5.90182114e+01],\n        [ 1.31800323e+02,  2.06749649e+01,  1.21703453e+02]],\n\n       [[-1.03848213e+02,  1.04906868e+02, -1.17950790e+02],\n        [ 2.31239319e+00,  2.44134903e+01,  5.29712296e+01],\n        [ 9.35720749e+01, -7.98515549e+01, -2.70378723e+01],\n        [-4.24509964e+01,  1.35681488e+02, -6.72262573e+01],\n        [-2.71456833e+01,  9.42516556e+01,  7.91902924e+00],\n        [-6.20107269e+01, -6.33772545e+01, -2.33861923e+01],\n        [ 1.23145226e+02, -7.80534134e+01,  6.50843124e+01],\n        [ 4.81676559e+01,  1.36619629e+02,  3.21442642e+01],\n        [-3.90049820e+01,  1.01687965e+02,  8.83814621e+01],\n        [ 8.03029861e+01,  8.71940689e+01, -7.14343567e+01]],\n\n       [[ 1.22761230e+01,  1.20559166e+02, -7.98317719e+01],\n        [ 1.02665520e+02,  1.35855621e+02,  2.42592392e+01],\n        [ 4.34974594e+01,  1.12430672e+02, -8.74773560e+01],\n        [ 8.29066238e+01,  3.29601822e+01, -4.07075119e+01],\n        [ 6.83834076e+00,  8.84840622e+01,  5.01017990e+01],\n        [-6.16843414e+00, -6.04281425e+01, -1.10732788e+02],\n        [ 1.30674988e+02, -1.03050049e+02, -5.68221512e+01],\n        [ 5.28773575e+01,  4.79159775e+01,  6.12138290e+01],\n        [ 4.82409592e+01, -8.39608765e+00,  7.28467178e+01],\n        [ 2.96652603e+01, -7.79853210e+01, -1.22235641e+01]],\n\n       [[-3.43575897e+01,  1.35858582e+02, -5.68571167e+01],\n        [-9.51977081e+01,  3.24835281e+01,  1.97542572e+00],\n        [ 1.38433319e+02, -5.49595032e+01,  2.36982956e+01],\n        [ 4.06824493e+00, -1.08529968e+02,  8.80278244e+01],\n        [ 4.80315170e+01,  6.23896103e+01,  7.17115021e+00],\n        [ 8.57058334e+01,  9.51727982e+01,  2.18218307e+01],\n        [-5.82369499e+01,  1.04011528e+02, -3.78248444e+01],\n        [-9.79945679e+01,  2.59986496e+01, -1.22619682e+02],\n        [ 1.22241508e+02, -3.43403625e+00,  1.17035744e+02],\n        [-1.82119751e+01,  1.09294151e+02,  8.27040939e+01]],\n\n       [[ 1.11917122e+02,  1.03236000e+02, -4.06307602e+01],\n        [ 6.93582993e+01, -1.10875092e+02, -1.07693405e+01],\n        [-7.59817505e+01, -7.68317108e+01,  6.20249100e+01],\n        [ 1.34809570e+02,  1.24616692e+02,  1.20331429e+02],\n        [ 1.13798759e+02, -1.07086510e+02,  7.72973404e+01],\n        [-1.41982574e+01,  1.35489807e+02,  2.96938553e+01],\n        [ 1.25467186e+02, -1.16707863e+02, -8.57902603e+01],\n        [-2.79789963e+01,  5.77582932e+01,  5.54715805e+01],\n        [-7.13187256e+01,  8.57138443e+01,  2.94168015e+01],\n        [ 7.30368423e+01, -4.74131546e+01,  1.30624512e+02]],\n\n       [[-3.80267639e+01,  7.16801529e+01, -6.57596436e+01],\n        [ 2.13247375e+01,  1.35548950e+02,  9.59098587e+01],\n        [ 9.62783432e+01,  3.64250565e+01,  7.21484909e+01],\n        [ 1.23133369e+02, -1.09330544e+02, -1.22559517e+02],\n        [-7.20209198e+01,  1.32701691e+02,  6.62249374e+01],\n        [-2.71815872e+01,  1.25625053e+02, -8.48344727e+01],\n        [-7.75079803e+01, -4.59903717e+01,  1.23478828e+02],\n        [ 1.28983459e+01,  1.34461670e+02, -7.43749695e+01],\n        [ 8.87678604e+01,  1.92913437e+01, -1.00426865e+02],\n        [ 1.21276558e+02,  2.10457687e+01,  5.74570084e+01]],\n\n       [[ 7.56158447e+00,  6.31912766e+01, -7.06410141e+01],\n        [ 1.29716187e+02,  6.22384109e+01,  2.54462814e+01],\n        [ 9.35556564e+01, -9.13055725e+01, -1.15800865e+02],\n        [ 1.00276741e+02, -5.10684738e+01,  4.97723160e+01],\n        [ 1.00005272e+02, -1.31484222e+01, -4.85679474e+01],\n        [-2.51950760e+01,  1.07851463e+02, -2.65842438e+01],\n        [-4.20519905e+01, -5.27337494e+01, -4.77649460e+01],\n        [-5.02390747e+01, -7.85563965e+01, -1.06273842e+02],\n        [ 3.22537460e+01, -7.18726273e+01,  3.74679947e+01],\n        [ 1.21046318e+02, -5.52102394e+01, -1.06798004e+02]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfae350>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[176, 175, 249],\n        [107, 165, 192],\n        [ 95, 101,  16],\n        [ 80,  21,   1],\n        [240, 162,  50],\n        [220, 164, 230],\n        [ 68,  98, 101],\n        [206, 241, 135],\n        [195, 106, 238],\n        [209, 199,  15]],\n\n       [[145,  82, 163],\n        [178,  35, 218],\n        [ 48, 192, 110],\n        [248, 218,   6],\n        [102, 155, 123],\n        [172, 207,  95],\n        [184, 251,  24],\n        [132, 249,  39],\n        [  8,  35, 212],\n        [171, 185,  61]],\n\n       [[237,  52,  70],\n        [226, 178, 170],\n        [186, 242,  65],\n        [167, 128, 194],\n        [137,  66, 251],\n        [131, 188,  53],\n        [151, 240,  37],\n        [201,  20,  60],\n        [ 98, 149, 155],\n        [107,  47,  91]],\n\n       [[ 15, 239,  30],\n        [132, 251,  93],\n        [101, 214, 165],\n        [ 47, 144, 244],\n        [ 14, 152, 139],\n        [ 37,  76, 156],\n        [ 98, 229, 217],\n        [239, 166, 242],\n        [182,  22, 103],\n        [245, 137, 235]],\n\n       [[  5, 221,   0],\n        [176, 141, 106],\n        [ 96,  36, 197],\n        [ 56, 252,  61],\n        [131, 211,  76],\n        [100,  53,  41],\n        [188,  38, 227],\n        [155, 253, 152],\n        [212, 218,  64],\n        [ 52, 203, 184]],\n\n       [[ 43, 237, 116],\n        [147, 252, 206],\n        [ 36, 229, 147],\n        [ 82, 149, 186],\n        [173, 205, 110],\n        [ 12,  56,  97],\n        [ 66,  13, 234],\n        [184, 164, 156],\n        [196, 108, 152],\n        [111,  38, 133]],\n\n       [[ 66, 252,  69],\n        [125, 149,   8],\n        [147,  61, 242],\n        [211,   8, 108],\n        [130, 179, 151],\n        [145, 211, 189],\n        [ 85, 220,  45],\n        [  1, 142,   5],\n        [240, 113, 226],\n        [206, 226,  85]],\n\n       [[ 83, 220, 215],\n        [112,   5, 173],\n        [185,  39,  27],\n        [244, 241, 238],\n        [200,   9, 217],\n        [153, 252,  89],\n        [ 37,   0, 229],\n        [179, 174,  75],\n        [153, 202,  32],\n        [254,  69, 176]],\n\n       [[ 57, 188,  65],\n        [219, 252, 125],\n        [195, 153, 200],\n        [  1,   7, 227],\n        [189, 249,  31],\n        [ 38, 242,  76],\n        [247,  70,  26],\n        [ 49, 251, 116],\n        [ 23, 136, 192],\n        [181, 137, 225]],\n\n       [[ 53, 179, 111],\n        [149, 179, 233],\n        [  7,  25, 197],\n        [173,  65, 204],\n        [ 75, 103, 203],\n        [ 97, 224,  78],\n        [ 75,  64,  61],\n        [ 17,  38,  53],\n        [161,  44, 136],\n        [ 16,  61, 224]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cf86530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 145.061    ,   58.221    ,   52.32     ],\n        [  88.061    ,   48.221    ,  -16.68     ],\n        [ -87.939    ,  -15.778999 ,  -28.68     ],\n        [-102.939    ,  -95.779    ,  -43.68     ],\n        [ -53.939003 ,   45.221    ,  116.32     ],\n        [ 126.061    ,   47.221    ,   96.32     ],\n        [  -2.939003 ,  -18.779    ,  -55.68     ],\n        [  31.060997 ,  124.221    ,   82.32     ],\n        [ 134.061    ,  -10.778999 ,   71.32     ],\n        [ -88.939    ,   82.221    ,   85.32     ]],\n\n       [[  59.060997 ,  -34.779    ,   21.32     ],\n        [ 114.061    ,  -81.779    ,   54.32     ],\n        [   6.060997 ,   75.221    ,  -75.68     ],\n        [ -97.939    ,  101.221    ,  124.32     ],\n        [  19.060997 ,   38.221    ,  -21.68     ],\n        [  -8.939003 ,   90.221    ,   48.32     ],\n        [ -79.939    ,  134.22101  ,   60.32     ],\n        [ -64.939    ,  132.22101  ,    8.32     ],\n        [ 108.061    ,  -81.779    , -115.68     ],\n        [ -42.939003 ,   68.221    ,   47.32     ]],\n\n       [[ -33.939003 ,  -64.779    ,  113.32     ],\n        [  66.061    ,   61.221    ,  102.32     ],\n        [ -38.939003 ,  125.221    ,   62.32     ],\n        [  90.061    ,   11.221001 ,   43.32     ],\n        [ 147.061    ,  -50.779    ,   13.32     ],\n        [ -50.939003 ,   71.221    ,    7.3199997],\n        [ -66.939    ,  123.221    ,   27.32     ],\n        [ -43.939003 ,  -96.779    ,   77.32     ],\n        [  51.060997 ,   32.221    ,  -25.68     ],\n        [ -12.939003 ,  -69.779    ,  -16.68     ]],\n\n       [[ -73.939    ,  122.221    , -108.68     ],\n        [ -10.939003 ,  134.22101  ,    8.32     ],\n        [  61.060997 ,   97.221    ,  -22.68     ],\n        [ 140.061    ,   27.221    ,  -76.68     ],\n        [  35.060997 ,   35.221    , -109.68     ],\n        [  52.060997 ,  -40.779    ,  -86.68     ],\n        [ 113.061    ,  112.221    ,  -25.68     ],\n        [ 138.061    ,   49.221    ,  115.32     ],\n        [  -0.939003 ,  -94.779    ,   58.32     ],\n        [ 131.061    ,   20.221    ,  121.32     ]],\n\n       [[-103.939    ,  104.221    , -118.68     ],\n        [   2.060997 ,   24.221    ,   52.32     ],\n        [  93.061    ,  -80.779    ,  -27.68     ],\n        [ -42.939003 ,  135.22101  ,  -67.68     ],\n        [ -27.939003 ,   94.221    ,    7.3199997],\n        [ -62.939003 ,  -63.779    ,  -23.68     ],\n        [ 123.061    ,  -78.779    ,   64.32     ],\n        [  48.060997 ,  136.22101  ,   31.32     ],\n        [ -39.939003 ,  101.221    ,   88.32     ],\n        [  80.061    ,   86.221    ,  -71.68     ]],\n\n       [[  12.060997 ,  120.221    ,  -80.68     ],\n        [ 102.061    ,  135.22101  ,   23.32     ],\n        [  43.060997 ,  112.221    ,  -87.68     ],\n        [  82.061    ,   32.221    ,  -41.68     ],\n        [   6.060997 ,   88.221    ,   49.32     ],\n        [  -6.939003 ,  -60.779    , -111.68     ],\n        [ 130.061    , -103.779    ,  -57.68     ],\n        [  52.060997 ,   47.221    ,   60.32     ],\n        [  48.060997 ,   -8.778999 ,   72.32     ],\n        [  29.060997 ,  -78.779    ,  -12.68     ]],\n\n       [[ -34.939003 ,  135.22101  ,  -57.68     ],\n        [ -95.939    ,   32.221    ,    1.3199997],\n        [ 138.061    ,  -55.779    ,   23.32     ],\n        [   4.060997 , -108.779    ,   87.32     ],\n        [  47.060997 ,   62.221    ,    6.3199997],\n        [  85.061    ,   94.221    ,   21.32     ],\n        [ -58.939003 ,  103.221    ,  -38.68     ],\n        [ -98.939    ,   25.221    , -122.68     ],\n        [ 122.061    ,   -3.7789993,  116.32     ],\n        [ -18.939003 ,  109.221    ,   82.32     ]],\n\n       [[ 111.061    ,  103.221    ,  -40.68     ],\n        [  69.061    , -111.779    ,  -11.68     ],\n        [ -76.939    ,  -77.779    ,   61.32     ],\n        [ 134.061    ,  124.221    ,  120.32     ],\n        [ 113.061    , -107.779    ,   76.32     ],\n        [ -14.939003 ,  135.22101  ,   29.32     ],\n        [ 125.061    , -116.779    ,  -86.68     ],\n        [ -28.939003 ,   57.221    ,   55.32     ],\n        [ -71.939    ,   85.221    ,   29.32     ],\n        [  72.061    ,  -47.779    ,  130.32     ]],\n\n       [[ -38.939003 ,   71.221    ,  -66.68     ],\n        [  21.060997 ,  135.22101  ,   95.32     ],\n        [  96.061    ,   36.221    ,   71.32     ],\n        [ 123.061    , -109.779    , -122.68     ],\n        [ -72.939    ,  132.22101  ,   65.32     ],\n        [ -27.939003 ,  125.221    ,  -85.68     ],\n        [ -77.939    ,  -46.779    ,  123.32     ],\n        [  12.060997 ,  134.22101  ,  -74.68     ],\n        [  88.061    ,   19.221    , -100.68     ],\n        [ 121.061    ,   20.221    ,   57.32     ]],\n\n       [[   7.060997 ,   62.221    ,  -70.68     ],\n        [ 129.061    ,   62.221    ,   25.32     ],\n        [  93.061    ,  -91.779    , -116.68     ],\n        [ 100.061    ,  -51.779    ,   49.32     ],\n        [  99.061    ,  -13.778999 ,  -48.68     ],\n        [ -25.939003 ,  107.221    ,  -26.68     ],\n        [ -42.939003 ,  -52.779    ,  -48.68     ],\n        [ -50.939003 ,  -78.779    , -106.68     ],\n        [  32.060997 ,  -72.779    ,   37.32     ],\n        [ 120.061    ,  -55.779    , -107.68     ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfae0d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[1.76008642e+02, 1.07003389e+02, 9.56303018e+01, 8.03504585e+01,\n         2.40041626e+02, 2.20557801e+02, 6.86316324e+01, 2.06905203e+02,\n         1.95213241e+02, 2.09275112e+02],\n        [1.45828591e+02, 1.78963574e+02, 4.88979252e+01, 2.48909591e+02,\n         1.02319440e+02, 1.72676276e+02, 1.84508478e+02, 1.32091617e+02,\n         8.92672930e+00, 1.71100582e+02],\n        [2.37964030e+02, 2.26044174e+02, 1.86266856e+02, 1.67479498e+02,\n         1.37915917e+02, 1.31306189e+02, 1.51814010e+02, 2.01282041e+02,\n         9.89922189e+01, 1.07801090e+02],\n        [1.55055661e+01, 1.32742345e+02, 1.01172850e+02, 4.78180458e+01,\n         1.44390353e+01, 3.72950941e+01, 9.88982747e+01, 2.39892949e+02,\n         1.82698216e+02, 2.45383458e+02],\n        [5.72920836e+00, 1.76651233e+02, 9.66421272e+01, 5.64537381e+01,\n         1.31599025e+02, 1.00293809e+02, 1.88764318e+02, 1.55824269e+02,\n         2.12061455e+02, 5.22456425e+01],\n        [4.38482305e+01, 1.47939240e+02, 3.62026486e+01, 8.29724914e+01,\n         1.73781796e+02, 1.29472153e+01, 6.68578464e+01, 1.84893832e+02,\n         1.96526716e+02, 1.11456434e+02],\n        [6.68228829e+01, 1.25655430e+02, 1.47378291e+02, 2.11707821e+02,\n         1.30851154e+02, 1.45501825e+02, 8.58551583e+01, 1.06031770e+00,\n         2.40715746e+02, 2.06384093e+02],\n        [8.30492387e+01, 1.12910663e+02, 1.85704915e+02, 2.44011430e+02,\n         2.00977334e+02, 1.53373862e+02, 3.78897397e+01, 1.79151573e+02,\n         1.53096801e+02, 2.54304520e+02],\n        [5.79203607e+01, 2.19589852e+02, 1.95828495e+02, 1.12048193e+00,\n         1.89904932e+02, 3.88455326e+01, 2.47158834e+02, 4.93050317e+01,\n         2.32531345e+01, 1.81137016e+02],\n        [5.30389853e+01, 1.49126286e+02, 7.87913691e+00, 1.73452315e+02,\n         7.51120527e+01, 9.70957595e+01, 7.59150556e+01, 1.74061570e+01,\n         1.61147995e+02, 1.68820007e+01]],\n\n       [[1.75551107e+02, 1.65806719e+02, 1.01229068e+02, 2.15492442e+01,\n         1.62615209e+02, 1.64010908e+02, 9.86141631e+01, 2.41446906e+02,\n         1.06797023e+02, 1.99669112e+02],\n        [8.26060871e+01, 3.58821018e+01, 1.92300694e+02, 2.18121045e+02,\n         1.55058566e+02, 2.07158051e+02, 2.51022181e+02, 2.49785650e+02,\n         3.50970673e+01, 1.85117273e+02],\n        [5.23506276e+01, 1.78414250e+02, 2.42755305e+02, 1.28672438e+02,\n         6.60621730e+01, 1.88180743e+02, 2.40865818e+02, 2.07374553e+01,\n         1.49899412e+02, 4.70256296e+01],\n        [2.39050403e+02, 2.51669439e+02, 2.14655055e+02, 1.44154813e+02,\n         1.52432587e+02, 7.64997107e+01, 2.29424821e+02, 1.66706187e+02,\n         2.21010666e+01, 1.37453968e+02],\n        [2.21685860e+02, 1.41192484e+02, 3.69274433e+01, 2.52460487e+02,\n         2.11030648e+02, 5.34017431e+01, 3.87255872e+01, 2.53398623e+02,\n         2.18466972e+02, 2.03973073e+02],\n        [2.37338168e+02, 2.52634620e+02, 2.29209677e+02, 1.49739176e+02,\n         2.05263065e+02, 5.63508568e+01, 1.37289529e+01, 1.64694981e+02,\n         1.08382911e+02, 3.87936753e+01],\n        [2.52637568e+02, 1.49262532e+02, 6.18194969e+01, 8.24903404e+00,\n         1.79168611e+02, 2.11951795e+02, 2.20790530e+02, 1.42777651e+02,\n         1.13344961e+02, 2.26073149e+02],\n        [2.20014996e+02, 5.90390545e+00, 3.99472845e+01, 2.41395691e+02,\n         9.69249115e+00, 2.52268807e+02, 7.11389999e-02, 1.74537288e+02,\n         2.02492847e+02, 6.93658426e+01],\n        [1.88459158e+02, 2.52327960e+02, 1.53204060e+02, 7.44845510e+00,\n         2.49480694e+02, 2.42404054e+02, 7.07886277e+01, 2.51240663e+02,\n         1.36070340e+02, 1.37824769e+02],\n        [1.79970280e+02, 1.79017416e+02, 2.54734270e+01, 6.57105278e+01,\n         1.03630577e+02, 2.24630460e+02, 6.40452476e+01, 3.82225988e+01,\n         4.49063733e+01, 6.15687600e+01]],\n\n       [[2.49013681e+02, 1.92693688e+02, 1.63679949e+01, 1.52518535e+00,\n         5.02159696e+01, 2.30843408e+02, 1.01065861e+02, 1.35900272e+02,\n         2.38140873e+02, 1.55387231e+01],\n        [1.63342551e+02, 2.18024447e+02, 1.10296134e+02, 6.88545675e+00,\n         1.23587756e+02, 9.50542145e+01, 2.42336612e+01, 3.94349481e+01,\n         2.12479005e+02, 6.16679394e+01],\n        [7.05403363e+01, 1.70633113e+02, 6.51253423e+01, 1.94520303e+02,\n         2.51161597e+02, 5.38394403e+01, 3.70792356e+01, 6.05277800e+01,\n         1.55175570e+02, 9.13483590e+01],\n        [3.08258619e+01, 9.31812257e+01, 1.65431961e+02, 2.44003542e+02,\n         1.39340751e+02, 1.56555298e+02, 2.17220298e+02, 2.42459180e+02,\n         1.03939880e+02, 2.35739321e+02],\n        [9.07890479e-02, 1.06251399e+02, 1.97511073e+02, 6.14880055e+01,\n         7.67933187e+01, 4.19282770e+01, 2.27084226e+02, 1.52106663e+02,\n         6.49340189e+01, 1.84241985e+02],\n        [1.16215125e+02, 2.06604521e+02, 1.47436469e+02, 1.86845621e+02,\n         1.10777343e+02, 9.77705725e+01, 2.34613999e+02, 1.56816355e+02,\n         1.52179955e+02, 1.33604267e+02],\n        [6.95814102e+01, 8.74129447e+00, 2.42372324e+02, 1.08007247e+02,\n         1.51970513e+02, 1.89644839e+02, 4.57020540e+01, 5.94443798e+00,\n         2.26180513e+02, 8.57270244e+01],\n        [2.15856118e+02, 1.73297303e+02, 2.79572481e+01, 2.38748571e+02,\n         2.17737768e+02, 8.97407484e+01, 2.29406195e+02, 7.59600042e+01,\n         3.26202828e+01, 1.76975853e+02],\n        [6.59122407e+01, 1.25263739e+02, 2.00217353e+02, 2.27072378e+02,\n         3.19180861e+01, 7.67574180e+01, 2.64310199e+01, 1.16837346e+02,\n         1.92706865e+02, 2.25215566e+02],\n        [1.11500586e+02, 2.33655194e+02, 1.97494652e+02, 2.04215736e+02,\n         2.03944275e+02, 7.87439275e+01, 6.18870143e+01, 5.36999288e+01,\n         1.36192750e+02, 2.24985315e+02]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12d084530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.45074677e+02,  8.87546921e+01, -8.75710068e+01,\n         -1.02413818e+02, -5.37230339e+01,  1.26904411e+02,\n         -2.87313843e+00,  3.19612656e+01,  1.34201874e+02,\n         -8.84002838e+01],\n        [ 5.94035416e+01,  1.14085442e+02,  6.35713196e+00,\n         -9.70535431e+01,  1.96487503e+01, -8.88478851e+00,\n         -7.97053375e+01, -6.45040588e+01,  1.08540001e+02,\n         -4.22710648e+01],\n        [-3.33986664e+01,  6.66941147e+01, -3.88136597e+01,\n          9.05813065e+01,  1.47222595e+02, -5.00995636e+01,\n         -6.68597717e+01, -4.34112244e+01,  5.12365646e+01,\n         -1.25906448e+01],\n        [-7.31131439e+01, -1.07577744e+01,  6.14929581e+01,\n          1.40064545e+02,  3.54017410e+01,  5.26162949e+01,\n          1.13281288e+02,  1.38520172e+02,  8.77380371e-04,\n          1.31800323e+02],\n        [-1.03848213e+02,  2.31239319e+00,  9.35720749e+01,\n         -4.24509964e+01, -2.71456833e+01, -6.20107269e+01,\n          1.23145226e+02,  4.81676559e+01, -3.90049820e+01,\n          8.03029861e+01],\n        [ 1.22761230e+01,  1.02665520e+02,  4.34974594e+01,\n          8.29066238e+01,  6.83834076e+00, -6.16843414e+00,\n          1.30674988e+02,  5.28773575e+01,  4.82409592e+01,\n          2.96652603e+01],\n        [-3.43575897e+01, -9.51977081e+01,  1.38433319e+02,\n          4.06824493e+00,  4.80315170e+01,  8.57058334e+01,\n         -5.82369499e+01, -9.79945679e+01,  1.22241508e+02,\n         -1.82119751e+01],\n        [ 1.11917122e+02,  6.93582993e+01, -7.59817505e+01,\n          1.34809570e+02,  1.13798759e+02, -1.41982574e+01,\n          1.25467186e+02, -2.79789963e+01, -7.13187256e+01,\n          7.30368423e+01],\n        [-3.80267639e+01,  2.13247375e+01,  9.62783432e+01,\n          1.23133369e+02, -7.20209198e+01, -2.71815872e+01,\n         -7.75079803e+01,  1.28983459e+01,  8.87678604e+01,\n          1.21276558e+02],\n        [ 7.56158447e+00,  1.29716187e+02,  9.35556564e+01,\n          1.00276741e+02,  1.00005272e+02, -2.51950760e+01,\n         -4.20519905e+01, -5.02390747e+01,  3.22537460e+01,\n          1.21046318e+02]],\n\n       [[ 5.87721024e+01,  4.90277176e+01, -1.55499344e+01,\n         -9.52297516e+01,  4.58362045e+01,  4.72319107e+01,\n         -1.81648331e+01,  1.24667900e+02, -9.98197937e+00,\n          8.28901138e+01],\n        [-3.41729126e+01, -8.08968964e+01,  7.55216904e+01,\n          1.01342049e+02,  3.82795639e+01,  9.03790512e+01,\n          1.34243195e+02,  1.33006653e+02, -8.16819305e+01,\n          6.83382797e+01],\n        [-6.44283752e+01,  6.16352463e+01,  1.25976311e+02,\n          1.18934402e+01, -5.07168274e+01,  7.14017410e+01,\n          1.24086815e+02, -9.60415421e+01,  3.31204147e+01,\n         -6.97533722e+01],\n        [ 1.22271400e+02,  1.34890442e+02,  9.78760605e+01,\n          2.73758163e+01,  3.56535873e+01, -4.02792892e+01,\n          1.12645821e+02,  4.99271927e+01, -9.46779327e+01,\n          2.06749649e+01],\n        [ 1.04906868e+02,  2.44134903e+01, -7.98515549e+01,\n          1.35681488e+02,  9.42516556e+01, -6.33772545e+01,\n         -7.80534134e+01,  1.36619629e+02,  1.01687965e+02,\n          8.71940689e+01],\n        [ 1.20559166e+02,  1.35855621e+02,  1.12430672e+02,\n          3.29601822e+01,  8.84840622e+01, -6.04281425e+01,\n         -1.03050049e+02,  4.79159775e+01, -8.39608765e+00,\n         -7.79853210e+01],\n        [ 1.35858582e+02,  3.24835281e+01, -5.49595032e+01,\n         -1.08529968e+02,  6.23896103e+01,  9.51727982e+01,\n          1.04011528e+02,  2.59986496e+01, -3.43403625e+00,\n          1.09294151e+02],\n        [ 1.03236000e+02, -1.10875092e+02, -7.68317108e+01,\n          1.24616692e+02, -1.07086510e+02,  1.35489807e+02,\n         -1.16707863e+02,  5.77582932e+01,  8.57138443e+01,\n         -4.74131546e+01],\n        [ 7.16801529e+01,  1.35548950e+02,  3.64250565e+01,\n         -1.09330544e+02,  1.32701691e+02,  1.25625053e+02,\n         -4.59903717e+01,  1.34461670e+02,  1.92913437e+01,\n          2.10457687e+01],\n        [ 6.31912766e+01,  6.22384109e+01, -9.13055725e+01,\n         -5.10684738e+01, -1.31484222e+01,  1.07851463e+02,\n         -5.27337494e+01, -7.85563965e+01, -7.18726273e+01,\n         -5.52102394e+01]],\n\n       [[ 5.23286362e+01, -1.66766129e+01, -2.80496979e+01,\n         -4.33295441e+01,  1.16361626e+02,  9.68778000e+01,\n         -5.50483704e+01,  8.32251968e+01,  7.15332413e+01,\n          8.55951157e+01],\n        [ 2.21485977e+01,  5.52835770e+01, -7.47820740e+01,\n          1.25229591e+02, -2.13605576e+01,  4.89962692e+01,\n          6.08284836e+01,  8.41161346e+00, -1.14753273e+02,\n          4.74205856e+01],\n        [ 1.14284035e+02,  1.02364174e+02,  6.25868607e+01,\n          4.37994919e+01,  1.42359238e+01,  7.62618256e+00,\n          2.81340103e+01,  7.76020432e+01, -2.46877823e+01,\n         -1.58789139e+01],\n        [-1.08174438e+02,  9.06233978e+00, -2.25071487e+01,\n         -7.58619537e+01, -1.09240967e+02, -8.63849030e+01,\n         -2.47817230e+01,  1.16212944e+02,  5.90182114e+01,\n          1.21703453e+02],\n        [-1.17950790e+02,  5.29712296e+01, -2.70378723e+01,\n         -6.72262573e+01,  7.91902924e+00, -2.33861923e+01,\n          6.50843124e+01,  3.21442642e+01,  8.83814621e+01,\n         -7.14343567e+01],\n        [-7.98317719e+01,  2.42592392e+01, -8.74773560e+01,\n         -4.07075119e+01,  5.01017990e+01, -1.10732788e+02,\n         -5.68221512e+01,  6.12138290e+01,  7.28467178e+01,\n         -1.22235641e+01],\n        [-5.68571167e+01,  1.97542572e+00,  2.36982956e+01,\n          8.80278244e+01,  7.17115021e+00,  2.18218307e+01,\n         -3.78248444e+01, -1.22619682e+02,  1.17035744e+02,\n          8.27040939e+01],\n        [-4.06307602e+01, -1.07693405e+01,  6.20249100e+01,\n          1.20331429e+02,  7.72973404e+01,  2.96938553e+01,\n         -8.57902603e+01,  5.54715805e+01,  2.94168015e+01,\n          1.30624512e+02],\n        [-6.57596436e+01,  9.59098587e+01,  7.21484909e+01,\n         -1.22559517e+02,  6.62249374e+01, -8.48344727e+01,\n          1.23478828e+02, -7.43749695e+01, -1.00426865e+02,\n          5.74570084e+01],\n        [-7.06410141e+01,  2.54462814e+01, -1.15800865e+02,\n          4.97723160e+01, -4.85679474e+01, -2.65842438e+01,\n         -4.77649460e+01, -1.06273842e+02,  3.74679947e+01,\n         -1.06798004e+02]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfae4e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[176, 107,  95,  80, 240, 220,  68, 206, 195, 209],\n        [145, 178,  48, 248, 102, 172, 184, 132,   8, 171],\n        [237, 226, 186, 167, 137, 131, 151, 201,  98, 107],\n        [ 15, 132, 101,  47,  14,  37,  98, 239, 182, 245],\n        [  5, 176,  96,  56, 131, 100, 188, 155, 212,  52],\n        [ 43, 147,  36,  82, 173,  12,  66, 184, 196, 111],\n        [ 66, 125, 147, 211, 130, 145,  85,   1, 240, 206],\n        [ 83, 112, 185, 244, 200, 153,  37, 179, 153, 254],\n        [ 57, 219, 195,   1, 189,  38, 247,  49,  23, 181],\n        [ 53, 149,   7, 173,  75,  97,  75,  17, 161,  16]],\n\n       [[175, 165, 101,  21, 162, 164,  98, 241, 106, 199],\n        [ 82,  35, 192, 218, 155, 207, 251, 249,  35, 185],\n        [ 52, 178, 242, 128,  66, 188, 240,  20, 149,  47],\n        [239, 251, 214, 144, 152,  76, 229, 166,  22, 137],\n        [221, 141,  36, 252, 211,  53,  38, 253, 218, 203],\n        [237, 252, 229, 149, 205,  56,  13, 164, 108,  38],\n        [252, 149,  61,   8, 179, 211, 220, 142, 113, 226],\n        [220,   5,  39, 241,   9, 252,   0, 174, 202,  69],\n        [188, 252, 153,   7, 249, 242,  70, 251, 136, 137],\n        [179, 179,  25,  65, 103, 224,  64,  38,  44,  61]],\n\n       [[249, 192,  16,   1,  50, 230, 101, 135, 238,  15],\n        [163, 218, 110,   6, 123,  95,  24,  39, 212,  61],\n        [ 70, 170,  65, 194, 251,  53,  37,  60, 155,  91],\n        [ 30,  93, 165, 244, 139, 156, 217, 242, 103, 235],\n        [  0, 106, 197,  61,  76,  41, 227, 152,  64, 184],\n        [116, 206, 147, 186, 110,  97, 234, 156, 152, 133],\n        [ 69,   8, 242, 108, 151, 189,  45,   5, 226,  85],\n        [215, 173,  27, 238, 217,  89, 229,  75,  32, 176],\n        [ 65, 125, 200, 227,  31,  76,  26, 116, 192, 225],\n        [111, 233, 197, 204, 203,  78,  61,  53, 136, 224]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12d084530>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 145.061    ,   88.061    ,  -87.939    , -102.939    ,\n          -53.939003 ,  126.061    ,   -2.939003 ,   31.060997 ,\n          134.061    ,  -88.939    ],\n        [  59.060997 ,  114.061    ,    6.060997 ,  -97.939    ,\n           19.060997 ,   -8.939003 ,  -79.939    ,  -64.939    ,\n          108.061    ,  -42.939003 ],\n        [ -33.939003 ,   66.061    ,  -38.939003 ,   90.061    ,\n          147.061    ,  -50.939003 ,  -66.939    ,  -43.939003 ,\n           51.060997 ,  -12.939003 ],\n        [ -73.939    ,  -10.939003 ,   61.060997 ,  140.061    ,\n           35.060997 ,   52.060997 ,  113.061    ,  138.061    ,\n           -0.939003 ,  131.061    ],\n        [-103.939    ,    2.060997 ,   93.061    ,  -42.939003 ,\n          -27.939003 ,  -62.939003 ,  123.061    ,   48.060997 ,\n          -39.939003 ,   80.061    ],\n        [  12.060997 ,  102.061    ,   43.060997 ,   82.061    ,\n            6.060997 ,   -6.939003 ,  130.061    ,   52.060997 ,\n           48.060997 ,   29.060997 ],\n        [ -34.939003 ,  -95.939    ,  138.061    ,    4.060997 ,\n           47.060997 ,   85.061    ,  -58.939003 ,  -98.939    ,\n          122.061    ,  -18.939003 ],\n        [ 111.061    ,   69.061    ,  -76.939    ,  134.061    ,\n          113.061    ,  -14.939003 ,  125.061    ,  -28.939003 ,\n          -71.939    ,   72.061    ],\n        [ -38.939003 ,   21.060997 ,   96.061    ,  123.061    ,\n          -72.939    ,  -27.939003 ,  -77.939    ,   12.060997 ,\n           88.061    ,  121.061    ],\n        [   7.060997 ,  129.061    ,   93.061    ,  100.061    ,\n           99.061    ,  -25.939003 ,  -42.939003 ,  -50.939003 ,\n           32.060997 ,  120.061    ]],\n\n       [[  58.221    ,   48.221    ,  -15.778999 ,  -95.779    ,\n           45.221    ,   47.221    ,  -18.779    ,  124.221    ,\n          -10.778999 ,   82.221    ],\n        [ -34.779    ,  -81.779    ,   75.221    ,  101.221    ,\n           38.221    ,   90.221    ,  134.22101  ,  132.22101  ,\n          -81.779    ,   68.221    ],\n        [ -64.779    ,   61.221    ,  125.221    ,   11.221001 ,\n          -50.779    ,   71.221    ,  123.221    ,  -96.779    ,\n           32.221    ,  -69.779    ],\n        [ 122.221    ,  134.22101  ,   97.221    ,   27.221    ,\n           35.221    ,  -40.779    ,  112.221    ,   49.221    ,\n          -94.779    ,   20.221    ],\n        [ 104.221    ,   24.221    ,  -80.779    ,  135.22101  ,\n           94.221    ,  -63.779    ,  -78.779    ,  136.22101  ,\n          101.221    ,   86.221    ],\n        [ 120.221    ,  135.22101  ,  112.221    ,   32.221    ,\n           88.221    ,  -60.779    , -103.779    ,   47.221    ,\n           -8.778999 ,  -78.779    ],\n        [ 135.22101  ,   32.221    ,  -55.779    , -108.779    ,\n           62.221    ,   94.221    ,  103.221    ,   25.221    ,\n           -3.7789993,  109.221    ],\n        [ 103.221    , -111.779    ,  -77.779    ,  124.221    ,\n         -107.779    ,  135.22101  , -116.779    ,   57.221    ,\n           85.221    ,  -47.779    ],\n        [  71.221    ,  135.22101  ,   36.221    , -109.779    ,\n          132.22101  ,  125.221    ,  -46.779    ,  134.22101  ,\n           19.221    ,   20.221    ],\n        [  62.221    ,   62.221    ,  -91.779    ,  -51.779    ,\n          -13.778999 ,  107.221    ,  -52.779    ,  -78.779    ,\n          -72.779    ,  -55.779    ]],\n\n       [[  52.32     ,  -16.68     ,  -28.68     ,  -43.68     ,\n          116.32     ,   96.32     ,  -55.68     ,   82.32     ,\n           71.32     ,   85.32     ],\n        [  21.32     ,   54.32     ,  -75.68     ,  124.32     ,\n          -21.68     ,   48.32     ,   60.32     ,    8.32     ,\n         -115.68     ,   47.32     ],\n        [ 113.32     ,  102.32     ,   62.32     ,   43.32     ,\n           13.32     ,    7.3199997,   27.32     ,   77.32     ,\n          -25.68     ,  -16.68     ],\n        [-108.68     ,    8.32     ,  -22.68     ,  -76.68     ,\n         -109.68     ,  -86.68     ,  -25.68     ,  115.32     ,\n           58.32     ,  121.32     ],\n        [-118.68     ,   52.32     ,  -27.68     ,  -67.68     ,\n            7.3199997,  -23.68     ,   64.32     ,   31.32     ,\n           88.32     ,  -71.68     ],\n        [ -80.68     ,   23.32     ,  -87.68     ,  -41.68     ,\n           49.32     , -111.68     ,  -57.68     ,   60.32     ,\n           72.32     ,  -12.68     ],\n        [ -57.68     ,    1.3199997,   23.32     ,   87.32     ,\n            6.3199997,   21.32     ,  -38.68     , -122.68     ,\n          116.32     ,   82.32     ],\n        [ -40.68     ,  -11.68     ,   61.32     ,  120.32     ,\n           76.32     ,   29.32     ,  -86.68     ,   55.32     ,\n           29.32     ,  130.32     ],\n        [ -66.68     ,   95.32     ,   71.32     , -122.68     ,\n           65.32     ,  -85.68     ,  123.32     ,  -74.68     ,\n         -100.68     ,   57.32     ],\n        [ -70.68     ,   25.32     , -116.68     ,   49.32     ,\n          -48.68     ,  -26.68     ,  -48.68     , -106.68     ,\n           37.32     , -107.68     ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12cfaeb20>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        if x.ndim == 3:\n            x[0, :, :] -= mean[0]\n            x[1, :, :] -= mean[1]\n            x[2, :, :] -= mean[2]\n            if std is not None:\n                x[0, :, :] /= std[0]\n                x[1, :, :] /= std[1]\n                x[2, :, :] /= std[2]\n        else:\n            x[:, 0, :, :] -= mean[0]\n            x[:, 1, :, :] -= mean[1]\n            x[:, 2, :, :] -= mean[2]\n            if std is not None:\n                x[:, 0, :, :] /= std[0]\n                x[:, 1, :, :] /= std[1]\n                x[:, 2, :, :] /= std[2]\n    else:\n        x[..., 0] -= mean[0]\n        x[..., 1] -= mean[1]\n        x[..., 2] -= mean[2]\n        if std is not None:\n            x[..., 0] /= std[0]\n            x[..., 1] /= std[1]\n            x[..., 2] /= std[2]\n    return x",
                "def _preprocess_symbolic_input(x, data_format, mode):\n    \"\"\"Preprocesses a tensor encoding a batch of images.\n\n    # Arguments\n        x: Input tensor, 3D or 4D.\n        data_format: Data format of the image tensor.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed tensor.\n    \"\"\"\n    global _IMAGENET_MEAN\n\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if K.ndim(x) == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    if _IMAGENET_MEAN is None:\n        _IMAGENET_MEAN = K.constant(-np.array(mean))\n\n    # Zero-center by mean pixel\n    if K.dtype(x) != K.dtype(_IMAGENET_MEAN):\n        x = K.bias_add(x, K.cast(_IMAGENET_MEAN, K.dtype(x)), data_format)\n    else:\n        x = K.bias_add(x, _IMAGENET_MEAN, data_format)\n    if std is not None:\n        x /= std\n    return x",
                "def preprocess_input(x, data_format=None, mode='caffe'):\n    \"\"\"Preprocesses a tensor or Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input Numpy or symbolic tensor, 3D or 4D.\n        data_format: Data format of the image tensor/array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed tensor or Numpy array.\n\n    # Raises\n        ValueError: In case of unknown `data_format` argument.\n    \"\"\"\n    if data_format is None:\n        data_format = K.image_data_format()\n    if data_format not in {'channels_first', 'channels_last'}:\n        raise ValueError('Unknown data_format ' + str(data_format))\n\n    if isinstance(x, np.ndarray):\n        return _preprocess_numpy_input(x, data_format=data_format, mode=mode)\n    else:\n        return _preprocess_symbolic_input(x, data_format=data_format,\n                                          mode=mode)",
                "def decode_predictions(preds, top=5):\n    \"\"\"Decodes the prediction of an ImageNet model.\n\n    # Arguments\n        preds: Numpy tensor encoding a batch of predictions.\n        top: Integer, how many top-guesses to return.\n\n    # Returns\n        A list of lists of top class prediction tuples\n        `(class_name, class_description, score)`.\n        One list of tuples per sample in batch input.\n\n    # Raises\n        ValueError: In case of invalid shape of the `pred` array\n            (must be 2D).\n    \"\"\"\n    global CLASS_INDEX\n    if len(preds.shape) != 2 or preds.shape[1] != 1000:\n        raise ValueError('`decode_predictions` expects '\n                         'a batch of predictions '\n                         '(i.e. a 2D array of shape (samples, 1000)). '\n                         'Found array with shape: ' + str(preds.shape))\n    if CLASS_INDEX is None:\n        fpath = get_file('imagenet_class_index.json',\n                         CLASS_INDEX_PATH,\n                         cache_subdir='models',\n                         file_hash='c2c37ea517e94d9795004a39431a14cb')\n        with open(fpath) as f:\n            CLASS_INDEX = json.load(f)\n    results = []\n    for pred in preds:\n        top_indices = pred.argsort()[-top:][::-1]\n        result = [tuple(CLASS_INDEX[str(i)]) + (pred[i],) for i in top_indices]\n        result.sort(key=lambda x: x[2], reverse=True)\n        results.append(result)\n    return results",
                "def _obtain_input_shape(input_shape,\n                        default_size,\n                        min_size,\n                        data_format,\n                        require_flatten,\n                        weights=None):\n    \"\"\"Internal utility to compute/validate a model's input shape.\n\n    # Arguments\n        input_shape: Either None (will return the default network input shape),\n            or a user-provided shape to be validated.\n        default_size: Default input width/height for the model.\n        min_size: Minimum input width/height accepted by the model.\n        data_format: Image data format to use.\n        require_flatten: Whether the model is expected to\n            be linked to a classifier via a Flatten layer.\n        weights: One of `None` (random initialization)\n            or 'imagenet' (pre-training on ImageNet).\n            If weights='imagenet' input channels must be equal to 3.\n\n    # Returns\n        An integer shape tuple (may include None entries).\n\n    # Raises\n        ValueError: In case of invalid argument values.\n    \"\"\"\n    if weights != 'imagenet' and input_shape and len(input_shape) == 3:\n        if data_format == 'channels_first':\n            if input_shape[0] not in {1, 3}:\n                warnings.warn(\n                    'This model usually expects 1 or 3 input channels. '\n                    'However, it was passed an input_shape with ' +\n                    str(input_shape[0]) + ' input channels.')\n            default_shape = (input_shape[0], default_size, default_size)\n        else:\n            if input_shape[-1] not in {1, 3}:\n                warnings.warn(\n                    'This model usually expects 1 or 3 input channels. '\n                    'However, it was passed an input_shape with ' +\n                    str(input_shape[-1]) + ' input channels.')\n            default_shape = (default_size, default_size, input_shape[-1])\n    else:\n        if data_format == 'channels_first':\n            default_shape = (3, default_size, default_size)\n        else:\n            default_shape = (default_size, default_size, 3)\n    if weights == 'imagenet' and require_flatten:\n        if input_shape is not None:\n            if input_shape != default_shape:\n                raise ValueError('When setting`include_top=True` '\n                                 'and loading `imagenet` weights, '\n                                 '`input_shape` should be ' +\n                                 str(default_shape) + '.')\n        return default_shape\n    if input_shape:\n        if data_format == 'channels_first':\n            if input_shape is not None:\n                if len(input_shape) != 3:\n                    raise ValueError(\n                        '`input_shape` must be a tuple of three integers.')\n                if input_shape[0] != 3 and weights == 'imagenet':\n                    raise ValueError('The input must have 3 channels; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n                if ((input_shape[1] is not None and input_shape[1] < min_size) or\n                   (input_shape[2] is not None and input_shape[2] < min_size)):\n                    raise ValueError('Input size must be at least ' +\n                                     str(min_size) + 'x' + str(min_size) + '; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n        else:\n            if input_shape is not None:\n                if len(input_shape) != 3:\n                    raise ValueError(\n                        '`input_shape` must be a tuple of three integers.')\n                if input_shape[-1] != 3 and weights == 'imagenet':\n                    raise ValueError('The input must have 3 channels; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n                if ((input_shape[0] is not None and input_shape[0] < min_size) or\n                   (input_shape[1] is not None and input_shape[1] < min_size)):\n                    raise ValueError('Input size must be at least ' +\n                                     str(min_size) + 'x' + str(min_size) + '; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n    else:\n        if require_flatten:\n            input_shape = default_shape\n        else:\n            if data_format == 'channels_first':\n                input_shape = (3, None, None)\n            else:\n                input_shape = (None, None, 3)\n    if require_flatten:\n        if None in input_shape:\n            raise ValueError('If `include_top` is True, '\n                             'you should specify a static `input_shape`. '\n                             'Got `input_shape=' + str(input_shape) + '`')\n    return input_shape"
            ],
            "inscope_function_signatures": [
                "_preprocess_numpy_input(x, data_format, mode)",
                "_preprocess_symbolic_input(x, data_format, mode)",
                "preprocess_input(x, data_format=None, mode='caffe')",
                "decode_predictions(preds, top=5)",
                "_obtain_input_shape(input_shape, default_size, min_size, data_format, require_flatten, weights=None)"
            ],
            "variables_in_file": {
                "CLASS_INDEX": [
                    216,
                    212,
                    206,
                    14
                ],
                "CLASS_INDEX_PATH": [
                    208,
                    15
                ],
                "_IMAGENET_MEAN": [
                    136,
                    137,
                    140,
                    141,
                    143,
                    18
                ],
                "mode": [
                    41,
                    46,
                    178,
                    114,
                    181,
                    119
                ],
                "x": [
                    129,
                    132,
                    140,
                    141,
                    143,
                    145,
                    146,
                    42,
                    43,
                    44,
                    47,
                    177,
                    178,
                    180,
                    53,
                    54,
                    56,
                    59,
                    65,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    82,
                    83,
                    84,
                    86,
                    87,
                    88,
                    89,
                    217,
                    115,
                    116,
                    117,
                    120,
                    126,
                    127
                ],
                "mean": [
                    66,
                    67,
                    68,
                    133,
                    137,
                    74,
                    75,
                    76,
                    48,
                    82,
                    83,
                    84,
                    121,
                    60
                ],
                "std": [
                    69,
                    70,
                    71,
                    72,
                    134,
                    77,
                    78,
                    79,
                    80,
                    49,
                    144,
                    145,
                    85,
                    86,
                    87,
                    88,
                    122,
                    61
                ],
                "data_format": [
                    64,
                    264,
                    172,
                    141,
                    173,
                    143,
                    174,
                    175,
                    178,
                    51,
                    180,
                    277,
                    307,
                    249,
                    124
                ],
                "x.ndim": [
                    65,
                    53
                ],
                "K.ndim": [
                    126
                ],
                "K": [
                    137,
                    140,
                    141,
                    173,
                    143,
                    126
                ],
                "K.constant": [
                    137
                ],
                "np.array": [
                    137
                ],
                "np": [
                    137,
                    177
                ],
                "K.dtype": [
                    140,
                    141
                ],
                "K.bias_add": [
                    141,
                    143
                ],
                "K.cast": [
                    141
                ],
                "K.image_data_format": [
                    173
                ],
                "ValueError": [
                    293,
                    296,
                    202,
                    300,
                    271,
                    175,
                    280,
                    313,
                    283,
                    287
                ],
                "str": [
                    288,
                    289,
                    261,
                    297,
                    205,
                    301,
                    175,
                    302,
                    274,
                    216,
                    315,
                    284,
                    254
                ],
                "isinstance": [
                    177
                ],
                "np.ndarray": [
                    177
                ],
                "_preprocess_numpy_input": [
                    178
                ],
                "_preprocess_symbolic_input": [
                    180
                ],
                "len": [
                    248,
                    201,
                    292,
                    279
                ],
                "preds.shape": [
                    201,
                    205
                ],
                "preds": [
                    201,
                    205,
                    214
                ],
                "fpath": [
                    211,
                    207
                ],
                "get_file": [
                    207
                ],
                "open": [
                    211
                ],
                "f": [
                    211,
                    212
                ],
                "json.load": [
                    212
                ],
                "json": [
                    212
                ],
                "results": [
                    218,
                    219,
                    213
                ],
                "pred": [
                    216,
                    214,
                    215
                ],
                "top_indices": [
                    216,
                    215
                ],
                "pred.argsort": [
                    215
                ],
                "top": [
                    215
                ],
                "result": [
                    216,
                    217,
                    218
                ],
                "tuple": [
                    216
                ],
                "i": [
                    216
                ],
                "result.sort": [
                    217
                ],
                "results.append": [
                    218
                ],
                "weights": [
                    248,
                    282,
                    268,
                    295
                ],
                "input_shape": [
                    257,
                    261,
                    262,
                    269,
                    270,
                    276,
                    278,
                    279,
                    282,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    295,
                    297,
                    298,
                    299,
                    302,
                    305,
                    308,
                    310,
                    312,
                    315,
                    316,
                    248,
                    250,
                    254,
                    255
                ],
                "warnings.warn": [
                    258,
                    251
                ],
                "warnings": [
                    258,
                    251
                ],
                "default_shape": [
                    262,
                    265,
                    267,
                    270,
                    305,
                    274,
                    275,
                    255
                ],
                "default_size": [
                    265,
                    267,
                    262,
                    255
                ],
                "require_flatten": [
                    304,
                    268,
                    311
                ],
                "min_size": [
                    288,
                    298,
                    299,
                    301,
                    285,
                    286
                ]
            },
            "filtered_variables_in_file": {
                "CLASS_INDEX": [
                    216,
                    212,
                    206,
                    14
                ],
                "CLASS_INDEX_PATH": [
                    208,
                    15
                ],
                "_IMAGENET_MEAN": [
                    136,
                    137,
                    140,
                    141,
                    143,
                    18
                ],
                "mode": [
                    41,
                    46,
                    178,
                    114,
                    181,
                    119
                ],
                "x": [
                    129,
                    132,
                    140,
                    141,
                    143,
                    145,
                    146,
                    42,
                    43,
                    44,
                    47,
                    177,
                    178,
                    180,
                    53,
                    54,
                    56,
                    59,
                    65,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    82,
                    83,
                    84,
                    86,
                    87,
                    88,
                    89,
                    217,
                    115,
                    116,
                    117,
                    120,
                    126,
                    127
                ],
                "mean": [
                    66,
                    67,
                    68,
                    133,
                    137,
                    74,
                    75,
                    76,
                    48,
                    82,
                    83,
                    84,
                    121,
                    60
                ],
                "std": [
                    69,
                    70,
                    71,
                    72,
                    134,
                    77,
                    78,
                    79,
                    80,
                    49,
                    144,
                    145,
                    85,
                    86,
                    87,
                    88,
                    122,
                    61
                ],
                "data_format": [
                    64,
                    264,
                    172,
                    141,
                    173,
                    143,
                    174,
                    175,
                    178,
                    51,
                    180,
                    277,
                    307,
                    249,
                    124
                ],
                "x.ndim": [
                    65,
                    53
                ],
                "K.ndim": [
                    126
                ],
                "K": [
                    137,
                    140,
                    141,
                    173,
                    143,
                    126
                ],
                "K.constant": [
                    137
                ],
                "np.array": [
                    137
                ],
                "np": [
                    137,
                    177
                ],
                "K.dtype": [
                    140,
                    141
                ],
                "K.bias_add": [
                    141,
                    143
                ],
                "K.cast": [
                    141
                ],
                "K.image_data_format": [
                    173
                ],
                "np.ndarray": [
                    177
                ],
                "_preprocess_numpy_input": [
                    178
                ],
                "_preprocess_symbolic_input": [
                    180
                ],
                "preds.shape": [
                    201,
                    205
                ],
                "preds": [
                    201,
                    205,
                    214
                ],
                "fpath": [
                    211,
                    207
                ],
                "get_file": [
                    207
                ],
                "f": [
                    211,
                    212
                ],
                "json.load": [
                    212
                ],
                "json": [
                    212
                ],
                "results": [
                    218,
                    219,
                    213
                ],
                "pred": [
                    216,
                    214,
                    215
                ],
                "top_indices": [
                    216,
                    215
                ],
                "pred.argsort": [
                    215
                ],
                "top": [
                    215
                ],
                "result": [
                    216,
                    217,
                    218
                ],
                "i": [
                    216
                ],
                "result.sort": [
                    217
                ],
                "results.append": [
                    218
                ],
                "weights": [
                    248,
                    282,
                    268,
                    295
                ],
                "input_shape": [
                    257,
                    261,
                    262,
                    269,
                    270,
                    276,
                    278,
                    279,
                    282,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    295,
                    297,
                    298,
                    299,
                    302,
                    305,
                    308,
                    310,
                    312,
                    315,
                    316,
                    248,
                    250,
                    254,
                    255
                ],
                "warnings.warn": [
                    258,
                    251
                ],
                "warnings": [
                    258,
                    251
                ],
                "default_shape": [
                    262,
                    265,
                    267,
                    270,
                    305,
                    274,
                    275,
                    255
                ],
                "default_size": [
                    265,
                    267,
                    262,
                    255
                ],
                "require_flatten": [
                    304,
                    268,
                    311
                ],
                "min_size": [
                    288,
                    298,
                    299,
                    301,
                    285,
                    286
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/keras_25/tests/keras/applications/imagenet_utils_test.py",
                "test_function": "test_preprocess_input",
                "test_function_code": "def test_preprocess_input():\n    # Test image batch with float and int image input\n    x = np.random.uniform(0, 255, (2, 10, 10, 3))\n    xint = x.astype('int32')\n    assert utils.preprocess_input(x).shape == x.shape\n    assert utils.preprocess_input(xint).shape == xint.shape\n\n    out1 = utils.preprocess_input(x, 'channels_last')\n    out1int = utils.preprocess_input(xint, 'channels_last')\n    out2 = utils.preprocess_input(np.transpose(x, (0, 3, 1, 2)),\n                                  'channels_first')\n    out2int = utils.preprocess_input(np.transpose(xint, (0, 3, 1, 2)),\n                                     'channels_first')\n    assert_allclose(out1, out2.transpose(0, 2, 3, 1))\n    assert_allclose(out1int, out2int.transpose(0, 2, 3, 1))\n\n    # Test single image\n    x = np.random.uniform(0, 255, (10, 10, 3))\n    xint = x.astype('int32')\n    assert utils.preprocess_input(x).shape == x.shape\n    assert utils.preprocess_input(xint).shape == xint.shape\n\n    out1 = utils.preprocess_input(x, 'channels_last')\n    out1int = utils.preprocess_input(xint, 'channels_last')\n    out2 = utils.preprocess_input(np.transpose(x, (2, 0, 1)),\n                                  'channels_first')\n    out2int = utils.preprocess_input(np.transpose(xint, (2, 0, 1)),\n                                     'channels_first')\n    assert_allclose(out1, out2.transpose(1, 2, 0))\n    assert_allclose(out1int, out2int.transpose(1, 2, 0))",
                "test_error": "numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'",
                "full_test_error": "def test_preprocess_input():\n        # Test image batch with float and int image input\n        x = np.random.uniform(0, 255, (2, 10, 10, 3))\n        xint = x.astype('int32')\n        assert utils.preprocess_input(x).shape == x.shape\n>       assert utils.preprocess_input(xint).shape == xint.shape\n\ntests/keras/applications/imagenet_utils_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nkeras/applications/imagenet_utils.py:178: in preprocess_input\n    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = array([[[[109,  41,   7],\n         [ 72, 142,  98],\n         [145, 189,  28],\n         [219,  78, 114],\n         [232,...         [161, 214,  50],\n         [117,   4, 154],\n         [201,   1, 223],\n         [197, 114, 147]]]], dtype=int32)\ndata_format = 'channels_last', mode = 'caffe'\n\n    def _preprocess_numpy_input(x, data_format, mode):\n        \"\"\"Preprocesses a Numpy array encoding a batch of images.\n    \n        # Arguments\n            x: Input array, 3D or 4D.\n            data_format: Data format of the image array.\n            mode: One of \"caffe\", \"tf\" or \"torch\".\n                - caffe: will convert the images from RGB to BGR,\n                    then will zero-center each color channel with\n                    respect to the ImageNet dataset,\n                    without scaling.\n                - tf: will scale pixels between -1 and 1,\n                    sample-wise.\n                - torch: will scale pixels between 0 and 1 and then\n                    will normalize each channel with respect to the\n                    ImageNet dataset.\n    \n        # Returns\n            Preprocessed Numpy array.\n        \"\"\"\n        if mode == 'tf':\n            x /= 127.5\n            x -= 1.\n            return x\n    \n        if mode == 'torch':\n            x /= 255.\n            mean = [0.485, 0.456, 0.406]\n            std = [0.229, 0.224, 0.225]\n        else:\n            if data_format == 'channels_first':\n                # 'RGB'->'BGR'\n                if x.ndim == 3:\n                    x = x[::-1, ...]\n                else:\n                    x = x[:, ::-1, ...]\n            else:\n                # 'RGB'->'BGR'\n                x = x[..., ::-1]\n            mean = [103.939, 116.779, 123.68]\n            std = None\n    \n        # Zero-center by mean pixel\n        if data_format == 'channels_first':\n            if x.ndim == 3:\n                x[0, :, :] -= mean[0]\n                x[1, :, :] -= mean[1]\n                x[2, :, :] -= mean[2]\n                if std is not None:\n                    x[0, :, :] /= std[0]\n                    x[1, :, :] /= std[1]\n                    x[2, :, :] /= std[2]\n            else:\n                x[:, 0, :, :] -= mean[0]\n                x[:, 1, :, :] -= mean[1]\n                x[:, 2, :, :] -= mean[2]\n                if std is not None:\n                    x[:, 0, :, :] /= std[0]\n                    x[:, 1, :, :] /= std[1]\n                    x[:, 2, :, :] /= std[2]\n        else:\n>           x[..., 0] -= mean[0]\nE           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'\n\nkeras/applications/imagenet_utils.py:82: UFuncTypeError",
                "traceback": "keras/applications/imagenet_utils.py:178: in preprocess_input\n    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = array([[[[109,  41,   7],\n         [ 72, 142,  98],\n         [145, 189,  28],\n         [219,  78, 114],\n         [232,...         [161, 214,  50],\n         [117,   4, 154],\n         [201,   1, 223],\n         [197, 114, 147]]]], dtype=int32)\ndata_format = 'channels_last', mode = 'caffe'\n\n    def _preprocess_numpy_input(x, data_format, mode):\n        \"\"\"Preprocesses a Numpy array encoding a batch of images.\n    \n        # Arguments\n            x: Input array, 3D or 4D.\n            data_format: Data format of the image array.\n            mode: One of \"caffe\", \"tf\" or \"torch\".\n                - caffe: will convert the images from RGB to BGR,\n                    then will zero-center each color channel with\n                    respect to the ImageNet dataset,\n                    without scaling.\n                - tf: will scale pixels between -1 and 1,\n                    sample-wise.\n                - torch: will scale pixels between 0 and 1 and then\n                    will normalize each channel with respect to the\n                    ImageNet dataset.\n    \n        # Returns\n            Preprocessed Numpy array.\n        \"\"\"\n        if mode == 'tf':\n            x /= 127.5\n            x -= 1.\n            return x\n    \n        if mode == 'torch':\n            x /= 255.\n            mean = [0.485, 0.456, 0.406]\n            std = [0.229, 0.224, 0.225]\n        else:\n            if data_format == 'channels_first':\n                # 'RGB'->'BGR'\n                if x.ndim == 3:\n                    x = x[::-1, ...]\n                else:\n                    x = x[:, ::-1, ...]\n            else:\n                # 'RGB'->'BGR'\n                x = x[..., ::-1]\n            mean = [103.939, 116.779, 123.68]\n            std = None\n    \n        # Zero-center by mean pixel\n        if data_format == 'channels_first':\n            if x.ndim == 3:\n                x[0, :, :] -= mean[0]\n                x[1, :, :] -= mean[1]\n                x[2, :, :] -= mean[2]\n                if std is not None:\n                    x[0, :, :] /= std[0]\n                    x[1, :, :] /= std[1]\n                    x[2, :, :] /= std[2]\n            else:\n                x[:, 0, :, :] -= mean[0]\n                x[:, 1, :, :] -= mean[1]\n                x[:, 2, :, :] -= mean[2]\n                if std is not None:\n                    x[:, 0, :, :] /= std[0]\n                    x[:, 1, :, :] /= std[1]\n                    x[:, 2, :, :] /= std[2]\n        else:\n>           x[..., 0] -= mean[0]\nE           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'\n\nkeras/applications/imagenet_utils.py:82: UFuncTypeError",
                "test_function_decorators": []
            }
        ]
    }
}