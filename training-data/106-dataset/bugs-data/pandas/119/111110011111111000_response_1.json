{
    "pandas": [
        {
            "bugID": 119,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 187,
            "file_name": "/pandas/core/reshape/pivot.py",
            "replace_code": "def _add_margins(\n    table: Union[\"Series\", \"DataFrame\"],\n    data,\n    values,\n    rows,\n    cols,\n    aggfunc,\n    observed=None,\n    margins_name: str = \"All\",\n    fill_value=None,\n):\n    from pandas import DataFrame\n    if not isinstance(margins_name, str):\n        raise ValueError(\"margins_name argument must be a string\")\n    \n    msg = 'Conflicting name \"{name}\" in margins'.format(name=margins_name)\n    for level in table.index.names:\n        if margins_name in table.index.get_level_values(level):\n            raise ValueError(msg)\n    \n    grand_margin = _compute_grand_margin(data, values, aggfunc, margins_name)\n    \n    if table.ndim == 2:\n        # i.e. DataFrame\n        for level in table.columns.names:\n            if margins_name in table.columns.get_level_values(level):\n                raise ValueError(msg)\n    \n    key: Union[str, Tuple[str, ...]]\n    if len(rows) > 1:\n        key = (margins_name,) + (\"\",) * (len(rows) - 1)\n    else:\n        key = margins_name\n    \n    from pandas import DataFrame\n    \n    margin_dummy = DataFrame(grand_margin, columns=[margins_name]).T\n    \n    row_names = table.index.names\n    try:\n        for dtype in set(data.dtypes):\n            cols = data.select_dtypes([dtype]).columns\n            margin_dummy[cols] = margin_dummy[cols].astype(dtype)\n        data = data.append(margin_dummy)\n    except TypeError:\n        # we cannot reshape, so coerce the axis\n        data.index = data.index._to_safe_for_reshape()\n        data = data.append(margin_dummy)\n    data.index.names = row_names\n    \n    return data"
        }
    ]
}