{
    "pandas:6": {
        "/Volumes/SSD2T/bgp_envs/repos/pandas_6/pandas/core/groupby/grouper.py": {
            "buggy_functions": [
                {
                    "function_name": "get_grouper",
                    "function_code": "def get_grouper(\n    obj: FrameOrSeries,\n    key=None,\n    axis: int = 0,\n    level=None,\n    sort: bool = True,\n    observed: bool = False,\n    mutated: bool = False,\n    validate: bool = True,\n    dropna: bool = True,\n) -> \"Tuple[ops.BaseGrouper, List[Hashable], FrameOrSeries]\":\n    \"\"\"\n    Create and return a BaseGrouper, which is an internal\n    mapping of how to create the grouper indexers.\n    This may be composed of multiple Grouping objects, indicating\n    multiple groupers\n\n    Groupers are ultimately index mappings. They can originate as:\n    index mappings, keys to columns, functions, or Groupers\n\n    Groupers enable local references to axis,level,sort, while\n    the passed in axis, level, and sort are 'global'.\n\n    This routine tries to figure out what the passing in references\n    are and then creates a Grouping for each one, combined into\n    a BaseGrouper.\n\n    If observed & we have a categorical grouper, only show the observed\n    values.\n\n    If validate, then check for key/level overlaps.\n\n    \"\"\"\n    group_axis = obj._get_axis(axis)\n\n    # validate that the passed single level is compatible with the passed\n    # axis of the object\n    if level is not None:\n        # TODO: These if-block and else-block are almost same.\n        # MultiIndex instance check is removable, but it seems that there are\n        # some processes only for non-MultiIndex in else-block,\n        # eg. `obj.index.name != level`. We have to consider carefully whether\n        # these are applicable for MultiIndex. Even if these are applicable,\n        # we need to check if it makes no side effect to subsequent processes\n        # on the outside of this condition.\n        # (GH 17621)\n        if isinstance(group_axis, MultiIndex):\n            if is_list_like(level) and len(level) == 1:\n                level = level[0]\n\n            if key is None and is_scalar(level):\n                # Get the level values from group_axis\n                key = group_axis.get_level_values(level)\n                level = None\n\n        else:\n            # allow level to be a length-one list-like object\n            # (e.g., level=[0])\n            # GH 13901\n            if is_list_like(level):\n                nlevels = len(level)\n                if nlevels == 1:\n                    level = level[0]\n                elif nlevels == 0:\n                    raise ValueError(\"No group keys passed!\")\n                else:\n                    raise ValueError(\"multiple levels only valid with MultiIndex\")\n\n            if isinstance(level, str):\n                if obj._get_axis(axis).name != level:\n                    raise ValueError(\n                        f\"level name {level} is not the name \"\n                        f\"of the {obj._get_axis_name(axis)}\"\n                    )\n            elif level > 0 or level < -1:\n                raise ValueError(\"level > 0 or level < -1 only valid with MultiIndex\")\n\n            # NOTE: `group_axis` and `group_axis.get_level_values(level)`\n            # are same in this section.\n            level = None\n            key = group_axis\n\n    # a passed-in Grouper, directly convert\n    if isinstance(key, Grouper):\n        binner, grouper, obj = key._get_grouper(obj, validate=False)\n        if key.key is None:\n            return grouper, [], obj\n        else:\n            return grouper, [key.key], obj\n\n    # already have a BaseGrouper, just return it\n    elif isinstance(key, ops.BaseGrouper):\n        return key, [], obj\n\n    if not isinstance(key, list):\n        keys = [key]\n        match_axis_length = False\n    else:\n        keys = key\n        match_axis_length = len(keys) == len(group_axis)\n\n    # what are we after, exactly?\n    any_callable = any(callable(g) or isinstance(g, dict) for g in keys)\n    any_groupers = any(isinstance(g, Grouper) for g in keys)\n    any_arraylike = any(\n        isinstance(g, (list, tuple, Series, Index, np.ndarray)) for g in keys\n    )\n\n    # is this an index replacement?\n    if (\n        not any_callable\n        and not any_arraylike\n        and not any_groupers\n        and match_axis_length\n        and level is None\n    ):\n        if isinstance(obj, DataFrame):\n            all_in_columns_index = all(\n                g in obj.columns or g in obj.index.names for g in keys\n            )\n        else:\n            assert isinstance(obj, Series)\n            all_in_columns_index = all(g in obj.index.names for g in keys)\n\n        if not all_in_columns_index:\n            keys = [com.asarray_tuplesafe(keys)]\n\n    if isinstance(level, (tuple, list)):\n        if key is None:\n            keys = [None] * len(level)\n        levels = level\n    else:\n        levels = [level] * len(keys)\n\n    groupings: List[Grouping] = []\n    exclusions: List[Hashable] = []\n\n    # if the actual grouper should be obj[key]\n    def is_in_axis(key) -> bool:\n        if not _is_label_like(key):\n            # items -> .columns for DataFrame, .index for Series\n            items = obj.axes[-1]\n            try:\n                items.get_loc(key)\n            except (KeyError, TypeError, InvalidIndexError):\n                # TypeError shows up here if we pass e.g. Int64Index\n                return False\n\n        return True\n\n    # if the grouper is obj[name]\n    def is_in_obj(gpr) -> bool:\n        if not hasattr(gpr, \"name\"):\n            return False\n        try:\n            return gpr is obj[gpr.name]\n        except (KeyError, IndexError):\n            return False\n\n    for i, (gpr, level) in enumerate(zip(keys, levels)):\n\n        if is_in_obj(gpr):  # df.groupby(df['name'])\n            in_axis, name = True, gpr.name\n            exclusions.append(name)\n\n        elif is_in_axis(gpr):  # df.groupby('name')\n            if gpr in obj:\n                if validate:\n                    obj._check_label_or_level_ambiguity(gpr, axis=axis)\n                in_axis, name, gpr = True, gpr, obj[gpr]\n                exclusions.append(name)\n            elif obj._is_level_reference(gpr, axis=axis):\n                in_axis, name, level, gpr = False, None, gpr, None\n            else:\n                raise KeyError(gpr)\n        elif isinstance(gpr, Grouper) and gpr.key is not None:\n            # Add key to exclusions\n            exclusions.append(gpr.key)\n            in_axis, name = False, None\n        else:\n            in_axis, name = False, None\n\n        if is_categorical_dtype(gpr) and len(gpr) != obj.shape[axis]:\n            raise ValueError(\n                f\"Length of grouper ({len(gpr)}) and axis ({obj.shape[axis]}) \"\n                \"must be same length\"\n            )\n\n        # create the Grouping\n        # allow us to passing the actual Grouping as the gpr\n        ping = (\n            Grouping(\n                group_axis,\n                gpr,\n                obj=obj,\n                name=name,\n                level=level,\n                sort=sort,\n                observed=observed,\n                in_axis=in_axis,\n                dropna=dropna,\n            )\n            if not isinstance(gpr, Grouping)\n            else gpr\n        )\n\n        groupings.append(ping)\n\n    if len(groupings) == 0 and len(obj):\n        raise ValueError(\"No group keys passed!\")\n    elif len(groupings) == 0:\n        groupings.append(Grouping(Index([], dtype=\"int\"), np.array([], dtype=np.intp)))\n\n    # create the internals grouper\n    grouper = ops.BaseGrouper(group_axis, groupings, sort=sort, mutated=mutated)\n    return grouper, exclusions, obj\n",
                    "decorators": [],
                    "docstring": "Create and return a BaseGrouper, which is an internal\nmapping of how to create the grouper indexers.\nThis may be composed of multiple Grouping objects, indicating\nmultiple groupers\n\nGroupers are ultimately index mappings. They can originate as:\nindex mappings, keys to columns, functions, or Groupers\n\nGroupers enable local references to axis,level,sort, while\nthe passed in axis, level, and sort are 'global'.\n\nThis routine tries to figure out what the passing in references\nare and then creates a Grouping for each one, combined into\na BaseGrouper.\n\nIf observed & we have a categorical grouper, only show the observed\nvalues.\n\nIf validate, then check for key/level overlaps.",
                    "start_line": 601,
                    "end_line": 816,
                    "variables": {
                        "FrameOrSeries": [
                            602
                        ],
                        "int": [
                            604
                        ],
                        "bool": [
                            608,
                            609,
                            610,
                            739,
                            752,
                            606,
                            607
                        ],
                        "group_axis": [
                            647,
                            681,
                            653,
                            815,
                            793,
                            634,
                            700
                        ],
                        "obj._get_axis": [
                            634,
                            670
                        ],
                        "obj": [
                            769,
                            770,
                            772,
                            783,
                            785,
                            795,
                            670,
                            673,
                            809,
                            685,
                            687,
                            816,
                            689,
                            693,
                            717,
                            719,
                            722,
                            723,
                            742,
                            756,
                            634,
                            767
                        ],
                        "axis": [
                            673,
                            769,
                            772,
                            783,
                            785,
                            634,
                            670
                        ],
                        "level": [
                            773,
                            648,
                            649,
                            651,
                            653,
                            654,
                            660,
                            661,
                            663,
                            669,
                            670,
                            797,
                            672,
                            675,
                            680,
                            715,
                            728,
                            730,
                            731,
                            733,
                            760,
                            638
                        ],
                        "isinstance": [
                            704,
                            706,
                            803,
                            647,
                            776,
                            684,
                            717,
                            722,
                            692,
                            695,
                            728,
                            669,
                            703
                        ],
                        "MultiIndex": [
                            647
                        ],
                        "is_list_like": [
                            648,
                            660
                        ],
                        "len": [
                            648,
                            809,
                            811,
                            783,
                            785,
                            661,
                            730,
                            700,
                            733
                        ],
                        "key": [
                            740,
                            744,
                            681,
                            651,
                            684,
                            653,
                            685,
                            686,
                            689,
                            692,
                            693,
                            695,
                            696,
                            729,
                            699
                        ],
                        "is_scalar": [
                            651
                        ],
                        "group_axis.get_level_values": [
                            653
                        ],
                        "nlevels": [
                            664,
                            661,
                            662
                        ],
                        "ValueError": [
                            676,
                            810,
                            784,
                            665,
                            667,
                            671
                        ],
                        "str": [
                            669
                        ],
                        "name": [
                            770,
                            771,
                            773,
                            796,
                            779,
                            781,
                            763,
                            764,
                            670
                        ],
                        "obj._get_axis_name": [
                            673
                        ],
                        "Grouper": [
                            704,
                            776,
                            684
                        ],
                        "binner": [
                            685
                        ],
                        "grouper": [
                            685,
                            815,
                            816,
                            689,
                            687
                        ],
                        "key._get_grouper": [
                            685
                        ],
                        "key.key": [
                            689,
                            686
                        ],
                        "ops.BaseGrouper": [
                            692,
                            815
                        ],
                        "ops": [
                            692,
                            815
                        ],
                        "list": [
                            728,
                            706,
                            695
                        ],
                        "keys": [
                            704,
                            706,
                            719,
                            760,
                            723,
                            726,
                            696,
                            730,
                            699,
                            700,
                            733,
                            703
                        ],
                        "match_axis_length": [
                            697,
                            714,
                            700
                        ],
                        "any_callable": [
                            711,
                            703
                        ],
                        "any": [
                            704,
                            705,
                            703
                        ],
                        "callable": [
                            703
                        ],
                        "g": [
                            704,
                            706,
                            719,
                            723,
                            703
                        ],
                        "dict": [
                            703
                        ],
                        "any_groupers": [
                            704,
                            713
                        ],
                        "any_arraylike": [
                            712,
                            705
                        ],
                        "tuple": [
                            728,
                            706
                        ],
                        "Series": [
                            722,
                            706
                        ],
                        "Index": [
                            706,
                            812
                        ],
                        "np.ndarray": [
                            706
                        ],
                        "np": [
                            706,
                            812
                        ],
                        "DataFrame": [
                            717
                        ],
                        "all_in_columns_index": [
                            723,
                            725,
                            718
                        ],
                        "all": [
                            723,
                            718
                        ],
                        "obj.columns": [
                            719
                        ],
                        "obj.index.names": [
                            723,
                            719
                        ],
                        "obj.index": [
                            723,
                            719
                        ],
                        "com.asarray_tuplesafe": [
                            726
                        ],
                        "com": [
                            726
                        ],
                        "levels": [
                            760,
                            731,
                            733
                        ],
                        "groupings": [
                            807,
                            809,
                            811,
                            812,
                            815,
                            735
                        ],
                        "List": [
                            736,
                            735
                        ],
                        "Grouping": [
                            792,
                            803,
                            812,
                            735
                        ],
                        "exclusions": [
                            736,
                            771,
                            778,
                            816,
                            764
                        ],
                        "Hashable": [
                            736
                        ],
                        "_is_label_like": [
                            740
                        ],
                        "items": [
                            744,
                            742
                        ],
                        "obj.axes": [
                            742
                        ],
                        "items.get_loc": [
                            744
                        ],
                        "KeyError": [
                            745,
                            757,
                            775
                        ],
                        "TypeError": [
                            745
                        ],
                        "InvalidIndexError": [
                            745
                        ],
                        "hasattr": [
                            753
                        ],
                        "gpr": [
                            769,
                            770,
                            772,
                            773,
                            775,
                            776,
                            778,
                            783,
                            785,
                            794,
                            803,
                            804,
                            753,
                            756,
                            760,
                            762,
                            763,
                            766,
                            767
                        ],
                        "gpr.name": [
                            763,
                            756
                        ],
                        "IndexError": [
                            757
                        ],
                        "i": [
                            760
                        ],
                        "enumerate": [
                            760
                        ],
                        "zip": [
                            760
                        ],
                        "is_in_obj": [
                            762
                        ],
                        "in_axis": [
                            800,
                            770,
                            773,
                            779,
                            781,
                            763
                        ],
                        "exclusions.append": [
                            778,
                            771,
                            764
                        ],
                        "is_in_axis": [
                            766
                        ],
                        "validate": [
                            768
                        ],
                        "obj._check_label_or_level_ambiguity": [
                            769
                        ],
                        "obj._is_level_reference": [
                            772
                        ],
                        "gpr.key": [
                            776,
                            778
                        ],
                        "is_categorical_dtype": [
                            783
                        ],
                        "obj.shape": [
                            785,
                            783
                        ],
                        "ping": [
                            807,
                            791
                        ],
                        "sort": [
                            798,
                            815
                        ],
                        "observed": [
                            799
                        ],
                        "dropna": [
                            801
                        ],
                        "groupings.append": [
                            812,
                            807
                        ],
                        "np.array": [
                            812
                        ],
                        "np.intp": [
                            812
                        ],
                        "mutated": [
                            815
                        ]
                    },
                    "filtered_variables": {
                        "FrameOrSeries": [
                            602
                        ],
                        "group_axis": [
                            647,
                            681,
                            653,
                            815,
                            793,
                            634,
                            700
                        ],
                        "obj._get_axis": [
                            634,
                            670
                        ],
                        "obj": [
                            769,
                            770,
                            772,
                            783,
                            785,
                            795,
                            670,
                            673,
                            809,
                            685,
                            687,
                            816,
                            689,
                            693,
                            717,
                            719,
                            722,
                            723,
                            742,
                            756,
                            634,
                            767
                        ],
                        "axis": [
                            673,
                            769,
                            772,
                            783,
                            785,
                            634,
                            670
                        ],
                        "level": [
                            773,
                            648,
                            649,
                            651,
                            653,
                            654,
                            660,
                            661,
                            663,
                            669,
                            670,
                            797,
                            672,
                            675,
                            680,
                            715,
                            728,
                            730,
                            731,
                            733,
                            760,
                            638
                        ],
                        "MultiIndex": [
                            647
                        ],
                        "is_list_like": [
                            648,
                            660
                        ],
                        "key": [
                            740,
                            744,
                            681,
                            651,
                            684,
                            653,
                            685,
                            686,
                            689,
                            692,
                            693,
                            695,
                            696,
                            729,
                            699
                        ],
                        "is_scalar": [
                            651
                        ],
                        "group_axis.get_level_values": [
                            653
                        ],
                        "nlevels": [
                            664,
                            661,
                            662
                        ],
                        "name": [
                            770,
                            771,
                            773,
                            796,
                            779,
                            781,
                            763,
                            764,
                            670
                        ],
                        "obj._get_axis_name": [
                            673
                        ],
                        "Grouper": [
                            704,
                            776,
                            684
                        ],
                        "binner": [
                            685
                        ],
                        "grouper": [
                            685,
                            815,
                            816,
                            689,
                            687
                        ],
                        "key._get_grouper": [
                            685
                        ],
                        "key.key": [
                            689,
                            686
                        ],
                        "ops.BaseGrouper": [
                            692,
                            815
                        ],
                        "ops": [
                            692,
                            815
                        ],
                        "keys": [
                            704,
                            706,
                            719,
                            760,
                            723,
                            726,
                            696,
                            730,
                            699,
                            700,
                            733,
                            703
                        ],
                        "match_axis_length": [
                            697,
                            714,
                            700
                        ],
                        "any_callable": [
                            711,
                            703
                        ],
                        "g": [
                            704,
                            706,
                            719,
                            723,
                            703
                        ],
                        "any_groupers": [
                            704,
                            713
                        ],
                        "any_arraylike": [
                            712,
                            705
                        ],
                        "Series": [
                            722,
                            706
                        ],
                        "Index": [
                            706,
                            812
                        ],
                        "np.ndarray": [
                            706
                        ],
                        "np": [
                            706,
                            812
                        ],
                        "DataFrame": [
                            717
                        ],
                        "all_in_columns_index": [
                            723,
                            725,
                            718
                        ],
                        "obj.columns": [
                            719
                        ],
                        "obj.index.names": [
                            723,
                            719
                        ],
                        "obj.index": [
                            723,
                            719
                        ],
                        "com.asarray_tuplesafe": [
                            726
                        ],
                        "com": [
                            726
                        ],
                        "levels": [
                            760,
                            731,
                            733
                        ],
                        "groupings": [
                            807,
                            809,
                            811,
                            812,
                            815,
                            735
                        ],
                        "List": [
                            736,
                            735
                        ],
                        "Grouping": [
                            792,
                            803,
                            812,
                            735
                        ],
                        "exclusions": [
                            736,
                            771,
                            778,
                            816,
                            764
                        ],
                        "Hashable": [
                            736
                        ],
                        "_is_label_like": [
                            740
                        ],
                        "items": [
                            744,
                            742
                        ],
                        "obj.axes": [
                            742
                        ],
                        "items.get_loc": [
                            744
                        ],
                        "InvalidIndexError": [
                            745
                        ],
                        "gpr": [
                            769,
                            770,
                            772,
                            773,
                            775,
                            776,
                            778,
                            783,
                            785,
                            794,
                            803,
                            804,
                            753,
                            756,
                            760,
                            762,
                            763,
                            766,
                            767
                        ],
                        "gpr.name": [
                            763,
                            756
                        ],
                        "i": [
                            760
                        ],
                        "is_in_obj": [
                            762
                        ],
                        "in_axis": [
                            800,
                            770,
                            773,
                            779,
                            781,
                            763
                        ],
                        "exclusions.append": [
                            778,
                            771,
                            764
                        ],
                        "is_in_axis": [
                            766
                        ],
                        "validate": [
                            768
                        ],
                        "obj._check_label_or_level_ambiguity": [
                            769
                        ],
                        "obj._is_level_reference": [
                            772
                        ],
                        "gpr.key": [
                            776,
                            778
                        ],
                        "is_categorical_dtype": [
                            783
                        ],
                        "obj.shape": [
                            785,
                            783
                        ],
                        "ping": [
                            807,
                            791
                        ],
                        "sort": [
                            798,
                            815
                        ],
                        "observed": [
                            799
                        ],
                        "dropna": [
                            801
                        ],
                        "groupings.append": [
                            812,
                            807
                        ],
                        "np.array": [
                            812
                        ],
                        "np.intp": [
                            812
                        ],
                        "mutated": [
                            815
                        ]
                    },
                    "diff_line_number": 757,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "match_axis_length": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "groupings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": "<bound method Index._get_level_values of PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "match_axis_length": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": "[None]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "groupings": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "gpr.name": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "i": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_obj at 0x1185bddc0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": "<built-in method append of list object at 0x1185dcb80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_axis at 0x1185bde50>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": "<built-in method append of list object at 0x1185dcd40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "match_axis_length": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "groupings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": "<bound method Index._get_level_values of PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "match_axis_length": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": "[None]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "groupings": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "gpr.name": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "i": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_obj at 0x11cefddc0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": "<built-in method append of list object at 0x11cf18a40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_axis at 0x11cefde50>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": "<built-in method append of list object at 0x11cf21500>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "match_axis_length": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "groupings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": "<bound method Index._get_level_values of PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "match_axis_length": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": "[None]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "groupings": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "gpr.name": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "i": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_obj at 0x11cefddc0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": "<built-in method append of list object at 0x11cf18a40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_axis at 0x11cefde50>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": "<built-in method append of list object at 0x11cf21500>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "match_axis_length": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "groupings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": "<bound method Index._get_level_values of PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "match_axis_length": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": "[None]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "groupings": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": "<bound method PeriodIndex.get_loc of PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "gpr.name": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "i": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_obj at 0x11cefddc0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": "<built-in method append of list object at 0x11cf18a40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_axis at 0x11cefde50>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": "<built-in method append of list object at 0x11cf21500>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "match_axis_length": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "groupings": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "i": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            },
                            {
                                "FrameOrSeries": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "obj._get_axis": {
                                    "variable_value": "<bound method NDFrame._get_axis of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "A\n2000-01-01    1\nFreq: D, dtype: int64",
                                    "variable_type": "Series",
                                    "variable_shape": "(1,)"
                                },
                                "axis": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "level": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "MultiIndex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "is_list_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "key": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "is_scalar": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "group_axis.get_level_values": {
                                    "variable_value": "<bound method Index._get_level_values of PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "nlevels": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "name": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj._get_axis_name": {
                                    "variable_value": "<bound method NDFrame._get_axis_name of <class 'pandas.core.series.Series'>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "Grouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "binner": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "grouper": {
                                    "variable_value": "<pandas.core.groupby.ops.BaseGrouper object at 0x11cf0ccd0>",
                                    "variable_type": "BaseGrouper",
                                    "variable_shape": "(1,)"
                                },
                                "key._get_grouper": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "key.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "ops.BaseGrouper": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "ops": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "keys": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "match_axis_length": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_callable": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "g": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "any_groupers": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "any_arraylike": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "Series": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.ndarray": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "DataFrame": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "all_in_columns_index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index.names": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "obj.index": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "com.asarray_tuplesafe": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "com": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "levels": {
                                    "variable_value": "[None]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "groupings": {
                                    "variable_value": "[Grouping(A)]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Grouping": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "exclusions": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "Hashable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "_is_label_like": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "items": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.axes": {
                                    "variable_value": "[PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "items.get_loc": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "InvalidIndexError": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "gpr": {
                                    "variable_value": "PeriodIndex(['2000-01-01'], dtype='period[D]', name='A', freq='D')",
                                    "variable_type": "PeriodIndex",
                                    "variable_shape": "(1,)"
                                },
                                "gpr.name": {
                                    "variable_value": "'A'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "i": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "is_in_obj": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_obj at 0x11cefddc0>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "in_axis": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "exclusions.append": {
                                    "variable_value": "<built-in method append of list object at 0x11cf18a40>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "is_in_axis": {
                                    "variable_value": "<function get_grouper.<locals>.is_in_axis at 0x11cefde50>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "validate": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "obj._check_label_or_level_ambiguity": {
                                    "variable_value": "<bound method NDFrame._check_label_or_level_ambiguity of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "obj._is_level_reference": {
                                    "variable_value": "<bound method NDFrame._is_level_reference of A\n2000-01-01    1\nFreq: D, dtype: int64>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "gpr.key": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "is_categorical_dtype": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj.shape": {
                                    "variable_value": "(1,)",
                                    "variable_type": "tuple",
                                    "variable_shape": "1"
                                },
                                "ping": {
                                    "variable_value": "Grouping(A)",
                                    "variable_type": "Grouping",
                                    "variable_shape": null
                                },
                                "sort": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "observed": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dropna": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "groupings.append": {
                                    "variable_value": "<built-in method append of list object at 0x11cf21500>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "np.array": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "np.intp": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mutated": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def get_grouper(\n    obj: FrameOrSeries,\n    key=None,\n    axis: int = 0,\n    level=None,\n    sort: bool = True,\n    observed: bool = False,\n    mutated: bool = False,\n    validate: bool = True,\n    dropna: bool = True,\n) -> \"Tuple[ops.BaseGrouper, List[Hashable], FrameOrSeries]\":\n    \"\"\"\n    Create and return a BaseGrouper, which is an internal\n    mapping of how to create the grouper indexers.\n    This may be composed of multiple Grouping objects, indicating\n    multiple groupers\n\n    Groupers are ultimately index mappings. They can originate as:\n    index mappings, keys to columns, functions, or Groupers\n\n    Groupers enable local references to axis,level,sort, while\n    the passed in axis, level, and sort are 'global'.\n\n    This routine tries to figure out what the passing in references\n    are and then creates a Grouping for each one, combined into\n    a BaseGrouper.\n\n    If observed & we have a categorical grouper, only show the observed\n    values.\n\n    If validate, then check for key/level overlaps.\n\n    \"\"\"\n    group_axis = obj._get_axis(axis)\n\n    # validate that the passed single level is compatible with the passed\n    # axis of the object\n    if level is not None:\n        # TODO: These if-block and else-block are almost same.\n        # MultiIndex instance check is removable, but it seems that there are\n        # some processes only for non-MultiIndex in else-block,\n        # eg. `obj.index.name != level`. We have to consider carefully whether\n        # these are applicable for MultiIndex. Even if these are applicable,\n        # we need to check if it makes no side effect to subsequent processes\n        # on the outside of this condition.\n        # (GH 17621)\n        if isinstance(group_axis, MultiIndex):\n            if is_list_like(level) and len(level) == 1:\n                level = level[0]\n\n            if key is None and is_scalar(level):\n                # Get the level values from group_axis\n                key = group_axis.get_level_values(level)\n                level = None\n\n        else:\n            # allow level to be a length-one list-like object\n            # (e.g., level=[0])\n            # GH 13901\n            if is_list_like(level):\n                nlevels = len(level)\n                if nlevels == 1:\n                    level = level[0]\n                elif nlevels == 0:\n                    raise ValueError(\"No group keys passed!\")\n                else:\n                    raise ValueError(\"multiple levels only valid with MultiIndex\")\n\n            if isinstance(level, str):\n                if obj._get_axis(axis).name != level:\n                    raise ValueError(\n                        f\"level name {level} is not the name \"\n                        f\"of the {obj._get_axis_name(axis)}\"\n                    )\n            elif level > 0 or level < -1:\n                raise ValueError(\"level > 0 or level < -1 only valid with MultiIndex\")\n\n            # NOTE: `group_axis` and `group_axis.get_level_values(level)`\n            # are same in this section.\n            level = None\n            key = group_axis\n\n    # a passed-in Grouper, directly convert\n    if isinstance(key, Grouper):\n        binner, grouper, obj = key._get_grouper(obj, validate=False)\n        if key.key is None:\n            return grouper, [], obj\n        else:\n            return grouper, [key.key], obj\n\n    # already have a BaseGrouper, just return it\n    elif isinstance(key, ops.BaseGrouper):\n        return key, [], obj\n\n    if not isinstance(key, list):\n        keys = [key]\n        match_axis_length = False\n    else:\n        keys = key\n        match_axis_length = len(keys) == len(group_axis)\n\n    # what are we after, exactly?\n    any_callable = any(callable(g) or isinstance(g, dict) for g in keys)\n    any_groupers = any(isinstance(g, Grouper) for g in keys)\n    any_arraylike = any(\n        isinstance(g, (list, tuple, Series, Index, np.ndarray)) for g in keys\n    )\n\n    # is this an index replacement?\n    if (\n        not any_callable\n        and not any_arraylike\n        and not any_groupers\n        and match_axis_length\n        and level is None\n    ):\n        if isinstance(obj, DataFrame):\n            all_in_columns_index = all(\n                g in obj.columns or g in obj.index.names for g in keys\n            )\n        else:\n            assert isinstance(obj, Series)\n            all_in_columns_index = all(g in obj.index.names for g in keys)\n\n        if not all_in_columns_index:\n            keys = [com.asarray_tuplesafe(keys)]\n\n    if isinstance(level, (tuple, list)):\n        if key is None:\n            keys = [None] * len(level)\n        levels = level\n    else:\n        levels = [level] * len(keys)\n\n    groupings: List[Grouping] = []\n    exclusions: List[Hashable] = []\n\n    # if the actual grouper should be obj[key]\n    def is_in_axis(key) -> bool:\n        if not _is_label_like(key):\n            # items -> .columns for DataFrame, .index for Series\n            items = obj.axes[-1]\n            try:\n                items.get_loc(key)\n            except (KeyError, TypeError, InvalidIndexError):\n                # TypeError shows up here if we pass e.g. Int64Index\n                return False\n\n        return True\n\n    # if the grouper is obj[name]\n    def is_in_obj(gpr) -> bool:\n        if not hasattr(gpr, \"name\"):\n            return False\n        try:\n            return gpr is obj[gpr.name]\n        except (KeyError, IndexError):\n            return False\n\n    for i, (gpr, level) in enumerate(zip(keys, levels)):\n\n        if is_in_obj(gpr):  # df.groupby(df['name'])\n            in_axis, name = True, gpr.name\n            exclusions.append(name)\n\n        elif is_in_axis(gpr):  # df.groupby('name')\n            if gpr in obj:\n                if validate:\n                    obj._check_label_or_level_ambiguity(gpr, axis=axis)\n                in_axis, name, gpr = True, gpr, obj[gpr]\n                exclusions.append(name)\n            elif obj._is_level_reference(gpr, axis=axis):\n                in_axis, name, level, gpr = False, None, gpr, None\n            else:\n                raise KeyError(gpr)\n        elif isinstance(gpr, Grouper) and gpr.key is not None:\n            # Add key to exclusions\n            exclusions.append(gpr.key)\n            in_axis, name = False, None\n        else:\n            in_axis, name = False, None\n\n        if is_categorical_dtype(gpr) and len(gpr) != obj.shape[axis]:\n            raise ValueError(\n                f\"Length of grouper ({len(gpr)}) and axis ({obj.shape[axis]}) \"\n                \"must be same length\"\n            )\n\n        # create the Grouping\n        # allow us to passing the actual Grouping as the gpr\n        ping = (\n            Grouping(\n                group_axis,\n                gpr,\n                obj=obj,\n                name=name,\n                level=level,\n                sort=sort,\n                observed=observed,\n                in_axis=in_axis,\n                dropna=dropna,\n            )\n            if not isinstance(gpr, Grouping)\n            else gpr\n        )\n\n        groupings.append(ping)\n\n    if len(groupings) == 0 and len(obj):\n        raise ValueError(\"No group keys passed!\")\n    elif len(groupings) == 0:\n        groupings.append(Grouping(Index([], dtype=\"int\"), np.array([], dtype=np.intp)))\n\n    # create the internals grouper\n    grouper = ops.BaseGrouper(group_axis, groupings, sort=sort, mutated=mutated)\n    return grouper, exclusions, obj",
                "def _is_label_like(val) -> bool:\n    return isinstance(val, (str, tuple)) or (val is not None and is_scalar(val))",
                "def _convert_grouper(axis: Index, grouper):\n    if isinstance(grouper, dict):\n        return grouper.get\n    elif isinstance(grouper, Series):\n        if grouper.index.equals(axis):\n            return grouper._values\n        else:\n            return grouper.reindex(axis)._values\n    elif isinstance(grouper, (list, Series, Index, np.ndarray)):\n        if len(grouper) != len(axis):\n            raise ValueError(\"Grouper and axis must be same length\")\n        return grouper\n    else:\n        return grouper",
                "def __new__(cls, *args, **kwargs):\n    if kwargs.get(\"freq\") is not None:\n        from pandas.core.resample import TimeGrouper\n\n        # Deprecation warning of `base` and `loffset` since v1.1.0:\n        # we are raising the warning here to be able to set the `stacklevel`\n        # properly since we need to raise the `base` and `loffset` deprecation\n        # warning from three different cases:\n        #   core/generic.py::NDFrame.resample\n        #   core/groupby/groupby.py::GroupBy.resample\n        #   core/groupby/grouper.py::Grouper\n        # raising these warnings from TimeGrouper directly would fail the test:\n        #   tests/resample/test_deprecated.py::test_deprecating_on_loffset_and_base\n\n        # hacky way to set the stacklevel: if cls is TimeGrouper it means\n        # that the call comes from a pandas internal call of resample,\n        # otherwise it comes from pd.Grouper\n        stacklevel = 4 if cls is TimeGrouper else 2\n        if kwargs.get(\"base\", None) is not None:\n            warnings.warn(\n                \"'base' in .resample() and in Grouper() is deprecated.\\n\"\n                \"The new arguments that you should use are 'offset' or 'origin'.\\n\"\n                '\\n>>> df.resample(freq=\"3s\", base=2)\\n'\n                \"\\nbecomes:\\n\"\n                '\\n>>> df.resample(freq=\"3s\", offset=\"2s\")\\n',\n                FutureWarning,\n                stacklevel=stacklevel,\n            )\n\n        if kwargs.get(\"loffset\", None) is not None:\n            warnings.warn(\n                \"'loffset' in .resample() and in Grouper() is deprecated.\\n\"\n                '\\n>>> df.resample(freq=\"3s\", loffset=\"8H\")\\n'\n                \"\\nbecomes:\\n\"\n                \"\\n>>> from pandas.tseries.frequencies import to_offset\"\n                '\\n>>> df = df.resample(freq=\"3s\").mean()'\n                '\\n>>> df.index = df.index.to_timestamp() + to_offset(\"8H\")\\n',\n                FutureWarning,\n                stacklevel=stacklevel,\n            )\n\n        cls = TimeGrouper\n    return super().__new__(cls)",
                "def __init__(\n    self, key=None, level=None, freq=None, axis=0, sort=False, dropna=True\n):\n    self.key = key\n    self.level = level\n    self.freq = freq\n    self.axis = axis\n    self.sort = sort\n\n    self.grouper = None\n    self.obj = None\n    self.indexer = None\n    self.binner = None\n    self._grouper = None\n    self.dropna = dropna",
                "@property\ndef ax(self):\n    return self.grouper",
                "def _get_grouper(self, obj, validate: bool = True):\n    \"\"\"\n    Parameters\n    ----------\n    obj : the subject object\n    validate : boolean, default True\n        if True, validate the grouper\n\n    Returns\n    -------\n    a tuple of binner, grouper, obj (possibly sorted)\n    \"\"\"\n    self._set_grouper(obj)\n    self.grouper, _, self.obj = get_grouper(\n        self.obj,\n        [self.key],\n        axis=self.axis,\n        level=self.level,\n        sort=self.sort,\n        validate=validate,\n        dropna=self.dropna,\n    )\n    return self.binner, self.grouper, self.obj",
                "def _set_grouper(self, obj: FrameOrSeries, sort: bool = False):\n    \"\"\"\n    given an object and the specifications, setup the internal grouper\n    for this particular specification\n\n    Parameters\n    ----------\n    obj : Series or DataFrame\n    sort : bool, default False\n        whether the resulting grouper should be sorted\n    \"\"\"\n    assert obj is not None\n\n    if self.key is not None and self.level is not None:\n        raise ValueError(\"The Grouper cannot specify both a key and a level!\")\n\n    # Keep self.grouper value before overriding\n    if self._grouper is None:\n        self._grouper = self.grouper\n\n    # the key must be a valid info item\n    if self.key is not None:\n        key = self.key\n        # The 'on' is already defined\n        if getattr(self.grouper, \"name\", None) == key and isinstance(\n            obj, ABCSeries\n        ):\n            ax = self._grouper.take(obj.index)\n        else:\n            if key not in obj._info_axis:\n                raise KeyError(f\"The grouper name {key} is not found\")\n            ax = Index(obj[key], name=key)\n\n    else:\n        ax = obj._get_axis(self.axis)\n        if self.level is not None:\n            level = self.level\n\n            # if a level is given it must be a mi level or\n            # equivalent to the axis name\n            if isinstance(ax, MultiIndex):\n                level = ax._get_level_number(level)\n                ax = Index(ax._get_level_values(level), name=ax.names[level])\n\n            else:\n                if level not in (0, ax.name):\n                    raise ValueError(f\"The level {level} is not valid\")\n\n    # possibly sort\n    if (self.sort or sort) and not ax.is_monotonic:\n        # use stable sort to support first, last, nth\n        indexer = self.indexer = ax.argsort(kind=\"mergesort\")\n        ax = ax.take(indexer)\n        obj = obj.take(indexer, axis=self.axis)\n\n    self.obj = obj\n    self.grouper = ax\n    return self.grouper",
                "@property\ndef groups(self):\n    return self.grouper.groups",
                "def __repr__(self) -> str:\n    attrs_list = (\n        f\"{attr_name}={repr(getattr(self, attr_name))}\"\n        for attr_name in self._attributes\n        if getattr(self, attr_name) is not None\n    )\n    attrs = \", \".join(attrs_list)\n    cls_name = type(self).__name__\n    return f\"{cls_name}({attrs})\"",
                "def __init__(\n    self,\n    index: Index,\n    grouper=None,\n    obj: Optional[FrameOrSeries] = None,\n    name=None,\n    level=None,\n    sort: bool = True,\n    observed: bool = False,\n    in_axis: bool = False,\n    dropna: bool = True,\n):\n    self.name = name\n    self.level = level\n    self.grouper = _convert_grouper(index, grouper)\n    self.all_grouper = None\n    self.index = index\n    self.sort = sort\n    self.obj = obj\n    self.observed = observed\n    self.in_axis = in_axis\n    self.dropna = dropna\n\n    # right place for this?\n    if isinstance(grouper, (Series, Index)) and name is None:\n        self.name = grouper.name\n\n    if isinstance(grouper, MultiIndex):\n        self.grouper = grouper._values\n\n    # we have a single grouper which may be a myriad of things,\n    # some of which are dependent on the passing in level\n\n    if level is not None:\n        if not isinstance(level, int):\n            if level not in index.names:\n                raise AssertionError(f\"Level {level} not in index\")\n            level = index.names.index(level)\n\n        if self.name is None:\n            self.name = index.names[level]\n\n        (\n            self.grouper,\n            self._codes,\n            self._group_index,\n        ) = index._get_grouper_for_level(self.grouper, level)\n\n    # a passed Grouper like, directly get the grouper in the same way\n    # as single grouper groupby, use the group_info to get codes\n    elif isinstance(self.grouper, Grouper):\n        # get the new grouper; we already have disambiguated\n        # what key/level refer to exactly, don't need to\n        # check again as we have by this point converted these\n        # to an actual value (rather than a pd.Grouper)\n        _, grouper, _ = self.grouper._get_grouper(self.obj, validate=False)\n        if self.name is None:\n            self.name = grouper.result_index.name\n        self.obj = self.grouper.obj\n        self.grouper = grouper._get_grouper()\n\n    else:\n        if self.grouper is None and self.name is not None and self.obj is not None:\n            self.grouper = self.obj[self.name]\n\n        elif isinstance(self.grouper, (list, tuple)):\n            self.grouper = com.asarray_tuplesafe(self.grouper)\n\n        # a passed Categorical\n        elif is_categorical_dtype(self.grouper):\n\n            self.grouper, self.all_grouper = recode_for_groupby(\n                self.grouper, self.sort, observed\n            )\n            categories = self.grouper.categories\n\n            # we make a CategoricalIndex out of the cat grouper\n            # preserving the categories / ordered attributes\n            self._codes = self.grouper.codes\n            if observed:\n                codes = algorithms.unique1d(self.grouper.codes)\n                codes = codes[codes != -1]\n                if sort or self.grouper.ordered:\n                    codes = np.sort(codes)\n            else:\n                codes = np.arange(len(categories))\n\n            self._group_index = CategoricalIndex(\n                Categorical.from_codes(\n                    codes=codes, categories=categories, ordered=self.grouper.ordered\n                ),\n                name=self.name,\n            )\n\n        # we are done\n        if isinstance(self.grouper, Grouping):\n            self.grouper = self.grouper.grouper\n\n        # no level passed\n        elif not isinstance(\n            self.grouper, (Series, Index, ExtensionArray, np.ndarray)\n        ):\n            if getattr(self.grouper, \"ndim\", 1) != 1:\n                t = self.name or str(type(self.grouper))\n                raise ValueError(f\"Grouper for '{t}' not 1-dimensional\")\n            self.grouper = self.index.map(self.grouper)\n            if not (\n                hasattr(self.grouper, \"__len__\")\n                and len(self.grouper) == len(self.index)\n            ):\n                grper = pprint_thing(self.grouper)\n                errmsg = (\n                    \"Grouper result violates len(labels) == \"\n                    f\"len(data)\\nresult: {grper}\"\n                )\n                self.grouper = None  # Try for sanity\n                raise AssertionError(errmsg)\n\n    # if we have a date/time-like grouper, make sure that we have\n    # Timestamps like\n    if getattr(self.grouper, \"dtype\", None) is not None:\n        if is_datetime64_dtype(self.grouper):\n            self.grouper = self.grouper.astype(\"datetime64[ns]\")\n        elif is_timedelta64_dtype(self.grouper):\n\n            self.grouper = self.grouper.astype(\"timedelta64[ns]\")",
                "def __repr__(self) -> str:\n    return f\"Grouping({self.name})\"",
                "def __iter__(self):\n    return iter(self.indices)",
                "@property\ndef ngroups(self) -> int:\n    return len(self.group_index)",
                "@cache_readonly\ndef indices(self):\n    # we have a list of groupers\n    if isinstance(self.grouper, ops.BaseGrouper):\n        return self.grouper.indices\n\n    values = Categorical(self.grouper)\n    return values._reverse_indexer()",
                "@property\ndef codes(self) -> np.ndarray:\n    if self._codes is None:\n        self._make_codes()\n    return self._codes",
                "@cache_readonly\ndef result_index(self) -> Index:\n    if self.all_grouper is not None:\n        return recode_from_groupby(self.all_grouper, self.sort, self.group_index)\n    return self.group_index",
                "@property\ndef group_index(self) -> Index:\n    if self._group_index is None:\n        self._make_codes()\n    assert self._group_index is not None\n    return self._group_index",
                "def _make_codes(self) -> None:\n    if self._codes is None or self._group_index is None:\n        # we have a list of groupers\n        if isinstance(self.grouper, ops.BaseGrouper):\n            codes = self.grouper.codes_info\n            uniques = self.grouper.result_index\n        else:\n            codes, uniques = algorithms.factorize(\n                self.grouper, sort=self.sort, dropna=self.dropna\n            )\n            uniques = Index(uniques, name=self.name)\n        self._codes = codes\n        self._group_index = uniques",
                "@cache_readonly\ndef groups(self) -> Dict[Hashable, np.ndarray]:\n    return self.index.groupby(Categorical.from_codes(self.codes, self.group_index))",
                "def is_in_axis(key) -> bool:\n    if not _is_label_like(key):\n        # items -> .columns for DataFrame, .index for Series\n        items = obj.axes[-1]\n        try:\n            items.get_loc(key)\n        except (KeyError, TypeError, InvalidIndexError):\n            # TypeError shows up here if we pass e.g. Int64Index\n            return False\n\n    return True",
                "def is_in_obj(gpr) -> bool:\n    if not hasattr(gpr, \"name\"):\n        return False\n    try:\n        return gpr is obj[gpr.name]\n    except (KeyError, IndexError):\n        return False"
            ],
            "inscope_function_signatures": [
                "get_grouper(obj: FrameOrSeries, key=None, axis: int=0, level=None, sort: bool=True, observed: bool=False, mutated: bool=False, validate: bool=True, dropna: bool=True) -> 'Tuple[ops.BaseGrouper, List[Hashable], FrameOrSeries]'",
                "_is_label_like(val) -> bool",
                "_convert_grouper(axis: Index, grouper)",
                "__new__(cls, *args, **kwargs)",
                "__init__(self, key=None, level=None, freq=None, axis=0, sort=False, dropna=True)",
                "ax(self)",
                "_get_grouper(self, obj, validate: bool=True)",
                "_set_grouper(self, obj: FrameOrSeries, sort: bool=False)",
                "groups(self)",
                "__repr__(self) -> str",
                "__init__(self, index: Index, grouper=None, obj: Optional[FrameOrSeries]=None, name=None, level=None, sort: bool=True, observed: bool=False, in_axis: bool=False, dropna: bool=True)",
                "__repr__(self) -> str",
                "__iter__(self)",
                "ngroups(self) -> int",
                "indices(self)",
                "codes(self) -> np.ndarray",
                "result_index(self) -> Index",
                "group_index(self) -> Index",
                "_make_codes(self) -> None",
                "groups(self) -> Dict[Hashable, np.ndarray]",
                "is_in_axis(key) -> bool",
                "is_in_obj(gpr) -> bool"
            ],
            "variables_in_file": {
                "_attributes": [
                    225
                ],
                "Tuple": [
                    225
                ],
                "str": [
                    225,
                    517,
                    669,
                    820,
                    378,
                    541
                ],
                "kwargs.get": [
                    256,
                    228,
                    245
                ],
                "kwargs": [
                    256,
                    228,
                    245
                ],
                "stacklevel": [
                    265,
                    244,
                    253
                ],
                "cls": [
                    269,
                    244,
                    268
                ],
                "TimeGrouper": [
                    244,
                    268
                ],
                "warnings.warn": [
                    257,
                    246
                ],
                "warnings": [
                    257,
                    246
                ],
                "FutureWarning": [
                    264,
                    252
                ],
                "__new__": [
                    269
                ],
                "super": [
                    269
                ],
                "self.key": [
                    328,
                    336,
                    337,
                    274,
                    306
                ],
                "self": [
                    514,
                    516,
                    517,
                    519,
                    521,
                    522,
                    524,
                    529,
                    534,
                    535,
                    536,
                    537,
                    539,
                    542,
                    545,
                    552,
                    557,
                    558,
                    560,
                    565,
                    566,
                    567,
                    571,
                    572,
                    573,
                    577,
                    578,
                    579,
                    580,
                    583,
                    585,
                    586,
                    587,
                    590,
                    592,
                    593,
                    594,
                    598,
                    274,
                    275,
                    276,
                    277,
                    278,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    289,
                    303,
                    304,
                    305,
                    306,
                    307,
                    308,
                    309,
                    311,
                    313,
                    328,
                    332,
                    333,
                    336,
                    337,
                    339,
                    342,
                    349,
                    350,
                    351,
                    364,
                    366,
                    368,
                    370,
                    371,
                    372,
                    376,
                    380,
                    381,
                    382,
                    385,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    439,
                    442,
                    453,
                    454,
                    457,
                    458,
                    459,
                    460,
                    464,
                    469,
                    470,
                    471,
                    472,
                    473,
                    476,
                    477,
                    479,
                    480,
                    483,
                    485,
                    486,
                    488,
                    492,
                    494,
                    496,
                    501,
                    503,
                    505,
                    509,
                    510
                ],
                "key": [
                    651,
                    653,
                    274,
                    681,
                    684,
                    685,
                    686,
                    689,
                    692,
                    693,
                    695,
                    696,
                    699,
                    337,
                    339,
                    344,
                    345,
                    346,
                    729,
                    740,
                    744
                ],
                "self.level": [
                    328,
                    427,
                    275,
                    308,
                    350,
                    351
                ],
                "level": [
                    773,
                    648,
                    649,
                    651,
                    653,
                    654,
                    275,
                    660,
                    661,
                    663,
                    669,
                    670,
                    797,
                    672,
                    675,
                    680,
                    427,
                    447,
                    448,
                    449,
                    450,
                    451,
                    454,
                    715,
                    460,
                    728,
                    730,
                    731,
                    733,
                    351,
                    356,
                    357,
                    360,
                    361,
                    760,
                    638
                ],
                "self.freq": [
                    276
                ],
                "freq": [
                    276
                ],
                "self.axis": [
                    368,
                    307,
                    349,
                    277
                ],
                "axis": [
                    832,
                    673,
                    769,
                    772,
                    783,
                    830,
                    785,
                    277,
                    634,
                    827,
                    670
                ],
                "self.sort": [
                    486,
                    364,
                    590,
                    431,
                    309,
                    278,
                    572
                ],
                "sort": [
                    364,
                    431,
                    496,
                    815,
                    278,
                    798
                ],
                "self.grouper": [
                    514,
                    516,
                    517,
                    519,
                    521,
                    522,
                    524,
                    529,
                    534,
                    535,
                    280,
                    536,
                    537,
                    539,
                    289,
                    428,
                    557,
                    558,
                    304,
                    560,
                    313,
                    442,
                    457,
                    585,
                    586,
                    460,
                    333,
                    587,
                    590,
                    464,
                    339,
                    469,
                    472,
                    473,
                    476,
                    477,
                    479,
                    480,
                    483,
                    485,
                    486,
                    488,
                    492,
                    494,
                    496,
                    371,
                    372,
                    503,
                    376,
                    509,
                    510
                ],
                "self.obj": [
                    313,
                    304,
                    305,
                    370,
                    432,
                    469,
                    472,
                    281,
                    476,
                    477
                ],
                "self.indexer": [
                    282,
                    366
                ],
                "self.binner": [
                    313,
                    283
                ],
                "self._grouper": [
                    284,
                    333,
                    342,
                    332
                ],
                "self.dropna": [
                    435,
                    285,
                    590,
                    311
                ],
                "dropna": [
                    801,
                    435,
                    285
                ],
                "property": [
                    287,
                    550,
                    563,
                    374,
                    575
                ],
                "bool": [
                    608,
                    609,
                    610,
                    291,
                    739,
                    421,
                    422,
                    423,
                    424,
                    752,
                    819,
                    315,
                    606,
                    607
                ],
                "self._set_grouper": [
                    303
                ],
                "obj": [
                    769,
                    770,
                    772,
                    783,
                    785,
                    795,
                    670,
                    673,
                    809,
                    685,
                    303,
                    432,
                    687,
                    689,
                    816,
                    693,
                    326,
                    717,
                    719,
                    722,
                    723,
                    340,
                    342,
                    344,
                    346,
                    349,
                    742,
                    368,
                    370,
                    756,
                    634,
                    767
                ],
                "_": [
                    304,
                    469
                ],
                "get_grouper": [
                    304
                ],
                "validate": [
                    768,
                    310
                ],
                "FrameOrSeries": [
                    418,
                    315,
                    602
                ],
                "ValueError": [
                    833,
                    676,
                    518,
                    329,
                    361,
                    810,
                    784,
                    665,
                    667,
                    671
                ],
                "getattr": [
                    516,
                    339,
                    534,
                    380,
                    382
                ],
                "isinstance": [
                    513,
                    647,
                    776,
                    669,
                    803,
                    684,
                    557,
                    692,
                    820,
                    438,
                    695,
                    824,
                    441,
                    826,
                    703,
                    448,
                    704,
                    706,
                    831,
                    585,
                    717,
                    464,
                    722,
                    339,
                    728,
                    479,
                    355,
                    509
                ],
                "ABCSeries": [
                    340
                ],
                "ax": [
                    355,
                    356,
                    357,
                    360,
                    364,
                    366,
                    367,
                    371,
                    342,
                    346,
                    349
                ],
                "self._grouper.take": [
                    342
                ],
                "obj.index": [
                    723,
                    342,
                    719
                ],
                "obj._info_axis": [
                    344
                ],
                "KeyError": [
                    345,
                    745,
                    757,
                    775
                ],
                "Index": [
                    416,
                    576,
                    514,
                    706,
                    548,
                    357,
                    812,
                    592,
                    570,
                    438,
                    823,
                    346,
                    831
                ],
                "obj._get_axis": [
                    634,
                    349,
                    670
                ],
                "MultiIndex": [
                    441,
                    355,
                    647
                ],
                "ax._get_level_number": [
                    356
                ],
                "ax._get_level_values": [
                    357
                ],
                "ax.names": [
                    357
                ],
                "ax.name": [
                    360
                ],
                "ax.is_monotonic": [
                    364
                ],
                "indexer": [
                    368,
                    366,
                    367
                ],
                "ax.argsort": [
                    366
                ],
                "ax.take": [
                    367
                ],
                "obj.take": [
                    368
                ],
                "self.grouper.groups": [
                    376
                ],
                "attrs_list": [
                    384,
                    379
                ],
                "attr_name": [
                    380,
                    381,
                    382
                ],
                "repr": [
                    380
                ],
                "self._attributes": [
                    381
                ],
                "attrs": [
                    384,
                    386
                ],
                "join": [
                    384
                ],
                "cls_name": [
                    385,
                    386
                ],
                "__name__": [
                    385
                ],
                "type": [
                    385,
                    517
                ],
                "Optional": [
                    418,
                    547,
                    548
                ],
                "self.name": [
                    471,
                    453,
                    454,
                    517,
                    426,
                    592,
                    470,
                    439,
                    505,
                    476,
                    477,
                    542
                ],
                "name": [
                    770,
                    771,
                    773,
                    796,
                    426,
                    779,
                    781,
                    438,
                    763,
                    764,
                    670
                ],
                "_convert_grouper": [
                    428
                ],
                "index": [
                    449,
                    451,
                    454,
                    428,
                    460,
                    430
                ],
                "grouper": [
                    428,
                    685,
                    687,
                    815,
                    689,
                    816,
                    438,
                    439,
                    824,
                    825,
                    441,
                    442,
                    828,
                    827,
                    826,
                    830,
                    831,
                    832,
                    834,
                    836,
                    469,
                    471,
                    473
                ],
                "self.all_grouper": [
                    485,
                    571,
                    572,
                    429
                ],
                "self.index": [
                    598,
                    522,
                    430,
                    519
                ],
                "self.observed": [
                    433
                ],
                "observed": [
                    433,
                    493,
                    486,
                    799
                ],
                "self.in_axis": [
                    434
                ],
                "in_axis": [
                    800,
                    770,
                    773,
                    779,
                    781,
                    434,
                    763
                ],
                "Series": [
                    706,
                    514,
                    722,
                    438,
                    826,
                    831
                ],
                "grouper.name": [
                    439
                ],
                "grouper._values": [
                    442,
                    828
                ],
                "int": [
                    448,
                    604,
                    551
                ],
                "index.names": [
                    449,
                    451,
                    454
                ],
                "AssertionError": [
                    450,
                    530
                ],
                "index.names.index": [
                    451
                ],
                "self._codes": [
                    583,
                    458,
                    492,
                    593,
                    565,
                    567
                ],
                "self._group_index": [
                    577,
                    579,
                    580,
                    583,
                    459,
                    594,
                    501
                ],
                "index._get_grouper_for_level": [
                    460
                ],
                "Grouper": [
                    464,
                    776,
                    684,
                    704
                ],
                "self.grouper._get_grouper": [
                    469
                ],
                "grouper.result_index.name": [
                    471
                ],
                "grouper.result_index": [
                    471
                ],
                "self.grouper.obj": [
                    472
                ],
                "grouper._get_grouper": [
                    473
                ],
                "list": [
                    706,
                    479,
                    695,
                    728,
                    831
                ],
                "tuple": [
                    728,
                    706,
                    820,
                    479
                ],
                "com.asarray_tuplesafe": [
                    480,
                    726
                ],
                "com": [
                    480,
                    726
                ],
                "is_categorical_dtype": [
                    483,
                    783
                ],
                "recode_for_groupby": [
                    485
                ],
                "categories": [
                    488,
                    499,
                    503
                ],
                "self.grouper.categories": [
                    488
                ],
                "self.grouper.codes": [
                    492,
                    494
                ],
                "codes": [
                    586,
                    589,
                    494,
                    495,
                    497,
                    593,
                    499,
                    503
                ],
                "algorithms.unique1d": [
                    494
                ],
                "algorithms": [
                    589,
                    494
                ],
                "self.grouper.ordered": [
                    496,
                    503
                ],
                "np.sort": [
                    497
                ],
                "np": [
                    514,
                    547,
                    706,
                    812,
                    497,
                    499,
                    564,
                    597,
                    831
                ],
                "np.arange": [
                    499
                ],
                "len": [
                    832,
                    552,
                    648,
                    522,
                    809,
                    811,
                    783,
                    785,
                    499,
                    661,
                    730,
                    700,
                    733
                ],
                "CategoricalIndex": [
                    501
                ],
                "Categorical.from_codes": [
                    598,
                    502
                ],
                "Categorical": [
                    560,
                    598,
                    502
                ],
                "Grouping": [
                    803,
                    812,
                    792,
                    509,
                    735
                ],
                "self.grouper.grouper": [
                    510
                ],
                "ExtensionArray": [
                    514
                ],
                "np.ndarray": [
                    706,
                    514,
                    547,
                    564,
                    597,
                    831
                ],
                "t": [
                    517,
                    518
                ],
                "self.index.map": [
                    519
                ],
                "hasattr": [
                    521,
                    753
                ],
                "grper": [
                    524,
                    527
                ],
                "pprint_thing": [
                    524
                ],
                "errmsg": [
                    530,
                    525
                ],
                "is_datetime64_dtype": [
                    535
                ],
                "self.grouper.astype": [
                    536,
                    539
                ],
                "is_timedelta64_dtype": [
                    537
                ],
                "iter": [
                    545
                ],
                "self.indices": [
                    545
                ],
                "_codes": [
                    547
                ],
                "_group_index": [
                    548
                ],
                "self.group_index": [
                    552,
                    572,
                    573,
                    598
                ],
                "ops.BaseGrouper": [
                    585,
                    692,
                    557,
                    815
                ],
                "ops": [
                    585,
                    692,
                    557,
                    815
                ],
                "self.grouper.indices": [
                    558
                ],
                "values": [
                    560,
                    561
                ],
                "values._reverse_indexer": [
                    561
                ],
                "cache_readonly": [
                    569,
                    554,
                    596
                ],
                "self._make_codes": [
                    578,
                    566
                ],
                "recode_from_groupby": [
                    572
                ],
                "self.grouper.codes_info": [
                    586
                ],
                "uniques": [
                    592,
                    594,
                    587,
                    589
                ],
                "self.grouper.result_index": [
                    587
                ],
                "algorithms.factorize": [
                    589
                ],
                "self.index.groupby": [
                    598
                ],
                "self.codes": [
                    598
                ],
                "Dict": [
                    597
                ],
                "Hashable": [
                    736,
                    597
                ],
                "group_axis": [
                    647,
                    681,
                    653,
                    815,
                    793,
                    634,
                    700
                ],
                "is_list_like": [
                    648,
                    660
                ],
                "is_scalar": [
                    651,
                    820
                ],
                "group_axis.get_level_values": [
                    653
                ],
                "nlevels": [
                    664,
                    661,
                    662
                ],
                "obj._get_axis_name": [
                    673
                ],
                "binner": [
                    685
                ],
                "key._get_grouper": [
                    685
                ],
                "key.key": [
                    689,
                    686
                ],
                "keys": [
                    704,
                    706,
                    719,
                    760,
                    723,
                    726,
                    696,
                    730,
                    699,
                    700,
                    733,
                    703
                ],
                "match_axis_length": [
                    697,
                    714,
                    700
                ],
                "any_callable": [
                    711,
                    703
                ],
                "any": [
                    704,
                    705,
                    703
                ],
                "callable": [
                    703
                ],
                "g": [
                    704,
                    706,
                    719,
                    723,
                    703
                ],
                "dict": [
                    824,
                    703
                ],
                "any_groupers": [
                    704,
                    713
                ],
                "any_arraylike": [
                    712,
                    705
                ],
                "DataFrame": [
                    717
                ],
                "all_in_columns_index": [
                    723,
                    725,
                    718
                ],
                "all": [
                    723,
                    718
                ],
                "obj.columns": [
                    719
                ],
                "obj.index.names": [
                    723,
                    719
                ],
                "levels": [
                    760,
                    731,
                    733
                ],
                "groupings": [
                    807,
                    809,
                    811,
                    812,
                    815,
                    735
                ],
                "List": [
                    736,
                    735
                ],
                "exclusions": [
                    736,
                    771,
                    778,
                    816,
                    764
                ],
                "_is_label_like": [
                    740
                ],
                "items": [
                    744,
                    742
                ],
                "obj.axes": [
                    742
                ],
                "items.get_loc": [
                    744
                ],
                "TypeError": [
                    745
                ],
                "InvalidIndexError": [
                    745
                ],
                "gpr": [
                    769,
                    770,
                    772,
                    773,
                    775,
                    776,
                    778,
                    783,
                    785,
                    794,
                    803,
                    804,
                    753,
                    756,
                    760,
                    762,
                    763,
                    766,
                    767
                ],
                "gpr.name": [
                    763,
                    756
                ],
                "IndexError": [
                    757
                ],
                "i": [
                    760
                ],
                "enumerate": [
                    760
                ],
                "zip": [
                    760
                ],
                "is_in_obj": [
                    762
                ],
                "exclusions.append": [
                    778,
                    771,
                    764
                ],
                "is_in_axis": [
                    766
                ],
                "obj._check_label_or_level_ambiguity": [
                    769
                ],
                "obj._is_level_reference": [
                    772
                ],
                "gpr.key": [
                    776,
                    778
                ],
                "obj.shape": [
                    785,
                    783
                ],
                "ping": [
                    807,
                    791
                ],
                "groupings.append": [
                    812,
                    807
                ],
                "np.array": [
                    812
                ],
                "np.intp": [
                    812
                ],
                "mutated": [
                    815
                ],
                "val": [
                    820
                ],
                "grouper.get": [
                    825
                ],
                "grouper.index.equals": [
                    827
                ],
                "grouper.index": [
                    827
                ],
                "_values": [
                    830
                ],
                "grouper.reindex": [
                    830
                ]
            },
            "filtered_variables_in_file": {
                "_attributes": [
                    225
                ],
                "Tuple": [
                    225
                ],
                "kwargs.get": [
                    256,
                    228,
                    245
                ],
                "kwargs": [
                    256,
                    228,
                    245
                ],
                "stacklevel": [
                    265,
                    244,
                    253
                ],
                "cls": [
                    269,
                    244,
                    268
                ],
                "TimeGrouper": [
                    244,
                    268
                ],
                "warnings.warn": [
                    257,
                    246
                ],
                "warnings": [
                    257,
                    246
                ],
                "__new__": [
                    269
                ],
                "self.key": [
                    328,
                    336,
                    337,
                    274,
                    306
                ],
                "self": [
                    514,
                    516,
                    517,
                    519,
                    521,
                    522,
                    524,
                    529,
                    534,
                    535,
                    536,
                    537,
                    539,
                    542,
                    545,
                    552,
                    557,
                    558,
                    560,
                    565,
                    566,
                    567,
                    571,
                    572,
                    573,
                    577,
                    578,
                    579,
                    580,
                    583,
                    585,
                    586,
                    587,
                    590,
                    592,
                    593,
                    594,
                    598,
                    274,
                    275,
                    276,
                    277,
                    278,
                    280,
                    281,
                    282,
                    283,
                    284,
                    285,
                    289,
                    303,
                    304,
                    305,
                    306,
                    307,
                    308,
                    309,
                    311,
                    313,
                    328,
                    332,
                    333,
                    336,
                    337,
                    339,
                    342,
                    349,
                    350,
                    351,
                    364,
                    366,
                    368,
                    370,
                    371,
                    372,
                    376,
                    380,
                    381,
                    382,
                    385,
                    426,
                    427,
                    428,
                    429,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    439,
                    442,
                    453,
                    454,
                    457,
                    458,
                    459,
                    460,
                    464,
                    469,
                    470,
                    471,
                    472,
                    473,
                    476,
                    477,
                    479,
                    480,
                    483,
                    485,
                    486,
                    488,
                    492,
                    494,
                    496,
                    501,
                    503,
                    505,
                    509,
                    510
                ],
                "key": [
                    651,
                    653,
                    274,
                    681,
                    684,
                    685,
                    686,
                    689,
                    692,
                    693,
                    695,
                    696,
                    699,
                    337,
                    339,
                    344,
                    345,
                    346,
                    729,
                    740,
                    744
                ],
                "self.level": [
                    328,
                    427,
                    275,
                    308,
                    350,
                    351
                ],
                "level": [
                    773,
                    648,
                    649,
                    651,
                    653,
                    654,
                    275,
                    660,
                    661,
                    663,
                    669,
                    670,
                    797,
                    672,
                    675,
                    680,
                    427,
                    447,
                    448,
                    449,
                    450,
                    451,
                    454,
                    715,
                    460,
                    728,
                    730,
                    731,
                    733,
                    351,
                    356,
                    357,
                    360,
                    361,
                    760,
                    638
                ],
                "self.freq": [
                    276
                ],
                "freq": [
                    276
                ],
                "self.axis": [
                    368,
                    307,
                    349,
                    277
                ],
                "axis": [
                    832,
                    673,
                    769,
                    772,
                    783,
                    830,
                    785,
                    277,
                    634,
                    827,
                    670
                ],
                "self.sort": [
                    486,
                    364,
                    590,
                    431,
                    309,
                    278,
                    572
                ],
                "sort": [
                    364,
                    431,
                    496,
                    815,
                    278,
                    798
                ],
                "self.grouper": [
                    514,
                    516,
                    517,
                    519,
                    521,
                    522,
                    524,
                    529,
                    534,
                    535,
                    280,
                    536,
                    537,
                    539,
                    289,
                    428,
                    557,
                    558,
                    304,
                    560,
                    313,
                    442,
                    457,
                    585,
                    586,
                    460,
                    333,
                    587,
                    590,
                    464,
                    339,
                    469,
                    472,
                    473,
                    476,
                    477,
                    479,
                    480,
                    483,
                    485,
                    486,
                    488,
                    492,
                    494,
                    496,
                    371,
                    372,
                    503,
                    376,
                    509,
                    510
                ],
                "self.obj": [
                    313,
                    304,
                    305,
                    370,
                    432,
                    469,
                    472,
                    281,
                    476,
                    477
                ],
                "self.indexer": [
                    282,
                    366
                ],
                "self.binner": [
                    313,
                    283
                ],
                "self._grouper": [
                    284,
                    333,
                    342,
                    332
                ],
                "self.dropna": [
                    435,
                    285,
                    590,
                    311
                ],
                "dropna": [
                    801,
                    435,
                    285
                ],
                "self._set_grouper": [
                    303
                ],
                "obj": [
                    769,
                    770,
                    772,
                    783,
                    785,
                    795,
                    670,
                    673,
                    809,
                    685,
                    303,
                    432,
                    687,
                    689,
                    816,
                    693,
                    326,
                    717,
                    719,
                    722,
                    723,
                    340,
                    342,
                    344,
                    346,
                    349,
                    742,
                    368,
                    370,
                    756,
                    634,
                    767
                ],
                "_": [
                    304,
                    469
                ],
                "get_grouper": [
                    304
                ],
                "validate": [
                    768,
                    310
                ],
                "FrameOrSeries": [
                    418,
                    315,
                    602
                ],
                "ABCSeries": [
                    340
                ],
                "ax": [
                    355,
                    356,
                    357,
                    360,
                    364,
                    366,
                    367,
                    371,
                    342,
                    346,
                    349
                ],
                "self._grouper.take": [
                    342
                ],
                "obj.index": [
                    723,
                    342,
                    719
                ],
                "obj._info_axis": [
                    344
                ],
                "Index": [
                    416,
                    576,
                    514,
                    706,
                    548,
                    357,
                    812,
                    592,
                    570,
                    438,
                    823,
                    346,
                    831
                ],
                "obj._get_axis": [
                    634,
                    349,
                    670
                ],
                "MultiIndex": [
                    441,
                    355,
                    647
                ],
                "ax._get_level_number": [
                    356
                ],
                "ax._get_level_values": [
                    357
                ],
                "ax.names": [
                    357
                ],
                "ax.name": [
                    360
                ],
                "ax.is_monotonic": [
                    364
                ],
                "indexer": [
                    368,
                    366,
                    367
                ],
                "ax.argsort": [
                    366
                ],
                "ax.take": [
                    367
                ],
                "obj.take": [
                    368
                ],
                "self.grouper.groups": [
                    376
                ],
                "attrs_list": [
                    384,
                    379
                ],
                "attr_name": [
                    380,
                    381,
                    382
                ],
                "self._attributes": [
                    381
                ],
                "attrs": [
                    384,
                    386
                ],
                "join": [
                    384
                ],
                "cls_name": [
                    385,
                    386
                ],
                "Optional": [
                    418,
                    547,
                    548
                ],
                "self.name": [
                    471,
                    453,
                    454,
                    517,
                    426,
                    592,
                    470,
                    439,
                    505,
                    476,
                    477,
                    542
                ],
                "name": [
                    770,
                    771,
                    773,
                    796,
                    426,
                    779,
                    781,
                    438,
                    763,
                    764,
                    670
                ],
                "_convert_grouper": [
                    428
                ],
                "index": [
                    449,
                    451,
                    454,
                    428,
                    460,
                    430
                ],
                "grouper": [
                    428,
                    685,
                    687,
                    815,
                    689,
                    816,
                    438,
                    439,
                    824,
                    825,
                    441,
                    442,
                    828,
                    827,
                    826,
                    830,
                    831,
                    832,
                    834,
                    836,
                    469,
                    471,
                    473
                ],
                "self.all_grouper": [
                    485,
                    571,
                    572,
                    429
                ],
                "self.index": [
                    598,
                    522,
                    430,
                    519
                ],
                "self.observed": [
                    433
                ],
                "observed": [
                    433,
                    493,
                    486,
                    799
                ],
                "self.in_axis": [
                    434
                ],
                "in_axis": [
                    800,
                    770,
                    773,
                    779,
                    781,
                    434,
                    763
                ],
                "Series": [
                    706,
                    514,
                    722,
                    438,
                    826,
                    831
                ],
                "grouper.name": [
                    439
                ],
                "grouper._values": [
                    442,
                    828
                ],
                "index.names": [
                    449,
                    451,
                    454
                ],
                "index.names.index": [
                    451
                ],
                "self._codes": [
                    583,
                    458,
                    492,
                    593,
                    565,
                    567
                ],
                "self._group_index": [
                    577,
                    579,
                    580,
                    583,
                    459,
                    594,
                    501
                ],
                "index._get_grouper_for_level": [
                    460
                ],
                "Grouper": [
                    464,
                    776,
                    684,
                    704
                ],
                "self.grouper._get_grouper": [
                    469
                ],
                "grouper.result_index.name": [
                    471
                ],
                "grouper.result_index": [
                    471
                ],
                "self.grouper.obj": [
                    472
                ],
                "grouper._get_grouper": [
                    473
                ],
                "com.asarray_tuplesafe": [
                    480,
                    726
                ],
                "com": [
                    480,
                    726
                ],
                "is_categorical_dtype": [
                    483,
                    783
                ],
                "recode_for_groupby": [
                    485
                ],
                "categories": [
                    488,
                    499,
                    503
                ],
                "self.grouper.categories": [
                    488
                ],
                "self.grouper.codes": [
                    492,
                    494
                ],
                "codes": [
                    586,
                    589,
                    494,
                    495,
                    497,
                    593,
                    499,
                    503
                ],
                "algorithms.unique1d": [
                    494
                ],
                "algorithms": [
                    589,
                    494
                ],
                "self.grouper.ordered": [
                    496,
                    503
                ],
                "np.sort": [
                    497
                ],
                "np": [
                    514,
                    547,
                    706,
                    812,
                    497,
                    499,
                    564,
                    597,
                    831
                ],
                "np.arange": [
                    499
                ],
                "CategoricalIndex": [
                    501
                ],
                "Categorical.from_codes": [
                    598,
                    502
                ],
                "Categorical": [
                    560,
                    598,
                    502
                ],
                "Grouping": [
                    803,
                    812,
                    792,
                    509,
                    735
                ],
                "self.grouper.grouper": [
                    510
                ],
                "ExtensionArray": [
                    514
                ],
                "np.ndarray": [
                    706,
                    514,
                    547,
                    564,
                    597,
                    831
                ],
                "t": [
                    517,
                    518
                ],
                "self.index.map": [
                    519
                ],
                "grper": [
                    524,
                    527
                ],
                "pprint_thing": [
                    524
                ],
                "errmsg": [
                    530,
                    525
                ],
                "is_datetime64_dtype": [
                    535
                ],
                "self.grouper.astype": [
                    536,
                    539
                ],
                "is_timedelta64_dtype": [
                    537
                ],
                "self.indices": [
                    545
                ],
                "_codes": [
                    547
                ],
                "_group_index": [
                    548
                ],
                "self.group_index": [
                    552,
                    572,
                    573,
                    598
                ],
                "ops.BaseGrouper": [
                    585,
                    692,
                    557,
                    815
                ],
                "ops": [
                    585,
                    692,
                    557,
                    815
                ],
                "self.grouper.indices": [
                    558
                ],
                "values": [
                    560,
                    561
                ],
                "values._reverse_indexer": [
                    561
                ],
                "cache_readonly": [
                    569,
                    554,
                    596
                ],
                "self._make_codes": [
                    578,
                    566
                ],
                "recode_from_groupby": [
                    572
                ],
                "self.grouper.codes_info": [
                    586
                ],
                "uniques": [
                    592,
                    594,
                    587,
                    589
                ],
                "self.grouper.result_index": [
                    587
                ],
                "algorithms.factorize": [
                    589
                ],
                "self.index.groupby": [
                    598
                ],
                "self.codes": [
                    598
                ],
                "Dict": [
                    597
                ],
                "Hashable": [
                    736,
                    597
                ],
                "group_axis": [
                    647,
                    681,
                    653,
                    815,
                    793,
                    634,
                    700
                ],
                "is_list_like": [
                    648,
                    660
                ],
                "is_scalar": [
                    651,
                    820
                ],
                "group_axis.get_level_values": [
                    653
                ],
                "nlevels": [
                    664,
                    661,
                    662
                ],
                "obj._get_axis_name": [
                    673
                ],
                "binner": [
                    685
                ],
                "key._get_grouper": [
                    685
                ],
                "key.key": [
                    689,
                    686
                ],
                "keys": [
                    704,
                    706,
                    719,
                    760,
                    723,
                    726,
                    696,
                    730,
                    699,
                    700,
                    733,
                    703
                ],
                "match_axis_length": [
                    697,
                    714,
                    700
                ],
                "any_callable": [
                    711,
                    703
                ],
                "g": [
                    704,
                    706,
                    719,
                    723,
                    703
                ],
                "any_groupers": [
                    704,
                    713
                ],
                "any_arraylike": [
                    712,
                    705
                ],
                "DataFrame": [
                    717
                ],
                "all_in_columns_index": [
                    723,
                    725,
                    718
                ],
                "obj.columns": [
                    719
                ],
                "obj.index.names": [
                    723,
                    719
                ],
                "levels": [
                    760,
                    731,
                    733
                ],
                "groupings": [
                    807,
                    809,
                    811,
                    812,
                    815,
                    735
                ],
                "List": [
                    736,
                    735
                ],
                "exclusions": [
                    736,
                    771,
                    778,
                    816,
                    764
                ],
                "_is_label_like": [
                    740
                ],
                "items": [
                    744,
                    742
                ],
                "obj.axes": [
                    742
                ],
                "items.get_loc": [
                    744
                ],
                "InvalidIndexError": [
                    745
                ],
                "gpr": [
                    769,
                    770,
                    772,
                    773,
                    775,
                    776,
                    778,
                    783,
                    785,
                    794,
                    803,
                    804,
                    753,
                    756,
                    760,
                    762,
                    763,
                    766,
                    767
                ],
                "gpr.name": [
                    763,
                    756
                ],
                "i": [
                    760
                ],
                "is_in_obj": [
                    762
                ],
                "exclusions.append": [
                    778,
                    771,
                    764
                ],
                "is_in_axis": [
                    766
                ],
                "obj._check_label_or_level_ambiguity": [
                    769
                ],
                "obj._is_level_reference": [
                    772
                ],
                "gpr.key": [
                    776,
                    778
                ],
                "obj.shape": [
                    785,
                    783
                ],
                "ping": [
                    807,
                    791
                ],
                "groupings.append": [
                    812,
                    807
                ],
                "np.array": [
                    812
                ],
                "np.intp": [
                    812
                ],
                "mutated": [
                    815
                ],
                "val": [
                    820
                ],
                "grouper.get": [
                    825
                ],
                "grouper.index.equals": [
                    827
                ],
                "grouper.index": [
                    827
                ],
                "_values": [
                    830
                ],
                "grouper.reindex": [
                    830
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_6/pandas/tests/groupby/test_size.py",
                "test_function": "test_size_period_index",
                "test_function_code": "def test_size_period_index():\n    # https://github.com/pandas-dev/pandas/issues/34010\n    ser = Series([1], index=PeriodIndex([\"2000\"], name=\"A\", freq=\"D\"))\n    grp = ser.groupby(level=\"A\")\n    result = grp.size()\n    tm.assert_series_equal(result, ser)",
                "test_error": "ValueError: Given date string not likely a datetime.",
                "full_test_error": "def test_size_period_index():\n        # https://github.com/pandas-dev/pandas/issues/34010\n        ser = Series([1], index=PeriodIndex([\"2000\"], name=\"A\", freq=\"D\"))\n>       grp = ser.groupby(level=\"A\")\n\npandas/tests/groupby/test_size.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/series.py:1655: in groupby\n    return SeriesGroupBy(\npandas/core/groupby/groupby.py:522: in __init__\n    grouper, exclusions, obj = get_grouper(\npandas/core/groupby/grouper.py:762: in get_grouper\n    if is_in_obj(gpr):  # df.groupby(df['name'])\npandas/core/groupby/grouper.py:756: in is_in_obj\n    return gpr is obj[gpr.name]\npandas/core/series.py:878: in __getitem__\n    return self._get_value(key)\npandas/core/series.py:991: in _get_value\n    loc = self.index.get_loc(label)\npandas/core/indexes/period.py:499: in get_loc\n    asdt, reso = parse_time_string(key, self.freq)\npandas/_libs/tslibs/parsing.pyx:281: in pandas._libs.tslibs.parsing.parse_time_string\n    res = parse_datetime_string_with_reso(arg, freq=freq,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise ValueError('Given date string not likely a datetime.')\nE   ValueError: Given date string not likely a datetime.\n\npandas/_libs/tslibs/parsing.pyx:308: ValueError",
                "traceback": "pandas/core/series.py:1655: in groupby\n    return SeriesGroupBy(\npandas/core/groupby/groupby.py:522: in __init__\n    grouper, exclusions, obj = get_grouper(\npandas/core/groupby/grouper.py:762: in get_grouper\n    if is_in_obj(gpr):  # df.groupby(df['name'])\npandas/core/groupby/grouper.py:756: in is_in_obj\n    return gpr is obj[gpr.name]\npandas/core/series.py:878: in __getitem__\n    return self._get_value(key)\npandas/core/series.py:991: in _get_value\n    loc = self.index.get_loc(label)\npandas/core/indexes/period.py:499: in get_loc\n    asdt, reso = parse_time_string(key, self.freq)\npandas/_libs/tslibs/parsing.pyx:281: in pandas._libs.tslibs.parsing.parse_time_string\n    res = parse_datetime_string_with_reso(arg, freq=freq,",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise ValueError('Given date string not likely a datetime.')\nE   ValueError: Given date string not likely a datetime.\n\npandas/_libs/tslibs/parsing.pyx:308: ValueError",
                "test_function_decorators": []
            }
        ]
    }
}