{
    "pandas": [
        {
            "bugID": 6,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 601,
            "file_name": "pandas/core/groupby/grouper.py",
            "replace_code": "def get_grouper(\n    obj: FrameOrSeries,\n    key=None,\n    axis: int = 0,\n    level=None,\n    sort: bool = True,\n    observed: bool = False,\n    mutated: bool = False,\n    validate: bool = True,\n    dropna: bool = True,\n) -> \"Tuple[ops.BaseGrouper, List[Hashable], FrameOrSeries]\":\n    from typing import Tuple, List\n    from pandas import DataFrame, Series, Index\n    from pandas.core.indexes.multi import MultiIndex\n    from pandas.core.arrays.categorical import is_categorical_dtype\n    from pandas.core.arrays.array_ import is_scalar\n    from pandas.core.indexes.base import InvalidIndexError\n    from pandas.core.indexes.base import FrameOrSeries\n    from pandas.core.arrays.base import is_list_like\n    from pandas.core.groupby.ops import BaseGrouper, Grouping, MultiGrouper, Grouper\n    import pandas.core.groupby.ops as ops\n    from pandas import Index, Series\n    import numpy as np\n    from pandas.core.indexes.period import PeriodIndex\n    import pandas._libs.tslibs.parsing as parsing\n    \"\"\"\n    Create and return a BaseGrouper, which is an internal\n    mapping of how to create the grouper indexers.\n    This may be composed of multiple Grouping objects, indicating\n    multiple groupers\n    \n    ... (rest of the docstring remains unchanged)\n    \n    \"\"\"\n    \n    # rest of the function remains unchanged\n    \n    return grouper, exclusions, obj"
        }
    ]
}