{
    "pandas": [
        {
            "bugID": 49,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 726,
            "file_name": "core/strings.py",
            "replace_code": "def str_repeat(arr, repeats):\n    import pandas as pd\n    import numpy as np\n    from pandas import Series\n    from pandas.core.dtypes.dtypes import ExtensionDtype\n    if is_scalar(repeats):\n        def scalar_rep(x):\n            try:\n                return str.__mul__(x, repeats)\n            except TypeError:\n                return str.__mul__(x, repeats)\n    \n        return arr.apply(scalar_rep)\n    else:\n        def rep(x, r):\n            try:\n                return str.__mul__(x, r)\n            except TypeError:\n                return str.__mul__(x, r)\n    \n        repeats = np.asarray(repeats, dtype=object)\n        result = arr.combine(repeats, rep)\n        return result"
        }
    ]
}