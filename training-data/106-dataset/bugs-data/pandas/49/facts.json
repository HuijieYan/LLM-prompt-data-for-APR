{
    "1.1.1": "def str_repeat(arr, repeats):\n    \n    if is_scalar(repeats):\n\n        def scalar_rep(x):\n            try:\n                return bytes.__mul__(x, repeats)\n            except TypeError:\n                return str.__mul__(x, repeats)\n\n        return _na_map(scalar_rep, arr, dtype=str)\n    else:\n\n        def rep(x, r):\n            try:\n                return bytes.__mul__(x, r)\n            except TypeError:\n                return str.__mul__(x, r)\n\n        repeats = np.asarray(repeats, dtype=object)\n        result = libops.vec_binop(np.asarray(arr), repeats, rep)\n        return result\n",
    "1.1.2": "Duplicate each string in the Series or Index.\n\nParameters\n----------\nrepeats : int or sequence of int\n    Same value for all (int) or different value per (sequence).\n\nReturns\n-------\nSeries or Index of object\n    Series or Index of repeated string objects specified by\n    input parameter repeats.\n\nExamples\n--------\n>>> s = pd.Series(['a', 'b', 'c'])\n>>> s\n0    a\n1    b\n2    c\ndtype: object\n\nSingle int repeats string in Series\n\n>>> s.str.repeat(repeats=2)\n0    aa\n1    bb\n2    cc\ndtype: object\n\nSequence of int repeats corresponding string in Series\n\n>>> s.str.repeat(repeats=[1, 2, 3])\n0      a\n1     bb\n2    ccc\ndtype: object",
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/pandas_49/pandas/core/strings.py",
    "1.3.2": [
        "_na_map(f, arr, na_result=None, dtype=object)",
        "scalar_rep(x)",
        "rep(x, r)"
    ],
    "1.4.1": [
        "    def test_repeat_with_null(self):\n        # GH: 31632\n        values = Series([\"a\", None], dtype=\"string\")\n        result = values.str.repeat([3, 4])\n        exp = Series([\"aaa\", None], dtype=\"string\")\n        tm.assert_series_equal(result, exp)\n\n        values = Series([\"a\", \"b\"], dtype=\"string\")\n        result = values.str.repeat([3, None])\n        exp = Series([\"aaa\", None], dtype=\"string\")\n        tm.assert_series_equal(result, exp)"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/pandas_49/pandas/tests/test_strings.py"
    ],
    "2.1.1": [
        [
            "E           TypeError: descriptor '__mul__' requires a 'bytes' object but received a 'NAType'",
            "E           TypeError: descriptor '__mul__' requires a 'str' object but received a 'NAType'"
        ]
    ],
    "2.1.2": [
        [
            "x = <NA>, r = 4\n\n    def rep(x, r):\n        try:\n>           return bytes.__mul__(x, r)",
            "\npandas/core/strings.py:779: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <pandas.tests.test_strings.TestStringMethods object at 0x11c640730>\n\n    def test_repeat_with_null(self):\n        # GH: 31632\n        values = Series([\"a\", None], dtype=\"string\")\n>       result = values.str.repeat([3, 4])\n\npandas/tests/test_strings.py:1163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/core/strings.py:1944: in wrapper\n    return func(self, *args, **kwargs)\npandas/core/strings.py:2774: in repeat\n    result = str_repeat(self._parent, repeats)\npandas/core/strings.py:784: in str_repeat\n    result = libops.vec_binop(np.asarray(arr), repeats, rep)\npandas/_libs/ops.pyx:241: in pandas._libs.ops.vec_binop\n    raise\npandas/_libs/ops.pyx:234: in pandas._libs.ops.vec_binop\n    result[i] = op(x, y)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = <NA>, r = 4\n\n    def rep(x, r):\n        try:\n            return bytes.__mul__(x, r)\n        except TypeError:\n>           return str.__mul__(x, r)",
            "\npandas/core/strings.py:781: TypeError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": null,
    "2.1.6": null,
    "3.1.1": [
        "Bug in Series.str.repeat with string dtype and sequence of repeats\n"
    ],
    "3.1.2": [
        "Code Sample, a copy-pastable example if possible\nIn [1]: import pandas as pd\n\nIn [2]: s = pd.Series(['a', None], dtype=\"string\")\n\nIn [3]: s.str.repeat([1, 2])\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n~/sandbox/pandas/pandas/core/strings.py in rep(x, r)\n    781             try:\n--> 782                 return bytes.__mul__(x, r)\n    783             except TypeError:\n\nTypeError: descriptor '__mul__' requires a 'bytes' object but received a 'NAType'\n\nDuring handling of the above exception, another exception occurred:\n\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-a01827562f7a> in <module>\n----> 1 s.str.repeat([1, 2])\n\n~/sandbox/pandas/pandas/core/strings.py in wrapper(self, *args, **kwargs)\n   1950                 )\n   1951                 raise TypeError(msg)\n-> 1952             return func(self, *args, **kwargs)\n   1953\n   1954         wrapper.__name__ = func_name\n\n~/sandbox/pandas/pandas/core/strings.py in repeat(self, repeats)\n   2780     @forbid_nonstring_types([\"bytes\"])\n   2781     def repeat(self, repeats):\n-> 2782         result = str_repeat(self._parent, repeats)\n   2783         return self._wrap_result(result)\n   2784\n\n~/sandbox/pandas/pandas/core/strings.py in str_repeat(arr, repeats)\n    785\n    786         repeats = np.asarray(repeats, dtype=object)\n--> 787         result = libops.vec_binop(com.values_from_object(arr), repeats, rep)\n    788         return result\n    789\n\n~/sandbox/pandas/pandas/_libs/ops.pyx in pandas._libs.ops.vec_binop()\n    239                 result[i] = y\n    240             else:\n--> 241                 raise\n    242\n    243     return maybe_convert_bool(result.base)  # `.base` to access np.ndarray\n\n~/sandbox/pandas/pandas/_libs/ops.pyx in pandas._libs.ops.vec_binop()\n    232         y = right[i]\n    233         try:\n--> 234             result[i] = op(x, y)\n    235         except TypeError:\n    236             if x is None or is_nan(x):\n\n~/sandbox/pandas/pandas/core/strings.py in rep(x, r)\n    782                 return bytes.__mul__(x, r)\n    783             except TypeError:\n--> 784                 return str.__mul__(x, r)\n    785\n    786         repeats = np.asarray(repeats, dtype=object)\n\nTypeError: descriptor '__mul__' requires a 'str' object but received a 'NAType'\nProblem description\nThe str_repeat method correctly handles NA values when repeats is a scalar, but fails when its a sequence.\n\nExpected Output\n0       a\n1    <NA>\ndtype: string\n"
    ]
}