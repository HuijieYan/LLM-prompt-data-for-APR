{
    "pandas": [
        {
            "bugID": 74,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 142,
            "file_name": "pandas/core/indexes/timedeltas.py",
            "replace_code": "def __new__(\n    cls,\n    data=None,\n    unit=None,\n    freq=None,\n    closed=None,\n    dtype=_TD_DTYPE,\n    copy=False,\n    name=None,\n):\n    # Original name extraction logic\n\n    name = maybe_extract_name(name, data, cls)\n    \n    if data is None:\n        data = pd.Series([])\n        \n    if isinstance(data, (np.ndarray, ABCSeries)) and data.size == 0:\n        data = pd.Series([])\n        \n    if is_scalar(data):\n        raise TypeError(\n            f\"{cls.__name__}() must be called with a \"\n            f\"collection of some kind, {repr(data)} was passed\"\n        )\n    \n    if unit in {\"Y\", \"y\", \"M\"}:\n        raise ValueError(\n            \"Units 'M' and 'Y' are no longer supported, as they do not \"\n            \"represent unambiguous timedelta values durations.\"\n        )\n    \n    tdarr = TimedeltaArray._from_sequence(\n        data, freq=freq, unit=unit, dtype=dtype, copy=copy\n    )\n    return cls._simple_new(tdarr, name=name, freq=freq)"
        }
    ]
}