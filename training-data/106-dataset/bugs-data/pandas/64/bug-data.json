{
    "pandas:64": {
        "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/io/formats/excel.py": {
            "buggy_functions": [
                {
                    "function_name": "__init__",
                    "function_code": "def __init__(\n    self,\n    df,\n    na_rep: str = \"\",\n    float_format: Optional[str] = None,\n    cols: Optional[Sequence[Label]] = None,\n    header: Union[Sequence[Label], bool] = True,\n    index: bool = True,\n    index_label: Optional[Union[Label, Sequence[Label]]] = None,\n    merge_cells: bool = False,\n    inf_rep: str = \"inf\",\n    style_converter: Optional[Callable] = None,\n):\n    self.rowcounter = 0\n    self.na_rep = na_rep\n    if hasattr(df, \"render\"):\n        self.styler = df\n        df = df.data\n        if style_converter is None:\n            style_converter = CSSToExcelConverter()\n        self.style_converter = style_converter\n    else:\n        self.styler = None\n    self.df = df\n    if cols is not None:\n\n        # all missing, raise\n        if not len(Index(cols) & df.columns):\n            raise KeyError(\"passes columns are not ALL present dataframe\")\n\n        if len(Index(cols) & df.columns) != len(cols):\n            # Deprecated in GH#17295, enforced in 1.0.0\n            raise KeyError(\"Not all names specified in 'columns' are found\")\n\n        self.df = df\n\n    self.columns = self.df.columns\n    self.float_format = float_format\n    self.index = index\n    self.index_label = index_label\n    self.header = header\n    self.merge_cells = merge_cells\n    self.inf_rep = inf_rep\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 372,
                    "end_line": 414,
                    "variables": {
                        "str": [
                            376,
                            382,
                            375
                        ],
                        "Optional": [
                            376,
                            377,
                            380,
                            383
                        ],
                        "Sequence": [
                            377,
                            378,
                            380
                        ],
                        "Label": [
                            377,
                            378,
                            380
                        ],
                        "Union": [
                            378,
                            380
                        ],
                        "bool": [
                            378,
                            379,
                            381
                        ],
                        "Callable": [
                            383
                        ],
                        "self.rowcounter": [
                            385
                        ],
                        "self": [
                            385,
                            386,
                            388,
                            392,
                            394,
                            395,
                            406,
                            408,
                            409,
                            410,
                            411,
                            412,
                            413,
                            414
                        ],
                        "self.na_rep": [
                            386
                        ],
                        "na_rep": [
                            386
                        ],
                        "hasattr": [
                            387
                        ],
                        "df": [
                            387,
                            388,
                            389,
                            395,
                            399,
                            402,
                            406
                        ],
                        "self.styler": [
                            394,
                            388
                        ],
                        "df.data": [
                            389
                        ],
                        "style_converter": [
                            392,
                            390,
                            391
                        ],
                        "CSSToExcelConverter": [
                            391
                        ],
                        "self.style_converter": [
                            392
                        ],
                        "self.df": [
                            408,
                            395,
                            406
                        ],
                        "cols": [
                            402,
                            396,
                            399
                        ],
                        "len": [
                            402,
                            399
                        ],
                        "Index": [
                            402,
                            399
                        ],
                        "df.columns": [
                            402,
                            399
                        ],
                        "KeyError": [
                            400,
                            404
                        ],
                        "self.columns": [
                            408
                        ],
                        "self.df.columns": [
                            408
                        ],
                        "self.float_format": [
                            409
                        ],
                        "float_format": [
                            409
                        ],
                        "self.index": [
                            410
                        ],
                        "index": [
                            410
                        ],
                        "self.index_label": [
                            411
                        ],
                        "index_label": [
                            411
                        ],
                        "self.header": [
                            412
                        ],
                        "header": [
                            412
                        ],
                        "self.merge_cells": [
                            413
                        ],
                        "merge_cells": [
                            413
                        ],
                        "self.inf_rep": [
                            414
                        ],
                        "inf_rep": [
                            414
                        ]
                    },
                    "filtered_variables": {
                        "Optional": [
                            376,
                            377,
                            380,
                            383
                        ],
                        "Sequence": [
                            377,
                            378,
                            380
                        ],
                        "Label": [
                            377,
                            378,
                            380
                        ],
                        "Union": [
                            378,
                            380
                        ],
                        "Callable": [
                            383
                        ],
                        "self.rowcounter": [
                            385
                        ],
                        "self": [
                            385,
                            386,
                            388,
                            392,
                            394,
                            395,
                            406,
                            408,
                            409,
                            410,
                            411,
                            412,
                            413,
                            414
                        ],
                        "self.na_rep": [
                            386
                        ],
                        "na_rep": [
                            386
                        ],
                        "df": [
                            387,
                            388,
                            389,
                            395,
                            399,
                            402,
                            406
                        ],
                        "self.styler": [
                            394,
                            388
                        ],
                        "df.data": [
                            389
                        ],
                        "style_converter": [
                            392,
                            390,
                            391
                        ],
                        "CSSToExcelConverter": [
                            391
                        ],
                        "self.style_converter": [
                            392
                        ],
                        "self.df": [
                            408,
                            395,
                            406
                        ],
                        "cols": [
                            402,
                            396,
                            399
                        ],
                        "Index": [
                            402,
                            399
                        ],
                        "df.columns": [
                            402,
                            399
                        ],
                        "self.columns": [
                            408
                        ],
                        "self.df.columns": [
                            408
                        ],
                        "self.float_format": [
                            409
                        ],
                        "float_format": [
                            409
                        ],
                        "self.index": [
                            410
                        ],
                        "index": [
                            410
                        ],
                        "self.index_label": [
                            411
                        ],
                        "index_label": [
                            411
                        ],
                        "self.header": [
                            412
                        ],
                        "header": [
                            412
                        ],
                        "self.merge_cells": [
                            413
                        ],
                        "merge_cells": [
                            413
                        ],
                        "self.inf_rep": [
                            414
                        ],
                        "inf_rep": [
                            414
                        ]
                    },
                    "diff_line_number": 406,
                    "class_data": {
                        "signature": "class ExcelFormatter()",
                        "docstring": "Class for formatting a DataFrame to a list of ExcelCells,\n\nParameters\n----------\ndf : DataFrame or Styler\nna_rep: na representation\nfloat_format : string, default None\n        Format string for floating point numbers\ncols : sequence, optional\n    Columns to write\nheader : boolean or list of string, default True\n    Write out column names. If a list of string is given it is\n    assumed to be aliases for the column names\nindex : boolean, default True\n    output row names (index)\nindex_label : string or sequence, default None\n        Column label for index column(s) if desired. If None is given, and\n        `header` and `index` are True, then the index names are used. A\n        sequence should be given if the DataFrame uses MultiIndex.\nmerge_cells : boolean, default False\n        Format MultiIndex and Hierarchical Rows as merged cells.\ninf_rep : string, default `'inf'`\n    representation for np.inf values (which aren't representable in Excel)\n    A `'-'` sign will be added in front of -inf.\nstyle_converter : callable, optional\n    This translates Styler styles (CSS) into ExcelWriter styles.\n    Defaults to ``CSSToExcelConverter()``.\n    It should have signature css_declarations string -> excel style.\n    This is only called for body cells.",
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self, df, na_rep: str='', float_format: Optional[str]=None, cols: Optional[Sequence[Label]]=None, header: Union[Sequence[Label], bool]=True, index: bool=True, index_label: Optional[Union[Label, Sequence[Label]]]=None, merge_cells: bool=False, inf_rep: str='inf', style_converter: Optional[Callable]=None):\n    self.rowcounter = 0\n    self.na_rep = na_rep\n    if hasattr(df, 'render'):\n        self.styler = df\n        df = df.data\n        if style_converter is None:\n            style_converter = CSSToExcelConverter()\n        self.style_converter = style_converter\n    else:\n        self.styler = None\n    self.df = df\n    if cols is not None:\n        if not len(Index(cols) & df.columns):\n            raise KeyError('passes columns are not ALL present dataframe')\n        if len(Index(cols) & df.columns) != len(cols):\n            raise KeyError(\"Not all names specified in 'columns' are found\")\n        self.df = df\n    self.columns = self.df.columns\n    self.float_format = float_format\n    self.index = index\n    self.index_label = index_label\n    self.header = header\n    self.merge_cells = merge_cells\n    self.inf_rep = inf_rep",
                            "@property\ndef header_style(self):\n    return {'font': {'bold': True}, 'borders': {'top': 'thin', 'right': 'thin', 'bottom': 'thin', 'left': 'thin'}, 'alignment': {'horizontal': 'center', 'vertical': 'top'}}",
                            "def _format_value(self, val):\n    if is_scalar(val) and missing.isna(val):\n        val = self.na_rep\n    elif is_float(val):\n        if missing.isposinf_scalar(val):\n            val = self.inf_rep\n        elif missing.isneginf_scalar(val):\n            val = f'-{self.inf_rep}'\n        elif self.float_format is not None:\n            val = float(self.float_format % val)\n    if getattr(val, 'tzinfo', None) is not None:\n        raise ValueError('Excel does not support datetimes with timezones. Please ensure that datetimes are timezone unaware before writing to Excel.')\n    return val",
                            "def _format_header_mi(self):\n    if self.columns.nlevels > 1:\n        if not self.index:\n            raise NotImplementedError(\"Writing to Excel with MultiIndex columns and no index ('index'=False) is not yet implemented.\")\n    has_aliases = isinstance(self.header, (tuple, list, np.ndarray, ABCIndex))\n    if not (has_aliases or self.header):\n        return\n    columns = self.columns\n    level_strs = columns.format(sparsify=self.merge_cells, adjoin=False, names=False)\n    level_lengths = get_level_lengths(level_strs)\n    coloffset = 0\n    lnum = 0\n    if self.index and isinstance(self.df.index, ABCMultiIndex):\n        coloffset = len(self.df.index[0]) - 1\n    if self.merge_cells:\n        for lnum in range(len(level_lengths)):\n            name = columns.names[lnum]\n            yield ExcelCell(lnum, coloffset, name, self.header_style)\n        for lnum, (spans, levels, level_codes) in enumerate(zip(level_lengths, columns.levels, columns.codes)):\n            values = levels.take(level_codes)\n            for i in spans:\n                if spans[i] > 1:\n                    yield ExcelCell(lnum, coloffset + i + 1, values[i], self.header_style, lnum, coloffset + i + spans[i])\n                else:\n                    yield ExcelCell(lnum, coloffset + i + 1, values[i], self.header_style)\n    else:\n        for i, values in enumerate(zip(*level_strs)):\n            v = '.'.join(map(pprint_thing, values))\n            yield ExcelCell(lnum, coloffset + i + 1, v, self.header_style)\n    self.rowcounter = lnum",
                            "def _format_header_regular(self):\n    has_aliases = isinstance(self.header, (tuple, list, np.ndarray, ABCIndex))\n    if has_aliases or self.header:\n        coloffset = 0\n        if self.index:\n            coloffset = 1\n            if isinstance(self.df.index, ABCMultiIndex):\n                coloffset = len(self.df.index[0])\n        colnames = self.columns\n        if has_aliases:\n            if len(self.header) != len(self.columns):\n                raise ValueError(f'Writing {len(self.columns)} cols but got {len(self.header)} aliases')\n            else:\n                colnames = self.header\n        for colindex, colname in enumerate(colnames):\n            yield ExcelCell(self.rowcounter, colindex + coloffset, colname, self.header_style)",
                            "def _format_header(self):\n    if isinstance(self.columns, ABCMultiIndex):\n        gen = self._format_header_mi()\n    else:\n        gen = self._format_header_regular()\n    gen2 = ()\n    if self.df.index.names:\n        row = [x if x is not None else '' for x in self.df.index.names] + [''] * len(self.columns)\n        if reduce(lambda x, y: x and y, map(lambda x: x != '', row)):\n            gen2 = (ExcelCell(self.rowcounter, colindex, val, self.header_style) for colindex, val in enumerate(row))\n            self.rowcounter += 1\n    return itertools.chain(gen, gen2)",
                            "def _format_body(self):\n    if isinstance(self.df.index, ABCMultiIndex):\n        return self._format_hierarchical_rows()\n    else:\n        return self._format_regular_rows()",
                            "def _format_regular_rows(self):\n    has_aliases = isinstance(self.header, (tuple, list, np.ndarray, ABCIndex))\n    if has_aliases or self.header:\n        self.rowcounter += 1\n    if self.index:\n        if self.index_label and isinstance(self.index_label, (list, tuple, np.ndarray, Index)):\n            index_label = self.index_label[0]\n        elif self.index_label and isinstance(self.index_label, str):\n            index_label = self.index_label\n        else:\n            index_label = self.df.index.names[0]\n        if isinstance(self.columns, ABCMultiIndex):\n            self.rowcounter += 1\n        if index_label and self.header is not False:\n            yield ExcelCell(self.rowcounter - 1, 0, index_label, self.header_style)\n        index_values = self.df.index\n        if isinstance(self.df.index, ABCPeriodIndex):\n            index_values = self.df.index.to_timestamp()\n        for idx, idxval in enumerate(index_values):\n            yield ExcelCell(self.rowcounter + idx, 0, idxval, self.header_style)\n        coloffset = 1\n    else:\n        coloffset = 0\n    for cell in self._generate_body(coloffset):\n        yield cell",
                            "def _format_hierarchical_rows(self):\n    has_aliases = isinstance(self.header, (tuple, list, np.ndarray, ABCIndex))\n    if has_aliases or self.header:\n        self.rowcounter += 1\n    gcolidx = 0\n    if self.index:\n        index_labels = self.df.index.names\n        if self.index_label and isinstance(self.index_label, (list, tuple, np.ndarray, Index)):\n            index_labels = self.index_label\n        if isinstance(self.columns, ABCMultiIndex) and self.merge_cells:\n            self.rowcounter += 1\n        if com.any_not_none(*index_labels) and self.header is not False:\n            for cidx, name in enumerate(index_labels):\n                yield ExcelCell(self.rowcounter - 1, cidx, name, self.header_style)\n        if self.merge_cells:\n            level_strs = self.df.index.format(sparsify=True, adjoin=False, names=False)\n            level_lengths = get_level_lengths(level_strs)\n            for spans, levels, level_codes in zip(level_lengths, self.df.index.levels, self.df.index.codes):\n                values = levels.take(level_codes, allow_fill=levels._can_hold_na, fill_value=True)\n                for i in spans:\n                    if spans[i] > 1:\n                        yield ExcelCell(self.rowcounter + i, gcolidx, values[i], self.header_style, self.rowcounter + i + spans[i] - 1, gcolidx)\n                    else:\n                        yield ExcelCell(self.rowcounter + i, gcolidx, values[i], self.header_style)\n                gcolidx += 1\n        else:\n            for indexcolvals in zip(*self.df.index):\n                for idx, indexcolval in enumerate(indexcolvals):\n                    yield ExcelCell(self.rowcounter + idx, gcolidx, indexcolval, self.header_style)\n                gcolidx += 1\n    for cell in self._generate_body(gcolidx):\n        yield cell",
                            "def _generate_body(self, coloffset: int):\n    if self.styler is None:\n        styles = None\n    else:\n        styles = self.styler._compute().ctx\n        if not styles:\n            styles = None\n    xlstyle = None\n    for colidx in range(len(self.columns)):\n        series = self.df.iloc[:, colidx]\n        for i, val in enumerate(series):\n            if styles is not None:\n                xlstyle = self.style_converter(';'.join(styles[i, colidx]))\n            yield ExcelCell(self.rowcounter + i, colidx + coloffset, val, xlstyle)",
                            "def get_formatted_cells(self):\n    for cell in itertools.chain(self._format_header(), self._format_body()):\n        cell.val = self._format_value(cell.val)\n        yield cell",
                            "def write(self, writer, sheet_name='Sheet1', startrow=0, startcol=0, freeze_panes=None, engine=None):\n    \"\"\"\n    writer : string or ExcelWriter object\n        File path or existing ExcelWriter\n    sheet_name : string, default 'Sheet1'\n        Name of sheet which will contain DataFrame\n    startrow :\n        upper left cell row to dump data frame\n    startcol :\n        upper left cell column to dump data frame\n    freeze_panes : tuple of integer (length 2), default None\n        Specifies the one-based bottommost row and rightmost column that\n        is to be frozen\n    engine : string, default None\n        write engine to use if writer is a path - you can also set this\n        via the options ``io.excel.xlsx.writer``, ``io.excel.xls.writer``,\n        and ``io.excel.xlsm.writer``.\n    \"\"\"\n    from pandas.io.excel import ExcelWriter\n    num_rows, num_cols = self.df.shape\n    if num_rows > self.max_rows or num_cols > self.max_cols:\n        raise ValueError(f'This sheet is too large! Your sheet size is: {num_rows}, {num_cols} Max sheet size is: {self.max_rows}, {self.max_cols}')\n    if isinstance(writer, ExcelWriter):\n        need_save = False\n    else:\n        writer = ExcelWriter(stringify_path(writer), engine=engine)\n        need_save = True\n    formatted_cells = self.get_formatted_cells()\n    writer.write_cells(formatted_cells, sheet_name, startrow=startrow, startcol=startcol, freeze_panes=freeze_panes)\n    if need_save:\n        writer.save()"
                        ],
                        "constructor_variables": [
                            "index",
                            "style_converter",
                            "inf_rep",
                            "float_format",
                            "na_rep",
                            "styler",
                            "df",
                            "rowcounter",
                            "index_label",
                            "merge_cells",
                            "header",
                            "columns"
                        ],
                        "class_level_variables": [
                            "max_rows",
                            "max_cols"
                        ],
                        "class_decorators": [],
                        "function_signatures": [
                            "__init__(self, df, na_rep: str='', float_format: Optional[str]=None, cols: Optional[Sequence[Label]]=None, header: Union[Sequence[Label], bool]=True, index: bool=True, index_label: Optional[Union[Label, Sequence[Label]]]=None, merge_cells: bool=False, inf_rep: str='inf', style_converter: Optional[Callable]=None)",
                            "header_style(self)",
                            "_format_value(self, val)",
                            "_format_header_mi(self)",
                            "_format_header_regular(self)",
                            "_format_header(self)",
                            "_format_body(self)",
                            "_format_regular_rows(self)",
                            "_format_hierarchical_rows(self)",
                            "_generate_body(self, coloffset: int)",
                            "get_formatted_cells(self)",
                            "write(self, writer, sheet_name='Sheet1', startrow=0, startcol=0, freeze_panes=None, engine=None)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1119b81f0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1119b81f0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1119daca0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1119daca0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x11198fbe0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x11198fbe0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1119a2bb0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1119a2bb0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111a58820>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111a58820>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111ad4a30>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111ad4a30>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111e58520>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111e58520>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1119a2df0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1119a2df0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1111f2370>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1111f2370>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B\n0  1  2\n1  1  2\n2  1  2",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 2)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(2,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1111f24f0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1111f24f0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B\n0  1  2\n1  1  2\n2  1  2",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 2)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(2,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111262250>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111262250>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B\n0  1  2\n1  1  2\n2  1  2",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 2)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(2,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111676940>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111676940>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B\n0  1  2\n1  1  2\n2  1  2",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 2)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(2,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1112866a0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1112866a0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B\n0  1  2\n1  1  2\n2  1  2",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 2)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(2,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1112b01f0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x1112b01f0>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B\n0  1  2\n1  1  2\n2  1  2",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 2)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(2,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111286940>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111286940>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B\n0  1  2\n1  1  2\n2  1  2",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 2)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(2,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111286a60>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            },
                            {
                                "Optional": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Sequence": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Label": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Union": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "Callable": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.rowcounter": {
                                    "variable_value": "0",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<pandas.io.formats.excel.ExcelFormatter object at 0x111286a60>",
                                    "variable_type": "ExcelFormatter",
                                    "variable_shape": null
                                },
                                "self.na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "na_rep": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "df": {
                                    "variable_value": "   A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 3)"
                                },
                                "self.styler": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "df.data": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "CSSToExcelConverter": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.style_converter": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.df": {
                                    "variable_value": "   A  B\n0  1  2\n1  1  2\n2  1  2",
                                    "variable_type": "DataFrame",
                                    "variable_shape": "(3, 2)"
                                },
                                "cols": {
                                    "variable_value": "['A', 'B']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "Index": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "df.columns": {
                                    "variable_value": "Index(['A', 'B', 'C'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(3,)"
                                },
                                "df.reindex": {
                                    "variable_value": "<bound method DataFrame.reindex of    A  B  C\n0  1  2  3\n1  1  2  3\n2  1  2  3>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self.columns": {
                                    "variable_value": "Index(['A', 'B'], dtype='object')",
                                    "variable_type": "Index",
                                    "variable_shape": "(2,)"
                                },
                                "self.df.columns": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "float_format": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "index": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "index_label": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "self.header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "header": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "merge_cells": {
                                    "variable_value": "True",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "self.inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                },
                                "inf_rep": {
                                    "variable_value": "'inf'",
                                    "variable_type": "str",
                                    "variable_shape": "3"
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def __init__(\n    self, row: int, col: int, val, style=None, mergestart=None, mergeend=None\n):\n    self.row = row\n    self.col = col\n    self.val = val\n    self.style = style\n    self.mergestart = mergestart\n    self.mergeend = mergeend",
                "def __init__(self, inherited: Optional[str] = None):\n    if inherited is not None:\n        inherited = self.compute_css(inherited)\n\n    self.inherited = inherited",
                "def __call__(self, declarations_str: str) -> Dict[str, Dict[str, str]]:\n    \"\"\"\n    Convert CSS declarations to ExcelWriter style.\n\n    Parameters\n    ----------\n    declarations_str : str\n        List of CSS declarations.\n        e.g. \"font-weight: bold; background: blue\"\n\n    Returns\n    -------\n    xlstyle : dict\n        A style as interpreted by ExcelWriter when found in\n        ExcelCell.style.\n    \"\"\"\n    # TODO: memoize?\n    properties = self.compute_css(declarations_str, self.inherited)\n    return self.build_xlstyle(properties)",
                "def build_xlstyle(self, props: Dict[str, str]) -> Dict[str, Dict[str, str]]:\n    out = {\n        \"alignment\": self.build_alignment(props),\n        \"border\": self.build_border(props),\n        \"fill\": self.build_fill(props),\n        \"font\": self.build_font(props),\n        \"number_format\": self.build_number_format(props),\n    }\n\n    # TODO: handle cell width and height: needs support in pandas.io.excel\n\n    def remove_none(d: Dict[str, str]) -> None:\n        \"\"\"Remove key where value is None, through nested dicts\"\"\"\n        for k, v in list(d.items()):\n            if v is None:\n                del d[k]\n            elif isinstance(v, dict):\n                remove_none(v)\n                if not v:\n                    del d[k]\n\n    remove_none(out)\n    return out",
                "def build_alignment(self, props) -> Dict[str, Optional[Union[bool, str]]]:\n    # TODO: text-indent, padding-left -> alignment.indent\n    return {\n        \"horizontal\": props.get(\"text-align\"),\n        \"vertical\": self.VERTICAL_MAP.get(props.get(\"vertical-align\")),\n        \"wrap_text\": (\n            None\n            if props.get(\"white-space\") is None\n            else props[\"white-space\"] not in (\"nowrap\", \"pre\", \"pre-line\")\n        ),\n    }",
                "def build_border(self, props: Dict) -> Dict[str, Dict[str, str]]:\n    return {\n        side: {\n            \"style\": self._border_style(\n                props.get(f\"border-{side}-style\"),\n                props.get(f\"border-{side}-width\"),\n            ),\n            \"color\": self.color_to_excel(props.get(f\"border-{side}-color\")),\n        }\n        for side in [\"top\", \"right\", \"bottom\", \"left\"]\n    }",
                "def _border_style(self, style: Optional[str], width):\n    # convert styles and widths to openxml, one of:\n    #       'dashDot'\n    #       'dashDotDot'\n    #       'dashed'\n    #       'dotted'\n    #       'double'\n    #       'hair'\n    #       'medium'\n    #       'mediumDashDot'\n    #       'mediumDashDotDot'\n    #       'mediumDashed'\n    #       'slantDashDot'\n    #       'thick'\n    #       'thin'\n    if width is None and style is None:\n        return None\n    if style == \"none\" or style == \"hidden\":\n        return None\n\n    if width is None:\n        width = \"2pt\"\n    width = float(width[:-2])\n    if width < 1e-5:\n        return None\n    elif width < 1.3:\n        width_name = \"thin\"\n    elif width < 2.8:\n        width_name = \"medium\"\n    else:\n        width_name = \"thick\"\n\n    if style in (None, \"groove\", \"ridge\", \"inset\", \"outset\"):\n        # not handled\n        style = \"solid\"\n\n    if style == \"double\":\n        return \"double\"\n    if style == \"solid\":\n        return width_name\n    if style == \"dotted\":\n        if width_name in (\"hair\", \"thin\"):\n            return \"dotted\"\n        return \"mediumDashDotDot\"\n    if style == \"dashed\":\n        if width_name in (\"hair\", \"thin\"):\n            return \"dashed\"\n        return \"mediumDashed\"",
                "def build_fill(self, props: Dict[str, str]):\n    # TODO: perhaps allow for special properties\n    #       -excel-pattern-bgcolor and -excel-pattern-type\n    fill_color = props.get(\"background-color\")\n    if fill_color not in (None, \"transparent\", \"none\"):\n        return {\"fgColor\": self.color_to_excel(fill_color), \"patternType\": \"solid\"}",
                "def build_font(self, props) -> Dict[str, Optional[Union[bool, int, str]]]:\n    size = props.get(\"font-size\")\n    if size is not None:\n        assert size.endswith(\"pt\")\n        size = float(size[:-2])\n\n    font_names_tmp = re.findall(\n        r\"\"\"(?x)\n        (\n        \"(?:[^\"]|\\\\\")+\"\n        |\n        '(?:[^']|\\\\')+'\n        |\n        [^'\",]+\n        )(?=,|\\s*$)\n    \"\"\",\n        props.get(\"font-family\", \"\"),\n    )\n    font_names = []\n    for name in font_names_tmp:\n        if name[:1] == '\"':\n            name = name[1:-1].replace('\\\\\"', '\"')\n        elif name[:1] == \"'\":\n            name = name[1:-1].replace(\"\\\\'\", \"'\")\n        else:\n            name = name.strip()\n        if name:\n            font_names.append(name)\n\n    family = None\n    for name in font_names:\n        if name == \"serif\":\n            family = 1  # roman\n            break\n        elif name == \"sans-serif\":\n            family = 2  # swiss\n            break\n        elif name == \"cursive\":\n            family = 4  # script\n            break\n        elif name == \"fantasy\":\n            family = 5  # decorative\n            break\n\n    decoration = props.get(\"text-decoration\")\n    if decoration is not None:\n        decoration = decoration.split()\n    else:\n        decoration = ()\n\n    return {\n        \"name\": font_names[0] if font_names else None,\n        \"family\": family,\n        \"size\": size,\n        \"bold\": self.BOLD_MAP.get(props.get(\"font-weight\")),\n        \"italic\": self.ITALIC_MAP.get(props.get(\"font-style\")),\n        \"underline\": (\"single\" if \"underline\" in decoration else None),\n        \"strike\": (\"line-through\" in decoration) or None,\n        \"color\": self.color_to_excel(props.get(\"color\")),\n        # shadow if nonzero digit before shadow color\n        \"shadow\": (\n            bool(re.search(\"^[^#(]*[1-9]\", props[\"text-shadow\"]))\n            if \"text-shadow\" in props\n            else None\n        ),\n        # FIXME: dont leave commented-out\n        # 'vertAlign':,\n        # 'charset': ,\n        # 'scheme': ,\n        # 'outline': ,\n        # 'condense': ,\n    }",
                "def color_to_excel(self, val: Optional[str]):\n    if val is None:\n        return None\n    if val.startswith(\"#\") and len(val) == 7:\n        return val[1:].upper()\n    if val.startswith(\"#\") and len(val) == 4:\n        return (val[1] * 2 + val[2] * 2 + val[3] * 2).upper()\n    try:\n        return self.NAMED_COLORS[val]\n    except KeyError:\n        warnings.warn(f\"Unhandled color format: {repr(val)}\", CSSWarning)",
                "def build_number_format(self, props: Dict) -> Dict[str, Optional[str]]:\n    return {\"format_code\": props.get(\"number-format\")}",
                "def __init__(\n    self,\n    df,\n    na_rep: str = \"\",\n    float_format: Optional[str] = None,\n    cols: Optional[Sequence[Label]] = None,\n    header: Union[Sequence[Label], bool] = True,\n    index: bool = True,\n    index_label: Optional[Union[Label, Sequence[Label]]] = None,\n    merge_cells: bool = False,\n    inf_rep: str = \"inf\",\n    style_converter: Optional[Callable] = None,\n):\n    self.rowcounter = 0\n    self.na_rep = na_rep\n    if hasattr(df, \"render\"):\n        self.styler = df\n        df = df.data\n        if style_converter is None:\n            style_converter = CSSToExcelConverter()\n        self.style_converter = style_converter\n    else:\n        self.styler = None\n    self.df = df\n    if cols is not None:\n\n        # all missing, raise\n        if not len(Index(cols) & df.columns):\n            raise KeyError(\"passes columns are not ALL present dataframe\")\n\n        if len(Index(cols) & df.columns) != len(cols):\n            # Deprecated in GH#17295, enforced in 1.0.0\n            raise KeyError(\"Not all names specified in 'columns' are found\")\n\n        self.df = df\n\n    self.columns = self.df.columns\n    self.float_format = float_format\n    self.index = index\n    self.index_label = index_label\n    self.header = header\n    self.merge_cells = merge_cells\n    self.inf_rep = inf_rep",
                "@property\ndef header_style(self):\n    return {\n        \"font\": {\"bold\": True},\n        \"borders\": {\n            \"top\": \"thin\",\n            \"right\": \"thin\",\n            \"bottom\": \"thin\",\n            \"left\": \"thin\",\n        },\n        \"alignment\": {\"horizontal\": \"center\", \"vertical\": \"top\"},\n    }",
                "def _format_value(self, val):\n    if is_scalar(val) and missing.isna(val):\n        val = self.na_rep\n    elif is_float(val):\n        if missing.isposinf_scalar(val):\n            val = self.inf_rep\n        elif missing.isneginf_scalar(val):\n            val = f\"-{self.inf_rep}\"\n        elif self.float_format is not None:\n            val = float(self.float_format % val)\n    if getattr(val, \"tzinfo\", None) is not None:\n        raise ValueError(\n            \"Excel does not support datetimes with \"\n            \"timezones. Please ensure that datetimes \"\n            \"are timezone unaware before writing to Excel.\"\n        )\n    return val",
                "def _format_header_mi(self):\n    if self.columns.nlevels > 1:\n        if not self.index:\n            raise NotImplementedError(\n                \"Writing to Excel with MultiIndex columns and no \"\n                \"index ('index'=False) is not yet implemented.\"\n            )\n\n    has_aliases = isinstance(self.header, (tuple, list, np.ndarray, ABCIndex))\n    if not (has_aliases or self.header):\n        return\n\n    columns = self.columns\n    level_strs = columns.format(\n        sparsify=self.merge_cells, adjoin=False, names=False\n    )\n    level_lengths = get_level_lengths(level_strs)\n    coloffset = 0\n    lnum = 0\n\n    if self.index and isinstance(self.df.index, ABCMultiIndex):\n        coloffset = len(self.df.index[0]) - 1\n\n    if self.merge_cells:\n        # Format multi-index as a merged cells.\n        for lnum in range(len(level_lengths)):\n            name = columns.names[lnum]\n            yield ExcelCell(lnum, coloffset, name, self.header_style)\n\n        for lnum, (spans, levels, level_codes) in enumerate(\n            zip(level_lengths, columns.levels, columns.codes)\n        ):\n            values = levels.take(level_codes)\n            for i in spans:\n                if spans[i] > 1:\n                    yield ExcelCell(\n                        lnum,\n                        coloffset + i + 1,\n                        values[i],\n                        self.header_style,\n                        lnum,\n                        coloffset + i + spans[i],\n                    )\n                else:\n                    yield ExcelCell(\n                        lnum, coloffset + i + 1, values[i], self.header_style\n                    )\n    else:\n        # Format in legacy format with dots to indicate levels.\n        for i, values in enumerate(zip(*level_strs)):\n            v = \".\".join(map(pprint_thing, values))\n            yield ExcelCell(lnum, coloffset + i + 1, v, self.header_style)\n\n    self.rowcounter = lnum",
                "def _format_header_regular(self):\n    has_aliases = isinstance(self.header, (tuple, list, np.ndarray, ABCIndex))\n    if has_aliases or self.header:\n        coloffset = 0\n\n        if self.index:\n            coloffset = 1\n            if isinstance(self.df.index, ABCMultiIndex):\n                coloffset = len(self.df.index[0])\n\n        colnames = self.columns\n        if has_aliases:\n            if len(self.header) != len(self.columns):\n                raise ValueError(\n                    f\"Writing {len(self.columns)} cols but got {len(self.header)} \"\n                    \"aliases\"\n                )\n            else:\n                colnames = self.header\n\n        for colindex, colname in enumerate(colnames):\n            yield ExcelCell(\n                self.rowcounter, colindex + coloffset, colname, self.header_style\n            )",
                "def _format_header(self):\n    if isinstance(self.columns, ABCMultiIndex):\n        gen = self._format_header_mi()\n    else:\n        gen = self._format_header_regular()\n\n    gen2 = ()\n    if self.df.index.names:\n        row = [x if x is not None else \"\" for x in self.df.index.names] + [\n            \"\"\n        ] * len(self.columns)\n        if reduce(lambda x, y: x and y, map(lambda x: x != \"\", row)):\n            gen2 = (\n                ExcelCell(self.rowcounter, colindex, val, self.header_style)\n                for colindex, val in enumerate(row)\n            )\n            self.rowcounter += 1\n    return itertools.chain(gen, gen2)",
                "def _format_body(self):\n    if isinstance(self.df.index, ABCMultiIndex):\n        return self._format_hierarchical_rows()\n    else:\n        return self._format_regular_rows()",
                "def _format_regular_rows(self):\n    has_aliases = isinstance(self.header, (tuple, list, np.ndarray, ABCIndex))\n    if has_aliases or self.header:\n        self.rowcounter += 1\n\n    # output index and index_label?\n    if self.index:\n        # check aliases\n        # if list only take first as this is not a MultiIndex\n        if self.index_label and isinstance(\n            self.index_label, (list, tuple, np.ndarray, Index)\n        ):\n            index_label = self.index_label[0]\n        # if string good to go\n        elif self.index_label and isinstance(self.index_label, str):\n            index_label = self.index_label\n        else:\n            index_label = self.df.index.names[0]\n\n        if isinstance(self.columns, ABCMultiIndex):\n            self.rowcounter += 1\n\n        if index_label and self.header is not False:\n            yield ExcelCell(self.rowcounter - 1, 0, index_label, self.header_style)\n\n        # write index_values\n        index_values = self.df.index\n        if isinstance(self.df.index, ABCPeriodIndex):\n            index_values = self.df.index.to_timestamp()\n\n        for idx, idxval in enumerate(index_values):\n            yield ExcelCell(self.rowcounter + idx, 0, idxval, self.header_style)\n\n        coloffset = 1\n    else:\n        coloffset = 0\n\n    for cell in self._generate_body(coloffset):\n        yield cell",
                "def _format_hierarchical_rows(self):\n    has_aliases = isinstance(self.header, (tuple, list, np.ndarray, ABCIndex))\n    if has_aliases or self.header:\n        self.rowcounter += 1\n\n    gcolidx = 0\n\n    if self.index:\n        index_labels = self.df.index.names\n        # check for aliases\n        if self.index_label and isinstance(\n            self.index_label, (list, tuple, np.ndarray, Index)\n        ):\n            index_labels = self.index_label\n\n        # MultiIndex columns require an extra row\n        # with index names (blank if None) for\n        # unambiguous round-trip, unless not merging,\n        # in which case the names all go on one row Issue #11328\n        if isinstance(self.columns, ABCMultiIndex) and self.merge_cells:\n            self.rowcounter += 1\n\n        # if index labels are not empty go ahead and dump\n        if com.any_not_none(*index_labels) and self.header is not False:\n\n            for cidx, name in enumerate(index_labels):\n                yield ExcelCell(self.rowcounter - 1, cidx, name, self.header_style)\n\n        if self.merge_cells:\n            # Format hierarchical rows as merged cells.\n            level_strs = self.df.index.format(\n                sparsify=True, adjoin=False, names=False\n            )\n            level_lengths = get_level_lengths(level_strs)\n\n            for spans, levels, level_codes in zip(\n                level_lengths, self.df.index.levels, self.df.index.codes\n            ):\n\n                values = levels.take(\n                    level_codes, allow_fill=levels._can_hold_na, fill_value=True\n                )\n\n                for i in spans:\n                    if spans[i] > 1:\n                        yield ExcelCell(\n                            self.rowcounter + i,\n                            gcolidx,\n                            values[i],\n                            self.header_style,\n                            self.rowcounter + i + spans[i] - 1,\n                            gcolidx,\n                        )\n                    else:\n                        yield ExcelCell(\n                            self.rowcounter + i,\n                            gcolidx,\n                            values[i],\n                            self.header_style,\n                        )\n                gcolidx += 1\n\n        else:\n            # Format hierarchical rows with non-merged values.\n            for indexcolvals in zip(*self.df.index):\n                for idx, indexcolval in enumerate(indexcolvals):\n                    yield ExcelCell(\n                        self.rowcounter + idx,\n                        gcolidx,\n                        indexcolval,\n                        self.header_style,\n                    )\n                gcolidx += 1\n\n    for cell in self._generate_body(gcolidx):\n        yield cell",
                "def _generate_body(self, coloffset: int):\n    if self.styler is None:\n        styles = None\n    else:\n        styles = self.styler._compute().ctx\n        if not styles:\n            styles = None\n    xlstyle = None\n\n    # Write the body of the frame data series by series.\n    for colidx in range(len(self.columns)):\n        series = self.df.iloc[:, colidx]\n        for i, val in enumerate(series):\n            if styles is not None:\n                xlstyle = self.style_converter(\";\".join(styles[i, colidx]))\n            yield ExcelCell(self.rowcounter + i, colidx + coloffset, val, xlstyle)",
                "def get_formatted_cells(self):\n    for cell in itertools.chain(self._format_header(), self._format_body()):\n        cell.val = self._format_value(cell.val)\n        yield cell",
                "def write(\n    self,\n    writer,\n    sheet_name=\"Sheet1\",\n    startrow=0,\n    startcol=0,\n    freeze_panes=None,\n    engine=None,\n):\n    \"\"\"\n    writer : string or ExcelWriter object\n        File path or existing ExcelWriter\n    sheet_name : string, default 'Sheet1'\n        Name of sheet which will contain DataFrame\n    startrow :\n        upper left cell row to dump data frame\n    startcol :\n        upper left cell column to dump data frame\n    freeze_panes : tuple of integer (length 2), default None\n        Specifies the one-based bottommost row and rightmost column that\n        is to be frozen\n    engine : string, default None\n        write engine to use if writer is a path - you can also set this\n        via the options ``io.excel.xlsx.writer``, ``io.excel.xls.writer``,\n        and ``io.excel.xlsm.writer``.\n    \"\"\"\n    from pandas.io.excel import ExcelWriter\n\n    num_rows, num_cols = self.df.shape\n    if num_rows > self.max_rows or num_cols > self.max_cols:\n        raise ValueError(\n            f\"This sheet is too large! Your sheet size is: {num_rows}, {num_cols} \"\n            f\"Max sheet size is: {self.max_rows}, {self.max_cols}\"\n        )\n\n    if isinstance(writer, ExcelWriter):\n        need_save = False\n    else:\n        writer = ExcelWriter(stringify_path(writer), engine=engine)\n        need_save = True\n\n    formatted_cells = self.get_formatted_cells()\n    writer.write_cells(\n        formatted_cells,\n        sheet_name,\n        startrow=startrow,\n        startcol=startcol,\n        freeze_panes=freeze_panes,\n    )\n    if need_save:\n        writer.save()",
                "def remove_none(d: Dict[str, str]) -> None:\n    \"\"\"Remove key where value is None, through nested dicts\"\"\"\n    for k, v in list(d.items()):\n        if v is None:\n            del d[k]\n        elif isinstance(v, dict):\n            remove_none(v)\n            if not v:\n                del d[k]"
            ],
            "inscope_function_signatures": [
                "__init__(self, row: int, col: int, val, style=None, mergestart=None, mergeend=None)",
                "__init__(self, inherited: Optional[str]=None)",
                "__call__(self, declarations_str: str) -> Dict[str, Dict[str, str]]",
                "build_xlstyle(self, props: Dict[str, str]) -> Dict[str, Dict[str, str]]",
                "build_alignment(self, props) -> Dict[str, Optional[Union[bool, str]]]",
                "build_border(self, props: Dict) -> Dict[str, Dict[str, str]]",
                "_border_style(self, style: Optional[str], width)",
                "build_fill(self, props: Dict[str, str])",
                "build_font(self, props) -> Dict[str, Optional[Union[bool, int, str]]]",
                "color_to_excel(self, val: Optional[str])",
                "build_number_format(self, props: Dict) -> Dict[str, Optional[str]]",
                "__init__(self, df, na_rep: str='', float_format: Optional[str]=None, cols: Optional[Sequence[Label]]=None, header: Union[Sequence[Label], bool]=True, index: bool=True, index_label: Optional[Union[Label, Sequence[Label]]]=None, merge_cells: bool=False, inf_rep: str='inf', style_converter: Optional[Callable]=None)",
                "header_style(self)",
                "_format_value(self, val)",
                "_format_header_mi(self)",
                "_format_header_regular(self)",
                "_format_header(self)",
                "_format_body(self)",
                "_format_regular_rows(self)",
                "_format_hierarchical_rows(self)",
                "_generate_body(self, coloffset: int)",
                "get_formatted_cells(self)",
                "write(self, writer, sheet_name='Sheet1', startrow=0, startcol=0, freeze_panes=None, engine=None)",
                "remove_none(d: Dict[str, str]) -> None"
            ],
            "variables_in_file": {
                "__fields__": [
                    29,
                    30
                ],
                "__slots__": [
                    30
                ],
                "int": [
                    224,
                    33,
                    669
                ],
                "self.row": [
                    35
                ],
                "self": [
                    512,
                    514,
                    516,
                    520,
                    524,
                    528,
                    529,
                    531,
                    534,
                    535,
                    537,
                    540,
                    543,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    547,
                    548,
                    550,
                    553,
                    554,
                    555,
                    558,
                    561,
                    562,
                    564,
                    566,
                    567,
                    569,
                    571,
                    572,
                    574,
                    575,
                    578,
                    67,
                    579,
                    69,
                    580,
                    583,
                    589,
                    593,
                    594,
                    595,
                    599,
                    600,
                    90,
                    91,
                    602,
                    603,
                    605,
                    95,
                    96,
                    97,
                    98,
                    99,
                    611,
                    612,
                    615,
                    618,
                    620,
                    622,
                    628,
                    638,
                    641,
                    642,
                    131,
                    647,
                    650,
                    142,
                    656,
                    146,
                    659,
                    662,
                    666,
                    670,
                    673,
                    679,
                    680,
                    683,
                    684,
                    687,
                    688,
                    205,
                    719,
                    720,
                    723,
                    732,
                    278,
                    279,
                    282,
                    328,
                    385,
                    386,
                    388,
                    392,
                    394,
                    395,
                    406,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    431,
                    434,
                    436,
                    437,
                    438,
                    448,
                    449,
                    455,
                    456,
                    459,
                    461,
                    467,
                    468,
                    470,
                    474,
                    486,
                    492,
                    498,
                    500,
                    503,
                    504,
                    507,
                    509,
                    510
                ],
                "row": [
                    538,
                    35,
                    541,
                    535
                ],
                "self.col": [
                    36
                ],
                "col": [
                    36
                ],
                "self.val": [
                    37
                ],
                "val": [
                    540,
                    541,
                    37,
                    681,
                    684,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    438,
                    439,
                    445,
                    321,
                    323,
                    324,
                    325,
                    326,
                    328,
                    330
                ],
                "self.style": [
                    38
                ],
                "style": [
                    195,
                    166,
                    38,
                    168,
                    183,
                    185,
                    187,
                    189,
                    191
                ],
                "self.mergestart": [
                    39
                ],
                "mergestart": [
                    39
                ],
                "self.mergeend": [
                    40
                ],
                "mergeend": [
                    40
                ],
                "Optional": [
                    320,
                    65,
                    224,
                    383,
                    332,
                    151,
                    376,
                    377,
                    380,
                    127
                ],
                "str": [
                    224,
                    65,
                    320,
                    104,
                    73,
                    200,
                    139,
                    332,
                    566,
                    151,
                    376,
                    375,
                    93,
                    382,
                    127
                ],
                "inherited": [
                    66,
                    67,
                    69
                ],
                "self.compute_css": [
                    90,
                    67
                ],
                "self.inherited": [
                    90,
                    69
                ],
                "compute_css": [
                    71
                ],
                "CSSResolver": [
                    71
                ],
                "properties": [
                    90,
                    91
                ],
                "declarations_str": [
                    90
                ],
                "self.build_xlstyle": [
                    91
                ],
                "Dict": [
                    224,
                    104,
                    73,
                    200,
                    139,
                    332,
                    93,
                    127
                ],
                "out": [
                    114,
                    115,
                    94
                ],
                "self.build_alignment": [
                    95
                ],
                "props": [
                    130,
                    131,
                    134,
                    135,
                    268,
                    143,
                    144,
                    146,
                    278,
                    279,
                    282,
                    285,
                    286,
                    203,
                    333,
                    95,
                    96,
                    97,
                    98,
                    99,
                    225,
                    240
                ],
                "self.build_border": [
                    96
                ],
                "self.build_fill": [
                    97
                ],
                "self.build_font": [
                    98
                ],
                "self.build_number_format": [
                    99
                ],
                "k": [
                    112,
                    106,
                    108
                ],
                "v": [
                    106,
                    107,
                    109,
                    110,
                    111,
                    497,
                    498
                ],
                "list": [
                    455,
                    553,
                    106,
                    593,
                    562,
                    503,
                    603
                ],
                "d.items": [
                    106
                ],
                "d": [
                    112,
                    106,
                    108
                ],
                "isinstance": [
                    547,
                    579,
                    611,
                    455,
                    553,
                    109,
                    528,
                    561,
                    593,
                    467,
                    566,
                    503,
                    726,
                    602,
                    571,
                    509
                ],
                "dict": [
                    109
                ],
                "remove_none": [
                    114,
                    110
                ],
                "VERTICAL_MAP": [
                    117
                ],
                "props.get": [
                    225,
                    130,
                    131,
                    134,
                    203,
                    268,
                    333,
                    143,
                    144,
                    240,
                    146,
                    278,
                    279,
                    282
                ],
                "self.VERTICAL_MAP.get": [
                    131
                ],
                "self.VERTICAL_MAP": [
                    131
                ],
                "Union": [
                    224,
                    378,
                    380,
                    127
                ],
                "bool": [
                    224,
                    381,
                    378,
                    379,
                    285,
                    127
                ],
                "side": [
                    141,
                    143,
                    144,
                    146,
                    148
                ],
                "self._border_style": [
                    142
                ],
                "self.color_to_excel": [
                    146,
                    282,
                    205
                ],
                "width": [
                    166,
                    171,
                    172,
                    173,
                    174,
                    176,
                    178
                ],
                "float": [
                    228,
                    173,
                    438
                ],
                "width_name": [
                    192,
                    196,
                    177,
                    179,
                    181,
                    190
                ],
                "fill_color": [
                    203,
                    204,
                    205
                ],
                "BOLD_MAP": [
                    207
                ],
                "ITALIC_MAP": [
                    222
                ],
                "size": [
                    225,
                    226,
                    227,
                    228,
                    277
                ],
                "size.endswith": [
                    227
                ],
                "font_names_tmp": [
                    243,
                    230
                ],
                "re.findall": [
                    230
                ],
                "re": [
                    285,
                    230
                ],
                "font_names": [
                    275,
                    242,
                    251,
                    254
                ],
                "name": [
                    258,
                    261,
                    264,
                    617,
                    618,
                    473,
                    474,
                    243,
                    244,
                    245,
                    246,
                    247,
                    249,
                    250,
                    251,
                    254,
                    255
                ],
                "replace": [
                    245,
                    247
                ],
                "name.strip": [
                    249
                ],
                "font_names.append": [
                    251
                ],
                "family": [
                    256,
                    259,
                    262,
                    265,
                    276,
                    253
                ],
                "decoration": [
                    268,
                    269,
                    270,
                    272,
                    280,
                    281
                ],
                "decoration.split": [
                    270
                ],
                "self.BOLD_MAP.get": [
                    278
                ],
                "self.BOLD_MAP": [
                    278
                ],
                "self.ITALIC_MAP.get": [
                    279
                ],
                "self.ITALIC_MAP": [
                    279
                ],
                "re.search": [
                    285
                ],
                "NAMED_COLORS": [
                    297
                ],
                "val.startswith": [
                    323,
                    325
                ],
                "len": [
                    514,
                    323,
                    516,
                    325,
                    679,
                    399,
                    402,
                    468,
                    472,
                    537,
                    510
                ],
                "upper": [
                    324,
                    326
                ],
                "self.NAMED_COLORS": [
                    328
                ],
                "KeyError": [
                    400,
                    329,
                    404
                ],
                "warnings.warn": [
                    330
                ],
                "warnings": [
                    330
                ],
                "repr": [
                    330
                ],
                "CSSWarning": [
                    330
                ],
                "max_rows": [
                    369
                ],
                "max_cols": [
                    370
                ],
                "Sequence": [
                    377,
                    378,
                    380
                ],
                "Label": [
                    377,
                    378,
                    380
                ],
                "Callable": [
                    383
                ],
                "self.rowcounter": [
                    385,
                    642,
                    612,
                    583,
                    647,
                    618,
                    555,
                    524,
                    575,
                    638,
                    684,
                    595,
                    500,
                    659,
                    540,
                    572,
                    543
                ],
                "self.na_rep": [
                    386,
                    431
                ],
                "na_rep": [
                    386
                ],
                "hasattr": [
                    387
                ],
                "df": [
                    387,
                    388,
                    389,
                    395,
                    399,
                    402,
                    406
                ],
                "self.styler": [
                    673,
                    394,
                    388,
                    670
                ],
                "df.data": [
                    389
                ],
                "style_converter": [
                    392,
                    390,
                    391
                ],
                "CSSToExcelConverter": [
                    391
                ],
                "self.style_converter": [
                    392,
                    683
                ],
                "self.df": [
                    395,
                    656,
                    406,
                    535,
                    534,
                    408,
                    547,
                    680,
                    569,
                    578,
                    579,
                    580,
                    719,
                    467,
                    468,
                    600,
                    622,
                    628,
                    509,
                    510
                ],
                "cols": [
                    402,
                    396,
                    399
                ],
                "Index": [
                    402,
                    603,
                    562,
                    399
                ],
                "df.columns": [
                    402,
                    399
                ],
                "self.columns": [
                    512,
                    448,
                    514,
                    611,
                    516,
                    679,
                    459,
                    528,
                    408,
                    537,
                    571
                ],
                "self.df.columns": [
                    408
                ],
                "self.float_format": [
                    409,
                    437,
                    438
                ],
                "float_format": [
                    409
                ],
                "self.index": [
                    449,
                    558,
                    467,
                    599,
                    410,
                    507
                ],
                "index": [
                    410
                ],
                "self.index_label": [
                    603,
                    561,
                    562,
                    564,
                    566,
                    567,
                    602,
                    411,
                    605
                ],
                "index_label": [
                    564,
                    567,
                    569,
                    411,
                    574,
                    575
                ],
                "self.header": [
                    514,
                    516,
                    455,
                    456,
                    520,
                    553,
                    554,
                    615,
                    593,
                    594,
                    503,
                    504,
                    412,
                    574
                ],
                "header": [
                    412
                ],
                "self.merge_cells": [
                    611,
                    620,
                    461,
                    470,
                    413
                ],
                "merge_cells": [
                    413
                ],
                "self.inf_rep": [
                    434,
                    436,
                    414
                ],
                "inf_rep": [
                    414
                ],
                "property": [
                    416
                ],
                "is_scalar": [
                    430
                ],
                "missing.isna": [
                    430
                ],
                "missing": [
                    433,
                    435,
                    430
                ],
                "is_float": [
                    432
                ],
                "missing.isposinf_scalar": [
                    433
                ],
                "missing.isneginf_scalar": [
                    435
                ],
                "getattr": [
                    439
                ],
                "ValueError": [
                    440,
                    721,
                    515
                ],
                "self.columns.nlevels": [
                    448
                ],
                "NotImplementedError": [
                    450
                ],
                "has_aliases": [
                    513,
                    455,
                    456,
                    553,
                    554,
                    593,
                    594,
                    503,
                    504
                ],
                "tuple": [
                    455,
                    553,
                    593,
                    562,
                    503,
                    603
                ],
                "np.ndarray": [
                    455,
                    553,
                    593,
                    562,
                    503,
                    603
                ],
                "np": [
                    455,
                    553,
                    593,
                    562,
                    503,
                    603
                ],
                "ABCIndex": [
                    593,
                    553,
                    503,
                    455
                ],
                "columns": [
                    473,
                    459,
                    460,
                    477
                ],
                "level_strs": [
                    460,
                    622,
                    463,
                    496,
                    625
                ],
                "columns.format": [
                    460
                ],
                "level_lengths": [
                    463,
                    625,
                    628,
                    472,
                    477
                ],
                "get_level_lengths": [
                    625,
                    463
                ],
                "coloffset": [
                    484,
                    488,
                    585,
                    587,
                    492,
                    524,
                    589,
                    684,
                    464,
                    498,
                    468,
                    505,
                    474,
                    508,
                    510
                ],
                "lnum": [
                    483,
                    487,
                    492,
                    465,
                    498,
                    500,
                    472,
                    473,
                    474,
                    476
                ],
                "self.df.index": [
                    578,
                    547,
                    579,
                    580,
                    622,
                    656,
                    467,
                    468,
                    628,
                    534,
                    535,
                    600,
                    569,
                    509,
                    510
                ],
                "ABCMultiIndex": [
                    547,
                    611,
                    528,
                    467,
                    571,
                    509
                ],
                "range": [
                    472,
                    679
                ],
                "columns.names": [
                    473
                ],
                "ExcelCell": [
                    482,
                    646,
                    583,
                    618,
                    523,
                    491,
                    684,
                    498,
                    658,
                    474,
                    540,
                    637,
                    575
                ],
                "self.header_style": [
                    641,
                    486,
                    583,
                    618,
                    650,
                    492,
                    524,
                    498,
                    662,
                    474,
                    540,
                    575
                ],
                "spans": [
                    480,
                    481,
                    636,
                    642,
                    488,
                    627,
                    635,
                    476
                ],
                "levels": [
                    627,
                    631,
                    632,
                    476,
                    479
                ],
                "level_codes": [
                    632,
                    627,
                    476,
                    479
                ],
                "enumerate": [
                    582,
                    617,
                    522,
                    681,
                    496,
                    657,
                    476,
                    541
                ],
                "zip": [
                    496,
                    656,
                    627,
                    477
                ],
                "columns.levels": [
                    477
                ],
                "columns.codes": [
                    477
                ],
                "values": [
                    640,
                    485,
                    649,
                    492,
                    496,
                    497,
                    631,
                    479
                ],
                "levels.take": [
                    631,
                    479
                ],
                "i": [
                    480,
                    481,
                    640,
                    642,
                    484,
                    485,
                    647,
                    488,
                    649,
                    681,
                    683,
                    492,
                    684,
                    496,
                    498,
                    635,
                    636,
                    638
                ],
                "join": [
                    497,
                    683
                ],
                "map": [
                    497,
                    538
                ],
                "pprint_thing": [
                    497
                ],
                "colnames": [
                    512,
                    520,
                    522
                ],
                "colindex": [
                    522,
                    541,
                    524,
                    540
                ],
                "colname": [
                    522,
                    524
                ],
                "gen": [
                    544,
                    529,
                    531
                ],
                "self._format_header_mi": [
                    529
                ],
                "self._format_header_regular": [
                    531
                ],
                "gen2": [
                    544,
                    539,
                    533
                ],
                "self.df.index.names": [
                    600,
                    569,
                    534,
                    535
                ],
                "x": [
                    538,
                    535
                ],
                "reduce": [
                    538
                ],
                "y": [
                    538
                ],
                "itertools.chain": [
                    544,
                    687
                ],
                "itertools": [
                    544,
                    687
                ],
                "self._format_hierarchical_rows": [
                    548
                ],
                "self._format_regular_rows": [
                    550
                ],
                "index_values": [
                    578,
                    580,
                    582
                ],
                "ABCPeriodIndex": [
                    579
                ],
                "self.df.index.to_timestamp": [
                    580
                ],
                "idx": [
                    657,
                    659,
                    582,
                    583
                ],
                "idxval": [
                    582,
                    583
                ],
                "cell": [
                    589,
                    590,
                    687,
                    688,
                    689,
                    666,
                    667
                ],
                "self._generate_body": [
                    666,
                    589
                ],
                "gcolidx": [
                    643,
                    648,
                    652,
                    660,
                    597,
                    664,
                    666,
                    639
                ],
                "index_labels": [
                    600,
                    617,
                    605,
                    615
                ],
                "com.any_not_none": [
                    615
                ],
                "com": [
                    615
                ],
                "cidx": [
                    617,
                    618
                ],
                "self.df.index.format": [
                    622
                ],
                "self.df.index.levels": [
                    628
                ],
                "self.df.index.codes": [
                    628
                ],
                "levels._can_hold_na": [
                    632
                ],
                "indexcolvals": [
                    656,
                    657
                ],
                "indexcolval": [
                    657,
                    661
                ],
                "styles": [
                    673,
                    674,
                    675,
                    682,
                    683,
                    671
                ],
                "ctx": [
                    673
                ],
                "self.styler._compute": [
                    673
                ],
                "xlstyle": [
                    684,
                    683,
                    676
                ],
                "colidx": [
                    680,
                    683,
                    684,
                    679
                ],
                "series": [
                    680,
                    681
                ],
                "self.df.iloc": [
                    680
                ],
                "self._format_header": [
                    687
                ],
                "self._format_body": [
                    687
                ],
                "cell.val": [
                    688
                ],
                "self._format_value": [
                    688
                ],
                "num_rows": [
                    720,
                    722,
                    719
                ],
                "num_cols": [
                    720,
                    722,
                    719
                ],
                "self.df.shape": [
                    719
                ],
                "self.max_rows": [
                    720,
                    723
                ],
                "self.max_cols": [
                    720,
                    723
                ],
                "writer": [
                    729,
                    733,
                    726,
                    741
                ],
                "ExcelWriter": [
                    729,
                    726
                ],
                "need_save": [
                    730,
                    740,
                    727
                ],
                "stringify_path": [
                    729
                ],
                "engine": [
                    729
                ],
                "formatted_cells": [
                    732,
                    734
                ],
                "self.get_formatted_cells": [
                    732
                ],
                "writer.write_cells": [
                    733
                ],
                "sheet_name": [
                    735
                ],
                "startrow": [
                    736
                ],
                "startcol": [
                    737
                ],
                "freeze_panes": [
                    738
                ],
                "writer.save": [
                    741
                ]
            },
            "filtered_variables_in_file": {
                "__fields__": [
                    29,
                    30
                ],
                "__slots__": [
                    30
                ],
                "self.row": [
                    35
                ],
                "self": [
                    512,
                    514,
                    516,
                    520,
                    524,
                    528,
                    529,
                    531,
                    534,
                    535,
                    537,
                    540,
                    543,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    547,
                    548,
                    550,
                    553,
                    554,
                    555,
                    558,
                    561,
                    562,
                    564,
                    566,
                    567,
                    569,
                    571,
                    572,
                    574,
                    575,
                    578,
                    67,
                    579,
                    69,
                    580,
                    583,
                    589,
                    593,
                    594,
                    595,
                    599,
                    600,
                    90,
                    91,
                    602,
                    603,
                    605,
                    95,
                    96,
                    97,
                    98,
                    99,
                    611,
                    612,
                    615,
                    618,
                    620,
                    622,
                    628,
                    638,
                    641,
                    642,
                    131,
                    647,
                    650,
                    142,
                    656,
                    146,
                    659,
                    662,
                    666,
                    670,
                    673,
                    679,
                    680,
                    683,
                    684,
                    687,
                    688,
                    205,
                    719,
                    720,
                    723,
                    732,
                    278,
                    279,
                    282,
                    328,
                    385,
                    386,
                    388,
                    392,
                    394,
                    395,
                    406,
                    408,
                    409,
                    410,
                    411,
                    412,
                    413,
                    414,
                    431,
                    434,
                    436,
                    437,
                    438,
                    448,
                    449,
                    455,
                    456,
                    459,
                    461,
                    467,
                    468,
                    470,
                    474,
                    486,
                    492,
                    498,
                    500,
                    503,
                    504,
                    507,
                    509,
                    510
                ],
                "row": [
                    538,
                    35,
                    541,
                    535
                ],
                "self.col": [
                    36
                ],
                "col": [
                    36
                ],
                "self.val": [
                    37
                ],
                "val": [
                    540,
                    541,
                    37,
                    681,
                    684,
                    430,
                    431,
                    432,
                    433,
                    434,
                    435,
                    436,
                    438,
                    439,
                    445,
                    321,
                    323,
                    324,
                    325,
                    326,
                    328,
                    330
                ],
                "self.style": [
                    38
                ],
                "style": [
                    195,
                    166,
                    38,
                    168,
                    183,
                    185,
                    187,
                    189,
                    191
                ],
                "self.mergestart": [
                    39
                ],
                "mergestart": [
                    39
                ],
                "self.mergeend": [
                    40
                ],
                "mergeend": [
                    40
                ],
                "Optional": [
                    320,
                    65,
                    224,
                    383,
                    332,
                    151,
                    376,
                    377,
                    380,
                    127
                ],
                "inherited": [
                    66,
                    67,
                    69
                ],
                "self.compute_css": [
                    90,
                    67
                ],
                "self.inherited": [
                    90,
                    69
                ],
                "compute_css": [
                    71
                ],
                "CSSResolver": [
                    71
                ],
                "properties": [
                    90,
                    91
                ],
                "declarations_str": [
                    90
                ],
                "self.build_xlstyle": [
                    91
                ],
                "Dict": [
                    224,
                    104,
                    73,
                    200,
                    139,
                    332,
                    93,
                    127
                ],
                "out": [
                    114,
                    115,
                    94
                ],
                "self.build_alignment": [
                    95
                ],
                "props": [
                    130,
                    131,
                    134,
                    135,
                    268,
                    143,
                    144,
                    146,
                    278,
                    279,
                    282,
                    285,
                    286,
                    203,
                    333,
                    95,
                    96,
                    97,
                    98,
                    99,
                    225,
                    240
                ],
                "self.build_border": [
                    96
                ],
                "self.build_fill": [
                    97
                ],
                "self.build_font": [
                    98
                ],
                "self.build_number_format": [
                    99
                ],
                "k": [
                    112,
                    106,
                    108
                ],
                "v": [
                    106,
                    107,
                    109,
                    110,
                    111,
                    497,
                    498
                ],
                "d.items": [
                    106
                ],
                "d": [
                    112,
                    106,
                    108
                ],
                "remove_none": [
                    114,
                    110
                ],
                "VERTICAL_MAP": [
                    117
                ],
                "props.get": [
                    225,
                    130,
                    131,
                    134,
                    203,
                    268,
                    333,
                    143,
                    144,
                    240,
                    146,
                    278,
                    279,
                    282
                ],
                "self.VERTICAL_MAP.get": [
                    131
                ],
                "self.VERTICAL_MAP": [
                    131
                ],
                "Union": [
                    224,
                    378,
                    380,
                    127
                ],
                "side": [
                    141,
                    143,
                    144,
                    146,
                    148
                ],
                "self._border_style": [
                    142
                ],
                "self.color_to_excel": [
                    146,
                    282,
                    205
                ],
                "width": [
                    166,
                    171,
                    172,
                    173,
                    174,
                    176,
                    178
                ],
                "width_name": [
                    192,
                    196,
                    177,
                    179,
                    181,
                    190
                ],
                "fill_color": [
                    203,
                    204,
                    205
                ],
                "BOLD_MAP": [
                    207
                ],
                "ITALIC_MAP": [
                    222
                ],
                "size": [
                    225,
                    226,
                    227,
                    228,
                    277
                ],
                "size.endswith": [
                    227
                ],
                "font_names_tmp": [
                    243,
                    230
                ],
                "re.findall": [
                    230
                ],
                "re": [
                    285,
                    230
                ],
                "font_names": [
                    275,
                    242,
                    251,
                    254
                ],
                "name": [
                    258,
                    261,
                    264,
                    617,
                    618,
                    473,
                    474,
                    243,
                    244,
                    245,
                    246,
                    247,
                    249,
                    250,
                    251,
                    254,
                    255
                ],
                "replace": [
                    245,
                    247
                ],
                "name.strip": [
                    249
                ],
                "font_names.append": [
                    251
                ],
                "family": [
                    256,
                    259,
                    262,
                    265,
                    276,
                    253
                ],
                "decoration": [
                    268,
                    269,
                    270,
                    272,
                    280,
                    281
                ],
                "decoration.split": [
                    270
                ],
                "self.BOLD_MAP.get": [
                    278
                ],
                "self.BOLD_MAP": [
                    278
                ],
                "self.ITALIC_MAP.get": [
                    279
                ],
                "self.ITALIC_MAP": [
                    279
                ],
                "re.search": [
                    285
                ],
                "NAMED_COLORS": [
                    297
                ],
                "val.startswith": [
                    323,
                    325
                ],
                "upper": [
                    324,
                    326
                ],
                "self.NAMED_COLORS": [
                    328
                ],
                "warnings.warn": [
                    330
                ],
                "warnings": [
                    330
                ],
                "CSSWarning": [
                    330
                ],
                "max_rows": [
                    369
                ],
                "max_cols": [
                    370
                ],
                "Sequence": [
                    377,
                    378,
                    380
                ],
                "Label": [
                    377,
                    378,
                    380
                ],
                "Callable": [
                    383
                ],
                "self.rowcounter": [
                    385,
                    642,
                    612,
                    583,
                    647,
                    618,
                    555,
                    524,
                    575,
                    638,
                    684,
                    595,
                    500,
                    659,
                    540,
                    572,
                    543
                ],
                "self.na_rep": [
                    386,
                    431
                ],
                "na_rep": [
                    386
                ],
                "df": [
                    387,
                    388,
                    389,
                    395,
                    399,
                    402,
                    406
                ],
                "self.styler": [
                    673,
                    394,
                    388,
                    670
                ],
                "df.data": [
                    389
                ],
                "style_converter": [
                    392,
                    390,
                    391
                ],
                "CSSToExcelConverter": [
                    391
                ],
                "self.style_converter": [
                    392,
                    683
                ],
                "self.df": [
                    395,
                    656,
                    406,
                    535,
                    534,
                    408,
                    547,
                    680,
                    569,
                    578,
                    579,
                    580,
                    719,
                    467,
                    468,
                    600,
                    622,
                    628,
                    509,
                    510
                ],
                "cols": [
                    402,
                    396,
                    399
                ],
                "Index": [
                    402,
                    603,
                    562,
                    399
                ],
                "df.columns": [
                    402,
                    399
                ],
                "self.columns": [
                    512,
                    448,
                    514,
                    611,
                    516,
                    679,
                    459,
                    528,
                    408,
                    537,
                    571
                ],
                "self.df.columns": [
                    408
                ],
                "self.float_format": [
                    409,
                    437,
                    438
                ],
                "float_format": [
                    409
                ],
                "self.index": [
                    449,
                    558,
                    467,
                    599,
                    410,
                    507
                ],
                "index": [
                    410
                ],
                "self.index_label": [
                    603,
                    561,
                    562,
                    564,
                    566,
                    567,
                    602,
                    411,
                    605
                ],
                "index_label": [
                    564,
                    567,
                    569,
                    411,
                    574,
                    575
                ],
                "self.header": [
                    514,
                    516,
                    455,
                    456,
                    520,
                    553,
                    554,
                    615,
                    593,
                    594,
                    503,
                    504,
                    412,
                    574
                ],
                "header": [
                    412
                ],
                "self.merge_cells": [
                    611,
                    620,
                    461,
                    470,
                    413
                ],
                "merge_cells": [
                    413
                ],
                "self.inf_rep": [
                    434,
                    436,
                    414
                ],
                "inf_rep": [
                    414
                ],
                "is_scalar": [
                    430
                ],
                "missing.isna": [
                    430
                ],
                "missing": [
                    433,
                    435,
                    430
                ],
                "is_float": [
                    432
                ],
                "missing.isposinf_scalar": [
                    433
                ],
                "missing.isneginf_scalar": [
                    435
                ],
                "self.columns.nlevels": [
                    448
                ],
                "has_aliases": [
                    513,
                    455,
                    456,
                    553,
                    554,
                    593,
                    594,
                    503,
                    504
                ],
                "np.ndarray": [
                    455,
                    553,
                    593,
                    562,
                    503,
                    603
                ],
                "np": [
                    455,
                    553,
                    593,
                    562,
                    503,
                    603
                ],
                "ABCIndex": [
                    593,
                    553,
                    503,
                    455
                ],
                "columns": [
                    473,
                    459,
                    460,
                    477
                ],
                "level_strs": [
                    460,
                    622,
                    463,
                    496,
                    625
                ],
                "columns.format": [
                    460
                ],
                "level_lengths": [
                    463,
                    625,
                    628,
                    472,
                    477
                ],
                "get_level_lengths": [
                    625,
                    463
                ],
                "coloffset": [
                    484,
                    488,
                    585,
                    587,
                    492,
                    524,
                    589,
                    684,
                    464,
                    498,
                    468,
                    505,
                    474,
                    508,
                    510
                ],
                "lnum": [
                    483,
                    487,
                    492,
                    465,
                    498,
                    500,
                    472,
                    473,
                    474,
                    476
                ],
                "self.df.index": [
                    578,
                    547,
                    579,
                    580,
                    622,
                    656,
                    467,
                    468,
                    628,
                    534,
                    535,
                    600,
                    569,
                    509,
                    510
                ],
                "ABCMultiIndex": [
                    547,
                    611,
                    528,
                    467,
                    571,
                    509
                ],
                "columns.names": [
                    473
                ],
                "ExcelCell": [
                    482,
                    646,
                    583,
                    618,
                    523,
                    491,
                    684,
                    498,
                    658,
                    474,
                    540,
                    637,
                    575
                ],
                "self.header_style": [
                    641,
                    486,
                    583,
                    618,
                    650,
                    492,
                    524,
                    498,
                    662,
                    474,
                    540,
                    575
                ],
                "spans": [
                    480,
                    481,
                    636,
                    642,
                    488,
                    627,
                    635,
                    476
                ],
                "levels": [
                    627,
                    631,
                    632,
                    476,
                    479
                ],
                "level_codes": [
                    632,
                    627,
                    476,
                    479
                ],
                "columns.levels": [
                    477
                ],
                "columns.codes": [
                    477
                ],
                "values": [
                    640,
                    485,
                    649,
                    492,
                    496,
                    497,
                    631,
                    479
                ],
                "levels.take": [
                    631,
                    479
                ],
                "i": [
                    480,
                    481,
                    640,
                    642,
                    484,
                    485,
                    647,
                    488,
                    649,
                    681,
                    683,
                    492,
                    684,
                    496,
                    498,
                    635,
                    636,
                    638
                ],
                "join": [
                    497,
                    683
                ],
                "pprint_thing": [
                    497
                ],
                "colnames": [
                    512,
                    520,
                    522
                ],
                "colindex": [
                    522,
                    541,
                    524,
                    540
                ],
                "colname": [
                    522,
                    524
                ],
                "gen": [
                    544,
                    529,
                    531
                ],
                "self._format_header_mi": [
                    529
                ],
                "self._format_header_regular": [
                    531
                ],
                "gen2": [
                    544,
                    539,
                    533
                ],
                "self.df.index.names": [
                    600,
                    569,
                    534,
                    535
                ],
                "x": [
                    538,
                    535
                ],
                "reduce": [
                    538
                ],
                "y": [
                    538
                ],
                "itertools.chain": [
                    544,
                    687
                ],
                "itertools": [
                    544,
                    687
                ],
                "self._format_hierarchical_rows": [
                    548
                ],
                "self._format_regular_rows": [
                    550
                ],
                "index_values": [
                    578,
                    580,
                    582
                ],
                "ABCPeriodIndex": [
                    579
                ],
                "self.df.index.to_timestamp": [
                    580
                ],
                "idx": [
                    657,
                    659,
                    582,
                    583
                ],
                "idxval": [
                    582,
                    583
                ],
                "cell": [
                    589,
                    590,
                    687,
                    688,
                    689,
                    666,
                    667
                ],
                "self._generate_body": [
                    666,
                    589
                ],
                "gcolidx": [
                    643,
                    648,
                    652,
                    660,
                    597,
                    664,
                    666,
                    639
                ],
                "index_labels": [
                    600,
                    617,
                    605,
                    615
                ],
                "com.any_not_none": [
                    615
                ],
                "com": [
                    615
                ],
                "cidx": [
                    617,
                    618
                ],
                "self.df.index.format": [
                    622
                ],
                "self.df.index.levels": [
                    628
                ],
                "self.df.index.codes": [
                    628
                ],
                "levels._can_hold_na": [
                    632
                ],
                "indexcolvals": [
                    656,
                    657
                ],
                "indexcolval": [
                    657,
                    661
                ],
                "styles": [
                    673,
                    674,
                    675,
                    682,
                    683,
                    671
                ],
                "ctx": [
                    673
                ],
                "self.styler._compute": [
                    673
                ],
                "xlstyle": [
                    684,
                    683,
                    676
                ],
                "colidx": [
                    680,
                    683,
                    684,
                    679
                ],
                "series": [
                    680,
                    681
                ],
                "self.df.iloc": [
                    680
                ],
                "self._format_header": [
                    687
                ],
                "self._format_body": [
                    687
                ],
                "cell.val": [
                    688
                ],
                "self._format_value": [
                    688
                ],
                "num_rows": [
                    720,
                    722,
                    719
                ],
                "num_cols": [
                    720,
                    722,
                    719
                ],
                "self.df.shape": [
                    719
                ],
                "self.max_rows": [
                    720,
                    723
                ],
                "self.max_cols": [
                    720,
                    723
                ],
                "writer": [
                    729,
                    733,
                    726,
                    741
                ],
                "ExcelWriter": [
                    729,
                    726
                ],
                "need_save": [
                    730,
                    740,
                    727
                ],
                "stringify_path": [
                    729
                ],
                "engine": [
                    729
                ],
                "formatted_cells": [
                    732,
                    734
                ],
                "self.get_formatted_cells": [
                    732
                ],
                "writer.write_cells": [
                    733
                ],
                "sheet_name": [
                    735
                ],
                "startrow": [
                    736
                ],
                "startcol": [
                    737
                ],
                "freeze_panes": [
                    738
                ],
                "writer.save": [
                    741
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/tests/io/excel/test_writers.py",
                "test_function": "test_write_subset_columns",
                "test_function_code": "    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n\n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n\n        tm.assert_frame_equal(expected, read_frame)",
                "test_error": "AssertionError: DataFrame are different  DataFrame shape mismatch [left]:  (3, 2) [right]: (3, 3)",
                "full_test_error": "self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x113dc9d60>\npath = '/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmpvd15abrk.xlsx'\nto_excel_index = True, read_excel_index_col = 0\n\n    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n    \n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n    \n>       tm.assert_frame_equal(expected, read_frame)\nE       AssertionError: DataFrame are different\nE       \nE       DataFrame shape mismatch\nE       [left]:  (3, 2)\nE       [right]: (3, 3)\n\npandas/tests/io/excel/test_writers.py:1070: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('to_excel_index,read_excel_index_col', [(True, 0), (False, None)])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/tests/io/excel/test_writers.py",
                "test_function": "test_write_subset_columns",
                "test_function_code": "    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n\n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n\n        tm.assert_frame_equal(expected, read_frame)",
                "test_error": "AssertionError: DataFrame are different  DataFrame shape mismatch [left]:  (3, 2) [right]: (3, 3)",
                "full_test_error": "self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x1148e2250>\npath = '/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmpnmbmocon.xlsm'\nto_excel_index = True, read_excel_index_col = 0\n\n    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n    \n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n    \n>       tm.assert_frame_equal(expected, read_frame)\nE       AssertionError: DataFrame are different\nE       \nE       DataFrame shape mismatch\nE       [left]:  (3, 2)\nE       [right]: (3, 3)\n\npandas/tests/io/excel/test_writers.py:1070: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('to_excel_index,read_excel_index_col', [(True, 0), (False, None)])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/tests/io/excel/test_writers.py",
                "test_function": "test_write_subset_columns",
                "test_function_code": "    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n\n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n\n        tm.assert_frame_equal(expected, read_frame)",
                "test_error": "AssertionError: DataFrame are different  DataFrame shape mismatch [left]:  (3, 2) [right]: (3, 3)",
                "full_test_error": "self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x1149b47c0>\npath = '/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmpt7fhg7g9.xls'\nto_excel_index = True, read_excel_index_col = 0\n\n    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n    \n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n    \n>       tm.assert_frame_equal(expected, read_frame)\nE       AssertionError: DataFrame are different\nE       \nE       DataFrame shape mismatch\nE       [left]:  (3, 2)\nE       [right]: (3, 3)\n\npandas/tests/io/excel/test_writers.py:1070: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('to_excel_index,read_excel_index_col', [(True, 0), (False, None)])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/tests/io/excel/test_writers.py",
                "test_function": "test_write_subset_columns",
                "test_function_code": "    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n\n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n\n        tm.assert_frame_equal(expected, read_frame)",
                "test_error": "AssertionError: DataFrame are different  DataFrame shape mismatch [left]:  (3, 2) [right]: (3, 3)",
                "full_test_error": "self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x1149b4580>\npath = '/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmpktjb69nu.xlsx'\nto_excel_index = True, read_excel_index_col = 0\n\n    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n    \n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n    \n>       tm.assert_frame_equal(expected, read_frame)\nE       AssertionError: DataFrame are different\nE       \nE       DataFrame shape mismatch\nE       [left]:  (3, 2)\nE       [right]: (3, 3)\n\npandas/tests/io/excel/test_writers.py:1070: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('to_excel_index,read_excel_index_col', [(True, 0), (False, None)])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/tests/io/excel/test_writers.py",
                "test_function": "test_write_subset_columns",
                "test_function_code": "    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n\n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n\n        tm.assert_frame_equal(expected, read_frame)",
                "test_error": "AssertionError: DataFrame are different  DataFrame shape mismatch [left]:  (3, 2) [right]: (3, 3)",
                "full_test_error": "self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x1148321f0>\npath = '/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmpdb0apli5.xlsx'\nto_excel_index = False, read_excel_index_col = None\n\n    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n    \n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n    \n>       tm.assert_frame_equal(expected, read_frame)\nE       AssertionError: DataFrame are different\nE       \nE       DataFrame shape mismatch\nE       [left]:  (3, 2)\nE       [right]: (3, 3)\n\npandas/tests/io/excel/test_writers.py:1070: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('to_excel_index,read_excel_index_col', [(True, 0), (False, None)])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/tests/io/excel/test_writers.py",
                "test_function": "test_write_subset_columns",
                "test_function_code": "    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n\n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n\n        tm.assert_frame_equal(expected, read_frame)",
                "test_error": "AssertionError: DataFrame are different  DataFrame shape mismatch [left]:  (3, 2) [right]: (3, 3)",
                "full_test_error": "self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x114ac8490>\npath = '/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmppxnwp311.xlsm'\nto_excel_index = False, read_excel_index_col = None\n\n    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n    \n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n    \n>       tm.assert_frame_equal(expected, read_frame)\nE       AssertionError: DataFrame are different\nE       \nE       DataFrame shape mismatch\nE       [left]:  (3, 2)\nE       [right]: (3, 3)\n\npandas/tests/io/excel/test_writers.py:1070: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('to_excel_index,read_excel_index_col', [(True, 0), (False, None)])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/tests/io/excel/test_writers.py",
                "test_function": "test_write_subset_columns",
                "test_function_code": "    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n\n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n\n        tm.assert_frame_equal(expected, read_frame)",
                "test_error": "AssertionError: DataFrame are different  DataFrame shape mismatch [left]:  (3, 2) [right]: (3, 3)",
                "full_test_error": "self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x114ac8070>\npath = '/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmpesihua4u.xls'\nto_excel_index = False, read_excel_index_col = None\n\n    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n    \n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n    \n>       tm.assert_frame_equal(expected, read_frame)\nE       AssertionError: DataFrame are different\nE       \nE       DataFrame shape mismatch\nE       [left]:  (3, 2)\nE       [right]: (3, 3)\n\npandas/tests/io/excel/test_writers.py:1070: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('to_excel_index,read_excel_index_col', [(True, 0), (False, None)])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/pandas_64/pandas/tests/io/excel/test_writers.py",
                "test_function": "test_write_subset_columns",
                "test_function_code": "    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n\n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n\n        tm.assert_frame_equal(expected, read_frame)",
                "test_error": "AssertionError: DataFrame are different  DataFrame shape mismatch [left]:  (3, 2) [right]: (3, 3)",
                "full_test_error": "self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x11488f1f0>\npath = '/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/tmpqmzrucat.xlsx'\nto_excel_index = False, read_excel_index_col = None\n\n    @pytest.mark.parametrize(\n        \"to_excel_index,read_excel_index_col\",\n        [\n            (True, 0),  # Include index in write to file\n            (False, None),  # Dont include index in write to file\n        ],\n    )\n    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):\n        # GH 31677\n        write_frame = DataFrame({\"A\": [1, 1, 1], \"B\": [2, 2, 2], \"C\": [3, 3, 3]})\n        write_frame.to_excel(\n            path, \"col_subset_bug\", columns=[\"A\", \"B\"], index=to_excel_index\n        )\n    \n        expected = write_frame[[\"A\", \"B\"]]\n        read_frame = pd.read_excel(\n            path, \"col_subset_bug\", index_col=read_excel_index_col\n        )\n    \n>       tm.assert_frame_equal(expected, read_frame)\nE       AssertionError: DataFrame are different\nE       \nE       DataFrame shape mismatch\nE       [left]:  (3, 2)\nE       [right]: (3, 3)\n\npandas/tests/io/excel/test_writers.py:1070: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('to_excel_index,read_excel_index_col', [(True, 0), (False, None)])"
                ]
            }
        ]
    }
}