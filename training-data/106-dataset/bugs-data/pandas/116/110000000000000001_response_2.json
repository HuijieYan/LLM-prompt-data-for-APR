{
    "pandas": [
        {
            "bugID": 116,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 924,
            "file_name": "pandas/core/reshape/merge.py",
            "replace_code": "def _get_merge_keys(self):\n\n    left_keys = []\n    right_keys = []\n    join_names = []\n    \n    left, right = self.left, self.right\n    \n    if self.left_on and self.right_on:\n        for lk, rk in zip(self.left_on, self.right_on):\n            if lk is not None:\n                left_keys.append(left._get_label_or_level_values(lk))\n                join_names.append(lk)\n            else:\n                left_keys.append(left.index)\n                join_names.append(left.index.name)\n    \n            if rk is not None:\n                right_keys.append(right._get_label_or_level_values(rk))\n                join_names.append(rk)\n            else:\n                right_keys.append(right.index)\n                join_names.append(right.index.name)\n    elif self.left_on:\n        for k in self.left_on:\n            if k is not None:\n                left_keys.append(left._get_label_or_level_values(k))\n                join_names.append(k)\n            else:\n                left_keys.append(left.index)\n                join_names.append(left.index.name)\n            right_keys.append(self.right.index)\n    elif self.right_on:\n        for k in self.right_on:\n            left_keys.append(self.left.index)\n            if k is not None:\n                right_keys.append(right._get_label_or_level_values(k))\n                join_names.append(k)\n            else:\n                right_keys.append(right.index)\n                join_names.append(right.index.name)\n    \n    return left_keys, right_keys, join_names"
        }
    ]
}