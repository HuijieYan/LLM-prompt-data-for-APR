{
    "pandas": [
        {
            "bugID": 116,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 924,
            "file_name": "core/reshape/merge.py",
            "replace_code": "def _get_merge_keys(self):\n\n    \"\"\"\n    Note: has side effects (copy/delete key columns)\n    \n    Parameters\n    ----------\n    left\n    right\n    on\n    \n    Returns\n    -------\n    left_keys, right_keys\n    \"\"\"\n    # ... existing code ...\n    \n    # ensure merge keys have the same data type\n    if len(left_keys) > 0 and len(right_keys) > 0:\n        if left_keys[0].dtype != right_keys[0].dtype:\n            left_keys = [left_keys[0].astype(right_keys[0].dtype)]\n            # also convert the original merge keys to the same type\n            join_names[0] = join_names[0] if (join_names[0] is not None) else right_keys[0].name\n    \n    # ... existing code ...\n    \n    return left_keys, right_keys, join_names"
        }
    ]
}