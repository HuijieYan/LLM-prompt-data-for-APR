{
    "pandas": [
        {
            "bugID": 28,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 2273,
            "file_name": "core/strings.py",
            "replace_code": "def _get_series_list(self, others):\n    from pandas.core.arrays.string_ import StringDtype\n    from pandas import Index, Series\n    from pandas.core.arrays.string_ import StringDtype\n    from pandas import Index, Series\n    \n    # Check if the others parameter is a list or array of Strings\n    if isinstance(others, (list, tuple)) or (isinstance(others, np.ndarray) and issubclass(others.dtype.type, StringDtype)):\n        return [Series(others, index=self._orig.index)]\n    elif isinstance(others, pd.Index):\n        return [Series(others, index=others)]\n    elif isinstance(others, pd.DataFrame):\n        return [others[x].__finalize__(self._orig) for x in others]\n    elif isinstance(others, pd.Series):\n        return [others]\n    \n    # Deal with a 2-dimensional DataFrame\n    if isinstance(others, np.ndarray) and others.ndim == 2:\n        return [pd.DataFrame(others, index=self._orig.index).__finalize__(self._orig)]\n    \n    # Fail if the input is not a list or array of strings or a pandas structure\n    raise TypeError(\n        \"others must be Series, Index, DataFrame, np.ndarrary \"\n        \"or list-like (either containing only strings or \"\n        \"containing only objects of type Series/Index/\"\n        \"np.ndarray[1-dim])\"\n    )"
        }
    ]
}