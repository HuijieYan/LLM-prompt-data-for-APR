{
    "pandas": [
        {
            "bugID": 28,
            "bitvector": {
                "1.1.1": 0,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 0,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 0,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 0,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 2273,
            "file_name": "core/strings.py",
            "replace_code": "def _get_series_list(self, others):\n    from pandas import Series, DataFrame\n    from pandas import Series, DataFrame\n    \n    if isinstance(others, Series) or isinstance(others, DataFrame):\n        return [others]\n    elif isinstance(others, pd.Index):\n        return [Series(others._values, index=others)]\n    elif isinstance(others, np.ndarray) and others.ndim == 2:\n        return [DataFrame(others, index=idx)[x] for x in others]\n    elif isinstance(others, np.ndarray) and others.ndim == 1:\n        return [Series(others, index=idx)]\n    elif isinstance(others, list):\n        los = []\n        for x in others:\n            if isinstance(x, (Series, pd.Index)):\n                los.append(x)\n            elif isinstance(x, np.ndarray) and x.ndim == 1:\n                los.append(Series(x, index=idx))\n            elif isinstance(x, str):\n                los.append(Series(x, index=idx))\n            else:\n                raise TypeError(f\"Invalid type found in list: {type(x)}\")\n        return los\n    else:\n        raise TypeError(\n            \"others must be Series, DataFrame, Index, np.ndarray or list of valid types\"\n        )"
        }
    ]
}