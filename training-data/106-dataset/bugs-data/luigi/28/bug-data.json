{
    "luigi:28": {
        "/Volumes/SSD2T/bgp_envs/repos/luigi_28/luigi/contrib/hive.py": {
            "buggy_functions": [
                {
                    "function_name": "table_exists",
                    "function_code": "def table_exists(self, table, database='default', partition=None):\n    if partition is None:\n        stdout = run_hive_cmd('use {0}; show tables like \"{1}\";'.format(database, table))\n\n        return stdout and table in stdout\n    else:\n        stdout = run_hive_cmd(\"\"\"use %s; show partitions %s partition\n                            (%s)\"\"\" % (database, table, self.partition_spec(partition)))\n\n        if stdout:\n            return True\n        else:\n            return False\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 137,
                    "end_line": 149,
                    "variables": {
                        "partition": [
                            144,
                            138
                        ],
                        "stdout": [
                            146,
                            139,
                            141,
                            143
                        ],
                        "run_hive_cmd": [
                            139,
                            143
                        ],
                        "format": [
                            139
                        ],
                        "database": [
                            144,
                            139
                        ],
                        "table": [
                            144,
                            139,
                            141
                        ],
                        "self.partition_spec": [
                            144
                        ],
                        "self": [
                            144
                        ]
                    },
                    "filtered_variables": {
                        "partition": [
                            144,
                            138
                        ],
                        "stdout": [
                            146,
                            139,
                            141,
                            143
                        ],
                        "run_hive_cmd": [
                            139,
                            143
                        ],
                        "database": [
                            144,
                            139
                        ],
                        "table": [
                            144,
                            139,
                            141
                        ],
                        "self.partition_spec": [
                            144
                        ],
                        "self": [
                            144
                        ]
                    },
                    "diff_line_number": 141,
                    "class_data": {
                        "signature": "class HiveCommandClient(HiveClient)",
                        "docstring": "Uses `hive` invocations to find information.",
                        "constructor_docstring": null,
                        "functions": [
                            "def table_location(self, table, database='default', partition=None):\n    cmd = 'use {0}; describe formatted {1}'.format(database, table)\n    if partition is not None:\n        cmd += ' PARTITION ({0})'.format(self.partition_spec(partition))\n    stdout = run_hive_cmd(cmd)\n    for line in stdout.split('\\n'):\n        if 'Location:' in line:\n            return line.split('\\t')[1]",
                            "def table_exists(self, table, database='default', partition=None):\n    if partition is None:\n        stdout = run_hive_cmd('use {0}; show tables like \"{1}\";'.format(database, table))\n        return stdout and table in stdout\n    else:\n        stdout = run_hive_cmd('use %s; show partitions %s partition\\n                                (%s)' % (database, table, self.partition_spec(partition)))\n        if stdout:\n            return True\n        else:\n            return False",
                            "def table_schema(self, table, database='default'):\n    describe = run_hive_cmd('use {0}; describe {1}'.format(database, table))\n    if not describe or 'does not exist' in describe:\n        return None\n    return [tuple([x.strip() for x in line.strip().split('\\t')]) for line in describe.strip().split('\\n')]",
                            "def partition_spec(self, partition):\n    \"\"\"\n    Turns a dict into the a Hive partition specification string.\n    \"\"\"\n    return ','.join([\"{0}='{1}'\".format(k, v) for k, v in sorted(six.iteritems(partition), key=operator.itemgetter(0))])"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "table_location(self, table, database='default', partition=None)",
                            "table_exists(self, table, database='default', partition=None)",
                            "table_schema(self, table, database='default')",
                            "partition_spec(self, partition)"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x106da5340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x106da5340>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x106da5340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x106da5340>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x106da5340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x106da5340>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK\\nmytable'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x106da5340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x106da5340>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'MyTable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x106da5340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x106da5340>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK\\nmytable'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'MyTable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x106da5340>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x106da5340>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK\\nmytable'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'MyTable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK\\nmytable'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'MyTable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x1065a3040>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK\\nmytable'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'MyTable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19d70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK\\nmytable'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'MyTable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19d70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.HiveCommandClient object at 0x10f4ff9d0>",
                                    "variable_type": "HiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK'",
                                    "variable_type": "str",
                                    "variable_shape": "2"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK\\nmytable'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'mytable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19bf0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'MyTable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19d70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            },
                            {
                                "partition": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "stdout": {
                                    "variable_value": "'OK\\nmytable'",
                                    "variable_type": "str",
                                    "variable_shape": "10"
                                },
                                "run_hive_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "database": {
                                    "variable_value": "'default'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table": {
                                    "variable_value": "'MyTable'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "table.lower": {
                                    "variable_value": "<built-in method lower of str object at 0x10ed19d70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "self.partition_spec": {
                                    "variable_value": "<bound method HiveCommandClient.partition_spec of <luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<luigi.contrib.hive.ApacheHiveCommandClient object at 0x10f52df10>",
                                    "variable_type": "ApacheHiveCommandClient",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def load_hive_cmd():\n    return luigi.configuration.get_config().get('hive', 'command', 'hive')",
                "def get_hive_syntax():\n    return luigi.configuration.get_config().get('hive', 'release', 'cdh4')",
                "def run_hive(args, check_return_code=True):\n    \"\"\"\n    Runs the `hive` from the command line, passing in the given args, and\n    returning stdout.\n\n    With the apache release of Hive, so of the table existence checks\n    (which are done using DESCRIBE do not exit with a return code of 0\n    so we need an option to ignore the return code and just return stdout for parsing\n    \"\"\"\n    cmd = [load_hive_cmd()] + args\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = p.communicate()\n    if check_return_code and p.returncode != 0:\n        raise HiveCommandError(\"Hive command: {0} failed with error code: {1}\".format(\" \".join(cmd), p.returncode),\n                               stdout, stderr)\n    return stdout",
                "def run_hive_cmd(hivecmd, check_return_code=True):\n    \"\"\"\n    Runs the given hive query and returns stdout.\n    \"\"\"\n    return run_hive(['-e', hivecmd], check_return_code)",
                "def run_hive_script(script):\n    \"\"\"\n    Runs the contents of the given script in hive and returns stdout.\n    \"\"\"\n    if not os.path.isfile(script):\n        raise RuntimeError(\"Hive script: {0} does not exist.\".format(script))\n    return run_hive(['-f', script])",
                "def get_default_client():\n    if get_hive_syntax() == \"apache\":\n        return ApacheHiveCommandClient()\n    else:\n        return HiveCommandClient()",
                "def __init__(self, message, out=None, err=None):\n    super(HiveCommandError, self).__init__(message, out, err)\n    self.message = message\n    self.out = out\n    self.err = err",
                "@abc.abstractmethod\ndef table_location(self, table, database='default', partition=None):\n    \"\"\"\n    Returns location of db.table (or db.table.partition). partition is a dict of partition key to\n    value.\n    \"\"\"\n    pass",
                "@abc.abstractmethod\ndef table_schema(self, table, database='default'):\n    \"\"\"\n    Returns list of [(name, type)] for each column in database.table.\n    \"\"\"\n    pass",
                "@abc.abstractmethod\ndef table_exists(self, table, database='default', partition=None):\n    \"\"\"\n    Returns true if db.table (or db.table.partition) exists. partition is a dict of partition key to\n    value.\n    \"\"\"\n    pass",
                "@abc.abstractmethod\ndef partition_spec(self, partition):\n    \"\"\" Turn a dict into a string partition specification \"\"\"\n    pass",
                "def table_location(self, table, database='default', partition=None):\n    cmd = \"use {0}; describe formatted {1}\".format(database, table)\n    if partition is not None:\n        cmd += \" PARTITION ({0})\".format(self.partition_spec(partition))\n\n    stdout = run_hive_cmd(cmd)\n\n    for line in stdout.split(\"\\n\"):\n        if \"Location:\" in line:\n            return line.split(\"\\t\")[1]",
                "def table_exists(self, table, database='default', partition=None):\n    if partition is None:\n        stdout = run_hive_cmd('use {0}; show tables like \"{1}\";'.format(database, table))\n\n        return stdout and table in stdout\n    else:\n        stdout = run_hive_cmd(\"\"\"use %s; show partitions %s partition\n                            (%s)\"\"\" % (database, table, self.partition_spec(partition)))\n\n        if stdout:\n            return True\n        else:\n            return False",
                "def table_schema(self, table, database='default'):\n    describe = run_hive_cmd(\"use {0}; describe {1}\".format(database, table))\n    if not describe or \"does not exist\" in describe:\n        return None\n    return [tuple([x.strip() for x in line.strip().split(\"\\t\")]) for line in describe.strip().split(\"\\n\")]",
                "def partition_spec(self, partition):\n    \"\"\"\n    Turns a dict into the a Hive partition specification string.\n    \"\"\"\n    return ','.join([\"{0}='{1}'\".format(k, v) for (k, v) in\n                     sorted(six.iteritems(partition), key=operator.itemgetter(0))])",
                "def table_schema(self, table, database='default'):\n    describe = run_hive_cmd(\"use {0}; describe {1}\".format(database, table), False)\n    if not describe or \"Table not found\" in describe:\n        return None\n    return [tuple([x.strip() for x in line.strip().split(\"\\t\")]) for line in describe.strip().split(\"\\n\")]",
                "def table_location(self, table, database='default', partition=None):\n    with HiveThriftContext() as client:\n        if partition is not None:\n            partition_str = self.partition_spec(partition)\n            thrift_table = client.get_partition_by_name(database, table, partition_str)\n        else:\n            thrift_table = client.get_table(database, table)\n        return thrift_table.sd.location",
                "def table_exists(self, table, database='default', partition=None):\n    with HiveThriftContext() as client:\n        if partition is None:\n            return table in client.get_all_tables(database)\n        else:\n            return partition in self._existing_partitions(table, database, client)",
                "def _existing_partitions(self, table, database, client):\n    def _parse_partition_string(partition_string):\n        partition_def = {}\n        for part in partition_string.split(\"/\"):\n            name, value = part.split(\"=\")\n            partition_def[name] = value\n        return partition_def\n\n    # -1 is max_parts, the # of partition names to return (-1 = unlimited)\n    partition_strings = client.get_partition_names(database, table, -1)\n    return [_parse_partition_string(existing_partition) for existing_partition in partition_strings]",
                "def table_schema(self, table, database='default'):\n    with HiveThriftContext() as client:\n        return [(field_schema.name, field_schema.type) for field_schema in client.get_schema(database, table)]",
                "def partition_spec(self, partition):\n    return \"/\".join(\"%s=%s\" % (k, v) for (k, v) in sorted(six.iteritems(partition), key=operator.itemgetter(0)))",
                "def __enter__(self):\n    try:\n        from thrift import Thrift\n        from thrift.transport import TSocket\n        from thrift.transport import TTransport\n        from thrift.protocol import TBinaryProtocol\n        # Note that this will only work with a CDH release.\n        # This uses the thrift bindings generated by the ThriftHiveMetastore service in Beeswax.\n        # If using the Apache release of Hive this import will fail.\n        from hive_metastore import ThriftHiveMetastore\n        config = luigi.configuration.get_config()\n        host = config.get('hive', 'metastore_host')\n        port = config.getint('hive', 'metastore_port')\n        transport = TSocket.TSocket(host, port)\n        transport = TTransport.TBufferedTransport(transport)\n        protocol = TBinaryProtocol.TBinaryProtocol(transport)\n        transport.open()\n        self.transport = transport\n        return ThriftHiveMetastore.Client(protocol)\n    except ImportError as e:\n        raise Exception('Could not import Hive thrift library:' + str(e))",
                "def __exit__(self, exc_type, exc_val, exc_tb):\n    self.transport.close()",
                "@abc.abstractmethod\ndef query(self):\n    \"\"\" Text of query to run in hive \"\"\"\n    raise RuntimeError(\"Must implement query!\")",
                "def hiverc(self):\n    \"\"\"\n    Location of an rc file to run before the query\n    if hiverc-location key is specified in client.cfg, will default to the value there\n    otherwise returns None.\n\n    Returning a list of rc files will load all of them in order.\n    \"\"\"\n    return luigi.configuration.get_config().get('hive', 'hiverc-location', default=None)",
                "def hiveconfs(self):\n    \"\"\"\n    Returns an dict of key=value settings to be passed along\n    to the hive command line via --hiveconf. By default, sets\n    mapred.job.name to task_id and if not None, sets:\n\n    * mapred.reduce.tasks (n_reduce_tasks)\n    * mapred.fairscheduler.pool (pool) or mapred.job.queue.name (pool)\n    * hive.exec.reducers.bytes.per.reducer (bytes_per_reducer)\n    * hive.exec.reducers.max (reducers_max)\n    \"\"\"\n    jcs = {}\n    jcs['mapred.job.name'] = self.task_id\n    if self.n_reduce_tasks is not None:\n        jcs['mapred.reduce.tasks'] = self.n_reduce_tasks\n    if self.pool is not None:\n        # Supporting two schedulers: fair (default) and capacity using the same option\n        scheduler_type = luigi.configuration.get_config().get('hadoop', 'scheduler', 'fair')\n        if scheduler_type == 'fair':\n            jcs['mapred.fairscheduler.pool'] = self.pool\n        elif scheduler_type == 'capacity':\n            jcs['mapred.job.queue.name'] = self.pool\n    if self.bytes_per_reducer is not None:\n        jcs['hive.exec.reducers.bytes.per.reducer'] = self.bytes_per_reducer\n    if self.reducers_max is not None:\n        jcs['hive.exec.reducers.max'] = self.reducers_max\n    return jcs",
                "def job_runner(self):\n    return HiveQueryRunner()",
                "def prepare_outputs(self, job):\n    \"\"\"\n    Called before job is started.\n\n    If output is a `FileSystemTarget`, create parent directories so the hive command won't fail\n    \"\"\"\n    outputs = flatten(job.output())\n    for o in outputs:\n        if isinstance(o, FileSystemTarget):\n            parent_dir = os.path.dirname(o.path)\n            if parent_dir and not o.fs.exists(parent_dir):\n                logger.info(\"Creating parent directory %r\", parent_dir)\n                try:\n                    # there is a possible race condition\n                    # which needs to be handled here\n                    o.fs.mkdir(parent_dir)\n                except FileAlreadyExists:\n                    pass",
                "def run_job(self, job):\n    self.prepare_outputs(job)\n    with tempfile.NamedTemporaryFile() as f:\n        query = job.query()\n        if isinstance(query, unicode):\n            query = query.encode('utf8')\n        f.write(query)\n        f.flush()\n        arglist = [load_hive_cmd(), '-f', f.name]\n        hiverc = job.hiverc()\n        if hiverc:\n            if isinstance(hiverc, str):\n                hiverc = [hiverc]\n            for rcfile in hiverc:\n                arglist += ['-i', rcfile]\n        if job.hiveconfs():\n            for k, v in six.iteritems(job.hiveconfs()):\n                arglist += ['--hiveconf', '{0}={1}'.format(k, v)]\n\n        logger.info(arglist)\n        return luigi.hadoop.run_and_track_hadoop_job(arglist)",
                "def __init__(self, table, database='default', client=None):\n    self.database = database\n    self.table = table\n    self.hive_cmd = load_hive_cmd()\n    if client is None:\n        client = get_default_client()\n    self.client = client",
                "def exists(self):\n    logger.debug(\"Checking Hive table '%s.%s' exists\", self.database, self.table)\n    return self.client.table_exists(self.table, self.database)",
                "@property\ndef path(self):\n    \"\"\"\n    Returns the path to this table in HDFS.\n    \"\"\"\n    location = self.client.table_location(self.table, self.database)\n    if not location:\n        raise Exception(\"Couldn't find location for table: {0}\".format(str(self)))\n    return location",
                "def open(self, mode):\n    return NotImplementedError(\"open() is not supported for HiveTableTarget\")",
                "def __init__(self, table, partition, database='default', fail_missing_table=True, client=None):\n    self.database = database\n    self.table = table\n    self.partition = partition\n    if client is None:\n        client = get_default_client()\n    self.client = client\n\n    self.fail_missing_table = fail_missing_table",
                "def exists(self):\n    try:\n        logger.debug(\"Checking Hive table '{d}.{t}' for partition {p}\".format(d=self.database, t=self.table, p=str(self.partition)))\n        return self.client.table_exists(self.table, self.database, self.partition)\n    except HiveCommandError:\n        if self.fail_missing_table:\n            raise\n        else:\n            if self.client.table_exists(self.table, self.database):\n                # a real error occurred\n                raise\n            else:\n                # oh the table just doesn't exist\n                return False",
                "@property\ndef path(self):\n    \"\"\"\n    Returns the path for this HiveTablePartitionTarget's data.\n    \"\"\"\n    location = self.client.table_location(self.table, self.database, self.partition)\n    if not location:\n        raise Exception(\"Couldn't find location for table: {0}\".format(str(self)))\n    return location",
                "def open(self, mode):\n    return NotImplementedError(\"open() is not supported for HivePartitionTarget\")",
                "def output(self):\n    if self.partition is not None:\n        assert self.partition, \"partition required\"\n        return HivePartitionTarget(table=self.table,\n                                   partition=self.partition,\n                                   database=self.database)\n    else:\n        return HiveTableTarget(self.table, self.database)",
                "def _parse_partition_string(partition_string):\n    partition_def = {}\n    for part in partition_string.split(\"/\"):\n        name, value = part.split(\"=\")\n        partition_def[name] = value\n    return partition_def"
            ],
            "inscope_function_signatures": [
                "load_hive_cmd()",
                "get_hive_syntax()",
                "run_hive(args, check_return_code=True)",
                "run_hive_cmd(hivecmd, check_return_code=True)",
                "run_hive_script(script)",
                "get_default_client()",
                "__init__(self, message, out=None, err=None)",
                "table_location(self, table, database='default', partition=None)",
                "table_schema(self, table, database='default')",
                "table_exists(self, table, database='default', partition=None)",
                "partition_spec(self, partition)",
                "table_location(self, table, database='default', partition=None)",
                "table_exists(self, table, database='default', partition=None)",
                "table_schema(self, table, database='default')",
                "partition_spec(self, partition)",
                "table_schema(self, table, database='default')",
                "table_location(self, table, database='default', partition=None)",
                "table_exists(self, table, database='default', partition=None)",
                "_existing_partitions(self, table, database, client)",
                "table_schema(self, table, database='default')",
                "partition_spec(self, partition)",
                "__enter__(self)",
                "__exit__(self, exc_type, exc_val, exc_tb)",
                "query(self)",
                "hiverc(self)",
                "hiveconfs(self)",
                "job_runner(self)",
                "prepare_outputs(self, job)",
                "run_job(self, job)",
                "__init__(self, table, database='default', client=None)",
                "exists(self)",
                "path(self)",
                "open(self, mode)",
                "__init__(self, table, partition, database='default', fail_missing_table=True, client=None)",
                "exists(self)",
                "path(self)",
                "open(self, mode)",
                "output(self)",
                "_parse_partition_string(partition_string)"
            ],
            "variables_in_file": {
                "six.PY3": [
                    32
                ],
                "six": [
                    32,
                    162,
                    354,
                    213,
                    89
                ],
                "unicode": [
                    33,
                    342
                ],
                "str": [
                    33,
                    385,
                    429,
                    241,
                    409,
                    349
                ],
                "logger": [
                    35,
                    357,
                    330,
                    375,
                    409
                ],
                "logging.getLogger": [
                    35
                ],
                "logging": [
                    35
                ],
                "RuntimeError": [
                    85,
                    38,
                    270
                ],
                "__init__": [
                    41
                ],
                "super": [
                    41
                ],
                "HiveCommandError": [
                    41,
                    411,
                    68
                ],
                "self": [
                    129,
                    385,
                    398,
                    399,
                    144,
                    400,
                    403,
                    405,
                    409,
                    410,
                    412,
                    415,
                    294,
                    295,
                    296,
                    41,
                    42,
                    43,
                    44,
                    297,
                    301,
                    303,
                    304,
                    305,
                    306,
                    307,
                    427,
                    429,
                    183,
                    447,
                    448,
                    449,
                    194,
                    450,
                    451,
                    453,
                    339,
                    238,
                    367,
                    368,
                    369,
                    244,
                    372,
                    375,
                    376,
                    383
                ],
                "message": [
                    41,
                    42
                ],
                "out": [
                    41,
                    43
                ],
                "err": [
                    41,
                    44
                ],
                "self.message": [
                    42
                ],
                "self.out": [
                    43
                ],
                "self.err": [
                    44
                ],
                "get": [
                    48,
                    280,
                    299,
                    52
                ],
                "luigi.configuration.get_config": [
                    231,
                    299,
                    48,
                    52,
                    280
                ],
                "luigi.configuration": [
                    231,
                    299,
                    48,
                    52,
                    280
                ],
                "luigi": [
                    257,
                    358,
                    231,
                    392,
                    361,
                    299,
                    48,
                    442,
                    52,
                    436,
                    280,
                    441,
                    314,
                    444
                ],
                "cmd": [
                    64,
                    65,
                    129,
                    131,
                    68,
                    127
                ],
                "load_hive_cmd": [
                    64,
                    369,
                    346
                ],
                "args": [
                    64
                ],
                "p": [
                    65,
                    66,
                    67,
                    68
                ],
                "subprocess.Popen": [
                    65
                ],
                "subprocess": [
                    65
                ],
                "subprocess.PIPE": [
                    65
                ],
                "stdout": [
                    66,
                    131,
                    69,
                    70,
                    133,
                    139,
                    141,
                    143,
                    146
                ],
                "stderr": [
                    66,
                    69
                ],
                "p.communicate": [
                    66
                ],
                "check_return_code": [
                    67,
                    77
                ],
                "p.returncode": [
                    67,
                    68
                ],
                "format": [
                    129,
                    161,
                    355,
                    68,
                    385,
                    139,
                    172,
                    429,
                    85,
                    152,
                    409,
                    127
                ],
                "join": [
                    161,
                    68,
                    213
                ],
                "run_hive": [
                    77,
                    86
                ],
                "hivecmd": [
                    77
                ],
                "os.path.isfile": [
                    84
                ],
                "os.path": [
                    328,
                    84
                ],
                "os": [
                    328,
                    84
                ],
                "script": [
                    84,
                    85,
                    86
                ],
                "object": [
                    216,
                    90
                ],
                "abc.abstractmethod": [
                    100,
                    107,
                    267,
                    115,
                    92
                ],
                "abc": [
                    100,
                    107,
                    267,
                    115,
                    89,
                    92
                ],
                "six.add_metaclass": [
                    89
                ],
                "abc.ABCMeta": [
                    89
                ],
                "HiveClient": [
                    121,
                    178
                ],
                "database": [
                    192,
                    194,
                    139,
                    172,
                    205,
                    398,
                    367,
                    144,
                    210,
                    152,
                    441,
                    186,
                    184,
                    127
                ],
                "table": [
                    192,
                    194,
                    139,
                    172,
                    141,
                    205,
                    399,
                    144,
                    368,
                    210,
                    442,
                    152,
                    186,
                    184,
                    127
                ],
                "partition": [
                    128,
                    129,
                    162,
                    194,
                    138,
                    144,
                    400,
                    213,
                    182,
                    183,
                    444,
                    191
                ],
                "self.partition_spec": [
                    144,
                    129,
                    183
                ],
                "run_hive_cmd": [
                    131,
                    139,
                    172,
                    143,
                    152
                ],
                "line": [
                    133,
                    134,
                    135,
                    175,
                    155
                ],
                "stdout.split": [
                    133
                ],
                "line.split": [
                    135
                ],
                "describe": [
                    172,
                    173,
                    175,
                    152,
                    153,
                    155
                ],
                "tuple": [
                    155,
                    175
                ],
                "x.strip": [
                    155,
                    175
                ],
                "x": [
                    155,
                    175
                ],
                "split": [
                    155,
                    175
                ],
                "line.strip": [
                    155,
                    175
                ],
                "describe.strip": [
                    155,
                    175
                ],
                "k": [
                    161,
                    354,
                    355,
                    213
                ],
                "v": [
                    161,
                    354,
                    355,
                    213
                ],
                "sorted": [
                    162,
                    213
                ],
                "six.iteritems": [
                    162,
                    213,
                    354
                ],
                "operator.itemgetter": [
                    162,
                    213
                ],
                "operator": [
                    162,
                    213
                ],
                "HiveCommandClient": [
                    251,
                    165
                ],
                "HiveThriftContext": [
                    209,
                    181,
                    190
                ],
                "client": [
                    192,
                    194,
                    205,
                    209,
                    210,
                    370,
                    371,
                    181,
                    372,
                    254,
                    184,
                    401,
                    186,
                    402,
                    403,
                    190
                ],
                "partition_str": [
                    184,
                    183
                ],
                "thrift_table": [
                    184,
                    186,
                    187
                ],
                "client.get_partition_by_name": [
                    184
                ],
                "client.get_table": [
                    186
                ],
                "thrift_table.sd.location": [
                    187
                ],
                "thrift_table.sd": [
                    187
                ],
                "client.get_all_tables": [
                    192
                ],
                "self._existing_partitions": [
                    194
                ],
                "partition_def": [
                    201,
                    202,
                    198
                ],
                "part": [
                    200,
                    199
                ],
                "partition_string.split": [
                    199
                ],
                "partition_string": [
                    199
                ],
                "name": [
                    200,
                    201
                ],
                "value": [
                    200,
                    201
                ],
                "part.split": [
                    200
                ],
                "partition_strings": [
                    205,
                    206
                ],
                "client.get_partition_names": [
                    205
                ],
                "_parse_partition_string": [
                    206
                ],
                "existing_partition": [
                    206
                ],
                "field_schema.name": [
                    210
                ],
                "field_schema": [
                    210
                ],
                "field_schema.type": [
                    210
                ],
                "client.get_schema": [
                    210
                ],
                "config": [
                    232,
                    233,
                    231
                ],
                "host": [
                    232,
                    234
                ],
                "config.get": [
                    232
                ],
                "port": [
                    233,
                    234
                ],
                "config.getint": [
                    233
                ],
                "transport": [
                    234,
                    235,
                    236,
                    237,
                    238
                ],
                "TSocket.TSocket": [
                    234
                ],
                "TSocket": [
                    234
                ],
                "TTransport.TBufferedTransport": [
                    235
                ],
                "TTransport": [
                    235
                ],
                "protocol": [
                    236,
                    239
                ],
                "TBinaryProtocol.TBinaryProtocol": [
                    236
                ],
                "TBinaryProtocol": [
                    236
                ],
                "transport.open": [
                    237
                ],
                "self.transport": [
                    244,
                    238
                ],
                "ThriftHiveMetastore.Client": [
                    239
                ],
                "ThriftHiveMetastore": [
                    239
                ],
                "ImportError": [
                    240
                ],
                "Exception": [
                    241,
                    385,
                    429
                ],
                "e": [
                    241
                ],
                "self.transport.close": [
                    244
                ],
                "get_hive_syntax": [
                    248
                ],
                "ApacheHiveCommandClient": [
                    249
                ],
                "get_default_client": [
                    402,
                    371,
                    254
                ],
                "luigi.hadoop.BaseHadoopJobTask": [
                    257
                ],
                "luigi.hadoop": [
                    257,
                    314,
                    358
                ],
                "n_reduce_tasks": [
                    263
                ],
                "bytes_per_reducer": [
                    264
                ],
                "reducers_max": [
                    265
                ],
                "jcs": [
                    293,
                    294,
                    296,
                    301,
                    303,
                    305,
                    307,
                    308
                ],
                "self.task_id": [
                    294
                ],
                "self.n_reduce_tasks": [
                    296,
                    295
                ],
                "self.pool": [
                    297,
                    301,
                    303
                ],
                "scheduler_type": [
                    299,
                    300,
                    302
                ],
                "self.bytes_per_reducer": [
                    304,
                    305
                ],
                "self.reducers_max": [
                    306,
                    307
                ],
                "HiveQueryRunner": [
                    311
                ],
                "luigi.hadoop.JobRunner": [
                    314
                ],
                "outputs": [
                    325,
                    326
                ],
                "flatten": [
                    325
                ],
                "job.output": [
                    325
                ],
                "job": [
                    353,
                    354,
                    325,
                    339,
                    341,
                    347
                ],
                "o": [
                    326,
                    327,
                    328,
                    329,
                    334
                ],
                "isinstance": [
                    349,
                    342,
                    327
                ],
                "FileSystemTarget": [
                    327
                ],
                "parent_dir": [
                    328,
                    329,
                    330,
                    334
                ],
                "os.path.dirname": [
                    328
                ],
                "o.path": [
                    328
                ],
                "o.fs.exists": [
                    329
                ],
                "o.fs": [
                    329,
                    334
                ],
                "logger.info": [
                    330,
                    357
                ],
                "o.fs.mkdir": [
                    334
                ],
                "FileAlreadyExists": [
                    335
                ],
                "self.prepare_outputs": [
                    339
                ],
                "tempfile.NamedTemporaryFile": [
                    340
                ],
                "tempfile": [
                    340
                ],
                "f": [
                    344,
                    345,
                    346,
                    340
                ],
                "query": [
                    344,
                    341,
                    342,
                    343
                ],
                "job.query": [
                    341
                ],
                "query.encode": [
                    343
                ],
                "f.write": [
                    344
                ],
                "f.flush": [
                    345
                ],
                "arglist": [
                    352,
                    355,
                    357,
                    358,
                    346
                ],
                "f.name": [
                    346
                ],
                "hiverc": [
                    347,
                    348,
                    349,
                    350,
                    351
                ],
                "job.hiverc": [
                    347
                ],
                "rcfile": [
                    352,
                    351
                ],
                "job.hiveconfs": [
                    353,
                    354
                ],
                "luigi.hadoop.run_and_track_hadoop_job": [
                    358
                ],
                "luigi.Target": [
                    392,
                    361
                ],
                "self.database": [
                    451,
                    453,
                    415,
                    427,
                    398,
                    367,
                    375,
                    376,
                    409,
                    410,
                    383
                ],
                "self.table": [
                    449,
                    453,
                    415,
                    427,
                    399,
                    368,
                    375,
                    376,
                    409,
                    410,
                    383
                ],
                "self.hive_cmd": [
                    369
                ],
                "self.client": [
                    415,
                    427,
                    403,
                    372,
                    376,
                    410,
                    383
                ],
                "logger.debug": [
                    409,
                    375
                ],
                "self.client.table_exists": [
                    376,
                    410,
                    415
                ],
                "location": [
                    384,
                    386,
                    427,
                    428,
                    430,
                    383
                ],
                "self.client.table_location": [
                    427,
                    383
                ],
                "property": [
                    378,
                    422
                ],
                "NotImplementedError": [
                    433,
                    389
                ],
                "self.partition": [
                    448,
                    450,
                    427,
                    400,
                    409,
                    410,
                    447
                ],
                "self.fail_missing_table": [
                    412,
                    405
                ],
                "fail_missing_table": [
                    405
                ],
                "luigi.ExternalTask": [
                    436
                ],
                "luigi.Parameter": [
                    441,
                    442,
                    444
                ],
                "HivePartitionTarget": [
                    449
                ],
                "HiveTableTarget": [
                    453
                ]
            },
            "filtered_variables_in_file": {
                "six.PY3": [
                    32
                ],
                "six": [
                    32,
                    162,
                    354,
                    213,
                    89
                ],
                "unicode": [
                    33,
                    342
                ],
                "logger": [
                    35,
                    357,
                    330,
                    375,
                    409
                ],
                "logging.getLogger": [
                    35
                ],
                "logging": [
                    35
                ],
                "__init__": [
                    41
                ],
                "HiveCommandError": [
                    41,
                    411,
                    68
                ],
                "self": [
                    129,
                    385,
                    398,
                    399,
                    144,
                    400,
                    403,
                    405,
                    409,
                    410,
                    412,
                    415,
                    294,
                    295,
                    296,
                    41,
                    42,
                    43,
                    44,
                    297,
                    301,
                    303,
                    304,
                    305,
                    306,
                    307,
                    427,
                    429,
                    183,
                    447,
                    448,
                    449,
                    194,
                    450,
                    451,
                    453,
                    339,
                    238,
                    367,
                    368,
                    369,
                    244,
                    372,
                    375,
                    376,
                    383
                ],
                "message": [
                    41,
                    42
                ],
                "out": [
                    41,
                    43
                ],
                "err": [
                    41,
                    44
                ],
                "self.message": [
                    42
                ],
                "self.out": [
                    43
                ],
                "self.err": [
                    44
                ],
                "get": [
                    48,
                    280,
                    299,
                    52
                ],
                "luigi.configuration.get_config": [
                    231,
                    299,
                    48,
                    52,
                    280
                ],
                "luigi.configuration": [
                    231,
                    299,
                    48,
                    52,
                    280
                ],
                "luigi": [
                    257,
                    358,
                    231,
                    392,
                    361,
                    299,
                    48,
                    442,
                    52,
                    436,
                    280,
                    441,
                    314,
                    444
                ],
                "cmd": [
                    64,
                    65,
                    129,
                    131,
                    68,
                    127
                ],
                "load_hive_cmd": [
                    64,
                    369,
                    346
                ],
                "args": [
                    64
                ],
                "p": [
                    65,
                    66,
                    67,
                    68
                ],
                "subprocess.Popen": [
                    65
                ],
                "subprocess": [
                    65
                ],
                "subprocess.PIPE": [
                    65
                ],
                "stdout": [
                    66,
                    131,
                    69,
                    70,
                    133,
                    139,
                    141,
                    143,
                    146
                ],
                "stderr": [
                    66,
                    69
                ],
                "p.communicate": [
                    66
                ],
                "check_return_code": [
                    67,
                    77
                ],
                "p.returncode": [
                    67,
                    68
                ],
                "join": [
                    161,
                    68,
                    213
                ],
                "run_hive": [
                    77,
                    86
                ],
                "hivecmd": [
                    77
                ],
                "os.path.isfile": [
                    84
                ],
                "os.path": [
                    328,
                    84
                ],
                "os": [
                    328,
                    84
                ],
                "script": [
                    84,
                    85,
                    86
                ],
                "abc.abstractmethod": [
                    100,
                    107,
                    267,
                    115,
                    92
                ],
                "abc": [
                    100,
                    107,
                    267,
                    115,
                    89,
                    92
                ],
                "six.add_metaclass": [
                    89
                ],
                "abc.ABCMeta": [
                    89
                ],
                "HiveClient": [
                    121,
                    178
                ],
                "database": [
                    192,
                    194,
                    139,
                    172,
                    205,
                    398,
                    367,
                    144,
                    210,
                    152,
                    441,
                    186,
                    184,
                    127
                ],
                "table": [
                    192,
                    194,
                    139,
                    172,
                    141,
                    205,
                    399,
                    144,
                    368,
                    210,
                    442,
                    152,
                    186,
                    184,
                    127
                ],
                "partition": [
                    128,
                    129,
                    162,
                    194,
                    138,
                    144,
                    400,
                    213,
                    182,
                    183,
                    444,
                    191
                ],
                "self.partition_spec": [
                    144,
                    129,
                    183
                ],
                "run_hive_cmd": [
                    131,
                    139,
                    172,
                    143,
                    152
                ],
                "line": [
                    133,
                    134,
                    135,
                    175,
                    155
                ],
                "stdout.split": [
                    133
                ],
                "line.split": [
                    135
                ],
                "describe": [
                    172,
                    173,
                    175,
                    152,
                    153,
                    155
                ],
                "x.strip": [
                    155,
                    175
                ],
                "x": [
                    155,
                    175
                ],
                "split": [
                    155,
                    175
                ],
                "line.strip": [
                    155,
                    175
                ],
                "describe.strip": [
                    155,
                    175
                ],
                "k": [
                    161,
                    354,
                    355,
                    213
                ],
                "v": [
                    161,
                    354,
                    355,
                    213
                ],
                "six.iteritems": [
                    162,
                    213,
                    354
                ],
                "operator.itemgetter": [
                    162,
                    213
                ],
                "operator": [
                    162,
                    213
                ],
                "HiveCommandClient": [
                    251,
                    165
                ],
                "HiveThriftContext": [
                    209,
                    181,
                    190
                ],
                "client": [
                    192,
                    194,
                    205,
                    209,
                    210,
                    370,
                    371,
                    181,
                    372,
                    254,
                    184,
                    401,
                    186,
                    402,
                    403,
                    190
                ],
                "partition_str": [
                    184,
                    183
                ],
                "thrift_table": [
                    184,
                    186,
                    187
                ],
                "client.get_partition_by_name": [
                    184
                ],
                "client.get_table": [
                    186
                ],
                "thrift_table.sd.location": [
                    187
                ],
                "thrift_table.sd": [
                    187
                ],
                "client.get_all_tables": [
                    192
                ],
                "self._existing_partitions": [
                    194
                ],
                "partition_def": [
                    201,
                    202,
                    198
                ],
                "part": [
                    200,
                    199
                ],
                "partition_string.split": [
                    199
                ],
                "partition_string": [
                    199
                ],
                "name": [
                    200,
                    201
                ],
                "value": [
                    200,
                    201
                ],
                "part.split": [
                    200
                ],
                "partition_strings": [
                    205,
                    206
                ],
                "client.get_partition_names": [
                    205
                ],
                "_parse_partition_string": [
                    206
                ],
                "existing_partition": [
                    206
                ],
                "field_schema.name": [
                    210
                ],
                "field_schema": [
                    210
                ],
                "field_schema.type": [
                    210
                ],
                "client.get_schema": [
                    210
                ],
                "config": [
                    232,
                    233,
                    231
                ],
                "host": [
                    232,
                    234
                ],
                "config.get": [
                    232
                ],
                "port": [
                    233,
                    234
                ],
                "config.getint": [
                    233
                ],
                "transport": [
                    234,
                    235,
                    236,
                    237,
                    238
                ],
                "TSocket.TSocket": [
                    234
                ],
                "TSocket": [
                    234
                ],
                "TTransport.TBufferedTransport": [
                    235
                ],
                "TTransport": [
                    235
                ],
                "protocol": [
                    236,
                    239
                ],
                "TBinaryProtocol.TBinaryProtocol": [
                    236
                ],
                "TBinaryProtocol": [
                    236
                ],
                "transport.open": [
                    237
                ],
                "self.transport": [
                    244,
                    238
                ],
                "ThriftHiveMetastore.Client": [
                    239
                ],
                "ThriftHiveMetastore": [
                    239
                ],
                "e": [
                    241
                ],
                "self.transport.close": [
                    244
                ],
                "get_hive_syntax": [
                    248
                ],
                "ApacheHiveCommandClient": [
                    249
                ],
                "get_default_client": [
                    402,
                    371,
                    254
                ],
                "luigi.hadoop.BaseHadoopJobTask": [
                    257
                ],
                "luigi.hadoop": [
                    257,
                    314,
                    358
                ],
                "n_reduce_tasks": [
                    263
                ],
                "bytes_per_reducer": [
                    264
                ],
                "reducers_max": [
                    265
                ],
                "jcs": [
                    293,
                    294,
                    296,
                    301,
                    303,
                    305,
                    307,
                    308
                ],
                "self.task_id": [
                    294
                ],
                "self.n_reduce_tasks": [
                    296,
                    295
                ],
                "self.pool": [
                    297,
                    301,
                    303
                ],
                "scheduler_type": [
                    299,
                    300,
                    302
                ],
                "self.bytes_per_reducer": [
                    304,
                    305
                ],
                "self.reducers_max": [
                    306,
                    307
                ],
                "HiveQueryRunner": [
                    311
                ],
                "luigi.hadoop.JobRunner": [
                    314
                ],
                "outputs": [
                    325,
                    326
                ],
                "flatten": [
                    325
                ],
                "job.output": [
                    325
                ],
                "job": [
                    353,
                    354,
                    325,
                    339,
                    341,
                    347
                ],
                "o": [
                    326,
                    327,
                    328,
                    329,
                    334
                ],
                "FileSystemTarget": [
                    327
                ],
                "parent_dir": [
                    328,
                    329,
                    330,
                    334
                ],
                "os.path.dirname": [
                    328
                ],
                "o.path": [
                    328
                ],
                "o.fs.exists": [
                    329
                ],
                "o.fs": [
                    329,
                    334
                ],
                "logger.info": [
                    330,
                    357
                ],
                "o.fs.mkdir": [
                    334
                ],
                "FileAlreadyExists": [
                    335
                ],
                "self.prepare_outputs": [
                    339
                ],
                "tempfile.NamedTemporaryFile": [
                    340
                ],
                "tempfile": [
                    340
                ],
                "f": [
                    344,
                    345,
                    346,
                    340
                ],
                "query": [
                    344,
                    341,
                    342,
                    343
                ],
                "job.query": [
                    341
                ],
                "query.encode": [
                    343
                ],
                "f.write": [
                    344
                ],
                "f.flush": [
                    345
                ],
                "arglist": [
                    352,
                    355,
                    357,
                    358,
                    346
                ],
                "f.name": [
                    346
                ],
                "hiverc": [
                    347,
                    348,
                    349,
                    350,
                    351
                ],
                "job.hiverc": [
                    347
                ],
                "rcfile": [
                    352,
                    351
                ],
                "job.hiveconfs": [
                    353,
                    354
                ],
                "luigi.hadoop.run_and_track_hadoop_job": [
                    358
                ],
                "luigi.Target": [
                    392,
                    361
                ],
                "self.database": [
                    451,
                    453,
                    415,
                    427,
                    398,
                    367,
                    375,
                    376,
                    409,
                    410,
                    383
                ],
                "self.table": [
                    449,
                    453,
                    415,
                    427,
                    399,
                    368,
                    375,
                    376,
                    409,
                    410,
                    383
                ],
                "self.hive_cmd": [
                    369
                ],
                "self.client": [
                    415,
                    427,
                    403,
                    372,
                    376,
                    410,
                    383
                ],
                "logger.debug": [
                    409,
                    375
                ],
                "self.client.table_exists": [
                    376,
                    410,
                    415
                ],
                "location": [
                    384,
                    386,
                    427,
                    428,
                    430,
                    383
                ],
                "self.client.table_location": [
                    427,
                    383
                ],
                "self.partition": [
                    448,
                    450,
                    427,
                    400,
                    409,
                    410,
                    447
                ],
                "self.fail_missing_table": [
                    412,
                    405
                ],
                "fail_missing_table": [
                    405
                ],
                "luigi.ExternalTask": [
                    436
                ],
                "luigi.Parameter": [
                    441,
                    442,
                    444
                ],
                "HivePartitionTarget": [
                    449
                ],
                "HiveTableTarget": [
                    453
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/luigi_28/test/contrib/hive_test.py",
                "test_function": "test_table_exists",
                "test_function_code": "    @mock.patch(\"luigi.contrib.hive.run_hive_cmd\")\n    def test_table_exists(self, run_command):\n        run_command.return_value = \"OK\"\n        returned = self.client.table_exists(\"mytable\")\n        self.assertFalse(returned)\n\n        run_command.return_value = \"OK\\n\" \\\n                                   \"mytable\"\n        returned = self.client.table_exists(\"mytable\")\n        self.assertTrue(returned)\n\n        # Issue #896 test case insensitivity\n        returned = self.client.table_exists(\"MyTable\")\n        self.assertTrue(returned)\n\n        run_command.return_value = \"day=2013-06-28/hour=3\\n\" \\\n                                   \"day=2013-06-28/hour=4\\n\" \\\n                                   \"day=2013-07-07/hour=2\\n\"\n        self.client.partition_spec = mock.Mock(name=\"partition_spec\")\n        self.client.partition_spec.return_value = \"somepart\"\n        returned = self.client.table_exists(\"mytable\", partition={'a': 'b'})\n        self.assertTrue(returned)\n\n        run_command.return_value = \"\"\n        returned = self.client.table_exists(\"mytable\", partition={'a': 'b'})\n        self.assertFalse(returned)",
                "test_error": "AssertionError: False is not true",
                "full_test_error": "self = <contrib.hive_test.HiveCommandClientTest testMethod=test_table_exists>\nrun_command = <MagicMock name='run_hive_cmd' id='4517783680'>\n\n    @mock.patch(\"luigi.contrib.hive.run_hive_cmd\")\n    def test_table_exists(self, run_command):\n        run_command.return_value = \"OK\"\n        returned = self.client.table_exists(\"mytable\")\n        self.assertFalse(returned)\n    \n        run_command.return_value = \"OK\\n\" \\\n                                   \"mytable\"\n        returned = self.client.table_exists(\"mytable\")\n        self.assertTrue(returned)\n    \n        # Issue #896 test case insensitivity\n        returned = self.client.table_exists(\"MyTable\")\n>       self.assertTrue(returned)\nE       AssertionError: False is not true\n\ntest/contrib/hive_test.py:111: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "mock.patch('luigi.contrib.hive.run_hive_cmd')"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/luigi_28/test/contrib/hive_test.py",
                "test_function": "test_apacheclient_table_exists",
                "test_function_code": "    @mock.patch(\"luigi.contrib.hive.run_hive_cmd\")\n    def test_apacheclient_table_exists(self, run_command):\n        run_command.return_value = \"OK\"\n        returned = self.apacheclient.table_exists(\"mytable\")\n        self.assertFalse(returned)\n\n        run_command.return_value = \"OK\\n\" \\\n                                   \"mytable\"\n        returned = self.apacheclient.table_exists(\"mytable\")\n        self.assertTrue(returned)\n\n        # Issue #896 test case insensitivity\n        returned = self.apacheclient.table_exists(\"MyTable\")\n        self.assertTrue(returned)\n\n        run_command.return_value = \"day=2013-06-28/hour=3\\n\" \\\n                                   \"day=2013-06-28/hour=4\\n\" \\\n                                   \"day=2013-07-07/hour=2\\n\"\n        self.apacheclient.partition_spec = mock.Mock(name=\"partition_spec\")\n        self.apacheclient.partition_spec.return_value = \"somepart\"\n        returned = self.apacheclient.table_exists(\"mytable\", partition={'a': 'b'})\n        self.assertTrue(returned)\n\n        run_command.return_value = \"\"\n        returned = self.apacheclient.table_exists(\"mytable\", partition={'a': 'b'})\n        self.assertFalse(returned)",
                "test_error": "AssertionError: False is not true",
                "full_test_error": "self = <contrib.hive_test.HiveCommandClientTest testMethod=test_apacheclient_table_exists>\nrun_command = <MagicMock name='run_hive_cmd' id='4518704416'>\n\n    @mock.patch(\"luigi.contrib.hive.run_hive_cmd\")\n    def test_apacheclient_table_exists(self, run_command):\n        run_command.return_value = \"OK\"\n        returned = self.apacheclient.table_exists(\"mytable\")\n        self.assertFalse(returned)\n    \n        run_command.return_value = \"OK\\n\" \\\n                                   \"mytable\"\n        returned = self.apacheclient.table_exists(\"mytable\")\n        self.assertTrue(returned)\n    \n        # Issue #896 test case insensitivity\n        returned = self.apacheclient.table_exists(\"MyTable\")\n>       self.assertTrue(returned)\nE       AssertionError: False is not true\n\ntest/contrib/hive_test.py:175: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "mock.patch('luigi.contrib.hive.run_hive_cmd')"
                ]
            }
        ]
    }
}