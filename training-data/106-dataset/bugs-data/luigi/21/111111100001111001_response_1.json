{
    "luigi": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 327,
            "file_name": "interface.py",
            "replace_code": "def run(cmdline_args=None, main_task_cls=None, worker_scheduler_factory=None, use_dynamic_argparse=False, local_scheduler=False):\n\n    \"\"\"\n    Run tasks from cmdline using argparse.\n    \n    :param cmdline_args: list of command line arguments\n    :param main_task_cls: main task class to run\n    :param worker_scheduler_factory: factory for worker/scheduler objects\n    :param use_dynamic_argparse: boolean flag to indicate whether to use dynamic argparse\n    :param local_scheduler: boolean flag to indicate whether to use local scheduler\n    :return: result of running tasks\n    \"\"\"\n    if use_dynamic_argparse:\n        interface = DynamicArgParseInterface()\n    else:\n        interface = ArgParseInterface()\n    \n    if main_task_cls is not None:\n        cmdline_args.insert(0, main_task_cls.task_family)\n    \n    if local_scheduler:\n        cmdline_args.insert(0, '--local-scheduler')\n    \n    tasks = interface.parse(cmdline_args)  # parse the command line arguments\n    return interface.run(tasks, worker_scheduler_factory)  # run the tasks using the specified factory"
        }
    ]
}