{
    "httpie": [
        {
            "bugID": 4,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 94,
            "file_name": "httpie/models.py",
            "replace_code": "def headers(self):\n\n    url = urlsplit(self._orig.url)\n    \n    request_line = '{method} {path}{query} HTTP/1.1'.format(\n        method=self._orig.method,\n        path=url.path or '/',\n        query='?' + url.query if url.query else ''\n    )\n    \n    headers = dict(self._orig.headers)\n    \n    if 'Host' not in headers:\n        headers['Host'] = url.netloc.split('@')[-1]\n    else:\n        del headers['Host']  # Ensure 'Host' is not duplicated\n        headers['Host'] = url.netloc.split('@')[-1]\n    \n    headers_formatted = ['%s: %s' % (name, value)\n               for name, value in headers.items()]\n    \n    headers_formatted.insert(0, request_line)\n    headers_formatted = '\\r\\n'.join(headers_formatted).strip()\n    \n    if isinstance(headers_formatted, bytes):\n        # Python < 3\n        headers_formatted = headers_formatted.decode('utf8')\n    return headers_formatted"
        }
    ]
}