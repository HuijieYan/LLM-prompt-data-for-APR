{
    "matplotlib": [
        {
            "bugID": 22,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 6338,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def hist(self, x, bins=None, range=None, density=False, weights=None,\n         cumulative=False, bottom=None, histtype='bar', align='mid',\n         orientation='vertical', rwidth=None, log=False,\n         color=None, label=None, stacked=False, **kwargs):\n    \n    # ... (omitted code) ...\n\n\n    if histtype.startswith('bar'):\n    \n        totwidth = np.diff(bins)\n    \n        if rwidth is not None:\n            dr = np.clip(rwidth, 0, 1)\n        elif (len(tops) > 1 and\n              ((not stacked) or rcParams['_internal.classic_mode'])):\n            dr = 0.8\n        else:\n            dr = 1.0\n    \n        if histtype == 'bar' and not stacked:\n            width = dr * totwidth / nx\n            dw = width\n            if align == 'mid':\n                boffset = -0.5 * dr * totwidth * (1 - 1 / nx)\n            elif align == 'left':\n                boffset = 0\n            else:\n                boffset = -dr * totwidth\n        elif histtype == 'barstacked' or stacked:\n            width = dr * totwidth\n            boffset = np.zeros(len(bins) - 1)\n            if align == 'mid':\n                boffset += 0.5 * totwidth\n            elif align == 'right':\n                boffset += totwidth"
        }
    ]
}