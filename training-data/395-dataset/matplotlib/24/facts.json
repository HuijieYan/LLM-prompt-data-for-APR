{
    "1.1.1": "def _make_getset_interval(method_name, lim_name, attr_name):\n    \n\n    def getter(self):\n        # docstring inherited.\n        return getattr(getattr(self.axes, lim_name), attr_name)\n\n    def setter(self, vmin, vmax, ignore=False):\n        # docstring inherited.\n        if ignore:\n            setattr(getattr(self.axes, lim_name), attr_name, (vmin, vmax))\n        else:\n            oldmin, oldmax = getter(self)\n            if oldmin < oldmax:\n                setter(self, min(vmin, vmax, oldmin), max(vmin, vmax, oldmax),\n                       ignore=True)\n            else:\n                setter(self, max(vmin, vmax, oldmax), min(vmin, vmax, oldmin),\n                       ignore=True)\n        self.stale = True\n\n    getter.__name__ = f\"get_{method_name}_interval\"\n    setter.__name__ = f\"set_{method_name}_interval\"\n\n    return getter, setter\n",
    "1.1.2": "Helper to generate ``get_{data,view}_interval`` and\n``set_{data,view}_interval`` implementations.",
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.2.4": null,
    "1.2.5": null,
    "1.3.1": "lib/matplotlib/axis.py",
    "1.3.2": [
        "getter(self)",
        "setter(self, vmin, vmax, ignore=False)"
    ],
    "1.4.1": [
        "def test_set_ticks_inverted():\n    fig, ax = plt.subplots()\n    ax.invert_xaxis()\n    ax.set_xticks([.3, .7])\n    assert ax.get_xlim() == (1, 0)"
    ],
    "1.4.2": [
        "lib/matplotlib/tests/test_axes.py"
    ],
    "2.1.1": [
        [
            "E       assert (0.7, 0.3) == (1, 0)\nE         At index 0 diff: 0.7 != 1\nE         Full diff:\nE         - (1, 0)\nE         + (0.7, 0.3)"
        ]
    ],
    "2.1.2": [
        [
            "def test_set_ticks_inverted():\n        fig, ax = plt.subplots()\n        ax.invert_xaxis()\n        ax.set_xticks([.3, .7])\n>       assert ax.get_xlim() == (1, 0)",
            "\nlib/matplotlib/tests/test_axes.py:6420: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "lim_name": "'viewLim'",
                "attr_name": "'intervalx'",
                "method_name": "'view'"
            },
            {
                "getter": "<function _make_getset_interval.<locals>.getter at 0x1100f1280>",
                "setter": "<function _make_getset_interval.<locals>.setter at 0x1100f1310>",
                "getter.__name__": "'get_view_interval'",
                "setter.__name__": "'set_view_interval'"
            }
        ],
        [
            {
                "lim_name": "'dataLim'",
                "attr_name": "'intervalx'",
                "method_name": "'data'"
            },
            {
                "getter": "<function _make_getset_interval.<locals>.getter at 0x1100f1820>",
                "setter": "<function _make_getset_interval.<locals>.setter at 0x1100f18b0>",
                "getter.__name__": "'get_data_interval'",
                "setter.__name__": "'set_data_interval'"
            }
        ],
        [
            {
                "lim_name": "'viewLim'",
                "attr_name": "'intervaly'",
                "method_name": "'view'"
            },
            {
                "getter": "<function _make_getset_interval.<locals>.getter at 0x1100dc820>",
                "setter": "<function _make_getset_interval.<locals>.setter at 0x1100dc8b0>",
                "getter.__name__": "'get_view_interval'",
                "setter.__name__": "'set_view_interval'"
            }
        ],
        [
            {
                "lim_name": "'dataLim'",
                "attr_name": "'intervaly'",
                "method_name": "'data'"
            },
            {
                "getter": "<function _make_getset_interval.<locals>.getter at 0x1100f15e0>",
                "setter": "<function _make_getset_interval.<locals>.setter at 0x1100f1430>",
                "getter.__name__": "'get_data_interval'",
                "setter.__name__": "'set_data_interval'"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "lim_name": "str",
                "attr_name": "str",
                "method_name": "str"
            },
            {
                "getter": "function",
                "setter": "function",
                "getter.__name__": "str",
                "setter.__name__": "str"
            }
        ],
        [
            {
                "lim_name": "str",
                "attr_name": "str",
                "method_name": "str"
            },
            {
                "getter": "function",
                "setter": "function",
                "getter.__name__": "str",
                "setter.__name__": "str"
            }
        ],
        [
            {
                "lim_name": "str",
                "attr_name": "str",
                "method_name": "str"
            },
            {
                "getter": "function",
                "setter": "function",
                "getter.__name__": "str",
                "setter.__name__": "str"
            }
        ],
        [
            {
                "lim_name": "str",
                "attr_name": "str",
                "method_name": "str"
            },
            {
                "getter": "function",
                "setter": "function",
                "getter.__name__": "str",
                "setter.__name__": "str"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "lim_name": "'viewLim'",
                "attr_name": "'intervalx'",
                "method_name": "'view'"
            },
            {
                "getter": "<function _make_getset_interval.<locals>.getter at 0x10da55a60>",
                "setter": "<function _make_getset_interval.<locals>.setter at 0x10da55af0>",
                "getter.__name__": "'get_view_interval'",
                "setter.__name__": "'set_view_interval'"
            }
        ],
        [
            {
                "lim_name": "'dataLim'",
                "attr_name": "'intervalx'",
                "method_name": "'data'"
            },
            {
                "getter": "<function _make_getset_interval.<locals>.getter at 0x10da62040>",
                "setter": "<function _make_getset_interval.<locals>.setter at 0x10da620d0>",
                "getter.__name__": "'get_data_interval'",
                "setter.__name__": "'set_data_interval'"
            }
        ],
        [
            {
                "lim_name": "'viewLim'",
                "attr_name": "'intervaly'",
                "method_name": "'view'"
            },
            {
                "getter": "<function _make_getset_interval.<locals>.getter at 0x10da54040>",
                "setter": "<function _make_getset_interval.<locals>.setter at 0x10da540d0>",
                "getter.__name__": "'get_view_interval'",
                "setter.__name__": "'set_view_interval'"
            }
        ],
        [
            {
                "lim_name": "'dataLim'",
                "attr_name": "'intervaly'",
                "method_name": "'data'"
            },
            {
                "getter": "<function _make_getset_interval.<locals>.getter at 0x10da62160>",
                "setter": "<function _make_getset_interval.<locals>.setter at 0x10da55e50>",
                "getter.__name__": "'get_data_interval'",
                "setter.__name__": "'set_data_interval'"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "lim_name": "str",
                "attr_name": "str",
                "method_name": "str"
            },
            {
                "getter": "function",
                "setter": "function",
                "getter.__name__": "str",
                "setter.__name__": "str"
            }
        ],
        [
            {
                "lim_name": "str",
                "attr_name": "str",
                "method_name": "str"
            },
            {
                "getter": "function",
                "setter": "function",
                "getter.__name__": "str",
                "setter.__name__": "str"
            }
        ],
        [
            {
                "lim_name": "str",
                "attr_name": "str",
                "method_name": "str"
            },
            {
                "getter": "function",
                "setter": "function",
                "getter.__name__": "str",
                "setter.__name__": "str"
            }
        ],
        [
            {
                "lim_name": "str",
                "attr_name": "str",
                "method_name": "str"
            },
            {
                "getter": "function",
                "setter": "function",
                "getter.__name__": "str",
                "setter.__name__": "str"
            }
        ]
    ],
    "3.1.1": [
        "Heatmaps are being truncated when using with seaborn\n"
    ],
    "3.1.2": [
        "Bug report\nBug summary\n\nThe very top and bottom of the heatmaps are getting truncated to 1/2 height in version 3.1.1. This does not happen for version 3.0.3.\n\nThis is the code from a Jupyter Notebook\n\nimport matplotlib\nimport pandas as pd\nimport numpy as np\nimport seaborn as sb\n%pylab inline\n\nprint(matplotlib.__version__)\nprint(sb.__version__)\n\ngrid = pd.DataFrame(np.arange(9).reshape((3,3))/10)\nfig, ax = subplots(1, 1, figsize=(5, 5))\n\nsb.heatmap(grid, annot=True, fmt=\".0f\", ax=ax, cmap='RdBu',  vmin=0, vmax=1, cbar=True);\nActual outcome\n\nPopulating the interactive namespace from numpy and matplotlib\n3.1.1\n0.9.0\n\nMatplotlib version\n\nOperating system: Ubuntu Linux\nMatplotlib version: 3.1.1\nMatplotlib backend: module://ipykernel.pylab.backend_inline\nPython version: 3.6\nJupyter version (if applicable): 4.4.0\nOther libraries:\n"
    ]
}