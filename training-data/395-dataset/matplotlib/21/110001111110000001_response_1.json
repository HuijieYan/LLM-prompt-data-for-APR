{
    "matplotlib": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 3752,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n        # ... Function logic, unchanged ...\n\n        # box properties\n        if patch_artist:\n            final_boxprops = dict(\n                linestyle=rcParams['boxplot.boxprops.linestyle'],\n                linewidth=rcParams['boxplot.boxprops.linewidth'],\n                edgecolor=rcParams['boxplot.boxprops.color'],\n                facecolor=('white' if rcParams['_internal.classic_mode'] else\n                           rcParams['patch.facecolor']),\n                zorder=zorder,\n            )\n            if boxprops is not None:\n                final_boxprops.update(\n                    cbook.normalize_kwargs(\n                        boxprops, mpatches.PathPatch._alias_map))\n        else:\n            final_boxprops = line_props_with_rcdefaults('boxprops', boxprops)\n\n        final_whiskerprops = line_props_with_rcdefaults(\n            'whiskerprops', whiskerprops)\n        final_capprops = line_props_with_rcdefaults(\n            'capprops', capprops)\n        final_flierprops = line_props_with_rcdefaults(\n            'flierprops', flierprops)\n        final_flierprops['marker'] = rcParams['boxplot.flierprops.marker']  # Set marker based on rcParams\n        final_medianprops = line_props_with_rcdefaults(\n            'medianprops', medianprops, zdelta)\n        final_meanprops = line_props_with_rcdefaults(\n            'meanprops', meanprops, zdelta)\n        final_meanprops['marker'] = rcParams['boxplot.meanprops.marker']  # Set marker based on rcParams\n        removed_prop = 'marker' if meanline else 'linestyle'",
            "imports": []
        }
    ]
}