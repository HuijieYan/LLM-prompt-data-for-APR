{
    "matplotlib": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 3752,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def bxp(self, bxpstats, positions=None, widths=None, vert=True, patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True, boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None, meanline=False, manage_ticks=True, zorder=None):\n    # code implementation\n\n\n    if not isinstance(marker, str):\n        marker = rcParams['lines.marker']\n    \n    meanmarker = rcParams['boxplot.meanprops.marker']\n    fliermarker = rcParams['boxplot.flierprops.marker']\n    \n    def line_props_with_rcdefaults(subkey, explicit, zdelta=0):\n        d = {k.split('.')[-1]: v for k, v in rcParams.items() if k.startswith(f'boxplot.{subkey}')}\n        d['zorder'] = zorder + zdelta\n        if explicit is not None:\n            d.update(cbook.normalize_kwargs(explicit, mlines.Line2D._alias_map))\n        if 'marker' in d:\n            if subkey == 'flierprops' and fliermarker:\n                d['marker'] = fliermarker\n            elif subkey == 'meanprops' and meanmarker:\n                d['marker'] = meanmarker\n            else:\n                d['marker'] = marker\n        return d"
        }
    ]
}