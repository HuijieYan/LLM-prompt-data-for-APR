{
    "matplotlib": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 3752,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n    \"\"\"\n    Drawing function for box and whisker plots.\n\n    Make a box and whisker plot for each column of *x* or each\n    vector in sequence *x*.  The box extends from the lower to\n    upper quartile values of the data, with a line at the median.\n    The whiskers extend from the box to show the range of the\n    data.  Flier points are those past the end of the whiskers.\n\n    Parameters\n    ----------\n    bxpstats : list of dicts\n    ... (other parameters remain unchanged) ...\n    zorder : scalar, default: None\n      The zorder of the resulting boxplot.\n\n    Returns\n    -------\n    result : dict\n      A dictionary mapping each component of the boxplot to a list\n      of the `.Line2D` instances created. That dictionary has the\n      following keys (assuming vertical boxplots):\n    ... (other returns remain unchanged) ...\n\n    Examples\n        \"\"\"\n    # lists of artists to be output\n    whiskers = []\n    caps = []\n    boxes = []\n    medians = []\n    means = []\n    fliers = []\n    \n    # empty list of xticklabels\n    datalabels = []\n    \n    d = {k.split('.')[-1]: v for k, v in rcParams.items()\n         if k.startswith('boxplot.boxprops')}\n    d['zorder'] = zorder\n    if boxprops is not None:\n        d.update(boxprops)\n        \n    # vertical or horizontal plot?\n    if vert:\n        def doplot(*args, **kwargs):\n            return self.plot(*args, **kwargs, marker=kwargs.pop('marker', None))\n\n        def dopatch(xs, ys, **kwargs):\n            return patch_list(xs, ys, **kwargs)\n    \n    else:\n        def doplot(*args, **kwargs):\n            shuffled = []\n            for i in range(0, len(args), 2):\n                shuffled.extend([args[i + 1], args[i]])\n            return self.plot(*shuffled, **kwargs, marker=kwargs.pop('marker', None))\n\n        def dopatch(xs, ys, **kwargs):\n            xs, ys = ys, xs  # flip X, Y\n            return patch_list(xs, ys, **kwargs, marker=kwargs.pop('marker', None))\n        \n    return dict(whiskers=whiskers, caps=caps, boxes=boxes,\n                medians=medians, fliers=fliers, means=means)",
            "imports": []
        }
    ]
}