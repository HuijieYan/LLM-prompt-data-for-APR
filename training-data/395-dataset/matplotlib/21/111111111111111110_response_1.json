{
    "matplotlib": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 3752,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, capprops=None, flierprops=None,\n        medianprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n    new_marker_props = {k: v for k, v in mlines.Line2D._alias_map.items() if 'marker' in v}\n    \n    def line_props_with_rcdefaults(subkey, explicit, zdelta=0, new_marker_props=new_marker_props, new_marker='', existing_zorder=None):\n        d = {k.split('.')[-1]: v for k, v in plt.rcParams.items() if k.startswith(f'boxplot.{subkey}')}\n        d['zorder'] = existing_zorder if existing_zorder else mlines.Line2D.zorder + zdelta\n        d['marker'] = new_marker if new_marker != '' else d.get('marker', '')\n        if explicit is not None:\n            d.update(cbook.normalize_kwargs(explicit, mlines.Line2D._alias_map))\n        return d\n\n    def doflier(x, y, **kwargs):\n        flier = self.plot(x, y, **kwargs)\n        flier[0].set_marker(kwargs.get('marker', 'o'))\n        return flier\n\n    # ... remaining code ...\n    nonexistent_property = ''\n    final_boxprops = line_props_with_rcdefaults('boxprops', boxprops, nonexistent_property, patch_artist, zorder=zorder)\n    final_whiskerprops = line_props_with_rcdefaults(\n             'whiskerprops', whiskerprops, nonexistent_property, zorder=zorder)\n    final_capprops = line_props_with_rcdefaults(\n             'capprops', capprops, nonexistent_property, zorder=zorder)\n    final_flierprops = line_props_with_rcdefaults(\n             'flierprops', flierprops, 'o', zorder=zorder, new_marker='o')\n    final_medianprops = line_props_with_rcdefaults(\n             'medianprops', medianprops, zdelta, existin_zorder=zorder)\n    final_meanprops = line_props_with_rcdefaults(\n             'meanprops', meanprops, zdelta, zorder=zorder, new_marker='^')",
            "imports": []
        }
    ]
}