{
    "matplotlib": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 3752,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n    \"\"\"\n    Drawing function for box and whisker plots.\n    ...\n    \"\"\"\n    # Lists of artists to be output\n    whiskers = []\n    caps = []\n    boxes = []\n    medians = []\n    means = []\n    fliers = []\n\n    # ...\n\n    # Apply marker properties from rcParams\n    flier_marker = mpl.rcParams['boxplot.flierprops.marker']\n    mean_marker = mpl.rcParams['boxplot.meanprops.marker']\n\n    # ...\n\n    def doplot(*args, **kwargs):\n        return self.plot(*args, marker='', **kwargs)\n\n    # ...\n\n    # Apply markers\n    fliers.extend(doplot(flier_x, flier_y, marker=flier_marker, **final_flierprops))\n\n    # ...\n\n    if showmeans:\n        if meanline:\n            means.extend(doplot([box_left, box_right], [stats['mean'], stats['mean']],\n                                marker=mean_marker, **final_meanprops))\n        else:\n            means.extend(doplot([pos], [stats['mean']], marker=mean_marker, **final_meanprops))\n\n    # ...\n\n    return dict(whiskers=whiskers, caps=caps, boxes=boxes,\n                medians=medians, fliers=fliers, means=means)",
            "imports": []
        }
    ]
}