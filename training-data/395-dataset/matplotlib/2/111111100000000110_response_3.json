{
    "matplotlib": [
        {
            "bugID": 2,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 4313,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def scatter(self, x, y, s=None, c=None, marker=None, cmap=None, norm=None,\n                vmin=None, vmax=None, alpha=None, linewidths=None,\n                verts=None, edgecolors=None, *, plotnonfinite=False,\n                **kwargs):\n        \"\"\"\n        A scatter plot of *y* vs. *x* with varying marker size and/or color.\n\n        Parameters\n        ----------\n        x, y : float or array-like, shape (n, )\n            The data positions.\n\n        s : float or array-like, shape (n, ), optional\n            The marker size in points**2.\n            Default is ``rcParams['lines.markersize'] ** 2``.\n\n        c : array-like or list of colors or color, optional\n            The marker colors.\n\n        marker : `~.markers.MarkerStyle`, default: :rc:`scatter.marker`\n            The marker style. *marker* can be either an instance of the class\n            or the text shorthand for a particular marker.\n            See :mod:`matplotlib.markers` for more information about marker\n            styles.\n\n        cmap : str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`\n            A `.Colormap` instance or registered colormap name.\n\n        norm : `~matplotlib.colors.Normalize`, default: None\n            If *c* is an array of floats, *norm* is used to scale the color\n            data, *c*, in the range 0 to 1, in order to map into the colormap\n            *cmap*.\n\n        vmin, vmax : float, default: None\n            *vmin* and *vmax* are used in conjunction with the default norm to\n            map the color array *c* to the colormap *cmap*. If None, the\n            respective min and max of the color array is used.\n\n        alpha : float, default: None\n            The alpha blending value, between 0 (transparent) and 1 (opaque).\n\n        linewidths : float or array-like, default: :rc:`lines.linewidth`\n            The linewidth of the marker edges.\n\n        edgecolors : {'face', 'none', *None*} or color or sequence of color, \\\ndefault: :rc:`scatter.edgecolors`\n            The edge color of the marker.\n\n        plotnonfinite : bool, default: False\n            Set to plot points with nonfinite *c*, in conjunction with\n            `~matplotlib.colors.Colormap.set_bad`.\n\n        Returns\n        -------\n        `~matplotlib.collections.PathCollection`\n\n        Other Parameters\n        ----------------\n        **kwargs : `~matplotlib.collections.Collection` properties\n        \"\"\"\n        # Process **kwargs to handle aliases, conflicts with explicit kwargs:\n    \n        self._process_unit_info(xdata=x, ydata=y, kwargs=kwargs)\n        x = self.convert_xunits(x)\n        y = self.convert_yunits(y)",
            "import_list": []
        }
    ]
}