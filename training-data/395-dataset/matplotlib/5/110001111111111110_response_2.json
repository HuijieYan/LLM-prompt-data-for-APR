{
    "matplotlib": [
        {
            "bugID": 5,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 4328,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def scatter(self, x, y, s=None, c=None, marker=None, cmap=None, norm=None,\n            vmin=None, vmax=None, alpha=None, linewidths=None,\n            verts=None, edgecolors=None, *, plotnonfinite=False,\n            **kwargs):\n\n    # ... (omitted code)\n\n    edgecolors_orig = edgecolors\n\n    if edgecolors is not None:\n        if (isinstance(linewidths, Number) or\n                np.iterable(linewidths) and len(edgecolors) != len(x)):\n            raise ValueError(\"Incompatible arguments: 'edgecolors' and \"\n                             \"'linewidths' must be of the same length, or \"\n                             \"'linewidths' must be a scalar.\")\n        if (np.iterable(edgecolors) and len(edgecolors) == len(x) and\n                not np.iterable(edgecolors[0])):\n            # if edge_color is given, throw away the line_widths\n            linewidths = None\n        else:\n            if not np.iterable(linewidths):\n                raise ValueError(\"linewidths must be an iterable\")\n\n    if linewidths is not None:\n        linewidths = np.asarray(linewidths)\n\n    if linewidths is not None and np.iterable(linewidths):\n        warn_deprecated(\"3.3\", message=obj_whiskerplot_deprecation_msg)\n\n        if len(linewidths) != len(x):\n            raise ValueError(\"len(linewidths) must match with len(x)\")\n    else:\n        linewidths = [0., *linewidths]",
            "import_list": []
        }
    ]
}