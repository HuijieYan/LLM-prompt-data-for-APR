{
    "matplotlib": [
        {
            "bugID": 10,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 798,
            "file_name": "lib/matplotlib/axis.py",
            "replace_code": "def set_tick_params(self, which='major', reset=False, **kw):\n    \"\"\"\n    Set appearance parameters for ticks, ticklabels, and gridlines.\n\n    For documentation of keyword arguments, see\n    :meth:`matplotlib.axes.Axes.tick_params`.\n    \"\"\"\n    cbook._check_in_list(['major', 'minor', 'both'], which=which)\n    kwtrans = self._translate_tick_kw(kw)\n\n    # the kwargs are stored in self._major/minor_tick_kw so that any\n    # future new ticks will automatically get them\n    if reset:\n        target_ticks = {'major': self.majorTicks, 'minor': self.minorTicks, 'both': self.majorTicks + self.minorTicks}\n        if which in ['major', 'minor', 'both']:\n            self._major_tick_kw.clear()\n            self._major_tick_kw.update(kwtrans)\n            for tick in target_ticks[which]:\n                tick._apply_params(**kwtrans)\n    else:\n        target_ticks = {'major': self.majorTicks, 'minor': self.minorTicks, 'both': self.majorTicks + self.minorTicks}\n        if which in ['major', 'minor', 'both']:\n            self._major_tick_kw.update(kwtrans)\n            for tick in target_ticks[which]:\n                tick._apply_params(**kwtrans)\n            if 'labelcolor' in kwtrans:\n                self.offsetText.set_color(kwtrans['labelcolor'])\n\n    self.stale = True",
            "import_list": []
        }
    ]
}