{
    "tqdm": [
        {
            "bugID": 5,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 641,
            "file_name": "tqdm/_tqdm.py",
            "replace_code": "def __init__(self, iterable=None, desc=None, total=None, leave=True,\n                 file=None, ncols=None, mininterval=0.1, maxinterval=10.0,\n                 miniters=None, ascii=None, disable=False, unit='it',\n                 unit_scale=False, dynamic_ncols=False, smoothing=0.3,\n                 bar_format=None, initial=0, position=None, postfix=None,\n                 unit_divisor=1000, gui=False, **kwargs):\n        \"\"\"\n        Parameters\n        ----------\n        ... # (same as before)\n\n        Returns\n        -------\n        out  : decorated iterator.\n        \"\"\"\n        \n        if file is None:\n            file = sys.stderr\n\n        if disable:\n            self.disable = True\n            self.n = initial\n            return\n\n        # Preprocess the arguments\n        if total is None and iterable is not None:\n            try:\n                total = len(iterable)\n            except (TypeError, AttributeError):\n                total = None\n\n        # Similar preprocessing steps for other arguments\n\n        # Store the arguments\n        self.iterable = iterable\n        self.desc = desc or ''\n        self.total = total\n        # Store other arguments\n\n        # Initialize other attributes\n        self.last_print_n = initial\n        self.n = initial\n        self.pos = position if position is not None else self._get_free_pos(self)\n        # Initialize other attributes\n\n        self.start_t = time.time()  # Avoid race conditions by setting start_t at the very end of init\n\n        def status_printer(f):\n            # omitted code\n            pass\n\n        def _get_free_pos(cls, instance=None):\n            # omitted code\n            pass\n\n        def write(cls, s, file=None, end='\\n', nolock=False):\n            # omitted code\n            pass\n\n        def __repr__(self, elapsed=None):\n            # omitted code\n            pass\n\n        def set_postfix(self, ordered_dict=None, refresh=True, **kwargs):\n            # omitted code\n            pass\n\n        def moveto(self, n):\n            # omitted code\n            pass",
            "imports": [
                "import sys",
                "import time",
                "from collections import OrderedDict"
            ]
        }
    ]
}