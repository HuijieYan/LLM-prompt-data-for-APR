{
    "1.1.1": "@sudo_support\ndef get_new_command(command, settings):\n    return re.sub('^mkdir (.*)', 'mkdir -p \\\\1', command.script)\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.2.4": null,
    "1.2.5": null,
    "1.3.1": "thefuck/rules/mkdir_p.py",
    "1.3.2": null,
    "1.4.1": [
        "@pytest.mark.parametrize('command, new_command', [\n    (Command('mkdir foo/bar/baz'), 'mkdir -p foo/bar/baz'),\n    (Command('hdfs dfs -mkdir foo/bar/baz'), 'hdfs dfs -mkdir -p foo/bar/baz'),\n    (Command('./bin/hdfs dfs -mkdir foo/bar/baz'), './bin/hdfs dfs -mkdir -p foo/bar/baz')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command",
        "@pytest.mark.parametrize('command, new_command', [\n    (Command('mkdir foo/bar/baz'), 'mkdir -p foo/bar/baz'),\n    (Command('hdfs dfs -mkdir foo/bar/baz'), 'hdfs dfs -mkdir -p foo/bar/baz'),\n    (Command('./bin/hdfs dfs -mkdir foo/bar/baz'), './bin/hdfs dfs -mkdir -p foo/bar/baz')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command"
    ],
    "1.4.2": [
        "tests/rules/test_mkdir_p.py",
        "tests/rules/test_mkdir_p.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: assert 'hdfs dfs -mkdir foo/bar/baz' == 'hdfs dfs -mkdir -p foo/bar/baz'\nE         - hdfs dfs -mkdir foo/bar/baz\nE         + hdfs dfs -mkdir -p foo/bar/baz\nE         ?                +++"
        ],
        [
            "E       AssertionError: assert './bin/hdfs d...r foo/bar/baz' == './bin/hdfs df...p foo/bar/baz'\nE         - ./bin/hdfs dfs -mkdir foo/bar/baz\nE         + ./bin/hdfs dfs -mkdir -p foo/bar/baz\nE         ?                      +++"
        ]
    ],
    "2.1.2": [
        [
            "command = Command(script='hdfs dfs -mkdir foo/bar/baz', stdout='', stderr='')\nnew_command = 'hdfs dfs -mkdir -p foo/bar/baz'\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('mkdir foo/bar/baz'), 'mkdir -p foo/bar/baz'),\n        (Command('hdfs dfs -mkdir foo/bar/baz'), 'hdfs dfs -mkdir -p foo/bar/baz'),\n        (Command('./bin/hdfs dfs -mkdir foo/bar/baz'), './bin/hdfs dfs -mkdir -p foo/bar/baz')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command",
            "\ntests/rules/test_mkdir_p.py:30: AssertionError"
        ],
        [
            "command = Command(script='./bin/hdfs dfs -mkdir foo/bar/baz', stdout='', stderr='')\nnew_command = './bin/hdfs dfs -mkdir -p foo/bar/baz'\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('mkdir foo/bar/baz'), 'mkdir -p foo/bar/baz'),\n        (Command('hdfs dfs -mkdir foo/bar/baz'), 'hdfs dfs -mkdir -p foo/bar/baz'),\n        (Command('./bin/hdfs dfs -mkdir foo/bar/baz'), './bin/hdfs dfs -mkdir -p foo/bar/baz')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command",
            "\ntests/rules/test_mkdir_p.py:30: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "command.script": {
                    "value": "'mkdir foo/bar/baz'",
                    "shape": "17"
                },
                "command": {
                    "value": "Command(script='mkdir foo/bar/baz', stdout='', stderr='')",
                    "shape": "3"
                }
            },
            {}
        ],
        [
            {
                "command.script": {
                    "value": "'hdfs dfs -mkdir foo/bar/baz'",
                    "shape": "27"
                },
                "command": {
                    "value": "Command(script='hdfs dfs -mkdir foo/bar/baz', stdout='', stderr='')",
                    "shape": "3"
                }
            },
            {}
        ],
        [
            {
                "command.script": {
                    "value": "'./bin/hdfs dfs -mkdir foo/bar/baz'",
                    "shape": "33"
                },
                "command": {
                    "value": "Command(script='./bin/hdfs dfs -mkdir foo/bar/baz', stdout='', stderr='')",
                    "shape": "3"
                }
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "command.script": {
                    "value": "'mkdir foo/bar/baz'",
                    "shape": "17"
                },
                "command": {
                    "value": "Command(script='mkdir foo/bar/baz', stdout='', stderr='')",
                    "shape": "3"
                }
            },
            {}
        ],
        [
            {
                "command.script": {
                    "value": "'hdfs dfs -mkdir foo/bar/baz'",
                    "shape": "27"
                },
                "command": {
                    "value": "Command(script='hdfs dfs -mkdir foo/bar/baz', stdout='', stderr='')",
                    "shape": "3"
                }
            },
            {}
        ],
        [
            {
                "command.script": {
                    "value": "'./bin/hdfs dfs -mkdir foo/bar/baz'",
                    "shape": "33"
                },
                "command": {
                    "value": "Command(script='./bin/hdfs dfs -mkdir foo/bar/baz', stdout='', stderr='')",
                    "shape": "3"
                }
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command"
            },
            {}
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}