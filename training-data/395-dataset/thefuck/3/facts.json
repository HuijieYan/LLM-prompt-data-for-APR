{
    "1.1.1": "def info(self):\n    \n    proc = Popen(['fish', '-c', 'echo $FISH_VERSION'],\n                 stdout=PIPE, stderr=DEVNULL)\n    version = proc.stdout.read().decode('utf-8').strip()\n    return u'Fish Shell {}'.format(version)\n",
    "1.1.2": "Returns the name and version of the current shell",
    "1.2.1": "class Fish(Generic)",
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/thefuck_3/thefuck/shells/fish.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_info(self, shell, Popen):\n        Popen.return_value.stdout.read.side_effect = [b'fish, version 3.5.9\\n']\n        assert shell.info() == 'Fish Shell 3.5.9'\n        assert Popen.call_args[0][0] == ['fish', '--version']"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_3/tests/shells/test_fish.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: assert 'Fish Shell f...version 3.5.9' == 'Fish Shell 3.5.9'\nE         - Fish Shell fish, version 3.5.9\nE         + Fish Shell 3.5.9"
        ]
    ],
    "2.1.2": [
        [
            "self = <tests.shells.test_fish.TestFish object at 0x10ae98c10>\nshell = <thefuck.shells.fish.Fish object at 0x10ae53c50>\nPopen = <MagicMock name='Popen' id='4477955152'>\n\n    def test_info(self, shell, Popen):\n        Popen.return_value.stdout.read.side_effect = [b'fish, version 3.5.9\\n']\n>       assert shell.info() == 'Fish Shell 3.5.9'",
            "\ntests/shells/test_fish.py:118: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {},
            {
                "proc": "<MagicMock name='Popen()' id='4336294416'>",
                "version": "'fish, version 3.5.9'",
                "proc.stdout.read": "<MagicMock name='Popen().stdout.read' id='4336317840'>",
                "proc.stdout": "<MagicMock name='Popen().stdout' id='4336319888'>"
            }
        ]
    ],
    "2.1.4": [
        [
            {},
            {
                "proc": "MagicMock",
                "version": "str",
                "proc.stdout.read": "MagicMock",
                "proc.stdout": "MagicMock"
            }
        ]
    ],
    "2.1.5": [
        [
            {},
            {
                "proc": "<MagicMock name='Popen()' id='4586576976'>",
                "version": "'3.5.9'",
                "proc.stdout.read": "<MagicMock name='Popen().stdout.read' id='4586357072'>",
                "proc.stdout": "<MagicMock name='Popen().stdout' id='4586432336'>"
            }
        ]
    ],
    "2.1.6": [
        [
            {},
            {
                "proc": "MagicMock",
                "version": "str",
                "proc.stdout.read": "MagicMock",
                "proc.stdout": "MagicMock"
            }
        ]
    ],
    "3.1.1": [
        "thefuck -v hangs Fish Shell initialisation with Oh-My-Fish plugin\n"
    ],
    "3.1.2": [
        "Oh-My-Fish's TheFuck plugin uses thefuck -v to decide when to regenerate functions. That triggers a recursive loop because of shells/fish.py:Fish.info().\n\nFix is on it's way.\n\nReference: oh-my-fish/plugin-thefuck#11\n"
    ]
}