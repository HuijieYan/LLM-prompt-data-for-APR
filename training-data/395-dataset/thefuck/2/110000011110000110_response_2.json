{
    "thefuck": [
        {
            "bugID": 2,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 107,
            "file_name": "thefuck/utils.py",
            "replace_code": "def get_all_executables():\n    \n    from thefuck.utils import get_alias\n    from thefuck.shells import shell\n    from thefuck.utils import Path\n    from six import PY2\n    import os\n    def _safe(fn, fallback):\n        try:\n            return fn()\n        except OSError:\n            return fallback\n    \n    tf_alias = get_alias()\n    tf_entry_points = ['thefuck', 'fuck']\n    \n    bins = []\n    for path in os.environ.get('PATH', '').split(':'):\n        items = _safe(lambda: list(Path(path).iterdir()), [])\n        for exe in items:\n            if not _safe(exe.is_dir, True) and exe.name not in tf_entry_points:\n                if PY2:\n                    bins.append(exe.name.decode('utf8'))\n                else:\n                    bins.append(exe.name)\n    aliases = []\n    for alias in shell.get_aliases():\n        if alias != tf_alias:\n            if PY2:\n                aliases.append(alias.decode('utf8'))\n            else:\n                aliases.append(alias)\n    \n    return bins + aliases"
        }
    ]
}