{
    "thefuck:5": {
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_5/thefuck/rules/git_push.py": {
            "buggy_functions": [
                {
                    "function_name": "match",
                    "function_code": "@git_support\ndef match(command):\n    return ('push' in command.script_parts\n            and 'set-upstream' in command.output)\n",
                    "decorators": [
                        "git_support"
                    ],
                    "docstring": null,
                    "start_line": 6,
                    "end_line": 9,
                    "variables": {
                        "command.script_parts": [
                            8
                        ],
                        "command": [
                            8,
                            9
                        ],
                        "command.output": [
                            9
                        ],
                        "git_support": [
                            6
                        ]
                    },
                    "filtered_variables": {
                        "command.script_parts": [
                            8
                        ],
                        "command": [
                            8,
                            9
                        ],
                        "command.output": [
                            9
                        ],
                        "git_support": [
                            6
                        ]
                    },
                    "diff_line_number": 9,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "command.script_parts": {
                                    "variable_value": "['git', 'push', 'origin']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "command": {
                                    "variable_value": "Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\nremote:\nremote: Create pull request for feature/set-upstream:\nremote:   https://bitbucket.org/set-upstream\nremote:\nTo git@bitbucket.org:test.git\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\n)",
                                    "variable_type": "Command",
                                    "variable_shape": null
                                },
                                "command.output": {
                                    "variable_value": "'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   https://bitbucket.org/set-upstream\\nremote:\\nTo git@bitbucket.org:test.git\\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "341"
                                },
                                "git_support": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "command.script_parts": {
                                    "variable_value": "['git', 'push', 'origin']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "command": {
                                    "variable_value": "Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\nremote:\nremote: Create pull request for feature/set-upstream:\nremote:   https://bitbucket.org/set-upstream\nremote:\nTo git@bitbucket.org:test.git\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\n)",
                                    "variable_type": "Command",
                                    "variable_shape": null
                                },
                                "command.output": {
                                    "variable_value": "'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   https://bitbucket.org/set-upstream\\nremote:\\nTo git@bitbucket.org:test.git\\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "341"
                                },
                                "git_support": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "command.script_parts": {
                                    "variable_value": "['git', 'push', 'origin']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "command": {
                                    "variable_value": "Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\nremote:\nremote: Create pull request for feature/set-upstream:\nremote:   https://bitbucket.org/set-upstream\nremote:\nTo git@bitbucket.org:test.git\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\n)",
                                    "variable_type": "Command",
                                    "variable_shape": null
                                },
                                "command.output": {
                                    "variable_value": "'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   https://bitbucket.org/set-upstream\\nremote:\\nTo git@bitbucket.org:test.git\\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "341"
                                },
                                "git_support": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "command.script_parts": {
                                    "variable_value": "['git', 'push', 'origin']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "command": {
                                    "variable_value": "Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\nremote:\nremote: Create pull request for feature/set-upstream:\nremote:   https://bitbucket.org/set-upstream\nremote:\nTo git@bitbucket.org:test.git\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\n)",
                                    "variable_type": "Command",
                                    "variable_shape": null
                                },
                                "command.output": {
                                    "variable_value": "'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   https://bitbucket.org/set-upstream\\nremote:\\nTo git@bitbucket.org:test.git\\n   e5e7fbb..700d998  feature/set-upstream -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "341"
                                },
                                "git_support": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "@git_support\ndef match(command):\n    return ('push' in command.script_parts\n            and 'set-upstream' in command.output)",
                "def _get_upstream_option_index(command_parts):\n    if '--set-upstream' in command_parts:\n        return command_parts.index('--set-upstream')\n    elif '-u' in command_parts:\n        return command_parts.index('-u')\n    else:\n        return None",
                "@git_support\ndef get_new_command(command):\n    # If --set-upstream or -u are passed, remove it and its argument. This is\n    # because the remaining arguments are concatenated onto the command suggested\n    # by git, which includes --set-upstream and its argument\n    command_parts = command.script_parts[:]\n    upstream_option_index = _get_upstream_option_index(command_parts)\n\n    if upstream_option_index is not None:\n        command_parts.pop(upstream_option_index)\n\n        # In case of `git push -u` we don't have next argument:\n        if len(command_parts) > upstream_option_index:\n            command_parts.pop(upstream_option_index)\n    else:\n        # the only non-qualified permitted options are the repository and refspec; git's\n        # suggestion include them, so they won't be lost, but would be duplicated otherwise.\n        push_idx = command_parts.index('push') + 1\n        while len(command_parts) > push_idx and command_parts[len(command_parts) - 1][0] != '-':\n            command_parts.pop(len(command_parts) - 1)\n\n    arguments = re.findall(r'git push (.*)', command.output)[0].replace(\"'\", r\"\\'\").strip()\n    return replace_argument(\" \".join(command_parts), 'push',\n                            'push {}'.format(arguments))"
            ],
            "inscope_function_signatures": [
                "match(command)",
                "_get_upstream_option_index(command_parts)",
                "get_new_command(command)"
            ],
            "variables_in_file": {
                "command.script_parts": [
                    8,
                    26
                ],
                "command": [
                    8,
                    9,
                    26,
                    42
                ],
                "command.output": [
                    9,
                    42
                ],
                "git_support": [
                    21,
                    6
                ],
                "command_parts": [
                    33,
                    34,
                    38,
                    39,
                    40,
                    43,
                    13,
                    14,
                    15,
                    16,
                    26,
                    27,
                    30
                ],
                "command_parts.index": [
                    16,
                    38,
                    14
                ],
                "upstream_option_index": [
                    33,
                    34,
                    27,
                    29,
                    30
                ],
                "_get_upstream_option_index": [
                    27
                ],
                "command_parts.pop": [
                    40,
                    34,
                    30
                ],
                "len": [
                    40,
                    33,
                    39
                ],
                "push_idx": [
                    38,
                    39
                ],
                "arguments": [
                    42,
                    44
                ],
                "strip": [
                    42
                ],
                "replace": [
                    42
                ],
                "re.findall": [
                    42
                ],
                "re": [
                    42
                ],
                "replace_argument": [
                    43
                ],
                "join": [
                    43
                ],
                "format": [
                    44
                ]
            },
            "filtered_variables_in_file": {
                "command.script_parts": [
                    8,
                    26
                ],
                "command": [
                    8,
                    9,
                    26,
                    42
                ],
                "command.output": [
                    9,
                    42
                ],
                "git_support": [
                    21,
                    6
                ],
                "command_parts": [
                    33,
                    34,
                    38,
                    39,
                    40,
                    43,
                    13,
                    14,
                    15,
                    16,
                    26,
                    27,
                    30
                ],
                "command_parts.index": [
                    16,
                    38,
                    14
                ],
                "upstream_option_index": [
                    33,
                    34,
                    27,
                    29,
                    30
                ],
                "_get_upstream_option_index": [
                    27
                ],
                "command_parts.pop": [
                    40,
                    34,
                    30
                ],
                "push_idx": [
                    38,
                    39
                ],
                "arguments": [
                    42,
                    44
                ],
                "strip": [
                    42
                ],
                "replace": [
                    42
                ],
                "re.findall": [
                    42
                ],
                "re": [
                    42
                ],
                "replace_argument": [
                    43
                ],
                "join": [
                    43
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_5/tests/rules/test_git_push.py",
                "test_function": "test_match_bitbucket",
                "test_function_code": "def test_match_bitbucket(output_bitbucket):\n    assert not match(Command('git push origin', output_bitbucket))",
                "test_error": "AssertionError: assert not True  +  where True = match(Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for f...m -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n))  +    where Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for f...m -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n) = Command('git push origin', 'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   http...-> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n')",
                "full_test_error": "output_bitbucket = 'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   http...-> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n'\n\n    def test_match_bitbucket(output_bitbucket):\n>       assert not match(Command('git push origin', output_bitbucket))\nE       AssertionError: assert not True\nE        +  where True = match(Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for f...m -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n))\nE        +    where Command(script=git push origin, output=Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for f...m -> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n) = Command('git push origin', 'Total 0 (delta 0), reused 0 (delta 0)\\nremote:\\nremote: Create pull request for feature/set-upstream:\\nremote:   http...-> feature/set-upstream\\nBranch feature/set-upstream set up to track remote branch feature/set-upstream from origin.\\n')\n\ntests/rules/test_git_push.py:39: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}