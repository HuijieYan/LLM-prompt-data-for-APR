{
    "scrapy": [
        {
            "bugID": 15,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 43,
            "file_name": "scrapy/utils/url.py",
            "replace_code": "def _safe_ParseResult(parts, encoding='utf-8', path_encoding='utf-8'):\n    from urllib.parse import quote, unquote\n    return (\n        str(parts.scheme),\n        str(parts.netloc.encode('idna'), encoding='utf-8'),\n    \n        # default encoding for path component SHOULD be UTF-8\n        quote(parts.path, _safe_chars),\n        quote(parts.params, _safe_chars),\n    \n        # encoding of query and fragment follows page encoding\n        # or form-charset (if known and passed)\n        quote(parts.query, encoding),\n        quote(parts.fragment, encoding)\n    )"
        }
    ]
}