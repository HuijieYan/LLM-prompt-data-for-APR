{
    "scrapy": [
        {
            "bugID": 12,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 48,
            "file_name": "scrapy/selector/unified.py",
            "replace_code": "def __init__(self, response=None, text=None, type=None, root=None, _root=None, **kwargs):\n        st = _st(response, type or self._default_type)\n    \n        if _root is not None:\n            warnings.warn(\"Argument `_root` is deprecated, use `root` instead\",\n                          ScrapyDeprecationWarning, stacklevel=2)\n            if root is None:\n                root = _root\n            else:\n                warnings.warn(\"Ignoring deprecated `_root` argument, using provided `root`\")\n    \n        if text is not None and response is not None:\n            raise ValueError('Received both response and text')\n        elif text is not None:\n            response = TextResponse(url=kwargs.get('base_url', ''), body=text.encode('utf-8'))\n        elif response is not None:\n            text = response.text\n            kwargs.setdefault('base_url', response.url)\n    \n        self.response = response\n        super(Selector, self).__init__(text=text, type=st, root=root, **kwargs)",
            "import_list": []
        }
    ]
}