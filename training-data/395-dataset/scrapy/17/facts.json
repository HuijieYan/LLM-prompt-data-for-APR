{
    "1.1.1": "def response_status_message(status):\n    \n    return '%s %s' % (status, to_native_str(http.RESPONSES.get(int(status))))\n",
    "1.1.2": "Return status code plus status text descriptive message\n\n>>> response_status_message(200)\n'200 OK'\n\n>>> response_status_message(404)\n'404 Not Found'",
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.2.4": null,
    "1.2.5": null,
    "1.3.1": "scrapy/utils/response.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_response_status_message(self):\n        self.assertEqual(response_status_message(200), '200 OK')\n        self.assertEqual(response_status_message(404), '404 Not Found')\n        self.assertEqual(response_status_message(573), \"573 Unknown Status\")"
    ],
    "1.4.2": [
        "tests/test_utils_response.py"
    ],
    "2.1.1": [
        [
            "E           TypeError: to_unicode must receive a bytes, str or unicode object, got NoneType"
        ]
    ],
    "2.1.2": [
        [
            "self = <tests.test_utils_response.ResponseUtilsTest testMethod=test_response_status_message>\n\n    def test_response_status_message(self):\n        self.assertEqual(response_status_message(200), '200 OK')\n        self.assertEqual(response_status_message(404), '404 Not Found')\n>       self.assertEqual(response_status_message(573), \"573 Unknown Status\")\n\n/Volumes/SSD2T/bgp_envs/repos/scrapy_17/tests/test_utils_response.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Volumes/SSD2T/bgp_envs/repos/scrapy_17/scrapy/utils/response.py:57: in response_status_message\n    return '%s %s' % (status, to_native_str(http.RESPONSES.get(int(status))))\n/Volumes/SSD2T/bgp_envs/repos/scrapy_17/scrapy/utils/python.py:129: in to_native_str\n    return to_unicode(text, encoding, errors)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntext = None, encoding = None, errors = 'strict'\n\n    def to_unicode(text, encoding=None, errors='strict'):\n        \"\"\"Return the unicode representation of a bytes object `text`. If `text`\n        is already an unicode object, return it as-is.\"\"\"\n        if isinstance(text, six.text_type):\n            return text\n        if not isinstance(text, (bytes, six.text_type)):\n>           raise TypeError('to_unicode must receive a bytes, str or unicode '\n                            'object, got %s' % type(text).__name__)",
            "\n/Volumes/SSD2T/bgp_envs/repos/scrapy_17/scrapy/utils/python.py:103: TypeError"
        ]
    ],
    "2.1.3": [
        [
            {
                "status": {
                    "value": "200",
                    "shape": null
                }
            },
            {}
        ],
        [
            {
                "status": {
                    "value": "404",
                    "shape": null
                }
            },
            {}
        ],
        [
            {
                "status": {
                    "value": "573",
                    "shape": null
                }
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "status": "int"
            },
            {}
        ],
        [
            {
                "status": "int"
            },
            {}
        ],
        [
            {
                "status": "int"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "status": {
                    "value": "200",
                    "shape": null
                }
            },
            {}
        ],
        [
            {
                "status": {
                    "value": "404",
                    "shape": null
                }
            },
            {}
        ],
        [
            {
                "status": {
                    "value": "573",
                    "shape": null
                }
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "status": "int"
            },
            {}
        ],
        [
            {
                "status": "int"
            },
            {}
        ],
        [
            {
                "status": "int"
            },
            {}
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}