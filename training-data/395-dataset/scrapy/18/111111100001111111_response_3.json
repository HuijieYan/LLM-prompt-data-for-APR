{
    "scrapy": [
        {
            "bugID": 18,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 60,
            "file_name": "scrapy/responsetypes.py",
            "replace_code": "def from_content_disposition(self, content_disposition):\n        try:\n            # Decode the content-disposition using a combination of encodings (utf-8 and latin-1)\n            content_disposition_str = content_disposition.decode('utf-8', errors='replace')\n            if '?' in content_disposition_str:\n                encoding, _, filename = content_disposition_str.partition('?')\n                if encoding.lower() == 'utf-8':\n                    return re.sub(r'(=[\\w\\d]{2})', lambda m: bytes.fromhex(m.group(1)[1:]).decode('utf-8'), filename)\n                elif encoding.lower() == 'iso-8859-1':\n                    return re.sub(r'(=[\\w\\d]{2})', lambda m: bytes.fromhex(m.group(1)[1:]).decode('latin-1'), filename)\n            return content_disposition_str\n        except (UnicodeDecodeError, IndexError):\n            return Response",
            "imports": [
                "import re"
            ]
        }
    ]
}