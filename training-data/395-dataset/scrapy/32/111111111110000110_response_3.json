{
    "scrapy": [
        {
            "bugID": 32,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 209,
            "file_name": "scrapy/crawler.py",
            "replace_code": "def __init__(self, spidercls, settings=None, **kwargs):\n    if isinstance(spidercls, Crawler):\n        spidercls.set_crawler(self)\n    elif spidercls is not None:\n        if kwargs or settings:\n            raise TypeError(\"When passing a spidercls as a positional argument, \"\n                            \"settings must be passed as a keyword argument\")\n        spidercls = self.spider_loader.load(spidercls)\n        if spidercls is None:\n            raise ValueError(\"Spider not found: {}\".format(spidercls))\n    self.spidercls = spidercls\n    self.settings = dict(self.settings.editable)\n    if settings:\n        self.settings.setdict(settings)\n    self.settings.freeze()\n    self.signals = SignalManager(self)\n    self.stats = load_object(self.settings['STATS_CLASS'])()",
            "imports": []
        }
    ]
}