{
    "scrapy": [
        {
            "bugID": 38,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 165,
            "file_name": "scrapy/http/request/form.py",
            "replace_code": "def _get_clickable(clickdata, form):\n    from lxml import etree\n    import six\n    \"\"\"\n    Returns the clickable element specified in clickdata,\n    if the latter is given. If not, it returns the first\n    clickable element found\n    \"\"\"\n    if clickdata is None:\n        clickables = form.xpath(\n            'descendant::*[(self::input or self::button) and @type=\"submit\"]'\n            '|descendant::button[not(@type)]'\n        )\n    else:\n        xpath = './/*' + ''.join([f'[@{key}=\"{value}\"]' for key, value in clickdata.items()])\n        clickables = form.xpath(xpath)\n    \n    if len(clickables) == 0:\n        return None\n    else:\n        el = clickables[0]\n        return (el.get('name'), el.get('value') or '')"
        }
    ]
}