{
    "1.1.1": "def generate_commands(vlan_id, to_set, to_remove):\n    commands = []\n    if \"vlan_id\" in to_remove:\n        return [\"no vlan {0}\".format(vlan_id)]\n\n    for key, value in to_set.items():\n        if key == \"vlan_id\" or value is None:\n            continue\n\n        commands.append(\"{0} {1}\".format(key, value))\n\n    for key in to_remove:\n        commands.append(\"no {0}\".format(key))\n\n    if commands:\n        commands.insert(0, \"vlan {0}\".format(vlan_id))\n\n    return commands\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/ansible_7/lib/ansible/module_utils/network/eos/config/vlans/vlans.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_eos_vlan_replaced(self):\n        self.execute_show_command.return_value = []\n        set_module_args(dict(\n            config=[dict(\n                vlan_id=10,\n                name=\"tenreplaced\",\n                state=\"suspend\"\n            )], state=\"replaced\"\n        ))\n        commands = ['vlan 10', 'name tenreplaced', 'state suspend']\n        self.execute_module(changed=True, commands=commands)"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/ansible_7/test/units/modules/network/eos/test_eos_vlans.py"
    ],
    "2.1.1": [
        [
            "E   AssertionError: Lists differ: ['name tenreplaced', 'state suspend', 'vlan 10'] != ['name tenreplaced', 'no name', 'state suspend', 'vlan 10']\nE   \nE   First differing element 1:\nE   'state suspend'\nE   'no name'\nE   \nE   Second list contains 1 additional elements.\nE   First extra element 3:\nE   'vlan 10'\nE   \nE   - ['name tenreplaced', 'state suspend', 'vlan 10']\nE   + ['name tenreplaced', 'no name', 'state suspend', 'vlan 10']\nE   ?                      +++++++++++\nE    : ['vlan 10', 'name tenreplaced', 'state suspend', 'no name']"
        ]
    ],
    "2.1.2": [
        [
            "self = <units.modules.network.eos.test_eos_vlans.TestEosVlansModule testMethod=test_eos_vlan_replaced>\n\n    def test_eos_vlan_replaced(self):\n        self.execute_show_command.return_value = []\n        set_module_args(dict(\n            config=[dict(\n                vlan_id=10,\n                name=\"tenreplaced\",\n                state=\"suspend\"\n            )], state=\"replaced\"\n        ))\n        commands = ['vlan 10', 'name tenreplaced', 'state suspend']\n>       self.execute_module(changed=True, commands=commands)\n\ntest/units/modules/network/eos/test_eos_vlans.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/units/modules/network/eos/eos_module.py:79: in execute_module\n    self.assertEqual(sorted(commands), sorted(result['commands']), result['commands'])"
        ]
    ],
    "2.1.3": [
        [
            {
                "to_remove": "{'name': 'ten'}",
                "vlan_id": "10",
                "to_set": "{'name': 'tenreplaced', 'state': 'suspend'}"
            },
            {
                "commands": "['vlan 10', 'name tenreplaced', 'state suspend', 'no name']",
                "key": "'name'",
                "value": "'suspend'"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "to_remove": "dict",
                "vlan_id": "int",
                "to_set": "dict"
            },
            {
                "commands": "list",
                "key": "str",
                "value": "str"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "to_remove": "{'name': 'ten'}",
                "vlan_id": "10",
                "to_set": "{'name': 'tenreplaced', 'state': 'suspend'}"
            },
            {
                "commands": "['vlan 10', 'name tenreplaced', 'state suspend']",
                "key": "'state'",
                "value": "'suspend'"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "to_remove": "dict",
                "vlan_id": "int",
                "to_set": "dict"
            },
            {
                "commands": "list",
                "key": "str",
                "value": "str"
            }
        ]
    ],
    "3.1.1": [
        "eos_vlans using state parameter replaced is giving odd behavior\n"
    ],
    "3.1.2": [
        "SUMMARY\nI assume that the vlan-id is the winning key that will replace other data. I am seeing some odd behavior where if I have something like\n\non-box before\n\n  - vlan_id: 80\non-box after\n\n  - vlan_id: 80\nbut i am actually sending a key,value name: sean\n\n  commands:\n  - vlan 80\n  - name sean\n  - no name\nbut for some reason it nos the name....\n\nISSUE TYPE\nBug Report\nCOMPONENT NAME\neos_vlans\n\nANSIBLE VERSION\nansible 2.9.2\n  config file = /home/student1/.ansible.cfg\n  configured module search path = [u'/home/student1/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /usr/bin/ansible\n  python version = 2.7.5 (default, Jun 11 2019, 14:33:56) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]\nCONFIGURATION\nDEFAULT_HOST_LIST(/home/student1/.ansible.cfg) = [u'/home/student1/networking-workshop/lab_inventory/\nDEFAULT_STDOUT_CALLBACK(/home/student1/.ansible.cfg) = yaml\nDEFAULT_TIMEOUT(/home/student1/.ansible.cfg) = 60\nDEPRECATION_WARNINGS(/home/student1/.ansible.cfg) = False\nHOST_KEY_CHECKING(/home/student1/.ansible.cfg) = False\nPERSISTENT_COMMAND_TIMEOUT(/home/student1/.ansible.cfg) = 200\nPERSISTENT_CONNECT_TIMEOUT(/home/student1/.ansible.cfg) = 200\nRETRY_FILES_ENABLED(/home/student1/.ansible.cfg) = False\nOS / ENVIRONMENT\n[student1@ansible playbooks]$ cat /etc/*release\nNAME=\"Red Hat Enterprise Linux Server\"\nVERSION=\"7.7 (Maipo)\"\nID=\"rhel\"\nID_LIKE=\"fedora\"\nVARIANT=\"Server\"\nVARIANT_ID=\"server\"\nVERSION_ID=\"7.7\"\nPRETTY_NAME=\"Red Hat Enterprise Linux Server 7.7 (Maipo)\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:redhat:enterprise_linux:7.7:GA:server\"\nHOME_URL=\"https://www.redhat.com/\"\nBUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\n\nREDHAT_BUGZILLA_PRODUCT=\"Red Hat Enterprise Linux 7\"\nREDHAT_BUGZILLA_PRODUCT_VERSION=7.7\nREDHAT_SUPPORT_PRODUCT=\"Red Hat Enterprise Linux\"\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7.7\"\nRed Hat Enterprise Linux Server release 7.7 (Maipo)\nRed Hat Enterprise Linux Server release 7.7 (Maipo)\nSTEPS TO REPRODUCE\nhttps://gist.github.com/IPvSean/028b36bab5783dfd4f4a01a2c4063613\n\nEXPECTED RESULTS\nvlan-id would win and over-ride\n\nACTUAL RESULTS\nthe vlan name is being stripped out for some reason, see the gist link above\n"
    ]
}