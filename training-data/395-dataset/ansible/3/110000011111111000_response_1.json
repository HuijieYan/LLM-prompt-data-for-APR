{
    "ansible": [
        {
            "bugID": 3,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 301,
            "file_name": "lib/ansible/module_utils/facts/system/distribution.py",
            "replace_code": "def parse_distribution_file_Debian(self):\n        debian_facts = {}\n        data = self.data\n        path = self.path\n        collected_facts = self.collected_facts\n\n        if 'Debian' in data or 'Raspbian' in data:\n            debian_facts['distribution'] = 'Debian'\n            release = re.search(r\"PRETTY_NAME=[^(]+ \\(?([^)]+?)\\)\", data)\n            if release:\n                debian_facts['distribution_release'] = release.groups()[0]\n\n            if collected_facts['distribution_release'] == 'NA' and 'Debian' in data:\n                dpkg_cmd = self.module.get_bin_path('dpkg')\n                if dpkg_cmd:\n                    cmd = \"%s --status tzdata|grep Provides|cut -f2 -d'-'\".format(dpkg_cmd)\n                    rc, out, err = self.module.run_command(cmd)\n                    if rc == 0:\n                        debian_facts['distribution_release'] = out.strip()\n        elif 'Ubuntu' in data:\n            debian_facts['distribution'] = 'Ubuntu'\n        elif 'SteamOS' in data:\n            debian_facts['distribution'] = 'SteamOS'\n        elif path == '/etc/lsb-release' and 'Kali' in data:\n            debian_facts['distribution'] = 'Kali'\n            release = re.search('DISTRIB_RELEASE=(.*)', data)\n            if release:\n                debian_facts['distribution_release'] = release.groups()[0]\n        elif 'Devuan' in data:\n            debian_facts['distribution'] = 'Devuan'\n            release = re.search(r\"PRETTY_NAME=\\\"?[^(\\\"]+ \\(?([^) \\\"]+)\\)?\", data)\n            if release:\n                debian_facts['distribution_release'] = release.groups()[0]\n            version = re.search(r\"VERSION_ID=\\\"(.*)\\\"\", data)\n            if version:\n                debian_facts['distribution_version'] = version.group(1)\n                debian_facts['distribution_major_version'] = version.group(1)\n\n        return True, debian_facts",
            "import_list": [
                "import re"
            ]
        }
    ]
}