{
    "black": [
        {
            "bugID": 13,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 337,
            "file_name": "blib2to3/pgen2/tokenize.py",
            "replace_code": "def generate_tokens(readline):\n    # (previous code...)\n    \n    while 1:                                   # loop over lines in stream\n        # (previous code...)\n        if column > indents[-1]:           # count indents\n            indents.append(column)\n            yield (INDENT, line[:pos], (lnum, 0), (lnum, pos), line)\n        \n        while column < indents[-1]:        # count dedents\n            if column not in indents:\n                raise IndentationError(\n                    \"unindent does not match any outer indentation level\",\n                    (\"<tokenize>\", lnum, pos, line))\n            indents = indents[:-1]\n\n            # Handle async/await logic\n            if async_def and async_def_indent >= indents[-1]:\n                async_def = False\n                async_def_nl = False\n                async_def_indent = 0\n                yield (DEDENT, '', (lnum, pos), (lnum, pos), line)\n            elif async_def and async_def_nl and async_def_indent < indents[-1]:\n                async_def = False\n                async_def_nl = False\n                async_def_indent = 0\n                yield (DEDENT, '', (lnum, pos), (lnum, pos), line)",
            "import_list": []
        }
    ]
}