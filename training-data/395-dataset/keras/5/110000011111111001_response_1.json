{
    "keras": [
        {
            "bugID": 5,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 123,
            "file_name": "keras/utils/data_utils.py",
            "replace_code": "def get_file(fname,\n             origin,\n             untar=None,\n             md5_hash=None,\n             file_hash=None,\n             cache_subdir='datasets',\n             hash_algorithm='auto',\n             extract=False,\n             archive_format='auto',\n             cache_dir=os.path.join(os.path.expanduser('~'), '.keras')):\n    import os\n    import tarfile\n    import zipfile\n    from urllib.parse import urljoin\n    from urllib.request import urlretrieve\n    from urllib.error import HTTPError, URLError\n    from keras.utils.generic_utils import Progbar\n    from keras import backend as K\n    import shutil\n    \"\"\"Downloads a file from a URL if it not already in the cache.\n    ... (rest of the docstring)\n    \"\"\"  # noqa\n    \n    if md5_hash is not None:\n        file_hash = md5_hash\n        hash_algorithm = 'md5'\n    \n    datadir = os.path.join(cache_dir, cache_subdir)\n    os.makedirs(datadir, exist_ok=True)\n    \n    fpath = os.path.join(datadir, fname)\n    download = False\n    \n    if not os.path.exists(fpath) or file_hash is not None:\n        download = True\n    \n    if download:\n        print('Downloading data from', origin)\n    \n        try:\n            urlretrieve(origin, fpath)\n        except (HTTPError, URLError) as e:\n            error_msg = 'URL fetch failure on {} : {} -- {}'.format(origin, e.code, e.msg)\n            raise Exception(error_msg)\n    \n    if (untar or extract) and not os.path.exists(fpath):\n        _extract_archive(fpath, datadir, archive_format)\n    \n    return fpath"
        }
    ]
}