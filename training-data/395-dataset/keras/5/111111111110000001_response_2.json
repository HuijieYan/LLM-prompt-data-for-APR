{
    "keras": [
        {
            "bugID": 5,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 123,
            "file_name": "keras/utils/data_utils.py",
            "replace_code": "def get_file(fname, origin, untar=False, md5_hash=None, file_hash=None,\n             cache_subdir='datasets', hash_algorithm='auto', extract=False,\n             archive_format='auto', cache_dir=None):\n    # (existing code)\n    # File path construction and download/extraction logic here...\n\n    import os\n    import tarfile\n    import zipfile\n    from urllib.parse import urljoin, pathname2url\n    from keras import K\n    if extract:\n        if untar:\n            untar_fpath = os.path.join(datadir, fname)\n            if os.path.exists(untar_fpath):\n                os.remove(untar_fpath)\n            _extract_archive(fpath, datadir, archive_format='tar')\n            return untar_fpath\n        else:\n            _extract_archive(fpath, datadir, archive_format)\n            return fpath\n    \n    return fpath"
        }
    ]
}