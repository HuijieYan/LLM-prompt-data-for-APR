{
    "1.1.1": "def call(self, inputs, states, training=None):\n    # dropout matrices for input units\n    dp_mask = self._dropout_mask\n    # dropout matrices for recurrent units\n    rec_dp_mask = self._recurrent_dropout_mask\n\n    h_tm1 = states[0]  # previous memory state\n    c_tm1 = states[1]  # previous carry state\n\n    if self.implementation == 1:\n        if 0 < self.dropout < 1.:\n            inputs_i = inputs * dp_mask[0]\n            inputs_f = inputs * dp_mask[1]\n            inputs_c = inputs * dp_mask[2]\n            inputs_o = inputs * dp_mask[3]\n        else:\n            inputs_i = inputs\n            inputs_f = inputs\n            inputs_c = inputs\n            inputs_o = inputs\n        x_i = K.dot(inputs_i, self.kernel_i) + self.bias_i\n        x_f = K.dot(inputs_f, self.kernel_f) + self.bias_f\n        x_c = K.dot(inputs_c, self.kernel_c) + self.bias_c\n        x_o = K.dot(inputs_o, self.kernel_o) + self.bias_o\n\n        if 0 < self.recurrent_dropout < 1.:\n            h_tm1_i = h_tm1 * rec_dp_mask[0]\n            h_tm1_f = h_tm1 * rec_dp_mask[1]\n            h_tm1_c = h_tm1 * rec_dp_mask[2]\n            h_tm1_o = h_tm1 * rec_dp_mask[3]\n        else:\n            h_tm1_i = h_tm1\n            h_tm1_f = h_tm1\n            h_tm1_c = h_tm1\n            h_tm1_o = h_tm1\n        i = self.recurrent_activation(x_i + K.dot(h_tm1_i,\n                                                  self.recurrent_kernel_i))\n        f = self.recurrent_activation(x_f + K.dot(h_tm1_f,\n                                                  self.recurrent_kernel_f))\n        c = f * c_tm1 + i * self.activation(x_c + K.dot(h_tm1_c,\n                                                        self.recurrent_kernel_c))\n        o = self.recurrent_activation(x_o + K.dot(h_tm1_o,\n                                                  self.recurrent_kernel_o))\n    else:\n        if 0. < self.dropout < 1.:\n            inputs *= dp_mask[0]\n        z = K.dot(inputs, self.kernel)\n        if 0. < self.recurrent_dropout < 1.:\n            h_tm1 *= rec_dp_mask[0]\n        z += K.dot(h_tm1, self.recurrent_kernel)\n        if self.use_bias:\n            z = K.bias_add(z, self.bias)\n\n        z0 = z[:, :self.units]\n        z1 = z[:, self.units: 2 * self.units]\n        z2 = z[:, 2 * self.units: 3 * self.units]\n        z3 = z[:, 3 * self.units:]\n\n        i = self.recurrent_activation(z0)\n        f = self.recurrent_activation(z1)\n        c = f * c_tm1 + i * self.activation(z2)\n        o = self.recurrent_activation(z3)\n\n    h = o * self.activation(c)\n    if 0 < self.dropout + self.recurrent_dropout:\n        if training is None:\n            h._uses_learning_phase = True\n    return h, [h, c]\n",
    "1.1.2": null,
    "1.2.1": "class LSTMCell(Layer)",
    "1.2.2": "Cell class for the LSTM layer.\n\n# Arguments\n    units: Positive integer, dimensionality of the output space.\n    activation: Activation function to use\n        (see [activations](../activations.md)).\n        If you pass None, no activation is applied\n        (ie. \"linear\" activation: `a(x) = x`).\n    recurrent_activation: Activation function to use\n        for the recurrent step\n        (see [activations](../activations.md)).\n    use_bias: Boolean, whether the layer uses a bias vector.\n    kernel_initializer: Initializer for the `kernel` weights matrix,\n        used for the linear transformation of the inputs.\n        (see [initializers](../initializers.md)).\n    recurrent_initializer: Initializer for the `recurrent_kernel`\n        weights matrix,\n        used for the linear transformation of the recurrent state.\n        (see [initializers](../initializers.md)).\n    bias_initializer: Initializer for the bias vector\n        (see [initializers](../initializers.md)).\n    unit_forget_bias: Boolean.\n        If True, add 1 to the bias of the forget gate at initialization.\n        Setting it to true will also force `bias_initializer=\"zeros\"`.\n        This is recommended in [Jozefowicz et al.](http://www.jmlr.org/proceedings/papers/v37/jozefowicz15.pdf)\n    kernel_regularizer: Regularizer function applied to\n        the `kernel` weights matrix\n        (see [regularizer](../regularizers.md)).\n    recurrent_regularizer: Regularizer function applied to\n        the `recurrent_kernel` weights matrix\n        (see [regularizer](../regularizers.md)).\n    bias_regularizer: Regularizer function applied to the bias vector\n        (see [regularizer](../regularizers.md)).\n    activity_regularizer: Regularizer function applied to\n        the output of the layer (its \"activation\").\n        (see [regularizer](../regularizers.md)).\n    kernel_constraint: Constraint function applied to\n        the `kernel` weights matrix\n        (see [constraints](../constraints.md)).\n    recurrent_constraint: Constraint function applied to\n        the `recurrent_kernel` weights matrix\n        (see [constraints](../constraints.md)).\n    bias_constraint: Constraint function applied to the bias vector\n        (see [constraints](../constraints.md)).\n    dropout: Float between 0 and 1.\n        Fraction of the units to drop for\n        the linear transformation of the inputs.\n    recurrent_dropout: Float between 0 and 1.\n        Fraction of the units to drop for\n        the linear transformation of the recurrent state.\n    implementation: Implementation mode, either 1 or 2.",
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/keras_45/keras/layers/recurrent.py",
    "1.3.2": [
        "states(self)",
        "states(self, states)",
        "units(self)",
        "activation(self)",
        "use_bias(self)",
        "dropout(self)",
        "recurrent_dropout(self)",
        "units(self)",
        "activation(self)",
        "recurrent_activation(self)",
        "use_bias(self)",
        "dropout(self)",
        "recurrent_dropout(self)",
        "implementation(self)",
        "units(self)",
        "activation(self)",
        "recurrent_activation(self)",
        "use_bias(self)",
        "dropout(self)",
        "recurrent_dropout(self)",
        "implementation(self)"
    ],
    "1.4.1": [
        "@rnn_test\ndef test_implementation_mode(layer_class):\n    for mode in [1, 2]:\n        # Without dropout\n        layer_test(layer_class,\n                   kwargs={'units': units,\n                           'implementation': mode},\n                   input_shape=(num_samples, timesteps, embedding_dim))\n        # With dropout\n        layer_test(layer_class,\n                   kwargs={'units': units,\n                           'implementation': mode,\n                           'dropout': 0.1,\n                           'recurrent_dropout': 0.1},\n                   input_shape=(num_samples, timesteps, embedding_dim))\n        # Without bias\n        layer_test(layer_class,\n                   kwargs={'units': units,\n                           'implementation': mode,\n                           'use_bias': False},\n                   input_shape=(num_samples, timesteps, embedding_dim))"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/keras_45/tests/keras/layers/recurrent_test.py"
    ],
    "2.1.1": [
        [
            "E         ValueError: None values not supported."
        ]
    ],
    "2.1.2": [
        [
            "layer_class = <class 'keras.layers.recurrent.LSTM'>\n\n    @rnn_test\n    def test_implementation_mode(layer_class):\n        for mode in [1, 2]:\n            # Without dropout\n            layer_test(layer_class,\n                       kwargs={'units': units,\n                               'implementation': mode},\n                       input_shape=(num_samples, timesteps, embedding_dim))\n            # With dropout\n            layer_test(layer_class,\n                       kwargs={'units': units,\n                               'implementation': mode,\n                               'dropout': 0.1,\n                               'recurrent_dropout': 0.1},\n                       input_shape=(num_samples, timesteps, embedding_dim))\n            # Without bias\n            layer_test(layer_class,\n                       kwargs={'units': units,\n                               'implementation': mode,\n                               'use_bias': False},\n>                      input_shape=(num_samples, timesteps, embedding_dim))\n\ntests/keras/layers/recurrent_test.py:191: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nkeras/utils/test_utils.py:85: in layer_test\n    y = layer(x)\nkeras/layers/recurrent.py:483: in __call__\n    return super(RNN, self).__call__(inputs, **kwargs)\nkeras/engine/topology.py:603: in __call__\n    output = self.call(inputs, **kwargs)\nkeras/layers/recurrent.py:2004: in call\n    initial_state=initial_state)\nkeras/layers/recurrent.py:590: in call\n    input_length=timesteps)\nkeras/backend/tensorflow_backend.py:2533: in rnn\n    outputs, _ = step_function(inputs[0], initial_states + constants)\nkeras/layers/recurrent.py:581: in step\n    return self.cell.call(inputs, states, **kwargs)\nkeras/layers/recurrent.py:1806: in call\n    x_i = K.dot(inputs_i, self.kernel_i) + self.bias_i\n../../envs/keras_45/lib/python3.7/site-packages/tensorflow_core/python/ops/math_ops.py:903: in binary_op_wrapper\n    y, dtype_hint=x.dtype.base_dtype, name=\"y\")\n../../envs/keras_45/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:1242: in convert_to_tensor_v2\n    as_ref=False)\n../../envs/keras_45/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py:1297: in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n../../envs/keras_45/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py:286: in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n../../envs/keras_45/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py:227: in constant\n    allow_broadcast=True)\n../../envs/keras_45/lib/python3.7/site-packages/tensorflow_core/python/framework/constant_op.py:265: in _constant_impl\n    allow_broadcast=allow_broadcast))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nvalues = None, dtype = None, shape = None, verify_shape = False\nallow_broadcast = True\n\n    @tf_export(\"make_tensor_proto\")\n    def make_tensor_proto(values, dtype=None, shape=None, verify_shape=False,\n                          allow_broadcast=False):\n      \"\"\"Create a TensorProto.\n    \n      In TensorFlow 2.0, representing tensors as protos should no longer be a\n      common workflow. That said, this utility function is still useful for\n      generating TF Serving request protos:\n    \n        request = tensorflow_serving.apis.predict_pb2.PredictRequest()\n        request.model_spec.name = \"my_model\"\n        request.model_spec.signature_name = \"serving_default\"\n        request.inputs[\"images\"].CopyFrom(tf.make_tensor_proto(X_new))\n    \n      make_tensor_proto accepts \"values\" of a python scalar, a python list, a\n      numpy ndarray, or a numpy scalar.\n    \n      If \"values\" is a python scalar or a python list, make_tensor_proto\n      first convert it to numpy ndarray. If dtype is None, the\n      conversion tries its best to infer the right numpy data\n      type. Otherwise, the resulting numpy array has a compatible data\n      type with the given dtype.\n    \n      In either case above, the numpy ndarray (either the caller provided\n      or the auto converted) must have the compatible type with dtype.\n    \n      make_tensor_proto then converts the numpy array to a tensor proto.\n    \n      If \"shape\" is None, the resulting tensor proto represents the numpy\n      array precisely.\n    \n      Otherwise, \"shape\" specifies the tensor's shape and the numpy array\n      can not have more elements than what \"shape\" specifies.\n    \n      Args:\n        values:         Values to put in the TensorProto.\n        dtype:          Optional tensor_pb2 DataType value.\n        shape:          List of integers representing the dimensions of tensor.\n        verify_shape:   Boolean that enables verification of a shape of values.\n        allow_broadcast:  Boolean that enables allowing scalars and 1 length vector\n            broadcasting. Cannot be true when verify_shape is true.\n    \n      Returns:\n        A `TensorProto`. Depending on the type, it may contain data in the\n        \"tensor_content\" attribute, which is not directly useful to Python programs.\n        To access the values you should convert the proto back to a numpy ndarray\n        with `tf.make_ndarray(proto)`.\n    \n        If `values` is a `TensorProto`, it is immediately returned; `dtype` and\n        `shape` are ignored.\n    \n      Raises:\n        TypeError:  if unsupported types are provided.\n        ValueError: if arguments have inappropriate values or if verify_shape is\n         True and shape of values is not equals to a shape from the argument.\n    \n      \"\"\"\n      if allow_broadcast and verify_shape:\n        raise ValueError(\"allow_broadcast and verify_shape are not both allowed.\")\n      if isinstance(values, tensor_pb2.TensorProto):\n        return values\n    \n      if dtype:\n        dtype = dtypes.as_dtype(dtype)\n    \n      is_quantized = (\n          dtype in [\n              dtypes.qint8, dtypes.quint8, dtypes.qint16, dtypes.quint16,\n              dtypes.qint32\n          ])\n    \n      if _is_array_like(values):\n        values = np.asarray(values)\n    \n      # We first convert value to a numpy array or scalar.\n      if isinstance(values, (np.ndarray, np.generic)):\n        if dtype and dtype.is_numpy_compatible:\n          nparray = values.astype(dtype.as_numpy_dtype)\n        else:\n          nparray = values\n      else:\n        if values is None:\n>         raise ValueError(\"None values not supported.\")",
            "\n../../envs/keras_45/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:437: ValueError"
        ]
    ],
    "2.1.3": [
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1248ac450>",
                "states": "[<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_1/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1/add:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1/add_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1/add_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1/add_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1/add_9:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1248ac450>",
                "states": "(<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1/while/add:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1/while/add_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1/while/add_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1/while/add_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1/while/add_9:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x124984410>",
                "states": "[<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_1_1/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_1_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_1_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_1/add:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_1/add_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_1/add_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_1/add_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_1/add_9:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_1/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x124984410>",
                "states": "(<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_1_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_1_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_1_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_1/while/add:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_1/while/add_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_1/while/add_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_1/while/add_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_1/while/add_9:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_1/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x125317c10>",
                "states": "[<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_1_2/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_1_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_1_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_2/Tile_1:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_2/add:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_2/add_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_2/add_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_2/add_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_2/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_2/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_2/add_9:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_2/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_2/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x125317c10>",
                "states": "(<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_1_2/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_1_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_1_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_2/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_2/while/add:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_2/while/add_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_2/while/add_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_2/while/add_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_2/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_2/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_2/while/add_9:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_2/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_2/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1253a6f90>",
                "states": "[<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_1_3/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_1_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_1_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_3/Tile_1:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_3/add:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_3/add_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_3/add_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_3/add_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_3/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_3/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_3/add_9:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_3/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_3/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1253a6f90>",
                "states": "(<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_1_3/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_1_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_1_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_3/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_3/while/add:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_3/while/add_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_3/while/add_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_3/while/add_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_3/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_3/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_3/while/add_9:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_3/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_3/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1254ace10>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_2/Tile_1:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/Tile_2:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2/strided_slice_15:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2/Tile_1:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2/Tile_2:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2/mul:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2/mul_1:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2/mul_2:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2/mul_3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2/add:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2/add_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2/add_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2/add_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2/mul_4:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2/mul_5:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2/mul_6:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2/mul_7:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2/add_9:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2/mul_13:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1254ace10>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_2/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2/while/mul:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2/while/mul_1:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2/while/mul_2:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2/while/mul_3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2/while/add:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2/while/add_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2/while/add_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2/while/add_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2/while/mul_4:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2/while/mul_5:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2/while/mul_6:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2/while/mul_7:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2/while/add_9:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2/while/mul_13:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1257d7d90>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_2_1/Tile_1:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/Tile_2:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_1/strided_slice_15:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_2_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_2_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_1/Tile_2:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_1/mul:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_1/mul_1:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_1/mul_2:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_1/mul_3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_1/add:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_1/add_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_1/add_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_1/add_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_1/mul_4:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_1/mul_5:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_1/mul_6:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_1/mul_7:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_1/add_9:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_1/mul_13:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1257d7d90>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_2_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_2_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_2_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_1/while/mul:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_1/while/mul_1:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_1/while/mul_2:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_1/while/mul_3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_1/while/add:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_1/while/add_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_1/while/add_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_1/while/add_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_1/while/mul_4:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_1/while/mul_5:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_1/while/mul_6:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_1/while/mul_7:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_1/while/add_9:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_1/while/mul_13:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x125705f90>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_2_2/Tile_1:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/Tile_2:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_2/strided_slice_15:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_2_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_2_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_2/Tile_1:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_2/Tile_2:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_2/mul:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_2/mul_1:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_2/mul_2:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_2/mul_3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_2/add:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_2/add_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_2/add_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_2/add_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_2/mul_4:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_2/mul_5:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_2/mul_6:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_2/mul_7:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_2/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_2/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_2/add_9:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_2/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_2/mul_13:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x125705f90>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_2_2/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_2_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_2_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_2/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_2/while/mul:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_2/while/mul_1:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_2/while/mul_2:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_2/while/mul_3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_2/while/add:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_2/while/add_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_2/while/add_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_2/while/add_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_2/while/mul_4:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_2/while/mul_5:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_2/while/mul_6:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_2/while/mul_7:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_2/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_2/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_2/while/add_9:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_2/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_2/while/mul_13:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x125d757d0>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_2_3/Tile_1:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/Tile_2:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_3/strided_slice_15:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_2_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_2_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_3/Tile_1:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_3/Tile_2:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_3/mul:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_3/mul_1:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_3/mul_2:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_3/mul_3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_3/add:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_3/add_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_3/add_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_3/add_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_3/mul_4:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_3/mul_5:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_3/mul_6:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_3/mul_7:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_3/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_3/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_3/add_9:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_3/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_3/mul_13:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x125d757d0>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_2_3/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.bias_i": "<tf.Tensor 'lstm_2_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.use_bias": "True",
                "self.bias": "<tf.Variable 'lstm_2_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_3/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_3/while/mul:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_3/while/mul_1:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_3/while/mul_2:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_3/while/mul_3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_3/while/add:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_3/while/add_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_3/while/add_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_3/while/add_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_3/while/mul_4:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_3/while/mul_5:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_3/while/mul_6:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_3/while/mul_7:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_3/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_3/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_3/while/add_9:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_3/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_3/while/mul_13:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.bias_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.bias_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.bias_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.use_bias": "bool",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12e4fb790>",
                "states": "[<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_1/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1/BiasAdd:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1/BiasAdd_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1/BiasAdd_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1/BiasAdd_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1/Tile:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12e4fb790>",
                "states": "(<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1/while/BiasAdd:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1/while/BiasAdd_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1/while/BiasAdd_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1/while/BiasAdd_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1/while/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12e612890>",
                "states": "[<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_1_1/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_1_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_1_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_1/BiasAdd:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_1/BiasAdd_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_1/BiasAdd_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_1/BiasAdd_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_1/Tile:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_1/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_1/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12e612890>",
                "states": "(<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_1_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_1_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_1_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_1/while/BiasAdd:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_1/while/BiasAdd_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_1/while/BiasAdd_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_1/while/BiasAdd_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_1/while/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_1/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12ef2ef50>",
                "states": "[<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_1_2/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_1_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_1_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_2/Tile_1:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_2/BiasAdd:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_2/BiasAdd_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_2/BiasAdd_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_2/BiasAdd_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_2/Tile:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_2/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_2/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_2/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_2/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_2/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12ef2ef50>",
                "states": "(<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_1_2/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_1_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_1_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_2/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_2/while/BiasAdd:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_2/while/BiasAdd_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_2/while/BiasAdd_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_2/while/BiasAdd_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_2/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_2/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_2/while/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_2/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_2/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12efc8310>",
                "states": "[<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_1_3/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_1_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_1_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_3/Tile_1:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_3/BiasAdd:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_3/BiasAdd_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_3/BiasAdd_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_3/BiasAdd_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_3/Tile:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_3/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_3/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_3/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_3/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_3/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12efc8310>",
                "states": "(<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_1_3/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_1_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_1_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_1_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_1_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_1_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_1_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_1_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_1_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_1_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_1_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_1_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_1_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_1_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_1_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_1_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_1_3/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_1_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_1_3/while/BiasAdd:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_1_3/while/BiasAdd_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_1_3/while/BiasAdd_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_1_3/while/BiasAdd_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_1_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_1_3/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_1_3/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_1_3/while/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_1_3/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_1_3/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12f0c8810>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_2/Tile_1:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/Tile_2:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2/strided_slice_15:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2/Tile_1:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2/Tile_2:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2/mul:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2/mul_1:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2/mul_2:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2/mul_3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2/BiasAdd:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2/BiasAdd_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2/BiasAdd_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2/BiasAdd_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2/mul_4:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2/mul_5:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2/mul_6:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2/mul_7:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2/mul_13:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12f0c8810>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_2/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2/while/mul:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2/while/mul_1:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2/while/mul_2:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2/while/mul_3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2/while/BiasAdd:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2/while/BiasAdd_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2/while/BiasAdd_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2/while/BiasAdd_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2/while/mul_4:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2/while/mul_5:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2/while/mul_6:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2/while/mul_7:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2/while/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2/while/mul_13:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12f3ba7d0>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_2_1/Tile_1:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/Tile_2:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_1/strided_slice_15:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_2_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_2_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_1/Tile_2:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_1/mul:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_1/mul_1:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_1/mul_2:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_1/mul_3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_1/BiasAdd:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_1/BiasAdd_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_1/BiasAdd_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_1/BiasAdd_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_1/mul_4:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_1/mul_5:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_1/mul_6:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_1/mul_7:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_1/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_1/mul_13:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12f3ba7d0>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_2_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_2_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_2_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_2_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_1/while/mul:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_1/while/mul_1:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_1/while/mul_2:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_1/while/mul_3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_1/while/BiasAdd:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_1/while/BiasAdd_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_1/while/BiasAdd_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_1/while/BiasAdd_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_1/while/mul_4:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_1/while/mul_5:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_1/while/mul_6:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_1/while/mul_7:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_1/while/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_1/while/mul_13:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12f4f6250>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_2_2/Tile_1:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/Tile_2:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_2/strided_slice_15:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_2_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_2_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_2/Tile_1:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_2/Tile_2:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_2/mul:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_2/mul_1:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_2/mul_2:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_2/mul_3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_2/BiasAdd:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_2/BiasAdd_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_2/BiasAdd_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_2/BiasAdd_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_2/mul_4:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_2/mul_5:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_2/mul_6:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_2/mul_7:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_2/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_2/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_2/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_2/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_2/mul_13:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12f4f6250>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_2_2/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_2_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_2_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_2/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_2/while/mul:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_2/while/mul_1:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_2/while/mul_2:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_2/while/mul_3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_2/while/BiasAdd:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_2/while/BiasAdd_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_2/while/BiasAdd_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_2/while/BiasAdd_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_2/while/mul_4:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_2/while/mul_5:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_2/while/mul_6:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_2/while/mul_7:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_2/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_2/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_2/while/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_2/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_2/while/mul_13:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12f90b410>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_2_3/Tile_1:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/Tile_2:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_3/strided_slice_15:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_2_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_2_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_3/Tile_1:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_3/Tile_2:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_3/mul:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_3/mul_1:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_3/mul_2:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_3/mul_3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_3/BiasAdd:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_3/BiasAdd_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_3/BiasAdd_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_3/BiasAdd_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_3/mul_4:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_3/mul_5:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_3/mul_6:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_3/mul_7:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_3/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_3/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_3/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_3/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_3/mul_13:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_2_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12f90b410>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_2_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_2_3/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_2_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_2_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_2_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_2_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_2_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_2_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_2_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_2_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_2_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_2_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_2_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_2_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_2_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_2_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_2_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_2_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_2_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_2_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_2_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_2_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_2_3/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_2_3/while/mul:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_2_3/while/mul_1:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_2_3/while/mul_2:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_2_3/while/mul_3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_2_3/while/BiasAdd:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_2_3/while/BiasAdd_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_2_3/while/BiasAdd_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_2_3/while/BiasAdd_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_2_3/while/mul_4:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_2_3/while/mul_5:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_2_3/while/mul_6:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_2_3/while/mul_7:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_2_3/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_2_3/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_2_3/while/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_2_3/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_2_3/while/mul_13:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12fa5bb90>",
                "states": "[<tf.Tensor 'lstm_3/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_3/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_3/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_3/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_3/Tile_1:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_3/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_3/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_3/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_3/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_3/MatMul:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_3/MatMul_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_3/MatMul_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_3/MatMul_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_3/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_3/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_3/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_3/Tile:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_3/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_3/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_3/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_3/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_3/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12fa5bb90>",
                "states": "(<tf.Tensor 'lstm_3/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_3/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_3/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_3/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_3/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_3/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_3/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_3/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_3/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_3/while/MatMul:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_3/while/MatMul_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_3/while/MatMul_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_3/while/MatMul_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_3/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_3/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_3/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_3/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_3/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_3/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_3/while/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_3/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_3/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12fd43a90>",
                "states": "[<tf.Tensor 'lstm_3_1/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_3_1/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_3_1/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_3_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_3_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_3_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_3_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_3_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_3_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_3_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_3_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_3_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_3_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_3_1/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_3_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_3_1/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_3_1/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_3_1/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_3_1/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_3_1/MatMul:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_3_1/MatMul_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_3_1/MatMul_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_3_1/MatMul_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_3_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_3_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_3_1/Tile:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_3_1/Tile:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_3_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_3_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_3_1/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_3_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_3_1/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x12fd43a90>",
                "states": "(<tf.Tensor 'lstm_3_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_3_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_3_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_3_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_3_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_3_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_3_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_3_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_3_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_3_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_3_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_3_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_3_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_3_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_3_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_3_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_3_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_3_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_3_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_3_1/while/MatMul:0' shape=(?, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_3_1/while/MatMul_1:0' shape=(?, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_3_1/while/MatMul_2:0' shape=(?, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_3_1/while/MatMul_3:0' shape=(?, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_3_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_3_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_3_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_3_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_3_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_3_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_3_1/while/add_5:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_3_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_3_1/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130038f90>",
                "states": "[<tf.Tensor 'lstm_3_2/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_3_2/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_3_2/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_3_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_3_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_3_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_3_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_3_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_3_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_3_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_3_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_3_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_3_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_3_2/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_3_2/Tile_1:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_3_2/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_3_2/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_3_2/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_3_2/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_3_2/MatMul:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_3_2/MatMul_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_3_2/MatMul_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_3_2/MatMul_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_3_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_3_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_3_2/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_3_2/Tile:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_3_2/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_3_2/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_3_2/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_3_2/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_3_2/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130038f90>",
                "states": "(<tf.Tensor 'lstm_3_2/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_3_2/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_3_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_3_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_3_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_3_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_3_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_3_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_3_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_3_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_3_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_3_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_3_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_3_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_3_2/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_3_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_3_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_3_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_3_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_3_2/while/MatMul:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_3_2/while/MatMul_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_3_2/while/MatMul_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_3_2/while/MatMul_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_3_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_3_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_3_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_3_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_3_2/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_3_2/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_3_2/while/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_3_2/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_3_2/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x13008ba90>",
                "states": "[<tf.Tensor 'lstm_3_3/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_3_3/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_3_3/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_3_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_3_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_3_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_3_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_3_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_3_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_3_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_3_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_3_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_3_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_3_3/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_3_3/Tile_1:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_3_3/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_3_3/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_3_3/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_3_3/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_3_3/MatMul:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_3_3/MatMul_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_3_3/MatMul_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_3_3/MatMul_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_3_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_3_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_3_3/Tile:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_3_3/Tile:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_3_3/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_3_3/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_3_3/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_3_3/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_3_3/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x13008ba90>",
                "states": "(<tf.Tensor 'lstm_3_3/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_3_3/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "1",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_3_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_3_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_3_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_3_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_3_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_3_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_3_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_3_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_3_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_3_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_3_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_3_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_3_3/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs_i": "<tf.Tensor 'lstm_3_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_f": "<tf.Tensor 'lstm_3_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_c": "<tf.Tensor 'lstm_3_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "inputs_o": "<tf.Tensor 'lstm_3_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "x_i": "<tf.Tensor 'lstm_3_3/while/MatMul:0' shape=(2, 3) dtype=float32>",
                "x_f": "<tf.Tensor 'lstm_3_3/while/MatMul_1:0' shape=(2, 3) dtype=float32>",
                "x_c": "<tf.Tensor 'lstm_3_3/while/MatMul_2:0' shape=(2, 3) dtype=float32>",
                "x_o": "<tf.Tensor 'lstm_3_3/while/MatMul_3:0' shape=(2, 3) dtype=float32>",
                "h_tm1_i": "<tf.Tensor 'lstm_3_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_f": "<tf.Tensor 'lstm_3_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_c": "<tf.Tensor 'lstm_3_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "h_tm1_o": "<tf.Tensor 'lstm_3_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_3_3/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_3_3/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_3_3/while/add_5:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_3_3/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_3_3/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x13019b210>",
                "states": "[<tf.Tensor 'lstm_4/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_4/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_4/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_4/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_4/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_4/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_4/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_4/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_4/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_4/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_4/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_4/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_4/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_4/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_4/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_4/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_4/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_4/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_4/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_4/Tile_1:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_4/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_4/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_4/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_4/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_4/BiasAdd:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_4/strided_slice_14:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_4/strided_slice_15:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_4/strided_slice_16:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_4/strided_slice_17:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_4/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x13019b210>",
                "states": "(<tf.Tensor 'lstm_4/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_4/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_4/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_4/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_4/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_4/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_4/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_4/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_4/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_4/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_4/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_4/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_4/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_4/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_4/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_4/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_4/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_4/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_4/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_4/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_4/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_4/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_4/while/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_4/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_4/while/BiasAdd:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_4/while/strided_slice:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_4/while/strided_slice_1:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_4/while/strided_slice_2:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_4/while/strided_slice_3:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_4/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130345050>",
                "states": "[<tf.Tensor 'lstm_4_1/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_4_1/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_4_1/strided_slice_13:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_4_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_4_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_4_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_4_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_4_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_4_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_4_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_4_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_4_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_4_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_4_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_4_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_4_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_4_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_4_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_4_1/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_4_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_4_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_4_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_4_1/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_4_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_4_1/BiasAdd:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_4_1/strided_slice_14:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_4_1/strided_slice_15:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_4_1/strided_slice_16:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_4_1/strided_slice_17:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_4_1/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130345050>",
                "states": "(<tf.Tensor 'lstm_4_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_4_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_4_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_4_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_4_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_4_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_4_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_4_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_4_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_4_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_4_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_4_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_4_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_4_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_4_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_4_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_4_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_4_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_4_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_4_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_4_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_4_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_4_1/while/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_4_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_4_1/while/BiasAdd:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_4_1/while/strided_slice:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_4_1/while/strided_slice_1:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_4_1/while/strided_slice_2:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_4_1/while/strided_slice_3:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_4_1/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1303b9f90>",
                "states": "[<tf.Tensor 'lstm_4_2/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_4_2/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_4_2/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_4_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_4_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_4_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_4_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_4_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_4_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_4_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_4_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_4_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_4_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_4_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_4_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_4_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_4_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_4_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_4_2/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_4_2/Tile_1:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_4_2/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_4_2/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_4_2/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_4_2/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_4_2/BiasAdd:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_4_2/strided_slice_14:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_4_2/strided_slice_15:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_4_2/strided_slice_16:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_4_2/strided_slice_17:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_4_2/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1303b9f90>",
                "states": "(<tf.Tensor 'lstm_4_2/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_4_2/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_4_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_4_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_4_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_4_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_4_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_4_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_4_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_4_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_4_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_4_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_4_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_4_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_4_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_4_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_4_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_4_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_4_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_4_2/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_4_2/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_4_2/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_4_2/while/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_4_2/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_4_2/while/BiasAdd:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_4_2/while/strided_slice:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_4_2/while/strided_slice_1:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_4_2/while/strided_slice_2:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_4_2/while/strided_slice_3:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_4_2/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130752b10>",
                "states": "[<tf.Tensor 'lstm_4_3/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_4_3/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_4_3/strided_slice_13:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_4_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_4_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_4_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_4_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_4_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_4_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_4_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_4_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_4_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_4_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_4_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_4_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_4_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_4_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_4_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_4_3/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_4_3/Tile_1:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_4_3/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_4_3/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_4_3/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_4_3/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_4_3/BiasAdd:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_4_3/strided_slice_14:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_4_3/strided_slice_15:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_4_3/strided_slice_16:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_4_3/strided_slice_17:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_4_3/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130752b10>",
                "states": "(<tf.Tensor 'lstm_4_3/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_4_3/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_4_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_4_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_4_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_4_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_4_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_4_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_4_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_4_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_4_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_4_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_4_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_4_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_4_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_4_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_4_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_4_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_4_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_4_3/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_4_3/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_4_3/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_4_3/while/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_4_3/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_4_3/while/BiasAdd:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_4_3/while/strided_slice:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_4_3/while/strided_slice_1:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_4_3/while/strided_slice_2:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_4_3/while/strided_slice_3:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_4_3/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_5/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1308484d0>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_5/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_5/Tile_1:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/Tile_2:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_5/strided_slice_15:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_5/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_5/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_5/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_5/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_5/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_5/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_5/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_5/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_5/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_5/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_5/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_5/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_5/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_5/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_5/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_5/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_5/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_5/mul_1:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_5/Tile_2:0' shape=(?, 3) dtype=float32>",
                "inputs": "<tf.Tensor 'lstm_5/mul:0' shape=(?, 4) dtype=float32>",
                "i": "<tf.Tensor 'lstm_5/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_5/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_5/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_5/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_5/BiasAdd:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_5/strided_slice_16:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_5/strided_slice_17:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_5/strided_slice_18:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_5/strided_slice_19:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_5/mul_7:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_5/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1308484d0>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_5/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_5/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_5/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_5/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_5/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_5/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_5/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_5/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_5/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_5/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_5/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_5/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_5/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_5/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_5/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_5/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_5/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_5/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_5/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_5/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_5/while/mul_1:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_5/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs": "<tf.Tensor 'lstm_5/while/mul:0' shape=(?, 4) dtype=float32>",
                "i": "<tf.Tensor 'lstm_5/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_5/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_5/while/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_5/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_5/while/BiasAdd:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_5/while/strided_slice:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_5/while/strided_slice_1:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_5/while/strided_slice_2:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_5/while/strided_slice_3:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_5/while/mul_7:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_5_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130abcb90>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_5_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_5_1/Tile_1:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/Tile_2:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_5_1/strided_slice_15:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_5_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_5_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_5_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_5_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_5_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_5_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_5_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_5_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_5_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_5_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_5_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_5_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_5_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_5_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_5_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_5_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_5_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_5_1/mul_1:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_5_1/Tile_2:0' shape=(?, 3) dtype=float32>",
                "inputs": "<tf.Tensor 'lstm_5_1/mul:0' shape=(?, 4) dtype=float32>",
                "i": "<tf.Tensor 'lstm_5_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_5_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_5_1/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_5_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_5_1/BiasAdd:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_5_1/strided_slice_16:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_5_1/strided_slice_17:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_5_1/strided_slice_18:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_5_1/strided_slice_19:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_5_1/mul_7:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_5_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130abcb90>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_5_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_5_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_5_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_5_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_5_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_5_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_5_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_5_1/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_5_1/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_5_1/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_5_1/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_5_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_5_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_5_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_5_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_5_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_5_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_5_1/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_5_1/cond/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_1/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_2/Merge:0' shape=(?, 4) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_3/Merge:0' shape=(?, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_5_1/cond_4/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_5/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_6/Merge:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_5_1/cond_7/Merge:0' shape=(?, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_5_1/while/mul_1:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_5_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "inputs": "<tf.Tensor 'lstm_5_1/while/mul:0' shape=(?, 4) dtype=float32>",
                "i": "<tf.Tensor 'lstm_5_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_5_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_5_1/while/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_5_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_5_1/while/BiasAdd:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_5_1/while/strided_slice:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_5_1/while/strided_slice_1:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_5_1/while/strided_slice_2:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_5_1/while/strided_slice_3:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_5_1/while/mul_7:0' shape=(?, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_5_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130e6ab90>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_5_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_5_2/Tile_1:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/Tile_2:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_5_2/strided_slice_15:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_5_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_5_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_5_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_5_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_5_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_5_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_5_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_5_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_5_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_5_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_5_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_5_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_5_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_5_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_5_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_5_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_5_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_5_2/mul_1:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_5_2/Tile_2:0' shape=(2, 3) dtype=float32>",
                "inputs": "<tf.Tensor 'lstm_5_2/mul:0' shape=(2, 4) dtype=float32>",
                "i": "<tf.Tensor 'lstm_5_2/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_5_2/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_5_2/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_5_2/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_5_2/BiasAdd:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_5_2/strided_slice_16:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_5_2/strided_slice_17:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_5_2/strided_slice_18:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_5_2/strided_slice_19:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_5_2/mul_7:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_5_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130e6ab90>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_5_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_5_2/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_5_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_5_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_5_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_5_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_5_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_5_2/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_5_2/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_5_2/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_5_2/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_5_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_5_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_5_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_5_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_5_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_5_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_5_2/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_5_2/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_5_2/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_2/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_5_2/while/mul_1:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_5_2/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs": "<tf.Tensor 'lstm_5_2/while/mul:0' shape=(2, 4) dtype=float32>",
                "i": "<tf.Tensor 'lstm_5_2/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_5_2/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_5_2/while/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_5_2/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_5_2/while/BiasAdd:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_5_2/while/strided_slice:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_5_2/while/strided_slice_1:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_5_2/while/strided_slice_2:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_5_2/while/strided_slice_3:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_5_2/while/mul_7:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_5_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130fba410>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_5_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "[<tf.Tensor 'lstm_5_3/Tile_1:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/Tile_2:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_5_3/strided_slice_15:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_5_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_5_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_5_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_5_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_5_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_5_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_5_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_5_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_5_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_5_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_5_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_5_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_5_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_5_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_5_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_5_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_5_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_5_3/mul_1:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_5_3/Tile_2:0' shape=(2, 3) dtype=float32>",
                "inputs": "<tf.Tensor 'lstm_5_3/mul:0' shape=(2, 4) dtype=float32>",
                "i": "<tf.Tensor 'lstm_5_3/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_5_3/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_5_3/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_5_3/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_5_3/BiasAdd:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_5_3/strided_slice_16:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_5_3/strided_slice_17:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_5_3/strided_slice_18:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_5_3/strided_slice_19:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_5_3/mul_7:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self._dropout_mask": "[<tf.Tensor 'lstm_5_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "self": "<keras.layers.recurrent.LSTMCell object at 0x130fba410>",
                "self._recurrent_dropout_mask": "[<tf.Tensor 'lstm_5_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "states": "(<tf.Tensor 'lstm_5_3/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.1",
                "inputs": "<tf.Tensor 'lstm_5_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_5_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_5_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_5_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_5_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "True",
                "self.bias_i": "<tf.Tensor 'lstm_5_3/strided_slice_8:0' shape=(3,) dtype=float32>",
                "self.bias_f": "<tf.Tensor 'lstm_5_3/strided_slice_9:0' shape=(3,) dtype=float32>",
                "self.bias_c": "<tf.Tensor 'lstm_5_3/strided_slice_10:0' shape=(3,) dtype=float32>",
                "self.bias_o": "<tf.Tensor 'lstm_5_3/strided_slice_11:0' shape=(3,) dtype=float32>",
                "self.recurrent_dropout": "0.1",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_5_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_5_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_5_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_5_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_5_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_5_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.bias": "<tf.Variable 'lstm_5_3/bias:0' shape=(12,) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "dp_mask": "[<tf.Tensor 'lstm_5_3/cond/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_1/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_2/Merge:0' shape=(2, 4) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_3/Merge:0' shape=(2, 4) dtype=float32>]",
                "rec_dp_mask": "[<tf.Tensor 'lstm_5_3/cond_4/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_5/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_6/Merge:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_5_3/cond_7/Merge:0' shape=(2, 3) dtype=float32>]",
                "h_tm1": "<tf.Tensor 'lstm_5_3/while/mul_1:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_5_3/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "inputs": "<tf.Tensor 'lstm_5_3/while/mul:0' shape=(2, 4) dtype=float32>",
                "i": "<tf.Tensor 'lstm_5_3/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_5_3/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_5_3/while/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_5_3/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_5_3/while/BiasAdd:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_5_3/while/strided_slice:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_5_3/while/strided_slice_1:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_5_3/while/strided_slice_2:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_5_3/while/strided_slice_3:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_5_3/while/mul_7:0' shape=(2, 3) dtype=float32>",
                "h._uses_learning_phase": "True"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x13108da50>",
                "states": "[<tf.Tensor 'lstm_6/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_6/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_6/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_6/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_6/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_6/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_6/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_6/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_6/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_6/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_6/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_6/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_6/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_6/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_6/Tile_1:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_6/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_6/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_6/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_6/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_6/add:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_6/strided_slice_10:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_6/strided_slice_11:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_6/strided_slice_12:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_6/strided_slice_13:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_6/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x13108da50>",
                "states": "(<tf.Tensor 'lstm_6/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_6/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_6/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_6/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_6/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_6/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_6/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_6/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_6/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_6/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_6/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_6/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_6/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_6/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_6/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_6/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_6/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_6/while/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_6/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_6/while/add:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_6/while/strided_slice:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_6/while/strided_slice_1:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_6/while/strided_slice_2:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_6/while/strided_slice_3:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_6/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x131370c10>",
                "states": "[<tf.Tensor 'lstm_6_1/Tile:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_6_1/Tile_1:0' shape=(?, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_6_1/strided_slice_9:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_6_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_6_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_6_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_6_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_6_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_6_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_6_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_6_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_6_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_6_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_6_1/Tile:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_6_1/Tile_1:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_6_1/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_6_1/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_6_1/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_6_1/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_6_1/add:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_6_1/strided_slice_10:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_6_1/strided_slice_11:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_6_1/strided_slice_12:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_6_1/strided_slice_13:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_6_1/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x131370c10>",
                "states": "(<tf.Tensor 'lstm_6_1/while/Identity_2:0' shape=(?, 3) dtype=float32>, <tf.Tensor 'lstm_6_1/while/Identity_3:0' shape=(?, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_6_1/while/TensorArrayReadV3:0' shape=(?, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_6_1/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_6_1/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_6_1/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_6_1/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_6_1/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_6_1/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_6_1/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_6_1/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_6_1/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_6_1/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_6_1/while/Identity_2:0' shape=(?, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_6_1/while/Identity_3:0' shape=(?, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_6_1/while/clip_by_value:0' shape=(?, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_6_1/while/clip_by_value_1:0' shape=(?, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_6_1/while/add_3:0' shape=(?, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_6_1/while/clip_by_value_2:0' shape=(?, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_6_1/while/add:0' shape=(?, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_6_1/while/strided_slice:0' shape=(?, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_6_1/while/strided_slice_1:0' shape=(?, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_6_1/while/strided_slice_2:0' shape=(?, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_6_1/while/strided_slice_3:0' shape=(?, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_6_1/while/mul_5:0' shape=(?, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1312c6250>",
                "states": "[<tf.Tensor 'lstm_6_2/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_6_2/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_6_2/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_6_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_6_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_6_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_6_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_6_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_6_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_6_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_6_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_6_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_6_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_6_2/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_6_2/Tile_1:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_6_2/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_6_2/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_6_2/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_6_2/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_6_2/add:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_6_2/strided_slice_10:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_6_2/strided_slice_11:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_6_2/strided_slice_12:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_6_2/strided_slice_13:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_6_2/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x1312c6250>",
                "states": "(<tf.Tensor 'lstm_6_2/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_6_2/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_6_2/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_6_2/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_6_2/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_6_2/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_6_2/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_6_2/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_6_2/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_6_2/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_6_2/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_6_2/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_6_2/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_6_2/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_6_2/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_6_2/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_6_2/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_6_2/while/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_6_2/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_6_2/while/add:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_6_2/while/strided_slice:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_6_2/while/strided_slice_1:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_6_2/while/strided_slice_2:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_6_2/while/strided_slice_3:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_6_2/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x131614c90>",
                "states": "[<tf.Tensor 'lstm_6_3/Tile:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_6_3/Tile_1:0' shape=(2, 3) dtype=float32>]",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_6_3/strided_slice_9:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_6_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_6_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_6_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_6_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_6_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_6_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_6_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_6_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_6_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_6_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_6_3/Tile:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_6_3/Tile_1:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_6_3/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_6_3/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_6_3/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_6_3/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_6_3/add:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_6_3/strided_slice_10:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_6_3/strided_slice_11:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_6_3/strided_slice_12:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_6_3/strided_slice_13:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_6_3/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ],
        [
            {
                "self": "<keras.layers.recurrent.LSTMCell object at 0x131614c90>",
                "states": "(<tf.Tensor 'lstm_6_3/while/Identity_2:0' shape=(2, 3) dtype=float32>, <tf.Tensor 'lstm_6_3/while/Identity_3:0' shape=(2, 3) dtype=float32>)",
                "self.implementation": "2",
                "self.dropout": "0.0",
                "inputs": "<tf.Tensor 'lstm_6_3/while/TensorArrayReadV3:0' shape=(2, 4) dtype=float32>",
                "self.kernel_i": "<tf.Tensor 'lstm_6_3/strided_slice:0' shape=(4, 3) dtype=float32>",
                "self.kernel_f": "<tf.Tensor 'lstm_6_3/strided_slice_1:0' shape=(4, 3) dtype=float32>",
                "self.kernel_c": "<tf.Tensor 'lstm_6_3/strided_slice_2:0' shape=(4, 3) dtype=float32>",
                "self.kernel_o": "<tf.Tensor 'lstm_6_3/strided_slice_3:0' shape=(4, 3) dtype=float32>",
                "self.use_bias": "False",
                "self.recurrent_dropout": "0.0",
                "self.recurrent_kernel_i": "<tf.Tensor 'lstm_6_3/strided_slice_4:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_f": "<tf.Tensor 'lstm_6_3/strided_slice_5:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_c": "<tf.Tensor 'lstm_6_3/strided_slice_6:0' shape=(3, 3) dtype=float32>",
                "self.recurrent_kernel_o": "<tf.Tensor 'lstm_6_3/strided_slice_7:0' shape=(3, 3) dtype=float32>",
                "self.kernel": "<tf.Variable 'lstm_6_3/kernel:0' shape=(4, 12) dtype=float32_ref>",
                "self.recurrent_kernel": "<tf.Variable 'lstm_6_3/recurrent_kernel:0' shape=(3, 12) dtype=float32_ref>",
                "self.units": "3"
            },
            {
                "h_tm1": "<tf.Tensor 'lstm_6_3/while/Identity_2:0' shape=(2, 3) dtype=float32>",
                "c_tm1": "<tf.Tensor 'lstm_6_3/while/Identity_3:0' shape=(2, 3) dtype=float32>",
                "i": "<tf.Tensor 'lstm_6_3/while/clip_by_value:0' shape=(2, 3) dtype=float32>",
                "f": "<tf.Tensor 'lstm_6_3/while/clip_by_value_1:0' shape=(2, 3) dtype=float32>",
                "c": "<tf.Tensor 'lstm_6_3/while/add_3:0' shape=(2, 3) dtype=float32>",
                "o": "<tf.Tensor 'lstm_6_3/while/clip_by_value_2:0' shape=(2, 3) dtype=float32>",
                "z": "<tf.Tensor 'lstm_6_3/while/add:0' shape=(2, 12) dtype=float32>",
                "z0": "<tf.Tensor 'lstm_6_3/while/strided_slice:0' shape=(2, 3) dtype=float32>",
                "z1": "<tf.Tensor 'lstm_6_3/while/strided_slice_1:0' shape=(2, 3) dtype=float32>",
                "z2": "<tf.Tensor 'lstm_6_3/while/strided_slice_2:0' shape=(2, 3) dtype=float32>",
                "z3": "<tf.Tensor 'lstm_6_3/while/strided_slice_3:0' shape=(2, 3) dtype=float32>",
                "h": "<tf.Tensor 'lstm_6_3/while/mul_5:0' shape=(2, 3) dtype=float32>"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs_i": "Tensor",
                "inputs_f": "Tensor",
                "inputs_c": "Tensor",
                "inputs_o": "Tensor",
                "x_i": "Tensor",
                "x_f": "Tensor",
                "x_c": "Tensor",
                "x_o": "Tensor",
                "h_tm1_i": "Tensor",
                "h_tm1_f": "Tensor",
                "h_tm1_c": "Tensor",
                "h_tm1_o": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self._dropout_mask": "list",
                "self": "LSTMCell",
                "self._recurrent_dropout_mask": "list",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.bias_i": "Tensor",
                "self.bias_f": "Tensor",
                "self.bias_c": "Tensor",
                "self.bias_o": "Tensor",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.bias": "RefVariable",
                "self.units": "int"
            },
            {
                "dp_mask": "list",
                "rec_dp_mask": "list",
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "inputs": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor",
                "h._uses_learning_phase": "bool"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "list",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ],
        [
            {
                "self": "LSTMCell",
                "states": "tuple",
                "self.implementation": "int",
                "self.dropout": "float",
                "inputs": "Tensor",
                "self.kernel_i": "Tensor",
                "self.kernel_f": "Tensor",
                "self.kernel_c": "Tensor",
                "self.kernel_o": "Tensor",
                "self.use_bias": "bool",
                "self.recurrent_dropout": "float",
                "self.recurrent_kernel_i": "Tensor",
                "self.recurrent_kernel_f": "Tensor",
                "self.recurrent_kernel_c": "Tensor",
                "self.recurrent_kernel_o": "Tensor",
                "self.kernel": "RefVariable",
                "self.recurrent_kernel": "RefVariable",
                "self.units": "int"
            },
            {
                "h_tm1": "Tensor",
                "c_tm1": "Tensor",
                "i": "Tensor",
                "f": "Tensor",
                "c": "Tensor",
                "o": "Tensor",
                "z": "Tensor",
                "z0": "Tensor",
                "z1": "Tensor",
                "z2": "Tensor",
                "z3": "Tensor",
                "h": "Tensor"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}