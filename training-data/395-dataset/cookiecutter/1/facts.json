{
    "1.1.1": "def generate_context(\n    context_file='cookiecutter.json', default_context=None, extra_context=None\n):\n    \n    context = OrderedDict([])\n\n    try:\n        with open(context_file) as file_handle:\n            obj = json.load(file_handle, object_pairs_hook=OrderedDict)\n    except ValueError as e:\n        # JSON decoding error.  Let's throw a new exception that is more\n        # friendly for the developer or user.\n        full_fpath = os.path.abspath(context_file)\n        json_exc_message = str(e)\n        our_exc_message = (\n            'JSON decoding error while loading \"{0}\".  Decoding'\n            ' error details: \"{1}\"'.format(full_fpath, json_exc_message)\n        )\n        raise ContextDecodingException(our_exc_message)\n\n    # Add the Python object to the context dictionary\n    file_name = os.path.split(context_file)[1]\n    file_stem = file_name.split('.')[0]\n    context[file_stem] = obj\n\n    # Overwrite context variable defaults with the default context from the\n    # user's global config, if available\n    if default_context:\n        apply_overwrites_to_context(obj, default_context)\n    if extra_context:\n        apply_overwrites_to_context(obj, extra_context)\n\n    logger.debug('Context generated is %s', context)\n    return context\n",
    "1.1.2": "Generate the context for a Cookiecutter project template.\n\nLoads the JSON file as a Python object, with key being the JSON filename.\n\n:param context_file: JSON file containing key/value pairs for populating\n    the cookiecutter's variables.\n:param default_context: Dictionary containing config to take into account.\n:param extra_context: Dictionary containing configuration overrides",
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/cookiecutter_1/cookiecutter/generate.py",
    "1.3.2": [
        "apply_overwrites_to_context(context, overwrite_context)"
    ],
    "1.4.1": [
        "def test_generate_context_decodes_non_ascii_chars():\n    \"\"\"Verify `generate_context` correctly decodes non-ascii chars.\"\"\"\n    expected_context = {'non_ascii': OrderedDict([('full_name', '\u00e9\u00e8\u00e0'),])}\n\n    generated_context = generate.generate_context(\n        context_file='tests/test-generate-context/non_ascii.json'\n    )\n\n    assert generated_context == expected_context"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/cookiecutter_1/tests/test_generate_context.py"
    ],
    "2.1.1": [
        [
            "E           FileNotFoundError: [Errno 2] No such file or directory: 'tests/test-generate-context/non_ascii.json'"
        ]
    ],
    "2.1.2": [
        [
            "def test_generate_context_decodes_non_ascii_chars():\n        \"\"\"Verify `generate_context` correctly decodes non-ascii chars.\"\"\"\n        expected_context = {'non_ascii': OrderedDict([('full_name', '\u00e9\u00e8\u00e0'),])}\n    \n        generated_context = generate.generate_context(\n>           context_file='tests/test-generate-context/non_ascii.json'\n        )\n\ntests/test_generate_context.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncontext_file = 'tests/test-generate-context/non_ascii.json'\ndefault_context = None, extra_context = None\n\n    def generate_context(\n        context_file='cookiecutter.json', default_context=None, extra_context=None\n    ):\n        \"\"\"Generate the context for a Cookiecutter project template.\n    \n        Loads the JSON file as a Python object, with key being the JSON filename.\n    \n        :param context_file: JSON file containing key/value pairs for populating\n            the cookiecutter's variables.\n        :param default_context: Dictionary containing config to take into account.\n        :param extra_context: Dictionary containing configuration overrides\n        \"\"\"\n        context = OrderedDict([])\n    \n        try:\n>           with open(context_file) as file_handle:",
            "\ncookiecutter/generate.py:85: FileNotFoundError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": [
        [
            {
                "context_file": "'tests/test-generate-context/non_ascii.json'"
            },
            {
                "context": "OrderedDict([('non_ascii', OrderedDict([('full_name', '\u00e9\u00e8\u00e0')]))])",
                "file_handle": "<_io.TextIOWrapper name='tests/test-generate-context/non_ascii.json' mode='r' encoding='utf-8'>",
                "obj": "OrderedDict([('full_name', '\u00e9\u00e8\u00e0')])",
                "file_name": "'non_ascii.json'",
                "file_stem": "'non_ascii'"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "context_file": "str"
            },
            {
                "context": "OrderedDict",
                "file_handle": "TextIOWrapper",
                "obj": "OrderedDict",
                "file_name": "str",
                "file_stem": "str"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}