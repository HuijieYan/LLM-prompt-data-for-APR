{
    "1.1.1": "def _get_value(self, index, col, takeable: bool = False):\n    \n    if takeable:\n        series = self._iget_item_cache(col)\n        return com.maybe_box_datetimelike(series._values[index])\n\n    series = self._get_item_cache(col)\n    engine = self.index._engine\n\n    try:\n        loc = engine.get_loc(index)\n        return series._values[loc]\n    except KeyError:\n        # GH 20629\n        if self.index.nlevels > 1:\n            # partial indexing forbidden\n            raise\n\n    # we cannot handle direct indexing\n    # use positional\n    col = self.columns.get_loc(col)\n    index = self.index.get_loc(index)\n    return self._get_value(index, col, takeable=True)\n",
    "1.1.2": "Quickly retrieve single value at passed column and index.\n\nParameters\n----------\nindex : row label\ncol : column label\ntakeable : interpret the index/col as indexers, default False\n\nReturns\n-------\nscalar",
    "1.2.1": "class DataFrame(NDFrame)",
    "1.2.2": "Two-dimensional, size-mutable, potentially heterogeneous tabular data.\n\nData structure also contains labeled axes (rows and columns).\nArithmetic operations align on both row and column labels. Can be\nthought of as a dict-like container for Series objects. The primary\npandas data structure.\n\nParameters\n----------\ndata : ndarray (structured or homogeneous), Iterable, dict, or DataFrame\n    Dict can contain Series, arrays, constants, or list-like objects.\n\n    .. versionchanged:: 0.23.0\n       If data is a dict, column order follows insertion-order for\n       Python 3.6 and later.\n\n    .. versionchanged:: 0.25.0\n       If data is a list of dicts, column order follows insertion-order\n       for Python 3.6 and later.\n\nindex : Index or array-like\n    Index to use for resulting frame. Will default to RangeIndex if\n    no indexing information part of input data and no index provided.\ncolumns : Index or array-like\n    Column labels to use for resulting frame. Will default to\n    RangeIndex (0, 1, 2, ..., n) if no column labels are provided.\ndtype : dtype, default None\n    Data type to force. Only a single dtype is allowed. If None, infer.\ncopy : bool, default False\n    Copy data from inputs. Only affects DataFrame / 2d ndarray input.\n\nSee Also\n--------\nDataFrame.from_records : Constructor from tuples, also record arrays.\nDataFrame.from_dict : From dicts of Series, arrays, or dicts.\nread_csv\nread_table\nread_clipboard\n\nExamples\n--------\nConstructing DataFrame from a dictionary.\n\n>>> d = {'col1': [1, 2], 'col2': [3, 4]}\n>>> df = pd.DataFrame(data=d)\n>>> df\n   col1  col2\n0     1     3\n1     2     4\n\nNotice that the inferred dtype is int64.\n\n>>> df.dtypes\ncol1    int64\ncol2    int64\ndtype: object\n\nTo enforce a single dtype:\n\n>>> df = pd.DataFrame(data=d, dtype=np.int8)\n>>> df.dtypes\ncol1    int8\ncol2    int8\ndtype: object\n\nConstructing DataFrame from numpy ndarray:\n\n>>> df2 = pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]),\n...                    columns=['a', 'b', 'c'])\n>>> df2\n   a  b  c\n0  1  2  3\n1  4  5  6\n2  7  8  9",
    "1.2.3": [
        "_get_value(self, index, col, takeable: bool=False)"
    ],
    "1.2.4": null,
    "1.2.5": null,
    "1.3.1": "pandas/core/frame.py",
    "1.3.2": [
        "_get_value(self, index, col, takeable: bool=False)"
    ],
    "1.4.1": [
        "def test_iat_dont_wrap_object_datetimelike():\n    # GH#32809 .iat calls go through DataFrame._get_value, should not\n    #  call maybe_box_datetimelike\n    dti = date_range(\"2016-01-01\", periods=3)\n    tdi = dti - dti\n    ser = Series(dti.to_pydatetime(), dtype=object)\n    ser2 = Series(tdi.to_pytimedelta(), dtype=object)\n    df = DataFrame({\"A\": ser, \"B\": ser2})\n    assert (df.dtypes == object).all()\n\n    for result in [df.at[0, \"A\"], df.iat[0, 0], df.loc[0, \"A\"], df.iloc[0, 0]]:\n        assert result is ser[0]\n        assert isinstance(result, datetime)\n        assert not isinstance(result, Timestamp)\n\n    for result in [df.at[1, \"B\"], df.iat[1, 1], df.loc[1, \"B\"], df.iloc[1, 1]]:\n        assert result is ser2[1]\n        assert isinstance(result, timedelta)\n        assert not isinstance(result, Timedelta)"
    ],
    "1.4.2": [
        "pandas/tests/indexing/test_scalar.py"
    ],
    "2.1.1": [
        [
            "E           AssertionError: assert Timestamp('2016-01-01 00:00:00') is datetime.datetime(2016, 1, 1, 0, 0)"
        ]
    ],
    "2.1.2": [
        [
            "def test_iat_dont_wrap_object_datetimelike():\n        # GH#32809 .iat calls go through DataFrame._get_value, should not\n        #  call maybe_box_datetimelike\n        dti = date_range(\"2016-01-01\", periods=3)\n        tdi = dti - dti\n        ser = Series(dti.to_pydatetime(), dtype=object)\n        ser2 = Series(tdi.to_pytimedelta(), dtype=object)\n        df = DataFrame({\"A\": ser, \"B\": ser2})\n        assert (df.dtypes == object).all()\n    \n        for result in [df.at[0, \"A\"], df.iat[0, 0], df.loc[0, \"A\"], df.iloc[0, 0]]:\n>           assert result is ser[0]",
            "\npandas/tests/indexing/test_scalar.py:305: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "takeable": {
                    "value": "False",
                    "shape": null,
                    "omitted": false
                },
                "self": {
                    "value": "                     A        B\n0  2016-01-01 00:00:00  0:00:00\n1  2016-01-02 00:00:00  0:00:00\n2  2016-01-03 00:00:00  0:00:00",
                    "shape": "(3, 2)",
                    "omitted": false
                },
                "col": {
                    "value": "'A'",
                    "shape": "1",
                    "omitted": false
                },
                "index": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                },
                "self.index": {
                    "value": "RangeIndex(start=0, stop=3, step=1)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self.columns": {
                    "value": "Index(['A', 'B'], dtype='object')",
                    "shape": "(2,)",
                    "omitted": false
                }
            },
            {
                "series": {
                    "value": "0    2016-01-01 00:00:00\n1    2016-01-02 00:00:00\n2    2016-01-03 00:00:00\nName: A, dtype: object",
                    "shape": "(3,)",
                    "omitted": false
                },
                "series._values": {
                    "value": "array([datetime.datetime(2016, 1, 1, 0, 0),\n       datetime.datetime(2016, 1, 2, 0, 0),\n       datetime.datetime(2016, 1, 3, 0, 0)], dtype=object)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "engine": {
                    "value": "<pandas._libs.index.Int64Engine object at 0x11de6d3b0>",
                    "shape": null,
                    "omitted": false
                },
                "loc": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "takeable": {
                    "value": "True",
                    "shape": null,
                    "omitted": false
                },
                "self": {
                    "value": "                     A        B\n0  2016-01-01 00:00:00  0:00:00\n1  2016-01-02 00:00:00  0:00:00\n2  2016-01-03 00:00:00  0:00:00",
                    "shape": "(3, 2)",
                    "omitted": false
                },
                "col": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                },
                "index": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                },
                "self.index": {
                    "value": "RangeIndex(start=0, stop=3, step=1)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self.columns": {
                    "value": "Index(['A', 'B'], dtype='object')",
                    "shape": "(2,)",
                    "omitted": false
                }
            },
            {
                "series": {
                    "value": "0    2016-01-01 00:00:00\n1    2016-01-02 00:00:00\n2    2016-01-03 00:00:00\nName: A, dtype: object",
                    "shape": "(3,)",
                    "omitted": false
                },
                "series._values": {
                    "value": "array([datetime.datetime(2016, 1, 1, 0, 0),\n       datetime.datetime(2016, 1, 2, 0, 0),\n       datetime.datetime(2016, 1, 3, 0, 0)], dtype=object)",
                    "shape": "(3,)",
                    "omitted": false
                }
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "takeable": "bool",
                "self": "DataFrame",
                "col": "str",
                "index": "int",
                "self.index": "RangeIndex",
                "self.columns": "Index"
            },
            {
                "series": "Series",
                "series._values": "ndarray",
                "engine": "Int64Engine",
                "loc": "int"
            }
        ],
        [
            {
                "takeable": "bool",
                "self": "DataFrame",
                "col": "int",
                "index": "int",
                "self.index": "RangeIndex",
                "self.columns": "Index"
            },
            {
                "series": "Series",
                "series._values": "ndarray"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "takeable": {
                    "value": "False",
                    "shape": null,
                    "omitted": false
                },
                "self": {
                    "value": "                     A        B\n0  2016-01-01 00:00:00  0:00:00\n1  2016-01-02 00:00:00  0:00:00\n2  2016-01-03 00:00:00  0:00:00",
                    "shape": "(3, 2)",
                    "omitted": false
                },
                "col": {
                    "value": "'A'",
                    "shape": "1",
                    "omitted": false
                },
                "index": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                },
                "self.index": {
                    "value": "RangeIndex(start=0, stop=3, step=1)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self.columns": {
                    "value": "Index(['A', 'B'], dtype='object')",
                    "shape": "(2,)",
                    "omitted": false
                }
            },
            {
                "series": {
                    "value": "0    2016-01-01 00:00:00\n1    2016-01-02 00:00:00\n2    2016-01-03 00:00:00\nName: A, dtype: object",
                    "shape": "(3,)",
                    "omitted": false
                },
                "series._values": {
                    "value": "array([datetime.datetime(2016, 1, 1, 0, 0),\n       datetime.datetime(2016, 1, 2, 0, 0),\n       datetime.datetime(2016, 1, 3, 0, 0)], dtype=object)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "engine": {
                    "value": "<pandas._libs.index.Int64Engine object at 0x122fa1090>",
                    "shape": null,
                    "omitted": false
                },
                "loc": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "takeable": {
                    "value": "True",
                    "shape": null,
                    "omitted": false
                },
                "self": {
                    "value": "                     A        B\n0  2016-01-01 00:00:00  0:00:00\n1  2016-01-02 00:00:00  0:00:00\n2  2016-01-03 00:00:00  0:00:00",
                    "shape": "(3, 2)",
                    "omitted": false
                },
                "col": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                },
                "index": {
                    "value": "0",
                    "shape": null,
                    "omitted": false
                },
                "self.index": {
                    "value": "RangeIndex(start=0, stop=3, step=1)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self.columns": {
                    "value": "Index(['A', 'B'], dtype='object')",
                    "shape": "(2,)",
                    "omitted": false
                }
            },
            {
                "series": {
                    "value": "0    2016-01-01 00:00:00\n1    2016-01-02 00:00:00\n2    2016-01-03 00:00:00\nName: A, dtype: object",
                    "shape": "(3,)",
                    "omitted": false
                },
                "series._values": {
                    "value": "array([datetime.datetime(2016, 1, 1, 0, 0),\n       datetime.datetime(2016, 1, 2, 0, 0),\n       datetime.datetime(2016, 1, 3, 0, 0)], dtype=object)",
                    "shape": "(3,)",
                    "omitted": false
                }
            }
        ],
        [
            {
                "takeable": {
                    "value": "False",
                    "shape": null,
                    "omitted": false
                },
                "self": {
                    "value": "                     A        B\n0  2016-01-01 00:00:00  0:00:00\n1  2016-01-02 00:00:00  0:00:00\n2  2016-01-03 00:00:00  0:00:00",
                    "shape": "(3, 2)",
                    "omitted": false
                },
                "col": {
                    "value": "'B'",
                    "shape": "1",
                    "omitted": false
                },
                "index": {
                    "value": "1",
                    "shape": null,
                    "omitted": false
                },
                "self.index": {
                    "value": "RangeIndex(start=0, stop=3, step=1)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self.columns": {
                    "value": "Index(['A', 'B'], dtype='object')",
                    "shape": "(2,)",
                    "omitted": false
                }
            },
            {
                "series": {
                    "value": "0    0:00:00\n1    0:00:00\n2    0:00:00\nName: B, dtype: object",
                    "shape": "(3,)",
                    "omitted": false
                },
                "series._values": {
                    "value": "array([datetime.timedelta(0), datetime.timedelta(0),\n       datetime.timedelta(0)], dtype=object)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "engine": {
                    "value": "<pandas._libs.index.Int64Engine object at 0x122fa1090>",
                    "shape": null,
                    "omitted": false
                },
                "loc": {
                    "value": "1",
                    "shape": null,
                    "omitted": false
                }
            }
        ],
        [
            {
                "takeable": {
                    "value": "True",
                    "shape": null,
                    "omitted": false
                },
                "self": {
                    "value": "                     A        B\n0  2016-01-01 00:00:00  0:00:00\n1  2016-01-02 00:00:00  0:00:00\n2  2016-01-03 00:00:00  0:00:00",
                    "shape": "(3, 2)",
                    "omitted": false
                },
                "col": {
                    "value": "1",
                    "shape": null,
                    "omitted": false
                },
                "index": {
                    "value": "1",
                    "shape": null,
                    "omitted": false
                },
                "self.index": {
                    "value": "RangeIndex(start=0, stop=3, step=1)",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self.columns": {
                    "value": "Index(['A', 'B'], dtype='object')",
                    "shape": "(2,)",
                    "omitted": false
                }
            },
            {
                "series": {
                    "value": "0    0:00:00\n1    0:00:00\n2    0:00:00\nName: B, dtype: object",
                    "shape": "(3,)",
                    "omitted": false
                },
                "series._values": {
                    "value": "array([datetime.timedelta(0), datetime.timedelta(0),\n       datetime.timedelta(0)], dtype=object)",
                    "shape": "(3,)",
                    "omitted": false
                }
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "takeable": "bool",
                "self": "DataFrame",
                "col": "str",
                "index": "int",
                "self.index": "RangeIndex",
                "self.columns": "Index"
            },
            {
                "series": "Series",
                "series._values": "ndarray",
                "engine": "Int64Engine",
                "loc": "int"
            }
        ],
        [
            {
                "takeable": "bool",
                "self": "DataFrame",
                "col": "int",
                "index": "int",
                "self.index": "RangeIndex",
                "self.columns": "Index"
            },
            {
                "series": "Series",
                "series._values": "ndarray"
            }
        ],
        [
            {
                "takeable": "bool",
                "self": "DataFrame",
                "col": "str",
                "index": "int",
                "self.index": "RangeIndex",
                "self.columns": "Index"
            },
            {
                "series": "Series",
                "series._values": "ndarray",
                "engine": "Int64Engine",
                "loc": "int"
            }
        ],
        [
            {
                "takeable": "bool",
                "self": "DataFrame",
                "col": "int",
                "index": "int",
                "self.index": "RangeIndex",
                "self.columns": "Index"
            },
            {
                "series": "Series",
                "series._values": "ndarray"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}