{
    "pandas": [
        {
            "bugID": 56,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 2610,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def _get_value(self, index, col, takeable: bool = False):\n\n    if takeable:\n        series = self._iget_item_cache(col)\n    else:\n        series = self._get_item_cache(col)\n    \n    try:\n        loc = self.index.get_loc(index)\n        return series._values[loc]\n    except KeyError:\n        # GH 20629\n        if self.index.nlevels > 1:\n            # partial indexing forbidden\n            raise\n    \n    # we cannot handle direct indexing\n    # use positional\n    col_index = self.columns.get_loc(col)\n    row_index = self.index.get_loc(index)\n    \n    if takeable:\n        return self._get_value(row_index, col_index, takeable=True)\n    else:\n        return series._values[row_index]"
        }
    ]
}