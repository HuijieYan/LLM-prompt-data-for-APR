{
    "pandas": [
        {
            "bugID": 133,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 7034,
            "file_name": "pandas/core/generic.py",
            "replace_code": "def interpolate(\n    self,\n    method=\"linear\",\n    axis=0,\n    limit=None,\n    inplace=False,\n    limit_direction=\"forward\",\n    limit_area=None,\n    downcast=None,\n    **kwargs\n):\n    \"\"\"\n    Interpolate values according to different methods.\n    \"\"\"\n    inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n    if isinstance(axis, str):\n        if axis == 'rows' or axis == 'index':\n            ax = 0\n        elif axis == 'columns':\n            ax = 1\n        else:\n            raise ValueError(\"Invalid axis parameter\")\n    else:\n        ax = axis\n\n    if ax == 0:\n        ax_name = self._info_axis_name\n        _maybe_transposed_self = self\n    elif ax == 1:\n        _maybe_transposed_self = self.T\n        ax_name = 1\n    else:\n        _maybe_transposed_self = self\n        ax_name = ax\n    \n    ax = _maybe_transposed_self._get_axis_number(ax_name)",
            "imports": []
        }
    ]
}