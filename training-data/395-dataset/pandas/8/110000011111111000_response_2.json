{
    "pandas": [
        {
            "bugID": 8,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 668,
            "file_name": "pandas/core/internals/blocks.py",
            "replace_code": "def replace(\n    self,\n    to_replace,\n    value,\n    inplace: bool = False,\n    regex: bool = False,\n    convert: bool = True,\n):\n\n    if isinstance(value, pd.NA):\n        value = np.nan\n    \n    columns = self.columns\n    for col in columns:\n        if isinstance(self[col].dtype, pd.CategoricalDtype):\n            if inplace:\n                self[col] = self[col].cat.add_categories(value)\n                self[col].cat.rename_categories({None: value}, inplace=True)\n            else:\n                replacement = self[col].cat.add_categories(value)\n                replacement.cat.rename_categories({None: value}, inplace=True)\n                self[col] = replacement\n        else:\n            if inplace:\n                self[col].replace(to_replace, value, inplace=True)\n            else:\n                replacement = self[col].replace(to_replace, value, inplace=inplace)\n                self[col] = replacement\n    return self"
        }
    ]
}