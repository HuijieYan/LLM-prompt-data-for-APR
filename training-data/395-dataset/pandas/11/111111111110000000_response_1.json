{
    "pandas": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 590,
            "file_name": "pandas/core/reshape/concat.py",
            "replace_code": "def _make_concat_multiindex(indexes, keys, levels=None, names=None) -> MultiIndex:\n    levels = [] if levels is None else levels\n    names = [None] * len(keys) if names is None else names\n\n    zipped = list(zip(*keys)) if (levels and len(levels) > 1) else [keys]\n    \n    levels = levels if levels else [ensure_index(keys)]\n\n    codes_list = []\n    for hlevel, level in zip(zipped, levels):\n        to_concat = []\n        for key, index in zip(hlevel, indexes):\n            try:\n                i = level.get_loc(key)\n            except KeyError as err:\n                raise ValueError(f\"Key {key} not in level {level}\") from err\n\n            to_concat.append(np.repeat(i, len(index)))\n        codes_list.append(np.concatenate(to_concat))\n\n    if len(names) == len(levels):\n        pass\n    elif len({idx.nlevels for idx in indexes}) == 1:\n        names = names + get_consensus_names(indexes)\n    else:\n        raise AssertionError(\n            \"Cannot concat indices that do not have the same number of levels\"\n        )\n\n    return MultiIndex(\n        levels=levels, codes=codes_list, names=names, verify_integrity=False\n    )",
            "import_list": [
                "from pandas.core.indexes.base import ensure_index",
                "from pandas.core.indexes.multi import MultiIndex",
                "import numpy as np"
            ]
        }
    ]
}