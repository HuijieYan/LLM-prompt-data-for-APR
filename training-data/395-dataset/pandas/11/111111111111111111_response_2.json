{
    "pandas": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 590,
            "file_name": "pandas/core/reshape/concat.py",
            "replace_code": "def _make_concat_multiindex(indexes, keys, levels=None, names=None) -> MultiIndex:\n    if levels is None:\n        levels = [ensure_index(keys)]\n    else:\n        levels = [ensure_index(x) for x in levels]\n\n    codes_list = []\n    for key, index in zip(keys, indexes):\n        if not isinstance(index, Index):\n            if not notna(index).all():\n                raise ValueError(\"All non-NA values are NaN only\")\n            index = Index(index)\n\n        level = levels[0]\n        if len(index) != len(level):\n            raise ValueError(\"all arrays must be same length\")\n\n        try:\n            codes = level.get_indexer(index)\n        except KeyError as err:\n            raise ValueError(f\"Key {key} not in level\") from err\n\n        codes_list.append(codes)\n\n    final_levels = levels\n    final_codes = codes_list\n    if names is not None:\n        names = list(names)\n        if len(names) == len(final_levels):\n            names = list(names)\n        else:\n            raise ValueError(\"Length of names does not match the length of levels\")\n\n    return MultiIndex(levels=final_levels, codes=final_codes, names=names, verify_integrity=True)",
            "imports": [
                "from pandas import MultiIndex, Index, ensure_index, notna, Series"
            ]
        }
    ]
}