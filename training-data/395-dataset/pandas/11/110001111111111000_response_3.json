{
    "pandas": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 590,
            "file_name": "pandas/core/reshape/concat.py",
            "replace_code": "def _make_concat_multiindex(indexes, keys, levels=None, names=None) -> MultiIndex:\n    if levels is None:\n        levels = [ensure_index(x) for x in keys]\n    else:\n        levels = [ensure_index(x) for x in levels]\n\n    zipped = [keys]\n\n    if names is None:\n        names = [None]\n\n    codes_list = []\n\n    for hlevel, index in zip(zipped, indexes):\n        index_codes = factorize_from_iterable(hlevel)\n        try:\n            [i] = [level.get_loc(key) for key in hlevel for level in levels]\n        except KeyError as err:\n            raise ValueError(f\"Key {key} not in any level\") from err\n        else:\n            to_concat = np.repeat(i, len(index))\n            codes_list.append(to_concat)\n\n    concat_index = _concat_indexes(indexes)\n\n    if isinstance(concat_index, MultiIndex):\n        levels.extend(concat_index.levels)\n        codes_list.extend(concat_index.codes)\n    else:\n        codes, categories = factorize_from_iterable(concat_index)\n        levels.append(categories)\n        codes_list.append(codes)\n\n    names = list(names) + get_consensus_names(indexes)\n\n    return MultiIndex(\n        levels=levels, codes=codes_list, names=names, verify_integrity=False\n    )",
            "imports": [
                "from pandas.core.indexes import Index",
                "from pandas.core.indexes.api import ensure_index",
                "from pandas.core.indexes.multi import MultiIndex",
                "from pandas.core.algorithms import factorize_from_iterables, factorize_from_iterable",
                "import numpy as np"
            ]
        }
    ]
}