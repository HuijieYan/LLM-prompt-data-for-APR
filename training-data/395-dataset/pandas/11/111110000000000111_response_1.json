{
    "pandas": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 590,
            "file_name": "pandas/core/reshape/concat.py",
            "replace_code": "def _make_concat_multiindex(indexes, keys, levels=None, names=None) -> MultiIndex:\n    from pandas.core.indexes.multi import MultiIndex\n\n    if levels is None:\n        levels = [None] * len(keys)\n\n    if names is None:\n        names = [None] * len(keys)\n\n    if isinstance(keys[0], tuple):\n        zipped = list(zip(*keys))\n    else:\n        zipped = [keys]\n\n    if len(zipped) != len(levels):\n        raise ValueError(\"Number of levels must match the number of keys\")\n\n    new_levels = []\n    new_codes = []\n\n    for key, level, zipped_vals in zip(keys, levels, zipped):\n        if level is None:\n            level = ensure_index(zipped_vals)\n        elif not isinstance(level, MultiIndex):\n            level = ensure_index(level)\n\n        codes = np.tile(np.arange(len(level)), len(indexes))\n        new_levels.append(level)\n        new_codes.append(codes)\n\n    if len(names) < len(new_levels):\n        names.extend([None] * (len(new_levels) - len(names)))\n\n    return MultiIndex(levels=new_levels, codes=new_codes, names=names, verify_integrity=False)",
            "import_list": [
                "from pandas.core.indexes.multi import MultiIndex"
            ]
        }
    ]
}