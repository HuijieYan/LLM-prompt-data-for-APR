{
    "pandas": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 590,
            "file_name": "pandas/core/reshape/concat.py",
            "replace_code": "def _make_concat_multiindex(indexes, keys, levels=None, names=None) -> MultiIndex:\n    sizes = [len(index) for index in indexes]\n    if sizes.count(sizes[0]) != len(sizes):\n        raise ValueError(\"All arrays must be the same length\")\n\n    codes_list = []\n    levels = []\n    new_names = []\n\n    for i, index in enumerate(indexes):\n        codes = []\n        level_codes, level_index = _factorize_from_iterable(index)\n        codes.append(level_codes)\n        levels.append(ensure_index(level_index))\n\n        if names is not None and i < len(names):\n            new_names.append(names[i])\n\n        codes_list.append(codes)\n\n    concat_index = pd.concat(indexes)\n    if isinstance(concat_index, MultiIndex):\n        levels.extend(concat_index.levels)\n        codes_list.extend(concat_index.codes)\n        new_names.extend(concat_index.names)\n    else:\n        codes, categories = factorize_from_iterable(concat_index)\n        levels.append(categories)\n        codes_list.append(codes)\n        new_names.extend(concat_index.names)\n\n    return MultiIndex(\n        levels=levels, codes=levels.codes, names=new_names, verify_integrity=False\n    )",
            "imports": [
                "import numpy as np",
                "import pandas as pd",
                "from pandas.core.indexes.api import ExtensionIndex, ensure_index",
                "from pandas.core.indexes.frozen import FrozenList",
                "from pandas.core.indexes.multi import MultiIndex, _concat_indexes",
                "from pandas.core.dtypes.common import ensure_int8",
                "from pandas.core.arrays.categorical import (\n    _factorize_from_iterables,\n    _factorize_from_iterable,\n)"
            ]
        }
    ]
}