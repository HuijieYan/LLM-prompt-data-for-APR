{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    clocs = [data.columns.get_loc(i) if isinstance(i, (str, tuple)) else i for i in clocs]\n    \n    index = data.index\n\n    rlocs = [i for i in range(index.nlevels) if i not in clocs]\n\n    clevels = [index.levels[i] for i in clocs]\n    rlevels = [index.levels[i] for i in rlocs]\n\n    comp_ids, obs_ids = libphf.get_recons(comp_ids, obs_ids, rlevels, ccodes, xnull=False)\n\n    if rlocs == []:\n        # Everything is in clocs, so the dummy df has a regular index\n        dummy_index = libphf.get_reg_ind(obs_ids)\n    else:\n        dummy_index = libphf.get_mult_ind(rlevels, comp_ids, rnames, xnull=False)\n\n    if len(data.columns.levels) == 1:\n        dummy = data.copy()\n    else:\n        dummy = data.copy()\n        dummy.index = dummy_index.level\n\n    unstacked = libphf.unstack_dataframe(dummy, dummy_index, fill_value=fill_value)\n\n    new_columns = libphf.construct_new_columns(\n        unstacked, clevels, clocs, recons_codes, data.columns, obs_ids\n    )\n\n    if len(data.columns.levels) == 1:\n        libphf.set_index_after_unstack(unstacked, new_columns)\n    else:\n        libphf.set_columns_after_unstack(unstacked, new_columns)\n\n    return unstacked",
            "import_list": []
        }
    ]
}