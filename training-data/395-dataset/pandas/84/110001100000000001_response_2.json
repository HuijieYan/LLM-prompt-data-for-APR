{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    if len(clocs) == 0:\n        return data\n\n    # Get the index of the data\n    index = data.index\n\n    # Get the level number for each column in clocs\n    clocs = [index._get_level_number(i) for i in clocs]\n\n    # Get the remaining levels (not in clocs)\n    rlocs = [i for i in range(index.nlevels) if i not in clocs]\n\n    # Get the levels, codes and names for clocs and rlocs\n    clevels = [index.levels[i] for i in clocs]\n    ccodes = [index.codes[i] for i in clocs]\n    cnames = [index.names[i] for i in clocs]\n    rlevels = [index.levels[i] for i in rlocs]\n    rcodes = [index.codes[i] for i in rlocs]\n    rnames = [index.names[i] for i in rlocs]\n\n    # Create a placeholder MultiIndex for unstacking\n    dummy_index = MultiIndex(\n        levels=rlevels + [ccodes[0]],\n        codes=rcodes + [ccodes[1]],\n        names=rnames + [cnames[0]],\n        verify_integrity=False,\n    )\n\n    # Copy the data and set the dummy index\n    dummy = data.copy()\n    dummy.index = dummy_index\n\n    # Unstack the data\n    unstacked = dummy.unstack(cnames[0], fill_value=fill_value)\n\n    # Create new levels, names and codes\n    new_levels = rlevels + [clevels[0]]\n    new_names = rnames + [cnames[0]]\n    new_codes = [unstacked.columns.codes[0]]\n\n    # Create new MultiIndex for the unstacked data\n    new_columns = MultiIndex(\n        levels=new_levels, codes=new_codes, names=new_names, verify_integrity=False\n    )\n\n    # Set the new MultiIndex for the unstacked data\n    if isinstance(unstacked, Series):\n        unstacked.index = new_columns\n    else:\n        unstacked.columns = new_columns\n\n    return unstacked",
            "imports": [
                "from pandas import Index, MultiIndex, Series, DataFrame",
                "from pandas.core.reshape.util import get_group_index, compress_group_index, decons_obs_group_ids"
            ]
        }
    ]
}