{
    "pandas": [
        {
            "bugID": 84,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    index = data.index\n\n    levels = list(index.levels)\n    codes = list(index.codes)\n\n    new_levels = []\n    new_codes = []\n    new_names = []\n\n    for i in range(len(clocs)):\n        if index.names[i] in clocs:\n            cloc = clocs.index(index.names[i])\n            new_levels.append(levels[i])\n            new_codes.append(codes[i])\n            new_names.append(index.names[i])\n            levels[i] = None  # Set the level to None for unstacking\n        else:\n            new_levels.append([None for _ in range(len(levels[i]))])\n\n    unstacked = data.unstack(level=new_names[0], fill_value=fill_value)\n\n    reshaped_levels = list(unstacked.columns if isinstance(unstacked, pd.DataFrame) else unstacked.index)\n\n    for i in range(len(new_names)):\n        new_levels[i] = reshaped_levels\n\n    new_index = pd.MultiIndex(levels=new_levels, codes=new_codes, names=new_names)\n\n    if isinstance(unstacked, pd.Series):\n        unstacked.index = new_index\n    else:\n        unstacked.columns = new_index\n\n    return unstacked",
            "import_list": []
        }
    ]
}