{
    "pandas": [
        {
            "bugID": 104,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 1845,
            "file_name": "pandas/core/groupby/groupby.py",
            "replace_code": "def quantile(self, q=0.5, interpolation: str = \"linear\"):\n    from pandas.api.types import is_scalar, is_integer_dtype, is_object_dtype, is_datetime64_dtype\n    from pandas.core.dtypes.common import np\n    from pandas.core.common import is_scalar\n    from pandas.api.types import is_scalar, is_integer_dtype, is_object_dtype, is_datetime64_dtype\n    from pandas.core.dtypes.common import np\n    from pandas.core.common import is_scalar\n    \n    if is_scalar(q):\n        return self._get_cythonized_result(\n            \"group_quantile\",\n            cython_dtype=np.dtype(np.float64),\n            pre_processing=self.pre_processor,\n            post_processing=self.post_processor,\n            aggregate=True,\n            needs_values=True,\n            needs_mask=True,\n            q=q,\n            interpolation=interpolation\n        )\n    else:\n        results = [\n            self._get_cythonized_result(\n                \"group_quantile\",\n                cython_dtype=np.dtype(np.float64),\n                pre_processing=self.pre_processor,\n                post_processing=self.post_processor,\n                aggregate=True,\n                needs_values=True,\n                needs_mask=True,\n                q=qi,\n                interpolation=interpolation\n            ) for qi in q\n        ]\n        result = pd.concat(results, axis=0, keys=q)\n        order = np.roll(list(range(result.index.nlevels)), -1)\n        result = result.reorder_levels(order)\n        result = result.reindex(q, level=-1)\n        hi = len(q) * self.ngroups\n        arr = np.arange(0, hi, self.ngroups)\n        arrays = []\n        \n        for i in range(self.ngroups):\n            arr2 = arr + i\n            arrays.append(arr2)\n        \n        indices = np.concatenate(arrays)\n        assert len(indices) == len(result)\n        return result.take(indices)"
        }
    ]
}