{
    "pandas": [
        {
            "bugID": 114,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 4486,
            "file_name": "pandas/core/indexes/base.py",
            "replace_code": "def get_value(self, series, key):\n    s = series._values if hasattr(series, '_values') else series\n    \n    if isinstance(s, pd.api.extensions.ExtensionArray) or isinstance(s, pd.Index):\n        try:\n            iloc = self.get_loc(key)\n            return s[iloc]\n        except KeyError:\n            if len(self) > 0 and (self.holds_integer() or self.is_boolean()):\n                raise\n            elif isinstance(key, int):\n                return s[key]\n    k = key.values[0] if isinstance(key, pd.Series) else key\n    k = self._convert_scalar_indexer(k, kind='getitem')\n    \n    try:\n        return self._engine.get_value(s, k, tz=getattr(series.dtype, 'tz', None))\n    except (KeyError, IndexError) as e1:\n        if len(self) > 0 and (self.holds_integer() or self.is_boolean()):\n            raise\n        try:\n            return libindex.get_value_at(s, key)\n        except IndexError:\n            raise\n        except TypeError:\n            if hasattr(key, '__iter__'):\n                raise InvalidIndexError(key)\n            else:\n                raise e1\n        except Exception:\n            raise e1\n    except TypeError:\n        if isinstance(key, (int, bool)):\n            raise IndexError(key)\n        else:\n            raise InvalidIndexError(key)",
            "imports": []
        }
    ]
}