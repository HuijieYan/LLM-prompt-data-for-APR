{
    "pandas": [
        {
            "bugID": 158,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 4105,
            "file_name": "pandas/core/series.py",
            "replace_code": "def rename(self, mapper=None, index=None, columns=None, axis=None, copy=True, inplace=False, level=None):\n    \"\"\"\n    Alter Series index labels or name.\n\n    Function / dict values must be unique (1-to-1). Labels not contained in\n    a dict / Series will be left as-is. Extra labels listed don't throw an\n    error.\n\n    Alternatively, change ``Series.name`` with a scalar value.\n\n    See the :ref:`user guide <basics.rename>` for more.\n\n    Parameters\n    ----------\n    mapper : dict-like or function, optional\n        dict-like or functions transformations to apply to the index\n        or columns.\n    index : scalar, hashable sequence, dict-like or function, optional\n        Only rename labels if index is a dict.\n    columns : scalar, hashable sequence, dict-like or function, optional\n        Only rename labels if mapper is a dict.\n    axis : int, default None\n        Not implemented: axis is not functional. You are accessing index labels, which is a series equivalent of index.\n    copy : bool, default True\n        whether to copy underlying data.\n    inplace : bool, default False\n        Whether to return a new Series. If True then value of copy is ignored.\n    level : int or level name, default None\n        In case of a MultiIndex, only rename labels in the specified level.\n    \"\"\"\n    # series in the dictionary\n    if isinstance(mapper, (dict, Series)):\n        return self.map(mapper, inplace=inplace)\n\n    if index is not None or columns is not None:\n        return super().rename(index=index, columns=columns, level=level, inplace=inplace)\n\n    raise ValueError(\"Must pass mapper or index to rename.\")",
            "imports": []
        }
    ]
}