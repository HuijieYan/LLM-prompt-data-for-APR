{
    "pandas": [
        {
            "bugID": 157,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 0,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 1591,
            "file_name": "pandas/core/reshape/merge.py",
            "replace_code": "def _get_merge_keys(self):\n    (left_join_keys, right_join_keys, join_names) = super()._get_merge_keys()\n\n    # validate tolerance\n    if self.tolerance is not None:\n        lt = left_join_keys[-1]\n\n        if lt.dtype == 'timedelta64[ns]':\n            if not isinstance(self.tolerance, pd.Timedelta):\n                raise MergeError(\"tolerance must be a Timedelta for a TimedeltaIndex\")\n            if self.tolerance < pd.Timedelta(0):\n                raise MergeError(\"tolerance must be positive\")\n    \n        elif lt.dtype in ['datetime64[ns]', 'datetime64[ns, UTC]']:\n            if not isinstance(self.tolerance, pd.Timedelta):\n                raise MergeError(\"tolerance must be a Timedelta for a DateTimeIndex\")\n            if self.tolerance < pd.Timedelta(0):\n                raise MergeError(\"tolerance must be positive\")\n    \n        elif lt.dtype in ['int64', 'float64']:\n            if not isinstance(self.tolerance, (int, float)):\n                raise MergeError(\"tolerance must be an integer or float for an int/float key\")\n            if self.tolerance < 0:\n                raise MergeError(\"tolerance must be positive\")",
            "import_list": []
        }
    ]
}