{
    "pandas": [
        {
            "bugID": 137,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 502,
            "file_name": "pandas/core/arrays/categorical.py",
            "replace_code": "def astype(self, dtype: Any, copy: bool = True) -> ArrayLike:\n    if is_categorical_dtype(dtype):\n        dtype = cast(Union[str, CategoricalDtype], dtype)\n        \n        if isinstance(dtype, pd.DatetimeTZDtype):\n            if isinstance(self.dtype, pd.DatetimeTZDtype) and self.dtype == dtype:\n                return self\n            else:\n                return self.copy()\n        elif isinstance(dtype, pd.TimedeltaDtype):\n            if isinstance(self.dtype, pd.TimedeltaDtype) and self.dtype == dtype:\n                return self\n            else:\n                return self.copy()\n        elif isinstance(dtype, pd.PeriodDtype):\n            if isinstance(self.dtype, pd.PeriodDtype) and self.dtype == dtype:\n                return self\n            else:\n                return self.copy()\n        elif isinstance(dtype, pd.IntervalDtype):\n            if isinstance(self.dtype, pd.IntervalDtype) and self.dtype == dtype:\n                return self\n            else:\n                return self.copy()\n        elif isinstance(dtype, pd.Int64Dtype):\n            if isinstance(self.dtype, pd.Int64Dtype) and self.dtype == dtype:\n                return self\n            else:\n                return self.copy()\n    else:\n        return np.array(self, dtype=dtype, copy=copy)",
            "imports": []
        }
    ]
}