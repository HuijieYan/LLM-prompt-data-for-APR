{
    "pandas": [
        {
            "bugID": 137,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 502,
            "file_name": "pandas/core/arrays/categorical.py",
            "replace_code": "def astype(self, dtype: Dtype, copy: bool = True) -> ArrayLike:\n    from pandas.core.arrays import PeriodArray, IntervalArray\n    \"\"\"\n    Coerce this type to another dtype\n    \n    Parameters\n    ----------\n    dtype : numpy dtype or pandas type\n    copy : bool, default True\n        By default, astype always returns a newly allocated object.\n        If copy is set to False and dtype is categorical, the original\n        object is returned.\n    \"\"\"\n    if isinstance(dtype, CategoricalDtype):\n        if self.dtype == dtype:\n            if copy:\n                return self.copy()\n            else:\n                return self\n        return self._set_dtype(dtype)\n    if isinstance(dtype, np.dtype) and dtype.kind in (\"m\", \"M\"):\n        return self._delegate_to_indexer(\"astype\", dtype=dtype, copy=copy)\n    if isinstance(dtype, (PeriodDtype, IntervalDtype)):\n        from pandas.core.arrays import PeriodArray, IntervalArray\n    \n        if isinstance(self._data, (PeriodArray, IntervalArray)) and self.dtype == dtype:\n            if copy:\n                return self.copy()\n            else:\n                return self\n        else:\n            return self._reduce(dtype=dtype, copy=copy)\n    return np.array(self, dtype=dtype, copy=copy)"
        }
    ]
}