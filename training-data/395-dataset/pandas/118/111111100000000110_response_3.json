{
    "pandas": [
        {
            "bugID": 118,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 20,
            "file_name": "pandas/core/reshape/melt.py",
            "replace_code": "def melt(\n    frame,\n    id_vars=None,\n    value_vars=None,\n    var_name=\"variable\",\n    value_name=\"value\",\n    col_level=None,\n):\n    if value_vars is not None:\n        frame = frame.loc[:, id_vars + value_vars]\n    else:\n        frame = frame.copy()\n    if col_level is not None:\n        frame.columns = frame.columns.get_level_values(col_level)\n\n    mdata = {}\n    for col in id_vars:\n        id_data = frame.pop(col)\n        id_data = id_data.values\n        id_data = np.tile(id_data, len(frame.index))\n        mdata[col] = id_data\n\n    mdata[value_name] = frame.values.ravel(\"F\")\n\n    mdata[var_name] = np.tile(np.array(id_vars), len(frame.index)).repeat(len(frame.columns))\n\n    return pd.DataFrame(mdata)",
            "imports": []
        }
    ]
}