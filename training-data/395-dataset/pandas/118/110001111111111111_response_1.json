{
    "pandas": [
        {
            "bugID": 118,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 20,
            "file_name": "pandas/core/reshape/melt.py",
            "replace_code": "def melt(\n    frame: NDFrame,\n    id_vars=None,\n    value_vars=None,\n    var_name=None,\n    value_name=\"value\",\n    col_level=None,\n) -> NDFrame:\n    if var_name is None:\n        var_name = \"variable\"\n\n    if id_vars is None:\n        id_vars = Index([])\n    elif not is_list_like(id_vars):\n        id_vars = [id_vars]\n\n    if value_vars is None:\n        value_vars = frame.columns.difference(id_vars)\n    elif not is_list_like(value_vars):\n        value_vars = [value_vars]\n\n    if not isinstance(id_vars, Index):\n        id_vars = Index(id_vars)\n    if not isinstance(value_vars, Index):\n        value_vars = Index(value_vars)\n\n    cols = Index([])\n    if isinstance(frame.columns, Index) and frame.columns.__class__.__name__ == \"MultiIndex\":\n        cols = Index([x for c in frame.columns for x in c])\n    else:\n        cols = frame.columns\n\n    missing_id_vars = id_vars.difference(cols)\n    if not missing_id_vars.empty:\n        raise KeyError(\"The following 'id_vars' are not present in the DataFrame: {missing}\".format(missing=list(missing_id_vars)))\n\n    missing_value_vars = value_vars.difference(cols)\n    if not missing_value_vars.empty:\n        raise KeyError(\"The following 'value_vars' are not present in the DataFrame: {missing}\".format(missing=list(missing_value_vars)))\n\n    if value_vars.empty:\n        value_vars = frame.columns.difference(id_vars)\n    elif not value_vars.isin(frame.columns).all():\n        raise KeyError(\"The following 'value_vars' are not present in the DataFrame: {missing}\".format(missing=value_vars.difference(frame.columns)))\n\n    id_data = frame.loc[:, id_vars]\n    id_data = id_data.reset_index(drop=True)\n\n    mdata = {\n        var_name: np.tile(np.asarray(value_vars), len(id_data)),\n        value_name: np.asarray(frame[value_vars]).ravel(\"F\")\n    }\n\n    for col in id_data.columns:\n        mdata[col] = np.repeat(id_data[col], len(value_vars))\n\n    return frame._constructor(mdata)",
            "imports": [
                "from pandas.core.indexes.base import Index",
                "from pandas.core.dtypes.common import is_list_like",
                "from pandas.core.generic import NDFrame"
            ]
        }
    ]
}