{
    "pandas": [
        {
            "bugID": 118,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 20,
            "file_name": "pandas/core/reshape/melt.py",
            "replace_code": "def melt(\n    frame: DataFrame,\n    id_vars=None,\n    value_vars=None,\n    var_name=None,\n    value_name=\"value\",\n    col_level=None,\n) -> DataFrame:\n    if isinstance(frame.columns, ABCMultiIndex):\n        cols = [x for c in frame.columns for x in c]\n    else:\n        cols = list(frame.columns)\n\n    if id_vars is not None:\n        if not is_list_like(id_vars):\n            id_vars = [id_vars]\n        elif isinstance(frame.columns, ABCMultiIndex) and not all(isinstance(v, tuple) for v in id_vars):\n            raise ValueError(\n                \"id_vars must be a list of tuples when columns are a MultiIndex\"\n            )\n        else:\n            id_vars = list(id_vars)\n            missing = Index([item for sublist in id_vars for item in sublist]).difference(cols)\n            if not missing.empty:\n                raise KeyError(\n                    \"The following 'id_vars' are not present\"\n                    \" in the DataFrame: {missing}\"\n                    \"\".format(missing=list(missing))\n                )\n    else:\n        id_vars = []\n\n    if value_vars is not None:\n        if not is_list_like(value_vars):\n            value_vars = [value_vars]\n        elif isinstance(frame.columns, ABCMultiIndex) and not all(isinstance(v, tuple) for v in value_vars):\n            raise ValueError(\n                \"value_vars must be a list of tuples when columns are a MultiIndex\"\n            )\n        else:\n            value_vars = list(value_vars)\n            missing = Index([item for sublist in value_vars for item in sublist]).difference(cols)\n            if not missing.empty:\n                raise KeyError(\n                    \"The following 'value_vars' are not present in\"\n                    \" the DataFrame: {missing}\"\n                    \"\".format(missing=list(missing))\n                )\n        frame = frame.loc[:, id_vars + value_vars]\n    else:\n        frame = frame.copy()\n\n    if col_level is not None:  \n        frame.columns = frame.columns.get_level_values(col_level)",
            "imports": []
        }
    ]
}