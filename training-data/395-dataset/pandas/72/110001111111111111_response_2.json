{
    "pandas": [
        {
            "bugID": 72,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 808,
            "file_name": "pandas/core/internals/blocks.py",
            "replace_code": "def setitem(self, indexer, value):\n    from pandas.core.internals.blocks import CategoricalBlock\n    \"\"\"\n    Set the value inplace, returning a maybe different typed block.\n    \n    Parameters\n    ----------\n    indexer : tuple, list-like, array-like, slice\n        The subset of self.values to set\n    value : object\n        The value being set\n    \n    Returns\n    -------\n    Block\n    \n    Notes\n    -----\n    `indexer` is a direct slice/positional indexer. `value` must\n    be a compatible shape.\n    \"\"\"\n    from pandas.core.internals.blocks import CategoricalBlock\n    \n    transpose = self.ndim == 2\n    \n    # coerce None values, if appropriate\n    if value is None:\n        if self.is_numeric:\n            value = np.nan\n    \n    # coerce if block dtype can store value\n    values = self.values\n    if self._can_hold_element(value) and not isinstance(value, (pd.Categorical, CategoricalBlock)):\n        if lib.is_scalar(value):\n            value = convert_scalar(values, value)\n    else:\n        if isinstance(value, (pd.Categorical, CategoricalBlock)):\n            cat = pd.Categorical(value, categories=self.dtype.categories, ordered=self.dtype.ordered)\n            if not cat.equals(self.dtype):\n                block = CategoricalBlock(cat, self.dtype)\n                return self.make_block(block.values, placement=self.mgr_locs)"
        }
    ]
}