{
    "pandas": [
        {
            "bugID": 99,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 245,
            "file_name": "pandas/core/tools/datetimes.py",
            "replace_code": "def _convert_listlike_datetimes(\n    arg,\n    format=None,\n    name=None,\n    tz=None,\n    unit=None,\n    errors=None,\n    infer_datetime_format=False,\n    dayfirst=False,\n    yearfirst=False,\n    exact=False,\n):\n    if isinstance(arg, (list, tuple)):\n        arg = np.array(arg, dtype=\"O\")\n\n    if is_timedelta64_ns_dtype(arg):\n        result = to_timedelta(arg)\n        return Index(result, name=name)\n\n    elif unit is not None:\n        if format is not None:\n            raise ValueError(\"cannot specify both format and unit\")\n        result = to_datetime(arg, unit=unit, errors=errors)\n        return result.tz_localize(tz)\n\n    elif infer_datetime_format and format is None:\n        format = _guess_datetime_format_for_array(arg, dayfirst=dayfirst)\n\n    result = DatetimeIndex(arg, name=name)\n\n    return result",
            "imports": [
                "from pandas import DatetimeIndex, Index",
                "import numpy as np",
                "from pandas.core.arrays.timedeltas import to_timedelta",
                "from pandas.core.tools.timedeltas import is_timedelta64_ns_dtype"
            ]
        }
    ]
}