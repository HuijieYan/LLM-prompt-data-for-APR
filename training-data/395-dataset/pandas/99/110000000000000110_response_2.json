{
    "pandas": [
        {
            "bugID": 99,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 245,
            "file_name": "pandas/core/tools/datetimes.py",
            "replace_code": "def _convert_listlike_datetimes(\n    arg,\n    format=None,\n    name=None,\n    tz=None,\n    unit=None,\n    errors=None,\n    infer_datetime_format=False,\n    dayfirst=False,\n    yearfirst=False,\n    exact=False,\n):\n    \"\"\"\n    Helper function for to_datetime. Performs the conversions of 1D listlike\n    of dates\n\n    Parameters\n    ----------\n    arg : list, tuple, ndarray, Series, Index\n        date to be parsed\n    name : object\n        None or string for the Index name\n    tz : object\n        None or 'utc'\n    unit : string\n        None or string of the frequency of the passed data\n    errors : string\n        error handing behaviors from to_datetime, 'raise', 'coerce', 'ignore'\n    infer_datetime_format : boolean\n        inferring format behavior from to_datetime\n    dayfirst : boolean\n        dayfirst parsing behavior from to_datetime\n    yearfirst : boolean\n        yearfirst parsing behavior from to_datetime\n    exact : boolean\n        exact format matching behavior from to_datetime\n\n    Returns\n    -------\n    Index-like of parsed dates\n    \"\"\"\n    from pandas.core.arrays import DatetimeArray\n    from pandas.core.arrays.datetimes import array_with_unit_to_datetime, maybe_convert_dtype\n    from pandas import DatetimeIndex\n\n    if isinstance(arg, (list, tuple)):\n        arg = np.array(arg, dtype=\"O\")\n\n    if hasattr(arg, \"tz\") and arg.tz is not None:\n        return arg.tz_convert(tz)\n\n    if hasattr(arg, \"tz_converted\"):\n        return arg.tz_convert(tz)\n\n    if infer_datetime_format:\n        from pandas.tseries.tools import to_time\n        arg = to_time(arg, errors=errors)\n    arg, _ = maybe_convert_dtype(arg, copy=False)\n    result, tz_parsed = array_with_unit_to_datetime(arg, unit, errors=errors)\n\n    result = maybe_box_datetimelike(result, arg)\n\n    return result",
            "imports": [
                "from pandas.core.arrays import DatetimeArray",
                "from pandas.core.arrays.datetimes import array_with_unit_to_datetime, maybe_convert_dtype",
                "from pandas import DatetimeIndex",
                "from pandas.tseries.tools import to_time"
            ]
        }
    ]
}