{
    "pandas": [
        {
            "bugID": 52,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 581,
            "file_name": "pandas/core/groupby/generic.py",
            "replace_code": "def nunique(self, dropna: bool = True) -> pd.Series:\n    \"\"\"\n    Return number of unique elements in the group.\n\n    Returns\n    -------\n    pd.Series\n        Number of unique values within each group.\n    \"\"\"\n    ids, _, _ = self.grouper.group_info\n\n    val = self.obj._internal_get_values()\n\n    # Convert to datetime object and then assign NaT\n    val = pd.to_datetime(val, errors='coerce')\n\n    # GH 27951\n    # temporary fix while we wait for NumPy bug 12629 to be fixed\n    val[isna(val)] = pd.NaT\n\n    try:\n        sorter = np.lexsort((val, ids))\n    except TypeError:  # catches object dtypes\n        msg = f\"val.dtype must be object, got {val.dtype}\"\n        assert val.dtype == object, msg\n        val, _ = algorithms.factorize(val, sort=False)\n        sorter = np.lexsort((val, ids))\n        _isna = lambda a: a == -1\n    else:\n        _isna = isna",
            "imports": [
                "import pandas as pd",
                "import numpy as np"
            ]
        }
    ]
}