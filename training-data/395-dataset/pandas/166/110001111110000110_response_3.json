{
    "pandas": [
        {
            "bugID": 166,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 7178,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def _join_compat(\n    self, other, on=None, how=\"left\", lsuffix=\"\", rsuffix=\"\", sort=False\n):\n    from pandas.core.reshape.merge import concat\n\n    if isinstance(other, Series):\n        if other.name is None:\n            raise ValueError(\"Other Series must have a name\")\n        other = DataFrame({other.name: other})\n\n    if isinstance(other, DataFrame):\n        return concat(\n            [self, other],\n            axis=1,\n            join=\"outer\",\n            ignore_index=False,\n            keys=None,\n            levels=None,\n            names=None,\n            verify_integrity=False,\n            copy=True,\n        )\n    else:\n        if on is not None:\n            raise ValueError(\n                \"Joining multiple DataFrames only supported for joining on index\"\n            )\n\n        frames = [self] + list(other)\n\n        joined = concat(\n            frames, axis=1, join=how, verify_integrity=False\n        )\n\n        return joined",
            "import_list": [
                "from pandas.core.reshape.merge import concat"
            ]
        }
    ]
}