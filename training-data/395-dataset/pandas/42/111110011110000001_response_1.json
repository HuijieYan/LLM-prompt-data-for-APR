{
    "pandas": [
        {
            "bugID": 42,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 1048,
            "file_name": "pandas/_testing.py",
            "replace_code": "def assert_series_equal(\n    left,\n    right,\n    check_dtype=True,\n    check_names=True,\n    check_categorical=True,\n    obj=\"Series\",\n):\n    # instance validation\n    assert isinstance(left, Series) and isinstance(right, Series), f\"{obj} Expected type Series, found {type(left)} and {type(right)} instead\"\n\n    if check_dtype:\n        assert_attr_equal(\"dtype\", left, right, obj=f\"Attributes of {obj}\")\n\n    if check_categorical:\n        if (isinstance(left._values, ExtensionArray) and isinstance(right._values, ExtensionArray) and\n            not check_dtype and left._values.dtype == right._values.dtype):\n            pass\n        else:\n            assert_categorical_equal(\n                left._values,\n                right._values,\n                obj=f\"{obj} category\"\n            )\n\n    # metadata comparison\n    if check_names:\n        assert_attr_equal(\"name\", left, right, obj=obj)",
            "imports": [
                "import pandas as pd",
                "from pandas.core.arrays import ExtensionArray",
                "from pandas.core.arrays.interval import IntervalArray",
                "from pandas.core.frame import DataFrame",
                "from pandas.core.series import Series",
                "from pandas._testing import assert_attr_equal, assert_index_equal, assert_numpy_array_equal, assert_categorical_equal"
            ]
        }
    ]
}