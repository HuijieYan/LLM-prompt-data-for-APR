{
    "pandas": [
        {
            "bugID": 42,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 1048,
            "file_name": "pandas/_testing.py",
            "replace_code": "def assert_series_equal(left, right, check_dtype=True, check_index_type=\"equiv\", check_series_type=True,\n                        check_less_precise=False, check_names=True, check_exact=False, check_datetimelike_compat=False,\n                        check_categorical=True, check_category_order=True, obj=\"Series\"):\n    # ... (existing code)\n\n    if check_dtype:\n        if (is_extension_array_dtype(left.dtype) or is_extension_array_dtype(right.dtype)) and not check_dtype:\n            # Modify the check to recognize extension arrays\n            assert_extension_array_equal(left._values, right._values, check_dtype=check_dtype,\n                                         check_less_precise=check_less_precise, check_exact=check_exact)\n        elif is_categorical_dtype(left.dtype) or is_categorical_dtype(right.dtype):\n            # Handle categorical dtype comparison separately if needed\n            _testing.assert_categorical_equal(left, right, check_dtype=check_dtype,\n                                              check_category_order=check_category_order, obj=obj)\n        else:\n            assert_attr_equal(\"dtype\", left, right, obj=\"Attributes of Series\")",
            "imports": []
        }
    ]
}