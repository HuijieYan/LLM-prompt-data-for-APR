{
    "pandas": [
        {
            "bugID": 42,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 1048,
            "file_name": "pandas/_testing.py",
            "replace_code": "def assert_series_equal(\n        left,\n        right,\n        check_dtype=True,\n        check_index_type=\"equiv\",\n        check_series_type=True,\n        check_less_precise=False,\n        check_names=True,\n        check_exact=False,\n        check_datetimelike_compat=False,\n        check_categorical=True,\n        check_category_order=True,\n        obj=\"Series\",\n    ):\n\n    \"\"\"\n    Check that left and right Series are equal.\n    \n    # ... other code ...\n    \"\"\"\n    __tracebackhide__ = True\n    \n    # instance validation\n    _check_isinstance(left, right, Series)\n    \n    if check_series_type:\n        assert_class_equal(left, right, obj=obj)\n    \n    # length, index, dtype, and other comparisons\n    \n    # updated assertions for types of extension arrays and interval arrays\n    if is_extension_array_dtype(left._values) or is_extension_array_dtype(right._values):\n        assert_isinstance(left._values, ExtensionArray)\n        assert_isinstance(right._values, ExtensionArray)\n        assert_extension_array_equal(left._values, right._values)\n    elif is_interval_dtype(left._values) or is_interval_dtype(right._values):\n        assert_isinstance(left._values, IntervalArray)\n        assert_isinstance(right._values, IntervalArray)\n        assert_interval_array_equal(left._values, right._values)\n    else:\n        _testing.assert_almost_equal(\n            left._values,\n            right._values,\n            check_less_precise=check_less_precise,\n            check_dtype=check_dtype,\n            obj=str(obj),\n        )"
        }
    ]
}