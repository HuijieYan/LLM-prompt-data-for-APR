{
    "pandas": [
        {
            "bugID": 107,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 6658,
            "file_name": "pandas/core/frame.py",
            "replace_code": "def append(self, other, ignore_index=False, verify_integrity=False, sort=False):\n    if isinstance(other, (Series, dict)):\n        if isinstance(other, dict):\n            other = Series(other)\n        if other.name is None and not ignore_index:\n            raise TypeError(\"Can only append a Series if ignore_index=True or if the Series has a name\")\n        if other.name is not None:\n            index = Index([other.name], name=self.index.name)\n        else:\n            index = None\n\n        idx_diff = other.index.difference(self.columns)\n        combined_columns = self.columns.union(idx_diff)\n        other = other.reindex(combined_columns, copy=False)\n        other = DataFrame(other.values.reshape((1, len(other))), index=index, columns=combined_columns)\n        other = other._convert(datetime=True, timedelta=True)\n        if not self.columns.equals(combined_columns):\n            self = self.reindex(columns=combined_columns)\n    elif isinstance(other, list):\n        if not other:\n            return self\n        if all(isinstance(item, (DataFrame, Series)) for item in other):\n            other = concat(other, ignore_index=True)\n            if not self.columns.equals(other.columns):\n                other = other.reindex(columns=self.columns)\n\n    return concat([self, other], ignore_index=ignore_index, verify_integrity=verify_integrity, sort=sort)",
            "import_list": [
                "import pandas as pd",
                "from pandas import DataFrame, Series, Index",
                "from pandas.core.reshape.concat import concat"
            ]
        }
    ]
}