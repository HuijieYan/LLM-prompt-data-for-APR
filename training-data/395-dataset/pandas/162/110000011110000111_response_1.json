{
    "pandas": [
        {
            "bugID": 162,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 585,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def _normalize(table, normalize, margins, margins_name=\"All\"):\n    import pandas as pd\n    if not isinstance(normalize, bool) and not isinstance(normalize, str):\n        raise ValueError(\"Not a valid normalize argument\")\n    \n    if margins is False:\n        # Actual Normalizations\n        normalizers = {\n            \"all\": lambda x: x / x.sum(axis=1).sum(axis=0),\n            \"columns\": lambda x: x / x.sum(),\n            \"index\": lambda x: x.div(x.sum(axis=1), axis=0),\n        }\n        normalizers[True] = normalizers[\"all\"]\n    \n        f = normalizers.get(normalize)\n        if f is None:\n            raise ValueError(\"Not a valid normalize argument\")\n    \n        table = f(table)\n        table = table.fillna(0)\n    \n    elif margins is True:\n        columns_margins = table.sum(axis=0).to_frame().T\n        index_margins = table.sum(axis=1).to_frame(name='Total')\n    \n        if normalize == \"columns\":\n            table = table.div(columns_margins)\n        elif normalize == \"index\":\n            table = table.div(index_margins, axis=0)\n        elif normalize == \"all\" or normalize is True:\n            table = table.div(table.sum().sum())\n    \n        table = table.fillna(0)\n        if margins_name != \"All\":\n            table.index.name = margins_name\n            table.columns.name = margins_name\n    \n    else:\n        raise ValueError(\"Not a valid margins argument\")\n    \n    return table"
        }
    ]
}