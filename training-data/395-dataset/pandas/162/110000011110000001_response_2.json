{
    "pandas": [
        {
            "bugID": 162,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 585,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def _normalize(table, normalize, margins, margins_name=\"All\"):\n    if not isinstance(normalize, (bool, str)):\n        axis_subs = {0: \"index\", 1: \"columns\"}\n        try:\n            normalize = axis_subs[normalize]\n        except KeyError:\n            raise ValueError(\"Not a valid normalize argument\")\n\n    if margins is False:\n        # Actual Normalizations\n        normalizers = {\n            \"all\": lambda x: x / x.sum(axis=1).sum(axis=0),\n            \"columns\": lambda x: x / x.sum(),\n            \"index\": lambda x: x.div(x.sum(axis=1), axis=0),\n        }\n        normalizers[True] = normalizers[\"all\"]\n\n        # rest of the code for normalizing the table\n\n    elif margins is True:\n        column_margin = table.index if margins_name == \"All\" else table[margins_name].drop(margins_name, errors='ignore')\n        index_margin = table.columns if margins_name == \"All\" else table.loc[margins_name, :].drop(margins_name, errors='ignore')\n\n        # rest of the code to fix margins and normalize the table\n\n    else:\n        raise ValueError(\"Not a valid margins argument\")\n\n    return table",
            "import_list": []
        }
    ]
}