{
    "pandas": [
        {
            "bugID": 162,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 585,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def _normalize(table, normalize, margins, margins_name=\"All\"):\n    if not isinstance(normalize, bool) and not isinstance(normalize, str):\n        raise ValueError(\"Not a valid normalize argument\")\n\n    if margins is False:\n        normalizers = {\n            \"all\": lambda x: x / x.sum().sum(),\n            \"columns\": lambda x: x / x.sum(),\n            \"index\": lambda x: x.div(x.sum(axis=1), axis=0),\n        }\n\n        normalize = \"all\" if normalize is True else normalize\n\n        if normalize not in normalizers:\n            raise ValueError(\"Not a valid normalize argument\")\n\n        f = normalizers[normalize]\n        table = f(table)\n        table = table.fillna(0)\n\n    elif margins is True:\n        column_margin = table[margins_name].drop(margins_name)\n        index_margin = table.loc[margins_name].drop(margins_name)\n        table = table.drop(margins_name, axis=1).drop(margins_name)\n\n        table_index_names = table.index.names\n        table_columns_names = table.columns.names\n\n        table = _normalize(table, normalize, False, margins_name=\"All\")\n\n        if normalize == \"columns\":\n            column_margin = column_margin / column_margin.sum()\n            table = table.join(column_margin)\n            table = table.fillna(0)\n\n        elif normalize == \"index\":\n            index_margin = index_margin / index_margin.sum()\n            table = table.append(index_margin)\n            table = table.fillna(0)\n\n        elif normalize == \"all\" or normalize is True:\n            column_margin = column_margin / column_margin.sum()\n            index_margin = index_margin / index_margin.sum()\n\n            index_margin[margins_name] = 1\n            table = table.join(column_margin)\n            table = table.append(index_margin)\n            table = table.fillna(0)\n\n        else:\n            raise ValueError(\"Not a valid normalize argument\")\n\n        table.index.names = table_index_names\n        table.columns.names = table_columns_names\n\n    else:\n        raise ValueError(\"Not a valid margins argument\")\n\n    return table",
            "import_list": []
        }
    ]
}