{
    "pandas": [
        {
            "bugID": 162,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 585,
            "file_name": "pandas/core/reshape/pivot.py",
            "replace_code": "def _normalize(table, normalize, margins, margins_name=\"All\"):\n    if not isinstance(normalize, (bool, str)):\n        axis_subs = {0: \"index\", 1: \"columns\"}\n        try:\n            normalize = axis_subs[normalize]  # normalize needs to be set to \"index\" or \"columns\"\n        except KeyError:\n            raise ValueError(\"Not a valid normalize argument\")\n\n    if margins is False:\n        # actual normalizations\n        if normalize == \"all\":\n            table = table / table.values.sum()\n        elif normalize == \"columns\":\n            table = table.div(table.sum(), axis=1)\n        elif normalize == \"index\":\n            table = table.div(table.sum(axis=1), axis=0)\n            \n        table = table.fillna(0)\n\n    elif margins is True:\n        column_margin = table.sum(axis=0)\n        index_margin = table.sum(axis=1)\n        \n        if normalize == \"all\":\n            column_margin = column_margin / column_margin.sum()\n            index_margin = index_margin / index_margin.sum()\n            \n        table = table.div(index_margin, axis=0)\n        table = table.div(column_margin, axis=1)\n\n        table.loc[margins_name] = index_margin\n        table[margins_name] = column_margin\n        table.at[margins_name, margins_name] = table.values.sum()\n\n    else:\n        raise ValueError(\"Not a valid margins argument\")\n\n    return table",
            "import_list": []
        }
    ]
}