{
    "pandas": [
        {
            "bugID": 31,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 1827,
            "file_name": "pandas/core/groupby/groupby.py",
            "replace_code": "def quantile(self, q=0.5, interpolation: str = \"linear\"):\n    if is_scalar(q):\n        return self._get_cythonized_result(\n            \"group_quantile\",\n            how=\"quantile\",\n            cython_dtype=np.dtype(np.float64),\n            aggregate=True,\n            needs_values=True,\n            needs_mask=True,\n            needs_ngroups=True,\n            q=q,\n            interpolation=interpolation,\n            groupby=self._selected_obj,\n        )\n    else:\n        results = [\n            self._get_cythonized_result(\n                \"group_quantile\",\n                how=\"quantile\",\n                cython_dtype=np.dtype(np.float64),\n                aggregate=True,\n                needs_values=True,\n                needs_mask=True,\n                needs_ngroups=True,\n                q=qi,\n                interpolation=interpolation,\n                groupby=self._selected_obj,\n            )\n            for qi in q\n        ]\n        result = concat(results, axis=0, keys=q)\n        return self._wrap_agged_blocks(result)",
            "imports": []
        }
    ]
}