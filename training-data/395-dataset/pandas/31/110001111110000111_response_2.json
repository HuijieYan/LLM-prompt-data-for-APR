{
    "pandas": [
        {
            "bugID": 31,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 1827,
            "file_name": "pandas/core/groupby/groupby.py",
            "replace_code": "def quantile(self, q=0.5, interpolation: str = \"linear\"):\n    # ... [omitted code] ...\n    \n    def post_processor(vals: np.ndarray, inference: Optional[Type]) -> np.ndarray:\n        if inference:\n            if pd.api.types.is_integer_dtype(inference):\n                vals = pd.array(np.round(vals), dtype=inference)\n    \n        return vals\n    \n    pre_proc = None\n    if pd.api.types.is_integer_dtype(self._selected_obj):\n        pre_proc = pre_processor_integer\n    elif pd.api.types.is_boolean_dtype(self._selected_obj):\n        pre_proc = pre_processor_boolean\n\n    return self._get_cythonized_result(\n        \"group_quantile\",\n        aggregate=True,\n        needs_values=True,\n        needs_mask=True,\n        cython_dtype=np.dtype(np.float64),\n        pre_processing=pre_proc,\n        post_processing=post_processor,\n        q=q,\n        interpolation=interpolation,\n    )",
            "import_list": []
        }
    ]
}