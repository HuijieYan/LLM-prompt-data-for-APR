{
    "pandas": [
        {
            "bugID": 115,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 167,
            "file_name": "pandas/core/missing.py",
            "replace_code": "def interpolate_1d(\n    xvalues,\n    yvalues,\n    method=\"linear\",\n    limit=None,\n    limit_direction=\"forward\",\n    limit_area=None,\n    fill_value=None,\n    bounds_error=False,\n    order=None,\n    **kwargs,\n):\n    # (Previous code remains unchanged)\n\n    if method == \"index\":\n        result = yvalues.reindex(xvalues).interpolate(\n            method=\"index\", limit=limit, limit_direction=limit_direction, limit_area=limit_area,\n            fill_value=fill_value, bounds_error=bounds_error, order=order, **kwargs\n        )\n        return result.values",
            "import_list": [
                "import numpy as np",
                "from pandas.api.types import is_scalar"
            ]
        }
    ]
}