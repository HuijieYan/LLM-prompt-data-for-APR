{
    "pandas": [
        {
            "bugID": 27,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 1039,
            "file_name": "pandas/core/arrays/datetimes.py",
            "replace_code": "def to_period(self, freq=None):\n    from pandas.core.arrays import PeriodArray\n\n    if self.tz is not None:\n        warnings.warn(\n            \"Converting to PeriodArray/Index representation \"\n            \"will drop timezone information.\",\n            UserWarning,\n        )\n\n    if freq is None:\n        if self.freqstr is None and self.inferred_freq is None:\n            raise ValueError(\n                \"You must pass a freq argument as the current index has no inferred frequency.\"\n            )\n\n        freq = self.freqstr or self.inferred_freq\n        freq = get_period_alias(freq)\n\n    return PeriodArray._from_datetime64(self._data, freq, tz=self.tz)",
            "import_list": [
                "from pandas.core.arrays import PeriodArray"
            ]
        }
    ]
}