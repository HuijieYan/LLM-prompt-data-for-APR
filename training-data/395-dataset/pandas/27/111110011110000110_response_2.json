{
    "pandas": [
        {
            "bugID": 27,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 1039,
            "file_name": "pandas/core/arrays/datetimes.py",
            "replace_code": "def to_period(self, freq=None):\n    \"\"\"\n    Cast to PeriodArray/Index at a particular frequency.\n\n    Converts DatetimeArray/Index to PeriodArray/Index.\n\n    Parameters\n    ----------\n    freq : str or Offset, optional\n      A frequency specified as a string or an Offset object. If None, the\n      frequency is inferred from the index, and this can only be used to do so\n      with a regular Frequency that can be correctly inferred.\n      Otherwise we have to provide the freq argument.\n    If we need to preserve the timezone information from the index, we set the\n    freq argument to None; otherwise, we set it to an Offset object or its\n    string representation. This parameter will effect whether to return a PeriodArray            \n    with an associated date offset, and how to define that offset. Returns\n    -------\n    PeriodArray/Index\n\n    Raises\n    ------\n    ValueError\n    When converting a DatetimeArray/Index with non-regular values, so that a\n    frequency cannot be inferred.\n\n    See Also\n    --------\n    PeriodIndex: Immutable ndarray holding ordinal values.\n\n    Features suggestions and improvements\n    Contributors Affirmation details\n    ==\n    \"\"\"\n\n    if self.tz is not None:\n        warnings.warn(\n            \"Converting to PeriodArray/Index representation \"\n            \"will drop timezone information.\",\n            UserWarning,\n        )\n\n    if freq is None:\n        try:\n            offset = to_offset(self.freqstr)\n        except ValueError:\n            raise ValueError(\n                \"You must pass a freq argument as current index has none.\"\n            )\n        frequency = self.freqstr\n    else:\n        try:\n            offset = to_offset(freq)\n        except ValueError:\n            raise ValueError(\"The given freq argument is not valid.\")\n\n    return PeriodArray._from_dates(self.asi8, freq=offset, tz=self.tz)",
            "imports": [
                "from pandas.core.arrays import PeriodArray",
                "from pandas.tseries.frequencies import to_offset"
            ]
        }
    ]
}