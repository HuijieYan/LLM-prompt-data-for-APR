{
    "pandas": [
        {
            "bugID": 82,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 268,
            "file_name": "pandas/core/internals/concat.py",
            "replace_code": "def _get_empty_dtype_and_na(join_units):\n    upcast_classes = defaultdict(list)\n    null_upcast_classes = defaultdict(list)\n    has_none_blocks = False\n\n    for unit in join_units:\n        dtype = unit.dtype\n        if dtype is None:\n            has_none_blocks = True\n            continue\n\n        if unit.block is None:\n            has_none_blocks = True\n            continue\n\n        if unit.is_na:\n            null_upcast_classes[upcast_cls].append(dtype)\n        else:\n            if is_categorical_dtype(dtype):\n                upcast_cls = \"category\"\n            elif is_datetime64tz_dtype(dtype):\n                upcast_cls = \"datetimetz\"\n            elif issubclass(dtype.type, np.bool_):\n                upcast_cls = \"bool\"\n            elif issubclass(dtype.type, np.object_):\n                upcast_cls = \"object\"\n            # Add more conditions as needed\n\n            upcast_classes[upcast_cls].append(dtype)\n\n    if not upcast_classes:\n        upcast_classes = null_upcast_classes\n\n    if \"object\" in upcast_classes:\n        return np.dtype(np.object_), np.nan\n    elif \"bool\" in upcast_classes:\n        if has_none_blocks:\n            return np.dtype(np.object_), np.nan\n        else:\n            return np.dtype(np.bool_), None\n    # Add more conditions and returns as needed\n\n    msg = \"invalid dtype determination in get_concat_dtype\"\n    raise AssertionError(msg)",
            "imports": [
                "import numpy as np",
                "from collections import defaultdict"
            ]
        }
    ]
}