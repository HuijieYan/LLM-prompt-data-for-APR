{
    "pandas": [
        {
            "bugID": 82,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 268,
            "file_name": "pandas/core/internals/concat.py",
            "replace_code": "def _get_empty_dtype_and_na(join_units):\n\n    \"\"\"\n    Return dtype and N/A values to use when concatenating specified units.\n    \n    Returned N/A value may be None which means there was no casting involved.\n    \n    Returns\n    -------\n    dtype\n    na\n    \"\"\"\n    upcast_classes = []\n    \n    for unit in join_units:\n        if unit.block is not None:\n            dtype = unit.dtype\n            if is_categorical_dtype(dtype):\n                upcast_classes.append(\"category\")\n            elif is_datetime64tz_dtype(dtype):\n                upcast_classes.append(\"datetimetz\")\n            elif issubclass(dtype.type, np.bool_):\n                upcast_classes.append(\"bool\")\n            elif is_datetime64_dtype(dtype):\n                upcast_classes.append(\"datetime\")\n            elif is_timedelta64_dtype(dtype):\n                upcast_classes.append(\"timedelta\")\n            elif is_sparse(dtype):\n                upcast_classes.append(dtype.subtype.name)\n            elif is_extension_array_dtype(dtype):\n                upcast_classes.append(\"object\")\n            elif is_float_dtype(dtype) or is_numeric_dtype(dtype):\n                upcast_classes.append(dtype.name)\n            else:\n                upcast_classes.append(\"float\")\n    \n    common_dtype = np.find_common_type(upcast_classes, [])\n    \n    if common_dtype == np.object_:\n        na = np.nan\n    elif is_numeric_dtype(common_dtype):\n        na = None\n    else:\n        na = pd.NaT\n    \n    return common_dtype, na"
        }
    ]
}