{
    "pandas": [
        {
            "bugID": 82,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "start_line": 268,
            "file_name": "pandas/core/internals/concat.py",
            "replace_code": "def _get_empty_dtype_and_na(join_units):\n    \"\"\"\n    Return dtype and N/A values to use when concatenating specified units.\n\n    Returned N/A value may be None which means there was no casting involved.\n\n    Returns\n    -------\n    dtype\n    na\n    \"\"\"\n    has_none_blocks = any(unit.block is None for unit in join_units)\n\n    upcast_classes = set()\n    null_upcast_classes = set()\n\n    for unit in join_units:\n        if unit.block is not None:\n            dtype = unit.dtype\n            if np.issubdtype(dtype, np.datetime64):\n                is_na = unit.is_na\n                if is_na:\n                    null_upcast_classes.add(dtype)\n                else:\n                    upcast_classes.add(dtype)\n\n    if not upcast_classes:\n        upcast_classes = null_upcast_classes\n\n    # create the result\n    if np.dtype(\"object\") in upcast_classes:\n        return np.dtype(\"O\"), np.nan\n    elif np.dtype(\"bool\") in upcast_classes:\n        if has_none_blocks:\n            return np.dtype(\"O\"), np.nan\n        else:\n            return np.dtype(\"bool\"), None\n    elif np.dtype(\"<M8[ns]\") in upcast_classes:\n        return np.dtype(\"<M8[ns]\"), np.datetime64(\"NaT\", \"ns\")\n    elif np.dtype(\"<m8[ns]\") in upcast_classes:\n        return np.dtype(\"<m8[ns]\"), np.timedelta64(\"NaT\", \"ns\")\n    else:\n        common_dtype = np.find_common_type(list(upcast_classes), [])\n        if np.issubdtype(common_dtype, np.floating):\n            return common_dtype, np.nan\n        elif np.issubdtype(common_dtype, np.number):\n            if has_none_blocks:\n                return np.float64, np.nan\n            else:\n                return common_dtype, None\n\n    raise AssertionError(\"Invalid dtype determination in get_concat_dtype\")",
            "imports": [
                "import numpy as np"
            ]
        }
    ]
}