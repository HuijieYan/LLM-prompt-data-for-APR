{
    "pandas": [
        {
            "bugID": 161,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 1782,
            "file_name": "pandas/core/arrays/categorical.py",
            "replace_code": "def fillna(self, value=None, method=None, limit=None):\n    import numpy as np\n    from pandas.api.types import is_hashable, is_scalar\n    from pandas.core.arrays.categorical import Categorical\n    from pandas.core.dtypes.common import is_categorical_dtype\n    \"\"\"\n    Fill NA/NaN values using the specified method.\n    \n    Parameters\n    ----------\n    value : scalar, dict, Series\n        If a scalar value is passed, it is used to fill all missing values.\n        Alternatively, a Series or dict can be used to fill in different\n        values for each index. The value should not be a list. The\n        value(s) passed should either be in the categories or should be\n        NaN.\n    method : {'backfill', 'bfill', 'pad', 'ffill', None}, default None\n        Method to use for filling holes in reindexed Series.\n        pad / ffill: propagate last valid observation forward to next valid\n        backfill / bfill: use NEXT valid observation to fill gap\n    limit : int, default None\n        Limit functionality has not been implemented yet.\n    \n    Returns\n    -------\n    filled : Categorical with NA/NaN filled\n    \"\"\"\n    if value is None:\n        value = np.nan\n    \n    if limit is not None:\n        raise NotImplementedError(\"Specifying a limit for fillna has not been implemented yet\")\n    \n    if not is_categorical_dtype(self.dtype):\n        raise TypeError(\"Can only use .fillna with a Categorical\")\n    \n    new_codes = self._codes.fillna(value=value, method=method, limit=limit)\n    \n    return Categorical.from_codes(new_codes, self.categories, self.ordered)"
        }
    ]
}