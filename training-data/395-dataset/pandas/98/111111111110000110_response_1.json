{
    "pandas": [
        {
            "bugID": 98,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 271,
            "file_name": "pandas/core/indexes/base.py",
            "replace_code": "def __new__(\n    cls, data=None, dtype=None, copy=False, name=None, tupleize_cols=True, **kwargs,\n) -> \"Index\":\n    from .range import RangeIndex\n    from pandas import PeriodIndex, DatetimeIndex, TimedeltaIndex\n    from .numeric import Float64Index, Int64Index, UInt64Index\n    from .interval import IntervalIndex\n    from .category import CategoricalIndex\n    from .range import RangeIndex\n    from pandas import PeriodIndex, DatetimeIndex, TimedeltaIndex\n    from .numeric import Float64Index, Int64Index, UInt64Index\n    from .interval import IntervalIndex\n    from .category import CategoricalIndex\n    \n    name = maybe_extract_name(name, data, cls)\n    data = np.asarray(data)\n    \n    if dtype is not None:\n        data = data.astype(dtype)\n    \n    if is_datetime64_any_dtype(data):\n        return DatetimeIndex(data, copy=copy, name=name, dtype=dtype, **kwargs)\n    \n    elif is_timedelta64_dtype(data):\n        return TimedeltaIndex(data, copy=copy, name=name, dtype=dtype, **kwargs)\n    \n    elif is_period_dtype(data):\n        return PeriodIndex(data, copy=copy, name=name, dtype=dtype, **kwargs)\n    \n    elif is_extension_array_dtype(data):\n        if not (dtype is None or is_object_dtype(dtype)):\n            data = data.astype(dtype)\n        return Index(data, dtype=dtype, copy=copy, name=name, **kwargs)\n    \n    elif isinstance(data, (np.ndarray, Index, ABCSeries)):\n        return Index(data, dtype=dtype, copy=copy, name=name, **kwargs)\n    \n    elif hasattr(data, \"__array__\"):\n        return Index(np.asarray(data), dtype=dtype, copy=copy, name=name, **kwargs)\n    \n    else:\n        raise ValueError(f\"Unable to create Index with dtype: {dtype}\")"
        }
    ]
}