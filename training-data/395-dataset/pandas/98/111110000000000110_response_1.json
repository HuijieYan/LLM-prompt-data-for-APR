{
    "pandas": [
        {
            "bugID": 98,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 271,
            "file_name": "pandas/core/indexes/base.py",
            "replace_code": "def __new__(\n        cls, data=None, dtype=None, copy=False, name=None, tupleize_cols=True, **kwargs\n    ) -> \"Index\":\n        data_as_array = np.array(data)\n        data_dtype = data_as_array.dtype\n\n        if dtype is not None and dtype != data_dtype:\n            data_as_array = data_as_array.astype(dtype)\n\n        # Create Index based on the data type\n        if isinstance(data_as_array, (np.ndarray, pd.Index, pd.Series)):\n            if data_dtype == 'int64':\n                return pd.Int64Index(data_as_array, copy=copy, dtype=dtype, name=name)\n            elif data_dtype == 'uint64':\n                return pd.UInt64Index(data_as_array, copy=copy, dtype=dtype, name=name)\n            elif data_dtype == 'float64':\n                return pd.Float64Index(data_as_array, copy=copy, dtype=dtype, name=name)\n            elif data_dtype == 'bool':\n                return data_as_array.astype(\"object\")\n            else:\n                return Index(data_as_array, dtype=dtype, copy=copy, name=name, **kwargs)\n        else:\n            return Index(data_as_array, dtype=dtype, copy=copy, name=name, **kwargs)",
            "imports": []
        }
    ]
}