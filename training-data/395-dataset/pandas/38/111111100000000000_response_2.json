{
    "pandas": [
        {
            "bugID": 38,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 312,
            "file_name": "pandas/core/reshape/reshape.py",
            "replace_code": "def _unstack_multiple(data, clocs, fill_value=None):\n    levels = data.index.lexsort_depth\n    labels, level_dict = data.index._get_level_number(clocs)\n    non_cloc_labels = [i for i in range(levels) if i not in set(labels)]\n    group_index = data.index.get_group_index(labels)\n    \n    subframe_len = len(data)\n    shape = [len(data.index.levels[i]) for i in labels]\n    \n    relabeler = pyidx.relabeler(\n        non_cloc_labels,\n        labels,\n        len(shape),\n        shape,\n        subframe_len,\n    )\n    \n    _ = relabeler.num_non_cloc, relabeler.num_v, relabeler.v_size\n    comp_ids = relabeler.compress_group_index()\n    obs_ids = relabeler.obs_ids\n    recons_codes = relabeler.recons_codes\n    \n    if clocs == ():\n        # everything was in clocs\n        columns = MultiIndex(obs_ids, name='__placeholder__')\n    else:\n        tups = list(\n            zip(data.index.levels[non_cloc_labels], data.index.codes[non_cloc_labelsQ])\n        )\n        columns = MultiIndex.from_arrays(\n            tups + [obs_ids, comp_ids],\n            names=list(data.index.names[non_cloc_labels]) + [\"__placeholder__\"],\n        )\n\n    if isinstance(data, Series):\n        tmp = data.copy()\n        tmp.index = columns\n        result = tmp.unstack(\"__placeholder__\")\n    elif isinstance(data.columns, MultiIndex):\n        result = data.copy()\n        for cloc in clocs:\n            result = result.unstack(cloc)\n    else:\n        tmp = data.copy()\n        tmp.index = columns\n        result = tmp.unstack(\"__placeholder__\")\n\n    return result",
            "imports": []
        }
    ]
}