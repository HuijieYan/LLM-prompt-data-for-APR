{
    "pandas": [
        {
            "bugID": 163,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 226,
            "file_name": "pandas/core/window.py",
            "replace_code": "def _prep_values(self, values: Optional[np.ndarray] = None) -> np.ndarray:\n    \"\"\"Convert input to numpy arrays for Cython routines\"\"\"\n    if values is None:\n        values = getattr(self._selected_obj, \"values\", self._selected_obj)\n\n    # Make a copy of the array with the writeable flag set to True\n    values = np.array(values, copy=True, dtype=np.float64)\n\n    # Always convert inf to nan\n    values[np.isinf(values)] = np.NaN\n\n    return values",
            "imports": [
                "import numpy as np",
                "from pandas.core.dtypes.common import is_float_dtype, is_integer_dtype, needs_i8_conversion"
            ]
        }
    ]
}