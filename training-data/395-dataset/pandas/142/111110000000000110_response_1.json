{
    "pandas": [
        {
            "bugID": 142,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 1890,
            "file_name": "pandas/core/algorithms.py",
            "replace_code": "def diff(arr, n: int, axis: int = 0):\n    \"\"\"\n    difference of n between self,\n    analogous to s-s.shift(n)\n\n    Parameters\n    ----------\n    arr : ndarray\n    n : int\n        number of periods\n    axis : int\n        axis to shift on\n\n    Returns\n    -------\n    shifted\n    \"\"\"\n\n    n = int(n)\n    na = np.nan\n    dtype = arr.dtype\n\n    def needs_i8_conversion(arr):\n        return arr.dtype != np.dtype('bool')\n\n    def is_bool_dtype(dtype):\n        return dtype == np.dtype('bool')\n\n    def is_integer_dtype(dtype):\n        return np.issubdtype(dtype, np.integer)\n\n    iNaT = np.datetime64('NaT')\n\n    _diff_special = {\n        'datetime64[D]': None\n    }\n\n    dtype = np.dtype(dtype)\n    out_arr = np.empty(arr.shape, dtype=dtype)\n\n    na_indexer = [slice(None)] * arr.ndim\n    na_indexer[axis] = slice(None, n) if n >= 0 else slice(n, None)\n    out_arr[tuple(na_indexer)] = na\n\n    if arr.ndim == 2 and arr.dtype.name in _diff_special:\n        f = _diff_special[arr.dtype.name]\n        f(arr, out_arr, n, axis)\n    else:\n        res_indexer = [slice(None)] * arr.ndim\n        res_indexer[axis] = slice(n, None) if n >= 0 else slice(None, n)\n        lag_indexer = [slice(None)] * arr.ndim\n        lag_indexer[axis] = slice(None, -n) if n > 0 else slice(-n, None)\n\n        res = arr[tuple(res_indexer)]\n        lag = arr[tuple(lag_indexer)]\n\n        if isbool(arr.dtype.type):\n            result = res.astype(int) - lag.astype(int)\n            result[~np.isfinite(res + lag)] = na\n            out_arr[tuple(res_indexer)] = result\n        else:\n            out_arr[tuple(res_indexer)] = res - lag\n\n    return out_arr",
            "import_list": [
                "import numpy as np",
                "import pandas as pd"
            ]
        }
    ]
}