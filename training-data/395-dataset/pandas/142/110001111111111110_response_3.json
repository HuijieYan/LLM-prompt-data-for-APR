{
    "pandas": [
        {
            "bugID": 142,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 1890,
            "file_name": "pandas/core/algorithms.py",
            "replace_code": "def diff(arr: np.ndarray, n: int, axis: int = 0) -> np.ndarray:\n    \"\"\"\n    difference of n between self,\n    analogous to s-s.shift(n)\n\n    Parameters\n    ----------\n    arr : ndarray\n    n : int\n        number of periods\n    axis : int\n        axis to shift on\n\n    Returns\n    -------\n    shifted\n    \"\"\"\n\n    n = int(n)\n    na = np.nan\n    dtype = arr.dtype\n\n    is_timedelta = False\n    if arr.dtype == 'bool':\n        out_arr = arr.astype('O')\n        result = np.empty(arr.shape, dtype='O')\n        out_arr[(slice(n, None) if n >= 0 else slice(None, n))] = na\n        result[(slice(n, None) if n >= 0 else slice(None, n))] = arr[(slice(n, None) if n >= 0 else slice(None, n))]\n        result[0:n] = na\n    else:\n        out_arr = np.empty(arr.shape, dtype=dtype)\n        na_indexer = [slice(None)] * arr.ndim\n        na_indexer[axis] = slice(None, n) if n >= 0 else slice(n, None)\n        out_arr[tuple(na_indexer)] = na\n        if arr.ndim == 2 and arr.dtype.name in _diff_special:\n            f = _diff_special[arr.dtype.name]\n            f(arr, out_arr, n, axis)\n        else:\n            _res_indexer = [slice(None)] * arr.ndim\n            _res_indexer[axis] = slice(n, None) if n >= 0 else slice(None, n)\n            res_indexer = tuple(_res_indexer)\n            _lag_indexer = [slice(None)] * arr.ndim\n            _lag_indexer[axis] = slice(None, -n) if n > 0 else slice(-n, None)\n            lag_indexer = tuple(_lag_indexer)\n            if is_timedelta:\n                res = arr[res_indexer]\n                lag = arr[lag_indexer]\n                mask = (arr[res_indexer] == na) | (arr[lag_indexer] == na)\n                if mask.any():\n                    res = res.copy()\n                    res[mask] = 0\n                    lag = lag.copy()\n                    lag[mask] = 0\n                result = res - lag\n                result[mask] = na\n                out_arr[res_indexer] = result\n            else:\n                out_arr[res_indexer] = arr[res_indexer] - arr[lag_indexer]\n    return out_arr",
            "imports": [
                "import numpy as np",
                "import pandas as pd"
            ]
        }
    ]
}