{
    "pandas": [
        {
            "bugID": 142,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 1890,
            "file_name": "pandas/core/algorithms.py",
            "replace_code": "def diff(arr: Union[np.ndarray, list], n: int, axis: int = 0) -> np.ndarray:\n    \"\"\"\n    difference of n between self,\n    analogous to s-s.shift(n)\n\n    Parameters\n    ----------\n    arr : Union[np.ndarray, list]\n        input array\n    n : int\n        number of periods\n    axis : int\n        axis to shift on\n\n    Returns\n    -------\n    shifted\n    \"\"\"\n\n    n = int(n)\n    na = np.nan\n    dtype = np.asarray(arr).dtype\n\n    is_timedelta = False\n    if np.asarray(arr).dtype.kind in 'biuf':\n        if np.asarray(arr).dtype.kind in 'biu':\n            dtype = np.object_\n        elif np.asarray(arr).dtype.kind == 'f':\n            dtype = np.float64\n            is_timedelta = True\n\n    dtype = np.dtype(dtype)\n    out_arr = np.empty(np.asarray(arr).shape, dtype=dtype)\n\n    na_indexer = [slice(None)] * np.asarray(arr).ndim\n    na_indexer[axis] = slice(None, n) if n >= 0 else slice(n, None)\n    out_arr[tuple(na_indexer)] = na\n\n    if np.asarray(arr).ndim == 2 and np.asarray(arr).dtype.name in _diff_special:\n        f = _diff_special[np.asarray(arr).dtype.name]\n        f(np.asarray(arr), out_arr, n, axis)\n    else:\n        _res_indexer = [slice(None)] * np.asarray(arr).ndim\n        _res_indexer[axis] = slice(n, None) if n >= 0 else slice(None, n)\n        res_indexer = tuple(_res_indexer)\n\n        _lag_indexer = [slice(None)] * np.asarray(arr).ndim\n        _lag_indexer[axis] = slice(None, -n) if n > 0 else slice(-n, None)\n        lag_indexer = tuple(_lag_indexer)\n\n        if is_timedelta:\n            res = np.asarray(arr)[res_indexer]\n            lag = np.asarray(arr)[lag_indexer]\n\n            mask = (np.asarray(arr)[res_indexer] == na) | (np.asarray(arr)[lag_indexer] == na)\n            if mask.any():\n                res = res.copy()\n                res[mask] = 0\n                lag = lag.copy()\n                lag[mask] = 0\n\n            result = res - lag\n            result[mask] = na\n            out_arr[res_indexer] = result\n        else:\n            out_arr[res_indexer] = np.asarray(arr)[res_indexer] - np.asarray(arr)[lag_indexer]\n\n    if is_timedelta:\n        out_arr = out_arr.astype(\"int64\").view(\"timedelta64[ns]\")\n\n    return out_arr",
            "import_list": [
                "import numpy as np",
                "from typing import Any, Union"
            ]
        }
    ]
}