{
    "pandas": [
        {
            "bugID": 164,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 265,
            "file_name": "pandas/core/tools/datetimes.py",
            "replace_code": "def _convert_listlike_datetimes(\n    arg,\n    box,\n    format=None,\n    name=None,\n    tz=None,\n    unit=None,\n    errors=None,\n    infer_datetime_format=False,\n    dayfirst=False,\n    yearfirst=False,\n    exact=False,\n):\n    if isinstance(arg, (list, tuple)):\n        arg = np.array(arg, dtype=\"O\")\n    \n    if unit is not None:\n        result, tz_parsed = array_with_unit_to_datetime(arg, unit, errors=errors)\n        result = DatetimeIndex(result, name=name) if box else result\n\n        if tz_parsed is not None:\n            result = result.tz_convert(tz_parsed)\n            if tz is not None:\n                result = result.tz_localize(tz)\n\n        return result\n\n    try:\n        result, timezones = array_strptime(arg, format, exact=exact, errors=errors)\n        if tz == \"utc\":\n            result = result.tz_localize(\"UTC\")\n        return result\n\n    except (ValueError, TypeError):\n        if errors == \"coerce\":\n            result = np.empty(arg.shape, dtype=\"M8[ns]\")\n            iresult = result.view(\"i8\")\n            iresult.fill(0)\n            return result\n        return arg",
            "imports": [
                "from pandas import DatetimeIndex",
                "from pandas.core.arrays import DatetimeArray",
                "from pandas.core.arrays.datetimes import array_with_unit_to_datetime, array_strptime",
                "import numpy as np"
            ]
        }
    ]
}