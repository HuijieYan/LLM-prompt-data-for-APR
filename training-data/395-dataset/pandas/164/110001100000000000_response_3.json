{
    "pandas": [
        {
            "bugID": 164,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 265,
            "file_name": "pandas/core/tools/datetimes.py",
            "replace_code": "def _convert_listlike_datetimes(\n        arg: Any,\n        box: bool,\n        format: str,\n        name: Optional[object] = None,\n        tz: Optional[object] = None,\n        unit: Optional[str] = None,\n        errors: Optional[str] = None,\n        infer_datetime_format: Optional[bool] = None,\n        dayfirst: Optional[bool] = None,\n        yearfirst: Optional[bool] = None,\n        exact: Optional[bool] = None,\n    ) -> Union[np.ndarray, Index]:\n        \"\"\"\n        Helper function for to_datetime. Performs the conversions of 1D listlike\n        of dates\n    \n        Parameters\n        ----------\n        arg : Any\n            date to be parsed\n        box : bool\n            True boxes result as an Index-like, False returns an ndarray\n        name : Optional[object]\n            None or string for the Index name\n        tz : Optional[object]\n            None or 'utc'\n        unit : Optional[str]\n            None or string of the frequency of the passed data\n        errors : Optional[str]\n            error handing behaviors from to_datetime, 'raise', 'coerce', 'ignore'\n        infer_datetime_format : Optional[bool]\n            inferring format behavior from to_datetime\n        dayfirst : Optional[bool]\n            dayfirst parsing behavior from to_datetime\n        yearfirst : Optional[bool]\n            yearfirst parsing behavior from to_datetime\n        exact : Optional[bool]\n            exact format matching behavior from to_datetime\n    \n        Returns\n        -------\n        Union[np.ndarray, Index]\n            ndarray of parsed dates\n\n             - Index-like if box=True\n             - ndarray of Timestamps if box=False\n        \"\"\"\n        pass",
            "import_list": []
        }
    ]
}