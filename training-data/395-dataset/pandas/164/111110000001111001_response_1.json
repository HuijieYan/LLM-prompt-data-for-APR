{
    "pandas": [
        {
            "bugID": 164,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 265,
            "file_name": "pandas/core/tools/datetimes.py",
            "replace_code": "def _convert_listlike_datetimes(\n    arg,\n    box,\n    format=None,\n    name=None,\n    tz=None,\n    unit=None,\n    errors=None,\n    infer_datetime_format=False,\n    dayfirst=False,\n    yearfirst=False,\n    exact=True,\n):\n    import numpy as np\n    from pandas import DatetimeIndex\n    from pandas.core.arrays import DatetimeArray\n    from pandas.core.arrays.datetimes import maybe_convert_dtype, objects_to_datetime64ns\n    from pandas.errors import OutOfBoundsDatetime\n    from pandas._libs.tslibs import iNaT, iNaT as tslibs_iNaT\n    from pandas.tseries import frequencies\n    if isinstance(arg, (list, tuple)):\n        arg = np.array(arg, dtype=\"O\")\n    \n    if unit is not None and format is not None:\n        raise ValueError(\"cannot specify both format and unit\")\n    \n    if isinstance(arg, DatetimeIndex):\n        if tz == \"utc\":\n            arg = arg.tz_localize(None).tz_localize(tz)\n        return arg\n    \n    if box:\n        result, tz_parsed = objects_to_datetime64ns(\n            arg,\n            dayfirst=dayfirst,\n            yearfirst=yearfirst,\n            utc=(tz==\"utc\"),\n            errors=errors,\n            require_iso8601=infer_datetime_format,\n            allow_object=True\n        )\n        if tz_parsed is not None:\n            return DatetimeIndex._simple_new(result, name=name, tz=tz_parsed)\n        else:\n            utc = (tz == \"utc\")\n            return DatetimeIndex._simple_new(result, name=name, utc=utc)\n    else:\n        return arg"
        }
    ]
}