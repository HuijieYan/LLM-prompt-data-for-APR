{
    "pandas": [
        {
            "bugID": 164,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 265,
            "file_name": "pandas/core/tools/datetimes.py",
            "replace_code": "def _convert_listlike_datetimes(\n    arg,\n    box,\n    format,\n    name=None,\n    tz=None,\n    unit=None,\n    errors=None,\n    infer_datetime_format=None,\n    dayfirst=None,\n    yearfirst=None,\n    exact=None,\n):\n    if isinstance(arg, (list, tuple)):\n        arg = np.array(arg, dtype=\"O\")\n\n    if format is not None:\n        raise ValueError(\"cannot specify both format and unit\")\n    \n    result, tz_parsed = tslib_to_datetime(\n        arg,\n        utc=tz == \"utc\",\n        errors=errors,\n        require_iso8601=infer_datetime_format,\n    )\n\n    if box:\n        if errors == \"ignore\":\n            result = Index(result, name=name)\n        else:\n            result = DatetimeIndex(result, name=name)\n\n        if tz is not None:\n            if tz_parsed is not None:\n                result = result.tz_localize(tz_parsed)\n            else:\n                result = result.tz_localize(tz)\n    \n    return result",
            "imports": [
                "import numpy as np",
                "from pandas import DatetimeIndex, Timestamp, Index",
                "from pandas.core.dtypes.common import ensure_object",
                "from pandas.core.arrays.datetimes import array_strptime",
                "from pandas.tseries.tools import to_datetime as tslib_to_datetime"
            ]
        }
    ]
}