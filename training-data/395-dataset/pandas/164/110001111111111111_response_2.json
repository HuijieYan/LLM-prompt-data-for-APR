{
    "pandas": [
        {
            "bugID": 164,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 265,
            "file_name": "pandas/core/tools/datetimes.py",
            "replace_code": "def _convert_listlike_datetimes(\n    arg,\n    box,\n    format,\n    name=None,\n    tz=None,\n    unit=None,\n    errors=None,\n    infer_datetime_format=None,\n    dayfirst=None,\n    yearfirst=None,\n    exact=None,\n):\n    from pandas.api.extensions import ExtensionArray\n    \n    if tz is not None:\n        utc = tz == \"utc\"\n        localize_to_utc = False\n        if unit is not None:\n            # Implement specific logic for unit handling if needed\n            pass\n        else:\n            # Convert to DatetimeIndex or DatetimeArray based on box parameter\n            result, tz_parsed = objects_to_datetime64ns(\n                arg,\n                dayfirst=dayfirst,\n                yearfirst=yearfirst,\n                utc=utc,\n                errors=errors,\n                require_iso8601=False,\n                allow_object=True,\n            )\n            if box:\n                if localize_to_utc:\n                    result = result.tz_localize(\"UTC\")\n                result = result.tz_convert(tz_parsed)\n                return DatetimeIndex(result, tz=tz_parsed, name=name) if box else result\n            else:\n                # Implement specific logic for non-box case\n                pass\n    else:\n        # Handle the case when tz is None\n        result, _ = objects_to_datetime64ns(\n            arg,\n            dayfirst=dayfirst,\n            yearfirst=yearfirst,\n            utc=False,\n            errors=errors,\n            require_iso8601=False,\n            allow_object=True,\n        )\n        if box:\n            return DatetimeIndex(result, name=name) if box else result\n        else:\n            return result",
            "imports": [
                "from pandas import DatetimeIndex",
                "from pandas.api.extensions import ExtensionArray"
            ]
        }
    ]
}