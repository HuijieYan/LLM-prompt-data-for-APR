{
    "pandas": [
        {
            "bugID": 25,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 1245,
            "file_name": "pandas/core/arrays/datetimes.py",
            "replace_code": "def isocalendar(self):\n    from pandas import DataFrame\n    from numpy import datetime64, timedelta64, uint64\n    from pandas import DataFrame\n    from numpy import datetime64, timedelta64, uint64\n    \n    start_of_week = (self.asi8.astype(datetime64) - (timedelta64(weeks=1) * (self.asi8.astype(datetime64).dt.dayofweek))).astype(uint64)\n    year = (start_of_week + timedelta64(3, \"D\")).astype(datetime64).dt.isocalendar().year\n    week = (start_of_week + timedelta64(3, \"D\")).astype(datetime64).dt.isocalendar().week\n    day_of_week = (self.asi8.astype(datetime64).dt.dayofweek + 1).astype(uint64)\n    \n    iso_calendar_df = DataFrame(\n        {\"year\": year, \"week\": week, \"day\": day_of_week}, dtype=\"UInt32\"\n    )\n    if self._hasnans:\n        iso_calendar_df.iloc[self._isnan] = None\n    return iso_calendar_df"
        }
    ]
}