{
    "pandas": [
        {
            "bugID": 25,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 1245,
            "file_name": "pandas/core/arrays/datetimes.py",
            "replace_code": "def isocalendar(self):\n    \"\"\"\n    Returns a DataFrame with the year, week, and day calculated according to\n    the ISO 8601 standard.\n\n    .. versionadded:: 1.1.0\n\n    Returns\n    -------\n    DataFrame\n        with columns year, week and day\n\n    See Also\n    --------\n    Timestamp.isocalendar\n    datetime.date.isocalendar\n\n    Examples\n    --------\n    >>> idx = pd.date_range(start='2019-12-29', freq='D', periods=4)\n    >>> idx.isocalendar()\n       year  week  day\n    0  2019    52    7\n    1  2020     1    1\n    2  2020     1    2\n    3  2020     1    3\n    >>> idx.isocalendar().week\n    0    52\n    1     1\n    2     1\n    3     1\n    Name: week, dtype: UInt32\n    \"\"\"\n    from pandas import DataFrame, Series\n    \n    # Calculate ISO calendar values\n    january_1 = pd.to_datetime(self.asi8.min(), unit='ns').replace(month=1, day=1)\n    weekday_i4 = january_1.weekday()\n    january_4_ordinal = january_1.toordinal() + (4 - weekday_i4)\n    week_number = (january_4_ordinal - 1) // 7 + 1\n    year = january_1.year\n    \n    week_values = np.mod(np.ceil((self - pd.to_datetime('01-03-{} 00:00'.format(year))).days / 7), 52)\n    week_values.replace(0, 52, inplace=True)\n    \n    iso_calendar_df = DataFrame({\n        \"year\": year,\n        \"week\": Series(week_values, dtype=\"UInt32\"),\n        \"day\": self.dayofweek + 1\n    })\n    \n    return iso_calendar_df",
            "imports": [
                "from pandas import DataFrame, Series"
            ]
        }
    ]
}