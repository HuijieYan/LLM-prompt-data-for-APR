{
    "pandas": [
        {
            "bugID": 25,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 1245,
            "file_name": "pandas/core/arrays/datetimes.py",
            "replace_code": "def isocalendar(self):\n    \"\"\"\n    Returns a DataFrame with the year, week, and day calculated according to\n    the ISO 8601 standard.\n\n    .. versionadded:: 1.1.0\n\n    Returns\n    -------\n    DataFrame\n        with columns year, week and day\n\n    See Also\n    --------\n    Timestamp.isocalendar\n    datetime.date.isocalendar\n\n    Examples\n    --------\n    >>> idx = pd.date_range(start='2013-12-29', freq='D', periods=3, tz='Europe/Brussels')\n    >>> idx = idx.tz_localize(None).to_series()  # Remove timezone to convert to UTC\n    >>> idx.isocalendar()\n       year  week  day\n    0  2013    52    7\n    1  2014     1    1\n    2  2014     1    2\n    >>> idx.isocalendar().week\n    0    52\n    1     1\n    2     1\n    Name: week, dtype: UInt32\n    \"\"\"\n    from pandas import DataFrame\n\n    # Convert to UTC to calculate ISO calendar\n    utc_idx = self.tz_localize(None).to_series()\n\n    # Build ISO calendar fields from UTC dates\n    sarray = fields.build_isocalendar_sarray(utc_idx.values.astype('datetime64[s]').astype(int))\n    \n    # Create a DataFrame with ISO calendar values\n    iso_calendar_df = DataFrame(\n        sarray, columns=[\"year\", \"week\", \"day\"], dtype=\"UInt32\"\n    )\n    \n    return iso_calendar_df",
            "imports": [
                "from pandas import DataFrame"
            ]
        }
    ]
}