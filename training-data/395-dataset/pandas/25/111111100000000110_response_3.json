{
    "pandas": [
        {
            "bugID": 25,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 0,
                "7": 0
            },
            "start_line": 1245,
            "file_name": "pandas/core/arrays/datetimes.py",
            "replace_code": "def isocalendar(self):\n        \"\"\"\n        Returns a DataFrame with the year, week, and day calculated according to\n        the ISO 8601 standard.\n    \n        .. versionadded:: 1.1.0\n    \n        Returns\n        -------\n        DataFrame\n            with columns year, week and day\n    \n        See Also\n        --------\n        Timestamp.isocalendar\n        datetime.date.isocalendar\n    \n        Examples\n        --------\n        >>> idx = pd.date_range(start='2019-12-29', freq='D', periods=4)\n        >>> idx.isocalendar()\n           year  week  day\n        0  2019    52    7\n        1  2020     1    1\n        2  2020     1    2\n        3  2020     1    3\n        >>> idx.isocalendar().week\n        0    52\n        1     1\n        2     1\n        3     1\n        Name: week, dtype: UInt32\n        \"\"\"\n        # fixed code\n        from pandas import DataFrame, Series\n        from pandas.core.arrays.datetimes import _build_wrapped_methods\n        import numpy as np\n\n        def build_isocalendar(self, sarray):\n            values = sarray._data\n            dtype = np.dtype(\n                [(\"year\", np.uint32), (\"week\", np.uint8), (\"day\", np.uint8)]\n            )\n            raw_array = np.empty(len(values), dtype=dtype)\n            for i, value in enumerate(values):\n                if value is pd.NaT:\n                    raw_array[i] = (np.uint32(0), np.uint8(0), np.uint8(0))\n                else:\n                    t = value.ctypes\n                    raw_array[i] = datetime.datetime.fromtimestamp(t).isocalendar()[:-1]\n            return Series(data=raw_array, name=sarray.name, index=sarray.index)\n\n        _build_wrapped_methods(\n            self,\n            isocalendar,\n            name=\"isocalendar\",\n            alias=\"isocalendar\",\n            wrapped_func=build_isocalendar,\n            create_methods=True,\n        )\n\n        return build_isocalendar(self, self)",
            "import_list": [
                "from pandas import DataFrame, Series",
                "from pandas.core.arrays.datetimes import _build_wrapped_methods",
                "import numpy as np"
            ]
        }
    ]
}