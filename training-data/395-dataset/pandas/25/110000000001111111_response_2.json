{
    "pandas": [
        {
            "bugID": 25,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 1245,
            "file_name": "pandas/core/arrays/datetimes.py",
            "replace_code": "def isocalendar(self):\n    \"\"\"\n    Returns a DataFrame with the year, week, and day calculated according to\n    the ISO 8601 standard.\n\n    .. versionadded:: 1.1.0\n\n    Returns\n    -------\n    DataFrame\n        with columns year, week and day\n\n    See Also\n    --------\n    Timestamp.isocalendar\n    datetime.date.isocalendar\n\n    Examples\n    --------\n    >>> idx = pd.date_range(start='2019-12-29', freq='D', periods=4)\n    >>> idx.isocalendar()\n       year  week  day\n    0  2019    52    7\n    1  2020     1    1\n    2  2020     1    2\n    3  2020     1    3\n    >>> idx.isocalendar().week\n    0    52\n    1     1\n    2     1\n    3     1\n    Name: week, dtype: UInt32\n    \"\"\"\n    from pandas import DataFrame\n\n    # Correcting the sarray creation based on the input\n    sarray = np.empty(len(self.asi8), dtype=[('year', '<u4'), ('week', '<u4'), ('day', '<u4')])\n    for i, timestamp in enumerate(self.asi8):\n        dt = datetime.datetime.utcfromtimestamp(timestamp / 1e9)\n        year, week, day = dt.isocalendar()\n        sarray[i] = (year, week, day)\n\n    # Creating DataFrame from sarray\n    iso_calendar_df = DataFrame(\n        sarray, columns=[\"year\", \"week\", \"day\"], dtype=\"UInt32\"\n    )\n    if self._hasnans:\n        iso_calendar_df.iloc[self._isnan] = None\n    return iso_calendar_df",
            "import_list": [
                "from pandas import DataFrame"
            ]
        }
    ]
}