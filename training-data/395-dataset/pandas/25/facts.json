{
    "1.1.1": "def isocalendar(self):\n    \n    from pandas import DataFrame\n\n    sarray = fields.build_isocalendar_sarray(self.asi8)\n    iso_calendar_df = DataFrame(\n        sarray, columns=[\"year\", \"week\", \"day\"], dtype=\"UInt32\"\n    )\n    if self._hasnans:\n        iso_calendar_df.iloc[self._isnan] = None\n    return iso_calendar_df\n",
    "1.1.2": "Returns a DataFrame with the year, week, and day calculated according to\nthe ISO 8601 standard.\n\n.. versionadded:: 1.1.0\n\nReturns\n-------\nDataFrame\n    with columns year, week and day\n\nSee Also\n--------\nTimestamp.isocalendar\ndatetime.date.isocalendar\n\nExamples\n--------\n>>> idx = pd.date_range(start='2019-12-29', freq='D', periods=4)\n>>> idx.isocalendar()\n   year  week  day\n0  2019    52    7\n1  2020     1    1\n2  2020     1    2\n3  2020     1    3\n>>> idx.isocalendar().week\n0    52\n1     1\n2     1\n3     1\nName: week, dtype: UInt32",
    "1.2.1": "class DatetimeArray(dtl.DatetimeLikeArrayMixin, dtl.TimelikeOps, dtl.DatelikeOps)",
    "1.2.2": "Pandas ExtensionArray for tz-naive or tz-aware datetime data.\n\n.. versionadded:: 0.24.0\n\n.. warning::\n\n   DatetimeArray is currently experimental, and its API may change\n   without warning. In particular, :attr:`DatetimeArray.dtype` is\n   expected to change to always be an instance of an ``ExtensionDtype``\n   subclass.\n\nParameters\n----------\nvalues : Series, Index, DatetimeArray, ndarray\n    The datetime data.\n\n    For DatetimeArray `values` (or a Series or Index boxing one),\n    `dtype` and `freq` will be extracted from `values`.\n\ndtype : numpy.dtype or DatetimeTZDtype\n    Note that the only NumPy dtype allowed is 'datetime64[ns]'.\nfreq : str or Offset, optional\n    The frequency.\ncopy : bool, default False\n    Whether to copy the underlying array of values.\n\nAttributes\n----------\nNone\n\nMethods\n-------\nNone",
    "1.2.3": null,
    "1.2.4": null,
    "1.2.5": null,
    "1.3.1": "pandas/core/arrays/datetimes.py",
    "1.3.2": null,
    "1.4.1": [
        "def test_isocalendar_returns_correct_values_close_to_new_year_with_tz():\n    # GH 6538: Check that DatetimeIndex and its TimeStamp elements\n    # return the same weekofyear accessor close to new year w/ tz\n    dates = [\"2013/12/29\", \"2013/12/30\", \"2013/12/31\"]\n    dates = DatetimeIndex(dates, tz=\"Europe/Brussels\")\n    result = dates.isocalendar()\n    expected_data_frame = pd.DataFrame(\n        [[2013, 52, 7], [2014, 1, 1], [2014, 1, 2]],\n        columns=[\"year\", \"week\", \"day\"],\n        dtype=\"UInt32\",\n    )\n    tm.assert_frame_equal(result, expected_data_frame)"
    ],
    "1.4.2": [
        "pandas/tests/indexes/datetimes/test_misc.py"
    ],
    "2.1.1": [
        [
            "E   AssertionError: ExtensionArray are different\nE   \nE   ExtensionArray values are different (33.33333 %)\nE   [left]:  [2013, 2013, 2014]\nE   [right]: [2013, 2014, 2014]"
        ]
    ],
    "2.1.2": [
        [
            "def test_isocalendar_returns_correct_values_close_to_new_year_with_tz():\n        # GH 6538: Check that DatetimeIndex and its TimeStamp elements\n        # return the same weekofyear accessor close to new year w/ tz\n        dates = [\"2013/12/29\", \"2013/12/30\", \"2013/12/31\"]\n        dates = DatetimeIndex(dates, tz=\"Europe/Brussels\")\n        result = dates.isocalendar()\n        expected_data_frame = pd.DataFrame(\n            [[2013, 52, 7], [2014, 1, 1], [2014, 1, 2]],\n            columns=[\"year\", \"week\", \"day\"],\n            dtype=\"UInt32\",\n        )\n>       tm.assert_frame_equal(result, expected_data_frame)\n\npandas/tests/indexes/datetimes/test_misc.py:389: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npandas/_testing.py:1046: in assert_extension_array_equal\n    _testing.assert_almost_equal(\npandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal\n    cpdef assert_almost_equal(a, b,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   raise_assert_detail(obj, msg, lobj, robj, index_values=index_values)",
            "\npandas/_libs/testing.pyx:180: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "self.asi8": {
                    "value": "array([1388271600000000000, 1388358000000000000, 1388444400000000000])",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self": {
                    "value": "<DatetimeArray>\n['2013-12-29 00:00:00+01:00', '2013-12-30 00:00:00+01:00',\n '2013-12-31 00:00:00+01:00']\nLength: 3, dtype: datetime64[ns, Europe/Brussels]",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self._hasnans": {
                    "value": "False",
                    "shape": null,
                    "omitted": false
                },
                "self._isnan": {
                    "value": "array([False, False, False])",
                    "shape": "(3,)",
                    "omitted": false
                }
            },
            {
                "sarray": {
                    "value": "array([(2013, 52, 6), (2013, 52, 7), (2014,  1, 1)],\n      dtype=[('year', '<u4'), ('week', '<u4'), ('day', '<u4')])",
                    "shape": "(3,)",
                    "omitted": false
                },
                "iso_calendar_df": {
                    "value": "   year  week  day\n0  2013    52    6\n1  2013    52    7\n2  2014     1    1",
                    "shape": "(3, 3)",
                    "omitted": false
                },
                "DataFrame": {
                    "value": "<class 'pandas.core.frame.DataFrame'>",
                    "shape": "<property object at 0x113f7def0>",
                    "omitted": false
                }
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "self.asi8": "ndarray",
                "self": "DatetimeArray",
                "self._hasnans": "bool",
                "self._isnan": "ndarray"
            },
            {
                "sarray": "ndarray",
                "iso_calendar_df": "DataFrame",
                "DataFrame": "type"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "self.tz": {
                    "value": "<DstTzInfo 'Europe/Brussels' LMT+0:18:00 STD>",
                    "shape": null,
                    "omitted": false
                },
                "self": {
                    "value": "<DatetimeArray>\n['2013-12-29 00:00:00+01:00', '2013-12-30 00:00:00+01:00',\n '2013-12-31 00:00:00+01:00']\nLength: 3, dtype: datetime64[ns, Europe/Brussels]",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self.asi8": {
                    "value": "array([1388271600000000000, 1388358000000000000, 1388444400000000000])",
                    "shape": "(3,)",
                    "omitted": false
                },
                "self._hasnans": {
                    "value": "False",
                    "shape": null,
                    "omitted": false
                },
                "self._isnan": {
                    "value": "array([False, False, False])",
                    "shape": "(3,)",
                    "omitted": false
                }
            },
            {
                "values": {
                    "value": "array([1388275200000000000, 1388361600000000000, 1388448000000000000])",
                    "shape": "(3,)",
                    "omitted": false
                },
                "sarray": {
                    "value": "array([(2013, 52, 7), (2014,  1, 1), (2014,  1, 2)],\n      dtype=[('year', '<u4'), ('week', '<u4'), ('day', '<u4')])",
                    "shape": "(3,)",
                    "omitted": false
                },
                "iso_calendar_df": {
                    "value": "   year  week  day\n0  2013    52    7\n1  2014     1    1\n2  2014     1    2",
                    "shape": "(3, 3)",
                    "omitted": false
                },
                "DataFrame": {
                    "value": "<class 'pandas.core.frame.DataFrame'>",
                    "shape": "<property object at 0x106659130>",
                    "omitted": false
                }
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "self.tz": "Europe/Brussels",
                "self": "DatetimeArray",
                "self.asi8": "ndarray",
                "self._hasnans": "bool",
                "self._isnan": "ndarray"
            },
            {
                "values": "ndarray",
                "sarray": "ndarray",
                "iso_calendar_df": "DataFrame",
                "DataFrame": "type"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}