{
    "pandas": [
        {
            "bugID": 102,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 123,
            "file_name": "pandas/core/internals/construction.py",
            "replace_code": "def init_ndarray(values, index, columns, dtype=None, copy=False):\n    # input must be a ndarray, list, Series, index\n    from pandas.core.dtypes.common import is_categorical_dtype, is_extension_array_dtype, is_object_dtype\n    from pandas.core.series import ABCSeries\n    from pandas.core.dtypes.dtypes import maybe_infer_to_datetimelike, is_dtype_equal\n    from pandas.core.internals.construction import arrays_to_mgr, extract_index, create_block_manager_from_blocks\n    from pandas.core.arrays.boolean import is_list_like\n    from pandas.core.dtypes.common import is_categorical_dtype, is_extension_array_dtype, is_object_dtype\n    from pandas.core.internals.blocks import make_block\n    from pandas.core.tools.datetimes import DatetimeScalar\n    from pandas.core.indexes.base import ensure_index\n    from pandas.core.indexes.range import RangeIndex\n\n    if isinstance(values, ABCSeries):\n        if columns is None:\n            if values.name is not None:\n                columns = [values.name]\n        if index is None:\n            index = values.index\n        else:\n            values = values.reindex(index)\n\n        # zero len case (GH #2234)\n        if not len(values) and columns is not None and len(columns):\n            values = np.empty((0, 1), dtype=object)\n\n    if is_categorical_dtype(getattr(values, \"dtype\", None)) or is_categorical_dtype(dtype):\n\n        if not hasattr(values, \"dtype\"):\n            values = prep_ndarray(values, copy=copy)\n            values = values.ravel()\n        elif copy:\n            values = values.copy()\n\n        index, columns = extract_index([values, columns, index])\n        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n    elif is_extension_array_dtype(values) or is_extension_array_dtype(dtype):\n        # GH#19157\n        if columns is None:\n            columns = [0]\n        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n\n    # by definition an array here\n    # the dtypes will be coerced to a single dtype\n    values = prep_ndarray(values, copy=copy)\n\n    if dtype is not None:\n        if not is_dtype_equal(values.dtype, dtype):\n            try:\n                values = pd.Series(values).astype(dtype)\n            except Exception as orig:\n                # e.g. ValueError when trying to cast object dtype to float64\n                raise ValueError(\n                    f\"failed to cast to '{dtype}' (Exception was: {orig})\"\n                ) from orig\n\n    index, columns = extract_index([index, columns])\n    values = values.T\n    block_values = [values]\n\n    return create_block_manager_from_blocks(block_values, [columns, index])",
            "imports": [
                "import numpy as np",
                "import pandas as pd",
                "from pandas.core.dtypes.common import is_categorical_dtype, is_extension_array_dtype, is_object_dtype",
                "from pandas.core.series import ABCSeries",
                "from pandas.core.dtypes.dtypes import maybe_infer_to_datetimelike, is_dtype_equal",
                "from pandas.core.internals.construction import arrays_to_mgr, extract_index, create_block_manager_from_blocks",
                "from pandas.core.arrays.boolean import is_list_like",
                "from pandas.core.dtypes.common import is_categorical_dtype, is_extension_array_dtype, is_object_dtype",
                "from pandas.core.internals.blocks import make_block",
                "from pandas.core.tools.datetimes import DatetimeScalar",
                "from pandas.core.indexes.base import ensure_index",
                "from pandas.core.indexes.range import RangeIndex"
            ]
        }
    ]
}