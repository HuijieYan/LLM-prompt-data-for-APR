{
    "pandas": [
        {
            "bugID": 102,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 0,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 123,
            "file_name": "pandas/core/internals/construction.py",
            "replace_code": "def init_ndarray(values, index, columns, dtype=None, copy=False):\n    from pandas.core.arrays import Categorical, ExtensionArray, PeriodArray\n    import numpy as np\n\n    if hasattr(values, \"ndim\") and values.ndim == 0:\n        values = np.expand_dims(values, axis=0)\n\n    if is_categorical_dtype(values) or isinstance(values, Categorical) or isinstance(dtype, Categorical):\n        if not hasattr(values, \"dtype\"):\n            values = prep_ndarray(values, copy=copy)\n            values = values.ravel()\n        elif copy:\n            values = values.copy()\n\n        index, columns = _get_axes(N=values.size, K=1, index=index, columns=columns)\n        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n\n    elif is_extension_array_dtype(values) or isinstance(values, ExtensionArray) or isinstance(dtype, ExtensionArray):\n        if columns is None:\n            columns = [0]\n        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n\n    else:\n        values = prep_ndarray(values, copy=copy)\n\n        if dtype is not None:\n            values = values.astype(dtype)\n\n        index, columns = _get_axes(N=values.shape[0], K=values.ndim, index=index, columns=columns)\n        values = values.T\n\n        if is_object_dtype(values) and values.ndim >= 2:\n            block_values = []\n            for n in range(len(values)):\n                block_values.append(values[n])\n\n        else:\n            block_values = [values]\n\n    return create_block_manager_from_blocks(block_values, [columns, index])",
            "imports": [
                "from pandas.core.arrays import Categorical, ExtensionArray, PeriodArray",
                "import numpy as np"
            ]
        }
    ]
}