{
    "pandas": [
        {
            "bugID": 102,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 123,
            "file_name": "pandas/core/internals/construction.py",
            "replace_code": "def init_ndarray(values, index, columns, dtype=None, copy=False):\n    from pandas.api.types import is_object_dtype\n    from pandas.core.dtypes.common import is_categorical_dtype, is_dtype_equal\n    from pandas.core.arrays.categorical import is_categorical_dtype\n    from numpy import asarray, empty, dtype as numpdtype\n    from pandas import DataFrame\n    from pandas.api.types import is_object_dtype\n    from pandas.core.dtypes.common import is_categorical_dtype, is_dtype_equal\n    from pandas.core.arrays.categorical import is_categorical_dtype\n    from numpy import asarray, empty, dtype as numpdtype\n    from pandas import DataFrame\n    \n    if isinstance(values, (list, DataFrame)):\n        values = asarray(values)\n        \n    if is_categorical_dtype(getattr(values, \"dtype\", None)) or is_categorical_dtype(dtype):\n        values = asarray(values, dtype=numpdtype('O'))\n        if copy:\n            values = values.copy()\n        index, columns = _get_axes(values.shape[0], 1, index, columns)\n        return arrays_to_mgr([values], [values.name if isinstance(values, ABCSeries) else 0], index, columns, dtype=dtype)\n    elif getattr(values, 'dtype', None) is not None and is_dtype_equal(values.dtype, dtype):\n        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n    else:\n        values = asarray(values, dtype=dtype)\n        index, columns = _get_axes(*values.shape, index=index, columns=columns)\n        values = values.transpose()\n        if is_object_dtype(values):\n            values = [DataFrame(v) for v in values.T] if len(values.T.shape) == 2 else [DataFrame([v]) for v in values.T]\n        return arrays_to_mgr([values], columns, index, columns)"
        }
    ]
}