{
    "httpie:2": {
        "/Volumes/SSD2T/bgp_envs/repos/httpie_2/httpie/client.py": {
            "buggy_functions": [
                {
                    "function_name": "get_response",
                    "function_code": "def get_response(args, config_dir):\n    \"\"\"Send the request and return a `request.Response`.\"\"\"\n\n    requests_session = get_requests_session()\n\n    if not args.session and not args.session_read_only:\n        kwargs = get_requests_kwargs(args)\n        if args.debug:\n            dump_request(kwargs)\n        response = requests_session.request(**kwargs)\n    else:\n        response = sessions.get_response(\n            requests_session=requests_session,\n            args=args,\n            config_dir=config_dir,\n            session_name=args.session or args.session_read_only,\n            read_only=bool(args.session_read_only),\n        )\n\n    return response\n",
                    "decorators": [],
                    "docstring": "Send the request and return a `request.Response`.",
                    "start_line": 39,
                    "end_line": 58,
                    "variables": {
                        "requests_session": [
                            48,
                            42,
                            51
                        ],
                        "get_requests_session": [
                            42
                        ],
                        "args.session": [
                            44,
                            54
                        ],
                        "args": [
                            44,
                            45,
                            46,
                            52,
                            54,
                            55
                        ],
                        "args.session_read_only": [
                            44,
                            54,
                            55
                        ],
                        "kwargs": [
                            48,
                            45,
                            47
                        ],
                        "get_requests_kwargs": [
                            45
                        ],
                        "args.debug": [
                            46
                        ],
                        "dump_request": [
                            47
                        ],
                        "response": [
                            48,
                            50,
                            58
                        ],
                        "requests_session.request": [
                            48
                        ],
                        "sessions.get_response": [
                            50
                        ],
                        "sessions": [
                            50
                        ],
                        "config_dir": [
                            53
                        ],
                        "bool": [
                            55
                        ]
                    },
                    "filtered_variables": {
                        "requests_session": [
                            48,
                            42,
                            51
                        ],
                        "get_requests_session": [
                            42
                        ],
                        "args.session": [
                            44,
                            54
                        ],
                        "args": [
                            44,
                            45,
                            46,
                            52,
                            54,
                            55
                        ],
                        "args.session_read_only": [
                            44,
                            54,
                            55
                        ],
                        "kwargs": [
                            48,
                            45,
                            47
                        ],
                        "get_requests_kwargs": [
                            45
                        ],
                        "args.debug": [
                            46
                        ],
                        "dump_request": [
                            47
                        ],
                        "response": [
                            48,
                            50,
                            58
                        ],
                        "requests_session.request": [
                            48
                        ],
                        "sessions.get_response": [
                            50
                        ],
                        "sessions": [
                            50
                        ],
                        "config_dir": [
                            53
                        ]
                    },
                    "diff_line_number": 42,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "requests_session": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_requests_session": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "args.session": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "Namespace(auth=None, auth_type='basic', cert=None, cert_key=None, check_status=False, data=OrderedDict(), debug=False, download=False, download_resume=False, files=DataDict(), follow=True, form=False, headers={}, ignore_stdin=False, items=[], json=False, max_redirects=1, method='GET', output_file=None, output_options='hb', params=ParamsDict(), prettify=['format', 'colors'], proxy=[], session=None, session_read_only=None, show_redirects=False, stream=False, style='solarized', timeout=30, traceback=True, url='http://127.0.0.1:53969/redirect/3', verify='yes')",
                                    "variable_type": "Namespace",
                                    "variable_shape": null
                                },
                                "args.session_read_only": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_requests_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "args.debug": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dump_request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "requests_session.request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sessions.get_response": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sessions": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "config_dir": {
                                    "variable_value": "'/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/httpie_test_config_dir_iifl11oq'",
                                    "variable_type": "str",
                                    "variable_shape": "80"
                                }
                            },
                            {
                                "requests_session": {
                                    "variable_value": "<requests.sessions.Session object at 0x104ccae90>",
                                    "variable_type": "Session",
                                    "variable_shape": null
                                },
                                "get_requests_session": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "args.session": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "Namespace(auth=None, auth_type='basic', cert=None, cert_key=None, check_status=False, data=OrderedDict(), debug=False, download=False, download_resume=False, files=DataDict(), follow=True, form=False, headers={}, ignore_stdin=False, items=[], json=False, max_redirects=1, method='GET', output_file=None, output_options='hb', params=ParamsDict(), prettify=['format', 'colors'], proxy=[], session=None, session_read_only=None, show_redirects=False, stream=False, style='solarized', timeout=30, traceback=True, url='http://127.0.0.1:53969/redirect/3', verify='yes')",
                                    "variable_type": "Namespace",
                                    "variable_shape": null
                                },
                                "args.session_read_only": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": "{'stream': True, 'method': 'get', 'url': 'http://127.0.0.1:53969/redirect/3', 'headers': {'User-Agent': b'HTTPie/1.0.0-dev'}, 'data': OrderedDict(), 'verify': True, 'cert': None, 'timeout': 30, 'auth': None, 'proxies': {}, 'files': DataDict(), 'allow_redirects': True, 'params': ParamsDict()}",
                                    "variable_type": "dict",
                                    "variable_shape": "13"
                                },
                                "get_requests_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "args.debug": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dump_request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": "<Response [200]>",
                                    "variable_type": "Response",
                                    "variable_shape": null
                                },
                                "requests_session.request": {
                                    "variable_value": "<bound method Session.request of <requests.sessions.Session object at 0x104ccae90>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "sessions.get_response": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sessions": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "config_dir": {
                                    "variable_value": "'/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/httpie_test_config_dir_iifl11oq'",
                                    "variable_type": "str",
                                    "variable_shape": "80"
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "requests_session": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_requests_session": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "requests_session.max_redirects": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "args.max_redirects": {
                                    "variable_value": "1",
                                    "variable_type": "int",
                                    "variable_shape": null
                                },
                                "args": {
                                    "variable_value": "Namespace(auth=None, auth_type='basic', cert=None, cert_key=None, check_status=False, data=OrderedDict(), debug=False, download=False, download_resume=False, files=DataDict(), follow=True, form=False, headers={}, ignore_stdin=False, items=[], json=False, max_redirects=1, method='GET', output_file=None, output_options='hb', params=ParamsDict(), prettify=['format', 'colors'], proxy=[], session=None, session_read_only=None, show_redirects=False, stream=False, style='solarized', timeout=30, traceback=True, url='http://127.0.0.1:53977/redirect/3', verify='yes')",
                                    "variable_type": "Namespace",
                                    "variable_shape": null
                                },
                                "args.session": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "args.session_read_only": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_requests_kwargs": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "args.debug": {
                                    "variable_value": "False",
                                    "variable_type": "bool",
                                    "variable_shape": null
                                },
                                "dump_request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "response": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "requests_session.request": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sessions.get_response": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "sessions": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "config_dir": {
                                    "variable_value": "'/var/folders/ng/72llsm517x12c2p18htksyjc0000gn/T/httpie_test_config_dir_z2w7z1rw'",
                                    "variable_type": "str",
                                    "variable_shape": "80"
                                }
                            },
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def get_requests_session():\n    requests_session = requests.Session()\n    for cls in plugin_manager.get_transport_plugins():\n        transport_plugin = cls()\n        requests_session.mount(prefix=transport_plugin.prefix,\n                               adapter=transport_plugin.get_adapter())\n    return requests_session",
                "def get_response(args, config_dir):\n    \"\"\"Send the request and return a `request.Response`.\"\"\"\n\n    requests_session = get_requests_session()\n\n    if not args.session and not args.session_read_only:\n        kwargs = get_requests_kwargs(args)\n        if args.debug:\n            dump_request(kwargs)\n        response = requests_session.request(**kwargs)\n    else:\n        response = sessions.get_response(\n            requests_session=requests_session,\n            args=args,\n            config_dir=config_dir,\n            session_name=args.session or args.session_read_only,\n            read_only=bool(args.session_read_only),\n        )\n\n    return response",
                "def dump_request(kwargs):\n    sys.stderr.write('\\n>>> requests.request(**%s)\\n\\n'\n                     % pformat(kwargs))",
                "def encode_headers(headers):\n    # This allows for unicode headers which is non-standard but practical.\n    # See: https://github.com/jkbrzt/httpie/issues/212\n    return dict(\n        (name, value.encode('utf8') if isinstance(value, str) else value)\n        for name, value in headers.items()\n    )",
                "def get_default_headers(args):\n    default_headers = {\n        'User-Agent': DEFAULT_UA\n    }\n\n    auto_json = args.data and not args.form\n    # FIXME: Accept is set to JSON with `http url @./file.txt`.\n    if args.json or auto_json:\n        default_headers['Accept'] = 'application/json'\n        if args.json or (auto_json and args.data):\n            default_headers['Content-Type'] = JSON\n\n    elif args.form and not args.files:\n        # If sending files, `requests` will set\n        # the `Content-Type` for us.\n        default_headers['Content-Type'] = FORM\n    return default_headers",
                "def get_requests_kwargs(args, base_headers=None):\n    \"\"\"\n    Translate our `args` into `requests.request` keyword arguments.\n\n    \"\"\"\n    # Serialize JSON data, if needed.\n    data = args.data\n    auto_json = data and not args.form\n    if (args.json or auto_json) and isinstance(data, dict):\n        if data:\n            data = json.dumps(data)\n        else:\n            # We need to set data to an empty string to prevent requests\n            # from assigning an empty list to `response.request.data`.\n            data = ''\n\n    # Finalize headers.\n    headers = get_default_headers(args)\n    if base_headers:\n        headers.update(base_headers)\n    headers.update(args.headers)\n    headers = encode_headers(headers)\n\n    credentials = None\n    if args.auth:\n        auth_plugin = plugin_manager.get_auth_plugin(args.auth_type)()\n        credentials = auth_plugin.get_auth(args.auth.key, args.auth.value)\n\n    cert = None\n    if args.cert:\n        cert = args.cert\n        if args.cert_key:\n            cert = cert, args.cert_key\n\n    kwargs = {\n        'stream': True,\n        'method': args.method.lower(),\n        'url': args.url,\n        'headers': headers,\n        'data': data,\n        'verify': {\n            'yes': True,\n            'no': False\n        }.get(args.verify, args.verify),\n        'cert': cert,\n        'timeout': args.timeout,\n        'auth': credentials,\n        'proxies': dict((p.key, p.value) for p in args.proxy),\n        'files': args.files,\n        'allow_redirects': args.follow,\n        'params': args.params,\n    }\n\n    return kwargs"
            ],
            "inscope_function_signatures": [
                "get_requests_session()",
                "get_response(args, config_dir)",
                "dump_request(kwargs)",
                "encode_headers(headers)",
                "get_default_headers(args)",
                "get_requests_kwargs(args, base_headers=None)"
            ],
            "variables_in_file": {
                "urllib3.disable_warnings": [
                    16
                ],
                "urllib3": [
                    16
                ],
                "AttributeError": [
                    17
                ],
                "FORM": [
                    25,
                    90
                ],
                "JSON": [
                    26,
                    85
                ],
                "DEFAULT_UA": [
                    27,
                    77
                ],
                "__version__": [
                    27
                ],
                "requests_session": [
                    34,
                    36,
                    42,
                    48,
                    51,
                    31
                ],
                "requests.Session": [
                    31
                ],
                "requests": [
                    31
                ],
                "cls": [
                    32,
                    33
                ],
                "plugin_manager.get_transport_plugins": [
                    32
                ],
                "plugin_manager": [
                    32,
                    119
                ],
                "transport_plugin": [
                    33,
                    34,
                    35
                ],
                "requests_session.mount": [
                    34
                ],
                "transport_plugin.prefix": [
                    34
                ],
                "transport_plugin.get_adapter": [
                    35
                ],
                "get_requests_session": [
                    42
                ],
                "args.session": [
                    44,
                    54
                ],
                "args": [
                    130,
                    131,
                    137,
                    139,
                    141,
                    142,
                    143,
                    144,
                    44,
                    45,
                    46,
                    52,
                    54,
                    55,
                    80,
                    82,
                    84,
                    87,
                    100,
                    101,
                    102,
                    111,
                    114,
                    118,
                    119,
                    120,
                    123,
                    124,
                    125,
                    126
                ],
                "args.session_read_only": [
                    44,
                    54,
                    55
                ],
                "kwargs": [
                    128,
                    45,
                    47,
                    48,
                    147,
                    63
                ],
                "get_requests_kwargs": [
                    45
                ],
                "args.debug": [
                    46
                ],
                "dump_request": [
                    47
                ],
                "response": [
                    48,
                    50,
                    58
                ],
                "requests_session.request": [
                    48
                ],
                "sessions.get_response": [
                    50
                ],
                "sessions": [
                    50
                ],
                "config_dir": [
                    53
                ],
                "bool": [
                    55
                ],
                "sys.stderr.write": [
                    62
                ],
                "sys.stderr": [
                    62
                ],
                "sys": [
                    62
                ],
                "pformat": [
                    63
                ],
                "dict": [
                    69,
                    102,
                    141
                ],
                "name": [
                    70,
                    71
                ],
                "isinstance": [
                    102,
                    70
                ],
                "value": [
                    70,
                    71
                ],
                "str": [
                    70
                ],
                "value.encode": [
                    70
                ],
                "headers.items": [
                    71
                ],
                "headers": [
                    132,
                    71,
                    111,
                    113,
                    114,
                    115
                ],
                "default_headers": [
                    76,
                    83,
                    85,
                    90,
                    91
                ],
                "auto_json": [
                    101,
                    102,
                    80,
                    82,
                    84
                ],
                "args.data": [
                    80,
                    100,
                    84
                ],
                "args.form": [
                    80,
                    101,
                    87
                ],
                "args.json": [
                    82,
                    84,
                    102
                ],
                "args.files": [
                    142,
                    87
                ],
                "data": [
                    100,
                    101,
                    102,
                    103,
                    104,
                    133,
                    108
                ],
                "json.dumps": [
                    104
                ],
                "json": [
                    104
                ],
                "get_default_headers": [
                    111
                ],
                "base_headers": [
                    112,
                    113
                ],
                "headers.update": [
                    113,
                    114
                ],
                "args.headers": [
                    114
                ],
                "encode_headers": [
                    115
                ],
                "credentials": [
                    120,
                    140,
                    117
                ],
                "args.auth": [
                    120,
                    118
                ],
                "auth_plugin": [
                    120,
                    119
                ],
                "plugin_manager.get_auth_plugin": [
                    119
                ],
                "args.auth_type": [
                    119
                ],
                "auth_plugin.get_auth": [
                    120
                ],
                "args.auth.key": [
                    120
                ],
                "args.auth.value": [
                    120
                ],
                "cert": [
                    122,
                    124,
                    126,
                    138
                ],
                "args.cert": [
                    123,
                    124
                ],
                "args.cert_key": [
                    125,
                    126
                ],
                "args.method.lower": [
                    130
                ],
                "args.method": [
                    130
                ],
                "args.url": [
                    131
                ],
                "get": [
                    134
                ],
                "args.verify": [
                    137
                ],
                "args.timeout": [
                    139
                ],
                "p.key": [
                    141
                ],
                "p": [
                    141
                ],
                "p.value": [
                    141
                ],
                "args.proxy": [
                    141
                ],
                "args.follow": [
                    143
                ],
                "args.params": [
                    144
                ]
            },
            "filtered_variables_in_file": {
                "urllib3.disable_warnings": [
                    16
                ],
                "urllib3": [
                    16
                ],
                "FORM": [
                    25,
                    90
                ],
                "JSON": [
                    26,
                    85
                ],
                "DEFAULT_UA": [
                    27,
                    77
                ],
                "__version__": [
                    27
                ],
                "requests_session": [
                    34,
                    36,
                    42,
                    48,
                    51,
                    31
                ],
                "requests.Session": [
                    31
                ],
                "requests": [
                    31
                ],
                "cls": [
                    32,
                    33
                ],
                "plugin_manager.get_transport_plugins": [
                    32
                ],
                "plugin_manager": [
                    32,
                    119
                ],
                "transport_plugin": [
                    33,
                    34,
                    35
                ],
                "requests_session.mount": [
                    34
                ],
                "transport_plugin.prefix": [
                    34
                ],
                "transport_plugin.get_adapter": [
                    35
                ],
                "get_requests_session": [
                    42
                ],
                "args.session": [
                    44,
                    54
                ],
                "args": [
                    130,
                    131,
                    137,
                    139,
                    141,
                    142,
                    143,
                    144,
                    44,
                    45,
                    46,
                    52,
                    54,
                    55,
                    80,
                    82,
                    84,
                    87,
                    100,
                    101,
                    102,
                    111,
                    114,
                    118,
                    119,
                    120,
                    123,
                    124,
                    125,
                    126
                ],
                "args.session_read_only": [
                    44,
                    54,
                    55
                ],
                "kwargs": [
                    128,
                    45,
                    47,
                    48,
                    147,
                    63
                ],
                "get_requests_kwargs": [
                    45
                ],
                "args.debug": [
                    46
                ],
                "dump_request": [
                    47
                ],
                "response": [
                    48,
                    50,
                    58
                ],
                "requests_session.request": [
                    48
                ],
                "sessions.get_response": [
                    50
                ],
                "sessions": [
                    50
                ],
                "config_dir": [
                    53
                ],
                "sys.stderr.write": [
                    62
                ],
                "sys.stderr": [
                    62
                ],
                "sys": [
                    62
                ],
                "pformat": [
                    63
                ],
                "name": [
                    70,
                    71
                ],
                "value": [
                    70,
                    71
                ],
                "value.encode": [
                    70
                ],
                "headers.items": [
                    71
                ],
                "headers": [
                    132,
                    71,
                    111,
                    113,
                    114,
                    115
                ],
                "default_headers": [
                    76,
                    83,
                    85,
                    90,
                    91
                ],
                "auto_json": [
                    101,
                    102,
                    80,
                    82,
                    84
                ],
                "args.data": [
                    80,
                    100,
                    84
                ],
                "args.form": [
                    80,
                    101,
                    87
                ],
                "args.json": [
                    82,
                    84,
                    102
                ],
                "args.files": [
                    142,
                    87
                ],
                "data": [
                    100,
                    101,
                    102,
                    103,
                    104,
                    133,
                    108
                ],
                "json.dumps": [
                    104
                ],
                "json": [
                    104
                ],
                "get_default_headers": [
                    111
                ],
                "base_headers": [
                    112,
                    113
                ],
                "headers.update": [
                    113,
                    114
                ],
                "args.headers": [
                    114
                ],
                "encode_headers": [
                    115
                ],
                "credentials": [
                    120,
                    140,
                    117
                ],
                "args.auth": [
                    120,
                    118
                ],
                "auth_plugin": [
                    120,
                    119
                ],
                "plugin_manager.get_auth_plugin": [
                    119
                ],
                "args.auth_type": [
                    119
                ],
                "auth_plugin.get_auth": [
                    120
                ],
                "args.auth.key": [
                    120
                ],
                "args.auth.value": [
                    120
                ],
                "cert": [
                    122,
                    124,
                    126,
                    138
                ],
                "args.cert": [
                    123,
                    124
                ],
                "args.cert_key": [
                    125,
                    126
                ],
                "args.method.lower": [
                    130
                ],
                "args.method": [
                    130
                ],
                "args.url": [
                    131
                ],
                "get": [
                    134
                ],
                "args.verify": [
                    137
                ],
                "args.timeout": [
                    139
                ],
                "p.key": [
                    141
                ],
                "p": [
                    141
                ],
                "p.value": [
                    141
                ],
                "args.proxy": [
                    141
                ],
                "args.follow": [
                    143
                ],
                "args.params": [
                    144
                ]
            }
        },
        "/Volumes/SSD2T/bgp_envs/repos/httpie_2/httpie/core.py": {
            "buggy_functions": [
                {
                    "function_name": "main",
                    "function_code": "def main(args=sys.argv[1:], env=Environment(), error=None):\n    \"\"\"Run the main program and write the output to ``env.stdout``.\n\n    Return exit status code.\n\n    \"\"\"\n    args = decode_args(args, env.stdin_encoding)\n    plugin_manager.load_installed_plugins()\n\n    from httpie.cli import parser\n\n    if env.config.default_options:\n        args = env.config.default_options + args\n\n    def _error(msg, *args, **kwargs):\n        msg = msg % args\n        level = kwargs.get('level', 'error')\n        env.stderr.write('\\nhttp: %s: %s\\n' % (level, msg))\n\n    if error is None:\n        error = _error\n\n    debug = '--debug' in args\n    traceback = debug or '--traceback' in args\n    exit_status = ExitStatus.OK\n\n    if debug:\n        print_debug_info(env)\n        if args == ['--debug']:\n            return exit_status\n\n    download = None\n    try:\n        args = parser.parse_args(args=args, env=env)\n\n        if args.download:\n            args.follow = True  # --download implies --follow.\n            download = Download(\n                output_file=args.output_file,\n                progress_file=env.stderr,\n                resume=args.download_resume\n            )\n            download.pre_request(args.headers)\n\n        last_response = get_response(args, config_dir=env.config.directory)\n\n        if args.show_redirects:\n            responses = last_response.history + [last_response]\n        else:\n            responses = [last_response]\n\n        for response in responses:\n\n            if exit_status != ExitStatus.OK:\n                break\n\n            if args.check_status or download:\n\n                exit_status = get_exit_status(\n                    http_status=response.status_code,\n                    follow=args.follow\n                )\n\n                if not env.stdout_isatty and exit_status != ExitStatus.OK:\n                    error('HTTP %s %s',\n                          response.raw.status,\n                          response.raw.reason,\n                          level='warning')\n\n            write_kwargs = {\n                'stream': build_output_stream(args, env,\n                                              response.request,\n                                              response),\n                # This will in fact be `stderr` with `--download`\n                'outfile': env.stdout,\n                'flush': env.stdout_isatty or args.stream\n            }\n\n            try:\n                if env.is_windows and is_py3 and 'colors' in args.prettify:\n                    write_with_colors_win_py3(**write_kwargs)\n                else:\n                    write(**write_kwargs)\n            except IOError as e:\n                if not traceback and e.errno == errno.EPIPE:\n                    # Ignore broken pipes unless --traceback.\n                    env.stderr.write('\\n')\n                else:\n                    raise\n\n        if download and exit_status == ExitStatus.OK:\n            # Last response body download.\n            download_stream, download_to = download.start(last_response)\n            write(\n                stream=download_stream,\n                outfile=download_to,\n                flush=False,\n            )\n            download.finish()\n            if download.interrupted:\n                exit_status = ExitStatus.ERROR\n                error('Incomplete download: size=%d; downloaded=%d' % (\n                    download.status.total_size,\n                    download.status.downloaded\n                ))\n\n    except KeyboardInterrupt:\n        if traceback:\n            raise\n        env.stderr.write('\\n')\n        exit_status = ExitStatus.ERROR\n    except SystemExit as e:\n        if e.code != ExitStatus.OK:\n            if traceback:\n                raise\n            env.stderr.write('\\n')\n            exit_status = ExitStatus.ERROR\n    except requests.Timeout:\n        exit_status = ExitStatus.ERROR_TIMEOUT\n        error('Request timed out (%ss).', args.timeout)\n    except requests.TooManyRedirects:\n        exit_status = ExitStatus.ERROR_TOO_MANY_REDIRECTS\n        error('Too many redirects (--max-redirects=%s).', args.max_redirects)\n    except Exception as e:\n        # TODO: Better distinction between expected and unexpected errors.\n        #       Network errors vs. bugs, etc.\n        if traceback:\n            raise\n        msg = str(e)\n        if hasattr(e, 'request'):\n            request = e.request\n            if hasattr(request, 'url'):\n                msg += ' while doing %s request to URL: %s' % (\n                    request.method, request.url)\n        error('%s: %s', type(e).__name__, msg)\n        exit_status = ExitStatus.ERROR\n\n    finally:\n        if download and not download.finished:\n            download.failed()\n\n    return exit_status\n",
                    "decorators": [],
                    "docstring": "Run the main program and write the output to ``env.stdout``.\n\nReturn exit status code.",
                    "start_line": 70,
                    "end_line": 211,
                    "variables": {
                        "sys.argv": [
                            70
                        ],
                        "sys": [
                            70
                        ],
                        "Environment": [
                            70
                        ],
                        "args": [
                            130,
                            140,
                            145,
                            149,
                            189,
                            192,
                            76,
                            82,
                            85,
                            92,
                            93,
                            98,
                            103,
                            105,
                            106,
                            108,
                            110,
                            112,
                            114,
                            116,
                            126
                        ],
                        "decode_args": [
                            76
                        ],
                        "env.stdin_encoding": [
                            76
                        ],
                        "env": [
                            97,
                            133,
                            103,
                            76,
                            109,
                            140,
                            144,
                            81,
                            82,
                            114,
                            145,
                            149,
                            179,
                            87,
                            185,
                            156
                        ],
                        "plugin_manager.load_installed_plugins": [
                            77
                        ],
                        "plugin_manager": [
                            77
                        ],
                        "env.config.default_options": [
                            81,
                            82
                        ],
                        "env.config": [
                            81,
                            82,
                            114
                        ],
                        "msg": [
                            198,
                            202,
                            204,
                            85,
                            87
                        ],
                        "level": [
                            86,
                            87
                        ],
                        "kwargs.get": [
                            86
                        ],
                        "kwargs": [
                            86
                        ],
                        "env.stderr.write": [
                            185,
                            179,
                            156,
                            87
                        ],
                        "env.stderr": [
                            109,
                            179,
                            87,
                            185,
                            156
                        ],
                        "error": [
                            192,
                            134,
                            171,
                            204,
                            89,
                            90,
                            189
                        ],
                        "_error": [
                            90
                        ],
                        "debug": [
                            96,
                            92,
                            93
                        ],
                        "traceback": [
                            196,
                            177,
                            183,
                            154,
                            93
                        ],
                        "exit_status": [
                            128,
                            160,
                            99,
                            133,
                            170,
                            205,
                            211,
                            180,
                            186,
                            123,
                            188,
                            94,
                            191
                        ],
                        "ExitStatus.OK": [
                            160,
                            133,
                            182,
                            123,
                            94
                        ],
                        "ExitStatus": [
                            160,
                            133,
                            170,
                            205,
                            180,
                            182,
                            186,
                            123,
                            188,
                            94,
                            191
                        ],
                        "print_debug_info": [
                            97
                        ],
                        "download": [
                            160,
                            162,
                            101,
                            168,
                            169,
                            107,
                            172,
                            173,
                            112,
                            208,
                            209,
                            126
                        ],
                        "parser.parse_args": [
                            103
                        ],
                        "parser": [
                            103
                        ],
                        "args.download": [
                            105
                        ],
                        "args.follow": [
                            106,
                            130
                        ],
                        "Download": [
                            107
                        ],
                        "args.output_file": [
                            108
                        ],
                        "args.download_resume": [
                            110
                        ],
                        "download.pre_request": [
                            112
                        ],
                        "args.headers": [
                            112
                        ],
                        "last_response": [
                            162,
                            114,
                            117,
                            119
                        ],
                        "get_response": [
                            114
                        ],
                        "env.config.directory": [
                            114
                        ],
                        "args.show_redirects": [
                            116
                        ],
                        "responses": [
                            121,
                            117,
                            119
                        ],
                        "last_response.history": [
                            117
                        ],
                        "response": [
                            129,
                            135,
                            136,
                            141,
                            142,
                            121
                        ],
                        "args.check_status": [
                            126
                        ],
                        "get_exit_status": [
                            128
                        ],
                        "response.status_code": [
                            129
                        ],
                        "env.stdout_isatty": [
                            145,
                            133
                        ],
                        "response.raw.status": [
                            135
                        ],
                        "response.raw": [
                            136,
                            135
                        ],
                        "response.raw.reason": [
                            136
                        ],
                        "write_kwargs": [
                            152,
                            139,
                            150
                        ],
                        "build_output_stream": [
                            140
                        ],
                        "response.request": [
                            141
                        ],
                        "env.stdout": [
                            144
                        ],
                        "args.stream": [
                            145
                        ],
                        "env.is_windows": [
                            149
                        ],
                        "is_py3": [
                            149
                        ],
                        "args.prettify": [
                            149
                        ],
                        "write_with_colors_win_py3": [
                            150
                        ],
                        "write": [
                            152,
                            163
                        ],
                        "IOError": [
                            153
                        ],
                        "e.errno": [
                            154
                        ],
                        "e": [
                            198,
                            199,
                            200,
                            204,
                            182,
                            154
                        ],
                        "errno.EPIPE": [
                            154
                        ],
                        "errno": [
                            154
                        ],
                        "download_stream": [
                            162,
                            164
                        ],
                        "download_to": [
                            162,
                            165
                        ],
                        "download.start": [
                            162
                        ],
                        "download.finish": [
                            168
                        ],
                        "download.interrupted": [
                            169
                        ],
                        "ExitStatus.ERROR": [
                            186,
                            170,
                            180,
                            205
                        ],
                        "download.status.total_size": [
                            172
                        ],
                        "download.status": [
                            172,
                            173
                        ],
                        "download.status.downloaded": [
                            173
                        ],
                        "KeyboardInterrupt": [
                            176
                        ],
                        "SystemExit": [
                            181
                        ],
                        "e.code": [
                            182
                        ],
                        "requests.Timeout": [
                            187
                        ],
                        "requests": [
                            187,
                            190
                        ],
                        "ExitStatus.ERROR_TIMEOUT": [
                            188
                        ],
                        "args.timeout": [
                            189
                        ],
                        "requests.TooManyRedirects": [
                            190
                        ],
                        "ExitStatus.ERROR_TOO_MANY_REDIRECTS": [
                            191
                        ],
                        "args.max_redirects": [
                            192
                        ],
                        "Exception": [
                            193
                        ],
                        "str": [
                            198
                        ],
                        "hasattr": [
                            201,
                            199
                        ],
                        "request": [
                            200,
                            201,
                            203
                        ],
                        "e.request": [
                            200
                        ],
                        "request.method": [
                            203
                        ],
                        "request.url": [
                            203
                        ],
                        "__name__": [
                            204
                        ],
                        "type": [
                            204
                        ],
                        "download.finished": [
                            208
                        ],
                        "download.failed": [
                            209
                        ]
                    },
                    "filtered_variables": {
                        "sys.argv": [
                            70
                        ],
                        "sys": [
                            70
                        ],
                        "Environment": [
                            70
                        ],
                        "args": [
                            130,
                            140,
                            145,
                            149,
                            189,
                            192,
                            76,
                            82,
                            85,
                            92,
                            93,
                            98,
                            103,
                            105,
                            106,
                            108,
                            110,
                            112,
                            114,
                            116,
                            126
                        ],
                        "decode_args": [
                            76
                        ],
                        "env.stdin_encoding": [
                            76
                        ],
                        "env": [
                            97,
                            133,
                            103,
                            76,
                            109,
                            140,
                            144,
                            81,
                            82,
                            114,
                            145,
                            149,
                            179,
                            87,
                            185,
                            156
                        ],
                        "plugin_manager.load_installed_plugins": [
                            77
                        ],
                        "plugin_manager": [
                            77
                        ],
                        "env.config.default_options": [
                            81,
                            82
                        ],
                        "env.config": [
                            81,
                            82,
                            114
                        ],
                        "msg": [
                            198,
                            202,
                            204,
                            85,
                            87
                        ],
                        "level": [
                            86,
                            87
                        ],
                        "kwargs.get": [
                            86
                        ],
                        "kwargs": [
                            86
                        ],
                        "env.stderr.write": [
                            185,
                            179,
                            156,
                            87
                        ],
                        "env.stderr": [
                            109,
                            179,
                            87,
                            185,
                            156
                        ],
                        "error": [
                            192,
                            134,
                            171,
                            204,
                            89,
                            90,
                            189
                        ],
                        "_error": [
                            90
                        ],
                        "debug": [
                            96,
                            92,
                            93
                        ],
                        "traceback": [
                            196,
                            177,
                            183,
                            154,
                            93
                        ],
                        "exit_status": [
                            128,
                            160,
                            99,
                            133,
                            170,
                            205,
                            211,
                            180,
                            186,
                            123,
                            188,
                            94,
                            191
                        ],
                        "ExitStatus.OK": [
                            160,
                            133,
                            182,
                            123,
                            94
                        ],
                        "ExitStatus": [
                            160,
                            133,
                            170,
                            205,
                            180,
                            182,
                            186,
                            123,
                            188,
                            94,
                            191
                        ],
                        "print_debug_info": [
                            97
                        ],
                        "download": [
                            160,
                            162,
                            101,
                            168,
                            169,
                            107,
                            172,
                            173,
                            112,
                            208,
                            209,
                            126
                        ],
                        "parser.parse_args": [
                            103
                        ],
                        "parser": [
                            103
                        ],
                        "args.download": [
                            105
                        ],
                        "args.follow": [
                            106,
                            130
                        ],
                        "Download": [
                            107
                        ],
                        "args.output_file": [
                            108
                        ],
                        "args.download_resume": [
                            110
                        ],
                        "download.pre_request": [
                            112
                        ],
                        "args.headers": [
                            112
                        ],
                        "last_response": [
                            162,
                            114,
                            117,
                            119
                        ],
                        "get_response": [
                            114
                        ],
                        "env.config.directory": [
                            114
                        ],
                        "args.show_redirects": [
                            116
                        ],
                        "responses": [
                            121,
                            117,
                            119
                        ],
                        "last_response.history": [
                            117
                        ],
                        "response": [
                            129,
                            135,
                            136,
                            141,
                            142,
                            121
                        ],
                        "args.check_status": [
                            126
                        ],
                        "get_exit_status": [
                            128
                        ],
                        "response.status_code": [
                            129
                        ],
                        "env.stdout_isatty": [
                            145,
                            133
                        ],
                        "response.raw.status": [
                            135
                        ],
                        "response.raw": [
                            136,
                            135
                        ],
                        "response.raw.reason": [
                            136
                        ],
                        "write_kwargs": [
                            152,
                            139,
                            150
                        ],
                        "build_output_stream": [
                            140
                        ],
                        "response.request": [
                            141
                        ],
                        "env.stdout": [
                            144
                        ],
                        "args.stream": [
                            145
                        ],
                        "env.is_windows": [
                            149
                        ],
                        "is_py3": [
                            149
                        ],
                        "args.prettify": [
                            149
                        ],
                        "write_with_colors_win_py3": [
                            150
                        ],
                        "write": [
                            152,
                            163
                        ],
                        "e.errno": [
                            154
                        ],
                        "e": [
                            198,
                            199,
                            200,
                            204,
                            182,
                            154
                        ],
                        "errno.EPIPE": [
                            154
                        ],
                        "errno": [
                            154
                        ],
                        "download_stream": [
                            162,
                            164
                        ],
                        "download_to": [
                            162,
                            165
                        ],
                        "download.start": [
                            162
                        ],
                        "download.finish": [
                            168
                        ],
                        "download.interrupted": [
                            169
                        ],
                        "ExitStatus.ERROR": [
                            186,
                            170,
                            180,
                            205
                        ],
                        "download.status.total_size": [
                            172
                        ],
                        "download.status": [
                            172,
                            173
                        ],
                        "download.status.downloaded": [
                            173
                        ],
                        "e.code": [
                            182
                        ],
                        "requests.Timeout": [
                            187
                        ],
                        "requests": [
                            187,
                            190
                        ],
                        "ExitStatus.ERROR_TIMEOUT": [
                            188
                        ],
                        "args.timeout": [
                            189
                        ],
                        "requests.TooManyRedirects": [
                            190
                        ],
                        "ExitStatus.ERROR_TOO_MANY_REDIRECTS": [
                            191
                        ],
                        "args.max_redirects": [
                            192
                        ],
                        "request": [
                            200,
                            201,
                            203
                        ],
                        "e.request": [
                            200
                        ],
                        "request.method": [
                            203
                        ],
                        "request.url": [
                            203
                        ],
                        "download.finished": [
                            208
                        ],
                        "download.failed": [
                            209
                        ]
                    },
                    "diff_line_number": 195,
                    "class_data": null,
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {},
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def get_exit_status(http_status, follow=False):\n    \"\"\"Translate HTTP status code to exit status code.\"\"\"\n    if 300 <= http_status <= 399 and not follow:\n        # Redirect\n        return ExitStatus.ERROR_HTTP_3XX\n    elif 400 <= http_status <= 499:\n        # Client Error\n        return ExitStatus.ERROR_HTTP_4XX\n    elif 500 <= http_status <= 599:\n        # Server Error\n        return ExitStatus.ERROR_HTTP_5XX\n    else:\n        return ExitStatus.OK",
                "def print_debug_info(env):\n    env.stderr.writelines([\n        'HTTPie %s\\n' % httpie_version,\n        'HTTPie data: %s\\n' % env.config.directory,\n        'Requests %s\\n' % requests_version,\n        'Pygments %s\\n' % pygments_version,\n        'Python %s %s\\n' % (sys.version, sys.platform)\n    ])",
                "def decode_args(args, stdin_encoding):\n    \"\"\"\n    Convert all bytes ags to str\n    by decoding them using stdin encoding.\n\n    \"\"\"\n    return [\n        arg.decode(stdin_encoding)\n        if type(arg) == bytes else arg\n        for arg in args\n    ]",
                "def main(args=sys.argv[1:], env=Environment(), error=None):\n    \"\"\"Run the main program and write the output to ``env.stdout``.\n\n    Return exit status code.\n\n    \"\"\"\n    args = decode_args(args, env.stdin_encoding)\n    plugin_manager.load_installed_plugins()\n\n    from httpie.cli import parser\n\n    if env.config.default_options:\n        args = env.config.default_options + args\n\n    def _error(msg, *args, **kwargs):\n        msg = msg % args\n        level = kwargs.get('level', 'error')\n        env.stderr.write('\\nhttp: %s: %s\\n' % (level, msg))\n\n    if error is None:\n        error = _error\n\n    debug = '--debug' in args\n    traceback = debug or '--traceback' in args\n    exit_status = ExitStatus.OK\n\n    if debug:\n        print_debug_info(env)\n        if args == ['--debug']:\n            return exit_status\n\n    download = None\n    try:\n        args = parser.parse_args(args=args, env=env)\n\n        if args.download:\n            args.follow = True  # --download implies --follow.\n            download = Download(\n                output_file=args.output_file,\n                progress_file=env.stderr,\n                resume=args.download_resume\n            )\n            download.pre_request(args.headers)\n\n        last_response = get_response(args, config_dir=env.config.directory)\n\n        if args.show_redirects:\n            responses = last_response.history + [last_response]\n        else:\n            responses = [last_response]\n\n        for response in responses:\n\n            if exit_status != ExitStatus.OK:\n                break\n\n            if args.check_status or download:\n\n                exit_status = get_exit_status(\n                    http_status=response.status_code,\n                    follow=args.follow\n                )\n\n                if not env.stdout_isatty and exit_status != ExitStatus.OK:\n                    error('HTTP %s %s',\n                          response.raw.status,\n                          response.raw.reason,\n                          level='warning')\n\n            write_kwargs = {\n                'stream': build_output_stream(args, env,\n                                              response.request,\n                                              response),\n                # This will in fact be `stderr` with `--download`\n                'outfile': env.stdout,\n                'flush': env.stdout_isatty or args.stream\n            }\n\n            try:\n                if env.is_windows and is_py3 and 'colors' in args.prettify:\n                    write_with_colors_win_py3(**write_kwargs)\n                else:\n                    write(**write_kwargs)\n            except IOError as e:\n                if not traceback and e.errno == errno.EPIPE:\n                    # Ignore broken pipes unless --traceback.\n                    env.stderr.write('\\n')\n                else:\n                    raise\n\n        if download and exit_status == ExitStatus.OK:\n            # Last response body download.\n            download_stream, download_to = download.start(last_response)\n            write(\n                stream=download_stream,\n                outfile=download_to,\n                flush=False,\n            )\n            download.finish()\n            if download.interrupted:\n                exit_status = ExitStatus.ERROR\n                error('Incomplete download: size=%d; downloaded=%d' % (\n                    download.status.total_size,\n                    download.status.downloaded\n                ))\n\n    except KeyboardInterrupt:\n        if traceback:\n            raise\n        env.stderr.write('\\n')\n        exit_status = ExitStatus.ERROR\n    except SystemExit as e:\n        if e.code != ExitStatus.OK:\n            if traceback:\n                raise\n            env.stderr.write('\\n')\n            exit_status = ExitStatus.ERROR\n    except requests.Timeout:\n        exit_status = ExitStatus.ERROR_TIMEOUT\n        error('Request timed out (%ss).', args.timeout)\n    except requests.TooManyRedirects:\n        exit_status = ExitStatus.ERROR_TOO_MANY_REDIRECTS\n        error('Too many redirects (--max-redirects=%s).', args.max_redirects)\n    except Exception as e:\n        # TODO: Better distinction between expected and unexpected errors.\n        #       Network errors vs. bugs, etc.\n        if traceback:\n            raise\n        msg = str(e)\n        if hasattr(e, 'request'):\n            request = e.request\n            if hasattr(request, 'url'):\n                msg += ' while doing %s request to URL: %s' % (\n                    request.method, request.url)\n        error('%s: %s', type(e).__name__, msg)\n        exit_status = ExitStatus.ERROR\n\n    finally:\n        if download and not download.finished:\n            download.failed()\n\n    return exit_status",
                "def _error(msg, *args, **kwargs):\n    msg = msg % args\n    level = kwargs.get('level', 'error')\n    env.stderr.write('\\nhttp: %s: %s\\n' % (level, msg))"
            ],
            "inscope_function_signatures": [
                "get_exit_status(http_status, follow=False)",
                "print_debug_info(env)",
                "decode_args(args, stdin_encoding)",
                "main(args=sys.argv[1:], env=Environment(), error=None)",
                "_error(msg, *args, **kwargs)"
            ],
            "variables_in_file": {
                "http_status": [
                    40,
                    34,
                    37
                ],
                "follow": [
                    34
                ],
                "ExitStatus.ERROR_HTTP_3XX": [
                    36
                ],
                "ExitStatus": [
                    160,
                    36,
                    133,
                    39,
                    42,
                    170,
                    44,
                    205,
                    180,
                    182,
                    186,
                    123,
                    188,
                    94,
                    191
                ],
                "ExitStatus.ERROR_HTTP_4XX": [
                    39
                ],
                "ExitStatus.ERROR_HTTP_5XX": [
                    42
                ],
                "ExitStatus.OK": [
                    160,
                    133,
                    44,
                    182,
                    123,
                    94
                ],
                "env.stderr.writelines": [
                    48
                ],
                "env.stderr": [
                    109,
                    48,
                    179,
                    87,
                    185,
                    156
                ],
                "env": [
                    97,
                    185,
                    133,
                    103,
                    76,
                    109,
                    140,
                    48,
                    81,
                    50,
                    82,
                    114,
                    144,
                    145,
                    87,
                    149,
                    179,
                    156
                ],
                "httpie_version": [
                    49
                ],
                "env.config.directory": [
                    50,
                    114
                ],
                "env.config": [
                    81,
                    50,
                    82,
                    114
                ],
                "requests_version": [
                    51
                ],
                "pygments_version": [
                    52
                ],
                "sys.version": [
                    53
                ],
                "sys": [
                    53,
                    70
                ],
                "sys.platform": [
                    53
                ],
                "type": [
                    65,
                    204
                ],
                "arg": [
                    64,
                    65,
                    66
                ],
                "bytes": [
                    65
                ],
                "arg.decode": [
                    64
                ],
                "stdin_encoding": [
                    64
                ],
                "args": [
                    130,
                    140,
                    145,
                    149,
                    189,
                    192,
                    66,
                    76,
                    82,
                    85,
                    92,
                    93,
                    98,
                    103,
                    105,
                    106,
                    108,
                    110,
                    112,
                    114,
                    116,
                    126
                ],
                "sys.argv": [
                    70
                ],
                "Environment": [
                    70
                ],
                "decode_args": [
                    76
                ],
                "env.stdin_encoding": [
                    76
                ],
                "plugin_manager.load_installed_plugins": [
                    77
                ],
                "plugin_manager": [
                    77
                ],
                "env.config.default_options": [
                    81,
                    82
                ],
                "msg": [
                    198,
                    202,
                    204,
                    85,
                    87
                ],
                "level": [
                    86,
                    87
                ],
                "kwargs.get": [
                    86
                ],
                "kwargs": [
                    86
                ],
                "env.stderr.write": [
                    185,
                    179,
                    156,
                    87
                ],
                "error": [
                    192,
                    134,
                    171,
                    204,
                    89,
                    90,
                    189
                ],
                "_error": [
                    90
                ],
                "debug": [
                    96,
                    92,
                    93
                ],
                "traceback": [
                    196,
                    177,
                    183,
                    154,
                    93
                ],
                "exit_status": [
                    128,
                    160,
                    99,
                    133,
                    170,
                    205,
                    211,
                    180,
                    186,
                    123,
                    188,
                    94,
                    191
                ],
                "print_debug_info": [
                    97
                ],
                "download": [
                    160,
                    162,
                    101,
                    168,
                    169,
                    107,
                    172,
                    173,
                    112,
                    208,
                    209,
                    126
                ],
                "parser.parse_args": [
                    103
                ],
                "parser": [
                    103
                ],
                "args.download": [
                    105
                ],
                "args.follow": [
                    106,
                    130
                ],
                "Download": [
                    107
                ],
                "args.output_file": [
                    108
                ],
                "args.download_resume": [
                    110
                ],
                "download.pre_request": [
                    112
                ],
                "args.headers": [
                    112
                ],
                "last_response": [
                    162,
                    114,
                    117,
                    119
                ],
                "get_response": [
                    114
                ],
                "args.show_redirects": [
                    116
                ],
                "responses": [
                    121,
                    117,
                    119
                ],
                "last_response.history": [
                    117
                ],
                "response": [
                    129,
                    135,
                    136,
                    141,
                    142,
                    121
                ],
                "args.check_status": [
                    126
                ],
                "get_exit_status": [
                    128
                ],
                "response.status_code": [
                    129
                ],
                "env.stdout_isatty": [
                    145,
                    133
                ],
                "response.raw.status": [
                    135
                ],
                "response.raw": [
                    136,
                    135
                ],
                "response.raw.reason": [
                    136
                ],
                "write_kwargs": [
                    152,
                    139,
                    150
                ],
                "build_output_stream": [
                    140
                ],
                "response.request": [
                    141
                ],
                "env.stdout": [
                    144
                ],
                "args.stream": [
                    145
                ],
                "env.is_windows": [
                    149
                ],
                "is_py3": [
                    149
                ],
                "args.prettify": [
                    149
                ],
                "write_with_colors_win_py3": [
                    150
                ],
                "write": [
                    152,
                    163
                ],
                "IOError": [
                    153
                ],
                "e.errno": [
                    154
                ],
                "e": [
                    198,
                    199,
                    200,
                    204,
                    182,
                    154
                ],
                "errno.EPIPE": [
                    154
                ],
                "errno": [
                    154
                ],
                "download_stream": [
                    162,
                    164
                ],
                "download_to": [
                    162,
                    165
                ],
                "download.start": [
                    162
                ],
                "download.finish": [
                    168
                ],
                "download.interrupted": [
                    169
                ],
                "ExitStatus.ERROR": [
                    186,
                    170,
                    180,
                    205
                ],
                "download.status.total_size": [
                    172
                ],
                "download.status": [
                    172,
                    173
                ],
                "download.status.downloaded": [
                    173
                ],
                "KeyboardInterrupt": [
                    176
                ],
                "SystemExit": [
                    181
                ],
                "e.code": [
                    182
                ],
                "requests.Timeout": [
                    187
                ],
                "requests": [
                    187,
                    190
                ],
                "ExitStatus.ERROR_TIMEOUT": [
                    188
                ],
                "args.timeout": [
                    189
                ],
                "requests.TooManyRedirects": [
                    190
                ],
                "ExitStatus.ERROR_TOO_MANY_REDIRECTS": [
                    191
                ],
                "args.max_redirects": [
                    192
                ],
                "Exception": [
                    193
                ],
                "str": [
                    198
                ],
                "hasattr": [
                    201,
                    199
                ],
                "request": [
                    200,
                    201,
                    203
                ],
                "e.request": [
                    200
                ],
                "request.method": [
                    203
                ],
                "request.url": [
                    203
                ],
                "__name__": [
                    204
                ],
                "download.finished": [
                    208
                ],
                "download.failed": [
                    209
                ]
            },
            "filtered_variables_in_file": {
                "http_status": [
                    40,
                    34,
                    37
                ],
                "follow": [
                    34
                ],
                "ExitStatus.ERROR_HTTP_3XX": [
                    36
                ],
                "ExitStatus": [
                    160,
                    36,
                    133,
                    39,
                    42,
                    170,
                    44,
                    205,
                    180,
                    182,
                    186,
                    123,
                    188,
                    94,
                    191
                ],
                "ExitStatus.ERROR_HTTP_4XX": [
                    39
                ],
                "ExitStatus.ERROR_HTTP_5XX": [
                    42
                ],
                "ExitStatus.OK": [
                    160,
                    133,
                    44,
                    182,
                    123,
                    94
                ],
                "env.stderr.writelines": [
                    48
                ],
                "env.stderr": [
                    109,
                    48,
                    179,
                    87,
                    185,
                    156
                ],
                "env": [
                    97,
                    185,
                    133,
                    103,
                    76,
                    109,
                    140,
                    48,
                    81,
                    50,
                    82,
                    114,
                    144,
                    145,
                    87,
                    149,
                    179,
                    156
                ],
                "httpie_version": [
                    49
                ],
                "env.config.directory": [
                    50,
                    114
                ],
                "env.config": [
                    81,
                    50,
                    82,
                    114
                ],
                "requests_version": [
                    51
                ],
                "pygments_version": [
                    52
                ],
                "sys.version": [
                    53
                ],
                "sys": [
                    53,
                    70
                ],
                "sys.platform": [
                    53
                ],
                "arg": [
                    64,
                    65,
                    66
                ],
                "arg.decode": [
                    64
                ],
                "stdin_encoding": [
                    64
                ],
                "args": [
                    130,
                    140,
                    145,
                    149,
                    189,
                    192,
                    66,
                    76,
                    82,
                    85,
                    92,
                    93,
                    98,
                    103,
                    105,
                    106,
                    108,
                    110,
                    112,
                    114,
                    116,
                    126
                ],
                "sys.argv": [
                    70
                ],
                "Environment": [
                    70
                ],
                "decode_args": [
                    76
                ],
                "env.stdin_encoding": [
                    76
                ],
                "plugin_manager.load_installed_plugins": [
                    77
                ],
                "plugin_manager": [
                    77
                ],
                "env.config.default_options": [
                    81,
                    82
                ],
                "msg": [
                    198,
                    202,
                    204,
                    85,
                    87
                ],
                "level": [
                    86,
                    87
                ],
                "kwargs.get": [
                    86
                ],
                "kwargs": [
                    86
                ],
                "env.stderr.write": [
                    185,
                    179,
                    156,
                    87
                ],
                "error": [
                    192,
                    134,
                    171,
                    204,
                    89,
                    90,
                    189
                ],
                "_error": [
                    90
                ],
                "debug": [
                    96,
                    92,
                    93
                ],
                "traceback": [
                    196,
                    177,
                    183,
                    154,
                    93
                ],
                "exit_status": [
                    128,
                    160,
                    99,
                    133,
                    170,
                    205,
                    211,
                    180,
                    186,
                    123,
                    188,
                    94,
                    191
                ],
                "print_debug_info": [
                    97
                ],
                "download": [
                    160,
                    162,
                    101,
                    168,
                    169,
                    107,
                    172,
                    173,
                    112,
                    208,
                    209,
                    126
                ],
                "parser.parse_args": [
                    103
                ],
                "parser": [
                    103
                ],
                "args.download": [
                    105
                ],
                "args.follow": [
                    106,
                    130
                ],
                "Download": [
                    107
                ],
                "args.output_file": [
                    108
                ],
                "args.download_resume": [
                    110
                ],
                "download.pre_request": [
                    112
                ],
                "args.headers": [
                    112
                ],
                "last_response": [
                    162,
                    114,
                    117,
                    119
                ],
                "get_response": [
                    114
                ],
                "args.show_redirects": [
                    116
                ],
                "responses": [
                    121,
                    117,
                    119
                ],
                "last_response.history": [
                    117
                ],
                "response": [
                    129,
                    135,
                    136,
                    141,
                    142,
                    121
                ],
                "args.check_status": [
                    126
                ],
                "get_exit_status": [
                    128
                ],
                "response.status_code": [
                    129
                ],
                "env.stdout_isatty": [
                    145,
                    133
                ],
                "response.raw.status": [
                    135
                ],
                "response.raw": [
                    136,
                    135
                ],
                "response.raw.reason": [
                    136
                ],
                "write_kwargs": [
                    152,
                    139,
                    150
                ],
                "build_output_stream": [
                    140
                ],
                "response.request": [
                    141
                ],
                "env.stdout": [
                    144
                ],
                "args.stream": [
                    145
                ],
                "env.is_windows": [
                    149
                ],
                "is_py3": [
                    149
                ],
                "args.prettify": [
                    149
                ],
                "write_with_colors_win_py3": [
                    150
                ],
                "write": [
                    152,
                    163
                ],
                "e.errno": [
                    154
                ],
                "e": [
                    198,
                    199,
                    200,
                    204,
                    182,
                    154
                ],
                "errno.EPIPE": [
                    154
                ],
                "errno": [
                    154
                ],
                "download_stream": [
                    162,
                    164
                ],
                "download_to": [
                    162,
                    165
                ],
                "download.start": [
                    162
                ],
                "download.finish": [
                    168
                ],
                "download.interrupted": [
                    169
                ],
                "ExitStatus.ERROR": [
                    186,
                    170,
                    180,
                    205
                ],
                "download.status.total_size": [
                    172
                ],
                "download.status": [
                    172,
                    173
                ],
                "download.status.downloaded": [
                    173
                ],
                "e.code": [
                    182
                ],
                "requests.Timeout": [
                    187
                ],
                "requests": [
                    187,
                    190
                ],
                "ExitStatus.ERROR_TIMEOUT": [
                    188
                ],
                "args.timeout": [
                    189
                ],
                "requests.TooManyRedirects": [
                    190
                ],
                "ExitStatus.ERROR_TOO_MANY_REDIRECTS": [
                    191
                ],
                "args.max_redirects": [
                    192
                ],
                "request": [
                    200,
                    201,
                    203
                ],
                "e.request": [
                    200
                ],
                "request.method": [
                    203
                ],
                "request.url": [
                    203
                ],
                "download.finished": [
                    208
                ],
                "download.failed": [
                    209
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/httpie_2/tests/test_redirects.py",
                "test_function": "test_max_redirects",
                "test_function_code": "    def test_max_redirects(self, httpbin):\n        r = http('--max-redirects=1', '--follow', httpbin.url + '/redirect/3',\n                 error_exit_ok=True)\n        assert r.exit_status == ExitStatus.ERROR_TOO_MANY_REDIRECTS",
                "test_error": "assert 0 == 6   +0   -6",
                "full_test_error": "Traceback (most recent call last):\n  File \"/Volumes/SSD2T/bgp_envs/repos/httpie_2/tests/test_redirects.py\", line 22, in test_max_redirects\n    assert r.exit_status == ExitStatus.ERROR_TOO_MANY_REDIRECTS\nAssertionError: assert 0 == 6\n  +0\n  -6",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": []
            }
        ]
    }
}