{
    "matplotlib": [
        {
            "bugID": 25,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 0,
                "1.4.2": 0,
                "2.1.1": 0,
                "2.1.2": 0,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 0,
                "5": 1,
                "6": 0,
                "7": 1
            },
            "start_line": 1415,
            "file_name": "lib/matplotlib/collections.py",
            "replace_code": "def __init__(self, positions, orientation=None, lineoffset=0, linelength=1, linewidth=None, color=None, linestyle='solid', antialiased=None, **kwargs):\n\n    segment = (lineoffset + linelength / 2., lineoffset - linelength / 2.)\n    if positions is None or len(positions) == 0:\n        segments = []\n    elif hasattr(positions, 'ndim') and positions.ndim > 1:\n        raise ValueError('positions cannot be an array with more than one dimension.')\n    else:\n        if orientation is None or orientation.lower() == 'horizontal':\n            self._is_horizontal = True\n            segments = [[(coord, segment[0]), (coord, segment[1])] for coord in sorted(positions)]\n        elif orientation.lower() == 'vertical':\n            self._is_horizontal = False\n            segments = [[(segment[0], coord), (segment[1], coord)] for coord in sorted(positions)]\n        else:\n            raise ValueError('Invalid orientation. Supported orientations are \"horizontal\" or \"vertical\".')\n    \n    LineCollection.__init__(self, segments, linewidths=linewidth, colors=color, antialiaseds=antialiased, linestyles=linestyle, **kwargs)\n    \n    self._linelength = linelength\n    self._lineoffset = lineoffset"
        }
    ]
}