{
    "matplotlib": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 0
            },
            "start_line": 3752,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n\n    \"\"\"\n    Drawing function for box and whisker plots.\n    \n    Make a box and whisker plot for each column of *x* or each\n    vector in sequence *x*.  The box extends from the lower to\n    upper quartile values of the data, with a line at the median.\n    The whiskers extend from the box to show the range of the\n    data.  Flier points are those past the end of the whiskers.\n    \n    Parameters\n    ----------\n    bxpstats : list of dicts\n      A list of dictionaries containing stats for each boxplot.\n      Required keys are:\n    \n      - ``med``: The median (scalar float).\n    \n      - ``q1``: The first quartile (25th percentile) (scalar\n        float).\n    \n      - ``q3``: The third quartile (75th percentile) (scalar\n        float).\n    \n      - ``whislo``: Lower bound of the lower whisker (scalar\n        float).\n    \n      - ``whishi``: Upper bound of the upper whisker (scalar\n        float).\n    \n      Optional keys are:\n    \n      - ``mean``: The mean (scalar float). Needed if\n        ``showmeans=True``.\n    \n      - ``fliers``: Data beyond the whiskers (sequence of floats).\n        Needed if ``showfliers=True``.\n    \n      - ``cilo`` & ``cihi``: Lower and upper confidence intervals\n        about the median. Needed if ``shownotches=True``.\n    \n      - ``label``: Name of the dataset (string). If available,\n        this will be used a tick label for the boxplot\n    \n    positions : array-like, default: [1, 2, ..., n]\n      Sets the positions of the boxes. The ticks and limits\n      are automatically set to match the positions.\n    \n    widths : array-like, default: None\n      Either a scalar or a vector and sets the width of each\n      box. The default is ``0.15*(distance between extreme\n      positions)``, clipped to no less than 0.15 and no more than\n      0.5.\n    \n    vert : bool, default: True\n      If `True` (default), makes the boxes vertical.  If `False`,\n      makes horizontal boxes.\n    \n    patch_artist : bool, default: False\n      ...\n    \n    ...\n    \n    Returns\n    -------\n    ...\n    \n    Examples\n    --------\n    ...\n    \"\"\"\n    # function implementation\n    pass"
        }
    ]
}