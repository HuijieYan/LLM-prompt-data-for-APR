{
    "matplotlib": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 3752,
            "file_name": "axes/_axes.py",
            "replace_code": "def bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n    # Function implementation\n\n\n    final_boxprops = dict(\n        linestyle=rcParams['boxplot.boxprops.linestyle'],\n        linewidth=rcParams['boxplot.boxprops.linewidth'],\n        edgecolor=rcParams['boxplot.boxprops.color'],\n        facecolor=('white' if rcParams['_internal.classic_mode'] else\n                   rcParams['patch.facecolor']),\n        zorder=zorder,\n    )\n    final_boxprops.update(cbook.normalize_kwargs(\n        boxprops, mpatches.PathPatch._alias_map))\n    \n    final_whiskerprops = cbook.normalize_kwargs(whiskerprops, mlines.Line2D._alias_map)\n    final_capprops = cbook.normalize_kwargs(capprops, mlines.Line2D._alias_map)\n    final_flierprops = cbook.normalize_kwargs(flierprops, mlines.Line2D._alias_map)\n    final_medianprops = cbook.normalize_kwargs(medianprops, mlines.Line2D._alias_map)\n    final_meanprops = cbook.normalize_kwargs(meanprops, mlines.Line2D._alias_map)"
        }
    ]
}