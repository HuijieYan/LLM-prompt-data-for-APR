{
    "matplotlib": [
        {
            "bugID": 21,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 3752,
            "file_name": "lib/matplotlib/axes/_axes.py",
            "replace_code": "def bxp(self, bxpstats, positions=None, widths=None, vert=True,\n        patch_artist=False, shownotches=False, showmeans=False,\n        showcaps=True, showbox=True, showfliers=True,\n        boxprops=None, whiskerprops=None, flierprops=None,\n        medianprops=None, capprops=None, meanprops=None,\n        meanline=False, manage_ticks=True, zorder=None):\n    # ... (existing code)\n\n\n    def patch_list(xs, ys, **kwargs):\n        verts, codes = to_vc(xs, ys)\n        path = mpath.Path(verts, codes)\n        patch = mpatches.PathPatch(path, **kwargs)\n        \n        # Update marker settings to override rcParams['lines.marker']\n        if 'marker' in kwargs and kwargs['marker'] is not None:\n            patch.set_marker(kwargs['marker'])\n        return [patch]\n    \n    # ... (existing code)\n    \n    if showfliers:\n        # fliers list in the form [flier_x, flier_y, flierprops]\n        flier_x = np.full(len(stats['fliers']), pos, dtype=np.float64)\n        flier_y = stats['fliers']\n    \n        # Apply marker setting for fliers\n        if 'marker' in final_flierprops and final_flierprops['marker'] is not None:\n            fliers.extend(doplot(\n                flier_x, flier_y, marker=final_flierprops['marker']))\n        else:\n            fliers.extend(doplot(\n                flier_x, flier_y, **final_flierprops))\n    \n    # ... (remaining code)\n    \n    return dict(whiskers=whiskers, caps=caps, boxes=boxes,\n                medians=medians, fliers=fliers, means=means)"
        }
    ]
}