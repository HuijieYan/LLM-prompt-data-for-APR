{
    "1.1.1": "def update(self, kwargs):\n    # docstring inherited\n    # Update bbox last, as it depends on font properties.\n    sentinel = object()  # bbox can be None, so use another sentinel.\n    bbox = kwargs.pop(\"bbox\", sentinel)\n    super().update(kwargs)\n    if bbox is not sentinel:\n        self.set_bbox(bbox)\n",
    "1.1.2": null,
    "1.2.1": "@cbook._define_aliases({'color': ['c'], 'fontfamily': ['family'], 'fontproperties': ['font', 'font_properties'], 'horizontalalignment': ['ha'], 'multialignment': ['ma'], 'fontname': ['name'], 'fontsize': ['size'], 'fontstretch': ['stretch'], 'fontstyle': ['style'], 'fontvariant': ['variant'], 'verticalalignment': ['va'], 'fontweight': ['weight']})\nclass Text(Artist)",
    "1.2.2": "Handle storing and drawing of text in window or data coordinates.",
    "1.2.3": [
        "update(self, kwargs)",
        "set_bbox(self, rectprops)"
    ],
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/matplotlib_14/lib/matplotlib/text.py",
    "1.3.2": [
        "update(self, kwargs)",
        "set_bbox(self, rectprops)"
    ],
    "1.4.1": [
        "def test_fontproperties_kwarg_precedence():\n    \"\"\"Test that kwargs take precedence over fontproperties defaults.\"\"\"\n    plt.figure()\n    text1 = plt.xlabel(\"value\", fontproperties='Times New Roman', size=40.0)\n    text2 = plt.ylabel(\"counts\", size=40.0, fontproperties='Times New Roman')\n    assert text1.get_size() == 40.0\n    assert text2.get_size() == 40.0"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/matplotlib_14/lib/matplotlib/tests/test_text.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: assert 12.0 == 40.0\nE        +  where 12.0 = <bound method Text.get_fontsize of Text(0, 0.5, 'counts')>()\nE        +    where <bound method Text.get_fontsize of Text(0, 0.5, 'counts')> = Text(0, 0.5, 'counts').get_size"
        ]
    ],
    "2.1.2": [
        [
            "def test_fontproperties_kwarg_precedence():\n        \"\"\"Test that kwargs take precedence over fontproperties defaults.\"\"\"\n        plt.figure()\n        text1 = plt.xlabel(\"value\", fontproperties='Times New Roman', size=40.0)\n        text2 = plt.ylabel(\"counts\", size=40.0, fontproperties='Times New Roman')\n        assert text1.get_size() == 40.0\n>       assert text2.get_size() == 40.0",
            "\nlib/matplotlib/tests/test_text.py:664: AssertionError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": null,
    "2.1.6": null,
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}