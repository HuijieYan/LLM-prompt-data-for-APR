{
    "keras": [
        {
            "bugID": 36,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 0,
                "2.1.4": 0,
                "2.1.5": 0,
                "2.1.6": 0,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 0,
                "6": 0,
                "7": 1
            },
            "start_line": 3391,
            "file_name": "/keras/backend/tensorflow_backend.py",
            "replace_code": "def separable_conv1d(x, depthwise_kernel, pointwise_kernel, strides,\n                     padding='valid', dilation_rate=1):\n\n    \"\"\"1D convolution with separable filters.\n    \n    # Arguments\n        x: input tensor\n        depthwise_kernel: convolution kernel for the depthwise convolution.\n        pointwise_kernel: kernel for the 1x1 convolution.\n        strides: integer. Stride length for the depthwise convolution.\n        padding: string, `\"same\"` or `\"valid\"`.\n        dilation_rate: integer dilation rate for depthwise convolution.\n    \n    # Returns\n        Output tensor.\n    \n    # Raises\n        ValueError: if `data_format` is not `'channels_last'`.\n    \"\"\"\n    spatial_start_dim = 1 if K.image_data_format() == 'channels_last' else 2\n    x = K.expand_dims(x, spatial_start_dim)\n    depthwise_kernel = K.expand_dims(depthwise_kernel, spatial_start_dim)\n    pointwise_kernel = K.expand_dims(pointwise_kernel, spatial_start_dim)\n    \n    x = K.separable_conv1d(x, depthwise_kernel, pointwise_kernel,\n                           strides=strides,\n                           padding=padding,\n                           dilation_rate=dilation_rate)\n    \n    x = K.squeeze(x, spatial_start_dim)\n    \n    if K.image_data_format() == 'channels_first' and K.image_data_format() == 'NHWC':\n        x = K.transpose(x, (0, 2, 1))  # NWC -> NCW\n    \n    return x"
        }
    ]
}