{
    "keras:25": {
        "/Volumes/SSD2T/bgp_envs/repos/keras_25/keras/applications/imagenet_utils.py": {
            "buggy_functions": [
                {
                    "function_name": "_preprocess_numpy_input",
                    "function_code": "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        if x.ndim == 3:\n            x[0, :, :] -= mean[0]\n            x[1, :, :] -= mean[1]\n            x[2, :, :] -= mean[2]\n            if std is not None:\n                x[0, :, :] /= std[0]\n                x[1, :, :] /= std[1]\n                x[2, :, :] /= std[2]\n        else:\n            x[:, 0, :, :] -= mean[0]\n            x[:, 1, :, :] -= mean[1]\n            x[:, 2, :, :] -= mean[2]\n            if std is not None:\n                x[:, 0, :, :] /= std[0]\n                x[:, 1, :, :] /= std[1]\n                x[:, 2, :, :] /= std[2]\n    else:\n        x[..., 0] -= mean[0]\n        x[..., 1] -= mean[1]\n        x[..., 2] -= mean[2]\n        if std is not None:\n            x[..., 0] /= std[0]\n            x[..., 1] /= std[1]\n            x[..., 2] /= std[2]\n    return x\n",
                    "decorators": [],
                    "docstring": "Preprocesses a Numpy array encoding a batch of images.\n\n# Arguments\n    x: Input array, 3D or 4D.\n    data_format: Data format of the image array.\n    mode: One of \"caffe\", \"tf\" or \"torch\".\n        - caffe: will convert the images from RGB to BGR,\n            then will zero-center each color channel with\n            respect to the ImageNet dataset,\n            without scaling.\n        - tf: will scale pixels between -1 and 1,\n            sample-wise.\n        - torch: will scale pixels between 0 and 1 and then\n            will normalize each channel with respect to the\n            ImageNet dataset.\n\n# Returns\n    Preprocessed Numpy array.",
                    "start_line": 21,
                    "end_line": 89,
                    "variables": {
                        "mode": [
                            41,
                            46
                        ],
                        "x": [
                            42,
                            43,
                            44,
                            47,
                            53,
                            54,
                            56,
                            59,
                            65,
                            66,
                            67,
                            68,
                            70,
                            71,
                            72,
                            74,
                            75,
                            76,
                            78,
                            79,
                            80,
                            82,
                            83,
                            84,
                            86,
                            87,
                            88,
                            89
                        ],
                        "mean": [
                            66,
                            67,
                            68,
                            74,
                            75,
                            76,
                            48,
                            82,
                            83,
                            84,
                            60
                        ],
                        "std": [
                            69,
                            70,
                            71,
                            72,
                            77,
                            78,
                            79,
                            80,
                            49,
                            85,
                            86,
                            87,
                            88,
                            61
                        ],
                        "data_format": [
                            64,
                            51
                        ],
                        "x.ndim": [
                            65,
                            53
                        ]
                    },
                    "filtered_variables": {
                        "mode": [
                            41,
                            46
                        ],
                        "x": [
                            42,
                            43,
                            44,
                            47,
                            53,
                            54,
                            56,
                            59,
                            65,
                            66,
                            67,
                            68,
                            70,
                            71,
                            72,
                            74,
                            75,
                            76,
                            78,
                            79,
                            80,
                            82,
                            83,
                            84,
                            86,
                            87,
                            88,
                            89
                        ],
                        "mean": [
                            66,
                            67,
                            68,
                            74,
                            75,
                            76,
                            48,
                            82,
                            83,
                            84,
                            60
                        ],
                        "std": [
                            69,
                            70,
                            71,
                            72,
                            77,
                            78,
                            79,
                            80,
                            49,
                            85,
                            86,
                            87,
                            88,
                            61
                        ],
                        "data_format": [
                            64,
                            51
                        ],
                        "x.ndim": [
                            65,
                            53
                        ]
                    },
                    "diff_line_number": 40,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "x": {
                                    "variable_value": "array([[[[151.82859051,  30.85277584,  24.8559075 ],\n         [ 21.79564621, 214.57899397, 111.60777857],\n         [201.72731378, 197.53422727, 138.12067834],\n         [ 67.08071471,  27.12179805, 175.5465191 ],\n         [167.49355979, 148.7971699 , 189.71305524],\n         [189.911905  ,  98.85864811, 180.94178478],\n         [238.83365674, 138.35434227,  96.29394482],\n         [176.88097261, 227.78389836, 242.82669284],\n         [128.81573252, 174.34410377,   6.28205976],\n         [233.46383961,  30.97467923, 232.65351542]],\n\n        [[ 18.88747859, 151.4578438 ,  70.50920793],\n         [ 72.66862793,  77.98794557,  24.00453463],\n         [247.53312739, 150.69124826, 203.38800351],\n         [ 70.16682304,  17.1173275 , 200.89853586],\n         [184.86840352, 178.14299998, 245.90636851],\n         [ 13.12282123, 151.38759527,   4.07218973],\n         [ 57.96407339,  85.6631014 , 133.77257681],\n         [ 36.25328951, 101.01598254,   9.50217211],\n         [ 58.75660958, 224.15636058, 148.61013086],\n         [190.19744719, 203.46761024,  35.78728854]],\n\n        [[198.30163342,  61.31954788,   4.61681033],\n         [142.23198931, 156.91224878, 184.55972498],\n         [177.23164835, 254.38346055, 103.87133063],\n         [ 74.48410128,  21.53188515,   2.64747473],\n         [ 48.76401995, 224.7490441 ,   9.09443457],\n         [181.25202506, 220.53052129, 239.75269592],\n         [187.70862363, 152.29050082,  84.97831431],\n         [ 76.81231587, 125.65608602, 129.02469051],\n         [162.95274442,  59.25017339,  41.93195882],\n         [250.94658908,  59.30371723,  55.82570764]],\n\n        [[ 69.40150178, 190.32504158, 136.84356916],\n         [236.02331592, 206.7569111 ,  54.5423725 ],\n         [192.73870099,  38.27675423, 187.31155739],\n         [183.47369369,  78.2777425 ,  87.02558149],\n         [213.85453553, 128.89256599,  92.2191304 ],\n         [ 41.31778902, 105.41844059, 171.24798082],\n         [172.31096601,  96.81091374, 248.30011316],\n         [182.08008689, 129.20761421, 211.72596052],\n         [ 36.55246281,  80.89594853, 103.59764708],\n         [203.48526027, 105.91294442,   8.53273913]],\n\n        [[ 89.89261713,  66.23923522, 131.96590431],\n         [ 56.21761366, 245.49220405, 231.01023817],\n         [167.23590094, 131.44898563, 220.67740722],\n         [229.31806345, 135.76239822, 234.7131711 ],\n         [129.80367392,  92.43124652,  39.8383469 ],\n         [124.23545931,  52.42238465,  77.95468365],\n         [210.05031844, 103.10052852,  23.89586222],\n         [167.65188106, 124.80747815, 104.27260322],\n         [ 33.02280253,  77.39640872, 238.75583445],\n         [238.63232246, 145.95013954, 113.71671659]],\n\n        [[ 37.11637241,  92.00007877,  95.53562258],\n         [170.82513891, 167.58445164,  15.23958087],\n         [195.87533581, 205.85146183, 247.4894469 ],\n         [ 53.22831999,  88.8821067 , 116.44678532],\n         [153.98349572,  60.0047021 ,  14.37114928],\n         [205.1677403 ,  56.74789563,  68.24419977],\n         [ 70.59456968, 156.21272137, 138.02192676],\n         [ 25.578026  ,  80.79698343,  75.25051256],\n         [218.9155986 ,   2.81376556,  94.16879069],\n         [183.80145147, 191.63960497, 204.60231111]],\n\n        [[217.91408118,  33.36504091, 122.75633653],\n         [ 32.77806602, 206.05857554,  25.63636425],\n         [ 42.94187138, 164.32517073, 119.98749525],\n         [131.96406309,  63.53323682, 107.5894152 ],\n         [ 27.27308736, 241.3412377 , 131.52525941],\n         [226.07819364, 145.9316554 , 201.67655236],\n         [  5.81485886, 171.21128267,  86.28509712],\n         [126.07289834, 168.3172259 , 242.35407434],\n         [ 30.67474761, 164.67469542, 110.47051553],\n         [210.68754545, 130.26456658, 196.94484092]],\n\n        [[ 27.43585409, 189.98453695,  26.14801519],\n         [252.76484832, 190.21911146, 207.44154182],\n         [141.29098013,  31.85252659, 138.99329978],\n         [164.43362385, 194.95755824,  82.14746787],\n         [ 87.36101489,  95.03570043,  35.04228973],\n         [ 90.35102238, 206.64078611, 211.08864218],\n         [213.80580379, 214.92290206,   6.89477077],\n         [  8.29923653,  32.78074912, 174.88938852],\n         [178.73019431,  52.11960626, 114.4514695 ],\n         [140.6736684 , 141.08273911, 214.09801758]],\n\n        [[174.13190096, 111.64267544, 150.66266804],\n         [ 13.42644984, 147.4499869 , 120.84553257],\n         [236.08587089, 207.06981771, 172.33213432],\n         [ 65.78930447,  45.14359669, 122.96382511],\n         [106.14072564, 224.3409258 , 141.99659617],\n         [ 35.88654151, 254.98597332,  65.19938007],\n         [ 83.27329783,  44.53288948, 212.35468307],\n         [159.78824944, 155.32783902, 111.62770498],\n         [ 49.90932984, 157.16009006, 111.72971955],\n         [184.11317614, 238.96795653,  78.05011276]],\n\n        [[ 85.38420313,  44.31381827, 190.8591503 ],\n         [ 91.2922645 , 143.86849682, 231.0746986 ],\n         [ 46.86367177, 225.15789692,  24.90811933],\n         [200.25888765, 199.75243242, 164.25989428],\n         [ 91.73583111,  95.01503681, 136.26616294],\n         [164.21624915,   6.49014717, 153.6230911 ],\n         [156.77098673, 193.46969976, 197.55409745],\n         [ 57.55269075,  64.07943378,  90.38161709],\n         [ 87.70519639, 253.26105398,  28.63786332],\n         [126.42807915, 161.5226596 ,  92.26519662]]],\n\n\n       [[[121.39523327, 131.75570149,  35.3472682 ],\n         [ 96.33113217, 225.36345396,  42.08632906],\n         [131.07220369,  58.56369705, 212.36745567],\n         [ 92.52973236,  47.3425782 , 183.45842635],\n         [ 43.97733434, 153.08569417, 215.83265106],\n         [218.91421561, 194.11990028,  21.79230438],\n         [  7.74401568, 244.79197362, 135.71330118],\n         [ 40.44536342,  49.7018816 ,  55.96210806],\n         [ 81.7093615 ,  23.82486796,  35.38517745],\n         [ 82.55186991, 115.92047396,  50.52129176]],\n\n        [[206.86036211, 166.49545194,  49.74901589],\n         [205.24135195,  66.64687148, 157.00479207],\n         [157.34402902, 220.14068347, 150.55851651],\n         [240.53791025, 159.30527418, 133.74417709],\n         [ 83.76636532,  20.86437904, 187.87109955],\n         [223.29832716, 210.40628777, 248.52563166],\n         [ 57.16308587,  54.74440682,   8.46057665],\n         [ 21.47111231, 162.59639307, 178.31979515],\n         [ 33.15498341, 241.12688351,  40.61576952],\n         [114.19606576, 152.6416291 , 144.67256497]],\n\n        [[ 86.08750673, 165.62968088, 169.03582494],\n         [ 94.3638045 , 116.98076557, 245.99823839],\n         [105.66360134, 111.34001603,  81.2728369 ],\n         [244.1621478 ,  81.21054447,  86.61544773],\n         [  8.22755621, 237.23830521, 153.21372036],\n         [163.58692018,  26.80010192, 225.47859064],\n         [135.8515206 ,  42.4011764 , 130.12833993],\n         [220.22613357,  54.79715189, 156.41287472],\n         [ 46.54616411, 194.70155074,  42.56370619],\n         [ 42.3630805 ,  84.51414676, 104.49905588]],\n\n        [[211.07138527,  22.75908639, 169.52114267],\n         [ 86.77126721, 184.97084066, 175.66810123],\n         [ 81.13794643, 236.54687073, 219.01729654],\n         [231.20124459, 184.55286507, 170.77628701],\n         [ 42.90762958, 181.72137735,  57.5491255 ],\n         [124.67854066, 151.17865683, 139.80068505],\n         [  7.29011248, 100.72217948, 248.76069849],\n         [127.91135257,  85.63083953,   8.74119248],\n         [ 52.85113143, 171.74810568, 101.5741647 ],\n         [139.23356247,   4.79545667,  80.37400806]],\n\n        [[249.1594285 , 209.12590984,  17.51911669],\n         [209.966388  ,  74.58000598, 200.04311557],\n         [ 79.63293476,  66.46305804,  62.77148946],\n         [ 99.01378325, 247.98254159, 216.27627079],\n         [224.2822572 , 118.17456881, 156.71098791],\n         [ 79.6018501 , 231.71935341, 137.79303347],\n         [ 66.8319396 , 233.38711928,  36.33261285],\n         [ 91.3167412 , 250.09817765, 202.77491135],\n         [107.06939859, 250.24339361, 207.15907023],\n         [128.57322426,  89.83645103,   2.37542016]],\n\n        [[  2.22488311, 195.58754429,  30.31894753],\n         [121.48109872,  48.97291181,   2.44526707],\n         [133.92125677, 135.35196038, 214.21664749],\n         [ 35.62247731,  39.8575211 ,  49.86370621],\n         [171.4974529 , 161.32629458, 245.87843759],\n         [188.13205327,  62.7202777 , 204.80745915],\n         [179.2163989 ,  79.82772126,  89.57863889],\n         [245.432981  ,  89.84049762, 186.24421942],\n         [148.97972309, 176.421766  , 195.63004145],\n         [165.17176049,  62.09516825, 180.82159792]],\n\n        [[126.04742972, 223.35935073,  44.75567256],\n         [216.38715831, 180.52489585,  32.08775161],\n         [  5.20705318, 222.07585725, 225.02686978],\n         [ 89.80524137,  49.66678559, 149.15090188],\n         [207.25714799,   3.09887991,  98.84104804],\n         [251.57605743,  31.82068762, 186.36501202],\n         [245.89459901,  58.94496328, 246.89420089],\n         [203.39003322, 155.12307756, 203.1672631 ],\n         [ 76.40031436, 226.82315393,  66.38686112],\n         [ 64.73822071, 115.09491097, 116.66581016]],\n\n        [[134.01806724,  60.00349644, 119.80776595],\n         [143.01465682, 179.08686907, 181.48934263],\n         [165.19988689, 126.62791661, 205.52562133],\n         [254.62884639, 251.91364913, 253.39478371],\n         [138.38373226, 128.41373642, 247.52750077],\n         [151.62191733,  74.5966432 ,  35.09132728],\n         [130.18529535, 204.53771306, 148.16787754],\n         [182.61115226,  55.39430794, 198.36965965],\n         [216.35721628, 199.139261  , 141.07569312],\n         [121.42224816,  75.13417983, 237.25125256]],\n\n        [[106.47909503, 226.32435083,  43.05246622],\n         [161.18573741, 131.43810407, 176.56171548],\n         [  8.67700904,  80.43788942, 214.72473706],\n         [228.82386912, 147.05488883, 196.30006322],\n         [ 36.70829088,  19.37186946,   2.75155746],\n         [146.90544397, 206.35396994,  71.09213187],\n         [ 93.17623521, 113.98436153,  18.12071803],\n         [155.19140963, 191.66673046,  55.84196316],\n         [  1.16201563,   5.61312813, 254.83854193],\n         [147.14361151, 228.97265536,  88.43336911]],\n\n        [[246.7622965 , 168.79958717,  23.21041659],\n         [249.57543073, 136.16121656, 235.74820847],\n         [ 71.22397281, 125.80920788, 142.36107439],\n         [134.16477809, 186.05709285,  78.76347854],\n         [112.90579915, 204.83884728, 214.44611501],\n         [118.18031046, 209.79290906,  71.7014044 ],\n         [ 27.65421984, 247.26587201, 209.0307767 ],\n         [153.269289  , 220.14058272, 112.07255791],\n         [ 28.92541633,  74.4489285 ,  69.80435583],\n         [ 66.70585125,  52.24796007, 150.09445938]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "x": {
                                    "variable_value": "array([[[[-7.90830925e+01, -8.59262242e+01,  2.81485905e+01],\n         [ 7.66877857e+00,  9.77999940e+01, -1.01884354e+02],\n         [ 3.41816783e+01,  8.07552273e+01,  7.80473138e+01],\n         [ 7.16075191e+01, -8.96572019e+01, -5.65992853e+01],\n         [ 8.57740552e+01,  3.20181699e+01,  4.38135598e+01],\n         [ 7.70027848e+01, -1.79203519e+01,  6.62319050e+01],\n         [-7.64505518e+00,  2.15753423e+01,  1.15153657e+02],\n         [ 1.38887693e+02,  1.11004898e+02,  5.32009726e+01],\n         [-9.76569402e+01,  5.75651038e+01,  5.13573252e+00],\n         [ 1.28714515e+02, -8.58043208e+01,  1.09783840e+02]],\n\n        [[-3.34297921e+01,  3.46788438e+01, -1.04792521e+02],\n         [-7.99344654e+01, -3.87910544e+01, -5.10113721e+01],\n         [ 9.94490035e+01,  3.39122483e+01,  1.23853127e+02],\n         [ 9.69595359e+01, -9.96616725e+01, -5.35131770e+01],\n         [ 1.41967369e+02,  6.13640000e+01,  6.11884035e+01],\n         [-9.98668103e+01,  3.46085953e+01, -1.10557179e+02],\n         [ 2.98335768e+01, -3.11158986e+01, -6.57159266e+01],\n         [-9.44368279e+01, -1.57630175e+01, -8.74267105e+01],\n         [ 4.46711309e+01,  1.07377361e+02, -6.49233904e+01],\n         [-6.81517115e+01,  8.66886102e+01,  6.65174472e+01]],\n\n        [[-9.93221897e+01, -5.54594521e+01,  7.46216334e+01],\n         [ 8.06207250e+01,  4.01332488e+01,  1.85519893e+01],\n         [-6.76693682e-02,  1.37604461e+02,  5.35516483e+01],\n         [-1.01291525e+02, -9.52471148e+01, -4.91958987e+01],\n         [-9.48445654e+01,  1.07970044e+02, -7.49159801e+01],\n         [ 1.35813696e+02,  1.03751521e+02,  5.75720251e+01],\n         [-1.89606857e+01,  3.55115008e+01,  6.40286236e+01],\n         [ 2.50856905e+01,  8.87708602e+00, -4.68676841e+01],\n         [-6.20070412e+01, -5.75288266e+01,  3.92727444e+01],\n         [-4.81132924e+01, -5.74752828e+01,  1.27266589e+02]],\n\n        [[ 3.29045692e+01,  7.35460416e+01, -5.42784982e+01],\n         [-4.93966275e+01,  8.99779111e+01,  1.12343316e+02],\n         [ 8.33725574e+01, -7.85022458e+01,  6.90587010e+01],\n         [-1.69134185e+01, -3.85012575e+01,  5.97936937e+01],\n         [-1.17198696e+01,  1.21135660e+01,  9.01745355e+01],\n         [ 6.73089808e+01, -1.13605594e+01, -8.23622110e+01],\n         [ 1.44361113e+02, -1.99680863e+01,  4.86309660e+01],\n         [ 1.07786961e+02,  1.24286142e+01,  5.84000869e+01],\n         [-3.41352917e-01, -3.58830515e+01, -8.71275372e+01],\n         [-9.54062609e+01, -1.08660556e+01,  7.98052603e+01]],\n\n        [[ 2.80269043e+01, -5.05397648e+01, -3.37873829e+01],\n         [ 1.27071238e+02,  1.28713204e+02, -6.74623863e+01],\n         [ 1.16738407e+02,  1.46699856e+01,  4.35559009e+01],\n         [ 1.30774171e+02,  1.89833982e+01,  1.05638063e+02],\n         [-6.41006531e+01, -2.43477535e+01,  6.12367392e+00],\n         [-2.59843164e+01, -6.43566154e+01,  5.55459310e-01],\n         [-8.00431378e+01, -1.36784715e+01,  8.63703184e+01],\n         [ 3.33603219e-01,  8.02847815e+00,  4.39718811e+01],\n         [ 1.34816834e+02, -3.93825913e+01, -9.06571975e+01],\n         [ 9.77771659e+00,  2.91711395e+01,  1.14952322e+02]],\n\n        [[-8.40337742e+00, -2.47789212e+01, -8.65636276e+01],\n         [-8.86994191e+01,  5.08054516e+01,  4.71451389e+01],\n         [ 1.43550447e+02,  8.90724618e+01,  7.21953358e+01],\n         [ 1.25077853e+01, -2.78968933e+01, -7.04516800e+01],\n         [-8.95678507e+01, -5.67742979e+01,  3.03034957e+01],\n         [-3.56948002e+01, -6.00311044e+01,  8.14877403e+01],\n         [ 3.40829268e+01,  3.94337214e+01, -5.30854303e+01],\n         [-2.86884874e+01, -3.59820166e+01, -9.81019740e+01],\n         [-9.77020931e+00, -1.13965234e+02,  9.52355986e+01],\n         [ 1.00663311e+02,  7.48606050e+01,  6.01214515e+01]],\n\n        [[ 1.88173365e+01, -8.34139591e+01,  9.42340812e+01],\n         [-7.83026357e+01,  8.92795755e+01, -9.09019340e+01],\n         [ 1.60484953e+01,  4.75461707e+01, -8.07381286e+01],\n         [ 3.65041520e+00, -5.32457632e+01,  8.28406309e+00],\n         [ 2.75862594e+01,  1.24562238e+02, -9.64069126e+01],\n         [ 9.77375524e+01,  2.91526554e+01,  1.02398194e+02],\n         [-1.76539029e+01,  5.44322827e+01, -1.17865141e+02],\n         [ 1.38415074e+02,  5.15382259e+01,  2.39289834e+00],\n         [ 6.53151553e+00,  4.78956954e+01, -9.30052524e+01],\n         [ 9.30058409e+01,  1.34855666e+01,  8.70075455e+01]],\n\n        [[-7.77909848e+01,  7.32055369e+01, -9.62441459e+01],\n         [ 1.03502542e+02,  7.34401115e+01,  1.29084848e+02],\n         [ 3.50542998e+01, -8.49264734e+01,  1.76109801e+01],\n         [-2.17915321e+01,  7.81785582e+01,  4.07536238e+01],\n         [-6.88967103e+01, -2.17432996e+01, -3.63189851e+01],\n         [ 1.07149642e+02,  8.98617861e+01, -3.33289776e+01],\n         [-9.70442292e+01,  9.81439021e+01,  9.01258038e+01],\n         [ 7.09503885e+01, -8.39982509e+01, -1.15380763e+02],\n         [ 1.05124695e+01, -6.46593937e+01,  5.50501943e+01],\n         [ 1.10159018e+02,  2.43037391e+01,  1.69936684e+01]],\n\n        [[ 4.67236680e+01, -5.13632456e+00,  5.04519010e+01],\n         [ 1.69065326e+01,  3.06709869e+01, -1.10253550e+02],\n         [ 6.83931343e+01,  9.02908177e+01,  1.12405871e+02],\n         [ 1.90248251e+01, -7.16354033e+01, -5.78906955e+01],\n         [ 3.80575962e+01,  1.07561926e+02, -1.75392744e+01],\n         [-3.87396199e+01,  1.38206973e+02, -8.77934585e+01],\n         [ 1.08415683e+02, -7.22461105e+01, -4.04067022e+01],\n         [ 7.68870498e+00,  3.85488390e+01,  3.61082494e+01],\n         [ 7.79071955e+00,  4.03810901e+01, -7.37706702e+01],\n         [-2.58888872e+01,  1.22188957e+02,  6.04331761e+01]],\n\n        [[ 8.69201503e+01, -7.24651817e+01, -3.82957969e+01],\n         [ 1.27135699e+02,  2.70894968e+01, -3.23877355e+01],\n         [-7.90308807e+01,  1.08378897e+02, -7.68163282e+01],\n         [ 6.03208943e+01,  8.29734324e+01,  7.65788876e+01],\n         [ 3.23271629e+01, -2.17639632e+01, -3.19441689e+01],\n         [ 4.96840911e+01, -1.10288853e+02,  4.05362491e+01],\n         [ 9.36150974e+01,  7.66906998e+01,  3.30909867e+01],\n         [-1.35573829e+01, -5.26995662e+01, -6.61273092e+01],\n         [-7.53011367e+01,  1.36482054e+02, -3.59748036e+01],\n         [-1.16738034e+01,  4.47436596e+01,  2.74807915e+00]]],\n\n\n       [[[-6.85917318e+01,  1.49767015e+01, -2.28476673e+00],\n         [-6.18526709e+01,  1.08584454e+02, -2.73488678e+01],\n         [ 1.08428456e+02, -5.82153030e+01,  7.39220369e+00],\n         [ 7.95194263e+01, -6.94364218e+01, -3.11502676e+01],\n         [ 1.11893651e+02,  3.63066942e+01, -7.97026657e+01],\n         [-8.21466956e+01,  7.73409003e+01,  9.52342156e+01],\n         [ 3.17743012e+01,  1.28012974e+02, -1.15935984e+02],\n         [-4.79768919e+01, -6.70771184e+01, -8.32346366e+01],\n         [-6.85538226e+01, -9.29541320e+01, -4.19706385e+01],\n         [-5.34177082e+01, -8.58526041e-01, -4.11281301e+01]],\n\n        [[-5.41899841e+01,  4.97164519e+01,  8.31803621e+01],\n         [ 5.30657921e+01, -5.01321285e+01,  8.15613520e+01],\n         [ 4.66195165e+01,  1.03361683e+02,  3.36640290e+01],\n         [ 2.98051771e+01,  4.25262742e+01,  1.16857910e+02],\n         [ 8.39320995e+01, -9.59146210e+01, -3.99136347e+01],\n         [ 1.44586632e+02,  9.36272878e+01,  9.96183272e+01],\n         [-9.54784234e+01, -6.20345932e+01, -6.65169141e+01],\n         [ 7.43807952e+01,  4.58173931e+01, -1.02208888e+02],\n         [-6.33232305e+01,  1.24347884e+02, -9.05250166e+01],\n         [ 4.07335650e+01,  3.58626291e+01, -9.48393424e+00]],\n\n        [[ 6.50968249e+01,  4.88506809e+01, -3.75924933e+01],\n         [ 1.42059238e+02,  2.01765569e-01, -2.93161955e+01],\n         [-2.26661631e+01, -5.43898397e+00, -1.80163987e+01],\n         [-1.73235523e+01, -3.55684555e+01,  1.20482148e+02],\n         [ 4.92747204e+01,  1.20459305e+02, -1.15452444e+02],\n         [ 1.21539591e+02, -8.99788981e+01,  3.99069202e+01],\n         [ 2.61893399e+01, -7.43778236e+01,  1.21715206e+01],\n         [ 5.24738747e+01, -6.19818481e+01,  9.65461336e+01],\n         [-6.13752938e+01,  7.79225507e+01, -7.71338359e+01],\n         [ 5.60055883e-01, -3.22648532e+01, -8.13169195e+01]],\n\n        [[ 6.55821427e+01, -9.40199136e+01,  8.73913853e+01],\n         [ 7.17291012e+01,  6.81918407e+01, -3.69087328e+01],\n         [ 1.15078297e+02,  1.19767871e+02, -4.25420536e+01],\n         [ 6.68372870e+01,  6.77738651e+01,  1.07521245e+02],\n         [-4.63898745e+01,  6.49423774e+01, -8.07723704e+01],\n         [ 3.58616850e+01,  3.43996568e+01,  9.98540659e-01],\n         [ 1.44821698e+02, -1.60568205e+01, -1.16389888e+02],\n         [-9.51978075e+01, -3.11481605e+01,  4.23135257e+00],\n         [-2.36483530e+00,  5.49691057e+01, -7.08288686e+01],\n         [-2.35649919e+01, -1.11983543e+02,  1.55535625e+01]],\n\n        [[-8.64198833e+01,  9.23469098e+01,  1.25479428e+02],\n         [ 9.61041156e+01, -4.21989940e+01,  8.62863880e+01],\n         [-4.11675105e+01, -5.03159420e+01, -4.40470652e+01],\n         [ 1.12337271e+02,  1.31203542e+02, -2.46662168e+01],\n         [ 5.27719879e+01,  1.39556881e+00,  1.00602257e+02],\n         [ 3.38540335e+01,  1.14940353e+02, -4.40781499e+01],\n         [-6.76063872e+01,  1.16608119e+02, -5.68480604e+01],\n         [ 9.88359113e+01,  1.33319178e+02, -3.23632588e+01],\n         [ 1.03220070e+02,  1.33464394e+02, -1.66106014e+01],\n         [-1.01563580e+02, -2.69425490e+01,  4.89322426e+00]],\n\n        [[-7.36200525e+01,  7.88085443e+01, -1.21455117e+02],\n         [-1.01493733e+02, -6.78060882e+01, -2.19890128e+00],\n         [ 1.10277647e+02,  1.85729604e+01,  1.02412568e+01],\n         [-5.40752938e+01, -7.69214789e+01, -8.80575227e+01],\n         [ 1.41939438e+02,  4.45472946e+01,  4.78174529e+01],\n         [ 1.00868459e+02, -5.40587223e+01,  6.44520533e+01],\n         [-1.43603611e+01, -3.69512787e+01,  5.55363989e+01],\n         [ 8.23052194e+01, -2.69385024e+01,  1.21752981e+02],\n         [ 9.16910415e+01,  5.96427660e+01,  2.52997231e+01],\n         [ 7.68825979e+01, -5.46838318e+01,  4.14917605e+01]],\n\n        [[-5.91833274e+01,  1.06580351e+02,  2.36742972e+00],\n         [-7.18512484e+01,  6.37458959e+01,  9.27071583e+01],\n         [ 1.21087870e+02,  1.05296857e+02, -1.18472947e+02],\n         [ 4.52119019e+01, -6.71122144e+01, -3.38747586e+01],\n         [-5.09795196e+00, -1.13680120e+02,  8.35771480e+01],\n         [ 8.24260120e+01, -8.49583124e+01,  1.27896057e+02],\n         [ 1.42955201e+02, -5.78340367e+01,  1.22214599e+02],\n         [ 9.92282631e+01,  3.83440776e+01,  7.97100332e+01],\n         [-3.75521389e+01,  1.10044154e+02, -4.72796856e+01],\n         [ 1.27268102e+01, -1.68408903e+00, -5.89417793e+01]],\n\n        [[ 1.58687659e+01, -5.67755036e+01,  1.03380672e+01],\n         [ 7.75503426e+01,  6.23078691e+01,  1.93346568e+01],\n         [ 1.01586621e+02,  9.84891661e+00,  4.15198869e+01],\n         [ 1.49455784e+02,  1.35134649e+02,  1.30948846e+02],\n         [ 1.43588501e+02,  1.16347364e+01,  1.47037323e+01],\n         [-6.88476727e+01, -4.21823568e+01,  2.79419173e+01],\n         [ 4.42288775e+01,  8.77587131e+01,  6.50529535e+00],\n         [ 9.44306596e+01, -6.13846921e+01,  5.89311523e+01],\n         [ 3.71366931e+01,  8.23602610e+01,  9.26772163e+01],\n         [ 1.33312253e+02, -4.16448202e+01, -2.25775184e+00]],\n\n        [[-6.08865338e+01,  1.09545351e+02, -1.72009050e+01],\n         [ 7.26227155e+01,  1.46591041e+01,  3.75057374e+01],\n         [ 1.10785737e+02, -3.63411106e+01, -1.15002991e+02],\n         [ 9.23610632e+01,  3.02758888e+01,  1.05143869e+02],\n         [-1.01187443e+02, -9.74071305e+01, -8.69717091e+01],\n         [-3.28468681e+01,  8.95749699e+01,  2.32254440e+01],\n         [-8.58182820e+01, -2.79463847e+00, -3.05037648e+01],\n         [-4.80970368e+01,  7.48877305e+01,  3.15114096e+01],\n         [ 1.50899542e+02, -1.11165872e+02, -1.22517984e+02],\n         [-1.55056309e+01,  1.12193655e+02,  2.34636115e+01]],\n\n        [[-8.07285834e+01,  5.20205872e+01,  1.23082297e+02],\n         [ 1.31809208e+02,  1.93822166e+01,  1.25895431e+02],\n         [ 3.84220744e+01,  9.03020788e+00, -5.24560272e+01],\n         [-2.51755215e+01,  6.92780928e+01,  1.04847781e+01],\n         [ 1.10507115e+02,  8.80598473e+01, -1.07742008e+01],\n         [-3.22375956e+01,  9.30139091e+01, -5.49968954e+00],\n         [ 1.05091777e+02,  1.30486872e+02, -9.60257802e+01],\n         [ 8.13355791e+00,  1.03361583e+02,  2.95892890e+01],\n         [-3.41346442e+01, -4.23300715e+01, -9.47545837e+01],\n         [ 4.61554594e+01, -6.45310399e+01, -5.69741488e+01]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[3.44349692e+01, 3.46982238e+01, 2.12692250e+02],\n         [2.21018232e+02, 7.63792988e+01, 1.77184895e+02],\n         [7.98143041e-01, 2.04865044e+02, 1.14770148e+02],\n         [3.29559285e+01, 1.22787905e+02, 2.41136296e+02],\n         [2.40885792e+02, 1.77005241e+02, 1.66953608e+01],\n         [7.15857781e+01, 1.95640752e+01, 1.45315052e+02],\n         [1.17657271e+02, 8.00110748e+01, 1.96535957e+02],\n         [6.29354146e+01, 2.92216820e+01, 3.78278242e+01],\n         [2.20425679e+02, 2.03609676e+02, 6.78045988e+01],\n         [2.42700870e+01, 2.23647307e+01, 1.56004789e+02]],\n\n        [[2.35466442e+01, 3.89939969e+01, 1.09661630e+02],\n         [1.50797970e+02, 2.48134330e+02, 1.71659488e+02],\n         [2.48116341e+02, 1.28345406e+02, 1.13624650e+02],\n         [3.52133083e+01, 2.29900767e+02, 1.86784624e+02],\n         [7.01932206e+01, 1.21271766e+02, 1.96652742e+01],\n         [3.05868715e+01, 6.58031456e+01, 2.04999634e+02],\n         [2.48327515e+02, 1.14374253e+02, 9.16615301e+01],\n         [2.16058148e+02, 2.96276484e+01, 3.39765437e+01],\n         [2.52456851e+02, 7.42976442e+01, 2.21906701e+02],\n         [7.20923168e+01, 8.11133361e+01, 2.02830163e+02]],\n\n        [[4.50404065e+01, 9.30644593e+01, 1.20004103e+02],\n         [3.26657296e+01, 2.53616369e+02, 3.49136813e+01],\n         [2.47312968e+02, 3.64891230e+01, 2.26605428e+02],\n         [1.17904721e+02, 1.35403261e+02, 2.05176621e+02],\n         [1.23628261e+02, 1.43881664e+02, 1.21331584e+02],\n         [1.10687196e+01, 4.00112922e+01, 6.86663262e+01],\n         [2.15156295e+02, 1.32199811e+02, 1.49672729e+02],\n         [2.02497504e+02, 1.59686997e+02, 2.08925828e+02],\n         [6.93527658e+01, 2.20313969e+02, 2.28711831e+02],\n         [9.96513645e+01, 5.98000170e+01, 1.72719379e+02]],\n\n        [[1.58899768e+02, 1.66348021e+02, 1.26230232e+02],\n         [3.06795128e+01, 2.45112096e+02, 2.12623104e+02],\n         [1.65052032e+02, 3.61873892e+01, 1.21722993e+02],\n         [1.01038354e+02, 1.21291067e+02, 1.80925554e+02],\n         [1.13898358e+01, 2.91243731e+01, 1.23177030e+02],\n         [6.74093201e+01, 1.44651734e+02, 2.18638567e+02],\n         [1.66533327e+02, 1.59131217e+02, 2.20244721e+02],\n         [2.58643210e+01, 1.34748197e+02, 8.34858520e+01],\n         [2.43035523e+02, 7.30936168e+00, 2.36366288e+02],\n         [1.72880242e+02, 7.75423822e+01, 9.31218552e+01]],\n\n        [[2.03352412e+02, 1.92267111e+02, 1.36203542e+02],\n         [1.32410492e+02, 1.73795150e+02, 4.91939024e+01],\n         [2.05174562e+02, 1.43762030e+02, 5.37697241e+01],\n         [1.02902979e+00, 5.04903837e+01, 1.42589036e+02],\n         [4.72122134e+01, 9.05486758e+01, 6.37563081e+01],\n         [8.52334984e+00, 1.49176462e+02, 1.74859159e+02],\n         [2.33682893e+02, 2.52751569e+02, 4.96088785e+01],\n         [1.10819406e+02, 2.45482704e+02, 2.32912435e+02],\n         [1.13203649e+02, 5.46627486e+01, 2.03743025e+02],\n         [7.66823294e+01, 1.12940124e+02, 8.85568159e+01]],\n\n        [[8.21187717e+01, 1.24033325e+02, 6.41961657e+00],\n         [1.72519147e+02, 7.96811163e+01, 9.27017386e+01],\n         [1.45029943e+02, 1.33831848e+01, 1.55851354e+01],\n         [2.51828685e+02, 8.47525392e+01, 1.37715057e+02],\n         [7.63865430e+01, 6.11526210e+01, 4.31782642e+01],\n         [1.49664177e+02, 5.81577124e+01, 2.50994024e+02],\n         [2.50301816e+02, 2.38937500e+02, 8.68150911e+01],\n         [9.90382585e+01, 1.03171898e+02, 1.09577475e+01],\n         [2.44784958e+02, 1.43448474e+02, 1.35869964e+02],\n         [2.09327306e+02, 5.38323911e+01, 1.05824474e+02]],\n\n        [[1.24445271e+02, 1.80327802e+02, 2.13442096e+02],\n         [1.67605482e+02, 1.55440951e+02, 1.41500264e+02],\n         [2.16615245e+02, 1.07655987e+02, 3.65760543e+01],\n         [3.65953196e+01, 3.61247180e+01, 3.88384293e+01],\n         [1.32271318e+02, 1.14678179e+01, 1.22773703e+02],\n         [1.59711020e+02, 4.27580299e+01, 7.86325407e+01],\n         [1.72936423e+02, 2.25709221e+02, 3.39907602e+01],\n         [2.16865863e+02, 6.36076998e+01, 2.25904749e+02],\n         [2.31684774e+02, 8.96254247e+01, 9.20761443e+01],\n         [3.27749944e+01, 7.43301923e+01, 2.06710126e+02]],\n\n        [[1.34822665e+02, 1.88016088e+02, 2.36963866e+02],\n         [2.44485658e+02, 1.12618983e+02, 2.50515320e+02],\n         [9.42515349e+01, 5.98430209e+01, 1.43346158e+02],\n         [1.43155349e+02, 2.88074764e+01, 7.73374104e+00],\n         [1.70716771e+02, 8.52157905e-02, 1.95527413e+02],\n         [1.66940009e+02, 2.08628214e+02, 1.62727309e+02],\n         [1.41741835e+02, 5.01253107e+01, 8.19904658e+01],\n         [1.29133380e+02, 5.07157114e+01, 2.03838770e+02],\n         [9.11304406e+01, 1.00462351e+02, 2.46413712e+02],\n         [2.05395821e+01, 1.75709967e+02, 2.34003188e+02]],\n\n        [[1.95374979e+02, 2.16523266e+01, 2.91430993e+01],\n         [1.85674263e+02, 1.74713835e+02, 1.69380896e+02],\n         [1.14666774e+02, 2.41892305e+02, 2.26664150e+02],\n         [1.57395676e+02, 4.21353408e+01, 1.33983787e+02],\n         [3.88621463e+01, 1.24371581e+02, 8.28708737e+01],\n         [1.23478976e+02, 1.79835274e+02, 2.38713074e+02],\n         [4.00931802e+01, 2.22714323e+02, 7.60062079e+00],\n         [4.29549196e+01, 8.53672907e+01, 2.26522235e+02],\n         [2.48900103e+02, 7.95447968e+01, 1.98766788e+02],\n         [1.71189265e+02, 1.18583538e+02, 1.09773552e+02]],\n\n        [[4.23737680e+01, 5.92193851e+01, 2.45940244e+02],\n         [1.36992872e+02, 1.23001344e+02, 1.12076436e+02],\n         [8.16157518e+01, 4.32115296e+00, 9.86394235e+01],\n         [7.33259967e+01, 2.04635033e+02, 2.27569380e+02],\n         [5.04032837e+01, 3.11332489e+01, 8.06676861e+01],\n         [2.54785699e+02, 6.78146253e+01, 4.33069019e+01],\n         [1.74621434e+02, 1.05073107e+02, 1.22740725e+01],\n         [1.91988007e+02, 3.90711654e+01, 4.50388170e+01],\n         [1.37261083e+01, 5.54517223e+01, 7.29032761e+01],\n         [2.15669805e+02, 2.38953240e+02, 1.79560722e+02]]],\n\n\n       [[[2.11465819e+01, 3.60732396e+00, 1.49692766e+02],\n         [2.42330377e+02, 6.36293198e+01, 1.25550877e+02],\n         [1.81082766e+02, 4.25213874e+01, 1.97331688e+01],\n         [1.65683612e+02, 7.89434629e+01, 1.85505809e+01],\n         [2.00520121e+02, 2.06251577e+02, 1.06948677e+02],\n         [1.38926667e+02, 1.49316043e+02, 1.29460961e+02],\n         [2.22353530e+02, 1.09777696e+02, 5.97995617e+01],\n         [1.74678983e+01, 2.14361202e+02, 3.62344935e+01],\n         [2.31697750e+02, 3.35557555e+01, 7.47328600e+00],\n         [3.95702850e+01, 5.09920338e+01, 6.10737113e+01]],\n\n        [[2.18830254e+02, 6.83023129e+01, 4.93740615e+01],\n         [1.27637323e+02, 1.20831350e+02, 2.18501948e+02],\n         [2.12243045e+02, 2.04876029e+01, 4.67581820e+01],\n         [1.41591635e+02, 1.00165275e+02, 1.65184949e+02],\n         [1.76876774e+02, 4.96603170e+01, 2.07080675e+02],\n         [1.35021719e+02, 1.31564985e+02, 1.82826046e+02],\n         [5.69426599e+00, 7.03233834e+01, 1.03604611e+02],\n         [2.47795846e+02, 2.43237574e+02, 5.05585400e+01],\n         [1.08021037e+02, 1.18565358e+02, 1.36497363e+02],\n         [9.17506990e+00, 7.57293636e+01, 2.38140647e+01]],\n\n        [[2.15008126e+02, 1.33925962e+02, 1.52544973e+02],\n         [1.43066821e+02, 1.74702110e+02, 1.10003104e+02],\n         [4.37684678e-02, 8.50527637e+01, 2.54426433e+02],\n         [1.49761206e+02, 1.34672552e+02, 2.22157939e+02],\n         [6.33983134e+01, 2.21700057e+02, 1.67372218e+00],\n         [2.10031219e+02, 1.93905797e+02, 1.60020085e+02],\n         [1.98636374e+02, 1.78189998e+02, 2.09139704e+02],\n         [7.93441500e+01, 4.69589739e+00, 2.33869523e+01],\n         [9.91196259e+01, 7.10515714e+01, 5.96167092e+01],\n         [1.70662983e+02, 1.81941145e+02, 2.37784058e+02]],\n\n        [[1.42171718e+02, 2.36244796e+02, 2.34221822e+02],\n         [2.89661723e+01, 1.89536388e+02, 1.34941468e+02],\n         [2.24996230e+02, 2.04667125e+02, 7.86516436e+01],\n         [1.87865939e+02, 1.98617002e+02, 1.59463239e+02],\n         [2.20065625e+02, 1.00674234e+02, 2.11352801e+02],\n         [9.69597343e+01, 2.56759856e+01, 1.25022327e+02],\n         [2.53858082e+02, 3.98498313e+01, 2.18682612e+02],\n         [2.32119759e+02, 4.75946078e+00, 1.81380159e+01],\n         [2.18397447e+02, 2.20755520e+02, 1.36045617e+02],\n         [5.22350403e+01, 1.54485590e+02, 1.08479633e+02]],\n\n        [[8.72153218e+01, 5.53915903e+01, 9.33694979e+01],\n         [2.45032941e+02, 6.82720796e+01, 4.52584327e+01],\n         [2.18707920e+02, 9.54916202e+01, 2.28914601e+01],\n         [1.63746105e+02, 2.25900968e+02, 1.41831884e+02],\n         [4.33382016e-01, 4.06514992e+00, 4.93639441e+01],\n         [1.42001658e+02, 8.40065572e+01, 2.45126781e+01],\n         [1.24200657e+02, 2.46557226e+01, 1.42052681e+02],\n         [2.44179819e+01, 2.20636346e+02, 1.12294898e+02],\n         [1.72077324e+02, 9.96164670e+00, 1.69880937e+02],\n         [1.25904082e+02, 8.82725447e+01, 2.20008004e+02]],\n\n        [[5.50305725e+01, 5.14353026e+01, 4.76658034e+01],\n         [1.75452719e+02, 1.80664419e+02, 9.75926165e+01],\n         [1.37166487e+02, 2.97839064e+00, 2.53523907e+01],\n         [1.01352761e+02, 8.88685922e+00, 1.37069866e+02],\n         [1.85156454e+02, 4.22068853e+01, 1.28802954e+02],\n         [1.87718731e+02, 1.43542425e+02, 1.53439354e+02],\n         [1.80480796e+02, 1.34363292e+02, 7.15663038e+01],\n         [2.24996554e+02, 7.27599514e+00, 1.70713642e+02],\n         [5.59088912e+01, 6.20439962e+01, 1.53391092e+02],\n         [2.75993406e+01, 7.74387556e+01, 2.29100973e+02]],\n\n        [[1.97745368e+01, 9.00105539e+01, 6.03674448e+01],\n         [1.88342708e+02, 1.92941253e+02, 4.68275632e+01],\n         [3.21982407e+01, 1.69823238e+02, 2.40093626e+02],\n         [2.28341982e+01, 1.18150396e+02, 5.65501650e+01],\n         [4.08497350e+01, 9.06024311e+00, 2.65592291e+00],\n         [5.95633293e+01, 2.27956931e+02, 5.42076722e+01],\n         [1.38947217e+02, 7.73223726e+01, 3.43129324e+01],\n         [5.68119307e+01, 2.49825400e+02, 4.74319216e+01],\n         [7.14302593e+01, 8.94850470e+01, 7.05293640e+01],\n         [1.69899375e+02, 1.01477256e+02, 3.03738391e+01]],\n\n        [[2.67206195e+00, 2.44780105e+02, 4.90930747e+01],\n         [1.80239227e+01, 3.67267839e+01, 2.34226072e+02],\n         [1.26688473e+02, 8.69334716e+01, 2.12254284e+02],\n         [6.66046893e+01, 1.90601035e+02, 1.34043602e+02],\n         [5.78857205e+01, 2.03769012e+02, 1.81995141e+02],\n         [9.55961841e+01, 1.29024934e+02, 2.00420344e+02],\n         [5.98830373e+01, 1.35666628e+02, 1.41801310e+02],\n         [1.99553260e+02, 2.52803261e+02, 2.18248071e+02],\n         [1.08209761e+02, 7.00191494e+01, 2.50060830e+02],\n         [1.57068865e+02, 1.55458014e+01, 3.59252181e+01]],\n\n        [[7.72996388e+01, 3.22149854e+01, 1.51397983e+02],\n         [1.32049710e+02, 2.18356263e+02, 1.57593610e+02],\n         [2.52280644e+02, 3.77151084e+01, 1.90577752e+02],\n         [4.25987580e+00, 3.01147563e+01, 8.62295076e+01],\n         [1.09511735e+02, 1.18933207e+02, 3.81691841e+00],\n         [2.16600687e+02, 1.29304164e+02, 9.65856541e+01],\n         [1.17394285e+02, 2.16022406e+02, 1.52971334e+01],\n         [1.44146468e+02, 6.33950757e+01, 2.03983929e+02],\n         [2.52086348e+02, 1.49374633e+02, 1.48528841e+02],\n         [2.51234967e+02, 2.43818814e+02, 2.54245756e+02]],\n\n        [[1.74559949e+02, 1.04663210e+02, 2.33267346e+02],\n         [1.65204336e+02, 4.51512531e+01, 2.32376912e+02],\n         [2.53508745e+02, 1.36693836e+02, 2.64733637e+01],\n         [2.24847913e+02, 9.29206734e+01, 5.37228597e+01],\n         [1.34981683e+02, 2.05132573e+02, 1.20321191e+02],\n         [4.71611174e+01, 7.23281917e+01, 7.67666293e+01],\n         [8.14984576e+01, 7.23201348e+01, 2.20765848e+02],\n         [1.41960908e+02, 6.08239448e+00, 1.00915171e+02],\n         [1.22899640e+02, 1.25258775e+02, 2.39224424e+02],\n         [8.91502030e+01, 3.59045511e+01, 1.58205154e+02]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9c74e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ 1.08753242e+02, -8.20807800e+01, -8.92450256e+01],\n         [ 7.32458878e+01, -4.03997040e+01,  9.73382339e+01],\n         [ 1.08311462e+01,  8.80860519e+01, -1.22881859e+02],\n         [ 1.37197296e+02,  6.00890350e+00, -9.07240753e+01],\n         [-8.72436447e+01,  6.02262344e+01,  1.17205788e+02],\n         [ 4.13760452e+01, -9.72149200e+01, -5.20942230e+01],\n         [ 9.25969467e+01, -3.67679214e+01, -6.02272797e+00],\n         [-6.61111755e+01, -8.75573196e+01, -6.07445869e+01],\n         [-3.61344070e+01,  8.68306808e+01,  9.67456741e+01],\n         [ 5.20657883e+01, -9.44142685e+01, -9.94099121e+01]],\n\n        [[ 5.72262573e+00, -7.77850037e+01, -1.00133354e+02],\n         [ 6.77204819e+01,  1.31355316e+02,  2.71179733e+01],\n         [ 9.68564606e+00,  1.15664139e+01,  1.24436348e+02],\n         [ 8.28456192e+01,  1.13121773e+02, -8.84666901e+01],\n         [-8.42737274e+01,  4.49276733e+00, -5.34867783e+01],\n         [ 1.01060631e+02, -5.09758530e+01, -9.30931244e+01],\n         [-1.22774734e+01, -2.40474701e+00,  1.24647514e+02],\n         [-6.99624634e+01, -8.71513519e+01,  9.23781509e+01],\n         [ 1.17967705e+02, -4.24813538e+01,  1.28776855e+02],\n         [ 9.88911667e+01, -3.56656647e+01, -5.15876846e+01]],\n\n        [[ 1.60651016e+01, -2.37145386e+01, -7.86395950e+01],\n         [-6.90253220e+01,  1.36837372e+02, -9.10142670e+01],\n         [ 1.22666420e+02, -8.02898712e+01,  1.23632973e+02],\n         [ 1.01237617e+02,  1.86242599e+01, -5.77527618e+00],\n         [ 1.73925781e+01,  2.71026688e+01, -5.17425537e-02],\n         [-3.52726746e+01, -7.67677078e+01, -1.12611282e+02],\n         [ 4.57337265e+01,  1.54208145e+01,  9.14762955e+01],\n         [ 1.04986824e+02,  4.29079971e+01,  7.88174973e+01],\n         [ 1.24772835e+02,  1.03534966e+02, -5.43272324e+01],\n         [ 6.87803726e+01, -5.69789810e+01, -2.40286331e+01]],\n\n        [[ 2.22912292e+01,  4.95690231e+01,  3.52197647e+01],\n         [ 1.08684105e+02,  1.28333099e+02, -9.30004883e+01],\n         [ 1.77839890e+01, -8.05916138e+01,  4.13720322e+01],\n         [ 7.69865494e+01,  4.51206970e+00, -2.26416473e+01],\n         [ 1.92380295e+01, -8.76546249e+01, -1.12290161e+02],\n         [ 1.14699562e+02,  2.78727341e+01, -5.62706833e+01],\n         [ 1.16305717e+02,  4.23522110e+01,  4.28533249e+01],\n         [-2.04531479e+01,  1.79692001e+01, -9.78156815e+01],\n         [ 1.32427277e+02, -1.09469635e+02,  1.19355522e+02],\n         [-1.08171463e+01, -3.92366180e+01,  4.92002487e+01]],\n\n        [[ 3.22645340e+01,  7.54881058e+01,  7.96724167e+01],\n         [-5.47451019e+01,  5.70161514e+01,  8.73049164e+00],\n         [-5.01692772e+01,  2.69830246e+01,  8.14945602e+01],\n         [ 3.86500320e+01, -6.62886200e+01, -1.22650970e+02],\n         [-4.01826935e+01, -2.62303238e+01, -7.64677887e+01],\n         [ 7.09201584e+01,  3.23974686e+01, -1.15156647e+02],\n         [-5.43301239e+01,  1.35972565e+02,  1.10002892e+02],\n         [ 1.28973419e+02,  1.28703705e+02, -1.28605957e+01],\n         [ 9.98040237e+01, -6.21162491e+01, -1.04763489e+01],\n         [-1.53821869e+01, -3.83887482e+00, -4.69976730e+01]],\n\n        [[-9.75193863e+01,  7.25432587e+00, -4.15612259e+01],\n         [-1.12372665e+01, -3.70978851e+01,  4.88391495e+01],\n         [-8.83538666e+01, -1.03395813e+02,  2.13499374e+01],\n         [ 3.37760544e+01, -3.20264587e+01,  1.28148682e+02],\n         [-6.07607384e+01, -5.56263771e+01, -4.72934570e+01],\n         [ 1.47055023e+02, -5.86212883e+01,  2.59841690e+01],\n         [-1.71239090e+01,  1.22158501e+02,  1.26621819e+02],\n         [-9.29812546e+01, -1.36071014e+01, -2.46417389e+01],\n         [ 3.19309616e+01,  2.66694717e+01,  1.21104958e+02],\n         [ 1.88546753e+00, -6.29466095e+01,  8.56473007e+01]],\n\n        [[ 1.09503090e+02,  6.35488052e+01,  7.65274048e-01],\n         [ 3.75612564e+01,  3.86619492e+01,  4.39254837e+01],\n         [-6.73629456e+01, -9.12301636e+00,  9.29352493e+01],\n         [-6.51005707e+01, -8.06542816e+01, -8.70846863e+01],\n         [ 1.88347015e+01, -1.05311180e+02,  8.59131622e+00],\n         [-2.53064651e+01, -7.40209656e+01,  3.60310135e+01],\n         [-6.99482422e+01,  1.08930229e+02,  4.92564163e+01],\n         [ 1.21965752e+02, -5.31712990e+01,  9.31858597e+01],\n         [-1.18628616e+01, -2.71535721e+01,  1.08004768e+02],\n         [ 1.02771126e+02, -4.24488068e+01, -9.09050064e+01]],\n\n        [[ 1.33024872e+02,  7.12370834e+01,  1.11426620e+01],\n         [ 1.46576324e+02, -4.16001892e+00,  1.20805656e+02],\n         [ 3.94071579e+01, -5.69359779e+01, -2.94284668e+01],\n         [-9.62052612e+01, -8.79715271e+01,  1.94753494e+01],\n         [ 9.15884171e+01, -1.16693787e+02,  4.70367661e+01],\n         [ 5.87883072e+01,  9.18492203e+01,  4.32600021e+01],\n         [-2.19485397e+01, -6.66536865e+01,  1.80618362e+01],\n         [ 9.98997726e+01, -6.60632935e+01,  5.45337677e+00],\n         [ 1.42474701e+02, -1.63166504e+01, -3.25495605e+01],\n         [ 1.30064178e+02,  5.89309616e+01, -1.03140419e+02]],\n\n        [[-7.47959061e+01, -9.51266708e+01,  7.16949844e+01],\n         [ 6.54418869e+01,  5.79348373e+01,  6.19942551e+01],\n         [ 1.22725151e+02,  1.25113304e+02, -9.01322937e+00],\n         [ 3.00447769e+01, -7.46436615e+01,  3.37156754e+01],\n         [-2.10681305e+01,  7.59258270e+00, -8.48178558e+01],\n         [ 1.34774078e+02,  6.30562820e+01, -2.01026917e-01],\n         [-9.63383789e+01,  1.05935326e+02, -8.35868225e+01],\n         [ 1.22583229e+02, -3.14117050e+01, -8.07250824e+01],\n         [ 9.48277817e+01, -3.72341995e+01,  1.25220100e+02],\n         [ 5.83454895e+00,  1.80454254e+00,  4.75092697e+01]],\n\n        [[ 1.42001251e+02, -5.75596161e+01, -8.13062286e+01],\n         [ 8.13743591e+00,  6.22234344e+00,  1.33128738e+01],\n         [-5.29957581e+00, -1.12457848e+02, -4.20642471e+01],\n         [ 1.23630379e+02,  8.78560410e+01, -5.03540039e+01],\n         [-2.32713165e+01, -8.56457520e+01, -7.32767181e+01],\n         [-6.06321030e+01, -4.89643707e+01,  1.31105713e+02],\n         [-9.16649323e+01, -1.17058945e+01,  5.09414291e+01],\n         [-5.89001846e+01, -7.77078323e+01,  6.83080063e+01],\n         [-3.10357285e+01, -6.13272781e+01, -1.09953888e+02],\n         [ 7.56217117e+01,  1.22174248e+02,  9.19897995e+01]]],\n\n\n       [[[ 4.57537613e+01, -1.13171677e+02, -1.02533417e+02],\n         [ 2.16118698e+01, -5.31496811e+01,  1.18650383e+02],\n         [-8.42058334e+01, -7.42576141e+01,  5.74027634e+01],\n         [-8.53884201e+01, -3.78355331e+01,  4.20036087e+01],\n         [ 3.00967407e+00,  8.94725723e+01,  7.68401260e+01],\n         [ 2.55219650e+01,  3.25370407e+01,  1.52466660e+01],\n         [-4.41394424e+01, -7.00130463e+00,  9.86735306e+01],\n         [-6.77045135e+01,  9.75822067e+01, -1.06212105e+02],\n         [-9.64657135e+01, -8.32232437e+01,  1.08017754e+02],\n         [-4.28652916e+01, -6.57869644e+01, -8.41097107e+01]],\n\n        [[-5.45649414e+01, -4.84766846e+01,  9.51502457e+01],\n         [ 1.14562950e+02,  4.05235291e+00,  3.95732117e+00],\n         [-5.71808205e+01, -9.62913971e+01,  8.85630417e+01],\n         [ 6.12459488e+01, -1.66137238e+01,  1.79116287e+01],\n         [ 1.03141670e+02, -6.71186829e+01,  5.31967697e+01],\n         [ 7.88870468e+01,  1.47859879e+01,  1.13417130e+01],\n         [-3.34388733e-01, -4.64556122e+01, -1.17985733e+02],\n         [-5.33804626e+01,  1.26458580e+02,  1.24115852e+02],\n         [ 3.25583572e+01,  1.78636169e+00, -1.56589661e+01],\n         [-8.01249390e+01, -4.10496368e+01, -1.14504929e+02]],\n\n        [[ 4.86059647e+01,  1.71469650e+01,  9.13281326e+01],\n         [ 6.06410217e+00,  5.79231033e+01,  1.93868179e+01],\n         [ 1.50487427e+02, -3.17262344e+01, -1.23636230e+02],\n         [ 1.18218941e+02,  1.78935471e+01,  2.60811996e+01],\n         [-1.02265282e+02,  1.04921059e+02, -6.02816887e+01],\n         [ 5.60810776e+01,  7.71267929e+01,  8.63512192e+01],\n         [ 1.05200706e+02,  6.14110031e+01,  7.49563675e+01],\n         [-8.05520477e+01, -1.12083099e+02, -4.43358536e+01],\n         [-4.43222923e+01, -4.57274246e+01, -2.45603714e+01],\n         [ 1.33845062e+02,  6.51621475e+01,  4.69829788e+01]],\n\n        [[ 1.30282806e+02,  1.19465797e+02,  1.84917221e+01],\n         [ 3.10024643e+01,  7.27573929e+01, -9.47138290e+01],\n         [-2.52873611e+01,  8.78881302e+01,  1.01316231e+02],\n         [ 5.55242386e+01,  8.18380051e+01,  6.41859360e+01],\n         [ 1.07413795e+02, -1.61047668e+01,  9.63856277e+01],\n         [ 2.10833282e+01, -9.11030121e+01, -2.67202682e+01],\n         [ 1.14743614e+02, -7.69291687e+01,  1.30178070e+02],\n         [-8.58009872e+01, -1.12019539e+02,  1.08439766e+02],\n         [ 3.21066208e+01,  1.03976524e+02,  9.47174454e+01],\n         [ 4.54062653e+00,  3.77065964e+01, -7.14449615e+01]],\n\n        [[-1.05695038e+01, -6.13874092e+01, -3.64646759e+01],\n         [-5.86805687e+01, -4.85069199e+01,  1.21352943e+02],\n         [-8.10475464e+01, -2.12873764e+01,  9.50279160e+01],\n         [ 3.78928757e+01,  1.09121971e+02,  4.00661087e+01],\n         [-5.45750580e+01, -1.12713852e+02, -1.23246620e+02],\n         [-7.94263229e+01, -3.27724457e+01,  1.83216629e+01],\n         [ 3.81136703e+01, -9.21232758e+01,  5.20652771e-01],\n         [ 8.35589600e+00,  1.03857353e+02, -9.92620163e+01],\n         [ 6.59419327e+01, -1.06817352e+02,  4.83973160e+01],\n         [ 1.16069008e+02, -2.85064545e+01,  2.22408295e+00]],\n\n        [[-5.62732010e+01, -6.53436966e+01, -6.86494293e+01],\n         [-6.34638977e+00,  6.38854141e+01,  5.17727127e+01],\n         [-7.85866089e+01, -1.13800606e+02,  1.34864883e+01],\n         [ 3.31308670e+01, -1.07892143e+02, -2.23272400e+01],\n         [ 2.48639450e+01, -7.45721130e+01,  6.14764481e+01],\n         [ 4.95003586e+01,  2.67634201e+01,  6.40387344e+01],\n         [-3.23726959e+01,  1.75842972e+01,  5.68007889e+01],\n         [ 6.67746353e+01, -1.09503006e+02,  1.01316551e+02],\n         [ 4.94520950e+01, -5.47350044e+01, -6.77711105e+01],\n         [ 1.25161964e+02, -3.93402405e+01, -9.60806580e+01]],\n\n        [[-4.35715599e+01, -2.67684479e+01, -1.03905464e+02],\n         [-5.71114388e+01,  7.61622543e+01,  6.46627121e+01],\n         [ 1.36154633e+02,  5.30442429e+01, -9.14817581e+01],\n         [-4.73888397e+01,  1.37139893e+00, -1.00845802e+02],\n         [-1.01283081e+02, -1.07718758e+02, -8.28302612e+01],\n         [-4.97313309e+01,  1.11177925e+02, -6.41166687e+01],\n         [-6.96260681e+01, -3.94566269e+01,  1.52672195e+01],\n         [-5.65070801e+01,  1.33046387e+02, -6.68680725e+01],\n         [-3.34096375e+01, -2.72939529e+01, -5.22497406e+01],\n         [-7.35651627e+01, -1.53017426e+01,  4.62193680e+01]],\n\n        [[-5.48459282e+01,  1.28001099e+02, -1.21007935e+02],\n         [ 1.30287079e+02, -8.00522156e+01, -1.05656082e+02],\n         [ 1.08315285e+02, -2.98455276e+01,  3.00847626e+00],\n         [ 3.01045914e+01,  7.38220291e+01, -5.70753098e+01],\n         [ 7.80561447e+01,  8.69900131e+01, -6.57942810e+01],\n         [ 9.64813461e+01,  1.22459335e+01, -2.80838165e+01],\n         [ 3.78623123e+01,  1.88876266e+01, -6.37969627e+01],\n         [ 1.14309074e+02,  1.36024261e+02,  7.58732529e+01],\n         [ 1.46121826e+02, -4.67598495e+01, -1.54702377e+01],\n         [-6.80137863e+01, -1.01233200e+02,  3.33888626e+01]],\n\n        [[ 4.74589767e+01, -8.45640106e+01, -4.63803635e+01],\n         [ 5.36546097e+01,  1.01577263e+02,  8.36971283e+00],\n         [ 8.66387558e+01, -7.90638885e+01,  1.28600647e+02],\n         [-1.77094955e+01, -8.66642456e+01, -1.19420128e+02],\n         [-1.00122086e+02,  2.15420532e+00, -1.41682663e+01],\n         [-7.35334778e+00,  1.25251694e+01,  9.29206924e+01],\n         [-8.86418686e+01,  9.92434006e+01, -6.28571320e+00],\n         [ 1.00044930e+02, -5.33839226e+01,  2.04664688e+01],\n         [ 4.45898361e+01,  3.25956345e+01,  1.28406342e+02],\n         [ 1.50306763e+02,  1.27039818e+02,  1.27554970e+02]],\n\n        [[ 1.29328339e+02, -1.21157913e+01,  5.08799515e+01],\n         [ 1.28437897e+02, -7.16277466e+01,  4.15243301e+01],\n         [-7.74656372e+01,  1.99148331e+01,  1.29828735e+02],\n         [-5.02161446e+01, -2.38583221e+01,  1.01167915e+02],\n         [ 1.63821869e+01,  8.83535690e+01,  1.13016891e+01],\n         [-2.71723709e+01, -4.44508057e+01, -7.65188828e+01],\n         [ 1.16826851e+02, -4.44588623e+01, -4.21815414e+01],\n         [-3.02383423e+00, -1.10696602e+02,  1.82809067e+01],\n         [ 1.35285431e+02,  8.47977448e+00, -7.80357361e-01],\n         [ 5.42661514e+01, -8.08744507e+01, -3.45298004e+01]]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9ebf80>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 34,  34, 212],\n         [221,  76, 177],\n         [  0, 204, 114],\n         [ 32, 122, 241],\n         [240, 177,  16],\n         [ 71,  19, 145],\n         [117,  80, 196],\n         [ 62,  29,  37],\n         [220, 203,  67],\n         [ 24,  22, 156]],\n\n        [[ 23,  38, 109],\n         [150, 248, 171],\n         [248, 128, 113],\n         [ 35, 229, 186],\n         [ 70, 121,  19],\n         [ 30,  65, 204],\n         [248, 114,  91],\n         [216,  29,  33],\n         [252,  74, 221],\n         [ 72,  81, 202]],\n\n        [[ 45,  93, 120],\n         [ 32, 253,  34],\n         [247,  36, 226],\n         [117, 135, 205],\n         [123, 143, 121],\n         [ 11,  40,  68],\n         [215, 132, 149],\n         [202, 159, 208],\n         [ 69, 220, 228],\n         [ 99,  59, 172]],\n\n        [[158, 166, 126],\n         [ 30, 245, 212],\n         [165,  36, 121],\n         [101, 121, 180],\n         [ 11,  29, 123],\n         [ 67, 144, 218],\n         [166, 159, 220],\n         [ 25, 134,  83],\n         [243,   7, 236],\n         [172,  77,  93]],\n\n        [[203, 192, 136],\n         [132, 173,  49],\n         [205, 143,  53],\n         [  1,  50, 142],\n         [ 47,  90,  63],\n         [  8, 149, 174],\n         [233, 252,  49],\n         [110, 245, 232],\n         [113,  54, 203],\n         [ 76, 112,  88]],\n\n        [[ 82, 124,   6],\n         [172,  79,  92],\n         [145,  13,  15],\n         [251,  84, 137],\n         [ 76,  61,  43],\n         [149,  58, 250],\n         [250, 238,  86],\n         [ 99, 103,  10],\n         [244, 143, 135],\n         [209,  53, 105]],\n\n        [[124, 180, 213],\n         [167, 155, 141],\n         [216, 107,  36],\n         [ 36,  36,  38],\n         [132,  11, 122],\n         [159,  42,  78],\n         [172, 225,  33],\n         [216,  63, 225],\n         [231,  89,  92],\n         [ 32,  74, 206]],\n\n        [[134, 188, 236],\n         [244, 112, 250],\n         [ 94,  59, 143],\n         [143,  28,   7],\n         [170,   0, 195],\n         [166, 208, 162],\n         [141,  50,  81],\n         [129,  50, 203],\n         [ 91, 100, 246],\n         [ 20, 175, 234]],\n\n        [[195,  21,  29],\n         [185, 174, 169],\n         [114, 241, 226],\n         [157,  42, 133],\n         [ 38, 124,  82],\n         [123, 179, 238],\n         [ 40, 222,   7],\n         [ 42,  85, 226],\n         [248,  79, 198],\n         [171, 118, 109]],\n\n        [[ 42,  59, 245],\n         [136, 123, 112],\n         [ 81,   4,  98],\n         [ 73, 204, 227],\n         [ 50,  31,  80],\n         [254,  67,  43],\n         [174, 105,  12],\n         [191,  39,  45],\n         [ 13,  55,  72],\n         [215, 238, 179]]],\n\n\n       [[[ 21,   3, 149],\n         [242,  63, 125],\n         [181,  42,  19],\n         [165,  78,  18],\n         [200, 206, 106],\n         [138, 149, 129],\n         [222, 109,  59],\n         [ 17, 214,  36],\n         [231,  33,   7],\n         [ 39,  50,  61]],\n\n        [[218,  68,  49],\n         [127, 120, 218],\n         [212,  20,  46],\n         [141, 100, 165],\n         [176,  49, 207],\n         [135, 131, 182],\n         [  5,  70, 103],\n         [247, 243,  50],\n         [108, 118, 136],\n         [  9,  75,  23]],\n\n        [[215, 133, 152],\n         [143, 174, 110],\n         [  0,  85, 254],\n         [149, 134, 222],\n         [ 63, 221,   1],\n         [210, 193, 160],\n         [198, 178, 209],\n         [ 79,   4,  23],\n         [ 99,  71,  59],\n         [170, 181, 237]],\n\n        [[142, 236, 234],\n         [ 28, 189, 134],\n         [224, 204,  78],\n         [187, 198, 159],\n         [220, 100, 211],\n         [ 96,  25, 125],\n         [253,  39, 218],\n         [232,   4,  18],\n         [218, 220, 136],\n         [ 52, 154, 108]],\n\n        [[ 87,  55,  93],\n         [245,  68,  45],\n         [218,  95,  22],\n         [163, 225, 141],\n         [  0,   4,  49],\n         [142,  84,  24],\n         [124,  24, 142],\n         [ 24, 220, 112],\n         [172,   9, 169],\n         [125,  88, 220]],\n\n        [[ 55,  51,  47],\n         [175, 180,  97],\n         [137,   2,  25],\n         [101,   8, 137],\n         [185,  42, 128],\n         [187, 143, 153],\n         [180, 134,  71],\n         [224,   7, 170],\n         [ 55,  62, 153],\n         [ 27,  77, 229]],\n\n        [[ 19,  90,  60],\n         [188, 192,  46],\n         [ 32, 169, 240],\n         [ 22, 118,  56],\n         [ 40,   9,   2],\n         [ 59, 227,  54],\n         [138,  77,  34],\n         [ 56, 249,  47],\n         [ 71,  89,  70],\n         [169, 101,  30]],\n\n        [[  2, 244,  49],\n         [ 18,  36, 234],\n         [126,  86, 212],\n         [ 66, 190, 134],\n         [ 57, 203, 181],\n         [ 95, 129, 200],\n         [ 59, 135, 141],\n         [199, 252, 218],\n         [108,  70, 250],\n         [157,  15,  35]],\n\n        [[ 77,  32, 151],\n         [132, 218, 157],\n         [252,  37, 190],\n         [  4,  30,  86],\n         [109, 118,   3],\n         [216, 129,  96],\n         [117, 216,  15],\n         [144,  63, 203],\n         [252, 149, 148],\n         [251, 243, 254]],\n\n        [[174, 104, 233],\n         [165,  45, 232],\n         [253, 136,  26],\n         [224,  92,  53],\n         [134, 205, 120],\n         [ 47,  72,  76],\n         [ 81,  72, 220],\n         [141,   6, 100],\n         [122, 125, 239],\n         [ 89,  35, 158]]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9c73f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ 108.061    ,  -82.779    ,  -89.68     ],\n         [  73.061    ,  -40.779    ,   97.32     ],\n         [  10.060997 ,   87.221    , -123.68     ],\n         [ 137.061    ,    5.2210007,  -91.68     ],\n         [ -87.939    ,   60.221    ,  116.32     ],\n         [  41.060997 ,  -97.779    ,  -52.68     ],\n         [  92.061    ,  -36.779    ,   -6.6800003],\n         [ -66.939    ,  -87.779    ,  -61.68     ],\n         [ -36.939003 ,   86.221    ,   96.32     ],\n         [  52.060997 ,  -94.779    ,  -99.68     ]],\n\n        [[   5.060997 ,  -78.779    , -100.68     ],\n         [  67.061    ,  131.22101  ,   26.32     ],\n         [   9.060997 ,   11.221001 ,  124.32     ],\n         [  82.061    ,  112.221    ,  -88.68     ],\n         [ -84.939    ,    4.2210007,  -53.68     ],\n         [ 100.061    ,  -51.779    ,  -93.68     ],\n         [ -12.939003 ,   -2.7789993,  124.32     ],\n         [ -70.939    ,  -87.779    ,   92.32     ],\n         [ 117.061    ,  -42.779    ,  128.32     ],\n         [  98.061    ,  -35.779    ,  -51.68     ]],\n\n        [[  16.060997 ,  -23.779    ,  -78.68     ],\n         [ -69.939    ,  136.22101  ,  -91.68     ],\n         [ 122.061    ,  -80.779    ,  123.32     ],\n         [ 101.061    ,   18.221    ,   -6.6800003],\n         [  17.060997 ,   26.221    ,   -0.6800003],\n         [ -35.939003 ,  -76.779    , -112.68     ],\n         [  45.060997 ,   15.221001 ,   91.32     ],\n         [ 104.061    ,   42.221    ,   78.32     ],\n         [ 124.061    ,  103.221    ,  -54.68     ],\n         [  68.061    ,  -57.779    ,  -24.68     ]],\n\n        [[  22.060997 ,   49.221    ,   34.32     ],\n         [ 108.061    ,  128.22101  ,  -93.68     ],\n         [  17.060997 ,  -80.779    ,   41.32     ],\n         [  76.061    ,    4.2210007,  -22.68     ],\n         [  19.060997 ,  -87.779    , -112.68     ],\n         [ 114.061    ,   27.221    ,  -56.68     ],\n         [ 116.061    ,   42.221    ,   42.32     ],\n         [ -20.939003 ,   17.221    ,  -98.68     ],\n         [ 132.061    , -109.779    ,  119.32     ],\n         [ -10.939003 ,  -39.779    ,   48.32     ]],\n\n        [[  32.060997 ,   75.221    ,   79.32     ],\n         [ -54.939003 ,   56.221    ,    8.32     ],\n         [ -50.939003 ,   26.221    ,   81.32     ],\n         [  38.060997 ,  -66.779    , -122.68     ],\n         [ -40.939003 ,  -26.779    ,  -76.68     ],\n         [  70.061    ,   32.221    , -115.68     ],\n         [ -54.939003 ,  135.22101  ,  109.32     ],\n         [ 128.061    ,  128.22101  ,  -13.68     ],\n         [  99.061    ,  -62.779    ,  -10.68     ],\n         [ -15.939003 ,   -4.7789993,  -47.68     ]],\n\n        [[ -97.939    ,    7.2210007,  -41.68     ],\n         [ -11.939003 ,  -37.779    ,   48.32     ],\n         [ -88.939    , -103.779    ,   21.32     ],\n         [  33.060997 ,  -32.779    ,  127.32     ],\n         [ -60.939003 ,  -55.779    ,  -47.68     ],\n         [ 146.061    ,  -58.779    ,   25.32     ],\n         [ -17.939003 ,  121.221    ,  126.32     ],\n         [ -93.939    ,  -13.778999 ,  -24.68     ],\n         [  31.060997 ,   26.221    ,  120.32     ],\n         [   1.060997 ,  -63.779    ,   85.32     ]],\n\n        [[ 109.061    ,   63.221    ,    0.3199997],\n         [  37.060997 ,   38.221    ,   43.32     ],\n         [ -67.939    ,   -9.778999 ,   92.32     ],\n         [ -65.939    ,  -80.779    ,  -87.68     ],\n         [  18.060997 , -105.779    ,    8.32     ],\n         [ -25.939003 ,  -74.779    ,   35.32     ],\n         [ -70.939    ,  108.221    ,   48.32     ],\n         [ 121.061    ,  -53.779    ,   92.32     ],\n         [ -11.939003 ,  -27.779    ,  107.32     ],\n         [ 102.061    ,  -42.779    ,  -91.68     ]],\n\n        [[ 132.061    ,   71.221    ,   10.32     ],\n         [ 146.061    ,   -4.7789993,  120.32     ],\n         [  39.060997 ,  -57.779    ,  -29.68     ],\n         [ -96.939    ,  -88.779    ,   19.32     ],\n         [  91.061    , -116.779    ,   46.32     ],\n         [  58.060997 ,   91.221    ,   42.32     ],\n         [ -22.939003 ,  -66.779    ,   17.32     ],\n         [  99.061    ,  -66.779    ,    5.3199997],\n         [ 142.061    ,  -16.779    ,  -32.68     ],\n         [ 130.061    ,   58.221    , -103.68     ]],\n\n        [[ -74.939    ,  -95.779    ,   71.32     ],\n         [  65.061    ,   57.221    ,   61.32     ],\n         [ 122.061    ,  124.221    ,   -9.68     ],\n         [  29.060997 ,  -74.779    ,   33.32     ],\n         [ -21.939003 ,    7.2210007,  -85.68     ],\n         [ 134.061    ,   62.221    ,   -0.6800003],\n         [ -96.939    ,  105.221    ,  -83.68     ],\n         [ 122.061    ,  -31.779    ,  -81.68     ],\n         [  94.061    ,  -37.779    ,  124.32     ],\n         [   5.060997 ,    1.2210007,   47.32     ]],\n\n        [[ 141.061    ,  -57.779    ,  -81.68     ],\n         [   8.060997 ,    6.2210007,   12.32     ],\n         [  -5.939003 , -112.779    ,  -42.68     ],\n         [ 123.061    ,   87.221    ,  -50.68     ],\n         [ -23.939003 ,  -85.779    ,  -73.68     ],\n         [ -60.939003 ,  -49.779    ,  130.32     ],\n         [ -91.939    ,  -11.778999 ,   50.32     ],\n         [ -58.939003 ,  -77.779    ,   67.32     ],\n         [ -31.939003 ,  -61.779    , -110.68     ],\n         [  75.061    ,  121.221    ,   91.32     ]]],\n\n\n       [[[  45.060997 , -113.779    , -102.68     ],\n         [  21.060997 ,  -53.779    ,  118.32     ],\n         [ -84.939    ,  -74.779    ,   57.32     ],\n         [ -85.939    ,  -38.779    ,   41.32     ],\n         [   2.060997 ,   89.221    ,   76.32     ],\n         [  25.060997 ,   32.221    ,   14.32     ],\n         [ -44.939003 ,   -7.7789993,   98.32     ],\n         [ -67.939    ,   97.221    , -106.68     ],\n         [ -96.939    ,  -83.779    ,  107.32     ],\n         [ -42.939003 ,  -66.779    ,  -84.68     ]],\n\n        [[ -54.939003 ,  -48.779    ,   94.32     ],\n         [ 114.061    ,    3.2210007,    3.3199997],\n         [ -57.939003 ,  -96.779    ,   88.32     ],\n         [  61.060997 ,  -16.779    ,   17.32     ],\n         [ 103.061    ,  -67.779    ,   52.32     ],\n         [  78.061    ,   14.221001 ,   11.32     ],\n         [  -0.939003 ,  -46.779    , -118.68     ],\n         [ -53.939003 ,  126.221    ,  123.32     ],\n         [  32.060997 ,    1.2210007,  -15.68     ],\n         [ -80.939    ,  -41.779    , -114.68     ]],\n\n        [[  48.060997 ,   16.221    ,   91.32     ],\n         [   6.060997 ,   57.221    ,   19.32     ],\n         [ 150.061    ,  -31.779    , -123.68     ],\n         [ 118.061    ,   17.221    ,   25.32     ],\n         [-102.939    ,  104.221    ,  -60.68     ],\n         [  56.060997 ,   76.221    ,   86.32     ],\n         [ 105.061    ,   61.221    ,   74.32     ],\n         [ -80.939    , -112.779    ,  -44.68     ],\n         [ -44.939003 ,  -45.779    ,  -24.68     ],\n         [ 133.061    ,   64.221    ,   46.32     ]],\n\n        [[ 130.061    ,  119.221    ,   18.32     ],\n         [  30.060997 ,   72.221    ,  -95.68     ],\n         [ -25.939003 ,   87.221    ,  100.32     ],\n         [  55.060997 ,   81.221    ,   63.32     ],\n         [ 107.061    ,  -16.779    ,   96.32     ],\n         [  21.060997 ,  -91.779    ,  -27.68     ],\n         [ 114.061    ,  -77.779    ,  129.32     ],\n         [ -85.939    , -112.779    ,  108.32     ],\n         [  32.060997 ,  103.221    ,   94.32     ],\n         [   4.060997 ,   37.221    ,  -71.68     ]],\n\n        [[ -10.939003 ,  -61.779    ,  -36.68     ],\n         [ -58.939003 ,  -48.779    ,  121.32     ],\n         [ -81.939    ,  -21.779    ,   94.32     ],\n         [  37.060997 ,  108.221    ,   39.32     ],\n         [ -54.939003 , -112.779    , -123.68     ],\n         [ -79.939    ,  -32.779    ,   18.32     ],\n         [  38.060997 ,  -92.779    ,    0.3199997],\n         [   8.060997 ,  103.221    ,  -99.68     ],\n         [  65.061    , -107.779    ,   48.32     ],\n         [ 116.061    ,  -28.779    ,    1.3199997]],\n\n        [[ -56.939003 ,  -65.779    ,  -68.68     ],\n         [  -6.939003 ,   63.221    ,   51.32     ],\n         [ -78.939    , -114.779    ,   13.32     ],\n         [  33.060997 , -108.779    ,  -22.68     ],\n         [  24.060997 ,  -74.779    ,   61.32     ],\n         [  49.060997 ,   26.221    ,   63.32     ],\n         [ -32.939003 ,   17.221    ,   56.32     ],\n         [  66.061    , -109.779    ,  100.32     ],\n         [  49.060997 ,  -54.779    ,  -68.68     ],\n         [ 125.061    ,  -39.779    ,  -96.68     ]],\n\n        [[ -43.939003 ,  -26.779    , -104.68     ],\n         [ -57.939003 ,   75.221    ,   64.32     ],\n         [ 136.061    ,   52.221    ,  -91.68     ],\n         [ -47.939003 ,    1.2210007, -101.68     ],\n         [-101.939    , -107.779    ,  -83.68     ],\n         [ -49.939003 ,  110.221    ,  -64.68     ],\n         [ -69.939    ,  -39.779    ,   14.32     ],\n         [ -56.939003 ,  132.22101  ,  -67.68     ],\n         [ -33.939003 ,  -27.779    ,  -52.68     ],\n         [ -73.939    ,  -15.778999 ,   45.32     ]],\n\n        [[ -54.939003 ,  127.221    , -121.68     ],\n         [ 130.061    ,  -80.779    , -105.68     ],\n         [ 108.061    ,  -30.779    ,    2.3199997],\n         [  30.060997 ,   73.221    ,  -57.68     ],\n         [  77.061    ,   86.221    ,  -66.68     ],\n         [  96.061    ,   12.221001 ,  -28.68     ],\n         [  37.060997 ,   18.221    ,  -64.68     ],\n         [ 114.061    ,  135.22101  ,   75.32     ],\n         [ 146.061    ,  -46.779    ,  -15.68     ],\n         [ -68.939    , -101.779    ,   33.32     ]],\n\n        [[  47.060997 ,  -84.779    ,  -46.68     ],\n         [  53.060997 ,  101.221    ,    8.32     ],\n         [  86.061    ,  -79.779    ,  128.32     ],\n         [ -17.939003 ,  -86.779    , -119.68     ],\n         [-100.939    ,    1.2210007,  -14.68     ],\n         [  -7.939003 ,   12.221001 ,   92.32     ],\n         [ -88.939    ,   99.221    ,   -6.6800003],\n         [  99.061    ,  -53.779    ,   20.32     ],\n         [  44.060997 ,   32.221    ,  128.32     ],\n         [ 150.061    ,  126.221    ,  127.32     ]],\n\n        [[ 129.061    ,  -12.778999 ,   50.32     ],\n         [ 128.061    ,  -71.779    ,   41.32     ],\n         [ -77.939    ,   19.221    ,  129.32     ],\n         [ -50.939003 ,  -24.779    ,  100.32     ],\n         [  16.060997 ,   88.221    ,   10.32     ],\n         [ -27.939003 ,  -44.779    ,  -76.68     ],\n         [ 116.061    ,  -44.779    ,  -42.68     ],\n         [  -3.939003 , -110.779    ,   17.32     ],\n         [ 135.061    ,    8.221001 ,   -1.6800003],\n         [  54.060997 ,  -81.779    ,  -34.68     ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea09ad0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[3.44349692e+01, 3.46982238e+01, 2.12692250e+02],\n         [2.21018232e+02, 7.63792988e+01, 1.77184895e+02],\n         [7.98143041e-01, 2.04865044e+02, 1.14770148e+02],\n         [3.29559285e+01, 1.22787905e+02, 2.41136296e+02],\n         [2.40885792e+02, 1.77005241e+02, 1.66953608e+01],\n         [7.15857781e+01, 1.95640752e+01, 1.45315052e+02],\n         [1.17657271e+02, 8.00110748e+01, 1.96535957e+02],\n         [6.29354146e+01, 2.92216820e+01, 3.78278242e+01],\n         [2.20425679e+02, 2.03609676e+02, 6.78045988e+01],\n         [2.42700870e+01, 2.23647307e+01, 1.56004789e+02]],\n\n        [[2.35466442e+01, 3.89939969e+01, 1.09661630e+02],\n         [1.50797970e+02, 2.48134330e+02, 1.71659488e+02],\n         [2.48116341e+02, 1.28345406e+02, 1.13624650e+02],\n         [3.52133083e+01, 2.29900767e+02, 1.86784624e+02],\n         [7.01932206e+01, 1.21271766e+02, 1.96652742e+01],\n         [3.05868715e+01, 6.58031456e+01, 2.04999634e+02],\n         [2.48327515e+02, 1.14374253e+02, 9.16615301e+01],\n         [2.16058148e+02, 2.96276484e+01, 3.39765437e+01],\n         [2.52456851e+02, 7.42976442e+01, 2.21906701e+02],\n         [7.20923168e+01, 8.11133361e+01, 2.02830163e+02]],\n\n        [[4.50404065e+01, 9.30644593e+01, 1.20004103e+02],\n         [3.26657296e+01, 2.53616369e+02, 3.49136813e+01],\n         [2.47312968e+02, 3.64891230e+01, 2.26605428e+02],\n         [1.17904721e+02, 1.35403261e+02, 2.05176621e+02],\n         [1.23628261e+02, 1.43881664e+02, 1.21331584e+02],\n         [1.10687196e+01, 4.00112922e+01, 6.86663262e+01],\n         [2.15156295e+02, 1.32199811e+02, 1.49672729e+02],\n         [2.02497504e+02, 1.59686997e+02, 2.08925828e+02],\n         [6.93527658e+01, 2.20313969e+02, 2.28711831e+02],\n         [9.96513645e+01, 5.98000170e+01, 1.72719379e+02]],\n\n        [[1.58899768e+02, 1.66348021e+02, 1.26230232e+02],\n         [3.06795128e+01, 2.45112096e+02, 2.12623104e+02],\n         [1.65052032e+02, 3.61873892e+01, 1.21722993e+02],\n         [1.01038354e+02, 1.21291067e+02, 1.80925554e+02],\n         [1.13898358e+01, 2.91243731e+01, 1.23177030e+02],\n         [6.74093201e+01, 1.44651734e+02, 2.18638567e+02],\n         [1.66533327e+02, 1.59131217e+02, 2.20244721e+02],\n         [2.58643210e+01, 1.34748197e+02, 8.34858520e+01],\n         [2.43035523e+02, 7.30936168e+00, 2.36366288e+02],\n         [1.72880242e+02, 7.75423822e+01, 9.31218552e+01]],\n\n        [[2.03352412e+02, 1.92267111e+02, 1.36203542e+02],\n         [1.32410492e+02, 1.73795150e+02, 4.91939024e+01],\n         [2.05174562e+02, 1.43762030e+02, 5.37697241e+01],\n         [1.02902979e+00, 5.04903837e+01, 1.42589036e+02],\n         [4.72122134e+01, 9.05486758e+01, 6.37563081e+01],\n         [8.52334984e+00, 1.49176462e+02, 1.74859159e+02],\n         [2.33682893e+02, 2.52751569e+02, 4.96088785e+01],\n         [1.10819406e+02, 2.45482704e+02, 2.32912435e+02],\n         [1.13203649e+02, 5.46627486e+01, 2.03743025e+02],\n         [7.66823294e+01, 1.12940124e+02, 8.85568159e+01]],\n\n        [[8.21187717e+01, 1.24033325e+02, 6.41961657e+00],\n         [1.72519147e+02, 7.96811163e+01, 9.27017386e+01],\n         [1.45029943e+02, 1.33831848e+01, 1.55851354e+01],\n         [2.51828685e+02, 8.47525392e+01, 1.37715057e+02],\n         [7.63865430e+01, 6.11526210e+01, 4.31782642e+01],\n         [1.49664177e+02, 5.81577124e+01, 2.50994024e+02],\n         [2.50301816e+02, 2.38937500e+02, 8.68150911e+01],\n         [9.90382585e+01, 1.03171898e+02, 1.09577475e+01],\n         [2.44784958e+02, 1.43448474e+02, 1.35869964e+02],\n         [2.09327306e+02, 5.38323911e+01, 1.05824474e+02]],\n\n        [[1.24445271e+02, 1.80327802e+02, 2.13442096e+02],\n         [1.67605482e+02, 1.55440951e+02, 1.41500264e+02],\n         [2.16615245e+02, 1.07655987e+02, 3.65760543e+01],\n         [3.65953196e+01, 3.61247180e+01, 3.88384293e+01],\n         [1.32271318e+02, 1.14678179e+01, 1.22773703e+02],\n         [1.59711020e+02, 4.27580299e+01, 7.86325407e+01],\n         [1.72936423e+02, 2.25709221e+02, 3.39907602e+01],\n         [2.16865863e+02, 6.36076998e+01, 2.25904749e+02],\n         [2.31684774e+02, 8.96254247e+01, 9.20761443e+01],\n         [3.27749944e+01, 7.43301923e+01, 2.06710126e+02]],\n\n        [[1.34822665e+02, 1.88016088e+02, 2.36963866e+02],\n         [2.44485658e+02, 1.12618983e+02, 2.50515320e+02],\n         [9.42515349e+01, 5.98430209e+01, 1.43346158e+02],\n         [1.43155349e+02, 2.88074764e+01, 7.73374104e+00],\n         [1.70716771e+02, 8.52157905e-02, 1.95527413e+02],\n         [1.66940009e+02, 2.08628214e+02, 1.62727309e+02],\n         [1.41741835e+02, 5.01253107e+01, 8.19904658e+01],\n         [1.29133380e+02, 5.07157114e+01, 2.03838770e+02],\n         [9.11304406e+01, 1.00462351e+02, 2.46413712e+02],\n         [2.05395821e+01, 1.75709967e+02, 2.34003188e+02]],\n\n        [[1.95374979e+02, 2.16523266e+01, 2.91430993e+01],\n         [1.85674263e+02, 1.74713835e+02, 1.69380896e+02],\n         [1.14666774e+02, 2.41892305e+02, 2.26664150e+02],\n         [1.57395676e+02, 4.21353408e+01, 1.33983787e+02],\n         [3.88621463e+01, 1.24371581e+02, 8.28708737e+01],\n         [1.23478976e+02, 1.79835274e+02, 2.38713074e+02],\n         [4.00931802e+01, 2.22714323e+02, 7.60062079e+00],\n         [4.29549196e+01, 8.53672907e+01, 2.26522235e+02],\n         [2.48900103e+02, 7.95447968e+01, 1.98766788e+02],\n         [1.71189265e+02, 1.18583538e+02, 1.09773552e+02]],\n\n        [[4.23737680e+01, 5.92193851e+01, 2.45940244e+02],\n         [1.36992872e+02, 1.23001344e+02, 1.12076436e+02],\n         [8.16157518e+01, 4.32115296e+00, 9.86394235e+01],\n         [7.33259967e+01, 2.04635033e+02, 2.27569380e+02],\n         [5.04032837e+01, 3.11332489e+01, 8.06676861e+01],\n         [2.54785699e+02, 6.78146253e+01, 4.33069019e+01],\n         [1.74621434e+02, 1.05073107e+02, 1.22740725e+01],\n         [1.91988007e+02, 3.90711654e+01, 4.50388170e+01],\n         [1.37261083e+01, 5.54517223e+01, 7.29032761e+01],\n         [2.15669805e+02, 2.38953240e+02, 1.79560722e+02]]],\n\n\n       [[[2.11465819e+01, 3.60732396e+00, 1.49692766e+02],\n         [2.42330377e+02, 6.36293198e+01, 1.25550877e+02],\n         [1.81082766e+02, 4.25213874e+01, 1.97331688e+01],\n         [1.65683612e+02, 7.89434629e+01, 1.85505809e+01],\n         [2.00520121e+02, 2.06251577e+02, 1.06948677e+02],\n         [1.38926667e+02, 1.49316043e+02, 1.29460961e+02],\n         [2.22353530e+02, 1.09777696e+02, 5.97995617e+01],\n         [1.74678983e+01, 2.14361202e+02, 3.62344935e+01],\n         [2.31697750e+02, 3.35557555e+01, 7.47328600e+00],\n         [3.95702850e+01, 5.09920338e+01, 6.10737113e+01]],\n\n        [[2.18830254e+02, 6.83023129e+01, 4.93740615e+01],\n         [1.27637323e+02, 1.20831350e+02, 2.18501948e+02],\n         [2.12243045e+02, 2.04876029e+01, 4.67581820e+01],\n         [1.41591635e+02, 1.00165275e+02, 1.65184949e+02],\n         [1.76876774e+02, 4.96603170e+01, 2.07080675e+02],\n         [1.35021719e+02, 1.31564985e+02, 1.82826046e+02],\n         [5.69426599e+00, 7.03233834e+01, 1.03604611e+02],\n         [2.47795846e+02, 2.43237574e+02, 5.05585400e+01],\n         [1.08021037e+02, 1.18565358e+02, 1.36497363e+02],\n         [9.17506990e+00, 7.57293636e+01, 2.38140647e+01]],\n\n        [[2.15008126e+02, 1.33925962e+02, 1.52544973e+02],\n         [1.43066821e+02, 1.74702110e+02, 1.10003104e+02],\n         [4.37684678e-02, 8.50527637e+01, 2.54426433e+02],\n         [1.49761206e+02, 1.34672552e+02, 2.22157939e+02],\n         [6.33983134e+01, 2.21700057e+02, 1.67372218e+00],\n         [2.10031219e+02, 1.93905797e+02, 1.60020085e+02],\n         [1.98636374e+02, 1.78189998e+02, 2.09139704e+02],\n         [7.93441500e+01, 4.69589739e+00, 2.33869523e+01],\n         [9.91196259e+01, 7.10515714e+01, 5.96167092e+01],\n         [1.70662983e+02, 1.81941145e+02, 2.37784058e+02]],\n\n        [[1.42171718e+02, 2.36244796e+02, 2.34221822e+02],\n         [2.89661723e+01, 1.89536388e+02, 1.34941468e+02],\n         [2.24996230e+02, 2.04667125e+02, 7.86516436e+01],\n         [1.87865939e+02, 1.98617002e+02, 1.59463239e+02],\n         [2.20065625e+02, 1.00674234e+02, 2.11352801e+02],\n         [9.69597343e+01, 2.56759856e+01, 1.25022327e+02],\n         [2.53858082e+02, 3.98498313e+01, 2.18682612e+02],\n         [2.32119759e+02, 4.75946078e+00, 1.81380159e+01],\n         [2.18397447e+02, 2.20755520e+02, 1.36045617e+02],\n         [5.22350403e+01, 1.54485590e+02, 1.08479633e+02]],\n\n        [[8.72153218e+01, 5.53915903e+01, 9.33694979e+01],\n         [2.45032941e+02, 6.82720796e+01, 4.52584327e+01],\n         [2.18707920e+02, 9.54916202e+01, 2.28914601e+01],\n         [1.63746105e+02, 2.25900968e+02, 1.41831884e+02],\n         [4.33382016e-01, 4.06514992e+00, 4.93639441e+01],\n         [1.42001658e+02, 8.40065572e+01, 2.45126781e+01],\n         [1.24200657e+02, 2.46557226e+01, 1.42052681e+02],\n         [2.44179819e+01, 2.20636346e+02, 1.12294898e+02],\n         [1.72077324e+02, 9.96164670e+00, 1.69880937e+02],\n         [1.25904082e+02, 8.82725447e+01, 2.20008004e+02]],\n\n        [[5.50305725e+01, 5.14353026e+01, 4.76658034e+01],\n         [1.75452719e+02, 1.80664419e+02, 9.75926165e+01],\n         [1.37166487e+02, 2.97839064e+00, 2.53523907e+01],\n         [1.01352761e+02, 8.88685922e+00, 1.37069866e+02],\n         [1.85156454e+02, 4.22068853e+01, 1.28802954e+02],\n         [1.87718731e+02, 1.43542425e+02, 1.53439354e+02],\n         [1.80480796e+02, 1.34363292e+02, 7.15663038e+01],\n         [2.24996554e+02, 7.27599514e+00, 1.70713642e+02],\n         [5.59088912e+01, 6.20439962e+01, 1.53391092e+02],\n         [2.75993406e+01, 7.74387556e+01, 2.29100973e+02]],\n\n        [[1.97745368e+01, 9.00105539e+01, 6.03674448e+01],\n         [1.88342708e+02, 1.92941253e+02, 4.68275632e+01],\n         [3.21982407e+01, 1.69823238e+02, 2.40093626e+02],\n         [2.28341982e+01, 1.18150396e+02, 5.65501650e+01],\n         [4.08497350e+01, 9.06024311e+00, 2.65592291e+00],\n         [5.95633293e+01, 2.27956931e+02, 5.42076722e+01],\n         [1.38947217e+02, 7.73223726e+01, 3.43129324e+01],\n         [5.68119307e+01, 2.49825400e+02, 4.74319216e+01],\n         [7.14302593e+01, 8.94850470e+01, 7.05293640e+01],\n         [1.69899375e+02, 1.01477256e+02, 3.03738391e+01]],\n\n        [[2.67206195e+00, 2.44780105e+02, 4.90930747e+01],\n         [1.80239227e+01, 3.67267839e+01, 2.34226072e+02],\n         [1.26688473e+02, 8.69334716e+01, 2.12254284e+02],\n         [6.66046893e+01, 1.90601035e+02, 1.34043602e+02],\n         [5.78857205e+01, 2.03769012e+02, 1.81995141e+02],\n         [9.55961841e+01, 1.29024934e+02, 2.00420344e+02],\n         [5.98830373e+01, 1.35666628e+02, 1.41801310e+02],\n         [1.99553260e+02, 2.52803261e+02, 2.18248071e+02],\n         [1.08209761e+02, 7.00191494e+01, 2.50060830e+02],\n         [1.57068865e+02, 1.55458014e+01, 3.59252181e+01]],\n\n        [[7.72996388e+01, 3.22149854e+01, 1.51397983e+02],\n         [1.32049710e+02, 2.18356263e+02, 1.57593610e+02],\n         [2.52280644e+02, 3.77151084e+01, 1.90577752e+02],\n         [4.25987580e+00, 3.01147563e+01, 8.62295076e+01],\n         [1.09511735e+02, 1.18933207e+02, 3.81691841e+00],\n         [2.16600687e+02, 1.29304164e+02, 9.65856541e+01],\n         [1.17394285e+02, 2.16022406e+02, 1.52971334e+01],\n         [1.44146468e+02, 6.33950757e+01, 2.03983929e+02],\n         [2.52086348e+02, 1.49374633e+02, 1.48528841e+02],\n         [2.51234967e+02, 2.43818814e+02, 2.54245756e+02]],\n\n        [[1.74559949e+02, 1.04663210e+02, 2.33267346e+02],\n         [1.65204336e+02, 4.51512531e+01, 2.32376912e+02],\n         [2.53508745e+02, 1.36693836e+02, 2.64733637e+01],\n         [2.24847913e+02, 9.29206734e+01, 5.37228597e+01],\n         [1.34981683e+02, 2.05132573e+02, 1.20321191e+02],\n         [4.71611174e+01, 7.23281917e+01, 7.67666293e+01],\n         [8.14984576e+01, 7.23201348e+01, 2.20765848e+02],\n         [1.41960908e+02, 6.08239448e+00, 1.00915171e+02],\n         [1.22899640e+02, 1.25258775e+02, 2.39224424e+02],\n         [8.91502030e+01, 3.59045511e+01, 1.58205154e+02]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9c74e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ 1.08753242e+02, -8.20807800e+01, -8.92450256e+01],\n         [ 7.32458878e+01, -4.03997040e+01,  9.73382339e+01],\n         [ 1.08311462e+01,  8.80860519e+01, -1.22881859e+02],\n         [ 1.37197296e+02,  6.00890350e+00, -9.07240753e+01],\n         [-8.72436447e+01,  6.02262344e+01,  1.17205788e+02],\n         [ 4.13760452e+01, -9.72149200e+01, -5.20942230e+01],\n         [ 9.25969467e+01, -3.67679214e+01, -6.02272797e+00],\n         [-6.61111755e+01, -8.75573196e+01, -6.07445869e+01],\n         [-3.61344070e+01,  8.68306808e+01,  9.67456741e+01],\n         [ 5.20657883e+01, -9.44142685e+01, -9.94099121e+01]],\n\n        [[ 5.72262573e+00, -7.77850037e+01, -1.00133354e+02],\n         [ 6.77204819e+01,  1.31355316e+02,  2.71179733e+01],\n         [ 9.68564606e+00,  1.15664139e+01,  1.24436348e+02],\n         [ 8.28456192e+01,  1.13121773e+02, -8.84666901e+01],\n         [-8.42737274e+01,  4.49276733e+00, -5.34867783e+01],\n         [ 1.01060631e+02, -5.09758530e+01, -9.30931244e+01],\n         [-1.22774734e+01, -2.40474701e+00,  1.24647514e+02],\n         [-6.99624634e+01, -8.71513519e+01,  9.23781509e+01],\n         [ 1.17967705e+02, -4.24813538e+01,  1.28776855e+02],\n         [ 9.88911667e+01, -3.56656647e+01, -5.15876846e+01]],\n\n        [[ 1.60651016e+01, -2.37145386e+01, -7.86395950e+01],\n         [-6.90253220e+01,  1.36837372e+02, -9.10142670e+01],\n         [ 1.22666420e+02, -8.02898712e+01,  1.23632973e+02],\n         [ 1.01237617e+02,  1.86242599e+01, -5.77527618e+00],\n         [ 1.73925781e+01,  2.71026688e+01, -5.17425537e-02],\n         [-3.52726746e+01, -7.67677078e+01, -1.12611282e+02],\n         [ 4.57337265e+01,  1.54208145e+01,  9.14762955e+01],\n         [ 1.04986824e+02,  4.29079971e+01,  7.88174973e+01],\n         [ 1.24772835e+02,  1.03534966e+02, -5.43272324e+01],\n         [ 6.87803726e+01, -5.69789810e+01, -2.40286331e+01]],\n\n        [[ 2.22912292e+01,  4.95690231e+01,  3.52197647e+01],\n         [ 1.08684105e+02,  1.28333099e+02, -9.30004883e+01],\n         [ 1.77839890e+01, -8.05916138e+01,  4.13720322e+01],\n         [ 7.69865494e+01,  4.51206970e+00, -2.26416473e+01],\n         [ 1.92380295e+01, -8.76546249e+01, -1.12290161e+02],\n         [ 1.14699562e+02,  2.78727341e+01, -5.62706833e+01],\n         [ 1.16305717e+02,  4.23522110e+01,  4.28533249e+01],\n         [-2.04531479e+01,  1.79692001e+01, -9.78156815e+01],\n         [ 1.32427277e+02, -1.09469635e+02,  1.19355522e+02],\n         [-1.08171463e+01, -3.92366180e+01,  4.92002487e+01]],\n\n        [[ 3.22645340e+01,  7.54881058e+01,  7.96724167e+01],\n         [-5.47451019e+01,  5.70161514e+01,  8.73049164e+00],\n         [-5.01692772e+01,  2.69830246e+01,  8.14945602e+01],\n         [ 3.86500320e+01, -6.62886200e+01, -1.22650970e+02],\n         [-4.01826935e+01, -2.62303238e+01, -7.64677887e+01],\n         [ 7.09201584e+01,  3.23974686e+01, -1.15156647e+02],\n         [-5.43301239e+01,  1.35972565e+02,  1.10002892e+02],\n         [ 1.28973419e+02,  1.28703705e+02, -1.28605957e+01],\n         [ 9.98040237e+01, -6.21162491e+01, -1.04763489e+01],\n         [-1.53821869e+01, -3.83887482e+00, -4.69976730e+01]],\n\n        [[-9.75193863e+01,  7.25432587e+00, -4.15612259e+01],\n         [-1.12372665e+01, -3.70978851e+01,  4.88391495e+01],\n         [-8.83538666e+01, -1.03395813e+02,  2.13499374e+01],\n         [ 3.37760544e+01, -3.20264587e+01,  1.28148682e+02],\n         [-6.07607384e+01, -5.56263771e+01, -4.72934570e+01],\n         [ 1.47055023e+02, -5.86212883e+01,  2.59841690e+01],\n         [-1.71239090e+01,  1.22158501e+02,  1.26621819e+02],\n         [-9.29812546e+01, -1.36071014e+01, -2.46417389e+01],\n         [ 3.19309616e+01,  2.66694717e+01,  1.21104958e+02],\n         [ 1.88546753e+00, -6.29466095e+01,  8.56473007e+01]],\n\n        [[ 1.09503090e+02,  6.35488052e+01,  7.65274048e-01],\n         [ 3.75612564e+01,  3.86619492e+01,  4.39254837e+01],\n         [-6.73629456e+01, -9.12301636e+00,  9.29352493e+01],\n         [-6.51005707e+01, -8.06542816e+01, -8.70846863e+01],\n         [ 1.88347015e+01, -1.05311180e+02,  8.59131622e+00],\n         [-2.53064651e+01, -7.40209656e+01,  3.60310135e+01],\n         [-6.99482422e+01,  1.08930229e+02,  4.92564163e+01],\n         [ 1.21965752e+02, -5.31712990e+01,  9.31858597e+01],\n         [-1.18628616e+01, -2.71535721e+01,  1.08004768e+02],\n         [ 1.02771126e+02, -4.24488068e+01, -9.09050064e+01]],\n\n        [[ 1.33024872e+02,  7.12370834e+01,  1.11426620e+01],\n         [ 1.46576324e+02, -4.16001892e+00,  1.20805656e+02],\n         [ 3.94071579e+01, -5.69359779e+01, -2.94284668e+01],\n         [-9.62052612e+01, -8.79715271e+01,  1.94753494e+01],\n         [ 9.15884171e+01, -1.16693787e+02,  4.70367661e+01],\n         [ 5.87883072e+01,  9.18492203e+01,  4.32600021e+01],\n         [-2.19485397e+01, -6.66536865e+01,  1.80618362e+01],\n         [ 9.98997726e+01, -6.60632935e+01,  5.45337677e+00],\n         [ 1.42474701e+02, -1.63166504e+01, -3.25495605e+01],\n         [ 1.30064178e+02,  5.89309616e+01, -1.03140419e+02]],\n\n        [[-7.47959061e+01, -9.51266708e+01,  7.16949844e+01],\n         [ 6.54418869e+01,  5.79348373e+01,  6.19942551e+01],\n         [ 1.22725151e+02,  1.25113304e+02, -9.01322937e+00],\n         [ 3.00447769e+01, -7.46436615e+01,  3.37156754e+01],\n         [-2.10681305e+01,  7.59258270e+00, -8.48178558e+01],\n         [ 1.34774078e+02,  6.30562820e+01, -2.01026917e-01],\n         [-9.63383789e+01,  1.05935326e+02, -8.35868225e+01],\n         [ 1.22583229e+02, -3.14117050e+01, -8.07250824e+01],\n         [ 9.48277817e+01, -3.72341995e+01,  1.25220100e+02],\n         [ 5.83454895e+00,  1.80454254e+00,  4.75092697e+01]],\n\n        [[ 1.42001251e+02, -5.75596161e+01, -8.13062286e+01],\n         [ 8.13743591e+00,  6.22234344e+00,  1.33128738e+01],\n         [-5.29957581e+00, -1.12457848e+02, -4.20642471e+01],\n         [ 1.23630379e+02,  8.78560410e+01, -5.03540039e+01],\n         [-2.32713165e+01, -8.56457520e+01, -7.32767181e+01],\n         [-6.06321030e+01, -4.89643707e+01,  1.31105713e+02],\n         [-9.16649323e+01, -1.17058945e+01,  5.09414291e+01],\n         [-5.89001846e+01, -7.77078323e+01,  6.83080063e+01],\n         [-3.10357285e+01, -6.13272781e+01, -1.09953888e+02],\n         [ 7.56217117e+01,  1.22174248e+02,  9.19897995e+01]]],\n\n\n       [[[ 4.57537613e+01, -1.13171677e+02, -1.02533417e+02],\n         [ 2.16118698e+01, -5.31496811e+01,  1.18650383e+02],\n         [-8.42058334e+01, -7.42576141e+01,  5.74027634e+01],\n         [-8.53884201e+01, -3.78355331e+01,  4.20036087e+01],\n         [ 3.00967407e+00,  8.94725723e+01,  7.68401260e+01],\n         [ 2.55219650e+01,  3.25370407e+01,  1.52466660e+01],\n         [-4.41394424e+01, -7.00130463e+00,  9.86735306e+01],\n         [-6.77045135e+01,  9.75822067e+01, -1.06212105e+02],\n         [-9.64657135e+01, -8.32232437e+01,  1.08017754e+02],\n         [-4.28652916e+01, -6.57869644e+01, -8.41097107e+01]],\n\n        [[-5.45649414e+01, -4.84766846e+01,  9.51502457e+01],\n         [ 1.14562950e+02,  4.05235291e+00,  3.95732117e+00],\n         [-5.71808205e+01, -9.62913971e+01,  8.85630417e+01],\n         [ 6.12459488e+01, -1.66137238e+01,  1.79116287e+01],\n         [ 1.03141670e+02, -6.71186829e+01,  5.31967697e+01],\n         [ 7.88870468e+01,  1.47859879e+01,  1.13417130e+01],\n         [-3.34388733e-01, -4.64556122e+01, -1.17985733e+02],\n         [-5.33804626e+01,  1.26458580e+02,  1.24115852e+02],\n         [ 3.25583572e+01,  1.78636169e+00, -1.56589661e+01],\n         [-8.01249390e+01, -4.10496368e+01, -1.14504929e+02]],\n\n        [[ 4.86059647e+01,  1.71469650e+01,  9.13281326e+01],\n         [ 6.06410217e+00,  5.79231033e+01,  1.93868179e+01],\n         [ 1.50487427e+02, -3.17262344e+01, -1.23636230e+02],\n         [ 1.18218941e+02,  1.78935471e+01,  2.60811996e+01],\n         [-1.02265282e+02,  1.04921059e+02, -6.02816887e+01],\n         [ 5.60810776e+01,  7.71267929e+01,  8.63512192e+01],\n         [ 1.05200706e+02,  6.14110031e+01,  7.49563675e+01],\n         [-8.05520477e+01, -1.12083099e+02, -4.43358536e+01],\n         [-4.43222923e+01, -4.57274246e+01, -2.45603714e+01],\n         [ 1.33845062e+02,  6.51621475e+01,  4.69829788e+01]],\n\n        [[ 1.30282806e+02,  1.19465797e+02,  1.84917221e+01],\n         [ 3.10024643e+01,  7.27573929e+01, -9.47138290e+01],\n         [-2.52873611e+01,  8.78881302e+01,  1.01316231e+02],\n         [ 5.55242386e+01,  8.18380051e+01,  6.41859360e+01],\n         [ 1.07413795e+02, -1.61047668e+01,  9.63856277e+01],\n         [ 2.10833282e+01, -9.11030121e+01, -2.67202682e+01],\n         [ 1.14743614e+02, -7.69291687e+01,  1.30178070e+02],\n         [-8.58009872e+01, -1.12019539e+02,  1.08439766e+02],\n         [ 3.21066208e+01,  1.03976524e+02,  9.47174454e+01],\n         [ 4.54062653e+00,  3.77065964e+01, -7.14449615e+01]],\n\n        [[-1.05695038e+01, -6.13874092e+01, -3.64646759e+01],\n         [-5.86805687e+01, -4.85069199e+01,  1.21352943e+02],\n         [-8.10475464e+01, -2.12873764e+01,  9.50279160e+01],\n         [ 3.78928757e+01,  1.09121971e+02,  4.00661087e+01],\n         [-5.45750580e+01, -1.12713852e+02, -1.23246620e+02],\n         [-7.94263229e+01, -3.27724457e+01,  1.83216629e+01],\n         [ 3.81136703e+01, -9.21232758e+01,  5.20652771e-01],\n         [ 8.35589600e+00,  1.03857353e+02, -9.92620163e+01],\n         [ 6.59419327e+01, -1.06817352e+02,  4.83973160e+01],\n         [ 1.16069008e+02, -2.85064545e+01,  2.22408295e+00]],\n\n        [[-5.62732010e+01, -6.53436966e+01, -6.86494293e+01],\n         [-6.34638977e+00,  6.38854141e+01,  5.17727127e+01],\n         [-7.85866089e+01, -1.13800606e+02,  1.34864883e+01],\n         [ 3.31308670e+01, -1.07892143e+02, -2.23272400e+01],\n         [ 2.48639450e+01, -7.45721130e+01,  6.14764481e+01],\n         [ 4.95003586e+01,  2.67634201e+01,  6.40387344e+01],\n         [-3.23726959e+01,  1.75842972e+01,  5.68007889e+01],\n         [ 6.67746353e+01, -1.09503006e+02,  1.01316551e+02],\n         [ 4.94520950e+01, -5.47350044e+01, -6.77711105e+01],\n         [ 1.25161964e+02, -3.93402405e+01, -9.60806580e+01]],\n\n        [[-4.35715599e+01, -2.67684479e+01, -1.03905464e+02],\n         [-5.71114388e+01,  7.61622543e+01,  6.46627121e+01],\n         [ 1.36154633e+02,  5.30442429e+01, -9.14817581e+01],\n         [-4.73888397e+01,  1.37139893e+00, -1.00845802e+02],\n         [-1.01283081e+02, -1.07718758e+02, -8.28302612e+01],\n         [-4.97313309e+01,  1.11177925e+02, -6.41166687e+01],\n         [-6.96260681e+01, -3.94566269e+01,  1.52672195e+01],\n         [-5.65070801e+01,  1.33046387e+02, -6.68680725e+01],\n         [-3.34096375e+01, -2.72939529e+01, -5.22497406e+01],\n         [-7.35651627e+01, -1.53017426e+01,  4.62193680e+01]],\n\n        [[-5.48459282e+01,  1.28001099e+02, -1.21007935e+02],\n         [ 1.30287079e+02, -8.00522156e+01, -1.05656082e+02],\n         [ 1.08315285e+02, -2.98455276e+01,  3.00847626e+00],\n         [ 3.01045914e+01,  7.38220291e+01, -5.70753098e+01],\n         [ 7.80561447e+01,  8.69900131e+01, -6.57942810e+01],\n         [ 9.64813461e+01,  1.22459335e+01, -2.80838165e+01],\n         [ 3.78623123e+01,  1.88876266e+01, -6.37969627e+01],\n         [ 1.14309074e+02,  1.36024261e+02,  7.58732529e+01],\n         [ 1.46121826e+02, -4.67598495e+01, -1.54702377e+01],\n         [-6.80137863e+01, -1.01233200e+02,  3.33888626e+01]],\n\n        [[ 4.74589767e+01, -8.45640106e+01, -4.63803635e+01],\n         [ 5.36546097e+01,  1.01577263e+02,  8.36971283e+00],\n         [ 8.66387558e+01, -7.90638885e+01,  1.28600647e+02],\n         [-1.77094955e+01, -8.66642456e+01, -1.19420128e+02],\n         [-1.00122086e+02,  2.15420532e+00, -1.41682663e+01],\n         [-7.35334778e+00,  1.25251694e+01,  9.29206924e+01],\n         [-8.86418686e+01,  9.92434006e+01, -6.28571320e+00],\n         [ 1.00044930e+02, -5.33839226e+01,  2.04664688e+01],\n         [ 4.45898361e+01,  3.25956345e+01,  1.28406342e+02],\n         [ 1.50306763e+02,  1.27039818e+02,  1.27554970e+02]],\n\n        [[ 1.29328339e+02, -1.21157913e+01,  5.08799515e+01],\n         [ 1.28437897e+02, -7.16277466e+01,  4.15243301e+01],\n         [-7.74656372e+01,  1.99148331e+01,  1.29828735e+02],\n         [-5.02161446e+01, -2.38583221e+01,  1.01167915e+02],\n         [ 1.63821869e+01,  8.83535690e+01,  1.13016891e+01],\n         [-2.71723709e+01, -4.44508057e+01, -7.65188828e+01],\n         [ 1.16826851e+02, -4.44588623e+01, -4.21815414e+01],\n         [-3.02383423e+00, -1.10696602e+02,  1.82809067e+01],\n         [ 1.35285431e+02,  8.47977448e+00, -7.80357361e-01],\n         [ 5.42661514e+01, -8.08744507e+01, -3.45298004e+01]]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea09c10>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 34,  34, 212],\n         [221,  76, 177],\n         [  0, 204, 114],\n         [ 32, 122, 241],\n         [240, 177,  16],\n         [ 71,  19, 145],\n         [117,  80, 196],\n         [ 62,  29,  37],\n         [220, 203,  67],\n         [ 24,  22, 156]],\n\n        [[ 23,  38, 109],\n         [150, 248, 171],\n         [248, 128, 113],\n         [ 35, 229, 186],\n         [ 70, 121,  19],\n         [ 30,  65, 204],\n         [248, 114,  91],\n         [216,  29,  33],\n         [252,  74, 221],\n         [ 72,  81, 202]],\n\n        [[ 45,  93, 120],\n         [ 32, 253,  34],\n         [247,  36, 226],\n         [117, 135, 205],\n         [123, 143, 121],\n         [ 11,  40,  68],\n         [215, 132, 149],\n         [202, 159, 208],\n         [ 69, 220, 228],\n         [ 99,  59, 172]],\n\n        [[158, 166, 126],\n         [ 30, 245, 212],\n         [165,  36, 121],\n         [101, 121, 180],\n         [ 11,  29, 123],\n         [ 67, 144, 218],\n         [166, 159, 220],\n         [ 25, 134,  83],\n         [243,   7, 236],\n         [172,  77,  93]],\n\n        [[203, 192, 136],\n         [132, 173,  49],\n         [205, 143,  53],\n         [  1,  50, 142],\n         [ 47,  90,  63],\n         [  8, 149, 174],\n         [233, 252,  49],\n         [110, 245, 232],\n         [113,  54, 203],\n         [ 76, 112,  88]],\n\n        [[ 82, 124,   6],\n         [172,  79,  92],\n         [145,  13,  15],\n         [251,  84, 137],\n         [ 76,  61,  43],\n         [149,  58, 250],\n         [250, 238,  86],\n         [ 99, 103,  10],\n         [244, 143, 135],\n         [209,  53, 105]],\n\n        [[124, 180, 213],\n         [167, 155, 141],\n         [216, 107,  36],\n         [ 36,  36,  38],\n         [132,  11, 122],\n         [159,  42,  78],\n         [172, 225,  33],\n         [216,  63, 225],\n         [231,  89,  92],\n         [ 32,  74, 206]],\n\n        [[134, 188, 236],\n         [244, 112, 250],\n         [ 94,  59, 143],\n         [143,  28,   7],\n         [170,   0, 195],\n         [166, 208, 162],\n         [141,  50,  81],\n         [129,  50, 203],\n         [ 91, 100, 246],\n         [ 20, 175, 234]],\n\n        [[195,  21,  29],\n         [185, 174, 169],\n         [114, 241, 226],\n         [157,  42, 133],\n         [ 38, 124,  82],\n         [123, 179, 238],\n         [ 40, 222,   7],\n         [ 42,  85, 226],\n         [248,  79, 198],\n         [171, 118, 109]],\n\n        [[ 42,  59, 245],\n         [136, 123, 112],\n         [ 81,   4,  98],\n         [ 73, 204, 227],\n         [ 50,  31,  80],\n         [254,  67,  43],\n         [174, 105,  12],\n         [191,  39,  45],\n         [ 13,  55,  72],\n         [215, 238, 179]]],\n\n\n       [[[ 21,   3, 149],\n         [242,  63, 125],\n         [181,  42,  19],\n         [165,  78,  18],\n         [200, 206, 106],\n         [138, 149, 129],\n         [222, 109,  59],\n         [ 17, 214,  36],\n         [231,  33,   7],\n         [ 39,  50,  61]],\n\n        [[218,  68,  49],\n         [127, 120, 218],\n         [212,  20,  46],\n         [141, 100, 165],\n         [176,  49, 207],\n         [135, 131, 182],\n         [  5,  70, 103],\n         [247, 243,  50],\n         [108, 118, 136],\n         [  9,  75,  23]],\n\n        [[215, 133, 152],\n         [143, 174, 110],\n         [  0,  85, 254],\n         [149, 134, 222],\n         [ 63, 221,   1],\n         [210, 193, 160],\n         [198, 178, 209],\n         [ 79,   4,  23],\n         [ 99,  71,  59],\n         [170, 181, 237]],\n\n        [[142, 236, 234],\n         [ 28, 189, 134],\n         [224, 204,  78],\n         [187, 198, 159],\n         [220, 100, 211],\n         [ 96,  25, 125],\n         [253,  39, 218],\n         [232,   4,  18],\n         [218, 220, 136],\n         [ 52, 154, 108]],\n\n        [[ 87,  55,  93],\n         [245,  68,  45],\n         [218,  95,  22],\n         [163, 225, 141],\n         [  0,   4,  49],\n         [142,  84,  24],\n         [124,  24, 142],\n         [ 24, 220, 112],\n         [172,   9, 169],\n         [125,  88, 220]],\n\n        [[ 55,  51,  47],\n         [175, 180,  97],\n         [137,   2,  25],\n         [101,   8, 137],\n         [185,  42, 128],\n         [187, 143, 153],\n         [180, 134,  71],\n         [224,   7, 170],\n         [ 55,  62, 153],\n         [ 27,  77, 229]],\n\n        [[ 19,  90,  60],\n         [188, 192,  46],\n         [ 32, 169, 240],\n         [ 22, 118,  56],\n         [ 40,   9,   2],\n         [ 59, 227,  54],\n         [138,  77,  34],\n         [ 56, 249,  47],\n         [ 71,  89,  70],\n         [169, 101,  30]],\n\n        [[  2, 244,  49],\n         [ 18,  36, 234],\n         [126,  86, 212],\n         [ 66, 190, 134],\n         [ 57, 203, 181],\n         [ 95, 129, 200],\n         [ 59, 135, 141],\n         [199, 252, 218],\n         [108,  70, 250],\n         [157,  15,  35]],\n\n        [[ 77,  32, 151],\n         [132, 218, 157],\n         [252,  37, 190],\n         [  4,  30,  86],\n         [109, 118,   3],\n         [216, 129,  96],\n         [117, 216,  15],\n         [144,  63, 203],\n         [252, 149, 148],\n         [251, 243, 254]],\n\n        [[174, 104, 233],\n         [165,  45, 232],\n         [253, 136,  26],\n         [224,  92,  53],\n         [134, 205, 120],\n         [ 47,  72,  76],\n         [ 81,  72, 220],\n         [141,   6, 100],\n         [122, 125, 239],\n         [ 89,  35, 158]]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9c73f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ 108.061    ,  -82.779    ,  -89.68     ],\n         [  73.061    ,  -40.779    ,   97.32     ],\n         [  10.060997 ,   87.221    , -123.68     ],\n         [ 137.061    ,    5.2210007,  -91.68     ],\n         [ -87.939    ,   60.221    ,  116.32     ],\n         [  41.060997 ,  -97.779    ,  -52.68     ],\n         [  92.061    ,  -36.779    ,   -6.6800003],\n         [ -66.939    ,  -87.779    ,  -61.68     ],\n         [ -36.939003 ,   86.221    ,   96.32     ],\n         [  52.060997 ,  -94.779    ,  -99.68     ]],\n\n        [[   5.060997 ,  -78.779    , -100.68     ],\n         [  67.061    ,  131.22101  ,   26.32     ],\n         [   9.060997 ,   11.221001 ,  124.32     ],\n         [  82.061    ,  112.221    ,  -88.68     ],\n         [ -84.939    ,    4.2210007,  -53.68     ],\n         [ 100.061    ,  -51.779    ,  -93.68     ],\n         [ -12.939003 ,   -2.7789993,  124.32     ],\n         [ -70.939    ,  -87.779    ,   92.32     ],\n         [ 117.061    ,  -42.779    ,  128.32     ],\n         [  98.061    ,  -35.779    ,  -51.68     ]],\n\n        [[  16.060997 ,  -23.779    ,  -78.68     ],\n         [ -69.939    ,  136.22101  ,  -91.68     ],\n         [ 122.061    ,  -80.779    ,  123.32     ],\n         [ 101.061    ,   18.221    ,   -6.6800003],\n         [  17.060997 ,   26.221    ,   -0.6800003],\n         [ -35.939003 ,  -76.779    , -112.68     ],\n         [  45.060997 ,   15.221001 ,   91.32     ],\n         [ 104.061    ,   42.221    ,   78.32     ],\n         [ 124.061    ,  103.221    ,  -54.68     ],\n         [  68.061    ,  -57.779    ,  -24.68     ]],\n\n        [[  22.060997 ,   49.221    ,   34.32     ],\n         [ 108.061    ,  128.22101  ,  -93.68     ],\n         [  17.060997 ,  -80.779    ,   41.32     ],\n         [  76.061    ,    4.2210007,  -22.68     ],\n         [  19.060997 ,  -87.779    , -112.68     ],\n         [ 114.061    ,   27.221    ,  -56.68     ],\n         [ 116.061    ,   42.221    ,   42.32     ],\n         [ -20.939003 ,   17.221    ,  -98.68     ],\n         [ 132.061    , -109.779    ,  119.32     ],\n         [ -10.939003 ,  -39.779    ,   48.32     ]],\n\n        [[  32.060997 ,   75.221    ,   79.32     ],\n         [ -54.939003 ,   56.221    ,    8.32     ],\n         [ -50.939003 ,   26.221    ,   81.32     ],\n         [  38.060997 ,  -66.779    , -122.68     ],\n         [ -40.939003 ,  -26.779    ,  -76.68     ],\n         [  70.061    ,   32.221    , -115.68     ],\n         [ -54.939003 ,  135.22101  ,  109.32     ],\n         [ 128.061    ,  128.22101  ,  -13.68     ],\n         [  99.061    ,  -62.779    ,  -10.68     ],\n         [ -15.939003 ,   -4.7789993,  -47.68     ]],\n\n        [[ -97.939    ,    7.2210007,  -41.68     ],\n         [ -11.939003 ,  -37.779    ,   48.32     ],\n         [ -88.939    , -103.779    ,   21.32     ],\n         [  33.060997 ,  -32.779    ,  127.32     ],\n         [ -60.939003 ,  -55.779    ,  -47.68     ],\n         [ 146.061    ,  -58.779    ,   25.32     ],\n         [ -17.939003 ,  121.221    ,  126.32     ],\n         [ -93.939    ,  -13.778999 ,  -24.68     ],\n         [  31.060997 ,   26.221    ,  120.32     ],\n         [   1.060997 ,  -63.779    ,   85.32     ]],\n\n        [[ 109.061    ,   63.221    ,    0.3199997],\n         [  37.060997 ,   38.221    ,   43.32     ],\n         [ -67.939    ,   -9.778999 ,   92.32     ],\n         [ -65.939    ,  -80.779    ,  -87.68     ],\n         [  18.060997 , -105.779    ,    8.32     ],\n         [ -25.939003 ,  -74.779    ,   35.32     ],\n         [ -70.939    ,  108.221    ,   48.32     ],\n         [ 121.061    ,  -53.779    ,   92.32     ],\n         [ -11.939003 ,  -27.779    ,  107.32     ],\n         [ 102.061    ,  -42.779    ,  -91.68     ]],\n\n        [[ 132.061    ,   71.221    ,   10.32     ],\n         [ 146.061    ,   -4.7789993,  120.32     ],\n         [  39.060997 ,  -57.779    ,  -29.68     ],\n         [ -96.939    ,  -88.779    ,   19.32     ],\n         [  91.061    , -116.779    ,   46.32     ],\n         [  58.060997 ,   91.221    ,   42.32     ],\n         [ -22.939003 ,  -66.779    ,   17.32     ],\n         [  99.061    ,  -66.779    ,    5.3199997],\n         [ 142.061    ,  -16.779    ,  -32.68     ],\n         [ 130.061    ,   58.221    , -103.68     ]],\n\n        [[ -74.939    ,  -95.779    ,   71.32     ],\n         [  65.061    ,   57.221    ,   61.32     ],\n         [ 122.061    ,  124.221    ,   -9.68     ],\n         [  29.060997 ,  -74.779    ,   33.32     ],\n         [ -21.939003 ,    7.2210007,  -85.68     ],\n         [ 134.061    ,   62.221    ,   -0.6800003],\n         [ -96.939    ,  105.221    ,  -83.68     ],\n         [ 122.061    ,  -31.779    ,  -81.68     ],\n         [  94.061    ,  -37.779    ,  124.32     ],\n         [   5.060997 ,    1.2210007,   47.32     ]],\n\n        [[ 141.061    ,  -57.779    ,  -81.68     ],\n         [   8.060997 ,    6.2210007,   12.32     ],\n         [  -5.939003 , -112.779    ,  -42.68     ],\n         [ 123.061    ,   87.221    ,  -50.68     ],\n         [ -23.939003 ,  -85.779    ,  -73.68     ],\n         [ -60.939003 ,  -49.779    ,  130.32     ],\n         [ -91.939    ,  -11.778999 ,   50.32     ],\n         [ -58.939003 ,  -77.779    ,   67.32     ],\n         [ -31.939003 ,  -61.779    , -110.68     ],\n         [  75.061    ,  121.221    ,   91.32     ]]],\n\n\n       [[[  45.060997 , -113.779    , -102.68     ],\n         [  21.060997 ,  -53.779    ,  118.32     ],\n         [ -84.939    ,  -74.779    ,   57.32     ],\n         [ -85.939    ,  -38.779    ,   41.32     ],\n         [   2.060997 ,   89.221    ,   76.32     ],\n         [  25.060997 ,   32.221    ,   14.32     ],\n         [ -44.939003 ,   -7.7789993,   98.32     ],\n         [ -67.939    ,   97.221    , -106.68     ],\n         [ -96.939    ,  -83.779    ,  107.32     ],\n         [ -42.939003 ,  -66.779    ,  -84.68     ]],\n\n        [[ -54.939003 ,  -48.779    ,   94.32     ],\n         [ 114.061    ,    3.2210007,    3.3199997],\n         [ -57.939003 ,  -96.779    ,   88.32     ],\n         [  61.060997 ,  -16.779    ,   17.32     ],\n         [ 103.061    ,  -67.779    ,   52.32     ],\n         [  78.061    ,   14.221001 ,   11.32     ],\n         [  -0.939003 ,  -46.779    , -118.68     ],\n         [ -53.939003 ,  126.221    ,  123.32     ],\n         [  32.060997 ,    1.2210007,  -15.68     ],\n         [ -80.939    ,  -41.779    , -114.68     ]],\n\n        [[  48.060997 ,   16.221    ,   91.32     ],\n         [   6.060997 ,   57.221    ,   19.32     ],\n         [ 150.061    ,  -31.779    , -123.68     ],\n         [ 118.061    ,   17.221    ,   25.32     ],\n         [-102.939    ,  104.221    ,  -60.68     ],\n         [  56.060997 ,   76.221    ,   86.32     ],\n         [ 105.061    ,   61.221    ,   74.32     ],\n         [ -80.939    , -112.779    ,  -44.68     ],\n         [ -44.939003 ,  -45.779    ,  -24.68     ],\n         [ 133.061    ,   64.221    ,   46.32     ]],\n\n        [[ 130.061    ,  119.221    ,   18.32     ],\n         [  30.060997 ,   72.221    ,  -95.68     ],\n         [ -25.939003 ,   87.221    ,  100.32     ],\n         [  55.060997 ,   81.221    ,   63.32     ],\n         [ 107.061    ,  -16.779    ,   96.32     ],\n         [  21.060997 ,  -91.779    ,  -27.68     ],\n         [ 114.061    ,  -77.779    ,  129.32     ],\n         [ -85.939    , -112.779    ,  108.32     ],\n         [  32.060997 ,  103.221    ,   94.32     ],\n         [   4.060997 ,   37.221    ,  -71.68     ]],\n\n        [[ -10.939003 ,  -61.779    ,  -36.68     ],\n         [ -58.939003 ,  -48.779    ,  121.32     ],\n         [ -81.939    ,  -21.779    ,   94.32     ],\n         [  37.060997 ,  108.221    ,   39.32     ],\n         [ -54.939003 , -112.779    , -123.68     ],\n         [ -79.939    ,  -32.779    ,   18.32     ],\n         [  38.060997 ,  -92.779    ,    0.3199997],\n         [   8.060997 ,  103.221    ,  -99.68     ],\n         [  65.061    , -107.779    ,   48.32     ],\n         [ 116.061    ,  -28.779    ,    1.3199997]],\n\n        [[ -56.939003 ,  -65.779    ,  -68.68     ],\n         [  -6.939003 ,   63.221    ,   51.32     ],\n         [ -78.939    , -114.779    ,   13.32     ],\n         [  33.060997 , -108.779    ,  -22.68     ],\n         [  24.060997 ,  -74.779    ,   61.32     ],\n         [  49.060997 ,   26.221    ,   63.32     ],\n         [ -32.939003 ,   17.221    ,   56.32     ],\n         [  66.061    , -109.779    ,  100.32     ],\n         [  49.060997 ,  -54.779    ,  -68.68     ],\n         [ 125.061    ,  -39.779    ,  -96.68     ]],\n\n        [[ -43.939003 ,  -26.779    , -104.68     ],\n         [ -57.939003 ,   75.221    ,   64.32     ],\n         [ 136.061    ,   52.221    ,  -91.68     ],\n         [ -47.939003 ,    1.2210007, -101.68     ],\n         [-101.939    , -107.779    ,  -83.68     ],\n         [ -49.939003 ,  110.221    ,  -64.68     ],\n         [ -69.939    ,  -39.779    ,   14.32     ],\n         [ -56.939003 ,  132.22101  ,  -67.68     ],\n         [ -33.939003 ,  -27.779    ,  -52.68     ],\n         [ -73.939    ,  -15.778999 ,   45.32     ]],\n\n        [[ -54.939003 ,  127.221    , -121.68     ],\n         [ 130.061    ,  -80.779    , -105.68     ],\n         [ 108.061    ,  -30.779    ,    2.3199997],\n         [  30.060997 ,   73.221    ,  -57.68     ],\n         [  77.061    ,   86.221    ,  -66.68     ],\n         [  96.061    ,   12.221001 ,  -28.68     ],\n         [  37.060997 ,   18.221    ,  -64.68     ],\n         [ 114.061    ,  135.22101  ,   75.32     ],\n         [ 146.061    ,  -46.779    ,  -15.68     ],\n         [ -68.939    , -101.779    ,   33.32     ]],\n\n        [[  47.060997 ,  -84.779    ,  -46.68     ],\n         [  53.060997 ,  101.221    ,    8.32     ],\n         [  86.061    ,  -79.779    ,  128.32     ],\n         [ -17.939003 ,  -86.779    , -119.68     ],\n         [-100.939    ,    1.2210007,  -14.68     ],\n         [  -7.939003 ,   12.221001 ,   92.32     ],\n         [ -88.939    ,   99.221    ,   -6.6800003],\n         [  99.061    ,  -53.779    ,   20.32     ],\n         [  44.060997 ,   32.221    ,  128.32     ],\n         [ 150.061    ,  126.221    ,  127.32     ]],\n\n        [[ 129.061    ,  -12.778999 ,   50.32     ],\n         [ 128.061    ,  -71.779    ,   41.32     ],\n         [ -77.939    ,   19.221    ,  129.32     ],\n         [ -50.939003 ,  -24.779    ,  100.32     ],\n         [  16.060997 ,   88.221    ,   10.32     ],\n         [ -27.939003 ,  -44.779    ,  -76.68     ],\n         [ 116.061    ,  -44.779    ,  -42.68     ],\n         [  -3.939003 , -110.779    ,   17.32     ],\n         [ 135.061    ,    8.221001 ,   -1.6800003],\n         [  54.060997 ,  -81.779    ,  -34.68     ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea09080>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[3.44349692e+01, 2.21018232e+02, 7.98143041e-01,\n          3.29559285e+01, 2.40885792e+02, 7.15857781e+01,\n          1.17657271e+02, 6.29354146e+01, 2.20425679e+02,\n          2.42700870e+01],\n         [2.35466442e+01, 1.50797970e+02, 2.48116341e+02,\n          3.52133083e+01, 7.01932206e+01, 3.05868715e+01,\n          2.48327515e+02, 2.16058148e+02, 2.52456851e+02,\n          7.20923168e+01],\n         [4.50404065e+01, 3.26657296e+01, 2.47312968e+02,\n          1.17904721e+02, 1.23628261e+02, 1.10687196e+01,\n          2.15156295e+02, 2.02497504e+02, 6.93527658e+01,\n          9.96513645e+01],\n         [1.58899768e+02, 3.06795128e+01, 1.65052032e+02,\n          1.01038354e+02, 1.13898358e+01, 6.74093201e+01,\n          1.66533327e+02, 2.58643210e+01, 2.43035523e+02,\n          1.72880242e+02],\n         [2.03352412e+02, 1.32410492e+02, 2.05174562e+02,\n          1.02902979e+00, 4.72122134e+01, 8.52334984e+00,\n          2.33682893e+02, 1.10819406e+02, 1.13203649e+02,\n          7.66823294e+01],\n         [8.21187717e+01, 1.72519147e+02, 1.45029943e+02,\n          2.51828685e+02, 7.63865430e+01, 1.49664177e+02,\n          2.50301816e+02, 9.90382585e+01, 2.44784958e+02,\n          2.09327306e+02],\n         [1.24445271e+02, 1.67605482e+02, 2.16615245e+02,\n          3.65953196e+01, 1.32271318e+02, 1.59711020e+02,\n          1.72936423e+02, 2.16865863e+02, 2.31684774e+02,\n          3.27749944e+01],\n         [1.34822665e+02, 2.44485658e+02, 9.42515349e+01,\n          1.43155349e+02, 1.70716771e+02, 1.66940009e+02,\n          1.41741835e+02, 1.29133380e+02, 9.11304406e+01,\n          2.05395821e+01],\n         [1.95374979e+02, 1.85674263e+02, 1.14666774e+02,\n          1.57395676e+02, 3.88621463e+01, 1.23478976e+02,\n          4.00931802e+01, 4.29549196e+01, 2.48900103e+02,\n          1.71189265e+02],\n         [4.23737680e+01, 1.36992872e+02, 8.16157518e+01,\n          7.33259967e+01, 5.04032837e+01, 2.54785699e+02,\n          1.74621434e+02, 1.91988007e+02, 1.37261083e+01,\n          2.15669805e+02]],\n\n        [[3.46982238e+01, 7.63792988e+01, 2.04865044e+02,\n          1.22787905e+02, 1.77005241e+02, 1.95640752e+01,\n          8.00110748e+01, 2.92216820e+01, 2.03609676e+02,\n          2.23647307e+01],\n         [3.89939969e+01, 2.48134330e+02, 1.28345406e+02,\n          2.29900767e+02, 1.21271766e+02, 6.58031456e+01,\n          1.14374253e+02, 2.96276484e+01, 7.42976442e+01,\n          8.11133361e+01],\n         [9.30644593e+01, 2.53616369e+02, 3.64891230e+01,\n          1.35403261e+02, 1.43881664e+02, 4.00112922e+01,\n          1.32199811e+02, 1.59686997e+02, 2.20313969e+02,\n          5.98000170e+01],\n         [1.66348021e+02, 2.45112096e+02, 3.61873892e+01,\n          1.21291067e+02, 2.91243731e+01, 1.44651734e+02,\n          1.59131217e+02, 1.34748197e+02, 7.30936168e+00,\n          7.75423822e+01],\n         [1.92267111e+02, 1.73795150e+02, 1.43762030e+02,\n          5.04903837e+01, 9.05486758e+01, 1.49176462e+02,\n          2.52751569e+02, 2.45482704e+02, 5.46627486e+01,\n          1.12940124e+02],\n         [1.24033325e+02, 7.96811163e+01, 1.33831848e+01,\n          8.47525392e+01, 6.11526210e+01, 5.81577124e+01,\n          2.38937500e+02, 1.03171898e+02, 1.43448474e+02,\n          5.38323911e+01],\n         [1.80327802e+02, 1.55440951e+02, 1.07655987e+02,\n          3.61247180e+01, 1.14678179e+01, 4.27580299e+01,\n          2.25709221e+02, 6.36076998e+01, 8.96254247e+01,\n          7.43301923e+01],\n         [1.88016088e+02, 1.12618983e+02, 5.98430209e+01,\n          2.88074764e+01, 8.52157905e-02, 2.08628214e+02,\n          5.01253107e+01, 5.07157114e+01, 1.00462351e+02,\n          1.75709967e+02],\n         [2.16523266e+01, 1.74713835e+02, 2.41892305e+02,\n          4.21353408e+01, 1.24371581e+02, 1.79835274e+02,\n          2.22714323e+02, 8.53672907e+01, 7.95447968e+01,\n          1.18583538e+02],\n         [5.92193851e+01, 1.23001344e+02, 4.32115296e+00,\n          2.04635033e+02, 3.11332489e+01, 6.78146253e+01,\n          1.05073107e+02, 3.90711654e+01, 5.54517223e+01,\n          2.38953240e+02]],\n\n        [[2.12692250e+02, 1.77184895e+02, 1.14770148e+02,\n          2.41136296e+02, 1.66953608e+01, 1.45315052e+02,\n          1.96535957e+02, 3.78278242e+01, 6.78045988e+01,\n          1.56004789e+02],\n         [1.09661630e+02, 1.71659488e+02, 1.13624650e+02,\n          1.86784624e+02, 1.96652742e+01, 2.04999634e+02,\n          9.16615301e+01, 3.39765437e+01, 2.21906701e+02,\n          2.02830163e+02],\n         [1.20004103e+02, 3.49136813e+01, 2.26605428e+02,\n          2.05176621e+02, 1.21331584e+02, 6.86663262e+01,\n          1.49672729e+02, 2.08925828e+02, 2.28711831e+02,\n          1.72719379e+02],\n         [1.26230232e+02, 2.12623104e+02, 1.21722993e+02,\n          1.80925554e+02, 1.23177030e+02, 2.18638567e+02,\n          2.20244721e+02, 8.34858520e+01, 2.36366288e+02,\n          9.31218552e+01],\n         [1.36203542e+02, 4.91939024e+01, 5.37697241e+01,\n          1.42589036e+02, 6.37563081e+01, 1.74859159e+02,\n          4.96088785e+01, 2.32912435e+02, 2.03743025e+02,\n          8.85568159e+01],\n         [6.41961657e+00, 9.27017386e+01, 1.55851354e+01,\n          1.37715057e+02, 4.31782642e+01, 2.50994024e+02,\n          8.68150911e+01, 1.09577475e+01, 1.35869964e+02,\n          1.05824474e+02],\n         [2.13442096e+02, 1.41500264e+02, 3.65760543e+01,\n          3.88384293e+01, 1.22773703e+02, 7.86325407e+01,\n          3.39907602e+01, 2.25904749e+02, 9.20761443e+01,\n          2.06710126e+02],\n         [2.36963866e+02, 2.50515320e+02, 1.43346158e+02,\n          7.73374104e+00, 1.95527413e+02, 1.62727309e+02,\n          8.19904658e+01, 2.03838770e+02, 2.46413712e+02,\n          2.34003188e+02],\n         [2.91430993e+01, 1.69380896e+02, 2.26664150e+02,\n          1.33983787e+02, 8.28708737e+01, 2.38713074e+02,\n          7.60062079e+00, 2.26522235e+02, 1.98766788e+02,\n          1.09773552e+02],\n         [2.45940244e+02, 1.12076436e+02, 9.86394235e+01,\n          2.27569380e+02, 8.06676861e+01, 4.33069019e+01,\n          1.22740725e+01, 4.50388170e+01, 7.29032761e+01,\n          1.79560722e+02]]],\n\n\n       [[[2.11465819e+01, 2.42330377e+02, 1.81082766e+02,\n          1.65683612e+02, 2.00520121e+02, 1.38926667e+02,\n          2.22353530e+02, 1.74678983e+01, 2.31697750e+02,\n          3.95702850e+01],\n         [2.18830254e+02, 1.27637323e+02, 2.12243045e+02,\n          1.41591635e+02, 1.76876774e+02, 1.35021719e+02,\n          5.69426599e+00, 2.47795846e+02, 1.08021037e+02,\n          9.17506990e+00],\n         [2.15008126e+02, 1.43066821e+02, 4.37684678e-02,\n          1.49761206e+02, 6.33983134e+01, 2.10031219e+02,\n          1.98636374e+02, 7.93441500e+01, 9.91196259e+01,\n          1.70662983e+02],\n         [1.42171718e+02, 2.89661723e+01, 2.24996230e+02,\n          1.87865939e+02, 2.20065625e+02, 9.69597343e+01,\n          2.53858082e+02, 2.32119759e+02, 2.18397447e+02,\n          5.22350403e+01],\n         [8.72153218e+01, 2.45032941e+02, 2.18707920e+02,\n          1.63746105e+02, 4.33382016e-01, 1.42001658e+02,\n          1.24200657e+02, 2.44179819e+01, 1.72077324e+02,\n          1.25904082e+02],\n         [5.50305725e+01, 1.75452719e+02, 1.37166487e+02,\n          1.01352761e+02, 1.85156454e+02, 1.87718731e+02,\n          1.80480796e+02, 2.24996554e+02, 5.59088912e+01,\n          2.75993406e+01],\n         [1.97745368e+01, 1.88342708e+02, 3.21982407e+01,\n          2.28341982e+01, 4.08497350e+01, 5.95633293e+01,\n          1.38947217e+02, 5.68119307e+01, 7.14302593e+01,\n          1.69899375e+02],\n         [2.67206195e+00, 1.80239227e+01, 1.26688473e+02,\n          6.66046893e+01, 5.78857205e+01, 9.55961841e+01,\n          5.98830373e+01, 1.99553260e+02, 1.08209761e+02,\n          1.57068865e+02],\n         [7.72996388e+01, 1.32049710e+02, 2.52280644e+02,\n          4.25987580e+00, 1.09511735e+02, 2.16600687e+02,\n          1.17394285e+02, 1.44146468e+02, 2.52086348e+02,\n          2.51234967e+02],\n         [1.74559949e+02, 1.65204336e+02, 2.53508745e+02,\n          2.24847913e+02, 1.34981683e+02, 4.71611174e+01,\n          8.14984576e+01, 1.41960908e+02, 1.22899640e+02,\n          8.91502030e+01]],\n\n        [[3.60732396e+00, 6.36293198e+01, 4.25213874e+01,\n          7.89434629e+01, 2.06251577e+02, 1.49316043e+02,\n          1.09777696e+02, 2.14361202e+02, 3.35557555e+01,\n          5.09920338e+01],\n         [6.83023129e+01, 1.20831350e+02, 2.04876029e+01,\n          1.00165275e+02, 4.96603170e+01, 1.31564985e+02,\n          7.03233834e+01, 2.43237574e+02, 1.18565358e+02,\n          7.57293636e+01],\n         [1.33925962e+02, 1.74702110e+02, 8.50527637e+01,\n          1.34672552e+02, 2.21700057e+02, 1.93905797e+02,\n          1.78189998e+02, 4.69589739e+00, 7.10515714e+01,\n          1.81941145e+02],\n         [2.36244796e+02, 1.89536388e+02, 2.04667125e+02,\n          1.98617002e+02, 1.00674234e+02, 2.56759856e+01,\n          3.98498313e+01, 4.75946078e+00, 2.20755520e+02,\n          1.54485590e+02],\n         [5.53915903e+01, 6.82720796e+01, 9.54916202e+01,\n          2.25900968e+02, 4.06514992e+00, 8.40065572e+01,\n          2.46557226e+01, 2.20636346e+02, 9.96164670e+00,\n          8.82725447e+01],\n         [5.14353026e+01, 1.80664419e+02, 2.97839064e+00,\n          8.88685922e+00, 4.22068853e+01, 1.43542425e+02,\n          1.34363292e+02, 7.27599514e+00, 6.20439962e+01,\n          7.74387556e+01],\n         [9.00105539e+01, 1.92941253e+02, 1.69823238e+02,\n          1.18150396e+02, 9.06024311e+00, 2.27956931e+02,\n          7.73223726e+01, 2.49825400e+02, 8.94850470e+01,\n          1.01477256e+02],\n         [2.44780105e+02, 3.67267839e+01, 8.69334716e+01,\n          1.90601035e+02, 2.03769012e+02, 1.29024934e+02,\n          1.35666628e+02, 2.52803261e+02, 7.00191494e+01,\n          1.55458014e+01],\n         [3.22149854e+01, 2.18356263e+02, 3.77151084e+01,\n          3.01147563e+01, 1.18933207e+02, 1.29304164e+02,\n          2.16022406e+02, 6.33950757e+01, 1.49374633e+02,\n          2.43818814e+02],\n         [1.04663210e+02, 4.51512531e+01, 1.36693836e+02,\n          9.29206734e+01, 2.05132573e+02, 7.23281917e+01,\n          7.23201348e+01, 6.08239448e+00, 1.25258775e+02,\n          3.59045511e+01]],\n\n        [[1.49692766e+02, 1.25550877e+02, 1.97331688e+01,\n          1.85505809e+01, 1.06948677e+02, 1.29460961e+02,\n          5.97995617e+01, 3.62344935e+01, 7.47328600e+00,\n          6.10737113e+01],\n         [4.93740615e+01, 2.18501948e+02, 4.67581820e+01,\n          1.65184949e+02, 2.07080675e+02, 1.82826046e+02,\n          1.03604611e+02, 5.05585400e+01, 1.36497363e+02,\n          2.38140647e+01],\n         [1.52544973e+02, 1.10003104e+02, 2.54426433e+02,\n          2.22157939e+02, 1.67372218e+00, 1.60020085e+02,\n          2.09139704e+02, 2.33869523e+01, 5.96167092e+01,\n          2.37784058e+02],\n         [2.34221822e+02, 1.34941468e+02, 7.86516436e+01,\n          1.59463239e+02, 2.11352801e+02, 1.25022327e+02,\n          2.18682612e+02, 1.81380159e+01, 1.36045617e+02,\n          1.08479633e+02],\n         [9.33694979e+01, 4.52584327e+01, 2.28914601e+01,\n          1.41831884e+02, 4.93639441e+01, 2.45126781e+01,\n          1.42052681e+02, 1.12294898e+02, 1.69880937e+02,\n          2.20008004e+02],\n         [4.76658034e+01, 9.75926165e+01, 2.53523907e+01,\n          1.37069866e+02, 1.28802954e+02, 1.53439354e+02,\n          7.15663038e+01, 1.70713642e+02, 1.53391092e+02,\n          2.29100973e+02],\n         [6.03674448e+01, 4.68275632e+01, 2.40093626e+02,\n          5.65501650e+01, 2.65592291e+00, 5.42076722e+01,\n          3.43129324e+01, 4.74319216e+01, 7.05293640e+01,\n          3.03738391e+01],\n         [4.90930747e+01, 2.34226072e+02, 2.12254284e+02,\n          1.34043602e+02, 1.81995141e+02, 2.00420344e+02,\n          1.41801310e+02, 2.18248071e+02, 2.50060830e+02,\n          3.59252181e+01],\n         [1.51397983e+02, 1.57593610e+02, 1.90577752e+02,\n          8.62295076e+01, 3.81691841e+00, 9.65856541e+01,\n          1.52971334e+01, 2.03983929e+02, 1.48528841e+02,\n          2.54245756e+02],\n         [2.33267346e+02, 2.32376912e+02, 2.64733637e+01,\n          5.37228597e+01, 1.20321191e+02, 7.67666293e+01,\n          2.20765848e+02, 1.00915171e+02, 2.39224424e+02,\n          1.58205154e+02]]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9ebf30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ 1.08753242e+02,  7.32458878e+01,  1.08311462e+01,\n           1.37197296e+02, -8.72436447e+01,  4.13760452e+01,\n           9.25969467e+01, -6.61111755e+01, -3.61344070e+01,\n           5.20657883e+01],\n         [ 5.72262573e+00,  6.77204819e+01,  9.68564606e+00,\n           8.28456192e+01, -8.42737274e+01,  1.01060631e+02,\n          -1.22774734e+01, -6.99624634e+01,  1.17967705e+02,\n           9.88911667e+01],\n         [ 1.60651016e+01, -6.90253220e+01,  1.22666420e+02,\n           1.01237617e+02,  1.73925781e+01, -3.52726746e+01,\n           4.57337265e+01,  1.04986824e+02,  1.24772835e+02,\n           6.87803726e+01],\n         [ 2.22912292e+01,  1.08684105e+02,  1.77839890e+01,\n           7.69865494e+01,  1.92380295e+01,  1.14699562e+02,\n           1.16305717e+02, -2.04531479e+01,  1.32427277e+02,\n          -1.08171463e+01],\n         [ 3.22645340e+01, -5.47451019e+01, -5.01692772e+01,\n           3.86500320e+01, -4.01826935e+01,  7.09201584e+01,\n          -5.43301239e+01,  1.28973419e+02,  9.98040237e+01,\n          -1.53821869e+01],\n         [-9.75193863e+01, -1.12372665e+01, -8.83538666e+01,\n           3.37760544e+01, -6.07607384e+01,  1.47055023e+02,\n          -1.71239090e+01, -9.29812546e+01,  3.19309616e+01,\n           1.88546753e+00],\n         [ 1.09503090e+02,  3.75612564e+01, -6.73629456e+01,\n          -6.51005707e+01,  1.88347015e+01, -2.53064651e+01,\n          -6.99482422e+01,  1.21965752e+02, -1.18628616e+01,\n           1.02771126e+02],\n         [ 1.33024872e+02,  1.46576324e+02,  3.94071579e+01,\n          -9.62052612e+01,  9.15884171e+01,  5.87883072e+01,\n          -2.19485397e+01,  9.98997726e+01,  1.42474701e+02,\n           1.30064178e+02],\n         [-7.47959061e+01,  6.54418869e+01,  1.22725151e+02,\n           3.00447769e+01, -2.10681305e+01,  1.34774078e+02,\n          -9.63383789e+01,  1.22583229e+02,  9.48277817e+01,\n           5.83454895e+00],\n         [ 1.42001251e+02,  8.13743591e+00, -5.29957581e+00,\n           1.23630379e+02, -2.32713165e+01, -6.06321030e+01,\n          -9.16649323e+01, -5.89001846e+01, -3.10357285e+01,\n           7.56217117e+01]],\n\n        [[-8.20807800e+01, -4.03997040e+01,  8.80860519e+01,\n           6.00890350e+00,  6.02262344e+01, -9.72149200e+01,\n          -3.67679214e+01, -8.75573196e+01,  8.68306808e+01,\n          -9.44142685e+01],\n         [-7.77850037e+01,  1.31355316e+02,  1.15664139e+01,\n           1.13121773e+02,  4.49276733e+00, -5.09758530e+01,\n          -2.40474701e+00, -8.71513519e+01, -4.24813538e+01,\n          -3.56656647e+01],\n         [-2.37145386e+01,  1.36837372e+02, -8.02898712e+01,\n           1.86242599e+01,  2.71026688e+01, -7.67677078e+01,\n           1.54208145e+01,  4.29079971e+01,  1.03534966e+02,\n          -5.69789810e+01],\n         [ 4.95690231e+01,  1.28333099e+02, -8.05916138e+01,\n           4.51206970e+00, -8.76546249e+01,  2.78727341e+01,\n           4.23522110e+01,  1.79692001e+01, -1.09469635e+02,\n          -3.92366180e+01],\n         [ 7.54881058e+01,  5.70161514e+01,  2.69830246e+01,\n          -6.62886200e+01, -2.62303238e+01,  3.23974686e+01,\n           1.35972565e+02,  1.28703705e+02, -6.21162491e+01,\n          -3.83887482e+00],\n         [ 7.25432587e+00, -3.70978851e+01, -1.03395813e+02,\n          -3.20264587e+01, -5.56263771e+01, -5.86212883e+01,\n           1.22158501e+02, -1.36071014e+01,  2.66694717e+01,\n          -6.29466095e+01],\n         [ 6.35488052e+01,  3.86619492e+01, -9.12301636e+00,\n          -8.06542816e+01, -1.05311180e+02, -7.40209656e+01,\n           1.08930229e+02, -5.31712990e+01, -2.71535721e+01,\n          -4.24488068e+01],\n         [ 7.12370834e+01, -4.16001892e+00, -5.69359779e+01,\n          -8.79715271e+01, -1.16693787e+02,  9.18492203e+01,\n          -6.66536865e+01, -6.60632935e+01, -1.63166504e+01,\n           5.89309616e+01],\n         [-9.51266708e+01,  5.79348373e+01,  1.25113304e+02,\n          -7.46436615e+01,  7.59258270e+00,  6.30562820e+01,\n           1.05935326e+02, -3.14117050e+01, -3.72341995e+01,\n           1.80454254e+00],\n         [-5.75596161e+01,  6.22234344e+00, -1.12457848e+02,\n           8.78560410e+01, -8.56457520e+01, -4.89643707e+01,\n          -1.17058945e+01, -7.77078323e+01, -6.13272781e+01,\n           1.22174248e+02]],\n\n        [[-8.92450256e+01,  9.73382339e+01, -1.22881859e+02,\n          -9.07240753e+01,  1.17205788e+02, -5.20942230e+01,\n          -6.02272797e+00, -6.07445869e+01,  9.67456741e+01,\n          -9.94099121e+01],\n         [-1.00133354e+02,  2.71179733e+01,  1.24436348e+02,\n          -8.84666901e+01, -5.34867783e+01, -9.30931244e+01,\n           1.24647514e+02,  9.23781509e+01,  1.28776855e+02,\n          -5.15876846e+01],\n         [-7.86395950e+01, -9.10142670e+01,  1.23632973e+02,\n          -5.77527618e+00, -5.17425537e-02, -1.12611282e+02,\n           9.14762955e+01,  7.88174973e+01, -5.43272324e+01,\n          -2.40286331e+01],\n         [ 3.52197647e+01, -9.30004883e+01,  4.13720322e+01,\n          -2.26416473e+01, -1.12290161e+02, -5.62706833e+01,\n           4.28533249e+01, -9.78156815e+01,  1.19355522e+02,\n           4.92002487e+01],\n         [ 7.96724167e+01,  8.73049164e+00,  8.14945602e+01,\n          -1.22650970e+02, -7.64677887e+01, -1.15156647e+02,\n           1.10002892e+02, -1.28605957e+01, -1.04763489e+01,\n          -4.69976730e+01],\n         [-4.15612259e+01,  4.88391495e+01,  2.13499374e+01,\n           1.28148682e+02, -4.72934570e+01,  2.59841690e+01,\n           1.26621819e+02, -2.46417389e+01,  1.21104958e+02,\n           8.56473007e+01],\n         [ 7.65274048e-01,  4.39254837e+01,  9.29352493e+01,\n          -8.70846863e+01,  8.59131622e+00,  3.60310135e+01,\n           4.92564163e+01,  9.31858597e+01,  1.08004768e+02,\n          -9.09050064e+01],\n         [ 1.11426620e+01,  1.20805656e+02, -2.94284668e+01,\n           1.94753494e+01,  4.70367661e+01,  4.32600021e+01,\n           1.80618362e+01,  5.45337677e+00, -3.25495605e+01,\n          -1.03140419e+02],\n         [ 7.16949844e+01,  6.19942551e+01, -9.01322937e+00,\n           3.37156754e+01, -8.48178558e+01, -2.01026917e-01,\n          -8.35868225e+01, -8.07250824e+01,  1.25220100e+02,\n           4.75092697e+01],\n         [-8.13062286e+01,  1.33128738e+01, -4.20642471e+01,\n          -5.03540039e+01, -7.32767181e+01,  1.31105713e+02,\n           5.09414291e+01,  6.83080063e+01, -1.09953888e+02,\n           9.19897995e+01]]],\n\n\n       [[[ 4.57537613e+01,  2.16118698e+01, -8.42058334e+01,\n          -8.53884201e+01,  3.00967407e+00,  2.55219650e+01,\n          -4.41394424e+01, -6.77045135e+01, -9.64657135e+01,\n          -4.28652916e+01],\n         [-5.45649414e+01,  1.14562950e+02, -5.71808205e+01,\n           6.12459488e+01,  1.03141670e+02,  7.88870468e+01,\n          -3.34388733e-01, -5.33804626e+01,  3.25583572e+01,\n          -8.01249390e+01],\n         [ 4.86059647e+01,  6.06410217e+00,  1.50487427e+02,\n           1.18218941e+02, -1.02265282e+02,  5.60810776e+01,\n           1.05200706e+02, -8.05520477e+01, -4.43222923e+01,\n           1.33845062e+02],\n         [ 1.30282806e+02,  3.10024643e+01, -2.52873611e+01,\n           5.55242386e+01,  1.07413795e+02,  2.10833282e+01,\n           1.14743614e+02, -8.58009872e+01,  3.21066208e+01,\n           4.54062653e+00],\n         [-1.05695038e+01, -5.86805687e+01, -8.10475464e+01,\n           3.78928757e+01, -5.45750580e+01, -7.94263229e+01,\n           3.81136703e+01,  8.35589600e+00,  6.59419327e+01,\n           1.16069008e+02],\n         [-5.62732010e+01, -6.34638977e+00, -7.85866089e+01,\n           3.31308670e+01,  2.48639450e+01,  4.95003586e+01,\n          -3.23726959e+01,  6.67746353e+01,  4.94520950e+01,\n           1.25161964e+02],\n         [-4.35715599e+01, -5.71114388e+01,  1.36154633e+02,\n          -4.73888397e+01, -1.01283081e+02, -4.97313309e+01,\n          -6.96260681e+01, -5.65070801e+01, -3.34096375e+01,\n          -7.35651627e+01],\n         [-5.48459282e+01,  1.30287079e+02,  1.08315285e+02,\n           3.01045914e+01,  7.80561447e+01,  9.64813461e+01,\n           3.78623123e+01,  1.14309074e+02,  1.46121826e+02,\n          -6.80137863e+01],\n         [ 4.74589767e+01,  5.36546097e+01,  8.66387558e+01,\n          -1.77094955e+01, -1.00122086e+02, -7.35334778e+00,\n          -8.86418686e+01,  1.00044930e+02,  4.45898361e+01,\n           1.50306763e+02],\n         [ 1.29328339e+02,  1.28437897e+02, -7.74656372e+01,\n          -5.02161446e+01,  1.63821869e+01, -2.71723709e+01,\n           1.16826851e+02, -3.02383423e+00,  1.35285431e+02,\n           5.42661514e+01]],\n\n        [[-1.13171677e+02, -5.31496811e+01, -7.42576141e+01,\n          -3.78355331e+01,  8.94725723e+01,  3.25370407e+01,\n          -7.00130463e+00,  9.75822067e+01, -8.32232437e+01,\n          -6.57869644e+01],\n         [-4.84766846e+01,  4.05235291e+00, -9.62913971e+01,\n          -1.66137238e+01, -6.71186829e+01,  1.47859879e+01,\n          -4.64556122e+01,  1.26458580e+02,  1.78636169e+00,\n          -4.10496368e+01],\n         [ 1.71469650e+01,  5.79231033e+01, -3.17262344e+01,\n           1.78935471e+01,  1.04921059e+02,  7.71267929e+01,\n           6.14110031e+01, -1.12083099e+02, -4.57274246e+01,\n           6.51621475e+01],\n         [ 1.19465797e+02,  7.27573929e+01,  8.78881302e+01,\n           8.18380051e+01, -1.61047668e+01, -9.11030121e+01,\n          -7.69291687e+01, -1.12019539e+02,  1.03976524e+02,\n           3.77065964e+01],\n         [-6.13874092e+01, -4.85069199e+01, -2.12873764e+01,\n           1.09121971e+02, -1.12713852e+02, -3.27724457e+01,\n          -9.21232758e+01,  1.03857353e+02, -1.06817352e+02,\n          -2.85064545e+01],\n         [-6.53436966e+01,  6.38854141e+01, -1.13800606e+02,\n          -1.07892143e+02, -7.45721130e+01,  2.67634201e+01,\n           1.75842972e+01, -1.09503006e+02, -5.47350044e+01,\n          -3.93402405e+01],\n         [-2.67684479e+01,  7.61622543e+01,  5.30442429e+01,\n           1.37139893e+00, -1.07718758e+02,  1.11177925e+02,\n          -3.94566269e+01,  1.33046387e+02, -2.72939529e+01,\n          -1.53017426e+01],\n         [ 1.28001099e+02, -8.00522156e+01, -2.98455276e+01,\n           7.38220291e+01,  8.69900131e+01,  1.22459335e+01,\n           1.88876266e+01,  1.36024261e+02, -4.67598495e+01,\n          -1.01233200e+02],\n         [-8.45640106e+01,  1.01577263e+02, -7.90638885e+01,\n          -8.66642456e+01,  2.15420532e+00,  1.25251694e+01,\n           9.92434006e+01, -5.33839226e+01,  3.25956345e+01,\n           1.27039818e+02],\n         [-1.21157913e+01, -7.16277466e+01,  1.99148331e+01,\n          -2.38583221e+01,  8.83535690e+01, -4.44508057e+01,\n          -4.44588623e+01, -1.10696602e+02,  8.47977448e+00,\n          -8.08744507e+01]],\n\n        [[-1.02533417e+02,  1.18650383e+02,  5.74027634e+01,\n           4.20036087e+01,  7.68401260e+01,  1.52466660e+01,\n           9.86735306e+01, -1.06212105e+02,  1.08017754e+02,\n          -8.41097107e+01],\n         [ 9.51502457e+01,  3.95732117e+00,  8.85630417e+01,\n           1.79116287e+01,  5.31967697e+01,  1.13417130e+01,\n          -1.17985733e+02,  1.24115852e+02, -1.56589661e+01,\n          -1.14504929e+02],\n         [ 9.13281326e+01,  1.93868179e+01, -1.23636230e+02,\n           2.60811996e+01, -6.02816887e+01,  8.63512192e+01,\n           7.49563675e+01, -4.43358536e+01, -2.45603714e+01,\n           4.69829788e+01],\n         [ 1.84917221e+01, -9.47138290e+01,  1.01316231e+02,\n           6.41859360e+01,  9.63856277e+01, -2.67202682e+01,\n           1.30178070e+02,  1.08439766e+02,  9.47174454e+01,\n          -7.14449615e+01],\n         [-3.64646759e+01,  1.21352943e+02,  9.50279160e+01,\n           4.00661087e+01, -1.23246620e+02,  1.83216629e+01,\n           5.20652771e-01, -9.92620163e+01,  4.83973160e+01,\n           2.22408295e+00],\n         [-6.86494293e+01,  5.17727127e+01,  1.34864883e+01,\n          -2.23272400e+01,  6.14764481e+01,  6.40387344e+01,\n           5.68007889e+01,  1.01316551e+02, -6.77711105e+01,\n          -9.60806580e+01],\n         [-1.03905464e+02,  6.46627121e+01, -9.14817581e+01,\n          -1.00845802e+02, -8.28302612e+01, -6.41166687e+01,\n           1.52672195e+01, -6.68680725e+01, -5.22497406e+01,\n           4.62193680e+01],\n         [-1.21007935e+02, -1.05656082e+02,  3.00847626e+00,\n          -5.70753098e+01, -6.57942810e+01, -2.80838165e+01,\n          -6.37969627e+01,  7.58732529e+01, -1.54702377e+01,\n           3.33888626e+01],\n         [-4.63803635e+01,  8.36971283e+00,  1.28600647e+02,\n          -1.19420128e+02, -1.41682663e+01,  9.29206924e+01,\n          -6.28571320e+00,  2.04664688e+01,  1.28406342e+02,\n           1.27554970e+02],\n         [ 5.08799515e+01,  4.15243301e+01,  1.29828735e+02,\n           1.01167915e+02,  1.13016891e+01, -7.65188828e+01,\n          -4.21815414e+01,  1.82809067e+01, -7.80357361e-01,\n          -3.45298004e+01]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea01300>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[[ 34, 221,   0,  32, 240,  71, 117,  62, 220,  24],\n         [ 23, 150, 248,  35,  70,  30, 248, 216, 252,  72],\n         [ 45,  32, 247, 117, 123,  11, 215, 202,  69,  99],\n         [158,  30, 165, 101,  11,  67, 166,  25, 243, 172],\n         [203, 132, 205,   1,  47,   8, 233, 110, 113,  76],\n         [ 82, 172, 145, 251,  76, 149, 250,  99, 244, 209],\n         [124, 167, 216,  36, 132, 159, 172, 216, 231,  32],\n         [134, 244,  94, 143, 170, 166, 141, 129,  91,  20],\n         [195, 185, 114, 157,  38, 123,  40,  42, 248, 171],\n         [ 42, 136,  81,  73,  50, 254, 174, 191,  13, 215]],\n\n        [[ 34,  76, 204, 122, 177,  19,  80,  29, 203,  22],\n         [ 38, 248, 128, 229, 121,  65, 114,  29,  74,  81],\n         [ 93, 253,  36, 135, 143,  40, 132, 159, 220,  59],\n         [166, 245,  36, 121,  29, 144, 159, 134,   7,  77],\n         [192, 173, 143,  50,  90, 149, 252, 245,  54, 112],\n         [124,  79,  13,  84,  61,  58, 238, 103, 143,  53],\n         [180, 155, 107,  36,  11,  42, 225,  63,  89,  74],\n         [188, 112,  59,  28,   0, 208,  50,  50, 100, 175],\n         [ 21, 174, 241,  42, 124, 179, 222,  85,  79, 118],\n         [ 59, 123,   4, 204,  31,  67, 105,  39,  55, 238]],\n\n        [[212, 177, 114, 241,  16, 145, 196,  37,  67, 156],\n         [109, 171, 113, 186,  19, 204,  91,  33, 221, 202],\n         [120,  34, 226, 205, 121,  68, 149, 208, 228, 172],\n         [126, 212, 121, 180, 123, 218, 220,  83, 236,  93],\n         [136,  49,  53, 142,  63, 174,  49, 232, 203,  88],\n         [  6,  92,  15, 137,  43, 250,  86,  10, 135, 105],\n         [213, 141,  36,  38, 122,  78,  33, 225,  92, 206],\n         [236, 250, 143,   7, 195, 162,  81, 203, 246, 234],\n         [ 29, 169, 226, 133,  82, 238,   7, 226, 198, 109],\n         [245, 112,  98, 227,  80,  43,  12,  45,  72, 179]]],\n\n\n       [[[ 21, 242, 181, 165, 200, 138, 222,  17, 231,  39],\n         [218, 127, 212, 141, 176, 135,   5, 247, 108,   9],\n         [215, 143,   0, 149,  63, 210, 198,  79,  99, 170],\n         [142,  28, 224, 187, 220,  96, 253, 232, 218,  52],\n         [ 87, 245, 218, 163,   0, 142, 124,  24, 172, 125],\n         [ 55, 175, 137, 101, 185, 187, 180, 224,  55,  27],\n         [ 19, 188,  32,  22,  40,  59, 138,  56,  71, 169],\n         [  2,  18, 126,  66,  57,  95,  59, 199, 108, 157],\n         [ 77, 132, 252,   4, 109, 216, 117, 144, 252, 251],\n         [174, 165, 253, 224, 134,  47,  81, 141, 122,  89]],\n\n        [[  3,  63,  42,  78, 206, 149, 109, 214,  33,  50],\n         [ 68, 120,  20, 100,  49, 131,  70, 243, 118,  75],\n         [133, 174,  85, 134, 221, 193, 178,   4,  71, 181],\n         [236, 189, 204, 198, 100,  25,  39,   4, 220, 154],\n         [ 55,  68,  95, 225,   4,  84,  24, 220,   9,  88],\n         [ 51, 180,   2,   8,  42, 143, 134,   7,  62,  77],\n         [ 90, 192, 169, 118,   9, 227,  77, 249,  89, 101],\n         [244,  36,  86, 190, 203, 129, 135, 252,  70,  15],\n         [ 32, 218,  37,  30, 118, 129, 216,  63, 149, 243],\n         [104,  45, 136,  92, 205,  72,  72,   6, 125,  35]],\n\n        [[149, 125,  19,  18, 106, 129,  59,  36,   7,  61],\n         [ 49, 218,  46, 165, 207, 182, 103,  50, 136,  23],\n         [152, 110, 254, 222,   1, 160, 209,  23,  59, 237],\n         [234, 134,  78, 159, 211, 125, 218,  18, 136, 108],\n         [ 93,  45,  22, 141,  49,  24, 142, 112, 169, 220],\n         [ 47,  97,  25, 137, 128, 153,  71, 170, 153, 229],\n         [ 60,  46, 240,  56,   2,  54,  34,  47,  70,  30],\n         [ 49, 234, 212, 134, 181, 200, 141, 218, 250,  35],\n         [151, 157, 190,  86,   3,  96,  15, 203, 148, 254],\n         [233, 232,  26,  53, 120,  76, 220, 100, 239, 158]]]],\n      dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9ebf30>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[[ 108.061    ,   73.061    ,   10.060997 ,  137.061    ,\n           -87.939    ,   41.060997 ,   92.061    ,  -66.939    ,\n           -36.939003 ,   52.060997 ],\n         [   5.060997 ,   67.061    ,    9.060997 ,   82.061    ,\n           -84.939    ,  100.061    ,  -12.939003 ,  -70.939    ,\n           117.061    ,   98.061    ],\n         [  16.060997 ,  -69.939    ,  122.061    ,  101.061    ,\n            17.060997 ,  -35.939003 ,   45.060997 ,  104.061    ,\n           124.061    ,   68.061    ],\n         [  22.060997 ,  108.061    ,   17.060997 ,   76.061    ,\n            19.060997 ,  114.061    ,  116.061    ,  -20.939003 ,\n           132.061    ,  -10.939003 ],\n         [  32.060997 ,  -54.939003 ,  -50.939003 ,   38.060997 ,\n           -40.939003 ,   70.061    ,  -54.939003 ,  128.061    ,\n            99.061    ,  -15.939003 ],\n         [ -97.939    ,  -11.939003 ,  -88.939    ,   33.060997 ,\n           -60.939003 ,  146.061    ,  -17.939003 ,  -93.939    ,\n            31.060997 ,    1.060997 ],\n         [ 109.061    ,   37.060997 ,  -67.939    ,  -65.939    ,\n            18.060997 ,  -25.939003 ,  -70.939    ,  121.061    ,\n           -11.939003 ,  102.061    ],\n         [ 132.061    ,  146.061    ,   39.060997 ,  -96.939    ,\n            91.061    ,   58.060997 ,  -22.939003 ,   99.061    ,\n           142.061    ,  130.061    ],\n         [ -74.939    ,   65.061    ,  122.061    ,   29.060997 ,\n           -21.939003 ,  134.061    ,  -96.939    ,  122.061    ,\n            94.061    ,    5.060997 ],\n         [ 141.061    ,    8.060997 ,   -5.939003 ,  123.061    ,\n           -23.939003 ,  -60.939003 ,  -91.939    ,  -58.939003 ,\n           -31.939003 ,   75.061    ]],\n\n        [[ -82.779    ,  -40.779    ,   87.221    ,    5.2210007,\n            60.221    ,  -97.779    ,  -36.779    ,  -87.779    ,\n            86.221    ,  -94.779    ],\n         [ -78.779    ,  131.22101  ,   11.221001 ,  112.221    ,\n             4.2210007,  -51.779    ,   -2.7789993,  -87.779    ,\n           -42.779    ,  -35.779    ],\n         [ -23.779    ,  136.22101  ,  -80.779    ,   18.221    ,\n            26.221    ,  -76.779    ,   15.221001 ,   42.221    ,\n           103.221    ,  -57.779    ],\n         [  49.221    ,  128.22101  ,  -80.779    ,    4.2210007,\n           -87.779    ,   27.221    ,   42.221    ,   17.221    ,\n          -109.779    ,  -39.779    ],\n         [  75.221    ,   56.221    ,   26.221    ,  -66.779    ,\n           -26.779    ,   32.221    ,  135.22101  ,  128.22101  ,\n           -62.779    ,   -4.7789993],\n         [   7.2210007,  -37.779    , -103.779    ,  -32.779    ,\n           -55.779    ,  -58.779    ,  121.221    ,  -13.778999 ,\n            26.221    ,  -63.779    ],\n         [  63.221    ,   38.221    ,   -9.778999 ,  -80.779    ,\n          -105.779    ,  -74.779    ,  108.221    ,  -53.779    ,\n           -27.779    ,  -42.779    ],\n         [  71.221    ,   -4.7789993,  -57.779    ,  -88.779    ,\n          -116.779    ,   91.221    ,  -66.779    ,  -66.779    ,\n           -16.779    ,   58.221    ],\n         [ -95.779    ,   57.221    ,  124.221    ,  -74.779    ,\n             7.2210007,   62.221    ,  105.221    ,  -31.779    ,\n           -37.779    ,    1.2210007],\n         [ -57.779    ,    6.2210007, -112.779    ,   87.221    ,\n           -85.779    ,  -49.779    ,  -11.778999 ,  -77.779    ,\n           -61.779    ,  121.221    ]],\n\n        [[ -89.68     ,   97.32     , -123.68     ,  -91.68     ,\n           116.32     ,  -52.68     ,   -6.6800003,  -61.68     ,\n            96.32     ,  -99.68     ],\n         [-100.68     ,   26.32     ,  124.32     ,  -88.68     ,\n           -53.68     ,  -93.68     ,  124.32     ,   92.32     ,\n           128.32     ,  -51.68     ],\n         [ -78.68     ,  -91.68     ,  123.32     ,   -6.6800003,\n            -0.6800003, -112.68     ,   91.32     ,   78.32     ,\n           -54.68     ,  -24.68     ],\n         [  34.32     ,  -93.68     ,   41.32     ,  -22.68     ,\n          -112.68     ,  -56.68     ,   42.32     ,  -98.68     ,\n           119.32     ,   48.32     ],\n         [  79.32     ,    8.32     ,   81.32     , -122.68     ,\n           -76.68     , -115.68     ,  109.32     ,  -13.68     ,\n           -10.68     ,  -47.68     ],\n         [ -41.68     ,   48.32     ,   21.32     ,  127.32     ,\n           -47.68     ,   25.32     ,  126.32     ,  -24.68     ,\n           120.32     ,   85.32     ],\n         [   0.3199997,   43.32     ,   92.32     ,  -87.68     ,\n             8.32     ,   35.32     ,   48.32     ,   92.32     ,\n           107.32     ,  -91.68     ],\n         [  10.32     ,  120.32     ,  -29.68     ,   19.32     ,\n            46.32     ,   42.32     ,   17.32     ,    5.3199997,\n           -32.68     , -103.68     ],\n         [  71.32     ,   61.32     ,   -9.68     ,   33.32     ,\n           -85.68     ,   -0.6800003,  -83.68     ,  -81.68     ,\n           124.32     ,   47.32     ],\n         [ -81.68     ,   12.32     ,  -42.68     ,  -50.68     ,\n           -73.68     ,  130.32     ,   50.32     ,   67.32     ,\n          -110.68     ,   91.32     ]]],\n\n\n       [[[  45.060997 ,   21.060997 ,  -84.939    ,  -85.939    ,\n             2.060997 ,   25.060997 ,  -44.939003 ,  -67.939    ,\n           -96.939    ,  -42.939003 ],\n         [ -54.939003 ,  114.061    ,  -57.939003 ,   61.060997 ,\n           103.061    ,   78.061    ,   -0.939003 ,  -53.939003 ,\n            32.060997 ,  -80.939    ],\n         [  48.060997 ,    6.060997 ,  150.061    ,  118.061    ,\n          -102.939    ,   56.060997 ,  105.061    ,  -80.939    ,\n           -44.939003 ,  133.061    ],\n         [ 130.061    ,   30.060997 ,  -25.939003 ,   55.060997 ,\n           107.061    ,   21.060997 ,  114.061    ,  -85.939    ,\n            32.060997 ,    4.060997 ],\n         [ -10.939003 ,  -58.939003 ,  -81.939    ,   37.060997 ,\n           -54.939003 ,  -79.939    ,   38.060997 ,    8.060997 ,\n            65.061    ,  116.061    ],\n         [ -56.939003 ,   -6.939003 ,  -78.939    ,   33.060997 ,\n            24.060997 ,   49.060997 ,  -32.939003 ,   66.061    ,\n            49.060997 ,  125.061    ],\n         [ -43.939003 ,  -57.939003 ,  136.061    ,  -47.939003 ,\n          -101.939    ,  -49.939003 ,  -69.939    ,  -56.939003 ,\n           -33.939003 ,  -73.939    ],\n         [ -54.939003 ,  130.061    ,  108.061    ,   30.060997 ,\n            77.061    ,   96.061    ,   37.060997 ,  114.061    ,\n           146.061    ,  -68.939    ],\n         [  47.060997 ,   53.060997 ,   86.061    ,  -17.939003 ,\n          -100.939    ,   -7.939003 ,  -88.939    ,   99.061    ,\n            44.060997 ,  150.061    ],\n         [ 129.061    ,  128.061    ,  -77.939    ,  -50.939003 ,\n            16.060997 ,  -27.939003 ,  116.061    ,   -3.939003 ,\n           135.061    ,   54.060997 ]],\n\n        [[-113.779    ,  -53.779    ,  -74.779    ,  -38.779    ,\n            89.221    ,   32.221    ,   -7.7789993,   97.221    ,\n           -83.779    ,  -66.779    ],\n         [ -48.779    ,    3.2210007,  -96.779    ,  -16.779    ,\n           -67.779    ,   14.221001 ,  -46.779    ,  126.221    ,\n             1.2210007,  -41.779    ],\n         [  16.221    ,   57.221    ,  -31.779    ,   17.221    ,\n           104.221    ,   76.221    ,   61.221    , -112.779    ,\n           -45.779    ,   64.221    ],\n         [ 119.221    ,   72.221    ,   87.221    ,   81.221    ,\n           -16.779    ,  -91.779    ,  -77.779    , -112.779    ,\n           103.221    ,   37.221    ],\n         [ -61.779    ,  -48.779    ,  -21.779    ,  108.221    ,\n          -112.779    ,  -32.779    ,  -92.779    ,  103.221    ,\n          -107.779    ,  -28.779    ],\n         [ -65.779    ,   63.221    , -114.779    , -108.779    ,\n           -74.779    ,   26.221    ,   17.221    , -109.779    ,\n           -54.779    ,  -39.779    ],\n         [ -26.779    ,   75.221    ,   52.221    ,    1.2210007,\n          -107.779    ,  110.221    ,  -39.779    ,  132.22101  ,\n           -27.779    ,  -15.778999 ],\n         [ 127.221    ,  -80.779    ,  -30.779    ,   73.221    ,\n            86.221    ,   12.221001 ,   18.221    ,  135.22101  ,\n           -46.779    , -101.779    ],\n         [ -84.779    ,  101.221    ,  -79.779    ,  -86.779    ,\n             1.2210007,   12.221001 ,   99.221    ,  -53.779    ,\n            32.221    ,  126.221    ],\n         [ -12.778999 ,  -71.779    ,   19.221    ,  -24.779    ,\n            88.221    ,  -44.779    ,  -44.779    , -110.779    ,\n             8.221001 ,  -81.779    ]],\n\n        [[-102.68     ,  118.32     ,   57.32     ,   41.32     ,\n            76.32     ,   14.32     ,   98.32     , -106.68     ,\n           107.32     ,  -84.68     ],\n         [  94.32     ,    3.3199997,   88.32     ,   17.32     ,\n            52.32     ,   11.32     , -118.68     ,  123.32     ,\n           -15.68     , -114.68     ],\n         [  91.32     ,   19.32     , -123.68     ,   25.32     ,\n           -60.68     ,   86.32     ,   74.32     ,  -44.68     ,\n           -24.68     ,   46.32     ],\n         [  18.32     ,  -95.68     ,  100.32     ,   63.32     ,\n            96.32     ,  -27.68     ,  129.32     ,  108.32     ,\n            94.32     ,  -71.68     ],\n         [ -36.68     ,  121.32     ,   94.32     ,   39.32     ,\n          -123.68     ,   18.32     ,    0.3199997,  -99.68     ,\n            48.32     ,    1.3199997],\n         [ -68.68     ,   51.32     ,   13.32     ,  -22.68     ,\n            61.32     ,   63.32     ,   56.32     ,  100.32     ,\n           -68.68     ,  -96.68     ],\n         [-104.68     ,   64.32     ,  -91.68     , -101.68     ,\n           -83.68     ,  -64.68     ,   14.32     ,  -67.68     ,\n           -52.68     ,   45.32     ],\n         [-121.68     , -105.68     ,    2.3199997,  -57.68     ,\n           -66.68     ,  -28.68     ,  -64.68     ,   75.32     ,\n           -15.68     ,   33.32     ],\n         [ -46.68     ,    8.32     ,  128.32     , -119.68     ,\n           -14.68     ,   92.32     ,   -6.6800003,   20.32     ,\n           128.32     ,  127.32     ],\n         [  50.32     ,   41.32     ,  129.32     ,  100.32     ,\n            10.32     ,  -76.68     ,  -42.68     ,   17.32     ,\n            -1.6800003,  -34.68     ]]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(2, 3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea01170>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "4",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[1.69075237e+02, 1.97854193e+02, 1.17660381e+02],\n        [1.90759531e+02, 3.55893550e+01, 7.51268501e+01],\n        [1.69169034e+02, 2.39342981e+02, 4.59974290e+01],\n        [2.38182177e+02, 1.13213675e+01, 6.17838129e+01],\n        [2.16885663e+02, 1.83615813e+02, 2.25559559e+02],\n        [2.50624972e+02, 1.11079040e+01, 3.01204383e+01],\n        [4.54071998e+01, 3.76663237e+00, 2.13514495e+02],\n        [2.41623348e+02, 2.30597722e+02, 9.29176359e+01],\n        [5.75811870e+01, 1.63690036e+01, 1.35239940e+02],\n        [1.99109730e+02, 2.08062716e+02, 1.33417816e+02]],\n\n       [[2.04917864e-01, 2.38833748e+02, 3.57657634e+01],\n        [1.97403971e+02, 2.39054455e+02, 1.06019884e+02],\n        [6.53941476e+01, 1.77027190e+02, 1.58798279e+02],\n        [8.67134511e+01, 1.56427780e+02, 1.50190680e+02],\n        [1.11718178e+01, 2.16503042e+02, 4.97215742e+01],\n        [1.56755109e+02, 1.89334607e+02, 1.54254762e+02],\n        [1.94947954e+02, 1.96859795e+02, 2.33485196e+02],\n        [2.06175790e+02, 3.63375775e+01, 2.15377975e+02],\n        [1.95979371e+02, 1.41060156e+02, 1.00464685e+01],\n        [1.50262231e+02, 4.79378789e+01, 2.20662697e+02]],\n\n       [[1.98844989e+02, 1.20919792e+02, 2.17216614e+02],\n        [1.83258797e+01, 3.36134447e+01, 2.86211407e+01],\n        [9.41246876e+00, 9.02456237e+01, 2.49290332e+02],\n        [1.35172223e+02, 1.62106196e+02, 2.08093498e+02],\n        [4.43059978e+01, 1.66416918e+02, 2.41303219e+02],\n        [1.54006523e+02, 7.23987990e+01, 1.86227694e+02],\n        [1.58248868e+02, 1.77567507e+02, 2.03272678e+01],\n        [4.53272554e+01, 1.72452831e+02, 1.33587038e+02],\n        [2.19320579e+02, 2.29306808e+02, 1.16149081e+02],\n        [1.05705667e+01, 3.34341027e+01, 1.59315317e+02]],\n\n       [[1.55543403e+02, 2.82835810e+01, 1.53432492e+02],\n        [6.92123490e+01, 2.26191161e+02, 6.25041644e+01],\n        [3.38042005e+01, 1.91213192e+02, 1.21015490e+02],\n        [2.44361579e+01, 1.92948327e+02, 2.20763880e+02],\n        [1.23051365e+02, 1.82054948e+02, 1.82159606e+01],\n        [1.64672566e+02, 1.16663783e+02, 5.61609584e+01],\n        [1.09902940e+02, 5.08000809e+01, 1.46394576e+02],\n        [7.72527836e+00, 1.61167163e+02, 1.79741539e+02],\n        [1.26794832e+02, 1.47657126e+02, 1.05793551e+02],\n        [2.13338552e+01, 2.02719843e+02, 1.13809900e+02]],\n\n       [[2.02006225e+02, 1.02555235e+02, 1.77324985e+02],\n        [1.58081278e+02, 2.04128362e+02, 1.09016260e+01],\n        [6.41172173e+01, 1.34766577e+02, 2.00521377e+02],\n        [5.98245704e+01, 1.73480015e+01, 5.11233412e+00],\n        [1.99459717e+02, 1.70036653e+02, 2.48111411e+02],\n        [5.49326820e+01, 1.17464071e+02, 2.48168721e+02],\n        [1.27290641e+02, 7.18929594e+01, 9.83369903e+00],\n        [9.13444597e+00, 1.59575233e+02, 3.80448890e+01],\n        [2.09078998e+02, 4.69904464e+01, 2.33254512e+02],\n        [4.96707290e+01, 5.29710132e+01, 3.32804744e+01]],\n\n       [[1.21585985e+02, 1.17833002e+02, 1.99804099e+02],\n        [7.62404728e+01, 1.82537955e+02, 1.88912312e+02],\n        [3.27813334e+01, 2.53252338e+02, 1.31134355e+02],\n        [7.08913292e+00, 2.03701360e+02, 7.40194876e+00],\n        [1.20918914e+01, 1.17207411e+02, 1.15548727e+02],\n        [1.14630699e+02, 2.09445513e+02, 2.03906002e+01],\n        [3.49102895e+01, 5.53994895e+01, 6.30546021e+01],\n        [2.35477625e+02, 1.65977759e+02, 5.15420763e+01],\n        [7.44479284e+01, 1.32388106e+02, 4.34589122e+01],\n        [1.78834413e+02, 2.23689209e+02, 1.66616554e+02]],\n\n       [[2.61396039e+01, 2.54266958e+02, 9.58700838e+01],\n        [2.10479531e+02, 4.48860482e+01, 1.23360886e+01],\n        [9.20285567e+01, 2.06694224e+02, 2.19689808e+02],\n        [4.42774969e+01, 2.46415999e+02, 2.35885758e+02],\n        [2.27794093e+02, 1.37867989e+02, 7.21171333e+01],\n        [2.48304823e+02, 1.00246013e+02, 1.57053570e+02],\n        [2.21972366e+02, 1.70456887e+02, 1.82875821e+01],\n        [1.12910051e+02, 3.96187437e+01, 1.97745423e+02],\n        [1.34412271e+02, 1.98490549e+01, 1.55844928e+02],\n        [7.82208084e+01, 3.64196123e+01, 5.49108723e+01]],\n\n       [[7.32868995e+01, 1.07935496e+02, 1.54190209e+02],\n        [6.93401037e+01, 2.18678676e+02, 1.18225675e+02],\n        [2.11085846e+02, 1.71045634e+02, 2.08950399e+02],\n        [2.25895904e+02, 1.69800148e+02, 1.59337259e+02],\n        [1.31186811e+02, 1.62729886e+02, 2.34535802e+02],\n        [2.34496357e+02, 2.36728027e+02, 1.85780645e+02],\n        [4.05339538e+01, 1.17786569e+02, 1.92792564e+02],\n        [1.62828128e+02, 1.07495355e+02, 2.06413891e+02],\n        [1.67353236e+02, 6.40598597e+01, 1.92465805e+02],\n        [1.19029348e+02, 1.50558186e+02, 1.53088637e+02]],\n\n       [[1.80889316e+02, 1.74700149e+02, 5.40756064e+01],\n        [2.11754943e+02, 1.70047049e+02, 1.24168913e+02],\n        [1.02622556e+02, 1.52916184e+02, 9.17370657e+01],\n        [7.98409490e+01, 1.52236569e+02, 9.06952396e+01],\n        [1.19491924e+02, 1.49451108e+02, 2.39708814e+02],\n        [6.16444352e+01, 1.63588851e+02, 1.37726012e+02],\n        [1.01160401e+02, 1.39137073e+02, 2.94529699e+01],\n        [1.94552476e+02, 6.61554883e+01, 1.47180321e+02],\n        [1.27409192e+02, 1.16906265e+02, 9.46694947e+01],\n        [6.25647499e+00, 6.14164065e+01, 2.44455250e+01]],\n\n       [[5.69293744e+01, 2.06605990e+01, 1.66646207e+02],\n        [1.46172931e+02, 1.16556540e+02, 1.78728918e+02],\n        [1.01695433e+02, 1.40964932e+02, 3.70555417e+01],\n        [9.06258404e+01, 7.39902352e+01, 1.41930229e+02],\n        [5.29355727e+01, 1.65114645e+02, 2.24538980e+01],\n        [2.34261085e+01, 1.85851041e+02, 2.12545178e+02],\n        [2.15186359e+02, 8.22322997e+01, 1.70629228e+02],\n        [2.15652575e+01, 1.90035293e+02, 2.12386412e+02],\n        [1.47400335e+02, 9.18764174e+01, 1.46619350e+02],\n        [7.63088094e+01, 2.13611752e+02, 1.59206874e+02]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e903120>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.37213821e+01,  8.10751877e+01,  4.53952408e+01],\n        [-2.88121567e+01, -8.11896439e+01,  6.70795364e+01],\n        [-5.79415741e+01,  1.22563988e+02,  4.54890366e+01],\n        [-4.21551895e+01, -1.05457634e+02,  1.14502174e+02],\n        [ 1.21620552e+02,  6.68368149e+01,  9.32056656e+01],\n        [-7.38185654e+01, -1.05671097e+02,  1.26944969e+02],\n        [ 1.09575493e+02, -1.13012367e+02, -7.82727966e+01],\n        [-1.10213699e+01,  1.13818718e+02,  1.17943352e+02],\n        [ 3.13009415e+01, -1.00409996e+02, -6.60988159e+01],\n        [ 2.94788132e+01,  9.12837143e+01,  7.54297256e+01]],\n\n       [[-6.81732407e+01,  1.22054756e+02, -1.23475082e+02],\n        [ 2.08087921e+00,  1.22275459e+02,  7.37239761e+01],\n        [ 5.48592758e+01,  6.02481918e+01, -5.82858505e+01],\n        [ 4.62516708e+01,  3.96487808e+01, -3.69665527e+01],\n        [-5.42174301e+01,  9.97240372e+01, -1.12508179e+02],\n        [ 5.03157578e+01,  7.25556107e+01,  3.30751114e+01],\n        [ 1.29546204e+02,  8.00808029e+01,  7.12679520e+01],\n        [ 1.11438972e+02, -8.04414215e+01,  8.24957962e+01],\n        [-9.38925323e+01,  2.42811508e+01,  7.22993698e+01],\n        [ 1.16723701e+02, -6.88411255e+01,  2.65822372e+01]],\n\n       [[ 1.13277611e+02,  4.14079285e+00,  7.51649857e+01],\n        [-7.53178635e+01, -8.31655579e+01, -1.05354118e+02],\n        [ 1.45351318e+02, -2.65333786e+01, -1.14267532e+02],\n        [ 1.04154488e+02,  4.53272018e+01,  1.14922256e+01],\n        [ 1.37364227e+02,  4.96379166e+01, -7.93740082e+01],\n        [ 8.22886887e+01, -4.43802032e+01,  3.03265152e+01],\n        [-8.36117325e+01,  6.07885056e+01,  3.45688705e+01],\n        [ 2.96480331e+01,  5.56738358e+01, -7.83527451e+01],\n        [ 1.22100754e+01,  1.12527809e+02,  9.56405716e+01],\n        [ 5.53763199e+01, -8.33448944e+01, -1.13109436e+02]],\n\n       [[ 4.94934921e+01, -8.84954224e+01,  3.18633957e+01],\n        [-4.14348373e+01,  1.09412163e+02, -5.44676514e+01],\n        [ 1.70764847e+01,  7.44341965e+01, -8.98758011e+01],\n        [ 1.16824883e+02,  7.61693344e+01, -9.92438431e+01],\n        [-8.57230377e+01,  6.52759476e+01, -6.28639221e-01],\n        [-4.77780457e+01, -1.15219116e-01,  4.09925613e+01],\n        [ 4.24555740e+01, -6.59789200e+01, -1.37770615e+01],\n        [ 7.58025436e+01,  4.43881607e+01, -1.15954720e+02],\n        [ 1.85454559e+00,  3.08781204e+01,  3.11483002e+00],\n        [ 9.87089539e+00,  8.59408493e+01, -1.02346146e+02]],\n\n       [[ 7.33859787e+01, -1.42237625e+01,  7.83262253e+01],\n        [-9.30373764e+01,  8.73493576e+01,  3.44012833e+01],\n        [ 9.65823746e+01,  1.79875717e+01, -5.95627823e+01],\n        [-9.88266678e+01, -9.94309998e+01, -6.38554306e+01],\n        [ 1.44172394e+02,  5.32576523e+01,  7.57797165e+01],\n        [ 1.44229706e+02,  6.85073853e-01, -6.87473145e+01],\n        [-9.41053009e+01, -4.48860397e+01,  3.61064148e+00],\n        [-6.58941193e+01,  4.27962265e+01, -1.14545555e+02],\n        [ 1.29315521e+02, -6.97885513e+01,  8.53989944e+01],\n        [-7.06585236e+01, -6.38079872e+01, -7.40092697e+01]],\n\n       [[ 9.58650894e+01,  1.05400085e+00, -2.09401703e+00],\n        [ 8.49733047e+01,  6.57589493e+01, -4.74395294e+01],\n        [ 2.71953506e+01,  1.36473328e+02, -9.08986664e+01],\n        [-9.65370560e+01,  8.69223557e+01, -1.16590866e+02],\n        [ 1.16097260e+01,  4.28413391e-01, -1.11588112e+02],\n        [-8.35484009e+01,  9.26665115e+01, -9.04930115e+00],\n        [-4.08843994e+01, -6.13795090e+01, -8.87697144e+01],\n        [-5.23969269e+01,  4.91987534e+01,  1.11797630e+02],\n        [-6.04800911e+01,  1.56091080e+01, -4.92320709e+01],\n        [ 6.26775436e+01,  1.06910210e+02,  5.51544113e+01]],\n\n       [[-8.06891632e+00,  1.37487946e+02, -9.75403976e+01],\n        [-9.16029129e+01, -7.18929520e+01,  8.67995377e+01],\n        [ 1.15750801e+02,  8.99152298e+01, -3.16514435e+01],\n        [ 1.31946747e+02,  1.29636993e+02, -7.94025040e+01],\n        [-3.18218689e+01,  2.10889969e+01,  1.04114098e+02],\n        [ 5.31145706e+01, -1.65329895e+01,  1.24624825e+02],\n        [-8.56514206e+01,  5.36778946e+01,  9.82923660e+01],\n        [ 9.38064194e+01, -7.71602554e+01, -1.07699509e+01],\n        [ 5.19059219e+01, -9.69299469e+01,  1.07322769e+01],\n        [-4.90281296e+01, -8.03593903e+01, -4.54591904e+01]],\n\n       [[ 5.02512131e+01, -8.84350586e+00, -5.03931046e+01],\n        [ 1.42866745e+01,  1.01899681e+02, -5.43398972e+01],\n        [ 1.05011391e+02,  5.42666397e+01,  8.74058456e+01],\n        [ 5.53982620e+01,  5.30211411e+01,  1.02215904e+02],\n        [ 1.30596802e+02,  4.59508896e+01,  7.50681305e+00],\n        [ 8.18416367e+01,  1.19949028e+02,  1.10816353e+02],\n        [ 8.88535538e+01,  1.00756836e+00, -8.31460419e+01],\n        [ 1.02474892e+02, -9.28364563e+00,  3.91481247e+01],\n        [ 8.85268021e+01, -5.27191391e+01,  4.36732407e+01],\n        [ 4.91496353e+01,  3.37791824e+01, -4.65065002e+00]],\n\n       [[-4.98633957e+01,  5.79211502e+01,  5.72093124e+01],\n        [ 2.02299118e+01,  5.32680435e+01,  8.80749435e+01],\n        [-1.22019348e+01,  3.61371841e+01, -2.10574417e+01],\n        [-1.32437668e+01,  3.54575729e+01, -4.38390503e+01],\n        [ 1.35769806e+02,  3.26721115e+01, -4.18807983e+00],\n        [ 3.37870102e+01,  4.68098526e+01, -6.20355644e+01],\n        [-7.44860306e+01,  2.23580704e+01, -2.25195999e+01],\n        [ 4.32413101e+01, -5.06235123e+01,  7.08724747e+01],\n        [-9.26950836e+00,  1.27265930e-01,  3.72919464e+00],\n        [-7.94934769e+01, -5.53625946e+01, -1.17423523e+02]],\n\n       [[ 6.27072067e+01, -9.61184006e+01, -6.67506256e+01],\n        [ 7.47899094e+01, -2.22457886e-01,  2.24929276e+01],\n        [-6.68834610e+01,  2.41859360e+01, -2.19845657e+01],\n        [ 3.79912186e+01, -4.27887650e+01, -3.30541611e+01],\n        [-8.14851074e+01,  4.83356400e+01, -7.07444305e+01],\n        [ 1.08606178e+02,  6.90720444e+01, -1.00253891e+02],\n        [ 6.66902237e+01, -3.45466995e+01,  9.15063553e+01],\n        [ 1.08447411e+02,  7.32562943e+01, -1.02114746e+02],\n        [ 4.26803513e+01, -2.49025803e+01,  2.37203293e+01],\n        [ 5.52678757e+01,  9.68327560e+01, -4.73711929e+01]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea012b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[169, 197, 117],\n        [190,  35,  75],\n        [169, 239,  45],\n        [238,  11,  61],\n        [216, 183, 225],\n        [250,  11,  30],\n        [ 45,   3, 213],\n        [241, 230,  92],\n        [ 57,  16, 135],\n        [199, 208, 133]],\n\n       [[  0, 238,  35],\n        [197, 239, 106],\n        [ 65, 177, 158],\n        [ 86, 156, 150],\n        [ 11, 216,  49],\n        [156, 189, 154],\n        [194, 196, 233],\n        [206,  36, 215],\n        [195, 141,  10],\n        [150,  47, 220]],\n\n       [[198, 120, 217],\n        [ 18,  33,  28],\n        [  9,  90, 249],\n        [135, 162, 208],\n        [ 44, 166, 241],\n        [154,  72, 186],\n        [158, 177,  20],\n        [ 45, 172, 133],\n        [219, 229, 116],\n        [ 10,  33, 159]],\n\n       [[155,  28, 153],\n        [ 69, 226,  62],\n        [ 33, 191, 121],\n        [ 24, 192, 220],\n        [123, 182,  18],\n        [164, 116,  56],\n        [109,  50, 146],\n        [  7, 161, 179],\n        [126, 147, 105],\n        [ 21, 202, 113]],\n\n       [[202, 102, 177],\n        [158, 204,  10],\n        [ 64, 134, 200],\n        [ 59,  17,   5],\n        [199, 170, 248],\n        [ 54, 117, 248],\n        [127,  71,   9],\n        [  9, 159,  38],\n        [209,  46, 233],\n        [ 49,  52,  33]],\n\n       [[121, 117, 199],\n        [ 76, 182, 188],\n        [ 32, 253, 131],\n        [  7, 203,   7],\n        [ 12, 117, 115],\n        [114, 209,  20],\n        [ 34,  55,  63],\n        [235, 165,  51],\n        [ 74, 132,  43],\n        [178, 223, 166]],\n\n       [[ 26, 254,  95],\n        [210,  44,  12],\n        [ 92, 206, 219],\n        [ 44, 246, 235],\n        [227, 137,  72],\n        [248, 100, 157],\n        [221, 170,  18],\n        [112,  39, 197],\n        [134,  19, 155],\n        [ 78,  36,  54]],\n\n       [[ 73, 107, 154],\n        [ 69, 218, 118],\n        [211, 171, 208],\n        [225, 169, 159],\n        [131, 162, 234],\n        [234, 236, 185],\n        [ 40, 117, 192],\n        [162, 107, 206],\n        [167,  64, 192],\n        [119, 150, 153]],\n\n       [[180, 174,  54],\n        [211, 170, 124],\n        [102, 152,  91],\n        [ 79, 152,  90],\n        [119, 149, 239],\n        [ 61, 163, 137],\n        [101, 139,  29],\n        [194,  66, 147],\n        [127, 116,  94],\n        [  6,  61,  24]],\n\n       [[ 56,  20, 166],\n        [146, 116, 178],\n        [101, 140,  37],\n        [ 90,  73, 141],\n        [ 52, 165,  22],\n        [ 23, 185, 212],\n        [215,  82, 170],\n        [ 21, 190, 212],\n        [147,  91, 146],\n        [ 76, 213, 159]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9c74e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[  13.060997  ,   80.221     ,   45.32      ],\n        [ -28.939003  ,  -81.779     ,   66.32      ],\n        [ -58.939003  ,  122.221     ,   45.32      ],\n        [ -42.939003  , -105.779     ,  114.32      ],\n        [ 121.061     ,   66.221     ,   92.32      ],\n        [ -73.939     , -105.779     ,  126.32      ],\n        [ 109.061     , -113.779     ,  -78.68      ],\n        [ -11.939003  ,  113.221     ,  117.32      ],\n        [  31.060997  , -100.779     ,  -66.68      ],\n        [  29.060997  ,   91.221     ,   75.32      ]],\n\n       [[ -68.939     ,  121.221     , -123.68      ],\n        [   2.060997  ,  122.221     ,   73.32      ],\n        [  54.060997  ,   60.221     ,  -58.68      ],\n        [  46.060997  ,   39.221     ,  -37.68      ],\n        [ -54.939003  ,   99.221     , -112.68      ],\n        [  50.060997  ,   72.221     ,   32.32      ],\n        [ 129.061     ,   79.221     ,   70.32      ],\n        [ 111.061     ,  -80.779     ,   82.32      ],\n        [ -93.939     ,   24.221     ,   71.32      ],\n        [ 116.061     ,  -69.779     ,   26.32      ]],\n\n       [[ 113.061     ,    3.2210007 ,   74.32      ],\n        [ -75.939     ,  -83.779     , -105.68      ],\n        [ 145.061     ,  -26.779     , -114.68      ],\n        [ 104.061     ,   45.221     ,   11.32      ],\n        [ 137.061     ,   49.221     ,  -79.68      ],\n        [  82.061     ,  -44.779     ,   30.32      ],\n        [ -83.939     ,   60.221     ,   34.32      ],\n        [  29.060997  ,   55.221     ,  -78.68      ],\n        [  12.060997  ,  112.221     ,   95.32      ],\n        [  55.060997  ,  -83.779     , -113.68      ]],\n\n       [[  49.060997  ,  -88.779     ,   31.32      ],\n        [ -41.939003  ,  109.221     ,  -54.68      ],\n        [  17.060997  ,   74.221     ,  -90.68      ],\n        [ 116.061     ,   75.221     ,  -99.68      ],\n        [ -85.939     ,   65.221     ,   -0.6800003 ],\n        [ -47.939003  ,   -0.7789993 ,   40.32      ],\n        [  42.060997  ,  -66.779     ,  -14.68      ],\n        [  75.061     ,   44.221     , -116.68      ],\n        [   1.060997  ,   30.221     ,    2.3199997 ],\n        [   9.060997  ,   85.221     , -102.68      ]],\n\n       [[  73.061     ,  -14.778999  ,   78.32      ],\n        [ -93.939     ,   87.221     ,   34.32      ],\n        [  96.061     ,   17.221     ,  -59.68      ],\n        [ -98.939     ,  -99.779     ,  -64.68      ],\n        [ 144.061     ,   53.221     ,   75.32      ],\n        [ 144.061     ,    0.22100067,  -69.68      ],\n        [ -94.939     ,  -45.779     ,    3.3199997 ],\n        [ -65.939     ,   42.221     , -114.68      ],\n        [ 129.061     ,  -70.779     ,   85.32      ],\n        [ -70.939     ,  -64.779     ,  -74.68      ]],\n\n       [[  95.061     ,    0.22100067,   -2.6800003 ],\n        [  84.061     ,   65.221     ,  -47.68      ],\n        [  27.060997  ,  136.22101   ,  -91.68      ],\n        [ -96.939     ,   86.221     , -116.68      ],\n        [  11.060997  ,    0.22100067, -111.68      ],\n        [ -83.939     ,   92.221     ,   -9.68      ],\n        [ -40.939003  ,  -61.779     ,  -89.68      ],\n        [ -52.939003  ,   48.221     ,  111.32      ],\n        [ -60.939003  ,   15.221001  ,  -49.68      ],\n        [  62.060997  ,  106.221     ,   54.32      ]],\n\n       [[  -8.939003  ,  137.22101   ,  -97.68      ],\n        [ -91.939     ,  -72.779     ,   86.32      ],\n        [ 115.061     ,   89.221     ,  -31.68      ],\n        [ 131.061     ,  129.22101   ,  -79.68      ],\n        [ -31.939003  ,   20.221     ,  103.32      ],\n        [  53.060997  ,  -16.779     ,  124.32      ],\n        [ -85.939     ,   53.221     ,   97.32      ],\n        [  93.061     ,  -77.779     ,  -11.68      ],\n        [  51.060997  ,  -97.779     ,   10.32      ],\n        [ -49.939003  ,  -80.779     ,  -45.68      ]],\n\n       [[  50.060997  ,   -9.778999  ,  -50.68      ],\n        [  14.060997  ,  101.221     ,  -54.68      ],\n        [ 104.061     ,   54.221     ,   87.32      ],\n        [  55.060997  ,   52.221     ,  101.32      ],\n        [ 130.061     ,   45.221     ,    7.3199997 ],\n        [  81.061     ,  119.221     ,  110.32      ],\n        [  88.061     ,    0.22100067,  -83.68      ],\n        [ 102.061     ,   -9.778999  ,   38.32      ],\n        [  88.061     ,  -52.779     ,   43.32      ],\n        [  49.060997  ,   33.221     ,   -4.6800003 ]],\n\n       [[ -49.939003  ,   57.221     ,   56.32      ],\n        [  20.060997  ,   53.221     ,   87.32      ],\n        [ -12.939003  ,   35.221     ,  -21.68      ],\n        [ -13.939003  ,   35.221     ,  -44.68      ],\n        [ 135.061     ,   32.221     ,   -4.6800003 ],\n        [  33.060997  ,   46.221     ,  -62.68      ],\n        [ -74.939     ,   22.221     ,  -22.68      ],\n        [  43.060997  ,  -50.779     ,   70.32      ],\n        [  -9.939003  ,   -0.7789993 ,    3.3199997 ],\n        [ -79.939     ,  -55.779     , -117.68      ]],\n\n       [[  62.060997  ,  -96.779     ,  -67.68      ],\n        [  74.061     ,   -0.7789993 ,   22.32      ],\n        [ -66.939     ,   23.221     ,  -22.68      ],\n        [  37.060997  ,  -43.779     ,  -33.68      ],\n        [ -81.939     ,   48.221     ,  -71.68      ],\n        [ 108.061     ,   68.221     , -100.68      ],\n        [  66.061     ,  -34.779     ,   91.32      ],\n        [ 108.061     ,   73.221     , -102.68      ],\n        [  42.060997  ,  -25.779     ,   23.32      ],\n        [  55.060997  ,   96.221     ,  -47.68      ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea01210>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[1.69075237e+02, 1.97854193e+02, 1.17660381e+02],\n        [1.90759531e+02, 3.55893550e+01, 7.51268501e+01],\n        [1.69169034e+02, 2.39342981e+02, 4.59974290e+01],\n        [2.38182177e+02, 1.13213675e+01, 6.17838129e+01],\n        [2.16885663e+02, 1.83615813e+02, 2.25559559e+02],\n        [2.50624972e+02, 1.11079040e+01, 3.01204383e+01],\n        [4.54071998e+01, 3.76663237e+00, 2.13514495e+02],\n        [2.41623348e+02, 2.30597722e+02, 9.29176359e+01],\n        [5.75811870e+01, 1.63690036e+01, 1.35239940e+02],\n        [1.99109730e+02, 2.08062716e+02, 1.33417816e+02]],\n\n       [[2.04917864e-01, 2.38833748e+02, 3.57657634e+01],\n        [1.97403971e+02, 2.39054455e+02, 1.06019884e+02],\n        [6.53941476e+01, 1.77027190e+02, 1.58798279e+02],\n        [8.67134511e+01, 1.56427780e+02, 1.50190680e+02],\n        [1.11718178e+01, 2.16503042e+02, 4.97215742e+01],\n        [1.56755109e+02, 1.89334607e+02, 1.54254762e+02],\n        [1.94947954e+02, 1.96859795e+02, 2.33485196e+02],\n        [2.06175790e+02, 3.63375775e+01, 2.15377975e+02],\n        [1.95979371e+02, 1.41060156e+02, 1.00464685e+01],\n        [1.50262231e+02, 4.79378789e+01, 2.20662697e+02]],\n\n       [[1.98844989e+02, 1.20919792e+02, 2.17216614e+02],\n        [1.83258797e+01, 3.36134447e+01, 2.86211407e+01],\n        [9.41246876e+00, 9.02456237e+01, 2.49290332e+02],\n        [1.35172223e+02, 1.62106196e+02, 2.08093498e+02],\n        [4.43059978e+01, 1.66416918e+02, 2.41303219e+02],\n        [1.54006523e+02, 7.23987990e+01, 1.86227694e+02],\n        [1.58248868e+02, 1.77567507e+02, 2.03272678e+01],\n        [4.53272554e+01, 1.72452831e+02, 1.33587038e+02],\n        [2.19320579e+02, 2.29306808e+02, 1.16149081e+02],\n        [1.05705667e+01, 3.34341027e+01, 1.59315317e+02]],\n\n       [[1.55543403e+02, 2.82835810e+01, 1.53432492e+02],\n        [6.92123490e+01, 2.26191161e+02, 6.25041644e+01],\n        [3.38042005e+01, 1.91213192e+02, 1.21015490e+02],\n        [2.44361579e+01, 1.92948327e+02, 2.20763880e+02],\n        [1.23051365e+02, 1.82054948e+02, 1.82159606e+01],\n        [1.64672566e+02, 1.16663783e+02, 5.61609584e+01],\n        [1.09902940e+02, 5.08000809e+01, 1.46394576e+02],\n        [7.72527836e+00, 1.61167163e+02, 1.79741539e+02],\n        [1.26794832e+02, 1.47657126e+02, 1.05793551e+02],\n        [2.13338552e+01, 2.02719843e+02, 1.13809900e+02]],\n\n       [[2.02006225e+02, 1.02555235e+02, 1.77324985e+02],\n        [1.58081278e+02, 2.04128362e+02, 1.09016260e+01],\n        [6.41172173e+01, 1.34766577e+02, 2.00521377e+02],\n        [5.98245704e+01, 1.73480015e+01, 5.11233412e+00],\n        [1.99459717e+02, 1.70036653e+02, 2.48111411e+02],\n        [5.49326820e+01, 1.17464071e+02, 2.48168721e+02],\n        [1.27290641e+02, 7.18929594e+01, 9.83369903e+00],\n        [9.13444597e+00, 1.59575233e+02, 3.80448890e+01],\n        [2.09078998e+02, 4.69904464e+01, 2.33254512e+02],\n        [4.96707290e+01, 5.29710132e+01, 3.32804744e+01]],\n\n       [[1.21585985e+02, 1.17833002e+02, 1.99804099e+02],\n        [7.62404728e+01, 1.82537955e+02, 1.88912312e+02],\n        [3.27813334e+01, 2.53252338e+02, 1.31134355e+02],\n        [7.08913292e+00, 2.03701360e+02, 7.40194876e+00],\n        [1.20918914e+01, 1.17207411e+02, 1.15548727e+02],\n        [1.14630699e+02, 2.09445513e+02, 2.03906002e+01],\n        [3.49102895e+01, 5.53994895e+01, 6.30546021e+01],\n        [2.35477625e+02, 1.65977759e+02, 5.15420763e+01],\n        [7.44479284e+01, 1.32388106e+02, 4.34589122e+01],\n        [1.78834413e+02, 2.23689209e+02, 1.66616554e+02]],\n\n       [[2.61396039e+01, 2.54266958e+02, 9.58700838e+01],\n        [2.10479531e+02, 4.48860482e+01, 1.23360886e+01],\n        [9.20285567e+01, 2.06694224e+02, 2.19689808e+02],\n        [4.42774969e+01, 2.46415999e+02, 2.35885758e+02],\n        [2.27794093e+02, 1.37867989e+02, 7.21171333e+01],\n        [2.48304823e+02, 1.00246013e+02, 1.57053570e+02],\n        [2.21972366e+02, 1.70456887e+02, 1.82875821e+01],\n        [1.12910051e+02, 3.96187437e+01, 1.97745423e+02],\n        [1.34412271e+02, 1.98490549e+01, 1.55844928e+02],\n        [7.82208084e+01, 3.64196123e+01, 5.49108723e+01]],\n\n       [[7.32868995e+01, 1.07935496e+02, 1.54190209e+02],\n        [6.93401037e+01, 2.18678676e+02, 1.18225675e+02],\n        [2.11085846e+02, 1.71045634e+02, 2.08950399e+02],\n        [2.25895904e+02, 1.69800148e+02, 1.59337259e+02],\n        [1.31186811e+02, 1.62729886e+02, 2.34535802e+02],\n        [2.34496357e+02, 2.36728027e+02, 1.85780645e+02],\n        [4.05339538e+01, 1.17786569e+02, 1.92792564e+02],\n        [1.62828128e+02, 1.07495355e+02, 2.06413891e+02],\n        [1.67353236e+02, 6.40598597e+01, 1.92465805e+02],\n        [1.19029348e+02, 1.50558186e+02, 1.53088637e+02]],\n\n       [[1.80889316e+02, 1.74700149e+02, 5.40756064e+01],\n        [2.11754943e+02, 1.70047049e+02, 1.24168913e+02],\n        [1.02622556e+02, 1.52916184e+02, 9.17370657e+01],\n        [7.98409490e+01, 1.52236569e+02, 9.06952396e+01],\n        [1.19491924e+02, 1.49451108e+02, 2.39708814e+02],\n        [6.16444352e+01, 1.63588851e+02, 1.37726012e+02],\n        [1.01160401e+02, 1.39137073e+02, 2.94529699e+01],\n        [1.94552476e+02, 6.61554883e+01, 1.47180321e+02],\n        [1.27409192e+02, 1.16906265e+02, 9.46694947e+01],\n        [6.25647499e+00, 6.14164065e+01, 2.44455250e+01]],\n\n       [[5.69293744e+01, 2.06605990e+01, 1.66646207e+02],\n        [1.46172931e+02, 1.16556540e+02, 1.78728918e+02],\n        [1.01695433e+02, 1.40964932e+02, 3.70555417e+01],\n        [9.06258404e+01, 7.39902352e+01, 1.41930229e+02],\n        [5.29355727e+01, 1.65114645e+02, 2.24538980e+01],\n        [2.34261085e+01, 1.85851041e+02, 2.12545178e+02],\n        [2.15186359e+02, 8.22322997e+01, 1.70629228e+02],\n        [2.15652575e+01, 1.90035293e+02, 2.12386412e+02],\n        [1.47400335e+02, 9.18764174e+01, 1.46619350e+02],\n        [7.63088094e+01, 2.13611752e+02, 1.59206874e+02]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e903120>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.37213821e+01,  8.10751877e+01,  4.53952408e+01],\n        [-2.88121567e+01, -8.11896439e+01,  6.70795364e+01],\n        [-5.79415741e+01,  1.22563988e+02,  4.54890366e+01],\n        [-4.21551895e+01, -1.05457634e+02,  1.14502174e+02],\n        [ 1.21620552e+02,  6.68368149e+01,  9.32056656e+01],\n        [-7.38185654e+01, -1.05671097e+02,  1.26944969e+02],\n        [ 1.09575493e+02, -1.13012367e+02, -7.82727966e+01],\n        [-1.10213699e+01,  1.13818718e+02,  1.17943352e+02],\n        [ 3.13009415e+01, -1.00409996e+02, -6.60988159e+01],\n        [ 2.94788132e+01,  9.12837143e+01,  7.54297256e+01]],\n\n       [[-6.81732407e+01,  1.22054756e+02, -1.23475082e+02],\n        [ 2.08087921e+00,  1.22275459e+02,  7.37239761e+01],\n        [ 5.48592758e+01,  6.02481918e+01, -5.82858505e+01],\n        [ 4.62516708e+01,  3.96487808e+01, -3.69665527e+01],\n        [-5.42174301e+01,  9.97240372e+01, -1.12508179e+02],\n        [ 5.03157578e+01,  7.25556107e+01,  3.30751114e+01],\n        [ 1.29546204e+02,  8.00808029e+01,  7.12679520e+01],\n        [ 1.11438972e+02, -8.04414215e+01,  8.24957962e+01],\n        [-9.38925323e+01,  2.42811508e+01,  7.22993698e+01],\n        [ 1.16723701e+02, -6.88411255e+01,  2.65822372e+01]],\n\n       [[ 1.13277611e+02,  4.14079285e+00,  7.51649857e+01],\n        [-7.53178635e+01, -8.31655579e+01, -1.05354118e+02],\n        [ 1.45351318e+02, -2.65333786e+01, -1.14267532e+02],\n        [ 1.04154488e+02,  4.53272018e+01,  1.14922256e+01],\n        [ 1.37364227e+02,  4.96379166e+01, -7.93740082e+01],\n        [ 8.22886887e+01, -4.43802032e+01,  3.03265152e+01],\n        [-8.36117325e+01,  6.07885056e+01,  3.45688705e+01],\n        [ 2.96480331e+01,  5.56738358e+01, -7.83527451e+01],\n        [ 1.22100754e+01,  1.12527809e+02,  9.56405716e+01],\n        [ 5.53763199e+01, -8.33448944e+01, -1.13109436e+02]],\n\n       [[ 4.94934921e+01, -8.84954224e+01,  3.18633957e+01],\n        [-4.14348373e+01,  1.09412163e+02, -5.44676514e+01],\n        [ 1.70764847e+01,  7.44341965e+01, -8.98758011e+01],\n        [ 1.16824883e+02,  7.61693344e+01, -9.92438431e+01],\n        [-8.57230377e+01,  6.52759476e+01, -6.28639221e-01],\n        [-4.77780457e+01, -1.15219116e-01,  4.09925613e+01],\n        [ 4.24555740e+01, -6.59789200e+01, -1.37770615e+01],\n        [ 7.58025436e+01,  4.43881607e+01, -1.15954720e+02],\n        [ 1.85454559e+00,  3.08781204e+01,  3.11483002e+00],\n        [ 9.87089539e+00,  8.59408493e+01, -1.02346146e+02]],\n\n       [[ 7.33859787e+01, -1.42237625e+01,  7.83262253e+01],\n        [-9.30373764e+01,  8.73493576e+01,  3.44012833e+01],\n        [ 9.65823746e+01,  1.79875717e+01, -5.95627823e+01],\n        [-9.88266678e+01, -9.94309998e+01, -6.38554306e+01],\n        [ 1.44172394e+02,  5.32576523e+01,  7.57797165e+01],\n        [ 1.44229706e+02,  6.85073853e-01, -6.87473145e+01],\n        [-9.41053009e+01, -4.48860397e+01,  3.61064148e+00],\n        [-6.58941193e+01,  4.27962265e+01, -1.14545555e+02],\n        [ 1.29315521e+02, -6.97885513e+01,  8.53989944e+01],\n        [-7.06585236e+01, -6.38079872e+01, -7.40092697e+01]],\n\n       [[ 9.58650894e+01,  1.05400085e+00, -2.09401703e+00],\n        [ 8.49733047e+01,  6.57589493e+01, -4.74395294e+01],\n        [ 2.71953506e+01,  1.36473328e+02, -9.08986664e+01],\n        [-9.65370560e+01,  8.69223557e+01, -1.16590866e+02],\n        [ 1.16097260e+01,  4.28413391e-01, -1.11588112e+02],\n        [-8.35484009e+01,  9.26665115e+01, -9.04930115e+00],\n        [-4.08843994e+01, -6.13795090e+01, -8.87697144e+01],\n        [-5.23969269e+01,  4.91987534e+01,  1.11797630e+02],\n        [-6.04800911e+01,  1.56091080e+01, -4.92320709e+01],\n        [ 6.26775436e+01,  1.06910210e+02,  5.51544113e+01]],\n\n       [[-8.06891632e+00,  1.37487946e+02, -9.75403976e+01],\n        [-9.16029129e+01, -7.18929520e+01,  8.67995377e+01],\n        [ 1.15750801e+02,  8.99152298e+01, -3.16514435e+01],\n        [ 1.31946747e+02,  1.29636993e+02, -7.94025040e+01],\n        [-3.18218689e+01,  2.10889969e+01,  1.04114098e+02],\n        [ 5.31145706e+01, -1.65329895e+01,  1.24624825e+02],\n        [-8.56514206e+01,  5.36778946e+01,  9.82923660e+01],\n        [ 9.38064194e+01, -7.71602554e+01, -1.07699509e+01],\n        [ 5.19059219e+01, -9.69299469e+01,  1.07322769e+01],\n        [-4.90281296e+01, -8.03593903e+01, -4.54591904e+01]],\n\n       [[ 5.02512131e+01, -8.84350586e+00, -5.03931046e+01],\n        [ 1.42866745e+01,  1.01899681e+02, -5.43398972e+01],\n        [ 1.05011391e+02,  5.42666397e+01,  8.74058456e+01],\n        [ 5.53982620e+01,  5.30211411e+01,  1.02215904e+02],\n        [ 1.30596802e+02,  4.59508896e+01,  7.50681305e+00],\n        [ 8.18416367e+01,  1.19949028e+02,  1.10816353e+02],\n        [ 8.88535538e+01,  1.00756836e+00, -8.31460419e+01],\n        [ 1.02474892e+02, -9.28364563e+00,  3.91481247e+01],\n        [ 8.85268021e+01, -5.27191391e+01,  4.36732407e+01],\n        [ 4.91496353e+01,  3.37791824e+01, -4.65065002e+00]],\n\n       [[-4.98633957e+01,  5.79211502e+01,  5.72093124e+01],\n        [ 2.02299118e+01,  5.32680435e+01,  8.80749435e+01],\n        [-1.22019348e+01,  3.61371841e+01, -2.10574417e+01],\n        [-1.32437668e+01,  3.54575729e+01, -4.38390503e+01],\n        [ 1.35769806e+02,  3.26721115e+01, -4.18807983e+00],\n        [ 3.37870102e+01,  4.68098526e+01, -6.20355644e+01],\n        [-7.44860306e+01,  2.23580704e+01, -2.25195999e+01],\n        [ 4.32413101e+01, -5.06235123e+01,  7.08724747e+01],\n        [-9.26950836e+00,  1.27265930e-01,  3.72919464e+00],\n        [-7.94934769e+01, -5.53625946e+01, -1.17423523e+02]],\n\n       [[ 6.27072067e+01, -9.61184006e+01, -6.67506256e+01],\n        [ 7.47899094e+01, -2.22457886e-01,  2.24929276e+01],\n        [-6.68834610e+01,  2.41859360e+01, -2.19845657e+01],\n        [ 3.79912186e+01, -4.27887650e+01, -3.30541611e+01],\n        [-8.14851074e+01,  4.83356400e+01, -7.07444305e+01],\n        [ 1.08606178e+02,  6.90720444e+01, -1.00253891e+02],\n        [ 6.66902237e+01, -3.45466995e+01,  9.15063553e+01],\n        [ 1.08447411e+02,  7.32562943e+01, -1.02114746e+02],\n        [ 4.26803513e+01, -2.49025803e+01,  2.37203293e+01],\n        [ 5.52678757e+01,  9.68327560e+01, -4.73711929e+01]]],\n      dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea01440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[169, 197, 117],\n        [190,  35,  75],\n        [169, 239,  45],\n        [238,  11,  61],\n        [216, 183, 225],\n        [250,  11,  30],\n        [ 45,   3, 213],\n        [241, 230,  92],\n        [ 57,  16, 135],\n        [199, 208, 133]],\n\n       [[  0, 238,  35],\n        [197, 239, 106],\n        [ 65, 177, 158],\n        [ 86, 156, 150],\n        [ 11, 216,  49],\n        [156, 189, 154],\n        [194, 196, 233],\n        [206,  36, 215],\n        [195, 141,  10],\n        [150,  47, 220]],\n\n       [[198, 120, 217],\n        [ 18,  33,  28],\n        [  9,  90, 249],\n        [135, 162, 208],\n        [ 44, 166, 241],\n        [154,  72, 186],\n        [158, 177,  20],\n        [ 45, 172, 133],\n        [219, 229, 116],\n        [ 10,  33, 159]],\n\n       [[155,  28, 153],\n        [ 69, 226,  62],\n        [ 33, 191, 121],\n        [ 24, 192, 220],\n        [123, 182,  18],\n        [164, 116,  56],\n        [109,  50, 146],\n        [  7, 161, 179],\n        [126, 147, 105],\n        [ 21, 202, 113]],\n\n       [[202, 102, 177],\n        [158, 204,  10],\n        [ 64, 134, 200],\n        [ 59,  17,   5],\n        [199, 170, 248],\n        [ 54, 117, 248],\n        [127,  71,   9],\n        [  9, 159,  38],\n        [209,  46, 233],\n        [ 49,  52,  33]],\n\n       [[121, 117, 199],\n        [ 76, 182, 188],\n        [ 32, 253, 131],\n        [  7, 203,   7],\n        [ 12, 117, 115],\n        [114, 209,  20],\n        [ 34,  55,  63],\n        [235, 165,  51],\n        [ 74, 132,  43],\n        [178, 223, 166]],\n\n       [[ 26, 254,  95],\n        [210,  44,  12],\n        [ 92, 206, 219],\n        [ 44, 246, 235],\n        [227, 137,  72],\n        [248, 100, 157],\n        [221, 170,  18],\n        [112,  39, 197],\n        [134,  19, 155],\n        [ 78,  36,  54]],\n\n       [[ 73, 107, 154],\n        [ 69, 218, 118],\n        [211, 171, 208],\n        [225, 169, 159],\n        [131, 162, 234],\n        [234, 236, 185],\n        [ 40, 117, 192],\n        [162, 107, 206],\n        [167,  64, 192],\n        [119, 150, 153]],\n\n       [[180, 174,  54],\n        [211, 170, 124],\n        [102, 152,  91],\n        [ 79, 152,  90],\n        [119, 149, 239],\n        [ 61, 163, 137],\n        [101, 139,  29],\n        [194,  66, 147],\n        [127, 116,  94],\n        [  6,  61,  24]],\n\n       [[ 56,  20, 166],\n        [146, 116, 178],\n        [101, 140,  37],\n        [ 90,  73, 141],\n        [ 52, 165,  22],\n        [ 23, 185, 212],\n        [215,  82, 170],\n        [ 21, 190, 212],\n        [147,  91, 146],\n        [ 76, 213, 159]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9c74e0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[  13.060997  ,   80.221     ,   45.32      ],\n        [ -28.939003  ,  -81.779     ,   66.32      ],\n        [ -58.939003  ,  122.221     ,   45.32      ],\n        [ -42.939003  , -105.779     ,  114.32      ],\n        [ 121.061     ,   66.221     ,   92.32      ],\n        [ -73.939     , -105.779     ,  126.32      ],\n        [ 109.061     , -113.779     ,  -78.68      ],\n        [ -11.939003  ,  113.221     ,  117.32      ],\n        [  31.060997  , -100.779     ,  -66.68      ],\n        [  29.060997  ,   91.221     ,   75.32      ]],\n\n       [[ -68.939     ,  121.221     , -123.68      ],\n        [   2.060997  ,  122.221     ,   73.32      ],\n        [  54.060997  ,   60.221     ,  -58.68      ],\n        [  46.060997  ,   39.221     ,  -37.68      ],\n        [ -54.939003  ,   99.221     , -112.68      ],\n        [  50.060997  ,   72.221     ,   32.32      ],\n        [ 129.061     ,   79.221     ,   70.32      ],\n        [ 111.061     ,  -80.779     ,   82.32      ],\n        [ -93.939     ,   24.221     ,   71.32      ],\n        [ 116.061     ,  -69.779     ,   26.32      ]],\n\n       [[ 113.061     ,    3.2210007 ,   74.32      ],\n        [ -75.939     ,  -83.779     , -105.68      ],\n        [ 145.061     ,  -26.779     , -114.68      ],\n        [ 104.061     ,   45.221     ,   11.32      ],\n        [ 137.061     ,   49.221     ,  -79.68      ],\n        [  82.061     ,  -44.779     ,   30.32      ],\n        [ -83.939     ,   60.221     ,   34.32      ],\n        [  29.060997  ,   55.221     ,  -78.68      ],\n        [  12.060997  ,  112.221     ,   95.32      ],\n        [  55.060997  ,  -83.779     , -113.68      ]],\n\n       [[  49.060997  ,  -88.779     ,   31.32      ],\n        [ -41.939003  ,  109.221     ,  -54.68      ],\n        [  17.060997  ,   74.221     ,  -90.68      ],\n        [ 116.061     ,   75.221     ,  -99.68      ],\n        [ -85.939     ,   65.221     ,   -0.6800003 ],\n        [ -47.939003  ,   -0.7789993 ,   40.32      ],\n        [  42.060997  ,  -66.779     ,  -14.68      ],\n        [  75.061     ,   44.221     , -116.68      ],\n        [   1.060997  ,   30.221     ,    2.3199997 ],\n        [   9.060997  ,   85.221     , -102.68      ]],\n\n       [[  73.061     ,  -14.778999  ,   78.32      ],\n        [ -93.939     ,   87.221     ,   34.32      ],\n        [  96.061     ,   17.221     ,  -59.68      ],\n        [ -98.939     ,  -99.779     ,  -64.68      ],\n        [ 144.061     ,   53.221     ,   75.32      ],\n        [ 144.061     ,    0.22100067,  -69.68      ],\n        [ -94.939     ,  -45.779     ,    3.3199997 ],\n        [ -65.939     ,   42.221     , -114.68      ],\n        [ 129.061     ,  -70.779     ,   85.32      ],\n        [ -70.939     ,  -64.779     ,  -74.68      ]],\n\n       [[  95.061     ,    0.22100067,   -2.6800003 ],\n        [  84.061     ,   65.221     ,  -47.68      ],\n        [  27.060997  ,  136.22101   ,  -91.68      ],\n        [ -96.939     ,   86.221     , -116.68      ],\n        [  11.060997  ,    0.22100067, -111.68      ],\n        [ -83.939     ,   92.221     ,   -9.68      ],\n        [ -40.939003  ,  -61.779     ,  -89.68      ],\n        [ -52.939003  ,   48.221     ,  111.32      ],\n        [ -60.939003  ,   15.221001  ,  -49.68      ],\n        [  62.060997  ,  106.221     ,   54.32      ]],\n\n       [[  -8.939003  ,  137.22101   ,  -97.68      ],\n        [ -91.939     ,  -72.779     ,   86.32      ],\n        [ 115.061     ,   89.221     ,  -31.68      ],\n        [ 131.061     ,  129.22101   ,  -79.68      ],\n        [ -31.939003  ,   20.221     ,  103.32      ],\n        [  53.060997  ,  -16.779     ,  124.32      ],\n        [ -85.939     ,   53.221     ,   97.32      ],\n        [  93.061     ,  -77.779     ,  -11.68      ],\n        [  51.060997  ,  -97.779     ,   10.32      ],\n        [ -49.939003  ,  -80.779     ,  -45.68      ]],\n\n       [[  50.060997  ,   -9.778999  ,  -50.68      ],\n        [  14.060997  ,  101.221     ,  -54.68      ],\n        [ 104.061     ,   54.221     ,   87.32      ],\n        [  55.060997  ,   52.221     ,  101.32      ],\n        [ 130.061     ,   45.221     ,    7.3199997 ],\n        [  81.061     ,  119.221     ,  110.32      ],\n        [  88.061     ,    0.22100067,  -83.68      ],\n        [ 102.061     ,   -9.778999  ,   38.32      ],\n        [  88.061     ,  -52.779     ,   43.32      ],\n        [  49.060997  ,   33.221     ,   -4.6800003 ]],\n\n       [[ -49.939003  ,   57.221     ,   56.32      ],\n        [  20.060997  ,   53.221     ,   87.32      ],\n        [ -12.939003  ,   35.221     ,  -21.68      ],\n        [ -13.939003  ,   35.221     ,  -44.68      ],\n        [ 135.061     ,   32.221     ,   -4.6800003 ],\n        [  33.060997  ,   46.221     ,  -62.68      ],\n        [ -74.939     ,   22.221     ,  -22.68      ],\n        [  43.060997  ,  -50.779     ,   70.32      ],\n        [  -9.939003  ,   -0.7789993 ,    3.3199997 ],\n        [ -79.939     ,  -55.779     , -117.68      ]],\n\n       [[  62.060997  ,  -96.779     ,  -67.68      ],\n        [  74.061     ,   -0.7789993 ,   22.32      ],\n        [ -66.939     ,   23.221     ,  -22.68      ],\n        [  37.060997  ,  -43.779     ,  -33.68      ],\n        [ -81.939     ,   48.221     ,  -71.68      ],\n        [ 108.061     ,   68.221     , -100.68      ],\n        [  66.061     ,  -34.779     ,   91.32      ],\n        [ 108.061     ,   73.221     , -102.68      ],\n        [  42.060997  ,  -25.779     ,   23.32      ],\n        [  55.060997  ,   96.221     ,  -47.68      ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(10, 10, 3)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12ea01350>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_last'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[1.69075237e+02, 1.90759531e+02, 1.69169034e+02, 2.38182177e+02,\n         2.16885663e+02, 2.50624972e+02, 4.54071998e+01, 2.41623348e+02,\n         5.75811870e+01, 1.99109730e+02],\n        [2.04917864e-01, 1.97403971e+02, 6.53941476e+01, 8.67134511e+01,\n         1.11718178e+01, 1.56755109e+02, 1.94947954e+02, 2.06175790e+02,\n         1.95979371e+02, 1.50262231e+02],\n        [1.98844989e+02, 1.83258797e+01, 9.41246876e+00, 1.35172223e+02,\n         4.43059978e+01, 1.54006523e+02, 1.58248868e+02, 4.53272554e+01,\n         2.19320579e+02, 1.05705667e+01],\n        [1.55543403e+02, 6.92123490e+01, 3.38042005e+01, 2.44361579e+01,\n         1.23051365e+02, 1.64672566e+02, 1.09902940e+02, 7.72527836e+00,\n         1.26794832e+02, 2.13338552e+01],\n        [2.02006225e+02, 1.58081278e+02, 6.41172173e+01, 5.98245704e+01,\n         1.99459717e+02, 5.49326820e+01, 1.27290641e+02, 9.13444597e+00,\n         2.09078998e+02, 4.96707290e+01],\n        [1.21585985e+02, 7.62404728e+01, 3.27813334e+01, 7.08913292e+00,\n         1.20918914e+01, 1.14630699e+02, 3.49102895e+01, 2.35477625e+02,\n         7.44479284e+01, 1.78834413e+02],\n        [2.61396039e+01, 2.10479531e+02, 9.20285567e+01, 4.42774969e+01,\n         2.27794093e+02, 2.48304823e+02, 2.21972366e+02, 1.12910051e+02,\n         1.34412271e+02, 7.82208084e+01],\n        [7.32868995e+01, 6.93401037e+01, 2.11085846e+02, 2.25895904e+02,\n         1.31186811e+02, 2.34496357e+02, 4.05339538e+01, 1.62828128e+02,\n         1.67353236e+02, 1.19029348e+02],\n        [1.80889316e+02, 2.11754943e+02, 1.02622556e+02, 7.98409490e+01,\n         1.19491924e+02, 6.16444352e+01, 1.01160401e+02, 1.94552476e+02,\n         1.27409192e+02, 6.25647499e+00],\n        [5.69293744e+01, 1.46172931e+02, 1.01695433e+02, 9.06258404e+01,\n         5.29355727e+01, 2.34261085e+01, 2.15186359e+02, 2.15652575e+01,\n         1.47400335e+02, 7.63088094e+01]],\n\n       [[1.97854193e+02, 3.55893550e+01, 2.39342981e+02, 1.13213675e+01,\n         1.83615813e+02, 1.11079040e+01, 3.76663237e+00, 2.30597722e+02,\n         1.63690036e+01, 2.08062716e+02],\n        [2.38833748e+02, 2.39054455e+02, 1.77027190e+02, 1.56427780e+02,\n         2.16503042e+02, 1.89334607e+02, 1.96859795e+02, 3.63375775e+01,\n         1.41060156e+02, 4.79378789e+01],\n        [1.20919792e+02, 3.36134447e+01, 9.02456237e+01, 1.62106196e+02,\n         1.66416918e+02, 7.23987990e+01, 1.77567507e+02, 1.72452831e+02,\n         2.29306808e+02, 3.34341027e+01],\n        [2.82835810e+01, 2.26191161e+02, 1.91213192e+02, 1.92948327e+02,\n         1.82054948e+02, 1.16663783e+02, 5.08000809e+01, 1.61167163e+02,\n         1.47657126e+02, 2.02719843e+02],\n        [1.02555235e+02, 2.04128362e+02, 1.34766577e+02, 1.73480015e+01,\n         1.70036653e+02, 1.17464071e+02, 7.18929594e+01, 1.59575233e+02,\n         4.69904464e+01, 5.29710132e+01],\n        [1.17833002e+02, 1.82537955e+02, 2.53252338e+02, 2.03701360e+02,\n         1.17207411e+02, 2.09445513e+02, 5.53994895e+01, 1.65977759e+02,\n         1.32388106e+02, 2.23689209e+02],\n        [2.54266958e+02, 4.48860482e+01, 2.06694224e+02, 2.46415999e+02,\n         1.37867989e+02, 1.00246013e+02, 1.70456887e+02, 3.96187437e+01,\n         1.98490549e+01, 3.64196123e+01],\n        [1.07935496e+02, 2.18678676e+02, 1.71045634e+02, 1.69800148e+02,\n         1.62729886e+02, 2.36728027e+02, 1.17786569e+02, 1.07495355e+02,\n         6.40598597e+01, 1.50558186e+02],\n        [1.74700149e+02, 1.70047049e+02, 1.52916184e+02, 1.52236569e+02,\n         1.49451108e+02, 1.63588851e+02, 1.39137073e+02, 6.61554883e+01,\n         1.16906265e+02, 6.14164065e+01],\n        [2.06605990e+01, 1.16556540e+02, 1.40964932e+02, 7.39902352e+01,\n         1.65114645e+02, 1.85851041e+02, 8.22322997e+01, 1.90035293e+02,\n         9.18764174e+01, 2.13611752e+02]],\n\n       [[1.17660381e+02, 7.51268501e+01, 4.59974290e+01, 6.17838129e+01,\n         2.25559559e+02, 3.01204383e+01, 2.13514495e+02, 9.29176359e+01,\n         1.35239940e+02, 1.33417816e+02],\n        [3.57657634e+01, 1.06019884e+02, 1.58798279e+02, 1.50190680e+02,\n         4.97215742e+01, 1.54254762e+02, 2.33485196e+02, 2.15377975e+02,\n         1.00464685e+01, 2.20662697e+02],\n        [2.17216614e+02, 2.86211407e+01, 2.49290332e+02, 2.08093498e+02,\n         2.41303219e+02, 1.86227694e+02, 2.03272678e+01, 1.33587038e+02,\n         1.16149081e+02, 1.59315317e+02],\n        [1.53432492e+02, 6.25041644e+01, 1.21015490e+02, 2.20763880e+02,\n         1.82159606e+01, 5.61609584e+01, 1.46394576e+02, 1.79741539e+02,\n         1.05793551e+02, 1.13809900e+02],\n        [1.77324985e+02, 1.09016260e+01, 2.00521377e+02, 5.11233412e+00,\n         2.48111411e+02, 2.48168721e+02, 9.83369903e+00, 3.80448890e+01,\n         2.33254512e+02, 3.32804744e+01],\n        [1.99804099e+02, 1.88912312e+02, 1.31134355e+02, 7.40194876e+00,\n         1.15548727e+02, 2.03906002e+01, 6.30546021e+01, 5.15420763e+01,\n         4.34589122e+01, 1.66616554e+02],\n        [9.58700838e+01, 1.23360886e+01, 2.19689808e+02, 2.35885758e+02,\n         7.21171333e+01, 1.57053570e+02, 1.82875821e+01, 1.97745423e+02,\n         1.55844928e+02, 5.49108723e+01],\n        [1.54190209e+02, 1.18225675e+02, 2.08950399e+02, 1.59337259e+02,\n         2.34535802e+02, 1.85780645e+02, 1.92792564e+02, 2.06413891e+02,\n         1.92465805e+02, 1.53088637e+02],\n        [5.40756064e+01, 1.24168913e+02, 9.17370657e+01, 9.06952396e+01,\n         2.39708814e+02, 1.37726012e+02, 2.94529699e+01, 1.47180321e+02,\n         9.46694947e+01, 2.44455250e+01],\n        [1.66646207e+02, 1.78728918e+02, 3.70555417e+01, 1.41930229e+02,\n         2.24538980e+01, 2.12545178e+02, 1.70629228e+02, 2.12386412e+02,\n         1.46619350e+02, 1.59206874e+02]]])",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e31c5d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[ 1.37213821e+01, -2.88121567e+01, -5.79415741e+01,\n         -4.21551895e+01,  1.21620552e+02, -7.38185654e+01,\n          1.09575493e+02, -1.10213699e+01,  3.13009415e+01,\n          2.94788132e+01],\n        [-6.81732407e+01,  2.08087921e+00,  5.48592758e+01,\n          4.62516708e+01, -5.42174301e+01,  5.03157578e+01,\n          1.29546204e+02,  1.11438972e+02, -9.38925323e+01,\n          1.16723701e+02],\n        [ 1.13277611e+02, -7.53178635e+01,  1.45351318e+02,\n          1.04154488e+02,  1.37364227e+02,  8.22886887e+01,\n         -8.36117325e+01,  2.96480331e+01,  1.22100754e+01,\n          5.53763199e+01],\n        [ 4.94934921e+01, -4.14348373e+01,  1.70764847e+01,\n          1.16824883e+02, -8.57230377e+01, -4.77780457e+01,\n          4.24555740e+01,  7.58025436e+01,  1.85454559e+00,\n          9.87089539e+00],\n        [ 7.33859787e+01, -9.30373764e+01,  9.65823746e+01,\n         -9.88266678e+01,  1.44172394e+02,  1.44229706e+02,\n         -9.41053009e+01, -6.58941193e+01,  1.29315521e+02,\n         -7.06585236e+01],\n        [ 9.58650894e+01,  8.49733047e+01,  2.71953506e+01,\n         -9.65370560e+01,  1.16097260e+01, -8.35484009e+01,\n         -4.08843994e+01, -5.23969269e+01, -6.04800911e+01,\n          6.26775436e+01],\n        [-8.06891632e+00, -9.16029129e+01,  1.15750801e+02,\n          1.31946747e+02, -3.18218689e+01,  5.31145706e+01,\n         -8.56514206e+01,  9.38064194e+01,  5.19059219e+01,\n         -4.90281296e+01],\n        [ 5.02512131e+01,  1.42866745e+01,  1.05011391e+02,\n          5.53982620e+01,  1.30596802e+02,  8.18416367e+01,\n          8.88535538e+01,  1.02474892e+02,  8.85268021e+01,\n          4.91496353e+01],\n        [-4.98633957e+01,  2.02299118e+01, -1.22019348e+01,\n         -1.32437668e+01,  1.35769806e+02,  3.37870102e+01,\n         -7.44860306e+01,  4.32413101e+01, -9.26950836e+00,\n         -7.94934769e+01],\n        [ 6.27072067e+01,  7.47899094e+01, -6.68834610e+01,\n          3.79912186e+01, -8.14851074e+01,  1.08606178e+02,\n          6.66902237e+01,  1.08447411e+02,  4.26803513e+01,\n          5.52678757e+01]],\n\n       [[ 8.10751877e+01, -8.11896439e+01,  1.22563988e+02,\n         -1.05457634e+02,  6.68368149e+01, -1.05671097e+02,\n         -1.13012367e+02,  1.13818718e+02, -1.00409996e+02,\n          9.12837143e+01],\n        [ 1.22054756e+02,  1.22275459e+02,  6.02481918e+01,\n          3.96487808e+01,  9.97240372e+01,  7.25556107e+01,\n          8.00808029e+01, -8.04414215e+01,  2.42811508e+01,\n         -6.88411255e+01],\n        [ 4.14079285e+00, -8.31655579e+01, -2.65333786e+01,\n          4.53272018e+01,  4.96379166e+01, -4.43802032e+01,\n          6.07885056e+01,  5.56738358e+01,  1.12527809e+02,\n         -8.33448944e+01],\n        [-8.84954224e+01,  1.09412163e+02,  7.44341965e+01,\n          7.61693344e+01,  6.52759476e+01, -1.15219116e-01,\n         -6.59789200e+01,  4.43881607e+01,  3.08781204e+01,\n          8.59408493e+01],\n        [-1.42237625e+01,  8.73493576e+01,  1.79875717e+01,\n         -9.94309998e+01,  5.32576523e+01,  6.85073853e-01,\n         -4.48860397e+01,  4.27962265e+01, -6.97885513e+01,\n         -6.38079872e+01],\n        [ 1.05400085e+00,  6.57589493e+01,  1.36473328e+02,\n          8.69223557e+01,  4.28413391e-01,  9.26665115e+01,\n         -6.13795090e+01,  4.91987534e+01,  1.56091080e+01,\n          1.06910210e+02],\n        [ 1.37487946e+02, -7.18929520e+01,  8.99152298e+01,\n          1.29636993e+02,  2.10889969e+01, -1.65329895e+01,\n          5.36778946e+01, -7.71602554e+01, -9.69299469e+01,\n         -8.03593903e+01],\n        [-8.84350586e+00,  1.01899681e+02,  5.42666397e+01,\n          5.30211411e+01,  4.59508896e+01,  1.19949028e+02,\n          1.00756836e+00, -9.28364563e+00, -5.27191391e+01,\n          3.37791824e+01],\n        [ 5.79211502e+01,  5.32680435e+01,  3.61371841e+01,\n          3.54575729e+01,  3.26721115e+01,  4.68098526e+01,\n          2.23580704e+01, -5.06235123e+01,  1.27265930e-01,\n         -5.53625946e+01],\n        [-9.61184006e+01, -2.22457886e-01,  2.41859360e+01,\n         -4.27887650e+01,  4.83356400e+01,  6.90720444e+01,\n         -3.45466995e+01,  7.32562943e+01, -2.49025803e+01,\n          9.68327560e+01]],\n\n       [[ 4.53952408e+01,  6.70795364e+01,  4.54890366e+01,\n          1.14502174e+02,  9.32056656e+01,  1.26944969e+02,\n         -7.82727966e+01,  1.17943352e+02, -6.60988159e+01,\n          7.54297256e+01],\n        [-1.23475082e+02,  7.37239761e+01, -5.82858505e+01,\n         -3.69665527e+01, -1.12508179e+02,  3.30751114e+01,\n          7.12679520e+01,  8.24957962e+01,  7.22993698e+01,\n          2.65822372e+01],\n        [ 7.51649857e+01, -1.05354118e+02, -1.14267532e+02,\n          1.14922256e+01, -7.93740082e+01,  3.03265152e+01,\n          3.45688705e+01, -7.83527451e+01,  9.56405716e+01,\n         -1.13109436e+02],\n        [ 3.18633957e+01, -5.44676514e+01, -8.98758011e+01,\n         -9.92438431e+01, -6.28639221e-01,  4.09925613e+01,\n         -1.37770615e+01, -1.15954720e+02,  3.11483002e+00,\n         -1.02346146e+02],\n        [ 7.83262253e+01,  3.44012833e+01, -5.95627823e+01,\n         -6.38554306e+01,  7.57797165e+01, -6.87473145e+01,\n          3.61064148e+00, -1.14545555e+02,  8.53989944e+01,\n         -7.40092697e+01],\n        [-2.09401703e+00, -4.74395294e+01, -9.08986664e+01,\n         -1.16590866e+02, -1.11588112e+02, -9.04930115e+00,\n         -8.87697144e+01,  1.11797630e+02, -4.92320709e+01,\n          5.51544113e+01],\n        [-9.75403976e+01,  8.67995377e+01, -3.16514435e+01,\n         -7.94025040e+01,  1.04114098e+02,  1.24624825e+02,\n          9.82923660e+01, -1.07699509e+01,  1.07322769e+01,\n         -4.54591904e+01],\n        [-5.03931046e+01, -5.43398972e+01,  8.74058456e+01,\n          1.02215904e+02,  7.50681305e+00,  1.10816353e+02,\n         -8.31460419e+01,  3.91481247e+01,  4.36732407e+01,\n         -4.65065002e+00],\n        [ 5.72093124e+01,  8.80749435e+01, -2.10574417e+01,\n         -4.38390503e+01, -4.18807983e+00, -6.20355644e+01,\n         -2.25195999e+01,  7.08724747e+01,  3.72919464e+00,\n         -1.17423523e+02],\n        [-6.67506256e+01,  2.24929276e+01, -2.19845657e+01,\n         -3.30541611e+01, -7.07444305e+01, -1.00253891e+02,\n          9.15063553e+01, -1.02114746e+02,  2.37203293e+01,\n         -4.73711929e+01]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9f3440>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "x": {
                                    "variable_value": "array([[[169, 190, 169, 238, 216, 250,  45, 241,  57, 199],\n        [  0, 197,  65,  86,  11, 156, 194, 206, 195, 150],\n        [198,  18,   9, 135,  44, 154, 158,  45, 219,  10],\n        [155,  69,  33,  24, 123, 164, 109,   7, 126,  21],\n        [202, 158,  64,  59, 199,  54, 127,   9, 209,  49],\n        [121,  76,  32,   7,  12, 114,  34, 235,  74, 178],\n        [ 26, 210,  92,  44, 227, 248, 221, 112, 134,  78],\n        [ 73,  69, 211, 225, 131, 234,  40, 162, 167, 119],\n        [180, 211, 102,  79, 119,  61, 101, 194, 127,   6],\n        [ 56, 146, 101,  90,  52,  23, 215,  21, 147,  76]],\n\n       [[197,  35, 239,  11, 183,  11,   3, 230,  16, 208],\n        [238, 239, 177, 156, 216, 189, 196,  36, 141,  47],\n        [120,  33,  90, 162, 166,  72, 177, 172, 229,  33],\n        [ 28, 226, 191, 192, 182, 116,  50, 161, 147, 202],\n        [102, 204, 134,  17, 170, 117,  71, 159,  46,  52],\n        [117, 182, 253, 203, 117, 209,  55, 165, 132, 223],\n        [254,  44, 206, 246, 137, 100, 170,  39,  19,  36],\n        [107, 218, 171, 169, 162, 236, 117, 107,  64, 150],\n        [174, 170, 152, 152, 149, 163, 139,  66, 116,  61],\n        [ 20, 116, 140,  73, 165, 185,  82, 190,  91, 213]],\n\n       [[117,  75,  45,  61, 225,  30, 213,  92, 135, 133],\n        [ 35, 106, 158, 150,  49, 154, 233, 215,  10, 220],\n        [217,  28, 249, 208, 241, 186,  20, 133, 116, 159],\n        [153,  62, 121, 220,  18,  56, 146, 179, 105, 113],\n        [177,  10, 200,   5, 248, 248,   9,  38, 233,  33],\n        [199, 188, 131,   7, 115,  20,  63,  51,  43, 166],\n        [ 95,  12, 219, 235,  72, 157,  18, 197, 155,  54],\n        [154, 118, 208, 159, 234, 185, 192, 206, 192, 153],\n        [ 54, 124,  91,  90, 239, 137,  29, 147,  94,  24],\n        [166, 178,  37, 141,  22, 212, 170, 212, 146, 159]]], dtype=int32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e31c5d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "std": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            },
                            {
                                "x": {
                                    "variable_value": "array([[[  13.060997  ,  -28.939003  ,  -58.939003  ,  -42.939003  ,\n          121.061     ,  -73.939     ,  109.061     ,  -11.939003  ,\n           31.060997  ,   29.060997  ],\n        [ -68.939     ,    2.060997  ,   54.060997  ,   46.060997  ,\n          -54.939003  ,   50.060997  ,  129.061     ,  111.061     ,\n          -93.939     ,  116.061     ],\n        [ 113.061     ,  -75.939     ,  145.061     ,  104.061     ,\n          137.061     ,   82.061     ,  -83.939     ,   29.060997  ,\n           12.060997  ,   55.060997  ],\n        [  49.060997  ,  -41.939003  ,   17.060997  ,  116.061     ,\n          -85.939     ,  -47.939003  ,   42.060997  ,   75.061     ,\n            1.060997  ,    9.060997  ],\n        [  73.061     ,  -93.939     ,   96.061     ,  -98.939     ,\n          144.061     ,  144.061     ,  -94.939     ,  -65.939     ,\n          129.061     ,  -70.939     ],\n        [  95.061     ,   84.061     ,   27.060997  ,  -96.939     ,\n           11.060997  ,  -83.939     ,  -40.939003  ,  -52.939003  ,\n          -60.939003  ,   62.060997  ],\n        [  -8.939003  ,  -91.939     ,  115.061     ,  131.061     ,\n          -31.939003  ,   53.060997  ,  -85.939     ,   93.061     ,\n           51.060997  ,  -49.939003  ],\n        [  50.060997  ,   14.060997  ,  104.061     ,   55.060997  ,\n          130.061     ,   81.061     ,   88.061     ,  102.061     ,\n           88.061     ,   49.060997  ],\n        [ -49.939003  ,   20.060997  ,  -12.939003  ,  -13.939003  ,\n          135.061     ,   33.060997  ,  -74.939     ,   43.060997  ,\n           -9.939003  ,  -79.939     ],\n        [  62.060997  ,   74.061     ,  -66.939     ,   37.060997  ,\n          -81.939     ,  108.061     ,   66.061     ,  108.061     ,\n           42.060997  ,   55.060997  ]],\n\n       [[  80.221     ,  -81.779     ,  122.221     , -105.779     ,\n           66.221     , -105.779     , -113.779     ,  113.221     ,\n         -100.779     ,   91.221     ],\n        [ 121.221     ,  122.221     ,   60.221     ,   39.221     ,\n           99.221     ,   72.221     ,   79.221     ,  -80.779     ,\n           24.221     ,  -69.779     ],\n        [   3.2210007 ,  -83.779     ,  -26.779     ,   45.221     ,\n           49.221     ,  -44.779     ,   60.221     ,   55.221     ,\n          112.221     ,  -83.779     ],\n        [ -88.779     ,  109.221     ,   74.221     ,   75.221     ,\n           65.221     ,   -0.7789993 ,  -66.779     ,   44.221     ,\n           30.221     ,   85.221     ],\n        [ -14.778999  ,   87.221     ,   17.221     ,  -99.779     ,\n           53.221     ,    0.22100067,  -45.779     ,   42.221     ,\n          -70.779     ,  -64.779     ],\n        [   0.22100067,   65.221     ,  136.22101   ,   86.221     ,\n            0.22100067,   92.221     ,  -61.779     ,   48.221     ,\n           15.221001  ,  106.221     ],\n        [ 137.22101   ,  -72.779     ,   89.221     ,  129.22101   ,\n           20.221     ,  -16.779     ,   53.221     ,  -77.779     ,\n          -97.779     ,  -80.779     ],\n        [  -9.778999  ,  101.221     ,   54.221     ,   52.221     ,\n           45.221     ,  119.221     ,    0.22100067,   -9.778999  ,\n          -52.779     ,   33.221     ],\n        [  57.221     ,   53.221     ,   35.221     ,   35.221     ,\n           32.221     ,   46.221     ,   22.221     ,  -50.779     ,\n           -0.7789993 ,  -55.779     ],\n        [ -96.779     ,   -0.7789993 ,   23.221     ,  -43.779     ,\n           48.221     ,   68.221     ,  -34.779     ,   73.221     ,\n          -25.779     ,   96.221     ]],\n\n       [[  45.32      ,   66.32      ,   45.32      ,  114.32      ,\n           92.32      ,  126.32      ,  -78.68      ,  117.32      ,\n          -66.68      ,   75.32      ],\n        [-123.68      ,   73.32      ,  -58.68      ,  -37.68      ,\n         -112.68      ,   32.32      ,   70.32      ,   82.32      ,\n           71.32      ,   26.32      ],\n        [  74.32      , -105.68      , -114.68      ,   11.32      ,\n          -79.68      ,   30.32      ,   34.32      ,  -78.68      ,\n           95.32      , -113.68      ],\n        [  31.32      ,  -54.68      ,  -90.68      ,  -99.68      ,\n           -0.6800003 ,   40.32      ,  -14.68      , -116.68      ,\n            2.3199997 , -102.68      ],\n        [  78.32      ,   34.32      ,  -59.68      ,  -64.68      ,\n           75.32      ,  -69.68      ,    3.3199997 , -114.68      ,\n           85.32      ,  -74.68      ],\n        [  -2.6800003 ,  -47.68      ,  -91.68      , -116.68      ,\n         -111.68      ,   -9.68      ,  -89.68      ,  111.32      ,\n          -49.68      ,   54.32      ],\n        [ -97.68      ,   86.32      ,  -31.68      ,  -79.68      ,\n          103.32      ,  124.32      ,   97.32      ,  -11.68      ,\n           10.32      ,  -45.68      ],\n        [ -50.68      ,  -54.68      ,   87.32      ,  101.32      ,\n            7.3199997 ,  110.32      ,  -83.68      ,   38.32      ,\n           43.32      ,   -4.6800003 ],\n        [  56.32      ,   87.32      ,  -21.68      ,  -44.68      ,\n           -4.6800003 ,  -62.68      ,  -22.68      ,   70.32      ,\n            3.3199997 , -117.68      ],\n        [ -67.68      ,   22.32      ,  -22.68      ,  -33.68      ,\n          -71.68      , -100.68      ,   91.32      , -102.68      ,\n           23.32      ,  -47.68      ]]], dtype=float32)",
                                    "variable_type": "ndarray",
                                    "variable_shape": "(3, 10, 10)"
                                },
                                "x.astype": {
                                    "variable_value": "<built-in method astype of numpy.ndarray object at 0x12e9f30d0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "K.floatx": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "K": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "mode": {
                                    "variable_value": "'caffe'",
                                    "variable_type": "str",
                                    "variable_shape": "5"
                                },
                                "mean": {
                                    "variable_value": "[103.939, 116.779, 123.68]",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "std": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "data_format": {
                                    "variable_value": "'channels_first'",
                                    "variable_type": "str",
                                    "variable_shape": "14"
                                },
                                "x.ndim": {
                                    "variable_value": "3",
                                    "variable_type": "int",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def _preprocess_numpy_input(x, data_format, mode):\n    \"\"\"Preprocesses a Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input array, 3D or 4D.\n        data_format: Data format of the image array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed Numpy array.\n    \"\"\"\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if x.ndim == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    # Zero-center by mean pixel\n    if data_format == 'channels_first':\n        if x.ndim == 3:\n            x[0, :, :] -= mean[0]\n            x[1, :, :] -= mean[1]\n            x[2, :, :] -= mean[2]\n            if std is not None:\n                x[0, :, :] /= std[0]\n                x[1, :, :] /= std[1]\n                x[2, :, :] /= std[2]\n        else:\n            x[:, 0, :, :] -= mean[0]\n            x[:, 1, :, :] -= mean[1]\n            x[:, 2, :, :] -= mean[2]\n            if std is not None:\n                x[:, 0, :, :] /= std[0]\n                x[:, 1, :, :] /= std[1]\n                x[:, 2, :, :] /= std[2]\n    else:\n        x[..., 0] -= mean[0]\n        x[..., 1] -= mean[1]\n        x[..., 2] -= mean[2]\n        if std is not None:\n            x[..., 0] /= std[0]\n            x[..., 1] /= std[1]\n            x[..., 2] /= std[2]\n    return x",
                "def _preprocess_symbolic_input(x, data_format, mode):\n    \"\"\"Preprocesses a tensor encoding a batch of images.\n\n    # Arguments\n        x: Input tensor, 3D or 4D.\n        data_format: Data format of the image tensor.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed tensor.\n    \"\"\"\n    global _IMAGENET_MEAN\n\n    if mode == 'tf':\n        x /= 127.5\n        x -= 1.\n        return x\n\n    if mode == 'torch':\n        x /= 255.\n        mean = [0.485, 0.456, 0.406]\n        std = [0.229, 0.224, 0.225]\n    else:\n        if data_format == 'channels_first':\n            # 'RGB'->'BGR'\n            if K.ndim(x) == 3:\n                x = x[::-1, ...]\n            else:\n                x = x[:, ::-1, ...]\n        else:\n            # 'RGB'->'BGR'\n            x = x[..., ::-1]\n        mean = [103.939, 116.779, 123.68]\n        std = None\n\n    if _IMAGENET_MEAN is None:\n        _IMAGENET_MEAN = K.constant(-np.array(mean))\n\n    # Zero-center by mean pixel\n    if K.dtype(x) != K.dtype(_IMAGENET_MEAN):\n        x = K.bias_add(x, K.cast(_IMAGENET_MEAN, K.dtype(x)), data_format)\n    else:\n        x = K.bias_add(x, _IMAGENET_MEAN, data_format)\n    if std is not None:\n        x /= std\n    return x",
                "def preprocess_input(x, data_format=None, mode='caffe'):\n    \"\"\"Preprocesses a tensor or Numpy array encoding a batch of images.\n\n    # Arguments\n        x: Input Numpy or symbolic tensor, 3D or 4D.\n        data_format: Data format of the image tensor/array.\n        mode: One of \"caffe\", \"tf\" or \"torch\".\n            - caffe: will convert the images from RGB to BGR,\n                then will zero-center each color channel with\n                respect to the ImageNet dataset,\n                without scaling.\n            - tf: will scale pixels between -1 and 1,\n                sample-wise.\n            - torch: will scale pixels between 0 and 1 and then\n                will normalize each channel with respect to the\n                ImageNet dataset.\n\n    # Returns\n        Preprocessed tensor or Numpy array.\n\n    # Raises\n        ValueError: In case of unknown `data_format` argument.\n    \"\"\"\n    if data_format is None:\n        data_format = K.image_data_format()\n    if data_format not in {'channels_first', 'channels_last'}:\n        raise ValueError('Unknown data_format ' + str(data_format))\n\n    if isinstance(x, np.ndarray):\n        return _preprocess_numpy_input(x, data_format=data_format, mode=mode)\n    else:\n        return _preprocess_symbolic_input(x, data_format=data_format,\n                                          mode=mode)",
                "def decode_predictions(preds, top=5):\n    \"\"\"Decodes the prediction of an ImageNet model.\n\n    # Arguments\n        preds: Numpy tensor encoding a batch of predictions.\n        top: Integer, how many top-guesses to return.\n\n    # Returns\n        A list of lists of top class prediction tuples\n        `(class_name, class_description, score)`.\n        One list of tuples per sample in batch input.\n\n    # Raises\n        ValueError: In case of invalid shape of the `pred` array\n            (must be 2D).\n    \"\"\"\n    global CLASS_INDEX\n    if len(preds.shape) != 2 or preds.shape[1] != 1000:\n        raise ValueError('`decode_predictions` expects '\n                         'a batch of predictions '\n                         '(i.e. a 2D array of shape (samples, 1000)). '\n                         'Found array with shape: ' + str(preds.shape))\n    if CLASS_INDEX is None:\n        fpath = get_file('imagenet_class_index.json',\n                         CLASS_INDEX_PATH,\n                         cache_subdir='models',\n                         file_hash='c2c37ea517e94d9795004a39431a14cb')\n        with open(fpath) as f:\n            CLASS_INDEX = json.load(f)\n    results = []\n    for pred in preds:\n        top_indices = pred.argsort()[-top:][::-1]\n        result = [tuple(CLASS_INDEX[str(i)]) + (pred[i],) for i in top_indices]\n        result.sort(key=lambda x: x[2], reverse=True)\n        results.append(result)\n    return results",
                "def _obtain_input_shape(input_shape,\n                        default_size,\n                        min_size,\n                        data_format,\n                        require_flatten,\n                        weights=None):\n    \"\"\"Internal utility to compute/validate a model's input shape.\n\n    # Arguments\n        input_shape: Either None (will return the default network input shape),\n            or a user-provided shape to be validated.\n        default_size: Default input width/height for the model.\n        min_size: Minimum input width/height accepted by the model.\n        data_format: Image data format to use.\n        require_flatten: Whether the model is expected to\n            be linked to a classifier via a Flatten layer.\n        weights: One of `None` (random initialization)\n            or 'imagenet' (pre-training on ImageNet).\n            If weights='imagenet' input channels must be equal to 3.\n\n    # Returns\n        An integer shape tuple (may include None entries).\n\n    # Raises\n        ValueError: In case of invalid argument values.\n    \"\"\"\n    if weights != 'imagenet' and input_shape and len(input_shape) == 3:\n        if data_format == 'channels_first':\n            if input_shape[0] not in {1, 3}:\n                warnings.warn(\n                    'This model usually expects 1 or 3 input channels. '\n                    'However, it was passed an input_shape with ' +\n                    str(input_shape[0]) + ' input channels.')\n            default_shape = (input_shape[0], default_size, default_size)\n        else:\n            if input_shape[-1] not in {1, 3}:\n                warnings.warn(\n                    'This model usually expects 1 or 3 input channels. '\n                    'However, it was passed an input_shape with ' +\n                    str(input_shape[-1]) + ' input channels.')\n            default_shape = (default_size, default_size, input_shape[-1])\n    else:\n        if data_format == 'channels_first':\n            default_shape = (3, default_size, default_size)\n        else:\n            default_shape = (default_size, default_size, 3)\n    if weights == 'imagenet' and require_flatten:\n        if input_shape is not None:\n            if input_shape != default_shape:\n                raise ValueError('When setting`include_top=True` '\n                                 'and loading `imagenet` weights, '\n                                 '`input_shape` should be ' +\n                                 str(default_shape) + '.')\n        return default_shape\n    if input_shape:\n        if data_format == 'channels_first':\n            if input_shape is not None:\n                if len(input_shape) != 3:\n                    raise ValueError(\n                        '`input_shape` must be a tuple of three integers.')\n                if input_shape[0] != 3 and weights == 'imagenet':\n                    raise ValueError('The input must have 3 channels; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n                if ((input_shape[1] is not None and input_shape[1] < min_size) or\n                   (input_shape[2] is not None and input_shape[2] < min_size)):\n                    raise ValueError('Input size must be at least ' +\n                                     str(min_size) + 'x' + str(min_size) + '; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n        else:\n            if input_shape is not None:\n                if len(input_shape) != 3:\n                    raise ValueError(\n                        '`input_shape` must be a tuple of three integers.')\n                if input_shape[-1] != 3 and weights == 'imagenet':\n                    raise ValueError('The input must have 3 channels; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n                if ((input_shape[0] is not None and input_shape[0] < min_size) or\n                   (input_shape[1] is not None and input_shape[1] < min_size)):\n                    raise ValueError('Input size must be at least ' +\n                                     str(min_size) + 'x' + str(min_size) + '; got '\n                                     '`input_shape=' + str(input_shape) + '`')\n    else:\n        if require_flatten:\n            input_shape = default_shape\n        else:\n            if data_format == 'channels_first':\n                input_shape = (3, None, None)\n            else:\n                input_shape = (None, None, 3)\n    if require_flatten:\n        if None in input_shape:\n            raise ValueError('If `include_top` is True, '\n                             'you should specify a static `input_shape`. '\n                             'Got `input_shape=' + str(input_shape) + '`')\n    return input_shape"
            ],
            "inscope_function_signatures": [
                "_preprocess_numpy_input(x, data_format, mode)",
                "_preprocess_symbolic_input(x, data_format, mode)",
                "preprocess_input(x, data_format=None, mode='caffe')",
                "decode_predictions(preds, top=5)",
                "_obtain_input_shape(input_shape, default_size, min_size, data_format, require_flatten, weights=None)"
            ],
            "variables_in_file": {
                "CLASS_INDEX": [
                    216,
                    212,
                    206,
                    14
                ],
                "CLASS_INDEX_PATH": [
                    208,
                    15
                ],
                "_IMAGENET_MEAN": [
                    136,
                    137,
                    140,
                    141,
                    143,
                    18
                ],
                "mode": [
                    41,
                    46,
                    178,
                    114,
                    181,
                    119
                ],
                "x": [
                    129,
                    132,
                    140,
                    141,
                    143,
                    145,
                    146,
                    42,
                    43,
                    44,
                    47,
                    177,
                    178,
                    180,
                    53,
                    54,
                    56,
                    59,
                    65,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    82,
                    83,
                    84,
                    86,
                    87,
                    88,
                    89,
                    217,
                    115,
                    116,
                    117,
                    120,
                    126,
                    127
                ],
                "mean": [
                    66,
                    67,
                    68,
                    133,
                    137,
                    74,
                    75,
                    76,
                    48,
                    82,
                    83,
                    84,
                    121,
                    60
                ],
                "std": [
                    69,
                    70,
                    71,
                    72,
                    134,
                    77,
                    78,
                    79,
                    80,
                    49,
                    144,
                    145,
                    85,
                    86,
                    87,
                    88,
                    122,
                    61
                ],
                "data_format": [
                    64,
                    264,
                    172,
                    141,
                    173,
                    143,
                    174,
                    175,
                    178,
                    51,
                    180,
                    277,
                    307,
                    249,
                    124
                ],
                "x.ndim": [
                    65,
                    53
                ],
                "K.ndim": [
                    126
                ],
                "K": [
                    137,
                    140,
                    141,
                    173,
                    143,
                    126
                ],
                "K.constant": [
                    137
                ],
                "np.array": [
                    137
                ],
                "np": [
                    137,
                    177
                ],
                "K.dtype": [
                    140,
                    141
                ],
                "K.bias_add": [
                    141,
                    143
                ],
                "K.cast": [
                    141
                ],
                "K.image_data_format": [
                    173
                ],
                "ValueError": [
                    293,
                    296,
                    202,
                    300,
                    271,
                    175,
                    280,
                    313,
                    283,
                    287
                ],
                "str": [
                    288,
                    289,
                    261,
                    297,
                    205,
                    301,
                    175,
                    302,
                    274,
                    216,
                    315,
                    284,
                    254
                ],
                "isinstance": [
                    177
                ],
                "np.ndarray": [
                    177
                ],
                "_preprocess_numpy_input": [
                    178
                ],
                "_preprocess_symbolic_input": [
                    180
                ],
                "len": [
                    248,
                    201,
                    292,
                    279
                ],
                "preds.shape": [
                    201,
                    205
                ],
                "preds": [
                    201,
                    205,
                    214
                ],
                "fpath": [
                    211,
                    207
                ],
                "get_file": [
                    207
                ],
                "open": [
                    211
                ],
                "f": [
                    211,
                    212
                ],
                "json.load": [
                    212
                ],
                "json": [
                    212
                ],
                "results": [
                    218,
                    219,
                    213
                ],
                "pred": [
                    216,
                    214,
                    215
                ],
                "top_indices": [
                    216,
                    215
                ],
                "pred.argsort": [
                    215
                ],
                "top": [
                    215
                ],
                "result": [
                    216,
                    217,
                    218
                ],
                "tuple": [
                    216
                ],
                "i": [
                    216
                ],
                "result.sort": [
                    217
                ],
                "results.append": [
                    218
                ],
                "weights": [
                    248,
                    282,
                    268,
                    295
                ],
                "input_shape": [
                    257,
                    261,
                    262,
                    269,
                    270,
                    276,
                    278,
                    279,
                    282,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    295,
                    297,
                    298,
                    299,
                    302,
                    305,
                    308,
                    310,
                    312,
                    315,
                    316,
                    248,
                    250,
                    254,
                    255
                ],
                "warnings.warn": [
                    258,
                    251
                ],
                "warnings": [
                    258,
                    251
                ],
                "default_shape": [
                    262,
                    265,
                    267,
                    270,
                    305,
                    274,
                    275,
                    255
                ],
                "default_size": [
                    265,
                    267,
                    262,
                    255
                ],
                "require_flatten": [
                    304,
                    268,
                    311
                ],
                "min_size": [
                    288,
                    298,
                    299,
                    301,
                    285,
                    286
                ]
            },
            "filtered_variables_in_file": {
                "CLASS_INDEX": [
                    216,
                    212,
                    206,
                    14
                ],
                "CLASS_INDEX_PATH": [
                    208,
                    15
                ],
                "_IMAGENET_MEAN": [
                    136,
                    137,
                    140,
                    141,
                    143,
                    18
                ],
                "mode": [
                    41,
                    46,
                    178,
                    114,
                    181,
                    119
                ],
                "x": [
                    129,
                    132,
                    140,
                    141,
                    143,
                    145,
                    146,
                    42,
                    43,
                    44,
                    47,
                    177,
                    178,
                    180,
                    53,
                    54,
                    56,
                    59,
                    65,
                    66,
                    67,
                    68,
                    70,
                    71,
                    72,
                    74,
                    75,
                    76,
                    78,
                    79,
                    80,
                    82,
                    83,
                    84,
                    86,
                    87,
                    88,
                    89,
                    217,
                    115,
                    116,
                    117,
                    120,
                    126,
                    127
                ],
                "mean": [
                    66,
                    67,
                    68,
                    133,
                    137,
                    74,
                    75,
                    76,
                    48,
                    82,
                    83,
                    84,
                    121,
                    60
                ],
                "std": [
                    69,
                    70,
                    71,
                    72,
                    134,
                    77,
                    78,
                    79,
                    80,
                    49,
                    144,
                    145,
                    85,
                    86,
                    87,
                    88,
                    122,
                    61
                ],
                "data_format": [
                    64,
                    264,
                    172,
                    141,
                    173,
                    143,
                    174,
                    175,
                    178,
                    51,
                    180,
                    277,
                    307,
                    249,
                    124
                ],
                "x.ndim": [
                    65,
                    53
                ],
                "K.ndim": [
                    126
                ],
                "K": [
                    137,
                    140,
                    141,
                    173,
                    143,
                    126
                ],
                "K.constant": [
                    137
                ],
                "np.array": [
                    137
                ],
                "np": [
                    137,
                    177
                ],
                "K.dtype": [
                    140,
                    141
                ],
                "K.bias_add": [
                    141,
                    143
                ],
                "K.cast": [
                    141
                ],
                "K.image_data_format": [
                    173
                ],
                "np.ndarray": [
                    177
                ],
                "_preprocess_numpy_input": [
                    178
                ],
                "_preprocess_symbolic_input": [
                    180
                ],
                "preds.shape": [
                    201,
                    205
                ],
                "preds": [
                    201,
                    205,
                    214
                ],
                "fpath": [
                    211,
                    207
                ],
                "get_file": [
                    207
                ],
                "f": [
                    211,
                    212
                ],
                "json.load": [
                    212
                ],
                "json": [
                    212
                ],
                "results": [
                    218,
                    219,
                    213
                ],
                "pred": [
                    216,
                    214,
                    215
                ],
                "top_indices": [
                    216,
                    215
                ],
                "pred.argsort": [
                    215
                ],
                "top": [
                    215
                ],
                "result": [
                    216,
                    217,
                    218
                ],
                "i": [
                    216
                ],
                "result.sort": [
                    217
                ],
                "results.append": [
                    218
                ],
                "weights": [
                    248,
                    282,
                    268,
                    295
                ],
                "input_shape": [
                    257,
                    261,
                    262,
                    269,
                    270,
                    276,
                    278,
                    279,
                    282,
                    284,
                    285,
                    286,
                    289,
                    291,
                    292,
                    295,
                    297,
                    298,
                    299,
                    302,
                    305,
                    308,
                    310,
                    312,
                    315,
                    316,
                    248,
                    250,
                    254,
                    255
                ],
                "warnings.warn": [
                    258,
                    251
                ],
                "warnings": [
                    258,
                    251
                ],
                "default_shape": [
                    262,
                    265,
                    267,
                    270,
                    305,
                    274,
                    275,
                    255
                ],
                "default_size": [
                    265,
                    267,
                    262,
                    255
                ],
                "require_flatten": [
                    304,
                    268,
                    311
                ],
                "min_size": [
                    288,
                    298,
                    299,
                    301,
                    285,
                    286
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/keras_25/tests/keras/applications/imagenet_utils_test.py",
                "test_function": "test_preprocess_input",
                "test_function_code": "def test_preprocess_input():\n    # Test image batch with float and int image input\n    x = np.random.uniform(0, 255, (2, 10, 10, 3))\n    xint = x.astype('int32')\n    assert utils.preprocess_input(x).shape == x.shape\n    assert utils.preprocess_input(xint).shape == xint.shape\n\n    out1 = utils.preprocess_input(x, 'channels_last')\n    out1int = utils.preprocess_input(xint, 'channels_last')\n    out2 = utils.preprocess_input(np.transpose(x, (0, 3, 1, 2)),\n                                  'channels_first')\n    out2int = utils.preprocess_input(np.transpose(xint, (0, 3, 1, 2)),\n                                     'channels_first')\n    assert_allclose(out1, out2.transpose(0, 2, 3, 1))\n    assert_allclose(out1int, out2int.transpose(0, 2, 3, 1))\n\n    # Test single image\n    x = np.random.uniform(0, 255, (10, 10, 3))\n    xint = x.astype('int32')\n    assert utils.preprocess_input(x).shape == x.shape\n    assert utils.preprocess_input(xint).shape == xint.shape\n\n    out1 = utils.preprocess_input(x, 'channels_last')\n    out1int = utils.preprocess_input(xint, 'channels_last')\n    out2 = utils.preprocess_input(np.transpose(x, (2, 0, 1)),\n                                  'channels_first')\n    out2int = utils.preprocess_input(np.transpose(xint, (2, 0, 1)),\n                                     'channels_first')\n    assert_allclose(out1, out2.transpose(1, 2, 0))\n    assert_allclose(out1int, out2int.transpose(1, 2, 0))",
                "test_error": "numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'",
                "full_test_error": "def test_preprocess_input():\n        # Test image batch with float and int image input\n        x = np.random.uniform(0, 255, (2, 10, 10, 3))\n        xint = x.astype('int32')\n        assert utils.preprocess_input(x).shape == x.shape\n>       assert utils.preprocess_input(xint).shape == xint.shape\n\ntests/keras/applications/imagenet_utils_test.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nkeras/applications/imagenet_utils.py:178: in preprocess_input\n    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = array([[[[ 94, 223,  68],\n         [ 25, 234, 109],\n         [191, 211, 115],\n         [  7,  97, 182],\n         [156,...         [109, 186, 117],\n         [240, 218,  14],\n         [ 26, 208, 232],\n         [ 95,  25,  25]]]], dtype=int32)\ndata_format = 'channels_last', mode = 'caffe'\n\n    def _preprocess_numpy_input(x, data_format, mode):\n        \"\"\"Preprocesses a Numpy array encoding a batch of images.\n    \n        # Arguments\n            x: Input array, 3D or 4D.\n            data_format: Data format of the image array.\n            mode: One of \"caffe\", \"tf\" or \"torch\".\n                - caffe: will convert the images from RGB to BGR,\n                    then will zero-center each color channel with\n                    respect to the ImageNet dataset,\n                    without scaling.\n                - tf: will scale pixels between -1 and 1,\n                    sample-wise.\n                - torch: will scale pixels between 0 and 1 and then\n                    will normalize each channel with respect to the\n                    ImageNet dataset.\n    \n        # Returns\n            Preprocessed Numpy array.\n        \"\"\"\n        if mode == 'tf':\n            x /= 127.5\n            x -= 1.\n            return x\n    \n        if mode == 'torch':\n            x /= 255.\n            mean = [0.485, 0.456, 0.406]\n            std = [0.229, 0.224, 0.225]\n        else:\n            if data_format == 'channels_first':\n                # 'RGB'->'BGR'\n                if x.ndim == 3:\n                    x = x[::-1, ...]\n                else:\n                    x = x[:, ::-1, ...]\n            else:\n                # 'RGB'->'BGR'\n                x = x[..., ::-1]\n            mean = [103.939, 116.779, 123.68]\n            std = None\n    \n        # Zero-center by mean pixel\n        if data_format == 'channels_first':\n            if x.ndim == 3:\n                x[0, :, :] -= mean[0]\n                x[1, :, :] -= mean[1]\n                x[2, :, :] -= mean[2]\n                if std is not None:\n                    x[0, :, :] /= std[0]\n                    x[1, :, :] /= std[1]\n                    x[2, :, :] /= std[2]\n            else:\n                x[:, 0, :, :] -= mean[0]\n                x[:, 1, :, :] -= mean[1]\n                x[:, 2, :, :] -= mean[2]\n                if std is not None:\n                    x[:, 0, :, :] /= std[0]\n                    x[:, 1, :, :] /= std[1]\n                    x[:, 2, :, :] /= std[2]\n        else:\n>           x[..., 0] -= mean[0]\nE           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'\n\nkeras/applications/imagenet_utils.py:82: UFuncTypeError",
                "traceback": "keras/applications/imagenet_utils.py:178: in preprocess_input\n    return _preprocess_numpy_input(x, data_format=data_format, mode=mode)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nx = array([[[[ 94, 223,  68],\n         [ 25, 234, 109],\n         [191, 211, 115],\n         [  7,  97, 182],\n         [156,...         [109, 186, 117],\n         [240, 218,  14],\n         [ 26, 208, 232],\n         [ 95,  25,  25]]]], dtype=int32)\ndata_format = 'channels_last', mode = 'caffe'\n\n    def _preprocess_numpy_input(x, data_format, mode):\n        \"\"\"Preprocesses a Numpy array encoding a batch of images.\n    \n        # Arguments\n            x: Input array, 3D or 4D.\n            data_format: Data format of the image array.\n            mode: One of \"caffe\", \"tf\" or \"torch\".\n                - caffe: will convert the images from RGB to BGR,\n                    then will zero-center each color channel with\n                    respect to the ImageNet dataset,\n                    without scaling.\n                - tf: will scale pixels between -1 and 1,\n                    sample-wise.\n                - torch: will scale pixels between 0 and 1 and then\n                    will normalize each channel with respect to the\n                    ImageNet dataset.\n    \n        # Returns\n            Preprocessed Numpy array.\n        \"\"\"\n        if mode == 'tf':\n            x /= 127.5\n            x -= 1.\n            return x\n    \n        if mode == 'torch':\n            x /= 255.\n            mean = [0.485, 0.456, 0.406]\n            std = [0.229, 0.224, 0.225]\n        else:\n            if data_format == 'channels_first':\n                # 'RGB'->'BGR'\n                if x.ndim == 3:\n                    x = x[::-1, ...]\n                else:\n                    x = x[:, ::-1, ...]\n            else:\n                # 'RGB'->'BGR'\n                x = x[..., ::-1]\n            mean = [103.939, 116.779, 123.68]\n            std = None\n    \n        # Zero-center by mean pixel\n        if data_format == 'channels_first':\n            if x.ndim == 3:\n                x[0, :, :] -= mean[0]\n                x[1, :, :] -= mean[1]\n                x[2, :, :] -= mean[2]\n                if std is not None:\n                    x[0, :, :] /= std[0]\n                    x[1, :, :] /= std[1]\n                    x[2, :, :] /= std[2]\n            else:\n                x[:, 0, :, :] -= mean[0]\n                x[:, 1, :, :] -= mean[1]\n                x[:, 2, :, :] -= mean[2]\n                if std is not None:\n                    x[:, 0, :, :] /= std[0]\n                    x[:, 1, :, :] /= std[1]\n                    x[:, 2, :, :] /= std[2]\n        else:\n>           x[..., 0] -= mean[0]\nE           numpy.core._exceptions.UFuncTypeError: Cannot cast ufunc 'subtract' output from dtype('float64') to dtype('int32') with casting rule 'same_kind'\n\nkeras/applications/imagenet_utils.py:82: UFuncTypeError",
                "test_function_decorators": []
            }
        ]
    }
}