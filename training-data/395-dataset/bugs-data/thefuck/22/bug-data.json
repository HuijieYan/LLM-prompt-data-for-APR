{
    "thefuck:22": {
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/thefuck_22/thefuck/types.py": {
            "buggy_functions": [
                {
                    "function_name": "_realise",
                    "function_code": "def _realise(self):\n    \"\"\"Realises generator, removes duplicates and sorts commands.\"\"\"\n    commands = self._remove_duplicates(self._commands)\n    self._cached = [self._cached[0]] + sorted(\n        commands, key=lambda corrected_command: corrected_command.priority)\n    self._realised = True\n    debug('SortedCommandsSequence was realised with: {}, after: {}'.format(\n        self._cached, '\\n'.join(format_stack())), self._settings)\n",
                    "decorators": [],
                    "docstring": "Realises generator, removes duplicates and sorts commands.",
                    "start_line": 82,
                    "variables": {
                        "commands": [
                            84,
                            86
                        ],
                        "self._remove_duplicates": [
                            84
                        ],
                        "self": [
                            89,
                            84,
                            85,
                            87
                        ],
                        "self._commands": [
                            84
                        ],
                        "self._cached": [
                            89,
                            85
                        ],
                        "sorted": [
                            85
                        ],
                        "corrected_command.priority": [
                            86
                        ],
                        "corrected_command": [
                            86
                        ],
                        "self._realised": [
                            87
                        ],
                        "debug": [
                            88
                        ],
                        "format": [
                            88
                        ],
                        "join": [
                            89
                        ],
                        "format_stack": [
                            89
                        ],
                        "self._settings": [
                            89
                        ]
                    },
                    "filtered_variables": {
                        "commands": [
                            84,
                            86
                        ],
                        "self._remove_duplicates": [
                            84
                        ],
                        "self": [
                            89,
                            84,
                            85,
                            87
                        ],
                        "self._commands": [
                            84
                        ],
                        "self._cached": [
                            89,
                            85
                        ],
                        "corrected_command.priority": [
                            86
                        ],
                        "corrected_command": [
                            86
                        ],
                        "self._realised": [
                            87
                        ],
                        "debug": [
                            88
                        ],
                        "join": [
                            89
                        ],
                        "format_stack": [
                            89
                        ],
                        "self._settings": [
                            89
                        ]
                    },
                    "diff_line_number": 84,
                    "class_data": {
                        "signature": "class SortedCorrectedCommandsSequence(object)",
                        "docstring": "List-like collection/wrapper around generator, that:\n\n- immediately gives access to the first commands through [];\n- realises generator and sorts commands on first access to other\n  commands through [], or when len called.",
                        "constructor_docstring": null,
                        "functions": [
                            "def __init__(self, commands, settings):\n    self._settings = settings\n    self._commands = commands\n    self._cached = self._realise_first()\n    self._realised = False",
                            "def _realise_first(self):\n    try:\n        return [next(self._commands)]\n    except StopIteration:\n        return []",
                            "def _remove_duplicates(self, corrected_commands):\n    \"\"\"Removes low-priority duplicates.\"\"\"\n    commands = {command for command in sorted(corrected_commands, key=lambda command: -command.priority) if command.script != self._cached[0]}\n    return commands",
                            "def _realise(self):\n    \"\"\"Realises generator, removes duplicates and sorts commands.\"\"\"\n    commands = self._remove_duplicates(self._commands)\n    self._cached = [self._cached[0]] + sorted(commands, key=lambda corrected_command: corrected_command.priority)\n    self._realised = True\n    debug('SortedCommandsSequence was realised with: {}, after: {}'.format(self._cached, '\\n'.join(format_stack())), self._settings)",
                            "def __getitem__(self, item):\n    if item != 0 and (not self._realised):\n        self._realise()\n    return self._cached[item]",
                            "def __bool__(self):\n    return bool(self._cached)",
                            "def __len__(self):\n    if not self._realised:\n        self._realise()\n    return len(self._cached)",
                            "def __iter__(self):\n    if not self._realised:\n        self._realise()\n    return iter(self._cached)"
                        ],
                        "constructor_variables": [
                            "_realised",
                            "_cached",
                            "_commands",
                            "_settings"
                        ],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "__init__(self, commands, settings)",
                            "_realise_first(self)",
                            "_remove_duplicates(self, corrected_commands)",
                            "_realise(self)",
                            "__getitem__(self, item)",
                            "__bool__(self)",
                            "__len__(self)",
                            "__iter__(self)"
                        ]
                    },
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {},
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def __init__(self, script, side_effect, priority):\n    self.script = script\n    self.side_effect = side_effect\n    self.priority = priority",
                "def __eq__(self, other):\n    \"\"\"Ignores `priority` field.\"\"\"\n    if isinstance(other, CorrectedCommand):\n        return (other.script, other.side_effect) ==\\\n               (self.script, self.side_effect)\n    else:\n        return False",
                "def __hash__(self):\n    return (self.script, self.side_effect).__hash__()",
                "def __repr__(self):\n    return 'CorrectedCommand(script={}, side_effect={}, priority={})'.format(\n        self.script, self.side_effect, self.priority)",
                "def __contains__(self, item):\n    return super(RulesNamesList, self).__contains__(item.name)",
                "def __getattr__(self, item):\n    return self.get(item)",
                "def update(self, **kwargs):\n    \"\"\"\n    Returns new settings with values from `kwargs` for unset settings.\n    \"\"\"\n    conf = dict(kwargs)\n    conf.update(self)\n    return Settings(conf)",
                "def __init__(self, commands, settings):\n    self._settings = settings\n    self._commands = commands\n    self._cached = self._realise_first()\n    self._realised = False",
                "def _realise_first(self):\n    try:\n        return [next(self._commands)]\n    except StopIteration:\n        return []",
                "def _remove_duplicates(self, corrected_commands):\n    \"\"\"Removes low-priority duplicates.\"\"\"\n    commands = {command\n                for command in sorted(corrected_commands,\n                                      key=lambda command: -command.priority)\n                if command.script != self._cached[0]}\n    return commands",
                "def _realise(self):\n    \"\"\"Realises generator, removes duplicates and sorts commands.\"\"\"\n    commands = self._remove_duplicates(self._commands)\n    self._cached = [self._cached[0]] + sorted(\n        commands, key=lambda corrected_command: corrected_command.priority)\n    self._realised = True\n    debug('SortedCommandsSequence was realised with: {}, after: {}'.format(\n        self._cached, '\\n'.join(format_stack())), self._settings)",
                "def __getitem__(self, item):\n    if item != 0 and not self._realised:\n        self._realise()\n    return self._cached[item]",
                "def __bool__(self):\n    return bool(self._cached)",
                "def __len__(self):\n    if not self._realised:\n        self._realise()\n    return len(self._cached)",
                "def __iter__(self):\n    if not self._realised:\n        self._realise()\n    return iter(self._cached)"
            ],
            "inscope_function_signatures": [
                "__init__(self, script, side_effect, priority)",
                "__eq__(self, other)",
                "__hash__(self)",
                "__repr__(self)",
                "__contains__(self, item)",
                "__getattr__(self, item)",
                "update(self, **kwargs)",
                "__init__(self, commands, settings)",
                "_realise_first(self)",
                "_remove_duplicates(self, corrected_commands)",
                "_realise(self)",
                "__getitem__(self, item)",
                "__bool__(self)",
                "__len__(self)",
                "__iter__(self)"
            ],
            "variables_in_file": {
                "Command": [
                    5
                ],
                "namedtuple": [
                    5,
                    7
                ],
                "Rule": [
                    7
                ],
                "object": [
                    11,
                    53
                ],
                "self.script": [
                    21,
                    26,
                    13,
                    30
                ],
                "self": [
                    13,
                    14,
                    15,
                    21,
                    26,
                    30,
                    37,
                    42,
                    49,
                    63,
                    64,
                    65,
                    66,
                    70,
                    79,
                    84,
                    85,
                    87,
                    89,
                    92,
                    93,
                    94,
                    97,
                    100,
                    101,
                    102,
                    105,
                    106,
                    107
                ],
                "script": [
                    13
                ],
                "self.side_effect": [
                    26,
                    21,
                    14,
                    30
                ],
                "side_effect": [
                    14
                ],
                "self.priority": [
                    30,
                    15
                ],
                "priority": [
                    15
                ],
                "isinstance": [
                    19
                ],
                "other": [
                    19,
                    20
                ],
                "CorrectedCommand": [
                    19
                ],
                "other.script": [
                    20
                ],
                "other.side_effect": [
                    20
                ],
                "__hash__": [
                    26
                ],
                "format": [
                    88,
                    29
                ],
                "list": [
                    33
                ],
                "__contains__": [
                    37
                ],
                "super": [
                    37
                ],
                "RulesNamesList": [
                    37
                ],
                "item.name": [
                    37
                ],
                "item": [
                    42,
                    92,
                    37,
                    94
                ],
                "dict": [
                    40,
                    48
                ],
                "self.get": [
                    42
                ],
                "conf": [
                    48,
                    49,
                    50
                ],
                "kwargs": [
                    48
                ],
                "conf.update": [
                    49
                ],
                "Settings": [
                    50
                ],
                "self._settings": [
                    89,
                    63
                ],
                "settings": [
                    63
                ],
                "self._commands": [
                    64,
                    84,
                    70
                ],
                "commands": [
                    64,
                    76,
                    80,
                    84,
                    86
                ],
                "self._cached": [
                    65,
                    97,
                    102,
                    107,
                    79,
                    85,
                    89,
                    94
                ],
                "self._realise_first": [
                    65
                ],
                "self._realised": [
                    66,
                    100,
                    105,
                    87,
                    92
                ],
                "next": [
                    70
                ],
                "StopIteration": [
                    71
                ],
                "command": [
                    76,
                    77,
                    78,
                    79
                ],
                "sorted": [
                    85,
                    77
                ],
                "corrected_commands": [
                    77
                ],
                "command.priority": [
                    78
                ],
                "command.script": [
                    79
                ],
                "self._remove_duplicates": [
                    84
                ],
                "corrected_command.priority": [
                    86
                ],
                "corrected_command": [
                    86
                ],
                "debug": [
                    88
                ],
                "join": [
                    89
                ],
                "format_stack": [
                    89
                ],
                "self._realise": [
                    101,
                    93,
                    106
                ],
                "bool": [
                    97
                ],
                "len": [
                    102
                ],
                "iter": [
                    107
                ]
            },
            "filtered_variables_in_file": {
                "Command": [
                    5
                ],
                "namedtuple": [
                    5,
                    7
                ],
                "Rule": [
                    7
                ],
                "self.script": [
                    21,
                    26,
                    13,
                    30
                ],
                "self": [
                    13,
                    14,
                    15,
                    21,
                    26,
                    30,
                    37,
                    42,
                    49,
                    63,
                    64,
                    65,
                    66,
                    70,
                    79,
                    84,
                    85,
                    87,
                    89,
                    92,
                    93,
                    94,
                    97,
                    100,
                    101,
                    102,
                    105,
                    106,
                    107
                ],
                "script": [
                    13
                ],
                "self.side_effect": [
                    26,
                    21,
                    14,
                    30
                ],
                "side_effect": [
                    14
                ],
                "self.priority": [
                    30,
                    15
                ],
                "priority": [
                    15
                ],
                "other": [
                    19,
                    20
                ],
                "CorrectedCommand": [
                    19
                ],
                "other.script": [
                    20
                ],
                "other.side_effect": [
                    20
                ],
                "__hash__": [
                    26
                ],
                "__contains__": [
                    37
                ],
                "RulesNamesList": [
                    37
                ],
                "item.name": [
                    37
                ],
                "item": [
                    42,
                    92,
                    37,
                    94
                ],
                "self.get": [
                    42
                ],
                "conf": [
                    48,
                    49,
                    50
                ],
                "kwargs": [
                    48
                ],
                "conf.update": [
                    49
                ],
                "Settings": [
                    50
                ],
                "self._settings": [
                    89,
                    63
                ],
                "settings": [
                    63
                ],
                "self._commands": [
                    64,
                    84,
                    70
                ],
                "commands": [
                    64,
                    76,
                    80,
                    84,
                    86
                ],
                "self._cached": [
                    65,
                    97,
                    102,
                    107,
                    79,
                    85,
                    89,
                    94
                ],
                "self._realise_first": [
                    65
                ],
                "self._realised": [
                    66,
                    100,
                    105,
                    87,
                    92
                ],
                "command": [
                    76,
                    77,
                    78,
                    79
                ],
                "corrected_commands": [
                    77
                ],
                "command.priority": [
                    78
                ],
                "command.script": [
                    79
                ],
                "self._remove_duplicates": [
                    84
                ],
                "corrected_command.priority": [
                    86
                ],
                "corrected_command": [
                    86
                ],
                "debug": [
                    88
                ],
                "join": [
                    89
                ],
                "format_stack": [
                    89
                ],
                "self._realise": [
                    101,
                    93,
                    106
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/thefuck_22/tests/test_types.py",
                "test_function": "test_with_blank",
                "test_function_code": "    def test_with_blank(self, settings):\n        seq = SortedCorrectedCommandsSequence(iter([]), settings)\n        assert list(seq) == []",
                "test_error": "IndexError: list index out of range",
                "full_test_error": "self = <tests.test_types.TestSortedCorrectedCommandsSequence object at 0x10b89e210>\nsettings = <Mock id='4488553552'>\n\n    def test_with_blank(self, settings):\n        seq = SortedCorrectedCommandsSequence(iter([]), settings)\n>       assert list(seq) == []\n\ntests/test_types.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nthefuck/types.py:106: in __iter__\n    self._realise()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <thefuck.types.SortedCorrectedCommandsSequence object at 0x10b89e6d0>\n\n    def _realise(self):\n        \"\"\"Realises generator, removes duplicates and sorts commands.\"\"\"\n        commands = self._remove_duplicates(self._commands)\n>       self._cached = [self._cached[0]] + sorted(\n            commands, key=lambda corrected_command: corrected_command.priority)\nE       IndexError: list index out of range\n\nthefuck/types.py:85: IndexError",
                "traceback": "thefuck/types.py:106: in __iter__\n    self._realise()",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <thefuck.types.SortedCorrectedCommandsSequence object at 0x10b89e6d0>\n\n    def _realise(self):\n        \"\"\"Realises generator, removes duplicates and sorts commands.\"\"\"\n        commands = self._remove_duplicates(self._commands)\n>       self._cached = [self._cached[0]] + sorted(\n            commands, key=lambda corrected_command: corrected_command.priority)\nE       IndexError: list index out of range\n\nthefuck/types.py:85: IndexError",
                "test_function_decorators": []
            }
        ]
    }
}