{
    "thefuck:10": {
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/thefuck_10/thefuck/rules/man.py": {
            "buggy_functions": [
                {
                    "function_name": "get_new_command",
                    "function_code": "def get_new_command(command):\n    if '3' in command.script:\n        return command.script.replace(\"3\", \"2\")\n    if '2' in command.script:\n        return command.script.replace(\"2\", \"3\")\n\n    split_cmd2 = command.script_parts\n    split_cmd3 = split_cmd2[:]\n\n    split_cmd2.insert(1, ' 2 ')\n    split_cmd3.insert(1, ' 3 ')\n\n    last_arg = command.script_parts[-1]\n\n    return [\n        last_arg + ' --help',\n        \"\".join(split_cmd3),\n        \"\".join(split_cmd2),\n    ]\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 9,
                    "variables": {
                        "command.script": [
                            10,
                            11,
                            12,
                            13
                        ],
                        "command": [
                            10,
                            11,
                            12,
                            13,
                            15,
                            21
                        ],
                        "command.script.replace": [
                            11,
                            13
                        ],
                        "split_cmd2": [
                            16,
                            18,
                            26,
                            15
                        ],
                        "command.script_parts": [
                            21,
                            15
                        ],
                        "split_cmd3": [
                            16,
                            25,
                            19
                        ],
                        "split_cmd2.insert": [
                            18
                        ],
                        "split_cmd3.insert": [
                            19
                        ],
                        "last_arg": [
                            24,
                            21
                        ],
                        "join": [
                            25,
                            26
                        ]
                    },
                    "filtered_variables": {
                        "command.script": [
                            10,
                            11,
                            12,
                            13
                        ],
                        "command": [
                            10,
                            11,
                            12,
                            13,
                            15,
                            21
                        ],
                        "command.script.replace": [
                            11,
                            13
                        ],
                        "split_cmd2": [
                            16,
                            18,
                            26,
                            15
                        ],
                        "command.script_parts": [
                            21,
                            15
                        ],
                        "split_cmd3": [
                            16,
                            25,
                            19
                        ],
                        "split_cmd2.insert": [
                            18
                        ],
                        "split_cmd3.insert": [
                            19
                        ],
                        "last_arg": [
                            24,
                            21
                        ],
                        "join": [
                            25,
                            26
                        ]
                    },
                    "diff_line_number": 14,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "command.script": {
                                    "variable_value": "'man -s 3 read'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "command": {
                                    "variable_value": "Command(script=man -s 3 read, stdout=, stderr=)",
                                    "variable_type": "Command",
                                    "variable_shape": null
                                },
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "split_cmd2": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script_parts": {
                                    "variable_value": "['man', '-s', '3', 'read']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "split_cmd3": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split_cmd2.insert": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split_cmd3.insert": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "last_arg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "command.script": {
                                    "variable_value": "'man -s 3 read'",
                                    "variable_type": "str",
                                    "variable_shape": "13"
                                },
                                "command": {
                                    "variable_value": "Command(script=man -s 3 read, stdout=, stderr=)",
                                    "variable_type": "Command",
                                    "variable_shape": null
                                },
                                "command.script.replace": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "last_arg": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script_parts": {
                                    "variable_value": "['man', '-s', '3', 'read']",
                                    "variable_type": "list",
                                    "variable_shape": "4"
                                },
                                "help_command": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.stderr.strip": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.stderr": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "split_cmd2": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split_cmd3": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split_cmd2.insert": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split_cmd3.insert": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "join": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {}
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "@for_app('man', at_least=1)\ndef match(command):\n    return True",
                "def get_new_command(command):\n    if '3' in command.script:\n        return command.script.replace(\"3\", \"2\")\n    if '2' in command.script:\n        return command.script.replace(\"2\", \"3\")\n\n    split_cmd2 = command.script_parts\n    split_cmd3 = split_cmd2[:]\n\n    split_cmd2.insert(1, ' 2 ')\n    split_cmd3.insert(1, ' 3 ')\n\n    last_arg = command.script_parts[-1]\n\n    return [\n        last_arg + ' --help',\n        \"\".join(split_cmd3),\n        \"\".join(split_cmd2),\n    ]"
            ],
            "inscope_function_signatures": [
                "match(command)",
                "get_new_command(command)"
            ],
            "variables_in_file": {
                "for_app": [
                    4
                ],
                "command.script": [
                    10,
                    11,
                    12,
                    13
                ],
                "command": [
                    10,
                    11,
                    12,
                    13,
                    15,
                    21
                ],
                "command.script.replace": [
                    11,
                    13
                ],
                "split_cmd2": [
                    16,
                    18,
                    26,
                    15
                ],
                "command.script_parts": [
                    21,
                    15
                ],
                "split_cmd3": [
                    16,
                    25,
                    19
                ],
                "split_cmd2.insert": [
                    18
                ],
                "split_cmd3.insert": [
                    19
                ],
                "last_arg": [
                    24,
                    21
                ],
                "join": [
                    25,
                    26
                ]
            },
            "filtered_variables_in_file": {
                "for_app": [
                    4
                ],
                "command.script": [
                    10,
                    11,
                    12,
                    13
                ],
                "command": [
                    10,
                    11,
                    12,
                    13,
                    15,
                    21
                ],
                "command.script.replace": [
                    11,
                    13
                ],
                "split_cmd2": [
                    16,
                    18,
                    26,
                    15
                ],
                "command.script_parts": [
                    21,
                    15
                ],
                "split_cmd3": [
                    16,
                    25,
                    19
                ],
                "split_cmd2.insert": [
                    18
                ],
                "split_cmd3.insert": [
                    19
                ],
                "last_arg": [
                    24,
                    21
                ],
                "join": [
                    25,
                    26
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/thefuck_10/tests/rules/test_man.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),\n    (Command('man missing', stderr=\"No manual entry for missing\\n\"), ['missing --help']),\n    (Command('man 2 read'), 'man 3 read'),\n    (Command('man 3 read'), 'man 2 read'),\n    (Command('man -s2 read'), 'man -s3 read'),\n    (Command('man -s3 read'), 'man -s2 read'),\n    (Command('man -s 2 read'), 'man -s 3 read'),\n    (Command('man -s 3 read'), 'man -s 2 read')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command) == new_command",
                "test_error": "AssertionError: assert ['read --help... 'man 2 read'] == ['man 3 read',...'read --help']   At index 0 diff: 'read --help' != 'man 3 read'   Full diff:   - ['read --help', 'man 3 read', 'man 2 read']   + ['man 3 read', 'man 2 read', 'read --help']",
                "full_test_error": "command = Command(script=man read, stdout=, stderr=)\nnew_command = ['man 3 read', 'man 2 read', 'read --help']\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),\n        (Command('man missing', stderr=\"No manual entry for missing\\n\"), ['missing --help']),\n        (Command('man 2 read'), 'man 3 read'),\n        (Command('man 3 read'), 'man 2 read'),\n        (Command('man -s2 read'), 'man -s3 read'),\n        (Command('man -s3 read'), 'man -s2 read'),\n        (Command('man -s 2 read'), 'man -s 3 read'),\n        (Command('man -s 3 read'), 'man -s 2 read')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command) == new_command\nE       AssertionError: assert ['read --help... 'man 2 read'] == ['man 3 read',...'read --help']\nE         At index 0 diff: 'read --help' != 'man 3 read'\nE         Full diff:\nE         - ['read --help', 'man 3 read', 'man 2 read']\nE         + ['man 3 read', 'man 2 read', 'read --help']\n\ntests/rules/test_man.py:35: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command('man read'), ['man 3 read', 'man 2 read', 'read --help']), (Command('man missing', stderr='No manual entry for missing\\n'), ['missing --help']), (Command('man 2 read'), 'man 3 read'), (Command('man 3 read'), 'man 2 read'), (Command('man -s2 read'), 'man -s3 read'), (Command('man -s3 read'), 'man -s2 read'), (Command('man -s 2 read'), 'man -s 3 read'), (Command('man -s 3 read'), 'man -s 2 read')])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/thefuck_10/tests/rules/test_man.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),\n    (Command('man missing', stderr=\"No manual entry for missing\\n\"), ['missing --help']),\n    (Command('man 2 read'), 'man 3 read'),\n    (Command('man 3 read'), 'man 2 read'),\n    (Command('man -s2 read'), 'man -s3 read'),\n    (Command('man -s3 read'), 'man -s2 read'),\n    (Command('man -s 2 read'), 'man -s 3 read'),\n    (Command('man -s 3 read'), 'man -s 2 read')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command) == new_command",
                "test_error": "AssertionError: assert ['missing --h...an 2 missing'] == ['missing --help']   Left contains more items, first extra item: 'man 3 missing'   Full diff:   - ['missing --help', 'man 3 missing', 'man 2 missing']   + ['missing --help']",
                "full_test_error": "command = Command(script=man missing, stdout=, stderr=No manual entry for missing\n)\nnew_command = ['missing --help']\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),\n        (Command('man missing', stderr=\"No manual entry for missing\\n\"), ['missing --help']),\n        (Command('man 2 read'), 'man 3 read'),\n        (Command('man 3 read'), 'man 2 read'),\n        (Command('man -s2 read'), 'man -s3 read'),\n        (Command('man -s3 read'), 'man -s2 read'),\n        (Command('man -s 2 read'), 'man -s 3 read'),\n        (Command('man -s 3 read'), 'man -s 2 read')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command) == new_command\nE       AssertionError: assert ['missing --h...an 2 missing'] == ['missing --help']\nE         Left contains more items, first extra item: 'man 3 missing'\nE         Full diff:\nE         - ['missing --help', 'man 3 missing', 'man 2 missing']\nE         + ['missing --help']\n\ntests/rules/test_man.py:35: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command('man read'), ['man 3 read', 'man 2 read', 'read --help']), (Command('man missing', stderr='No manual entry for missing\\n'), ['missing --help']), (Command('man 2 read'), 'man 3 read'), (Command('man 3 read'), 'man 2 read'), (Command('man -s2 read'), 'man -s3 read'), (Command('man -s3 read'), 'man -s2 read'), (Command('man -s 2 read'), 'man -s 3 read'), (Command('man -s 3 read'), 'man -s 2 read')])"
                ]
            }
        ]
    }
}