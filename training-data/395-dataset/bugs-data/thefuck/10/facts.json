{
    "1.1.1": "def get_new_command(command):\n    if '3' in command.script:\n        return command.script.replace(\"3\", \"2\")\n    if '2' in command.script:\n        return command.script.replace(\"2\", \"3\")\n\n    split_cmd2 = command.script_parts\n    split_cmd3 = split_cmd2[:]\n\n    split_cmd2.insert(1, ' 2 ')\n    split_cmd3.insert(1, ' 3 ')\n\n    last_arg = command.script_parts[-1]\n\n    return [\n        last_arg + ' --help',\n        \"\".join(split_cmd3),\n        \"\".join(split_cmd2),\n    ]\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/thefuck_10/thefuck/rules/man.py",
    "1.3.2": null,
    "1.4.1": [
        "@pytest.mark.parametrize('command, new_command', [\n    (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),\n    (Command('man missing', stderr=\"No manual entry for missing\\n\"), ['missing --help']),\n    (Command('man 2 read'), 'man 3 read'),\n    (Command('man 3 read'), 'man 2 read'),\n    (Command('man -s2 read'), 'man -s3 read'),\n    (Command('man -s3 read'), 'man -s2 read'),\n    (Command('man -s 2 read'), 'man -s 3 read'),\n    (Command('man -s 3 read'), 'man -s 2 read')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command) == new_command",
        "@pytest.mark.parametrize('command, new_command', [\n    (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),\n    (Command('man missing', stderr=\"No manual entry for missing\\n\"), ['missing --help']),\n    (Command('man 2 read'), 'man 3 read'),\n    (Command('man 3 read'), 'man 2 read'),\n    (Command('man -s2 read'), 'man -s3 read'),\n    (Command('man -s3 read'), 'man -s2 read'),\n    (Command('man -s 2 read'), 'man -s 3 read'),\n    (Command('man -s 3 read'), 'man -s 2 read')])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command) == new_command"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_10/tests/rules/test_man.py",
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_10/tests/rules/test_man.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: assert ['read --help... 'man 2 read'] == ['man 3 read',...'read --help']\nE         At index 0 diff: 'read --help' != 'man 3 read'\nE         Full diff:\nE         - ['read --help', 'man 3 read', 'man 2 read']\nE         + ['man 3 read', 'man 2 read', 'read --help']"
        ],
        [
            "E       AssertionError: assert ['missing --h...an 2 missing'] == ['missing --help']\nE         Left contains more items, first extra item: 'man 3 missing'\nE         Full diff:\nE         - ['missing --help', 'man 3 missing', 'man 2 missing']\nE         + ['missing --help']"
        ]
    ],
    "2.1.2": [
        [
            "command = Command(script=man read, stdout=, stderr=)\nnew_command = ['man 3 read', 'man 2 read', 'read --help']\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),\n        (Command('man missing', stderr=\"No manual entry for missing\\n\"), ['missing --help']),\n        (Command('man 2 read'), 'man 3 read'),\n        (Command('man 3 read'), 'man 2 read'),\n        (Command('man -s2 read'), 'man -s3 read'),\n        (Command('man -s3 read'), 'man -s2 read'),\n        (Command('man -s 2 read'), 'man -s 3 read'),\n        (Command('man -s 3 read'), 'man -s 2 read')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command) == new_command",
            "\ntests/rules/test_man.py:35: AssertionError"
        ],
        [
            "command = Command(script=man missing, stdout=, stderr=No manual entry for missing\n)\nnew_command = ['missing --help']\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command('man read'), ['man 3 read', 'man 2 read', 'read --help']),\n        (Command('man missing', stderr=\"No manual entry for missing\\n\"), ['missing --help']),\n        (Command('man 2 read'), 'man 3 read'),\n        (Command('man 3 read'), 'man 2 read'),\n        (Command('man -s2 read'), 'man -s3 read'),\n        (Command('man -s3 read'), 'man -s2 read'),\n        (Command('man -s 2 read'), 'man -s 3 read'),\n        (Command('man -s 3 read'), 'man -s 2 read')])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command) == new_command",
            "\ntests/rules/test_man.py:35: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "command.script": "'man read'",
                "command": "Command(script=man read, stdout=, stderr=)",
                "command.script_parts": "['man', 'read']"
            },
            {
                "split_cmd2": "['man', ' 2 ', 'read']",
                "command.script_parts": "['man', ' 2 ', 'read']",
                "split_cmd3": "['man', ' 3 ', 'read']",
                "last_arg": "'read'"
            }
        ],
        [
            {
                "command.script": "'man missing'",
                "command": "Command(script=man missing, stdout=, stderr=No manual entry for missing\n)",
                "command.script_parts": "['man', 'missing']"
            },
            {
                "split_cmd2": "['man', ' 2 ', 'missing']",
                "command.script_parts": "['man', ' 2 ', 'missing']",
                "split_cmd3": "['man', ' 3 ', 'missing']",
                "last_arg": "'missing'"
            }
        ],
        [
            {
                "command.script": "'man 2 read'",
                "command": "Command(script=man 2 read, stdout=, stderr=)",
                "command.script_parts": "['man', '2', 'read']"
            },
            {}
        ],
        [
            {
                "command.script": "'man 3 read'",
                "command": "Command(script=man 3 read, stdout=, stderr=)",
                "command.script_parts": "['man', '3', 'read']"
            },
            {}
        ],
        [
            {
                "command.script": "'man -s2 read'",
                "command": "Command(script=man -s2 read, stdout=, stderr=)",
                "command.script_parts": "['man', '-s2', 'read']"
            },
            {}
        ],
        [
            {
                "command.script": "'man -s3 read'",
                "command": "Command(script=man -s3 read, stdout=, stderr=)",
                "command.script_parts": "['man', '-s3', 'read']"
            },
            {}
        ],
        [
            {
                "command.script": "'man -s 2 read'",
                "command": "Command(script=man -s 2 read, stdout=, stderr=)",
                "command.script_parts": "['man', '-s', '2', 'read']"
            },
            {}
        ],
        [
            {
                "command.script": "'man -s 3 read'",
                "command": "Command(script=man -s 3 read, stdout=, stderr=)",
                "command.script_parts": "['man', '-s', '3', 'read']"
            },
            {}
        ]
    ],
    "2.1.4": [
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list"
            },
            {
                "split_cmd2": "list",
                "command.script_parts": "list",
                "split_cmd3": "list",
                "last_arg": "str"
            }
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list"
            },
            {
                "split_cmd2": "list",
                "command.script_parts": "list",
                "split_cmd3": "list",
                "last_arg": "str"
            }
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list"
            },
            {}
        ]
    ],
    "2.1.5": [
        [
            {
                "command.script": "'man read'",
                "command": "Command(script=man read, stdout=, stderr=)",
                "command.script_parts": "['man', 'read']",
                "command.stderr": "''"
            },
            {
                "last_arg": "'read'",
                "command.script_parts": "['man', ' 2 ', 'read']",
                "help_command": "'read --help'",
                "split_cmd2": "['man', ' 2 ', 'read']",
                "split_cmd3": "['man', ' 3 ', 'read']"
            }
        ],
        [
            {
                "command.script": "'man missing'",
                "command": "Command(script=man missing, stdout=, stderr=No manual entry for missing\n)",
                "command.script_parts": "['man', 'missing']",
                "command.stderr": "'No manual entry for missing\\n'"
            },
            {
                "last_arg": "'missing'",
                "help_command": "'missing --help'"
            }
        ],
        [
            {
                "command.script": "'man 2 read'",
                "command": "Command(script=man 2 read, stdout=, stderr=)",
                "command.script_parts": "['man', '2', 'read']",
                "command.stderr": "''"
            },
            {}
        ],
        [
            {
                "command.script": "'man 3 read'",
                "command": "Command(script=man 3 read, stdout=, stderr=)",
                "command.script_parts": "['man', '3', 'read']",
                "command.stderr": "''"
            },
            {}
        ],
        [
            {
                "command.script": "'man -s2 read'",
                "command": "Command(script=man -s2 read, stdout=, stderr=)",
                "command.script_parts": "['man', '-s2', 'read']",
                "command.stderr": "''"
            },
            {}
        ],
        [
            {
                "command.script": "'man -s3 read'",
                "command": "Command(script=man -s3 read, stdout=, stderr=)",
                "command.script_parts": "['man', '-s3', 'read']",
                "command.stderr": "''"
            },
            {}
        ],
        [
            {
                "command.script": "'man -s 2 read'",
                "command": "Command(script=man -s 2 read, stdout=, stderr=)",
                "command.script_parts": "['man', '-s', '2', 'read']",
                "command.stderr": "''"
            },
            {}
        ],
        [
            {
                "command.script": "'man -s 3 read'",
                "command": "Command(script=man -s 3 read, stdout=, stderr=)",
                "command.script_parts": "['man', '-s', '3', 'read']",
                "command.stderr": "''"
            },
            {}
        ]
    ],
    "2.1.6": [
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list",
                "command.stderr": "str"
            },
            {
                "last_arg": "str",
                "command.script_parts": "list",
                "help_command": "str",
                "split_cmd2": "list",
                "split_cmd3": "list"
            }
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list",
                "command.stderr": "str"
            },
            {
                "last_arg": "str",
                "help_command": "str"
            }
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list",
                "command.stderr": "str"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list",
                "command.stderr": "str"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list",
                "command.stderr": "str"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list",
                "command.stderr": "str"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list",
                "command.stderr": "str"
            },
            {}
        ],
        [
            {
                "command.script": "str",
                "command": "Command",
                "command.script_parts": "list",
                "command.stderr": "str"
            },
            {}
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}