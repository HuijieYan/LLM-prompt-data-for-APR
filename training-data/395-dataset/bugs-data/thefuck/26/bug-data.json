{
    "thefuck:26": {
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_26/thefuck/rules/vagrant_up.py": {
            "buggy_functions": [
                {
                    "function_name": "get_new_command",
                    "function_code": "def get_new_command(command, settings):\n    cmds = command.script.split(' ')\n    machine = \"\"\n    if len(cmds) >= 3:\n        machine = cmds[2]\n    return shells.and_(\"vagrant up \" +  machine, command.script)\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 8,
                    "end_line": 13,
                    "variables": {
                        "cmds": [
                            9,
                            11,
                            12
                        ],
                        "command.script.split": [
                            9
                        ],
                        "command.script": [
                            9,
                            13
                        ],
                        "command": [
                            9,
                            13
                        ],
                        "machine": [
                            10,
                            12,
                            13
                        ],
                        "len": [
                            11
                        ],
                        "shells.and_": [
                            13
                        ],
                        "shells": [
                            13
                        ]
                    },
                    "filtered_variables": {
                        "cmds": [
                            9,
                            11,
                            12
                        ],
                        "command.script.split": [
                            9
                        ],
                        "command.script": [
                            9,
                            13
                        ],
                        "command": [
                            9,
                            13
                        ],
                        "machine": [
                            10,
                            12,
                            13
                        ],
                        "shells.and_": [
                            13
                        ],
                        "shells": [
                            13
                        ]
                    },
                    "diff_line_number": 10,
                    "class_data": null,
                    "variable_values": [
                        [
                            {
                                "cmds": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant ssh'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant ssh', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cmds": {
                                    "variable_value": "['vagrant', 'ssh']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant ssh'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant ssh', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cmds": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant ssh devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant ssh devbox', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cmds": {
                                    "variable_value": "['vagrant', 'ssh', 'devbox']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant ssh devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant ssh devbox', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": "'devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cmds": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant rdp'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant rdp', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cmds": {
                                    "variable_value": "['vagrant', 'rdp']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant rdp'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant rdp', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cmds": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant rdp devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant rdp devbox', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cmds": {
                                    "variable_value": "['vagrant', 'rdp', 'devbox']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant rdp devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant rdp devbox', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": "'devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "cmds": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant ssh'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant ssh', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startAllInstances": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cmds": {
                                    "variable_value": "['vagrant', 'ssh']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant ssh'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant ssh', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "startAllInstances": {
                                    "variable_value": "'vagrant up && vagrant ssh'",
                                    "variable_type": "str",
                                    "variable_shape": "25"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cmds": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant ssh devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant ssh devbox', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startAllInstances": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cmds": {
                                    "variable_value": "['vagrant', 'ssh', 'devbox']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant ssh devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant ssh devbox', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": "'devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "startAllInstances": {
                                    "variable_value": "'vagrant up && vagrant ssh devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cmds": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant rdp'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant rdp', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startAllInstances": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cmds": {
                                    "variable_value": "['vagrant', 'rdp']",
                                    "variable_type": "list",
                                    "variable_shape": "2"
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant rdp'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant rdp', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "startAllInstances": {
                                    "variable_value": "'vagrant up && vagrant rdp'",
                                    "variable_type": "str",
                                    "variable_shape": "25"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "cmds": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant rdp devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant rdp devbox', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "startAllInstances": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "cmds": {
                                    "variable_value": "['vagrant', 'rdp', 'devbox']",
                                    "variable_type": "list",
                                    "variable_shape": "3"
                                },
                                "command.script.split": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "command.script": {
                                    "variable_value": "'vagrant rdp devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "18"
                                },
                                "command": {
                                    "variable_value": "Command(script='vagrant rdp devbox', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')",
                                    "variable_type": "Command",
                                    "variable_shape": "3"
                                },
                                "machine": {
                                    "variable_value": "'devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "6"
                                },
                                "startAllInstances": {
                                    "variable_value": "'vagrant up && vagrant rdp devbox'",
                                    "variable_type": "str",
                                    "variable_shape": "32"
                                },
                                "shells.and_": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "shells": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def match(command, settings):\n    return command.script.startswith('vagrant ') and 'run `vagrant up`' in command.stderr.lower()",
                "def get_new_command(command, settings):\n    cmds = command.script.split(' ')\n    machine = \"\"\n    if len(cmds) >= 3:\n        machine = cmds[2]\n    return shells.and_(\"vagrant up \" +  machine, command.script)"
            ],
            "inscope_function_signatures": [
                "match(command, settings)",
                "get_new_command(command, settings)"
            ],
            "variables_in_file": {
                "command.script.startswith": [
                    5
                ],
                "command.script": [
                    9,
                    13,
                    5
                ],
                "command": [
                    9,
                    13,
                    5
                ],
                "command.stderr.lower": [
                    5
                ],
                "command.stderr": [
                    5
                ],
                "cmds": [
                    9,
                    11,
                    12
                ],
                "command.script.split": [
                    9
                ],
                "machine": [
                    10,
                    12,
                    13
                ],
                "len": [
                    11
                ],
                "shells.and_": [
                    13
                ],
                "shells": [
                    13
                ]
            },
            "filtered_variables_in_file": {
                "command.script.startswith": [
                    5
                ],
                "command.script": [
                    9,
                    13,
                    5
                ],
                "command": [
                    9,
                    13,
                    5
                ],
                "command.stderr.lower": [
                    5
                ],
                "command.stderr": [
                    5
                ],
                "cmds": [
                    9,
                    11,
                    12
                ],
                "command.script.split": [
                    9
                ],
                "machine": [
                    10,
                    12,
                    13
                ],
                "shells.and_": [
                    13
                ],
                "shells": [
                    13
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_26/tests/rules/test_vagrant_up.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'),\n    (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']),\n    (Command(script='vagrant rdp',\n            stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'),\n    (Command(script='vagrant rdp devbox',\n            stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command",
                "test_error": "AssertionError: assert 'vagrant up  && vagrant ssh' == 'vagrant up && vagrant ssh'   - vagrant up  && vagrant ssh   ?            -   + vagrant up && vagrant ssh",
                "full_test_error": "command = Command(script='vagrant ssh', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')\nnew_command = 'vagrant up && vagrant ssh'\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'),\n        (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']),\n        (Command(script='vagrant rdp',\n                stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'),\n        (Command(script='vagrant rdp devbox',\n                stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command\nE       AssertionError: assert 'vagrant up  && vagrant ssh' == 'vagrant up && vagrant ssh'\nE         - vagrant up  && vagrant ssh\nE         ?            -\nE         + vagrant up && vagrant ssh\n\ntests/rules/test_vagrant_up.py:33: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'), (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']), (Command(script='vagrant rdp', stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'), (Command(script='vagrant rdp devbox', stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_26/tests/rules/test_vagrant_up.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'),\n    (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']),\n    (Command(script='vagrant rdp',\n            stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'),\n    (Command(script='vagrant rdp devbox',\n            stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command",
                "test_error": "AssertionError: assert 'vagrant up devbox && vagrant ssh devbox' == ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']  +  where 'vagrant up devbox && vagrant ssh devbox' = get_new_command(Command(script='vagrant ssh devbox', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), None)",
                "full_test_error": "command = Command(script='vagrant ssh devbox', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.')\nnew_command = ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'),\n        (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']),\n        (Command(script='vagrant rdp',\n                stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'),\n        (Command(script='vagrant rdp devbox',\n                stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command\nE       AssertionError: assert 'vagrant up devbox && vagrant ssh devbox' == ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']\nE        +  where 'vagrant up devbox && vagrant ssh devbox' = get_new_command(Command(script='vagrant ssh devbox', stdout='', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), None)\n\ntests/rules/test_vagrant_up.py:33: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'), (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']), (Command(script='vagrant rdp', stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'), (Command(script='vagrant rdp devbox', stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_26/tests/rules/test_vagrant_up.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'),\n    (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']),\n    (Command(script='vagrant rdp',\n            stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'),\n    (Command(script='vagrant rdp devbox',\n            stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command",
                "test_error": "AssertionError: assert 'vagrant up  && vagrant rdp' == 'vagrant up && vagrant rdp'   - vagrant up  && vagrant rdp   ?            -   + vagrant up && vagrant rdp",
                "full_test_error": "command = Command(script='vagrant rdp', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')\nnew_command = 'vagrant up && vagrant rdp'\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'),\n        (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']),\n        (Command(script='vagrant rdp',\n                stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'),\n        (Command(script='vagrant rdp devbox',\n                stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command\nE       AssertionError: assert 'vagrant up  && vagrant rdp' == 'vagrant up && vagrant rdp'\nE         - vagrant up  && vagrant rdp\nE         ?            -\nE         + vagrant up && vagrant rdp\n\ntests/rules/test_vagrant_up.py:33: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'), (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']), (Command(script='vagrant rdp', stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'), (Command(script='vagrant rdp devbox', stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])"
                ]
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/thefuck_26/tests/rules/test_vagrant_up.py",
                "test_function": "test_get_new_command",
                "test_function_code": "@pytest.mark.parametrize('command, new_command', [\n    (Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'),\n    (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']),\n    (Command(script='vagrant rdp',\n            stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'),\n    (Command(script='vagrant rdp devbox',\n            stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command, None) == new_command",
                "test_error": "AssertionError: assert 'vagrant up devbox && vagrant rdp devbox' == ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox']  +  where 'vagrant up devbox && vagrant rdp devbox' = get_new_command(Command(script='vagrant rdp devbox', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.'), None)",
                "full_test_error": "command = Command(script='vagrant rdp devbox', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.')\nnew_command = ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox']\n\n    @pytest.mark.parametrize('command, new_command', [\n        (Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'),\n        (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']),\n        (Command(script='vagrant rdp',\n                stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'),\n        (Command(script='vagrant rdp devbox',\n                stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])\n    def test_get_new_command(command, new_command):\n>       assert get_new_command(command, None) == new_command\nE       AssertionError: assert 'vagrant up devbox && vagrant rdp devbox' == ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox']\nE        +  where 'vagrant up devbox && vagrant rdp devbox' = get_new_command(Command(script='vagrant rdp devbox', stdout='', stderr='VM must be created before running this command. Run `vagrant up` first.'), None)\n\ntests/rules/test_vagrant_up.py:33: AssertionError",
                "traceback": null,
                "test_error_location": null,
                "test_function_decorators": [
                    "pytest.mark.parametrize('command, new_command', [(Command(script='vagrant ssh', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), 'vagrant up && vagrant ssh'), (Command(script='vagrant ssh devbox', stderr='VM must be running to open SSH connection. Run `vagrant up`\\nto start the virtual machine.'), ['vagrant up devbox && vagrant ssh devbox', 'vagrant up && vagrant ssh devbox']), (Command(script='vagrant rdp', stderr='VM must be created before running this command. Run `vagrant up` first.'), 'vagrant up && vagrant rdp'), (Command(script='vagrant rdp devbox', stderr='VM must be created before running this command. Run `vagrant up` first.'), ['vagrant up devbox && vagrant rdp devbox', 'vagrant up && vagrant rdp devbox'])])"
                ]
            }
        ]
    }
}