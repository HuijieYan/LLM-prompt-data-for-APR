{
    "1.1.1": "def _get_overridden_aliases(self):\n    overridden_aliases = os.environ.get('TF_OVERRIDDEN_ALIASES', '').strip()\n    if overridden_aliases:\n        return [alias.strip() for alias in overridden_aliases.split(',')]\n    else:\n        return ['cd', 'grep', 'ls', 'man', 'open']\n",
    "1.1.2": null,
    "1.2.1": "class Fish(Generic)",
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs/repos/thefuck_14/thefuck/shells/fish.py",
    "1.3.2": null,
    "1.4.1": [
        "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
        "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
        "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
        "    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n        assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_14/tests/shells/test_fish.py",
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_14/tests/shells/test_fish.py",
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_14/tests/shells/test_fish.py",
        "/Volumes/SSD2T/bgp_envs/repos/thefuck_14/tests/shells/test_fish.py"
    ],
    "2.1.1": [
        [
            "E       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'cut', 'sed', 'cd', 'man', 'grep', 'git', 'open', 'ls'}"
        ],
        [
            "E       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'cut', 'sed', 'cd', 'man', 'grep', 'git', 'open', 'ls'}"
        ],
        [
            "E       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'cut', 'sed', 'cd', 'man', 'grep', 'git', 'open', 'ls'}"
        ],
        [
            "E       AssertionError: assert ['cut', 'git', 'sed'] == {'cd', 'cut', 'git..., 'ls', 'man', ...}\nE         Full diff:\nE         - ['cut', 'git', 'sed']\nE         + {'cut', 'sed', 'cd', 'man', 'grep', 'git', 'open', 'ls'}"
        ]
    ],
    "2.1.2": [
        [
            "self = <tests.shells.test_fish.TestFish object at 0x1061100d0>\nshell = <thefuck.shells.fish.Fish object at 0x1062ea410>, tf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
            "\ntests/shells/test_fish.py:31: AssertionError"
        ],
        [
            "self = <tests.shells.test_fish.TestFish object at 0x1062ea890>\nshell = <thefuck.shells.fish.Fish object at 0x106332e50>, tf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
            "\ntests/shells/test_fish.py:31: AssertionError"
        ],
        [
            "self = <tests.shells.test_fish.TestFish object at 0x106330410>\nshell = <thefuck.shells.fish.Fish object at 0x106344910>, tf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
            "\ntests/shells/test_fish.py:31: AssertionError"
        ],
        [
            "self = <tests.shells.test_fish.TestFish object at 0x1063480d0>\nshell = <thefuck.shells.fish.Fish object at 0x10635c410>, tf_overridden = None\n\n    @pytest.mark.parametrize('aliases', [\n        'cut,git,sed',\n        'cut, git, sed',\n        ' cut,\\tgit,sed\\n',\n        '\\ncut,\\n\\ngit,\\tsed\\r'])\n    def test_get_overridden_aliases(self, shell, tf_overridden):\n>       assert shell._get_overridden_aliases() == {'cd', 'cut', 'git', 'grep',\n                                                   'ls', 'man', 'open', 'sed'}",
            "\ntests/shells/test_fish.py:31: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {},
            {
                "overridden_aliases": "'cut,git,sed'"
            }
        ]
    ],
    "2.1.4": [
        [
            {},
            {
                "overridden_aliases": "str"
            }
        ]
    ],
    "2.1.5": [
        [
            {},
            {
                "default": "{'grep', 'man', 'cd', 'sed', 'git', 'ls', 'cut', 'open'}",
                "alias": "'sed'"
            }
        ]
    ],
    "2.1.6": [
        [
            {},
            {
                "default": "set",
                "alias": "str"
            }
        ]
    ],
    "3.1.1": null,
    "3.1.2": null
}