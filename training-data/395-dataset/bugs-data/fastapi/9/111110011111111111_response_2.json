{
    "fastapi": [
        {
            "bugID": 9,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 1,
                "1.2.2": 1,
                "1.2.3": 1,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "strata": {
                "1": 1,
                "2": 1,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 0,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 1
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 0,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 1
            },
            "start_line": 549,
            "file_name": "fastapi/dependencies/utils.py",
            "replace_code": "def get_body_field(*, dependant: params.Dependant, name: str) -> params.Body:\n    from fastapi import params\n    flat_dependant = get_flat_dependant(dependant)\n    media_types = set()\n    field_list = []\n    for field in flat_dependant.body_params:\n        field_list.append((field.name, get_schema_compatible_field(field=field)))\n        media_types.add(field.media_type)\n    model_name = \"Body_\" + name\n    BodyModel = create_model(model_name, **dict(field_list))\n    \n    if len(flat_dependant.body_params) == 1 and any(isinstance(f.schema, params.File) for f in flat_dependant.body_params):\n        BodySchema = params.Body\n    elif len(flat_dependant.body_params) == 1 and any(isinstance(f.schema, params.Form) for f in flat_dependant.body_params):\n        BodySchema = params.File\n    elif len(flat_dependant.body_params) == 1 and not any(isinstance(f.schema, params.File) for f in flat_dependant.body_params):\n        BodySchema = params.Form\n    else:\n        BodySchema = params.Body(media_type=list(media_types))\n    \n    return BodyModel, BodySchema"
        }
    ]
}