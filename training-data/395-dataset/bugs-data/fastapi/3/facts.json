{
    "1.1.1": "async def serialize_response(\n    *,\n    field: ModelField = None,\n    response_content: Any,\n    include: Union[SetIntStr, DictIntStrAny] = None,\n    exclude: Union[SetIntStr, DictIntStrAny] = set(),\n    by_alias: bool = True,\n    exclude_unset: bool = False,\n    is_coroutine: bool = True,\n) -> Any:\n    if field:\n        errors = []\n        if exclude_unset and isinstance(response_content, BaseModel):\n            if PYDANTIC_1:\n                response_content = response_content.dict(exclude_unset=exclude_unset)\n            else:\n                response_content = response_content.dict(\n                    skip_defaults=exclude_unset\n                )  # pragma: nocover\n        if is_coroutine:\n            value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n        else:\n            value, errors_ = await run_in_threadpool(\n                field.validate, response_content, {}, loc=(\"response\",)\n            )\n        if isinstance(errors_, ErrorWrapper):\n            errors.append(errors_)\n        elif isinstance(errors_, list):\n            errors.extend(errors_)\n        if errors:\n            raise ValidationError(errors, field.type_)\n        return jsonable_encoder(\n            value,\n            include=include,\n            exclude=exclude,\n            by_alias=by_alias,\n            exclude_unset=exclude_unset,\n        )\n    else:\n        return jsonable_encoder(response_content)\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/fastapi/routing.py",
    "1.3.2": null,
    "1.4.1": [
        "def test_valid():\n    response = client.get(\"/items/valid\")\n    response.raise_for_status()\n    assert response.json() == {\"aliased_name\": \"valid\", \"price\": 1.0, \"owner_ids\": None}",
        "def test_coerce():\n    response = client.get(\"/items/coerce\")\n    response.raise_for_status()\n    assert response.json() == {\n        \"aliased_name\": \"coerce\",\n        \"price\": 1.0,\n        \"owner_ids\": None,\n    }",
        "def test_validlist():\n    response = client.get(\"/items/validlist\")\n    response.raise_for_status()\n    assert response.json() == [\n        {\"aliased_name\": \"foo\", \"price\": None, \"owner_ids\": None},\n        {\"aliased_name\": \"bar\", \"price\": 1.0, \"owner_ids\": None},\n        {\"aliased_name\": \"baz\", \"price\": 2.0, \"owner_ids\": [1, 2, 3]},\n    ]",
        "def test_validdict():\n    response = client.get(\"/items/validdict\")\n    response.raise_for_status()\n    assert response.json() == {\n        \"k1\": {\"aliased_name\": \"foo\", \"price\": None, \"owner_ids\": None},\n        \"k2\": {\"aliased_name\": \"bar\", \"price\": 1.0, \"owner_ids\": None},\n        \"k3\": {\"aliased_name\": \"baz\", \"price\": 2.0, \"owner_ids\": [1, 2, 3]},\n    }",
        "def test_valid_exclude_unset():\n    response = client.get(\"/items/valid-exclude-unset\")\n    response.raise_for_status()\n    assert response.json() == {\"aliased_name\": \"valid\", \"price\": 1.0}",
        "def test_coerce_exclude_unset():\n    response = client.get(\"/items/coerce-exclude-unset\")\n    response.raise_for_status()\n    assert response.json() == {\"aliased_name\": \"coerce\", \"price\": 1.0}",
        "def test_validlist_exclude_unset():\n    response = client.get(\"/items/validlist-exclude-unset\")\n    response.raise_for_status()\n    assert response.json() == [\n        {\"aliased_name\": \"foo\"},\n        {\"aliased_name\": \"bar\", \"price\": 1.0},\n        {\"aliased_name\": \"baz\", \"price\": 2.0, \"owner_ids\": [1, 2, 3]},\n    ]",
        "def test_validdict_exclude_unset():\n    response = client.get(\"/items/validdict-exclude-unset\")\n    response.raise_for_status()\n    assert response.json() == {\n        \"k1\": {\"aliased_name\": \"foo\"},\n        \"k2\": {\"aliased_name\": \"bar\", \"price\": 1.0},\n        \"k3\": {\"aliased_name\": \"baz\", \"price\": 2.0, \"owner_ids\": [1, 2, 3]},\n    }"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/tests/test_serialize_response_model.py",
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/tests/test_serialize_response_model.py",
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/tests/test_serialize_response_model.py",
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/tests/test_serialize_response_model.py",
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/tests/test_serialize_response_model.py",
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/tests/test_serialize_response_model.py",
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/tests/test_serialize_response_model.py",
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/fastapi_3/tests/test_serialize_response_model.py"
    ],
    "2.1.1": [
        [
            "E               pydantic.error_wrappers.ValidationError: 1 validation error for Item\nE               response -> aliased_name\nE                 field required (type=value_error.missing)"
        ],
        [
            "E               pydantic.error_wrappers.ValidationError: 1 validation error for Item\nE               response -> aliased_name\nE                 field required (type=value_error.missing)"
        ],
        [
            "E               pydantic.error_wrappers.ValidationError: 3 validation errors for Item\nE               response -> 0 -> aliased_name\nE                 field required (type=value_error.missing)\nE               response -> 1 -> aliased_name\nE                 field required (type=value_error.missing)\nE               response -> 2 -> aliased_name\nE                 field required (type=value_error.missing)"
        ],
        [
            "E               pydantic.error_wrappers.ValidationError: 3 validation errors for Item\nE               response -> k1 -> aliased_name\nE                 field required (type=value_error.missing)\nE               response -> k2 -> aliased_name\nE                 field required (type=value_error.missing)\nE               response -> k3 -> aliased_name\nE                 field required (type=value_error.missing)"
        ],
        [
            "E               pydantic.error_wrappers.ValidationError: 1 validation error for Item\nE               response -> aliased_name\nE                 field required (type=value_error.missing)"
        ],
        [
            "E               pydantic.error_wrappers.ValidationError: 1 validation error for Item\nE               response -> aliased_name\nE                 field required (type=value_error.missing)"
        ],
        [
            "E               pydantic.error_wrappers.ValidationError: 3 validation errors for Item\nE               response -> 0 -> aliased_name\nE                 field required (type=value_error.missing)\nE               response -> 1 -> aliased_name\nE                 field required (type=value_error.missing)\nE               response -> 2 -> aliased_name\nE                 field required (type=value_error.missing)"
        ],
        [
            "E               pydantic.error_wrappers.ValidationError: 3 validation errors for Item\nE               response -> k1 -> aliased_name\nE                 field required (type=value_error.missing)\nE               response -> k2 -> aliased_name\nE                 field required (type=value_error.missing)\nE               response -> k3 -> aliased_name\nE                 field required (type=value_error.missing)"
        ]
    ],
    "2.1.2": [
        [
            "def test_valid():\n>       response = client.get(\"/items/valid\")\n\ntests/test_serialize_response_model.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:543: in get\n    return self.request('GET', url, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:413: in request\n    return super().request(\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:243: in send\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:240: in send\n    loop.run_until_complete(self.app(scope, receive, send))\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nfastapi/applications.py:149: in __call__\n    await super().__call__(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/applications.py:102: in __call__\n    await self.middleware_stack(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:181: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:159: in __call__\n    await self.app(scope, receive, _send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:82: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:71: in __call__\n    await self.app(scope, receive, sender)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:550: in __call__\n    await route.handle(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:227: in handle\n    await self.app(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:41: in app\n    response = await func(request)\nfastapi/routing.py:155: in app\n    response_data = await serialize_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def serialize_response(\n        *,\n        field: ModelField = None,\n        response_content: Any,\n        include: Union[SetIntStr, DictIntStrAny] = None,\n        exclude: Union[SetIntStr, DictIntStrAny] = set(),\n        by_alias: bool = True,\n        exclude_unset: bool = False,\n        is_coroutine: bool = True,\n    ) -> Any:\n        if field:\n            errors = []\n            if exclude_unset and isinstance(response_content, BaseModel):\n                if PYDANTIC_1:\n                    response_content = response_content.dict(exclude_unset=exclude_unset)\n                else:\n                    response_content = response_content.dict(\n                        skip_defaults=exclude_unset\n                    )  # pragma: nocover\n            if is_coroutine:\n                value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n            else:\n                value, errors_ = await run_in_threadpool(\n                    field.validate, response_content, {}, loc=(\"response\",)\n                )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            if errors:\n>               raise ValidationError(errors, field.type_)",
            "\nfastapi/routing.py:81: ValidationError"
        ],
        [
            "def test_coerce():\n>       response = client.get(\"/items/coerce\")\n\ntests/test_serialize_response_model.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:543: in get\n    return self.request('GET', url, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:413: in request\n    return super().request(\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:243: in send\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:240: in send\n    loop.run_until_complete(self.app(scope, receive, send))\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nfastapi/applications.py:149: in __call__\n    await super().__call__(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/applications.py:102: in __call__\n    await self.middleware_stack(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:181: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:159: in __call__\n    await self.app(scope, receive, _send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:82: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:71: in __call__\n    await self.app(scope, receive, sender)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:550: in __call__\n    await route.handle(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:227: in handle\n    await self.app(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:41: in app\n    response = await func(request)\nfastapi/routing.py:155: in app\n    response_data = await serialize_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def serialize_response(\n        *,\n        field: ModelField = None,\n        response_content: Any,\n        include: Union[SetIntStr, DictIntStrAny] = None,\n        exclude: Union[SetIntStr, DictIntStrAny] = set(),\n        by_alias: bool = True,\n        exclude_unset: bool = False,\n        is_coroutine: bool = True,\n    ) -> Any:\n        if field:\n            errors = []\n            if exclude_unset and isinstance(response_content, BaseModel):\n                if PYDANTIC_1:\n                    response_content = response_content.dict(exclude_unset=exclude_unset)\n                else:\n                    response_content = response_content.dict(\n                        skip_defaults=exclude_unset\n                    )  # pragma: nocover\n            if is_coroutine:\n                value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n            else:\n                value, errors_ = await run_in_threadpool(\n                    field.validate, response_content, {}, loc=(\"response\",)\n                )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            if errors:\n>               raise ValidationError(errors, field.type_)",
            "\nfastapi/routing.py:81: ValidationError"
        ],
        [
            "def test_validlist():\n>       response = client.get(\"/items/validlist\")\n\ntests/test_serialize_response_model.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:543: in get\n    return self.request('GET', url, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:413: in request\n    return super().request(\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:243: in send\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:240: in send\n    loop.run_until_complete(self.app(scope, receive, send))\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nfastapi/applications.py:149: in __call__\n    await super().__call__(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/applications.py:102: in __call__\n    await self.middleware_stack(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:181: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:159: in __call__\n    await self.app(scope, receive, _send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:82: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:71: in __call__\n    await self.app(scope, receive, sender)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:550: in __call__\n    await route.handle(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:227: in handle\n    await self.app(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:41: in app\n    response = await func(request)\nfastapi/routing.py:155: in app\n    response_data = await serialize_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def serialize_response(\n        *,\n        field: ModelField = None,\n        response_content: Any,\n        include: Union[SetIntStr, DictIntStrAny] = None,\n        exclude: Union[SetIntStr, DictIntStrAny] = set(),\n        by_alias: bool = True,\n        exclude_unset: bool = False,\n        is_coroutine: bool = True,\n    ) -> Any:\n        if field:\n            errors = []\n            if exclude_unset and isinstance(response_content, BaseModel):\n                if PYDANTIC_1:\n                    response_content = response_content.dict(exclude_unset=exclude_unset)\n                else:\n                    response_content = response_content.dict(\n                        skip_defaults=exclude_unset\n                    )  # pragma: nocover\n            if is_coroutine:\n                value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n            else:\n                value, errors_ = await run_in_threadpool(\n                    field.validate, response_content, {}, loc=(\"response\",)\n                )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            if errors:\n>               raise ValidationError(errors, field.type_)",
            "\nfastapi/routing.py:81: ValidationError"
        ],
        [
            "def test_validdict():\n>       response = client.get(\"/items/validdict\")\n\ntests/test_serialize_response_model.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:543: in get\n    return self.request('GET', url, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:413: in request\n    return super().request(\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:243: in send\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:240: in send\n    loop.run_until_complete(self.app(scope, receive, send))\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nfastapi/applications.py:149: in __call__\n    await super().__call__(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/applications.py:102: in __call__\n    await self.middleware_stack(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:181: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:159: in __call__\n    await self.app(scope, receive, _send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:82: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:71: in __call__\n    await self.app(scope, receive, sender)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:550: in __call__\n    await route.handle(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:227: in handle\n    await self.app(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:41: in app\n    response = await func(request)\nfastapi/routing.py:155: in app\n    response_data = await serialize_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def serialize_response(\n        *,\n        field: ModelField = None,\n        response_content: Any,\n        include: Union[SetIntStr, DictIntStrAny] = None,\n        exclude: Union[SetIntStr, DictIntStrAny] = set(),\n        by_alias: bool = True,\n        exclude_unset: bool = False,\n        is_coroutine: bool = True,\n    ) -> Any:\n        if field:\n            errors = []\n            if exclude_unset and isinstance(response_content, BaseModel):\n                if PYDANTIC_1:\n                    response_content = response_content.dict(exclude_unset=exclude_unset)\n                else:\n                    response_content = response_content.dict(\n                        skip_defaults=exclude_unset\n                    )  # pragma: nocover\n            if is_coroutine:\n                value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n            else:\n                value, errors_ = await run_in_threadpool(\n                    field.validate, response_content, {}, loc=(\"response\",)\n                )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            if errors:\n>               raise ValidationError(errors, field.type_)",
            "\nfastapi/routing.py:81: ValidationError"
        ],
        [
            "def test_valid_exclude_unset():\n>       response = client.get(\"/items/valid-exclude-unset\")\n\ntests/test_serialize_response_model.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:543: in get\n    return self.request('GET', url, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:413: in request\n    return super().request(\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:243: in send\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:240: in send\n    loop.run_until_complete(self.app(scope, receive, send))\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nfastapi/applications.py:149: in __call__\n    await super().__call__(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/applications.py:102: in __call__\n    await self.middleware_stack(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:181: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:159: in __call__\n    await self.app(scope, receive, _send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:82: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:71: in __call__\n    await self.app(scope, receive, sender)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:550: in __call__\n    await route.handle(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:227: in handle\n    await self.app(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:41: in app\n    response = await func(request)\nfastapi/routing.py:155: in app\n    response_data = await serialize_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def serialize_response(\n        *,\n        field: ModelField = None,\n        response_content: Any,\n        include: Union[SetIntStr, DictIntStrAny] = None,\n        exclude: Union[SetIntStr, DictIntStrAny] = set(),\n        by_alias: bool = True,\n        exclude_unset: bool = False,\n        is_coroutine: bool = True,\n    ) -> Any:\n        if field:\n            errors = []\n            if exclude_unset and isinstance(response_content, BaseModel):\n                if PYDANTIC_1:\n                    response_content = response_content.dict(exclude_unset=exclude_unset)\n                else:\n                    response_content = response_content.dict(\n                        skip_defaults=exclude_unset\n                    )  # pragma: nocover\n            if is_coroutine:\n                value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n            else:\n                value, errors_ = await run_in_threadpool(\n                    field.validate, response_content, {}, loc=(\"response\",)\n                )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            if errors:\n>               raise ValidationError(errors, field.type_)",
            "\nfastapi/routing.py:81: ValidationError"
        ],
        [
            "def test_coerce_exclude_unset():\n>       response = client.get(\"/items/coerce-exclude-unset\")\n\ntests/test_serialize_response_model.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:543: in get\n    return self.request('GET', url, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:413: in request\n    return super().request(\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:243: in send\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:240: in send\n    loop.run_until_complete(self.app(scope, receive, send))\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nfastapi/applications.py:149: in __call__\n    await super().__call__(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/applications.py:102: in __call__\n    await self.middleware_stack(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:181: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:159: in __call__\n    await self.app(scope, receive, _send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:82: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:71: in __call__\n    await self.app(scope, receive, sender)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:550: in __call__\n    await route.handle(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:227: in handle\n    await self.app(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:41: in app\n    response = await func(request)\nfastapi/routing.py:155: in app\n    response_data = await serialize_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def serialize_response(\n        *,\n        field: ModelField = None,\n        response_content: Any,\n        include: Union[SetIntStr, DictIntStrAny] = None,\n        exclude: Union[SetIntStr, DictIntStrAny] = set(),\n        by_alias: bool = True,\n        exclude_unset: bool = False,\n        is_coroutine: bool = True,\n    ) -> Any:\n        if field:\n            errors = []\n            if exclude_unset and isinstance(response_content, BaseModel):\n                if PYDANTIC_1:\n                    response_content = response_content.dict(exclude_unset=exclude_unset)\n                else:\n                    response_content = response_content.dict(\n                        skip_defaults=exclude_unset\n                    )  # pragma: nocover\n            if is_coroutine:\n                value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n            else:\n                value, errors_ = await run_in_threadpool(\n                    field.validate, response_content, {}, loc=(\"response\",)\n                )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            if errors:\n>               raise ValidationError(errors, field.type_)",
            "\nfastapi/routing.py:81: ValidationError"
        ],
        [
            "def test_validlist_exclude_unset():\n>       response = client.get(\"/items/validlist-exclude-unset\")\n\ntests/test_serialize_response_model.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:543: in get\n    return self.request('GET', url, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:413: in request\n    return super().request(\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:243: in send\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:240: in send\n    loop.run_until_complete(self.app(scope, receive, send))\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nfastapi/applications.py:149: in __call__\n    await super().__call__(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/applications.py:102: in __call__\n    await self.middleware_stack(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:181: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:159: in __call__\n    await self.app(scope, receive, _send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:82: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:71: in __call__\n    await self.app(scope, receive, sender)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:550: in __call__\n    await route.handle(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:227: in handle\n    await self.app(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:41: in app\n    response = await func(request)\nfastapi/routing.py:155: in app\n    response_data = await serialize_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def serialize_response(\n        *,\n        field: ModelField = None,\n        response_content: Any,\n        include: Union[SetIntStr, DictIntStrAny] = None,\n        exclude: Union[SetIntStr, DictIntStrAny] = set(),\n        by_alias: bool = True,\n        exclude_unset: bool = False,\n        is_coroutine: bool = True,\n    ) -> Any:\n        if field:\n            errors = []\n            if exclude_unset and isinstance(response_content, BaseModel):\n                if PYDANTIC_1:\n                    response_content = response_content.dict(exclude_unset=exclude_unset)\n                else:\n                    response_content = response_content.dict(\n                        skip_defaults=exclude_unset\n                    )  # pragma: nocover\n            if is_coroutine:\n                value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n            else:\n                value, errors_ = await run_in_threadpool(\n                    field.validate, response_content, {}, loc=(\"response\",)\n                )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            if errors:\n>               raise ValidationError(errors, field.type_)",
            "\nfastapi/routing.py:81: ValidationError"
        ],
        [
            "def test_validdict_exclude_unset():\n>       response = client.get(\"/items/validdict-exclude-unset\")\n\ntests/test_serialize_response_model.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:543: in get\n    return self.request('GET', url, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:413: in request\n    return super().request(\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:243: in send\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/testclient.py:240: in send\n    loop.run_until_complete(self.app(scope, receive, send))\n/usr/local/Cellar/python@3.8/3.8.18_1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nfastapi/applications.py:149: in __call__\n    await super().__call__(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/applications.py:102: in __call__\n    await self.middleware_stack(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:181: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/middleware/errors.py:159: in __call__\n    await self.app(scope, receive, _send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:82: in __call__\n    raise exc from None\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/exceptions.py:71: in __call__\n    await self.app(scope, receive, sender)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:550: in __call__\n    await route.handle(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:227: in handle\n    await self.app(scope, receive, send)\n../../envs/fastapi_3/lib/python3.8/site-packages/starlette/routing.py:41: in app\n    response = await func(request)\nfastapi/routing.py:155: in app\n    response_data = await serialize_response(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    async def serialize_response(\n        *,\n        field: ModelField = None,\n        response_content: Any,\n        include: Union[SetIntStr, DictIntStrAny] = None,\n        exclude: Union[SetIntStr, DictIntStrAny] = set(),\n        by_alias: bool = True,\n        exclude_unset: bool = False,\n        is_coroutine: bool = True,\n    ) -> Any:\n        if field:\n            errors = []\n            if exclude_unset and isinstance(response_content, BaseModel):\n                if PYDANTIC_1:\n                    response_content = response_content.dict(exclude_unset=exclude_unset)\n                else:\n                    response_content = response_content.dict(\n                        skip_defaults=exclude_unset\n                    )  # pragma: nocover\n            if is_coroutine:\n                value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n            else:\n                value, errors_ = await run_in_threadpool(\n                    field.validate, response_content, {}, loc=(\"response\",)\n                )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n            if errors:\n>               raise ValidationError(errors, field.type_)",
            "\nfastapi/routing.py:81: ValidationError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": null,
    "2.1.6": null,
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}