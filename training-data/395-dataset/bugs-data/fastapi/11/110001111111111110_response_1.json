{
    "fastapi": [
        {
            "bugID": 11,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 0,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 1,
                "3.1.2": 1,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 1,
                "7": 0
            },
            "start_line": 133,
            "file_name": "/fastapi/dependencies/utils.py",
            "replace_code": "def is_scalar_field(field: Field) -> bool:\n    from pydantic import BaseModel, Field, Schema, Config\n    from typing import Type, Any, ForwardRef, TypeVar, Type, Union, List, Dict\n    from pydantic.fields import FieldInfo, ModelField\n    from fastapi import params, Query, Path\n    from fastapi.security.base import SecurityBase\n    from starlette.requests import Request\n    from starlette.websockets import WebSocket\n    from pydantic.schema import schema\n    from pydantic.typing import display_as_type\n    from pydantic.fields import ModelField\n    from fastapi.encoders import DictIntStrAny, SetIntStr, Callable, is_integrity_error_exc\n    from pydantic import BaseModel, Field, Schema, Config\n    from typing import Type, Any, ForwardRef, TypeVar, Type, Union, List, Dict\n    from pydantic.fields import FieldInfo, ModelField\n    from fastapi import params, Query, Path\n    from fastapi.security.base import SecurityBase\n    from starlette.requests import Request\n    from starlette.websockets import WebSocket\n    from pydantic.schema import schema\n    from pydantic.typing import display_as_type\n    from pydantic.fields import ModelField\n    from fastapi.encoders import DictIntStrAny, SetIntStr, Callable, is_integrity_error_exc\n    return (\n        field.shape == Shape.SINGLETON\n        and not lenient_issubclass(field.type_, BaseModel)\n        and not lenient_issubclass(field.type_, sequence_types + (dict,))\n        and not isinstance(field.schema, (params.Body, Query))\n    )"
        }
    ]
}