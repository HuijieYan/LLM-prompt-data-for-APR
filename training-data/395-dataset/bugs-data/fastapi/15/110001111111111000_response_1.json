{
    "fastapi": [
        {
            "bugID": 15,
            "bitvector": {
                "1.1.1": 1,
                "1.1.2": 1,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "available_bitvector": {
                "1.1.1": 1,
                "1.1.2": 0,
                "1.2.1": 0,
                "1.2.2": 0,
                "1.2.3": 0,
                "1.3.1": 1,
                "1.3.2": 1,
                "1.4.1": 1,
                "1.4.2": 1,
                "2.1.1": 1,
                "2.1.2": 1,
                "2.1.3": 1,
                "2.1.4": 1,
                "2.1.5": 1,
                "2.1.6": 1,
                "3.1.1": 0,
                "3.1.2": 0,
                "cot": 0
            },
            "available_strata": {
                "1": 1,
                "2": 0,
                "3": 1,
                "4": 1,
                "5": 1,
                "6": 0,
                "7": 0
            },
            "start_line": 240,
            "file_name": "/fastapi/routing.py",
            "replace_code": "def include_router(\n    self, router: \"APIRouter\", *, prefix: str = \"\", tags: Optional[List[str]] = None\n) -> None:\n\n    if prefix and not prefix.startswith(\"/\"):\n        raise AssertionError(\"A path prefix must start with '/'\")\n    if prefix and prefix.endswith(\"/\"):\n        raise AssertionError(\n            \"A path prefix must not end with '/', as the routes will start with '/'\"\n        )\n    for route in router.routes:\n        if isinstance(route, APIRoute):\n            self.add_api_route(\n                prefix + route.path,\n                route.endpoint,\n                response_model=route.response_model,\n                status_code=route.status_code,\n                tags=(route.tags or []) + (tags or []),\n                summary=route.summary,\n                description=route.description,\n                response_description=route.response_description,\n                deprecated=route.deprecated,\n                methods=route.methods,\n                operation_id=route.operation_id,\n                include_in_schema=route.include_in_schema,\n                content_type=route.content_type,\n                name=route.name,\n            )\n        elif isinstance(route, routing.Route):\n            self.add_route(\n                prefix + route.path,\n                route.endpoint,\n                methods=route.methods,\n                include_in_schema=route.include_in_schema,\n                name=route.name,\n            )"
        }
    ]
}