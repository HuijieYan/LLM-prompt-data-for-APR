{
    "fastapi:15": {
        "/Volumes/SSD2T/bgp_envs/repos/fastapi_15/fastapi/routing.py": {
            "buggy_functions": [
                {
                    "function_name": "include_router",
                    "function_code": "def include_router(\n    self, router: \"APIRouter\", *, prefix: str = \"\", tags: List[str] = None\n) -> None:\n    if prefix:\n        assert prefix.startswith(\"/\"), \"A path prefix must start with '/'\"\n        assert not prefix.endswith(\n            \"/\"\n        ), \"A path prefix must not end with '/', as the routes will start with '/'\"\n    for route in router.routes:\n        if isinstance(route, APIRoute):\n            self.add_api_route(\n                prefix + route.path,\n                route.endpoint,\n                response_model=route.response_model,\n                status_code=route.status_code,\n                tags=(route.tags or []) + (tags or []),\n                summary=route.summary,\n                description=route.description,\n                response_description=route.response_description,\n                deprecated=route.deprecated,\n                methods=route.methods,\n                operation_id=route.operation_id,\n                include_in_schema=route.include_in_schema,\n                content_type=route.content_type,\n                name=route.name,\n            )\n        elif isinstance(route, routing.Route):\n            self.add_route(\n                prefix + route.path,\n                route.endpoint,\n                methods=route.methods,\n                include_in_schema=route.include_in_schema,\n                name=route.name,\n            )\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 240,
                    "end_line": 273,
                    "variables": {
                        "str": [
                            241
                        ],
                        "List": [
                            241
                        ],
                        "prefix": [
                            268,
                            243,
                            244,
                            245,
                            251
                        ],
                        "prefix.startswith": [
                            244
                        ],
                        "prefix.endswith": [
                            245
                        ],
                        "route": [
                            256,
                            257,
                            258,
                            259,
                            260,
                            261,
                            262,
                            263,
                            264,
                            266,
                            268,
                            269,
                            270,
                            271,
                            272,
                            248,
                            249,
                            251,
                            252,
                            253,
                            254,
                            255
                        ],
                        "router.routes": [
                            248
                        ],
                        "router": [
                            248
                        ],
                        "isinstance": [
                            249,
                            266
                        ],
                        "APIRoute": [
                            249
                        ],
                        "self.add_api_route": [
                            250
                        ],
                        "self": [
                            250,
                            267
                        ],
                        "route.path": [
                            251,
                            268
                        ],
                        "route.endpoint": [
                            252,
                            269
                        ],
                        "route.response_model": [
                            253
                        ],
                        "route.status_code": [
                            254
                        ],
                        "route.tags": [
                            255
                        ],
                        "tags": [
                            255
                        ],
                        "route.summary": [
                            256
                        ],
                        "route.description": [
                            257
                        ],
                        "route.response_description": [
                            258
                        ],
                        "route.deprecated": [
                            259
                        ],
                        "route.methods": [
                            260,
                            270
                        ],
                        "route.operation_id": [
                            261
                        ],
                        "route.include_in_schema": [
                            262,
                            271
                        ],
                        "route.content_type": [
                            263
                        ],
                        "route.name": [
                            264,
                            272
                        ],
                        "routing.Route": [
                            266
                        ],
                        "routing": [
                            266
                        ],
                        "self.add_route": [
                            267
                        ]
                    },
                    "filtered_variables": {
                        "List": [
                            241
                        ],
                        "prefix": [
                            268,
                            243,
                            244,
                            245,
                            251
                        ],
                        "prefix.startswith": [
                            244
                        ],
                        "prefix.endswith": [
                            245
                        ],
                        "route": [
                            256,
                            257,
                            258,
                            259,
                            260,
                            261,
                            262,
                            263,
                            264,
                            266,
                            268,
                            269,
                            270,
                            271,
                            272,
                            248,
                            249,
                            251,
                            252,
                            253,
                            254,
                            255
                        ],
                        "router.routes": [
                            248
                        ],
                        "router": [
                            248
                        ],
                        "APIRoute": [
                            249
                        ],
                        "self.add_api_route": [
                            250
                        ],
                        "self": [
                            250,
                            267
                        ],
                        "route.path": [
                            251,
                            268
                        ],
                        "route.endpoint": [
                            252,
                            269
                        ],
                        "route.response_model": [
                            253
                        ],
                        "route.status_code": [
                            254
                        ],
                        "route.tags": [
                            255
                        ],
                        "tags": [
                            255
                        ],
                        "route.summary": [
                            256
                        ],
                        "route.description": [
                            257
                        ],
                        "route.response_description": [
                            258
                        ],
                        "route.deprecated": [
                            259
                        ],
                        "route.methods": [
                            260,
                            270
                        ],
                        "route.operation_id": [
                            261
                        ],
                        "route.include_in_schema": [
                            262,
                            271
                        ],
                        "route.content_type": [
                            263
                        ],
                        "route.name": [
                            264,
                            272
                        ],
                        "routing.Route": [
                            266
                        ],
                        "routing": [
                            266
                        ],
                        "self.add_route": [
                            267
                        ]
                    },
                    "diff_line_number": 273,
                    "class_data": {
                        "signature": "class APIRouter(routing.Router)",
                        "docstring": null,
                        "constructor_docstring": null,
                        "functions": [
                            "def add_api_route(self, path: str, endpoint: Callable, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, methods: List[str]=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> None:\n    route = APIRoute(path, endpoint=endpoint, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=methods, operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)\n    self.routes.append(route)",
                            "def api_route(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, methods: List[str]=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n\n    def decorator(func: Callable) -> Callable:\n        self.add_api_route(path, func, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=methods, operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)\n        return func\n    return decorator",
                            "def include_router(self, router: 'APIRouter', *, prefix: str='', tags: List[str]=None) -> None:\n    if prefix:\n        assert prefix.startswith('/'), \"A path prefix must start with '/'\"\n        assert not prefix.endswith('/'), \"A path prefix must not end with '/', as the routes will start with '/'\"\n    for route in router.routes:\n        if isinstance(route, APIRoute):\n            self.add_api_route(prefix + route.path, route.endpoint, response_model=route.response_model, status_code=route.status_code, tags=(route.tags or []) + (tags or []), summary=route.summary, description=route.description, response_description=route.response_description, deprecated=route.deprecated, methods=route.methods, operation_id=route.operation_id, include_in_schema=route.include_in_schema, content_type=route.content_type, name=route.name)\n        elif isinstance(route, routing.Route):\n            self.add_route(prefix + route.path, route.endpoint, methods=route.methods, include_in_schema=route.include_in_schema, name=route.name)",
                            "def get(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n    return self.api_route(path=path, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=['GET'], operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)",
                            "def put(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n    return self.api_route(path=path, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=['PUT'], operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)",
                            "def post(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n    return self.api_route(path=path, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=['POST'], operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)",
                            "def delete(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n    return self.api_route(path=path, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=['DELETE'], operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)",
                            "def options(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n    return self.api_route(path=path, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=['OPTIONS'], operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)",
                            "def head(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n    return self.api_route(path=path, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=['HEAD'], operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)",
                            "def patch(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n    return self.api_route(path=path, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=['PATCH'], operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)",
                            "def trace(self, path: str, *, response_model: Type[BaseModel]=None, status_code: int=200, tags: List[str]=None, summary: str=None, description: str=None, response_description: str='Successful Response', deprecated: bool=None, operation_id: str=None, include_in_schema: bool=True, content_type: Type[Response]=JSONResponse, name: str=None) -> Callable:\n    return self.api_route(path=path, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=['TRACE'], operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)",
                            "def decorator(func: Callable) -> Callable:\n    self.add_api_route(path, func, response_model=response_model, status_code=status_code, tags=tags or [], summary=summary, description=description, response_description=response_description, deprecated=deprecated, methods=methods, operation_id=operation_id, include_in_schema=include_in_schema, content_type=content_type, name=name)\n    return func"
                        ],
                        "constructor_variables": [],
                        "class_level_variables": [],
                        "class_decorators": [],
                        "function_signatures": [
                            "add_api_route(self, path: str, endpoint: Callable) -> None",
                            "api_route(self, path: str) -> Callable",
                            "include_router(self, router: 'APIRouter') -> None",
                            "get(self, path: str) -> Callable",
                            "put(self, path: str) -> Callable",
                            "post(self, path: str) -> Callable",
                            "delete(self, path: str) -> Callable",
                            "options(self, path: str) -> Callable",
                            "head(self, path: str) -> Callable",
                            "patch(self, path: str) -> Callable",
                            "trace(self, path: str) -> Callable",
                            "decorator(func: Callable) -> Callable"
                        ]
                    },
                    "variable_values": [
                        [
                            {
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prefix": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "prefix.startswith": {
                                    "variable_value": "<built-in method startswith of str object at 0x10d5852f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prefix.endswith": {
                                    "variable_value": "<built-in method endswith of str object at 0x10d5852f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "router.routes": {
                                    "variable_value": "[<starlette.routing.WebSocketRoute object at 0x10f644160>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "router": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10f367f40>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "APIRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_api_route": {
                                    "variable_value": "<bound method APIRouter.add_api_route of <fastapi.routing.APIRouter object at 0x10f62efa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10f62efa0>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "route.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.endpoint": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.response_model": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.status_code": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.tags": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.summary": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.description": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.response_description": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.deprecated": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.methods": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.operation_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.include_in_schema": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.content_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing.Route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_route": {
                                    "variable_value": "<bound method Router.add_route of <fastapi.routing.APIRouter object at 0x10f62efa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prefix": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "prefix.startswith": {
                                    "variable_value": "<built-in method startswith of str object at 0x10d5852f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prefix.endswith": {
                                    "variable_value": "<built-in method endswith of str object at 0x10d5852f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "route": {
                                    "variable_value": "<starlette.routing.WebSocketRoute object at 0x10f644160>",
                                    "variable_type": "WebSocketRoute",
                                    "variable_shape": null
                                },
                                "router.routes": {
                                    "variable_value": "[<starlette.routing.WebSocketRoute object at 0x10f644160>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "router": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10f367f40>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "APIRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_api_route": {
                                    "variable_value": "<bound method APIRouter.add_api_route of <fastapi.routing.APIRouter object at 0x10f62efa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10f62efa0>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "route.path": {
                                    "variable_value": "'/router'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "route.endpoint": {
                                    "variable_value": "<function routerindex at 0x10f64a700>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "route.response_model": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.status_code": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.summary": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.description": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.response_description": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.deprecated": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.methods": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.operation_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.include_in_schema": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.content_type": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.name": {
                                    "variable_value": "'routerindex'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "routing.Route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_route": {
                                    "variable_value": "<bound method Router.add_route of <fastapi.routing.APIRouter object at 0x10f62efa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prefix": {
                                    "variable_value": "'/prefix'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "prefix.startswith": {
                                    "variable_value": "<built-in method startswith of str object at 0x10f098630>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prefix.endswith": {
                                    "variable_value": "<built-in method endswith of str object at 0x10f098630>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "router.routes": {
                                    "variable_value": "[<starlette.routing.WebSocketRoute object at 0x10f6442e0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "router": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10f09f040>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "APIRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_api_route": {
                                    "variable_value": "<bound method APIRouter.add_api_route of <fastapi.routing.APIRouter object at 0x10f62efa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10f62efa0>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "route.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.endpoint": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.response_model": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.status_code": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.tags": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.summary": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.description": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.response_description": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.deprecated": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.methods": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.operation_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.include_in_schema": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.content_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing.Route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_route": {
                                    "variable_value": "<bound method Router.add_route of <fastapi.routing.APIRouter object at 0x10f62efa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prefix": {
                                    "variable_value": "'/prefix'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "prefix.startswith": {
                                    "variable_value": "<built-in method startswith of str object at 0x10f098630>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prefix.endswith": {
                                    "variable_value": "<built-in method endswith of str object at 0x10f098630>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "route": {
                                    "variable_value": "<starlette.routing.WebSocketRoute object at 0x10f6442e0>",
                                    "variable_type": "WebSocketRoute",
                                    "variable_shape": null
                                },
                                "router.routes": {
                                    "variable_value": "[<starlette.routing.WebSocketRoute object at 0x10f6442e0>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "router": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10f09f040>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "APIRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_api_route": {
                                    "variable_value": "<bound method APIRouter.add_api_route of <fastapi.routing.APIRouter object at 0x10f62efa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10f62efa0>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "route.path": {
                                    "variable_value": "'/'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "route.endpoint": {
                                    "variable_value": "<function routerprefixindex at 0x10f64a820>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "route.response_model": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.status_code": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.summary": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.description": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.response_description": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.deprecated": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.methods": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.operation_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.include_in_schema": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.content_type": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.name": {
                                    "variable_value": "'routerprefixindex'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "routing.Route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_route": {
                                    "variable_value": "<bound method Router.add_route of <fastapi.routing.APIRouter object at 0x10f62efa0>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prefix": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "prefix.startswith": {
                                    "variable_value": "<built-in method startswith of str object at 0x10cadc2f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prefix.endswith": {
                                    "variable_value": "<built-in method endswith of str object at 0x10cadc2f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "router.routes": {
                                    "variable_value": "[<starlette.routing.WebSocketRoute object at 0x10eb99100>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "router": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10e5dfdf0>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "APIRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_api_route": {
                                    "variable_value": "<bound method APIRouter.add_api_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10e949070>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "route.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.endpoint": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.response_model": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.status_code": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.tags": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.summary": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.description": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.response_description": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.deprecated": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.methods": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.operation_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.include_in_schema": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.content_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing.Route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_route": {
                                    "variable_value": "<bound method Router.add_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "routing.WebSocketRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_websocket_route": {
                                    "variable_value": "<bound method Router.add_websocket_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prefix": {
                                    "variable_value": "''",
                                    "variable_type": "str",
                                    "variable_shape": "0"
                                },
                                "prefix.startswith": {
                                    "variable_value": "<built-in method startswith of str object at 0x10cadc2f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prefix.endswith": {
                                    "variable_value": "<built-in method endswith of str object at 0x10cadc2f0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "route": {
                                    "variable_value": "<starlette.routing.WebSocketRoute object at 0x10eb99100>",
                                    "variable_type": "WebSocketRoute",
                                    "variable_shape": null
                                },
                                "router.routes": {
                                    "variable_value": "[<starlette.routing.WebSocketRoute object at 0x10eb99100>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "router": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10e5dfdf0>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "APIRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_api_route": {
                                    "variable_value": "<bound method APIRouter.add_api_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10e949070>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "route.path": {
                                    "variable_value": "'/router'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "route.endpoint": {
                                    "variable_value": "<function routerindex at 0x10eba0700>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "route.response_model": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.status_code": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.summary": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.description": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.response_description": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.deprecated": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.methods": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.operation_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.include_in_schema": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.content_type": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.name": {
                                    "variable_value": "'routerindex'",
                                    "variable_type": "str",
                                    "variable_shape": "11"
                                },
                                "routing.Route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_route": {
                                    "variable_value": "<bound method Router.add_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "routing.WebSocketRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_websocket_route": {
                                    "variable_value": "<bound method Router.add_websocket_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prefix": {
                                    "variable_value": "'/prefix'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "prefix.startswith": {
                                    "variable_value": "<built-in method startswith of str object at 0x10e5eb2b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prefix.endswith": {
                                    "variable_value": "<built-in method endswith of str object at 0x10e5eb2b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "router.routes": {
                                    "variable_value": "[<starlette.routing.WebSocketRoute object at 0x10eb99310>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "router": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10e554ee0>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "APIRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_api_route": {
                                    "variable_value": "<bound method APIRouter.add_api_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10e949070>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "route.path": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.endpoint": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.response_model": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.status_code": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.tags": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.summary": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.description": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.response_description": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.deprecated": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.methods": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.operation_id": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.include_in_schema": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.content_type": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "route.name": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing.Route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_route": {
                                    "variable_value": "<bound method Router.add_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "routing.WebSocketRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_websocket_route": {
                                    "variable_value": "<bound method Router.add_websocket_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            },
                            {
                                "List": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "prefix": {
                                    "variable_value": "'/prefix'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "prefix.startswith": {
                                    "variable_value": "<built-in method startswith of str object at 0x10e5eb2b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "prefix.endswith": {
                                    "variable_value": "<built-in method endswith of str object at 0x10e5eb2b0>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "route": {
                                    "variable_value": "<starlette.routing.WebSocketRoute object at 0x10eb99310>",
                                    "variable_type": "WebSocketRoute",
                                    "variable_shape": null
                                },
                                "router.routes": {
                                    "variable_value": "[<starlette.routing.WebSocketRoute object at 0x10eb99310>]",
                                    "variable_type": "list",
                                    "variable_shape": "1"
                                },
                                "router": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10e554ee0>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "APIRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_api_route": {
                                    "variable_value": "<bound method APIRouter.add_api_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "self": {
                                    "variable_value": "<fastapi.routing.APIRouter object at 0x10e949070>",
                                    "variable_type": "APIRouter",
                                    "variable_shape": null
                                },
                                "route.path": {
                                    "variable_value": "'/'",
                                    "variable_type": "str",
                                    "variable_shape": "1"
                                },
                                "route.endpoint": {
                                    "variable_value": "<function routerprefixindex at 0x10eba0820>",
                                    "variable_type": "function",
                                    "variable_shape": null
                                },
                                "route.response_model": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.status_code": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "tags": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.summary": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.description": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.response_description": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.deprecated": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.methods": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.operation_id": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.include_in_schema": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.content_type": {
                                    "variable_value": "None",
                                    "variable_type": "NoneType",
                                    "variable_shape": null
                                },
                                "route.name": {
                                    "variable_value": "'routerprefixindex'",
                                    "variable_type": "str",
                                    "variable_shape": "17"
                                },
                                "routing.Route": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "routing": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_route": {
                                    "variable_value": "<bound method Router.add_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                },
                                "routing.WebSocketRoute": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "self.add_websocket_route": {
                                    "variable_value": "<bound method Router.add_websocket_route of <fastapi.routing.APIRouter object at 0x10e949070>>",
                                    "variable_type": "method",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "inscope_functions": [
                "def serialize_response(*, field: Field = None, response: Response) -> Any:\n    encoded = jsonable_encoder(response)\n    if field:\n        errors = []\n        value, errors_ = field.validate(encoded, {}, loc=(\"response\",))\n        if isinstance(errors_, ErrorWrapper):\n            errors.append(errors_)\n        elif isinstance(errors_, list):\n            errors.extend(errors_)\n        if errors:\n            raise ValidationError(errors)\n        return jsonable_encoder(value)\n    else:\n        return encoded",
                "def get_app(\n    dependant: Dependant,\n    body_field: Field = None,\n    status_code: int = 200,\n    content_type: Type[Response] = JSONResponse,\n    response_field: Field = None,\n) -> Callable:\n    assert dependant.call is not None, \"dependant.call must me a function\"\n    is_coroutine = asyncio.iscoroutinefunction(dependant.call)\n    is_body_form = body_field and isinstance(body_field.schema, params.Form)\n\n    async def app(request: Request) -> Response:\n        try:\n            body = None\n            if body_field:\n                if is_body_form:\n                    raw_body = await request.form()\n                    form_fields = {}\n                    for field, value in raw_body.items():\n                        form_fields[field] = value\n                    if form_fields:\n                        body = form_fields\n                else:\n                    body_bytes = await request.body()\n                    if body_bytes:\n                        body = await request.json()\n        except Exception as e:\n            logging.error(\"Error getting request body\", e)\n            raise HTTPException(\n                status_code=400, detail=\"There was an error parsing the body\"\n            )\n        values, errors = await solve_dependencies(\n            request=request, dependant=dependant, body=body\n        )\n        if errors:\n            errors_out = ValidationError(errors)\n            raise HTTPException(\n                status_code=HTTP_422_UNPROCESSABLE_ENTITY, detail=errors_out.errors()\n            )\n        else:\n            assert dependant.call is not None, \"dependant.call must me a function\"\n            if is_coroutine:\n                raw_response = await dependant.call(**values)\n            else:\n                raw_response = await run_in_threadpool(dependant.call, **values)\n            if isinstance(raw_response, Response):\n                return raw_response\n            response_data = serialize_response(\n                field=response_field, response=raw_response\n            )\n            return content_type(content=response_data, status_code=status_code)\n\n    return app",
                "async def app(request: Request) -> Response:\n    try:\n        body = None\n        if body_field:\n            if is_body_form:\n                raw_body = await request.form()\n                form_fields = {}\n                for field, value in raw_body.items():\n                    form_fields[field] = value\n                if form_fields:\n                    body = form_fields\n            else:\n                body_bytes = await request.body()\n                if body_bytes:\n                    body = await request.json()\n    except Exception as e:\n        logging.error(\"Error getting request body\", e)\n        raise HTTPException(\n            status_code=400, detail=\"There was an error parsing the body\"\n        )\n    values, errors = await solve_dependencies(\n        request=request, dependant=dependant, body=body\n    )\n    if errors:\n        errors_out = ValidationError(errors)\n        raise HTTPException(\n            status_code=HTTP_422_UNPROCESSABLE_ENTITY, detail=errors_out.errors()\n        )\n    else:\n        assert dependant.call is not None, \"dependant.call must me a function\"\n        if is_coroutine:\n            raw_response = await dependant.call(**values)\n        else:\n            raw_response = await run_in_threadpool(dependant.call, **values)\n        if isinstance(raw_response, Response):\n            return raw_response\n        response_data = serialize_response(\n            field=response_field, response=raw_response\n        )\n        return content_type(content=response_data, status_code=status_code)",
                "def __init__(\n    self,\n    path: str,\n    endpoint: Callable,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    name: str = None,\n    methods: List[str] = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n) -> None:\n    assert path.startswith(\"/\"), \"Routed paths must always start with '/'\"\n    self.path = path\n    self.endpoint = endpoint\n    self.name = get_name(endpoint) if name is None else name\n    self.response_model = response_model\n    if self.response_model:\n        assert lenient_issubclass(\n            content_type, JSONResponse\n        ), \"To declare a type the response must be a JSON response\"\n        response_name = \"Response_\" + self.name\n        self.response_field: Optional[Field] = Field(\n            name=response_name,\n            type_=self.response_model,\n            class_validators=[],\n            default=None,\n            required=False,\n            model_config=UnconstrainedConfig,\n            schema=Schema(None),\n        )\n    else:\n        self.response_field = None\n    self.status_code = status_code\n    self.tags = tags or []\n    self.summary = summary\n    self.description = description or self.endpoint.__doc__\n    self.response_description = response_description\n    self.deprecated = deprecated\n    if methods is None:\n        methods = [\"GET\"]\n    self.methods = methods\n    self.operation_id = operation_id\n    self.include_in_schema = include_in_schema\n    self.content_type = content_type\n\n    self.path_regex, self.path_format, self.param_convertors = compile_path(path)\n    assert inspect.isfunction(endpoint) or inspect.ismethod(\n        endpoint\n    ), f\"An endpoint must be a function or method\"\n    self.dependant = get_dependant(path=path, call=self.endpoint)\n    self.body_field = get_body_field(dependant=self.dependant, name=self.name)\n    self.app = request_response(\n        get_app(\n            dependant=self.dependant,\n            body_field=self.body_field,\n            status_code=self.status_code,\n            content_type=self.content_type,\n            response_field=self.response_field,\n        )\n    )",
                "def add_api_route(\n    self,\n    path: str,\n    endpoint: Callable,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    methods: List[str] = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> None:\n    route = APIRoute(\n        path,\n        endpoint=endpoint,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=methods,\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )\n    self.routes.append(route)",
                "def api_route(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    methods: List[str] = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    def decorator(func: Callable) -> Callable:\n        self.add_api_route(\n            path,\n            func,\n            response_model=response_model,\n            status_code=status_code,\n            tags=tags or [],\n            summary=summary,\n            description=description,\n            response_description=response_description,\n            deprecated=deprecated,\n            methods=methods,\n            operation_id=operation_id,\n            include_in_schema=include_in_schema,\n            content_type=content_type,\n            name=name,\n        )\n        return func\n\n    return decorator",
                "def include_router(\n    self, router: \"APIRouter\", *, prefix: str = \"\", tags: List[str] = None\n) -> None:\n    if prefix:\n        assert prefix.startswith(\"/\"), \"A path prefix must start with '/'\"\n        assert not prefix.endswith(\n            \"/\"\n        ), \"A path prefix must not end with '/', as the routes will start with '/'\"\n    for route in router.routes:\n        if isinstance(route, APIRoute):\n            self.add_api_route(\n                prefix + route.path,\n                route.endpoint,\n                response_model=route.response_model,\n                status_code=route.status_code,\n                tags=(route.tags or []) + (tags or []),\n                summary=route.summary,\n                description=route.description,\n                response_description=route.response_description,\n                deprecated=route.deprecated,\n                methods=route.methods,\n                operation_id=route.operation_id,\n                include_in_schema=route.include_in_schema,\n                content_type=route.content_type,\n                name=route.name,\n            )\n        elif isinstance(route, routing.Route):\n            self.add_route(\n                prefix + route.path,\n                route.endpoint,\n                methods=route.methods,\n                include_in_schema=route.include_in_schema,\n                name=route.name,\n            )",
                "def get(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    return self.api_route(\n        path=path,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=[\"GET\"],\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )",
                "def put(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    return self.api_route(\n        path=path,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=[\"PUT\"],\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )",
                "def post(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    return self.api_route(\n        path=path,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=[\"POST\"],\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )",
                "def delete(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    return self.api_route(\n        path=path,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=[\"DELETE\"],\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )",
                "def options(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    return self.api_route(\n        path=path,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=[\"OPTIONS\"],\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )",
                "def head(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    return self.api_route(\n        path=path,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=[\"HEAD\"],\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )",
                "def patch(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    return self.api_route(\n        path=path,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=[\"PATCH\"],\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )",
                "def trace(\n    self,\n    path: str,\n    *,\n    response_model: Type[BaseModel] = None,\n    status_code: int = 200,\n    tags: List[str] = None,\n    summary: str = None,\n    description: str = None,\n    response_description: str = \"Successful Response\",\n    deprecated: bool = None,\n    operation_id: str = None,\n    include_in_schema: bool = True,\n    content_type: Type[Response] = JSONResponse,\n    name: str = None,\n) -> Callable:\n    return self.api_route(\n        path=path,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=[\"TRACE\"],\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )",
                "def decorator(func: Callable) -> Callable:\n    self.add_api_route(\n        path,\n        func,\n        response_model=response_model,\n        status_code=status_code,\n        tags=tags or [],\n        summary=summary,\n        description=description,\n        response_description=response_description,\n        deprecated=deprecated,\n        methods=methods,\n        operation_id=operation_id,\n        include_in_schema=include_in_schema,\n        content_type=content_type,\n        name=name,\n    )\n    return func"
            ],
            "inscope_function_signatures": [
                "serialize_response() -> Any",
                "get_app(dependant: Dependant, body_field: Field=None, status_code: int=200, content_type: Type[Response]=JSONResponse, response_field: Field=None) -> Callable",
                "app(request: Request) -> Response",
                "__init__(self, path: str, endpoint: Callable) -> None",
                "add_api_route(self, path: str, endpoint: Callable) -> None",
                "api_route(self, path: str) -> Callable",
                "include_router(self, router: 'APIRouter') -> None",
                "get(self, path: str) -> Callable",
                "put(self, path: str) -> Callable",
                "post(self, path: str) -> Callable",
                "delete(self, path: str) -> Callable",
                "options(self, path: str) -> Callable",
                "head(self, path: str) -> Callable",
                "patch(self, path: str) -> Callable",
                "trace(self, path: str) -> Callable",
                "decorator(func: Callable) -> Callable"
            ],
            "variables_in_file": {
                "Field": [
                    24,
                    42,
                    124,
                    45
                ],
                "Response": [
                    288,
                    320,
                    352,
                    384,
                    416,
                    448,
                    480,
                    512,
                    44,
                    112,
                    51,
                    85,
                    181,
                    24,
                    216
                ],
                "encoded": [
                    25,
                    28,
                    37
                ],
                "jsonable_encoder": [
                    25,
                    35
                ],
                "response": [
                    25
                ],
                "field": [
                    26,
                    59,
                    28,
                    58
                ],
                "errors": [
                    32,
                    33,
                    34,
                    71,
                    74,
                    75,
                    27,
                    30
                ],
                "value": [
                    59,
                    58,
                    35,
                    28
                ],
                "errors_": [
                    32,
                    28,
                    29,
                    30,
                    31
                ],
                "field.validate": [
                    28
                ],
                "isinstance": [
                    266,
                    49,
                    85,
                    249,
                    29,
                    31
                ],
                "ErrorWrapper": [
                    29
                ],
                "errors.append": [
                    30
                ],
                "list": [
                    31
                ],
                "errors.extend": [
                    32
                ],
                "ValidationError": [
                    34,
                    75
                ],
                "Any": [
                    24
                ],
                "Dependant": [
                    41
                ],
                "int": [
                    312,
                    344,
                    376,
                    408,
                    102,
                    440,
                    472,
                    504,
                    43,
                    172,
                    207,
                    280
                ],
                "Type": [
                    384,
                    512,
                    407,
                    279,
                    288,
                    416,
                    171,
                    44,
                    181,
                    439,
                    311,
                    320,
                    448,
                    206,
                    343,
                    216,
                    471,
                    352,
                    480,
                    503,
                    101,
                    112,
                    375
                ],
                "JSONResponse": [
                    288,
                    320,
                    352,
                    384,
                    416,
                    448,
                    480,
                    512,
                    44,
                    112,
                    181,
                    216,
                    121
                ],
                "dependant.call": [
                    47,
                    48,
                    80,
                    82,
                    84
                ],
                "dependant": [
                    72,
                    47,
                    48,
                    80,
                    82,
                    84
                ],
                "is_coroutine": [
                    48,
                    81
                ],
                "asyncio.iscoroutinefunction": [
                    48
                ],
                "asyncio": [
                    48
                ],
                "is_body_form": [
                    49,
                    55
                ],
                "body_field": [
                    49,
                    54
                ],
                "body_field.schema": [
                    49
                ],
                "params.Form": [
                    49
                ],
                "params": [
                    49
                ],
                "Request": [
                    51
                ],
                "body": [
                    72,
                    65,
                    61,
                    53
                ],
                "raw_body": [
                    56,
                    58
                ],
                "request.form": [
                    56
                ],
                "request": [
                    56,
                    65,
                    72,
                    63
                ],
                "form_fields": [
                    57,
                    59,
                    60,
                    61
                ],
                "raw_body.items": [
                    58
                ],
                "body_bytes": [
                    64,
                    63
                ],
                "request.body": [
                    63
                ],
                "request.json": [
                    65
                ],
                "Exception": [
                    66
                ],
                "logging.error": [
                    67
                ],
                "logging": [
                    67
                ],
                "e": [
                    67
                ],
                "HTTPException": [
                    68,
                    76
                ],
                "values": [
                    82,
                    84,
                    71
                ],
                "solve_dependencies": [
                    71
                ],
                "errors_out": [
                    75,
                    77
                ],
                "HTTP_422_UNPROCESSABLE_ENTITY": [
                    77
                ],
                "errors_out.errors": [
                    77
                ],
                "raw_response": [
                    82,
                    84,
                    85,
                    86,
                    88
                ],
                "run_in_threadpool": [
                    84
                ],
                "response_data": [
                    90,
                    87
                ],
                "serialize_response": [
                    87
                ],
                "response_field": [
                    88
                ],
                "content_type": [
                    197,
                    233,
                    303,
                    335,
                    367,
                    146,
                    399,
                    431,
                    463,
                    495,
                    527,
                    121,
                    90
                ],
                "status_code": [
                    224,
                    294,
                    135,
                    326,
                    358,
                    390,
                    422,
                    454,
                    486,
                    518,
                    90,
                    188
                ],
                "app": [
                    92
                ],
                "Callable": [
                    290,
                    99,
                    322,
                    354,
                    386,
                    418,
                    450,
                    169,
                    482,
                    514,
                    46,
                    218,
                    219
                ],
                "routing.Route": [
                    266,
                    95
                ],
                "routing": [
                    266,
                    165,
                    95
                ],
                "str": [
                    513,
                    98,
                    103,
                    104,
                    105,
                    106,
                    108,
                    109,
                    110,
                    168,
                    173,
                    174,
                    175,
                    176,
                    178,
                    179,
                    182,
                    204,
                    208,
                    209,
                    210,
                    211,
                    213,
                    214,
                    217,
                    241,
                    277,
                    281,
                    282,
                    283,
                    284,
                    286,
                    289,
                    309,
                    313,
                    314,
                    315,
                    316,
                    318,
                    321,
                    341,
                    345,
                    346,
                    347,
                    348,
                    350,
                    353,
                    373,
                    377,
                    378,
                    379,
                    380,
                    382,
                    385,
                    405,
                    409,
                    410,
                    411,
                    412,
                    414,
                    417,
                    437,
                    441,
                    442,
                    443,
                    444,
                    446,
                    449,
                    469,
                    473,
                    474,
                    475,
                    476,
                    478,
                    481,
                    501,
                    505,
                    506,
                    507,
                    508,
                    510
                ],
                "BaseModel": [
                    407,
                    439,
                    471,
                    503,
                    101,
                    171,
                    206,
                    311,
                    279,
                    343,
                    375
                ],
                "List": [
                    103,
                    313,
                    345,
                    377,
                    409,
                    441,
                    173,
                    109,
                    473,
                    208,
                    241,
                    178,
                    505,
                    213,
                    281
                ],
                "bool": [
                    509,
                    511,
                    285,
                    413,
                    415,
                    287,
                    177,
                    180,
                    445,
                    317,
                    319,
                    447,
                    212,
                    215,
                    477,
                    349,
                    351,
                    479,
                    107,
                    111,
                    381,
                    383
                ],
                "path.startswith": [
                    114
                ],
                "path": [
                    292,
                    324,
                    356,
                    388,
                    420,
                    452,
                    484,
                    516,
                    114,
                    115,
                    148,
                    152,
                    185,
                    221
                ],
                "self.path": [
                    115
                ],
                "self": [
                    387,
                    515,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    267,
                    143,
                    144,
                    145,
                    146,
                    148,
                    152,
                    153,
                    154,
                    156,
                    157,
                    158,
                    159,
                    160,
                    291,
                    419,
                    323,
                    451,
                    200,
                    220,
                    355,
                    483,
                    115,
                    116,
                    117,
                    118,
                    119,
                    250,
                    123,
                    124,
                    126
                ],
                "self.endpoint": [
                    152,
                    138,
                    116
                ],
                "endpoint": [
                    116,
                    117,
                    150,
                    149,
                    186
                ],
                "self.name": [
                    153,
                    123,
                    117
                ],
                "name": [
                    198,
                    234,
                    304,
                    336,
                    368,
                    400,
                    432,
                    117,
                    464,
                    496,
                    528
                ],
                "get_name": [
                    117
                ],
                "self.response_model": [
                    126,
                    118,
                    119
                ],
                "response_model": [
                    325,
                    293,
                    357,
                    389,
                    421,
                    453,
                    485,
                    517,
                    118,
                    187,
                    223
                ],
                "lenient_issubclass": [
                    120
                ],
                "response_name": [
                    123,
                    125
                ],
                "self.response_field": [
                    160,
                    124,
                    134
                ],
                "Optional": [
                    124
                ],
                "UnconstrainedConfig": [
                    130
                ],
                "Schema": [
                    131
                ],
                "self.status_code": [
                    158,
                    135
                ],
                "self.tags": [
                    136
                ],
                "tags": [
                    225,
                    295,
                    136,
                    327,
                    359,
                    391,
                    423,
                    455,
                    487,
                    519,
                    189,
                    255
                ],
                "self.summary": [
                    137
                ],
                "summary": [
                    226,
                    296,
                    137,
                    328,
                    360,
                    392,
                    424,
                    456,
                    488,
                    520,
                    190
                ],
                "self.description": [
                    138
                ],
                "description": [
                    227,
                    329,
                    297,
                    138,
                    361,
                    393,
                    425,
                    457,
                    489,
                    521,
                    191
                ],
                "self.endpoint.__doc__": [
                    138
                ],
                "self.response_description": [
                    139
                ],
                "response_description": [
                    192,
                    228,
                    298,
                    139,
                    330,
                    362,
                    394,
                    426,
                    458,
                    490,
                    522
                ],
                "self.deprecated": [
                    140
                ],
                "deprecated": [
                    193,
                    229,
                    331,
                    299,
                    140,
                    363,
                    395,
                    427,
                    459,
                    491,
                    523
                ],
                "methods": [
                    194,
                    230,
                    141,
                    142,
                    143
                ],
                "self.methods": [
                    143
                ],
                "self.operation_id": [
                    144
                ],
                "operation_id": [
                    195,
                    231,
                    333,
                    301,
                    365,
                    144,
                    397,
                    429,
                    461,
                    493,
                    525
                ],
                "self.include_in_schema": [
                    145
                ],
                "include_in_schema": [
                    196,
                    232,
                    302,
                    334,
                    366,
                    145,
                    398,
                    430,
                    462,
                    494,
                    526
                ],
                "self.content_type": [
                    146,
                    159
                ],
                "self.path_regex": [
                    148
                ],
                "self.path_format": [
                    148
                ],
                "self.param_convertors": [
                    148
                ],
                "compile_path": [
                    148
                ],
                "inspect.isfunction": [
                    149
                ],
                "inspect": [
                    149
                ],
                "inspect.ismethod": [
                    149
                ],
                "self.dependant": [
                    152,
                    153,
                    156
                ],
                "get_dependant": [
                    152
                ],
                "self.body_field": [
                    153,
                    157
                ],
                "get_body_field": [
                    153
                ],
                "self.app": [
                    154
                ],
                "request_response": [
                    154
                ],
                "get_app": [
                    155
                ],
                "routing.Router": [
                    165
                ],
                "route": [
                    256,
                    257,
                    258,
                    259,
                    260,
                    261,
                    262,
                    263,
                    264,
                    266,
                    268,
                    269,
                    270,
                    271,
                    272,
                    184,
                    200,
                    248,
                    249,
                    251,
                    252,
                    253,
                    254,
                    255
                ],
                "APIRoute": [
                    184,
                    249
                ],
                "self.routes.append": [
                    200
                ],
                "self.routes": [
                    200
                ],
                "self.add_api_route": [
                    250,
                    220
                ],
                "func": [
                    236,
                    222
                ],
                "decorator": [
                    238
                ],
                "prefix": [
                    268,
                    243,
                    244,
                    245,
                    251
                ],
                "prefix.startswith": [
                    244
                ],
                "prefix.endswith": [
                    245
                ],
                "router.routes": [
                    248
                ],
                "router": [
                    248
                ],
                "route.path": [
                    251,
                    268
                ],
                "route.endpoint": [
                    252,
                    269
                ],
                "route.response_model": [
                    253
                ],
                "route.status_code": [
                    254
                ],
                "route.tags": [
                    255
                ],
                "route.summary": [
                    256
                ],
                "route.description": [
                    257
                ],
                "route.response_description": [
                    258
                ],
                "route.deprecated": [
                    259
                ],
                "route.methods": [
                    260,
                    270
                ],
                "route.operation_id": [
                    261
                ],
                "route.include_in_schema": [
                    262,
                    271
                ],
                "route.content_type": [
                    263
                ],
                "route.name": [
                    264,
                    272
                ],
                "self.add_route": [
                    267
                ],
                "self.api_route": [
                    355,
                    323,
                    291,
                    387,
                    419,
                    451,
                    483,
                    515
                ]
            },
            "filtered_variables_in_file": {
                "Field": [
                    24,
                    42,
                    124,
                    45
                ],
                "Response": [
                    288,
                    320,
                    352,
                    384,
                    416,
                    448,
                    480,
                    512,
                    44,
                    112,
                    51,
                    85,
                    181,
                    24,
                    216
                ],
                "encoded": [
                    25,
                    28,
                    37
                ],
                "jsonable_encoder": [
                    25,
                    35
                ],
                "response": [
                    25
                ],
                "field": [
                    26,
                    59,
                    28,
                    58
                ],
                "errors": [
                    32,
                    33,
                    34,
                    71,
                    74,
                    75,
                    27,
                    30
                ],
                "value": [
                    59,
                    58,
                    35,
                    28
                ],
                "errors_": [
                    32,
                    28,
                    29,
                    30,
                    31
                ],
                "field.validate": [
                    28
                ],
                "ErrorWrapper": [
                    29
                ],
                "errors.append": [
                    30
                ],
                "errors.extend": [
                    32
                ],
                "ValidationError": [
                    34,
                    75
                ],
                "Any": [
                    24
                ],
                "Dependant": [
                    41
                ],
                "Type": [
                    384,
                    512,
                    407,
                    279,
                    288,
                    416,
                    171,
                    44,
                    181,
                    439,
                    311,
                    320,
                    448,
                    206,
                    343,
                    216,
                    471,
                    352,
                    480,
                    503,
                    101,
                    112,
                    375
                ],
                "JSONResponse": [
                    288,
                    320,
                    352,
                    384,
                    416,
                    448,
                    480,
                    512,
                    44,
                    112,
                    181,
                    216,
                    121
                ],
                "dependant.call": [
                    47,
                    48,
                    80,
                    82,
                    84
                ],
                "dependant": [
                    72,
                    47,
                    48,
                    80,
                    82,
                    84
                ],
                "is_coroutine": [
                    48,
                    81
                ],
                "asyncio.iscoroutinefunction": [
                    48
                ],
                "asyncio": [
                    48
                ],
                "is_body_form": [
                    49,
                    55
                ],
                "body_field": [
                    49,
                    54
                ],
                "body_field.schema": [
                    49
                ],
                "params.Form": [
                    49
                ],
                "params": [
                    49
                ],
                "Request": [
                    51
                ],
                "body": [
                    72,
                    65,
                    61,
                    53
                ],
                "raw_body": [
                    56,
                    58
                ],
                "request.form": [
                    56
                ],
                "request": [
                    56,
                    65,
                    72,
                    63
                ],
                "form_fields": [
                    57,
                    59,
                    60,
                    61
                ],
                "raw_body.items": [
                    58
                ],
                "body_bytes": [
                    64,
                    63
                ],
                "request.body": [
                    63
                ],
                "request.json": [
                    65
                ],
                "logging.error": [
                    67
                ],
                "logging": [
                    67
                ],
                "e": [
                    67
                ],
                "HTTPException": [
                    68,
                    76
                ],
                "values": [
                    82,
                    84,
                    71
                ],
                "solve_dependencies": [
                    71
                ],
                "errors_out": [
                    75,
                    77
                ],
                "HTTP_422_UNPROCESSABLE_ENTITY": [
                    77
                ],
                "errors_out.errors": [
                    77
                ],
                "raw_response": [
                    82,
                    84,
                    85,
                    86,
                    88
                ],
                "run_in_threadpool": [
                    84
                ],
                "response_data": [
                    90,
                    87
                ],
                "serialize_response": [
                    87
                ],
                "response_field": [
                    88
                ],
                "content_type": [
                    197,
                    233,
                    303,
                    335,
                    367,
                    146,
                    399,
                    431,
                    463,
                    495,
                    527,
                    121,
                    90
                ],
                "status_code": [
                    224,
                    294,
                    135,
                    326,
                    358,
                    390,
                    422,
                    454,
                    486,
                    518,
                    90,
                    188
                ],
                "app": [
                    92
                ],
                "Callable": [
                    290,
                    99,
                    322,
                    354,
                    386,
                    418,
                    450,
                    169,
                    482,
                    514,
                    46,
                    218,
                    219
                ],
                "routing.Route": [
                    266,
                    95
                ],
                "routing": [
                    266,
                    165,
                    95
                ],
                "BaseModel": [
                    407,
                    439,
                    471,
                    503,
                    101,
                    171,
                    206,
                    311,
                    279,
                    343,
                    375
                ],
                "List": [
                    103,
                    313,
                    345,
                    377,
                    409,
                    441,
                    173,
                    109,
                    473,
                    208,
                    241,
                    178,
                    505,
                    213,
                    281
                ],
                "path.startswith": [
                    114
                ],
                "path": [
                    292,
                    324,
                    356,
                    388,
                    420,
                    452,
                    484,
                    516,
                    114,
                    115,
                    148,
                    152,
                    185,
                    221
                ],
                "self.path": [
                    115
                ],
                "self": [
                    387,
                    515,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    267,
                    143,
                    144,
                    145,
                    146,
                    148,
                    152,
                    153,
                    154,
                    156,
                    157,
                    158,
                    159,
                    160,
                    291,
                    419,
                    323,
                    451,
                    200,
                    220,
                    355,
                    483,
                    115,
                    116,
                    117,
                    118,
                    119,
                    250,
                    123,
                    124,
                    126
                ],
                "self.endpoint": [
                    152,
                    138,
                    116
                ],
                "endpoint": [
                    116,
                    117,
                    150,
                    149,
                    186
                ],
                "self.name": [
                    153,
                    123,
                    117
                ],
                "name": [
                    198,
                    234,
                    304,
                    336,
                    368,
                    400,
                    432,
                    117,
                    464,
                    496,
                    528
                ],
                "get_name": [
                    117
                ],
                "self.response_model": [
                    126,
                    118,
                    119
                ],
                "response_model": [
                    325,
                    293,
                    357,
                    389,
                    421,
                    453,
                    485,
                    517,
                    118,
                    187,
                    223
                ],
                "lenient_issubclass": [
                    120
                ],
                "response_name": [
                    123,
                    125
                ],
                "self.response_field": [
                    160,
                    124,
                    134
                ],
                "Optional": [
                    124
                ],
                "UnconstrainedConfig": [
                    130
                ],
                "Schema": [
                    131
                ],
                "self.status_code": [
                    158,
                    135
                ],
                "self.tags": [
                    136
                ],
                "tags": [
                    225,
                    295,
                    136,
                    327,
                    359,
                    391,
                    423,
                    455,
                    487,
                    519,
                    189,
                    255
                ],
                "self.summary": [
                    137
                ],
                "summary": [
                    226,
                    296,
                    137,
                    328,
                    360,
                    392,
                    424,
                    456,
                    488,
                    520,
                    190
                ],
                "self.description": [
                    138
                ],
                "description": [
                    227,
                    329,
                    297,
                    138,
                    361,
                    393,
                    425,
                    457,
                    489,
                    521,
                    191
                ],
                "self.endpoint.__doc__": [
                    138
                ],
                "self.response_description": [
                    139
                ],
                "response_description": [
                    192,
                    228,
                    298,
                    139,
                    330,
                    362,
                    394,
                    426,
                    458,
                    490,
                    522
                ],
                "self.deprecated": [
                    140
                ],
                "deprecated": [
                    193,
                    229,
                    331,
                    299,
                    140,
                    363,
                    395,
                    427,
                    459,
                    491,
                    523
                ],
                "methods": [
                    194,
                    230,
                    141,
                    142,
                    143
                ],
                "self.methods": [
                    143
                ],
                "self.operation_id": [
                    144
                ],
                "operation_id": [
                    195,
                    231,
                    333,
                    301,
                    365,
                    144,
                    397,
                    429,
                    461,
                    493,
                    525
                ],
                "self.include_in_schema": [
                    145
                ],
                "include_in_schema": [
                    196,
                    232,
                    302,
                    334,
                    366,
                    145,
                    398,
                    430,
                    462,
                    494,
                    526
                ],
                "self.content_type": [
                    146,
                    159
                ],
                "self.path_regex": [
                    148
                ],
                "self.path_format": [
                    148
                ],
                "self.param_convertors": [
                    148
                ],
                "compile_path": [
                    148
                ],
                "inspect.isfunction": [
                    149
                ],
                "inspect": [
                    149
                ],
                "inspect.ismethod": [
                    149
                ],
                "self.dependant": [
                    152,
                    153,
                    156
                ],
                "get_dependant": [
                    152
                ],
                "self.body_field": [
                    153,
                    157
                ],
                "get_body_field": [
                    153
                ],
                "self.app": [
                    154
                ],
                "request_response": [
                    154
                ],
                "get_app": [
                    155
                ],
                "routing.Router": [
                    165
                ],
                "route": [
                    256,
                    257,
                    258,
                    259,
                    260,
                    261,
                    262,
                    263,
                    264,
                    266,
                    268,
                    269,
                    270,
                    271,
                    272,
                    184,
                    200,
                    248,
                    249,
                    251,
                    252,
                    253,
                    254,
                    255
                ],
                "APIRoute": [
                    184,
                    249
                ],
                "self.routes.append": [
                    200
                ],
                "self.routes": [
                    200
                ],
                "self.add_api_route": [
                    250,
                    220
                ],
                "func": [
                    236,
                    222
                ],
                "decorator": [
                    238
                ],
                "prefix": [
                    268,
                    243,
                    244,
                    245,
                    251
                ],
                "prefix.startswith": [
                    244
                ],
                "prefix.endswith": [
                    245
                ],
                "router.routes": [
                    248
                ],
                "router": [
                    248
                ],
                "route.path": [
                    251,
                    268
                ],
                "route.endpoint": [
                    252,
                    269
                ],
                "route.response_model": [
                    253
                ],
                "route.status_code": [
                    254
                ],
                "route.tags": [
                    255
                ],
                "route.summary": [
                    256
                ],
                "route.description": [
                    257
                ],
                "route.response_description": [
                    258
                ],
                "route.deprecated": [
                    259
                ],
                "route.methods": [
                    260,
                    270
                ],
                "route.operation_id": [
                    261
                ],
                "route.include_in_schema": [
                    262,
                    271
                ],
                "route.content_type": [
                    263
                ],
                "route.name": [
                    264,
                    272
                ],
                "self.add_route": [
                    267
                ],
                "self.api_route": [
                    355,
                    323,
                    291,
                    387,
                    419,
                    451,
                    483,
                    515
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/fastapi_15/tests/test_ws_router.py",
                "test_function": "test_router",
                "test_function_code": "def test_router():\n    client = TestClient(app)\n    with client.websocket_connect(\"/router\") as websocket:\n        data = websocket.receive_text()\n        assert data == \"Hello, router!\"",
                "test_error": "starlette.websockets.WebSocketDisconnect: 1000",
                "full_test_error": "def test_router():\n        client = TestClient(app)\n>       with client.websocket_connect(\"/router\") as websocket:\n\ntests/test_ws_router.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:436: in websocket_connect\n    super().request(\"GET\", url, **kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:140: in send\n    session = WebSocketTestSession(self.app, scope)\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:273: in __init__\n    self._raise_on_close(message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <starlette.testclient.WebSocketTestSession object at 0x10ab23c10>\nmessage = {'code': 1000, 'type': 'websocket.close'}\n\n    def _raise_on_close(self, message: Message) -> None:\n        if message[\"type\"] == \"websocket.close\":\n>           raise WebSocketDisconnect(message.get(\"code\", 1000))\nE           starlette.websockets.WebSocketDisconnect: 1000\n\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:309: WebSocketDisconnect",
                "traceback": "../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:436: in websocket_connect\n    super().request(\"GET\", url, **kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:140: in send\n    session = WebSocketTestSession(self.app, scope)\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:273: in __init__\n    self._raise_on_close(message)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <starlette.testclient.WebSocketTestSession object at 0x10ab23c10>\nmessage = {'code': 1000, 'type': 'websocket.close'}\n\n    def _raise_on_close(self, message: Message) -> None:\n        if message[\"type\"] == \"websocket.close\":\n>           raise WebSocketDisconnect(message.get(\"code\", 1000))\nE           starlette.websockets.WebSocketDisconnect: 1000\n\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:309: WebSocketDisconnect",
                "test_function_decorators": []
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/fastapi_15/tests/test_ws_router.py",
                "test_function": "test_prefix_router",
                "test_function_code": "def test_prefix_router():\n    client = TestClient(app)\n    with client.websocket_connect(\"/prefix/\") as websocket:\n        data = websocket.receive_text()\n        assert data == \"Hello, router with prefix!\"",
                "test_error": "starlette.websockets.WebSocketDisconnect: 1000",
                "full_test_error": "def test_prefix_router():\n        client = TestClient(app)\n>       with client.websocket_connect(\"/prefix/\") as websocket:\n\ntests/test_ws_router.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:436: in websocket_connect\n    super().request(\"GET\", url, **kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:140: in send\n    session = WebSocketTestSession(self.app, scope)\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:273: in __init__\n    self._raise_on_close(message)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <starlette.testclient.WebSocketTestSession object at 0x10aca6790>\nmessage = {'code': 1000, 'type': 'websocket.close'}\n\n    def _raise_on_close(self, message: Message) -> None:\n        if message[\"type\"] == \"websocket.close\":\n>           raise WebSocketDisconnect(message.get(\"code\", 1000))\nE           starlette.websockets.WebSocketDisconnect: 1000\n\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:309: WebSocketDisconnect",
                "traceback": "../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:436: in websocket_connect\n    super().request(\"GET\", url, **kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/requests/sessions.py:530: in request\n    resp = self.send(prep, **send_kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/requests/sessions.py:643: in send\n    r = adapter.send(request, **kwargs)\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:140: in send\n    session = WebSocketTestSession(self.app, scope)\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:273: in __init__\n    self._raise_on_close(message)",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <starlette.testclient.WebSocketTestSession object at 0x10aca6790>\nmessage = {'code': 1000, 'type': 'websocket.close'}\n\n    def _raise_on_close(self, message: Message) -> None:\n        if message[\"type\"] == \"websocket.close\":\n>           raise WebSocketDisconnect(message.get(\"code\", 1000))\nE           starlette.websockets.WebSocketDisconnect: 1000\n\n../../envs/fastapi_15/lib/python3.8/site-packages/starlette/testclient.py:309: WebSocketDisconnect",
                "test_function_decorators": []
            }
        ]
    }
}