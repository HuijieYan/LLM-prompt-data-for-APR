{
    "1.1.1": "@g_connect(['v1'])\ndef fetch_role_related(self, related, role_id):\n    \n\n    results = []\n    try:\n        url = _urljoin(self.api_server, self.available_api_versions['v1'], \"roles\", role_id, related,\n                       \"?page_size=50\")\n        data = self._call_galaxy(url)\n        results = data['results']\n        done = (data.get('next_link', None) is None)\n        while not done:\n            url = _urljoin(self.api_server, data['next_link'])\n            data = self._call_galaxy(url)\n            results += data['results']\n            done = (data.get('next_link', None) is None)\n    except Exception as e:\n        display.vvvv(\"Unable to retrive role (id=%s) data (%s), but this is not fatal so we continue: %s\"\n                     % (role_id, related, to_text(e)))\n    return results\n",
    "1.1.2": "Fetch the list of related items for the given role.\nThe url comes from the 'related' field of the role.",
    "1.2.1": "class GalaxyAPI()",
    "1.2.2": "This class is meant to be used as a API client for an Ansible Galaxy server ",
    "1.2.3": [
        "available_api_versions(self)",
        "_call_galaxy(self, url, args=None, headers=None, method=None, auth_required=False, error_context_msg=None)"
    ],
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/ansible_14/lib/ansible/galaxy/api.py",
    "1.3.2": [
        "g_connect(versions)",
        "_urljoin(*args)",
        "available_api_versions(self)",
        "_call_galaxy(self, url, args=None, headers=None, method=None, auth_required=False, error_context_msg=None)"
    ],
    "1.4.1": [
        "@pytest.mark.parametrize('responses', [\n    [\n        {\n            'count': 2,\n            'results': [{'name': '3.5.1', }, {'name': '3.5.2'}],\n            'next_link': None,\n            'next': None,\n            'previous_link': None,\n            'previous': None\n        },\n    ],\n    [\n        {\n            'count': 2,\n            'results': [{'name': '3.5.1'}],\n            'next_link': '/api/v1/roles/432/versions/?page=2&page_size=50',\n            'next': '/roles/432/versions/?page=2&page_size=50',\n            'previous_link': None,\n            'previous': None\n        },\n        {\n            'count': 2,\n            'results': [{'name': '3.5.2'}],\n            'next_link': None,\n            'next': None,\n            'previous_link': '/api/v1/roles/432/versions/?&page_size=50',\n            'previous': '/roles/432/versions/?page_size=50',\n        },\n    ]\n])\ndef test_get_role_versions_pagination(monkeypatch, responses):\n    api = get_test_galaxy_api('https://galaxy.com/api/', 'v1')\n\n    mock_open = MagicMock()\n    mock_open.side_effect = [StringIO(to_text(json.dumps(r))) for r in responses]\n    monkeypatch.setattr(galaxy_api, 'open_url', mock_open)\n\n    actual = api.fetch_role_related('versions', 432)\n    assert actual == [{'name': '3.5.1'}, {'name': '3.5.2'}]\n\n    assert mock_open.call_count == len(responses)\n\n    assert mock_open.mock_calls[0][1][0] == 'https://galaxy.com/api/v1/roles/432/versions/?page_size=50'\n    if len(responses) == 2:\n        assert mock_open.mock_calls[1][1][0] == 'https://galaxy.com/api/v1/roles/432/versions/?page=2&page_size=50'"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/ansible_14/test/units/galaxy/test_api.py"
    ],
    "2.1.1": [
        [
            "E           AssertionError: assert 'https://galaxy.com/api/api/v1/roles/432/versions/?page=2&page_size=50' == 'https://galaxy.com/api/v1/roles/432/versions/?page=2&page_size=50'\nE             - https://galaxy.com/api/v1/roles/432/versions/?page=2&page_size=50\nE             + https://galaxy.com/api/api/v1/roles/432/versions/?page=2&page_size=50\nE             ?                   ++++"
        ]
    ],
    "2.1.2": [
        [
            "monkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x1110e7050>\nresponses = [{'count': 2, 'next': '/roles/432/versions/?page=2&page_size=50', 'next_link': '/api/v1/roles/432/versions/?page=2&pag...ious': None, ...}, {'count': 2, 'next': None, 'next_link': None, 'previous': '/roles/432/versions/?page_size=50', ...}]\n\n    @pytest.mark.parametrize('responses', [\n        [\n            {\n                'count': 2,\n                'results': [{'name': '3.5.1', }, {'name': '3.5.2'}],\n                'next_link': None,\n                'next': None,\n                'previous_link': None,\n                'previous': None\n            },\n        ],\n        [\n            {\n                'count': 2,\n                'results': [{'name': '3.5.1'}],\n                'next_link': '/api/v1/roles/432/versions/?page=2&page_size=50',\n                'next': '/roles/432/versions/?page=2&page_size=50',\n                'previous_link': None,\n                'previous': None\n            },\n            {\n                'count': 2,\n                'results': [{'name': '3.5.2'}],\n                'next_link': None,\n                'next': None,\n                'previous_link': '/api/v1/roles/432/versions/?&page_size=50',\n                'previous': '/roles/432/versions/?page_size=50',\n            },\n        ]\n    ])\n    def test_get_role_versions_pagination(monkeypatch, responses):\n        api = get_test_galaxy_api('https://galaxy.com/api/', 'v1')\n    \n        mock_open = MagicMock()\n        mock_open.side_effect = [StringIO(to_text(json.dumps(r))) for r in responses]\n        monkeypatch.setattr(galaxy_api, 'open_url', mock_open)\n    \n        actual = api.fetch_role_related('versions', 432)\n        assert actual == [{'name': '3.5.1'}, {'name': '3.5.2'}]\n    \n        assert mock_open.call_count == len(responses)\n    \n        assert mock_open.mock_calls[0][1][0] == 'https://galaxy.com/api/v1/roles/432/versions/?page_size=50'\n        if len(responses) == 2:\n>           assert mock_open.mock_calls[1][1][0] == 'https://galaxy.com/api/v1/roles/432/versions/?page=2&page_size=50'",
            "\ntest/units/galaxy/test_api.py:909: AssertionError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": null,
    "2.1.6": null,
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}