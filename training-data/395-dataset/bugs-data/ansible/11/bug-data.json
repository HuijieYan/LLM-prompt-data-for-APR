{
    "ansible:11": {
        "/Volumes/SSD2T/bgp_envs/repos/ansible_11/lib/ansible/modules/network/ios/ios_banner.py": {
            "buggy_functions": [
                {
                    "function_name": "map_obj_to_commands",
                    "function_code": "def map_obj_to_commands(updates, module):\n    commands = list()\n    want, have = updates\n    state = module.params['state']\n\n    if state == 'absent' and 'text' in have.keys() and have['text']:\n        commands.append('no banner %s' % module.params['banner'])\n\n    elif state == 'present':\n        if want['text'] and (want['text'] != have.get('text')):\n            banner_cmd = 'banner %s' % module.params['banner']\n            banner_cmd += ' @\\n'\n            banner_cmd += want['text'].strip()\n            banner_cmd += '\\n@'\n            commands.append(banner_cmd)\n\n    return commands\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 98,
                    "end_line": 114,
                    "variables": {
                        "commands": [
                            104,
                            114,
                            99,
                            112
                        ],
                        "list": [
                            99
                        ],
                        "want": [
                            107,
                            100,
                            110
                        ],
                        "have": [
                            107,
                            100,
                            103
                        ],
                        "updates": [
                            100
                        ],
                        "state": [
                            106,
                            101,
                            103
                        ],
                        "module.params": [
                            104,
                            108,
                            101
                        ],
                        "module": [
                            104,
                            108,
                            101
                        ],
                        "have.keys": [
                            103
                        ],
                        "commands.append": [
                            104,
                            112
                        ],
                        "have.get": [
                            107
                        ],
                        "banner_cmd": [
                            108,
                            109,
                            110,
                            111,
                            112
                        ],
                        "strip": [
                            110
                        ]
                    },
                    "filtered_variables": {
                        "commands": [
                            104,
                            114,
                            99,
                            112
                        ],
                        "want": [
                            107,
                            100,
                            110
                        ],
                        "have": [
                            107,
                            100,
                            103
                        ],
                        "updates": [
                            100
                        ],
                        "state": [
                            106,
                            101,
                            103
                        ],
                        "module.params": [
                            104,
                            108,
                            101
                        ],
                        "module": [
                            104,
                            108,
                            101
                        ],
                        "have.keys": [
                            103
                        ],
                        "commands.append": [
                            104,
                            112
                        ],
                        "have.get": [
                            107
                        ],
                        "banner_cmd": [
                            108,
                            109,
                            110,
                            111,
                            112
                        ],
                        "strip": [
                            110
                        ]
                    },
                    "diff_line_number": 110,
                    "class_data": null,
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "commands": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "want": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "have": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "updates": {
                                    "variable_value": "({'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present'}, {'banner': 'login', 'state': 'present', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "state": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x102fce390>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                },
                                "have.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "commands.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "have.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "banner_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "commands": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "want": {
                                    "variable_value": "{'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present'}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                },
                                "have": {
                                    "variable_value": "{'banner': 'login', 'state': 'present', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n'}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                },
                                "updates": {
                                    "variable_value": "({'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present'}, {'banner': 'login', 'state': 'present', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "state": {
                                    "variable_value": "'present'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x102fce390>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                },
                                "have.keys": {
                                    "variable_value": "<built-in method keys of dict object at 0x102fcf960>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "commands.append": {
                                    "variable_value": "<built-in method append of list object at 0x102fcfd70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "have.get": {
                                    "variable_value": "<built-in method get of dict object at 0x102fcf960>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "banner_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "commands": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "want": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "have": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "updates": {
                                    "variable_value": "({'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present'}, {'banner': 'exec', 'state': 'present', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "state": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x102fc7890>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                },
                                "have.keys": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "commands.append": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "have.get": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "banner_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "commands": {
                                    "variable_value": "[]",
                                    "variable_type": "list",
                                    "variable_shape": "0"
                                },
                                "want": {
                                    "variable_value": "{'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present'}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                },
                                "have": {
                                    "variable_value": "{'banner': 'exec', 'state': 'present', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n'}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                },
                                "updates": {
                                    "variable_value": "({'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present'}, {'banner': 'exec', 'state': 'present', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n'})",
                                    "variable_type": "tuple",
                                    "variable_shape": "2"
                                },
                                "state": {
                                    "variable_value": "'present'",
                                    "variable_type": "str",
                                    "variable_shape": "7"
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x102fc7890>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                },
                                "have.keys": {
                                    "variable_value": "<built-in method keys of dict object at 0x102fe3690>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "commands.append": {
                                    "variable_value": "<built-in method append of list object at 0x102fe3b90>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "have.get": {
                                    "variable_value": "<built-in method get of dict object at 0x102fe3690>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "banner_cmd": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "strip": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "map_config_to_obj",
                    "function_code": "def map_config_to_obj(module):\n    rc, out, err = exec_command(module, 'show banner %s' % module.params['banner'])\n    if rc == 0:\n        output = out\n    else:\n        rc, out, err = exec_command(module,\n                                    'show running-config | begin banner %s'\n                                    % module.params['banner'])\n        if out:\n            output = re.search(r'\\^C(.*?)\\^C', out, re.S).group(1).strip()\n        else:\n            output = None\n    obj = {'banner': module.params['banner'], 'state': 'absent'}\n    if output:\n        obj['text'] = output\n        obj['state'] = 'present'\n    return obj\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 117,
                    "end_line": 133,
                    "variables": {
                        "rc": [
                            122,
                            118,
                            119
                        ],
                        "out": [
                            118,
                            120,
                            122,
                            125,
                            126
                        ],
                        "err": [
                            122,
                            118
                        ],
                        "exec_command": [
                            122,
                            118
                        ],
                        "module": [
                            129,
                            122,
                            124,
                            118
                        ],
                        "module.params": [
                            129,
                            124,
                            118
                        ],
                        "output": [
                            128,
                            130,
                            131,
                            120,
                            126
                        ],
                        "strip": [
                            126
                        ],
                        "group": [
                            126
                        ],
                        "re.search": [
                            126
                        ],
                        "re": [
                            126
                        ],
                        "re.S": [
                            126
                        ],
                        "obj": [
                            129,
                            131,
                            132,
                            133
                        ]
                    },
                    "filtered_variables": {
                        "rc": [
                            122,
                            118,
                            119
                        ],
                        "out": [
                            118,
                            120,
                            122,
                            125,
                            126
                        ],
                        "err": [
                            122,
                            118
                        ],
                        "exec_command": [
                            122,
                            118
                        ],
                        "module": [
                            129,
                            122,
                            124,
                            118
                        ],
                        "module.params": [
                            129,
                            124,
                            118
                        ],
                        "output": [
                            128,
                            130,
                            131,
                            120,
                            126
                        ],
                        "strip": [
                            126
                        ],
                        "group": [
                            126
                        ],
                        "re.search": [
                            126
                        ],
                        "re": [
                            126
                        ],
                        "re.S": [
                            126
                        ],
                        "obj": [
                            129,
                            131,
                            132,
                            133
                        ]
                    },
                    "diff_line_number": 118,
                    "class_data": null,
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_config": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x10b3e7a90>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "regex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "M": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "out": {
                                    "variable_value": "'banner exec ^C\\nthis is a sample\\nmulitline banner\\nused for testing\\n^C\\nbanner login ^C\\nthis is a sample\\nmulitline banner\\nused for testing\\n^C\\n!\\ndummy\\nend\\nof\\nconfig\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "161"
                                },
                                "get_config": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x10b3e7a90>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "regex": {
                                    "variable_value": "'banner login ^C\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "16"
                                },
                                "search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "M": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output": {
                                    "variable_value": "'this is a sample\\nmulitline banner\\nused for testing\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "51"
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.split": {
                                    "variable_value": "<built-in method split of str object at 0x10cc0ec70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "{'banner': 'login', 'state': 'present', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n'}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                }
                            }
                        ],
                        [
                            {
                                "out": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "get_config": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x10ccf2fd0>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "regex": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "M": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                }
                            },
                            {
                                "out": {
                                    "variable_value": "'banner exec ^C\\nthis is a sample\\nmulitline banner\\nused for testing\\n^C\\nbanner login ^C\\nthis is a sample\\nmulitline banner\\nused for testing\\n^C\\n!\\ndummy\\nend\\nof\\nconfig\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "161"
                                },
                                "get_config": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x10ccf2fd0>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "regex": {
                                    "variable_value": "'banner exec ^C\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "15"
                                },
                                "search": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "M": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "output": {
                                    "variable_value": "'this is a sample\\nmulitline banner\\nused for testing\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "51"
                                },
                                "split": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "out.split": {
                                    "variable_value": "<built-in method split of str object at 0x10cc0ec70>",
                                    "variable_type": "builtin_function_or_method",
                                    "variable_shape": null
                                },
                                "obj": {
                                    "variable_value": "{'banner': 'exec', 'state': 'present', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n'}",
                                    "variable_type": "dict",
                                    "variable_shape": "3"
                                }
                            }
                        ]
                    ]
                },
                {
                    "function_name": "map_params_to_obj",
                    "function_code": "def map_params_to_obj(module):\n    text = module.params['text']\n    if text:\n        text = str(text).strip()\n\n    return {\n        'banner': module.params['banner'],\n        'text': text,\n        'state': module.params['state']\n    }\n",
                    "decorators": [],
                    "docstring": null,
                    "start_line": 136,
                    "end_line": 145,
                    "variables": {
                        "text": [
                            137,
                            138,
                            139,
                            143
                        ],
                        "module.params": [
                            144,
                            137,
                            142
                        ],
                        "module": [
                            144,
                            137,
                            142
                        ],
                        "strip": [
                            139
                        ],
                        "str": [
                            139
                        ]
                    },
                    "filtered_variables": {
                        "text": [
                            137,
                            138,
                            139,
                            143
                        ],
                        "module.params": [
                            144,
                            137,
                            142
                        ],
                        "module": [
                            144,
                            137,
                            142
                        ],
                        "strip": [
                            139
                        ]
                    },
                    "diff_line_number": 138,
                    "class_data": null,
                    "variable_values": [
                        [
                            {},
                            {}
                        ]
                    ],
                    "angelic_variable_values": [
                        [
                            {
                                "text": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x11092e690>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                }
                            },
                            {
                                "text": {
                                    "variable_value": "'this is a sample\\nmulitline banner\\nused for testing\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "51"
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'login', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x11092e690>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                }
                            }
                        ],
                        [
                            {
                                "text": {
                                    "variable_value": null,
                                    "variable_type": "None",
                                    "variable_shape": null
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x11094add0>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                }
                            },
                            {
                                "text": {
                                    "variable_value": "'this is a sample\\nmulitline banner\\nused for testing\\n'",
                                    "variable_type": "str",
                                    "variable_shape": "51"
                                },
                                "module.params": {
                                    "variable_value": "{'banner': 'exec', 'text': 'this is a sample\\nmulitline banner\\nused for testing\\n', 'state': 'present', 'provider': None}",
                                    "variable_type": "dict",
                                    "variable_shape": "4"
                                },
                                "module": {
                                    "variable_value": "<ansible.module_utils.basic.AnsibleModule object at 0x11094add0>",
                                    "variable_type": "AnsibleModule",
                                    "variable_shape": null
                                }
                            }
                        ]
                    ]
                }
            ],
            "snippets": [
                {
                    "snippet_code": "from ansible.module_utils.connection import exec_command\nfrom ansible.module_utils.network.ios.ios import load_config\nfrom ansible.module_utils.network.ios.ios import ios_argument_spec\nimport re",
                    "start_line": 92,
                    "end_line": 96
                }
            ],
            "inscope_functions": [
                "def map_obj_to_commands(updates, module):\n    commands = list()\n    want, have = updates\n    state = module.params['state']\n\n    if state == 'absent' and 'text' in have.keys() and have['text']:\n        commands.append('no banner %s' % module.params['banner'])\n\n    elif state == 'present':\n        if want['text'] and (want['text'] != have.get('text')):\n            banner_cmd = 'banner %s' % module.params['banner']\n            banner_cmd += ' @\\n'\n            banner_cmd += want['text'].strip()\n            banner_cmd += '\\n@'\n            commands.append(banner_cmd)\n\n    return commands",
                "def map_config_to_obj(module):\n    rc, out, err = exec_command(module, 'show banner %s' % module.params['banner'])\n    if rc == 0:\n        output = out\n    else:\n        rc, out, err = exec_command(module,\n                                    'show running-config | begin banner %s'\n                                    % module.params['banner'])\n        if out:\n            output = re.search(r'\\^C(.*?)\\^C', out, re.S).group(1).strip()\n        else:\n            output = None\n    obj = {'banner': module.params['banner'], 'state': 'absent'}\n    if output:\n        obj['text'] = output\n        obj['state'] = 'present'\n    return obj",
                "def map_params_to_obj(module):\n    text = module.params['text']\n    if text:\n        text = str(text).strip()\n\n    return {\n        'banner': module.params['banner'],\n        'text': text,\n        'state': module.params['state']\n    }",
                "def main():\n    \"\"\" main entry point for module execution\n    \"\"\"\n    argument_spec = dict(\n        banner=dict(required=True, choices=['login', 'motd', 'exec', 'incoming', 'slip-ppp']),\n        text=dict(),\n        state=dict(default='present', choices=['present', 'absent'])\n    )\n\n    argument_spec.update(ios_argument_spec)\n\n    required_if = [('state', 'present', ('text',))]\n\n    module = AnsibleModule(argument_spec=argument_spec,\n                           required_if=required_if,\n                           supports_check_mode=True)\n\n    warnings = list()\n\n    result = {'changed': False}\n    if warnings:\n        result['warnings'] = warnings\n    want = map_params_to_obj(module)\n    have = map_config_to_obj(module)\n\n    commands = map_obj_to_commands((want, have), module)\n    result['commands'] = commands\n\n    if commands:\n        if not module.check_mode:\n            load_config(module, commands)\n\n        result['changed'] = True\n\n    module.exit_json(**result)"
            ],
            "inscope_function_signatures": [
                "map_obj_to_commands(updates, module)",
                "map_config_to_obj(module)",
                "map_params_to_obj(module)",
                "main()"
            ],
            "variables_in_file": {
                "ANSIBLE_METADATA": [
                    19
                ],
                "DOCUMENTATION": [
                    24
                ],
                "EXAMPLES": [
                    57
                ],
                "RETURN": [
                    80
                ],
                "commands": [
                    99,
                    104,
                    173,
                    174,
                    112,
                    176,
                    114,
                    178
                ],
                "list": [
                    99,
                    165
                ],
                "want": [
                    100,
                    170,
                    107,
                    173,
                    110
                ],
                "have": [
                    100,
                    103,
                    107,
                    171,
                    173
                ],
                "updates": [
                    100
                ],
                "state": [
                    106,
                    101,
                    103
                ],
                "module.params": [
                    129,
                    101,
                    104,
                    137,
                    108,
                    142,
                    144,
                    118,
                    124
                ],
                "module": [
                    129,
                    161,
                    101,
                    104,
                    137,
                    170,
                    171,
                    108,
                    173,
                    142,
                    144,
                    177,
                    178,
                    118,
                    182,
                    122,
                    124
                ],
                "have.keys": [
                    103
                ],
                "commands.append": [
                    104,
                    112
                ],
                "have.get": [
                    107
                ],
                "banner_cmd": [
                    108,
                    109,
                    110,
                    111,
                    112
                ],
                "strip": [
                    126,
                    139,
                    110
                ],
                "rc": [
                    122,
                    118,
                    119
                ],
                "out": [
                    118,
                    120,
                    122,
                    125,
                    126
                ],
                "err": [
                    122,
                    118
                ],
                "exec_command": [
                    122,
                    118
                ],
                "output": [
                    128,
                    130,
                    131,
                    120,
                    126
                ],
                "group": [
                    126
                ],
                "re.search": [
                    126
                ],
                "re": [
                    126
                ],
                "re.S": [
                    126
                ],
                "obj": [
                    129,
                    131,
                    132,
                    133
                ],
                "text": [
                    137,
                    138,
                    139,
                    143
                ],
                "str": [
                    139
                ],
                "argument_spec": [
                    161,
                    157,
                    151
                ],
                "dict": [
                    152,
                    153,
                    154,
                    151
                ],
                "argument_spec.update": [
                    157
                ],
                "ios_argument_spec": [
                    157
                ],
                "required_if": [
                    162,
                    159
                ],
                "AnsibleModule": [
                    161
                ],
                "warnings": [
                    168,
                    169,
                    165
                ],
                "result": [
                    167,
                    169,
                    174,
                    180,
                    182
                ],
                "map_params_to_obj": [
                    170
                ],
                "map_config_to_obj": [
                    171
                ],
                "map_obj_to_commands": [
                    173
                ],
                "module.check_mode": [
                    177
                ],
                "load_config": [
                    178
                ],
                "module.exit_json": [
                    182
                ],
                "__name__": [
                    185
                ],
                "main": [
                    186
                ]
            },
            "filtered_variables_in_file": {
                "ANSIBLE_METADATA": [
                    19
                ],
                "DOCUMENTATION": [
                    24
                ],
                "EXAMPLES": [
                    57
                ],
                "RETURN": [
                    80
                ],
                "commands": [
                    99,
                    104,
                    173,
                    174,
                    112,
                    176,
                    114,
                    178
                ],
                "want": [
                    100,
                    170,
                    107,
                    173,
                    110
                ],
                "have": [
                    100,
                    103,
                    107,
                    171,
                    173
                ],
                "updates": [
                    100
                ],
                "state": [
                    106,
                    101,
                    103
                ],
                "module.params": [
                    129,
                    101,
                    104,
                    137,
                    108,
                    142,
                    144,
                    118,
                    124
                ],
                "module": [
                    129,
                    161,
                    101,
                    104,
                    137,
                    170,
                    171,
                    108,
                    173,
                    142,
                    144,
                    177,
                    178,
                    118,
                    182,
                    122,
                    124
                ],
                "have.keys": [
                    103
                ],
                "commands.append": [
                    104,
                    112
                ],
                "have.get": [
                    107
                ],
                "banner_cmd": [
                    108,
                    109,
                    110,
                    111,
                    112
                ],
                "strip": [
                    126,
                    139,
                    110
                ],
                "rc": [
                    122,
                    118,
                    119
                ],
                "out": [
                    118,
                    120,
                    122,
                    125,
                    126
                ],
                "err": [
                    122,
                    118
                ],
                "exec_command": [
                    122,
                    118
                ],
                "output": [
                    128,
                    130,
                    131,
                    120,
                    126
                ],
                "group": [
                    126
                ],
                "re.search": [
                    126
                ],
                "re": [
                    126
                ],
                "re.S": [
                    126
                ],
                "obj": [
                    129,
                    131,
                    132,
                    133
                ],
                "text": [
                    137,
                    138,
                    139,
                    143
                ],
                "argument_spec": [
                    161,
                    157,
                    151
                ],
                "argument_spec.update": [
                    157
                ],
                "ios_argument_spec": [
                    157
                ],
                "required_if": [
                    162,
                    159
                ],
                "AnsibleModule": [
                    161
                ],
                "warnings": [
                    168,
                    169,
                    165
                ],
                "result": [
                    167,
                    169,
                    174,
                    180,
                    182
                ],
                "map_params_to_obj": [
                    170
                ],
                "map_config_to_obj": [
                    171
                ],
                "map_obj_to_commands": [
                    173
                ],
                "module.check_mode": [
                    177
                ],
                "load_config": [
                    178
                ],
                "module.exit_json": [
                    182
                ],
                "main": [
                    186
                ]
            }
        },
        "test_data": [
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/ansible_11/test/units/modules/network/ios/test_ios_banner.py",
                "test_function": "test_ios_banner_nochange",
                "test_function_code": "    def test_ios_banner_nochange(self):\n        banner_text = load_fixture('ios_banner_show_banner.txt')\n        set_module_args(dict(banner='login', text=banner_text))\n        self.execute_module()",
                "test_error": "AttributeError: <module 'ansible.modules.network.ios.ios_banner' from '/Volumes/SSD2T/bgp_envs/repos/ansible_11/lib/ansible/modules/network/ios/ios_banner.py'> does not have the attribute 'get_config'",
                "full_test_error": "self = <units.modules.network.ios.test_ios_banner.TestIosBannerModule testMethod=test_ios_banner_nochange>\n\n    def setUp(self):\n        super(TestIosBannerModule, self).setUp()\n    \n        self.mock_get_config = patch('ansible.modules.network.ios.ios_banner.get_config')\n>       self.get_config = self.mock_get_config.start()\n\ntest/units/modules/network/ios/test_ios_banner.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1442: in start\n    result = self.__enter__()\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1307: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x11017e350>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n            raise AttributeError(\n>               \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'ansible.modules.network.ios.ios_banner' from '/Volumes/SSD2T/bgp_envs/repos/ansible_11/lib/ansible/modules/network/ios/ios_banner.py'> does not have the attribute 'get_config'\n\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1281: AttributeError",
                "traceback": "/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1442: in start\n    result = self.__enter__()\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1307: in __enter__\n    original, local = self.get_original()",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x11017e350>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n            raise AttributeError(\n>               \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'ansible.modules.network.ios.ios_banner' from '/Volumes/SSD2T/bgp_envs/repos/ansible_11/lib/ansible/modules/network/ios/ios_banner.py'> does not have the attribute 'get_config'\n\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1281: AttributeError",
                "test_function_decorators": []
            },
            {
                "test_path": "/Volumes/SSD2T/bgp_envs/repos/ansible_11/test/units/modules/network/ios/test_ios_banner.py",
                "test_function": "test_ios_banner_nochange",
                "test_function_code": "    def test_ios_banner_nochange(self):\n        banner_text = load_fixture('ios_banner_show_banner.txt')\n        set_module_args(dict(banner='login', text=banner_text))\n        self.execute_module()",
                "test_error": "AttributeError: <module 'ansible.modules.network.ios.ios_banner' from '/Volumes/SSD2T/bgp_envs/repos/ansible_11/lib/ansible/modules/network/ios/ios_banner.py'> does not have the attribute 'get_config'",
                "full_test_error": "self = <units.modules.network.ios.test_ios_banner.TestIosBannerIos12Module testMethod=test_ios_banner_nochange>\n\n    def setUp(self):\n        super(TestIosBannerModule, self).setUp()\n    \n        self.mock_get_config = patch('ansible.modules.network.ios.ios_banner.get_config')\n>       self.get_config = self.mock_get_config.start()\n\ntest/units/modules/network/ios/test_ios_banner.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1442: in start\n    result = self.__enter__()\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1307: in __enter__\n    original, local = self.get_original()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x10ff458d0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n            raise AttributeError(\n>               \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'ansible.modules.network.ios.ios_banner' from '/Volumes/SSD2T/bgp_envs/repos/ansible_11/lib/ansible/modules/network/ios/ios_banner.py'> does not have the attribute 'get_config'\n\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1281: AttributeError",
                "traceback": "/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1442: in start\n    result = self.__enter__()\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1307: in __enter__\n    original, local = self.get_original()",
                "test_error_location": "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <unittest.mock._patch object at 0x10ff458d0>\n\n    def get_original(self):\n        target = self.getter()\n        name = self.attribute\n    \n        original = DEFAULT\n        local = False\n    \n        try:\n            original = target.__dict__[name]\n        except (AttributeError, KeyError):\n            original = getattr(target, name, DEFAULT)\n        else:\n            local = True\n    \n        if name in _builtins and isinstance(target, ModuleType):\n            self.create = True\n    \n        if not self.create and original is DEFAULT:\n            raise AttributeError(\n>               \"%s does not have the attribute %r\" % (target, name)\n            )\nE           AttributeError: <module 'ansible.modules.network.ios.ios_banner' from '/Volumes/SSD2T/bgp_envs/repos/ansible_11/lib/ansible/modules/network/ios/ios_banner.py'> does not have the attribute 'get_config'\n\n/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py:1281: AttributeError",
                "test_function_decorators": []
            }
        ]
    }
}