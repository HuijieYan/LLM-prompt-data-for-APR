{
    "1.1.1": "def _load_collections(self, attr, ds):\n    # this will only be called if someone specified a value; call the shared value\n    _ensure_default_collection(collection_list=ds)\n\n    if not ds:  # don't return an empty collection list, just return None\n        return None\n\n    return ds\n",
    "1.1.2": null,
    "1.2.1": "class CollectionSearch()",
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/ansible_4/lib/ansible/playbook/collectionsearch.py",
    "1.3.2": [
        "_ensure_default_collection(collection_list=None)"
    ],
    "1.4.1": [
        "def test_collection_static_warning(capsys):\n    \"\"\"Test that collection name is not templated.\n\n    Also, make sure that users see the warning message for the referenced name.\n    \"\"\"\n\n    collection_name = 'foo.{{bar}}'\n    cs = CollectionSearch()\n    assert collection_name in cs._load_collections(None, [collection_name])\n\n    std_out, std_err = capsys.readouterr()\n    assert '[WARNING]: \"collections\" is not templatable, but we found: %s' % collection_name in std_err\n    assert '' == std_out"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/ansible_4/test/units/playbook/test_collectionsearch.py"
    ],
    "2.1.1": [
        [
            "E       assert ('[WARNING]: \"collections\" is not templatable, but we found: %s' % 'foo.{{bar}}') in ''"
        ]
    ],
    "2.1.2": [
        [
            "capsys = <_pytest.capture.CaptureFixture object at 0x102767b10>\n\n    def test_collection_static_warning(capsys):\n        \"\"\"Test that collection name is not templated.\n    \n        Also, make sure that users see the warning message for the referenced name.\n        \"\"\"\n    \n        collection_name = 'foo.{{bar}}'\n        cs = CollectionSearch()\n        assert collection_name in cs._load_collections(None, [collection_name])\n    \n        std_out, std_err = capsys.readouterr()\n>       assert '[WARNING]: \"collections\" is not templatable, but we found: %s' % collection_name in std_err",
            "\ntest/units/playbook/test_collectionsearch.py:37: AssertionError"
        ]
    ],
    "2.1.3": [
        [
            {
                "ds": "['foo.{{bar}}']"
            },
            {
                "ds": "['foo.{{bar}}', 'ansible.legacy']"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "ds": "list"
            },
            {
                "ds": "list"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "ds": "['foo.{{bar}}']"
            },
            {
                "ds": "['foo.{{bar}}', 'ansible.legacy']",
                "env": "<jinja2.environment.Environment object at 0x106c2a890>",
                "collection_name": "'ansible.legacy'"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "ds": "list"
            },
            {
                "ds": "list",
                "env": "Environment",
                "collection_name": "str"
            }
        ]
    ],
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}