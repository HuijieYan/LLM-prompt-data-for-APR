{
    "1.1.1": "def generate_commands(vlan_id, to_set, to_remove):\n    commands = []\n    if \"vlan_id\" in to_remove:\n        return [\"no vlan {0}\".format(vlan_id)]\n\n    for key, value in to_set.items():\n        if key == \"vlan_id\" or value is None:\n            continue\n\n        commands.append(\"{0} {1}\".format(key, value))\n\n    for key in to_remove:\n        commands.append(\"no {0}\".format(key))\n\n    if commands:\n        commands.insert(0, \"vlan {0}\".format(vlan_id))\n\n    return commands\n",
    "1.1.2": null,
    "1.2.1": null,
    "1.2.2": null,
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/ansible_7/lib/ansible/module_utils/network/eos/config/vlans/vlans.py",
    "1.3.2": null,
    "1.4.1": [
        "    def test_eos_vlan_replaced(self):\n        self.execute_show_command.return_value = []\n        set_module_args(dict(\n            config=[dict(\n                vlan_id=10,\n                name=\"tenreplaced\",\n                state=\"suspend\"\n            )], state=\"replaced\"\n        ))\n        commands = ['vlan 10', 'name tenreplaced', 'state suspend']\n        self.execute_module(changed=True, commands=commands)"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/ansible_7/test/units/modules/network/eos/test_eos_vlans.py"
    ],
    "2.1.1": [
        [
            "E   AssertionError: Lists differ: ['name tenreplaced', 'state suspend', 'vlan 10'] != ['name tenreplaced', 'no name', 'state suspend', 'vlan 10']\nE   \nE   First differing element 1:\nE   'state suspend'\nE   'no name'\nE   \nE   Second list contains 1 additional elements.\nE   First extra element 3:\nE   'vlan 10'\nE   \nE   - ['name tenreplaced', 'state suspend', 'vlan 10']\nE   + ['name tenreplaced', 'no name', 'state suspend', 'vlan 10']\nE   ?                      +++++++++++\nE    : ['vlan 10', 'name tenreplaced', 'state suspend', 'no name']"
        ]
    ],
    "2.1.2": [
        [
            "self = <units.modules.network.eos.test_eos_vlans.TestEosVlansModule testMethod=test_eos_vlan_replaced>\n\n    def test_eos_vlan_replaced(self):\n        self.execute_show_command.return_value = []\n        set_module_args(dict(\n            config=[dict(\n                vlan_id=10,\n                name=\"tenreplaced\",\n                state=\"suspend\"\n            )], state=\"replaced\"\n        ))\n        commands = ['vlan 10', 'name tenreplaced', 'state suspend']\n>       self.execute_module(changed=True, commands=commands)\n\ntest/units/modules/network/eos/test_eos_vlans.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/units/modules/network/eos/eos_module.py:79: in execute_module\n    self.assertEqual(sorted(commands), sorted(result['commands']), result['commands'])"
        ]
    ],
    "2.1.3": [
        [
            {
                "to_remove": "{'name': 'ten'}",
                "vlan_id": "10",
                "to_set": "{'name': 'tenreplaced', 'state': 'suspend'}"
            },
            {
                "commands": "['vlan 10', 'name tenreplaced', 'state suspend', 'no name']",
                "key": "'name'",
                "value": "'suspend'"
            }
        ]
    ],
    "2.1.4": [
        [
            {
                "to_remove": "dict",
                "vlan_id": "int",
                "to_set": "dict"
            },
            {
                "commands": "list",
                "key": "str",
                "value": "str"
            }
        ]
    ],
    "2.1.5": [
        [
            {
                "to_remove": "{'name': 'ten'}",
                "vlan_id": "10",
                "to_set": "{'name': 'tenreplaced', 'state': 'suspend'}"
            },
            {
                "commands": "['vlan 10', 'name tenreplaced', 'state suspend']",
                "key": "'state'",
                "value": "'suspend'"
            }
        ]
    ],
    "2.1.6": [
        [
            {
                "to_remove": "dict",
                "vlan_id": "int",
                "to_set": "dict"
            },
            {
                "commands": "list",
                "key": "str",
                "value": "str"
            }
        ]
    ],
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}