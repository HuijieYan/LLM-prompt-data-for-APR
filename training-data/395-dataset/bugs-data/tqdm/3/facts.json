{
    "1.1.1": "def __len__(self):\n    return self.total if self.iterable is None else \\\n        (self.iterable.shape[0] if hasattr(self.iterable, \"shape\")\n         else len(self.iterable) if hasattr(self.iterable, \"__len__\")\n         else getattr(self, \"total\", None))\n",
    "1.1.2": null,
    "1.2.1": "class tqdm(Comparable)",
    "1.2.2": "Decorate an iterable object, returning an iterator which acts exactly\nlike the original iterable, but prints a dynamically updating\nprogressbar every time a value is requested.",
    "1.2.3": null,
    "1.3.1": "/Volumes/SSD2T/bgp_envs_non_pandas/repos/tqdm_3/tqdm/_tqdm.py",
    "1.3.2": null,
    "1.4.1": [
        "@with_setup(pretest, posttest)\ndef test_bool():\n    \"\"\"Test boolean cast\"\"\"\n\n    def internal(our_file, disable):\n        with trange(10, file=our_file, disable=disable) as t:\n            assert t\n        with trange(0, file=our_file, disable=disable) as t:\n            assert not t\n\n        def get_bool_for_tqdm(*args, **kwargs):\n            kwargs['file'] = our_file\n            kwargs['disable'] = disable\n            with tqdm(*args, **kwargs) as t:\n                return bool(t)\n\n        assert get_bool_for_tqdm(total=10)\n        assert not get_bool_for_tqdm(total=0)\n        assert not get_bool_for_tqdm([])\n        assert get_bool_for_tqdm([0])\n        assert get_bool_for_tqdm((x for x in []))\n        assert get_bool_for_tqdm((x for x in [1,2,3]))\n        try:\n            get_bool_for_tqdm()\n        except TypeError:\n            pass\n        else:\n            raise TypeError(\n                \"Expected tqdm() with neither total nor iterable to fail\")\n\n    # test with and without disable\n    with closing(StringIO()) as our_file:\n        internal(our_file, False)\n        internal(our_file, True)"
    ],
    "1.4.2": [
        "/Volumes/SSD2T/bgp_envs_non_pandas/repos/tqdm_3/tqdm/tests/tests_tqdm.py"
    ],
    "2.1.1": [
        [
            "E           TypeError: 'NoneType' object cannot be interpreted as an integer"
        ]
    ],
    "2.1.2": [
        [
            "@with_setup(pretest, posttest)\n    def test_bool():\n        \"\"\"Test boolean cast\"\"\"\n    \n        def internal(our_file, disable):\n            with trange(10, file=our_file, disable=disable) as t:\n                assert t\n            with trange(0, file=our_file, disable=disable) as t:\n                assert not t\n    \n            def get_bool_for_tqdm(*args, **kwargs):\n                kwargs['file'] = our_file\n                kwargs['disable'] = disable\n                with tqdm(*args, **kwargs) as t:\n                    return bool(t)\n    \n            assert get_bool_for_tqdm(total=10)\n            assert not get_bool_for_tqdm(total=0)\n            assert not get_bool_for_tqdm([])\n            assert get_bool_for_tqdm([0])\n            assert get_bool_for_tqdm((x for x in []))\n            assert get_bool_for_tqdm((x for x in [1,2,3]))\n            try:\n                get_bool_for_tqdm()\n            except TypeError:\n                pass\n            else:\n                raise TypeError(\n                    \"Expected tqdm() with neither total nor iterable to fail\")\n    \n        # test with and without disable\n        with closing(StringIO()) as our_file:\n>           internal(our_file, False)\n\ntqdm/tests/tests_tqdm.py:1742: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntqdm/tests/tests_tqdm.py:1730: in internal\n    assert get_bool_for_tqdm((x for x in []))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (<generator object test_bool.<locals>.internal.<locals>.<genexpr> at 0x1071908d0>,)\nkwargs = {'disable': False, 'file': <_io.StringIO object at 0x107146af0>}\nt = 0it [00:00, ?it/s]\n\n    def get_bool_for_tqdm(*args, **kwargs):\n        kwargs['file'] = our_file\n        kwargs['disable'] = disable\n        with tqdm(*args, **kwargs) as t:\n>           return bool(t)",
            "\ntqdm/tests/tests_tqdm.py:1724: TypeError"
        ]
    ],
    "2.1.3": null,
    "2.1.4": null,
    "2.1.5": null,
    "2.1.6": null,
    "3.1.1": [
        "\n"
    ],
    "3.1.2": [
        "\n"
    ]
}